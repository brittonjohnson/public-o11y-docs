# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023 Splunk, Inc
# This file is distributed under the same license as the Splunk package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: Splunk\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-01 01:26+0000\n"
"PO-Revision-Date: 2023-08-01 17:35+0100\n"
"Last-Translator: \n"
"Language-Team: ja_JA <LL@li.org>\n"
"Language: ja_JA\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"X-Generator: Poedit 3.3.2\n"

#: ../../gdi/caches-memory.rst:-1
msgid "Landing for application receivers for cache and memory applications in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud のキャッシュとメモリアプリケーションのアプリケーションレシーバーの着陸。"

#: ../../<rst_prolog>:18
msgid "Take shift"
msgstr "テイク・シフト"

#: ../../gdi/caches-memory.rst:5
msgid "Configure application receivers for caches and memory"
msgstr "キャッシュとメモリのアプリケーション・レシーバーを設定する"

#: ../../gdi/caches-memory.rst:18
msgid "These application receivers gather metrics from their associated cache- and memory-related applications and the hosts the applications are running on."
msgstr "これらのアプリケーション・レシーバは、関連するキャッシュおよびメモリ関連のアプリケーションと、そのアプリケーションが実行されているホストからメトリクスを収集します。"

#: ../../gdi/caches-memory.rst:20
msgid ":ref:`memcached`"
msgstr ":ref:`memcached`"

#: ../../gdi/caches-memory.rst:21
msgid ":ref:`memory`"
msgstr ":ref:`memory`"

#: ../../gdi/caches-memory.rst:22
msgid ":ref:`opcache`"
msgstr ":ref:`opcache`"

#: ../../gdi/cloud.rst:-1
msgid "Landing for application receivers for cloud platforms in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud のクラウドプラットフォーム用アプリケーションレシーバーのランディング。"

#: ../../gdi/cloud.rst:5
msgid "Configure application receivers for cloud platforms"
msgstr "クラウドプラットフォーム用のアプリケーションレシーバーの設定"

#: ../../gdi/cloud.rst:17
msgid "These application receivers gather metrics from their associated cloud platform-related applications and the hosts the applications are running on."
msgstr "これらのアプリケーション・レシーバーは、関連するクラウド・プラットフォーム関連のアプリケーションと、アプリケーションが実行されているホストからメトリクスを収集します。"

#: ../../gdi/cloud.rst:19
msgid ":ref:`heroku`"
msgstr ":ref:`heroku`"

#: ../../gdi/cloud.rst:20
msgid ":ref:`kong`"
msgstr ":ref:`kong`"

#: ../../gdi/cloud.rst:21
msgid ":ref:`openstack`"
msgstr ":ref:`openstack`"

#: ../../gdi/databases.rst:-1
msgid "Landing for application receivers for database applications in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud のデータベースアプリケーション用アプリケーションレシーバーのランディング。"

#: ../../gdi/databases.rst:5
msgid "Configure application receivers for databases"
msgstr "データベースのアプリケーション・レシーバーを設定する"

#: ../../gdi/databases.rst:36
msgid "These application receivers gather metrics from their associated database-related applications and the hosts the applications are running on."
msgstr "これらのアプリケーション・レシーバーは、関連するデータベース関連アプリケーションと、そのアプリケーションが実行されているホストからメトリクスを収集します。"

#: ../../gdi/databases.rst:38
msgid ":ref:`apache-couchdb`"
msgstr ":ref:`apache-couchdb`"

#: ../../gdi/databases.rst:39
msgid ":ref:`spark`"
msgstr ":ref:`spark`"

#: ../../gdi/databases.rst:40
msgid ":ref:`cassandra`"
msgstr ":ref:`cassandra`"

#: ../../gdi/databases.rst:41
msgid ":ref:`consul`"
msgstr ":ref:`consul`"

#: ../../gdi/databases.rst:42
msgid ":ref:`databricks_receiver`"
msgstr ":ref:`databricks_receiver`"

#: ../../gdi/databases.rst:43
msgid ":ref:`etcd`"
msgstr ":ref:`etcd`"

#: ../../gdi/databases.rst:44
msgid ":ref:`exec-input`"
msgstr ":ref:`exec-input`"

#: ../../gdi/databases.rst:45
msgid ":ref:`hadoop`"
msgstr ":ref:`hadoop`"

#: ../../gdi/databases.rst:46
msgid ":ref:`hadoopjmx`"
msgstr ":ref:`hadoopjmx`"

#: ../../gdi/databases.rst:47
msgid ":ref:`telegraf-logparser`"
msgstr ":ref:`telegraf-logparser`"

#: ../../gdi/databases.rst:48
msgid ":ref:`logstash`"
msgstr ":ref:`logstash`"

#: ../../gdi/databases.rst:49
msgid ":ref:`microsoft-sql-server`"
msgstr ":ref:`microsoft-sql-server`"

#: ../../gdi/databases.rst:50
msgid ":ref:`mongodb`"
msgstr ":ref:`mongodb`"

#: ../../gdi/databases.rst:51
msgid ":ref:`mongodb-atlas`"
msgstr ":ref:`mongodb-atlas`"

#: ../../gdi/databases.rst:52
msgid ":ref:`mongodb-atlas-receiver`"
msgstr ":ref:`mongodb-atlas-receiver`"

#: ../../gdi/databases.rst:53
msgid ":ref:`mysql`"
msgstr ":ref:`mysql`"

#: ../../gdi/databases.rst:54
msgid ":ref:`oracledb`"
msgstr ":ref:`oracledb`"

#: ../../gdi/databases.rst:55
msgid ":ref:`postgresql`"
msgstr ":ref:`postgresql`"

#: ../../gdi/databases.rst:56
msgid ":ref:`redis`"
msgstr ":ref:`redis`"

#: ../../gdi/databases.rst:57
msgid ":ref:`hana`"
msgstr ":ref:`hana`"

#: ../../gdi/databases.rst:58
msgid ":ref:`sql`"
msgstr ":ref:`sql`"

#: ../../gdi/get-data-in/application/application.rst:10
msgid "Instrument a Java application TOGGLE"
msgstr "Javaアプリケーションのインストゥルメント TOGGLE"

#: ../../gdi/get-data-in/application/application.rst:10
msgid "Instrument a Node.js application TOGGLE"
msgstr "Node.jsアプリケーションのインストゥルメント TOGGLE"

#: ../../gdi/get-data-in/application/application.rst:10
msgid "Instrument a .NET application (SignalFx) TOGGLE"
msgstr ".NETアプリケーション（SignalFx）の計測 TOGGLE"

#: ../../gdi/get-data-in/application/application.rst:10
msgid "Instrument a Go application TOGGLE"
msgstr "囲碁アプリケーションTOGGLEのインストゥルメント"

#: ../../gdi/get-data-in/application/application.rst:10
msgid "Instrument a Python application TOGGLE"
msgstr "Pythonアプリケーションのインストゥルメント TOGGLE"

#: ../../gdi/get-data-in/application/application.rst:10
msgid "Instrument a Ruby application TOGGLE"
msgstr "Rubyアプリケーションのインストゥルメント TOGGLE"

#: ../../gdi/get-data-in/application/application.rst:10
msgid "Instrument a PHP application TOGGLE"
msgstr "PHPアプリケーションにTOGGLEを組み込む"

#: ../../gdi/get-data-in/application/application.rst:10
msgid "Instrument a .NET application (OpenTelemetry Beta) TOGGLE"
msgstr ".NETアプリケーションの計測（OpenTelemetryベータ版） TOGGLE"

#: ../../gdi/get-data-in/application/application.rst:10 ../../gdi/get-data-in/application/other-languages.rst:5
msgid "Instrument applications written in other programming languages"
msgstr "他のプログラミング言語で書かれたインストゥルメント・アプリケーション"

#: ../../gdi/get-data-in/application/application.rst:10
msgid "Send spans from the Istio service mesh"
msgstr "Istioサービスメッシュからスパンを送信する"

#: ../../gdi/get-data-in/application/application.rst:-1
msgid "Start sending back-end application metrics and spans to Splunk Observability Cloud."
msgstr "バックエンドのアプリケーションメトリクスとスパンの Splunk Observability Cloud への送信を開始します。"

#: ../../gdi/get-data-in/application/application.rst:5
msgid "Instrument back-end applications to send spans to Splunk APM"
msgstr "バックエンドアプリケーションをインストゥルメントして、スパンを Splunk APM に送信する"

#: ../../gdi/get-data-in/application/application.rst:24
msgid "Instrument your back-end services and applications to send metrics and traces to Splunk Observability Cloud."
msgstr "バックエンドのサービスやアプリケーションを計測し、Splunk Observability Cloud にメトリクスとトレースを送信します。"

#: ../../gdi/get-data-in/application/application.rst:26
msgid "You can instrument applications in each of these languages using official Splunk instrumentation:"
msgstr "これらの言語のアプリケーションは、Splunk の公式インスツルメンテーションを使用してインスツルメンテーションできます："

#: ../../gdi/get-data-in/application/application.rst:28 ../../gdi/get-data-in/integrations.rst:1087
msgid ":ref:`Java <get-started-java>`"
msgstr ":ref:`Java <get-started-java>`"

#: ../../gdi/get-data-in/application/application.rst:29 ../../gdi/get-data-in/integrations.rst:1097
msgid ":ref:`Node.js <get-started-nodejs>`"
msgstr ":ref:`Node.js <get-started-nodejs>`"

#: ../../gdi/get-data-in/application/application.rst:30
msgid ":ref:`.NET (SignalFx) <get-started-dotnet>`"
msgstr ":ref:`.NET (SignalFx) <get-started-dotnet>`"

#: ../../gdi/get-data-in/application/application.rst:31 ../../gdi/get-data-in/integrations.rst:1082
msgid ":ref:`Go <get-started-go>`"
msgstr ":ref:`Go <get-started-go>`"

#: ../../gdi/get-data-in/application/application.rst:32 ../../gdi/get-data-in/integrations.rst:1107
msgid ":ref:`Python <get-started-python>`"
msgstr ":ref:`Python <get-started-python>`"

#: ../../gdi/get-data-in/application/application.rst:33 ../../gdi/get-data-in/integrations.rst:1112
msgid ":ref:`Ruby <get-started-ruby>`"
msgstr ":ref:`Ruby <get-started-ruby>`"

#: ../../gdi/get-data-in/application/application.rst:34 ../../gdi/get-data-in/integrations.rst:1102
msgid ":ref:`PHP <get-started-php>`"
msgstr ":ref:`PHP <get-started-php>`"

#: ../../gdi/get-data-in/application/application.rst:36
msgid "The following instrumentations are in beta:"
msgstr "現在ベータ版として、以下のインストルメンテーションが公開されている："

#: ../../gdi/get-data-in/application/application.rst:38
msgid ":ref:`.NET (OpenTelemetry Beta) <get-started-dotnet-otel>`"
msgstr ":ref:`.NET (OpenTelemetry Beta) <get-started-dotnet-otel>`"

#: ../../gdi/get-data-in/application/application.rst:40
msgid "To send spans from the Istio service mesh, see :ref:`get-started-istio`."
msgstr "Istioサービス・メッシュからスパンを送信するには、:ref:`get-started-istio` を参照。"

#: ../../gdi/get-data-in/application/application.rst:42
msgid "You can also send traces from applications written in languages for which Splunk instrumentation isn't available:"
msgstr "Splunk のインスツルメンテーションが利用できない言語で書かれたアプリケーションからトレースを送信することもできます："

#: ../../gdi/get-data-in/application/application.rst:44
msgid ":ref:`Erlang <apm-instrumentation-other-langs>`"
msgstr ":ref:`Erlang <apm-instrumentation-other-langs>`"

#: ../../gdi/get-data-in/application/application.rst:45
msgid ":ref:`Rust <apm-instrumentation-other-langs>`"
msgstr ":ref:`Rust <apm-instrumentation-other-langs>`"

#: ../../gdi/get-data-in/application/application.rst:47
msgid "To learn more about the data collected by Splunk Observability Cloud, see:"
msgstr "Splunk Observability Cloud が収集したデータの詳細については、こちらをご覧ください："

#: ../../gdi/get-data-in/application/application.rst:49
msgid ":ref:`data-model`."
msgstr ":ref:`data-model`."

#: ../../gdi/get-data-in/application/application.rst:50
msgid ":ref:`get-started-metrics`."
msgstr ":ref:`get-started-metrics`."

#: ../../gdi/get-data-in/application/application.rst:51
msgid ":ref:`span-attributes`."
msgstr ":ref:`span-attributes`."

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:-1
msgid "Configure the SignalFx Instrumentation for .NET to suit your instrumentation needs, such as correlating traces with logs and activating custom sampling."
msgstr "SignalFx Instrumentation for .NETは、トレースとログの関連付けやカスタム・サンプリングの有効化など、インスツルメンテーションのニーズに合わせて設定します。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:5
msgid "Configure the SignalFx Instrumentation for .NET"
msgstr "SignalFx Instrumentation for .NETの設定"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:10
msgid "You can configure the SignalFx Instrumentation for .NET to suit your instrumentation needs. In most cases, modifying the basic configuration is enough to get started. More advanced settings are also available."
msgstr "SignalFx Instrumentation for .NETは、インスツルメンテーションのニーズに合わせて設定できます。たいていの場合、基本的なコンフィギュレーションを変更するだけで始められる。より高度な設定も可能。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:15 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:17 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:17 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:17 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:17
msgid "Configuration methods"
msgstr "設定方法"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:17
msgid "You can change the settings of the SignalFx Instrumentation for .NET in the following ways:"
msgstr "SignalFx Instrumentation for .NETの設定は、以下の方法で変更できます："

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:19
msgid "Set environment variables. On Windows, set them in the process scope unless you want to activate autoinstrumentation globally for all .NET applications."
msgstr "環境変数を設定する。Windowsでは、すべての.NETアプリケーションで自動計測をグローバルに有効にする場合を除き、プロセススコープに設定します。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:21
msgid "Edit the web.config or app.config file. For example:"
msgstr "web.configまたはapp.configファイルを編集する。例えば、こうだ："

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:31
msgid "Generate a JSON configuration file and set the ``SIGNALFX_TRACE_CONFIG_FILE`` environment variable to the path of the file. You can define settings as key-value pairs:"
msgstr "JSONコンフィギュレーション・ファイルを生成し、``SIGNALFX_TRACE_CONFIG_FILE`` 環境変数にファイルのパスを設定する。キーと値のペアとして設定を定義することができます："

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:39
msgid "Settings defined using environment variables override settings in XML and JSON configuration files."
msgstr "環境変数を使用して定義された設定は、XMLおよびJSON設定ファイルの設定を上書きします。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:44 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:44 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:47 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:61 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:45 ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:16 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:17
#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:17 ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:35 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:35 ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:54 ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:32 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:17
msgid "General settings"
msgstr "一般設定"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:46 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:47
msgid "The following settings are common to most instrumentation scenarios:"
msgstr "以下の設定は、ほとんどの計測シナリオで共通です："

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:53 ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:86 ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:113 ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:155 ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:174 ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:197 ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:250
#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:279 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:54 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:89 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:110 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:183 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:213 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:258
#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:98
msgid "Setting"
msgstr "セッティング"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:54 ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:87 ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:114 ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:131 ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:156 ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:175 ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:198
#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:251 ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:280 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:35 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:78 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:109 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:160 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:52
#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:73 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:102 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:137 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:158 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:28 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:95 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:88
#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:57 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:80 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:111 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:132 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:172 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:201 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:240
#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:282 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:41 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:122 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:144 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:178 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:200 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:259
#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:298 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:367 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:416 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:70 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:96 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:134 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:185
#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:215 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:255 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:48 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:182 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:55 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:90 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:111
#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:128 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:149 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:165 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:184 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:214 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:259
#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:35 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:99 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:130 ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:24 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:25 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:42 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:73
#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:94 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:25 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:46 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:75 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:94 ../../gdi/get-data-in/connect/aws/aws-logs.rst:138 ../../gdi/get-data-in/connect/aws/aws-logs.rst:166 ../../gdi/get-data-in/connect/aws/aws-logs.rst:197 ../../gdi/get-data-in/connect/aws/aws-logs.rst:214
#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:241 ../../gdi/get-data-in/connect/aws/aws-logs.rst:262 ../../gdi/get-data-in/connect/aws/aws-logs.rst:278 ../../gdi/get-data-in/connect/aws/aws-logs.rst:302 ../../gdi/get-data-in/connect/aws/aws-logs.rst:326 ../../gdi/get-data-in/connect/aws/aws-logs.rst:342 ../../gdi/get-data-in/connect/aws/aws-logs.rst:366 ../../gdi/get-data-in/connect/aws/aws-logs.rst:390 ../../gdi/get-data-in/connect/aws/aws-logs.rst:410 ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:44 ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:80
#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:31 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:69 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:158 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:195 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:233 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:258 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:285 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:342 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:374 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:404
#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:430 ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:33 ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:118 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:35 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:83 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:107 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:152 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:189 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:227
#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:254 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:275 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:293 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:364 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:392 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:484 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:45 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:127 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:222
#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:253 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:193 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:30 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:137 ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:63 ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:109 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:75 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:123 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:147 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:176
#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:213 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:254 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:280 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:322 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:345 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:378 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:400 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:420 ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:41 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:31 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:79
#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:103 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:126 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:166 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:192 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:243 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:25 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:42 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:67 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:88
#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:103 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:142 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:111 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:22 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:50 ../../gdi/monitors-cache/memcached.md:27 ../../gdi/monitors-cache/opcache.md:68 ../../gdi/monitors-cloud/heroku.md ../../gdi/monitors-cloud/openstack.md:29 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
#: ../../gdi/monitors-conviva/conviva.md:26 ../../gdi/monitors-databases/apache-spark.md:30 ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-databases/hadoop.md:30 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/logparser.md:23 ../../gdi/monitors-databases/logstash.md:17 ../../gdi/monitors-databases/microsoft-sql-server.md:40 ../../gdi/monitors-databases/mongodb-atlas.md:7 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/mysql.md:49 ../../gdi/monitors-databases/postgresql.md:7
#: ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-databases/sap-hana.md:23 ../../gdi/monitors-databases/sql.md:23 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/apache-httpserver.md:38 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/chrony.md:22 ../../gdi/monitors-hosts/collectd-df.md:23 ../../gdi/monitors-hosts/collectd-plugin.md:23 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/couchbase.md:23 ../../gdi/monitors-hosts/cpu.md:7 ../../gdi/monitors-hosts/docker.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/filesystems.md:7
#: ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-hosts/host-processes.md:7 ../../gdi/monitors-hosts/host-processload.md:7 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/interface.md:7 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-hosts/microsoft-windows-iis.md:25 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-hosts/ntpq.md:23 ../../gdi/monitors-hosts/php-fpm.md:42 ../../gdi/monitors-hosts/procstat.md:23 ../../gdi/monitors-hosts/solr.md:23 ../../gdi/monitors-hosts/supervisor.md:23
#: ../../gdi/monitors-hosts/systemd.md:34 ../../gdi/monitors-hosts/varnish.md:33 ../../gdi/monitors-hosts/vsphere.md:29 ../../gdi/monitors-hosts/win-services.md:21 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/java-monitor.md:27 ../../gdi/monitors-languages/jmx.md:35 ../../gdi/monitors-languages/microsoft-dotnet.md:41 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-messaging/rabbitmq.md:25 ../../gdi/monitors-monitoring/cadvisor.md:27 ../../gdi/monitors-monitoring/cgroups.md:35 ../../gdi/monitors-monitoring/jaeger-grpc.md:25
#: ../../gdi/monitors-monitoring/nagios.md:64 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-monitoring/signalfx-forwarder.md:23 ../../gdi/monitors-monitoring/win_perf_counters.md:27 ../../gdi/monitors-network/aws-appmesh.md:26 ../../gdi/monitors-network/dns.md:21 ../../gdi/monitors-network/logstash-tcp.md:25 ../../gdi/monitors-network/net-io.md:21
#: ../../gdi/monitors-network/ntp.md:23 ../../gdi/monitors-network/snmp.md:27 ../../gdi/monitors-network/statsd.md:35 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-events.md:63 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23 ../../gdi/monitors-orchestration/mesos-marathon.md:22
#: ../../gdi/monitors-orchestration/openshift-cluster.md:49 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:196 ../../gdi/opentelemetry/components.rst:69 ../../gdi/opentelemetry/components.rst:195 ../../gdi/opentelemetry/components.rst:256 ../../gdi/opentelemetry/components.rst:300 ../../gdi/opentelemetry/components/attributes-processor.rst:20 ../../gdi/opentelemetry/components/databricks-receiver.rst:86 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:85 ../../gdi/opentelemetry/components/resource-processor.rst:22 ../../gdi/opentelemetry/configure-the-collector.rst:89 ../../gdi/opentelemetry/data-processing.rst:46
#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:68 ../../gdi/opentelemetry/deployments/deployments-chef.rst:142 ../../gdi/opentelemetry/deployments/deployments-chef.rst:187 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:58 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:116 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:51 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:125 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:55 ../../gdi/opentelemetry/deployments/deployments-salt.rst:60 ../../gdi/opentelemetry/deployments/deployments-salt.rst:134
#: ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:50 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:39 ../../gdi/opentelemetry/exposed-endpoints.rst:24 ../../gdi/opentelemetry/install-the-collector.rst:77 ../../gdi/opentelemetry/install-the-collector.rst:103 ../../gdi/opentelemetry/otel-commands.rst:59 ../../gdi/opentelemetry/otel-commands.rst:75 ../../gdi/opentelemetry/otel-commands.rst:104 ../../gdi/opentelemetry/otel-commands.rst:124 ../../gdi/opentelemetry/otel-commands.rst:140 ../../gdi/opentelemetry/otel-commands.rst:160 ../../gdi/opentelemetry/otel-commands.rst:175 ../../gdi/opentelemetry/otel-commands.rst:224
#: ../../gdi/opentelemetry/otel-commands.rst:248 ../../gdi/opentelemetry/otel-commands.rst:261 ../../gdi/opentelemetry/otel-commands.rst:280 ../../gdi/opentelemetry/otel-commands.rst:289 ../../gdi/opentelemetry/otel-commands.rst:308 ../../gdi/opentelemetry/otel-commands.rst:319 ../../gdi/opentelemetry/otel-commands.rst:340 ../../gdi/opentelemetry/otel-commands.rst:353 ../../gdi/opentelemetry/otel-commands.rst:385 ../../gdi/opentelemetry/otel-commands.rst:396 ../../gdi/opentelemetry/otel-commands.rst:417 ../../gdi/opentelemetry/otel-commands.rst:433 ../../gdi/opentelemetry/otel-commands.rst:488 ../../gdi/opentelemetry/otel-commands.rst:511
#: ../../gdi/opentelemetry/otel-commands.rst:527 ../../gdi/opentelemetry/otel-commands.rst:543 ../../gdi/opentelemetry/otel-commands.rst:561 ../../gdi/opentelemetry/resources.rst:24 ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:195 ../../gdi/opentelemetry/windows-config.rst:27 ../../gdi/smart-agent/smart-agent-commands.rst:73 ../../gdi/smart-agent/smart-agent-commands.rst:89 ../../gdi/smart-agent/smart-agent-commands.rst:113 ../../gdi/smart-agent/smart-agent-commands.rst:132 ../../gdi/smart-agent/smart-agent-commands.rst:148 ../../gdi/smart-agent/smart-agent-commands.rst:168 ../../gdi/smart-agent/smart-agent-commands.rst:179
#: ../../gdi/smart-agent/smart-agent-commands.rst:227 ../../gdi/smart-agent/smart-agent-commands.rst:251 ../../gdi/smart-agent/smart-agent-commands.rst:264 ../../gdi/smart-agent/smart-agent-commands.rst:283 ../../gdi/smart-agent/smart-agent-commands.rst:292 ../../gdi/smart-agent/smart-agent-commands.rst:311 ../../gdi/smart-agent/smart-agent-commands.rst:322 ../../gdi/smart-agent/smart-agent-commands.rst:343 ../../gdi/smart-agent/smart-agent-commands.rst:356 ../../gdi/smart-agent/smart-agent-commands.rst:375 ../../gdi/smart-agent/smart-agent-commands.rst:386 ../../gdi/smart-agent/smart-agent-commands.rst:407 ../../gdi/smart-agent/smart-agent-commands.rst:422
#: ../../gdi/smart-agent/smart-agent-commands.rst:477 ../../gdi/smart-agent/smart-agent-commands.rst:501 ../../gdi/smart-agent/smart-agent-commands.rst:518 ../../gdi/smart-agent/smart-agent-commands.rst:535 ../../gdi/smart-agent/smart-agent-commands.rst:553 ../../gdi/smart-agent/smart-agent-commands.rst:570 ../../gdi/smart-agent/smart-agent-commands.rst:587 ../../gdi/smart-agent/smart-agent-commands.rst:607
msgid "Description"
msgstr "説明"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:55 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:252 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:279 ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:81 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:55 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:79
msgid "``SIGNALFX_ENV``"
msgstr "``SIGNALFX_ENV``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:56
msgid "The value for the ``deployment.environment`` tag added to all spans."
msgstr "すべてのスパンに追加される``deployment.environment`` タグの値。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:57 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:250 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:277 ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:79 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:109 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:53 ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:25
#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:95 ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:74 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:77
msgid "``SIGNALFX_SERVICE_NAME``"
msgstr "``SIGNALFX_SERVICE_NAME``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:58
msgid "The name of the application or service. If not set, the instrumentation looks for a suitable default name. See :ref:`dotnet-default-service-name`."
msgstr "アプリケーションまたはサービスの名前。設定されていない場合は、適切なデフォルト名を探します。:ref:`dotnet-default-service-name` を参照。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:59 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:57
msgid "``SIGNALFX_VERSION``"
msgstr "``SIGNALFX_VERSION``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:60
msgid "The version of the application. When set, it adds the ``version`` tag to all spans."
msgstr "アプリケーションのバージョン。設定すると、すべてのスパンに``version`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:61 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:73
msgid "``SIGNALFX_PROFILER_PROCESSES``"
msgstr "``SIGNALFX_PROFILER_PROCESSES``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:62
msgid "Names of the executable files that the profiler can instrument. Supports multiple semicolon-separated values, for example: ``MyApp.exe;dotnet.exe``."
msgstr "プロファイラが計測できる実行ファイル名。セミコロンで区切られた複数の値をサポートする。例えば、``MyApp.exe;dotnet.exe``."

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:63 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:301 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:71
msgid "``SIGNALFX_PROFILER_EXCLUDE_PROCESSES``"
msgstr "``SIGNALFX_PROFILER_EXCLUDE_PROCESSES``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:64
msgid "Names of the executable files that the profiler cannot instrument. Supports multiple semicolon-separated values, for example: ``ReservedProcess.exe;powershell.exe``."
msgstr "プロファイラが計測できない実行ファイル名。セミコロンで区切られた複数の値をサポートする。例えば、``ReservedProcess.exe;powershell.exe``."

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:65 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:75
msgid "``SIGNALFX_TRACE_CONFIG_FILE``"
msgstr "``SIGNALFX_TRACE_CONFIG_FILE``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:66
msgid "Path of the JSON configuration file. Set this environment variable if you're configuring the instrumentation using a JSON file. See :ref:`configuration-methods-dotnet` for more information."
msgstr "JSON設定ファイルのパス。JSONファイルを使ってインスツルメンテーションを設定する場合は、この環境変数を設定する。詳しくは:ref:`configuration-methods-dotnet` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:67 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:77
msgid "``SIGNALFX_TRACE_ENABLED``"
msgstr "``SIGNALFX_TRACE_ENABLED``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:68
msgid "Set to ``false`` to deactivate the tracer. The default value is ``true``."
msgstr "トレーサーを無効にするには、``false`` に設定する。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:69 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:305 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:67
msgid "``SIGNALFX_AZURE_APP_SERVICES``"
msgstr "``SIGNALFX_AZURE_APP_SERVICES``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:70
msgid "Set to ``true`` to indicate that the profiler is running in the context of Azure App Services.   The default value is ``false``."
msgstr "``true`` に設定すると、プロファイラが Azure App Services のコンテキストで実行されていることを示します。  デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:71 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:299 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:69
msgid "``SIGNALFX_DOTNET_TRACER_HOME``"
msgstr "``SIGNALFX_DOTNET_TRACER_HOME``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:72
msgid "Location of the installed instrumentation. Must be set manually to ``/opt/signalfx`` when instrumenting applications on Linux or background services in Azure App Service. By default, the Windows installer automatically uses the ``C:\\Program Files\\SignalFx\\.NET Tracing`` directory."
msgstr "設置された計測器の位置。Linux 上のアプリケーションまたは Azure App Service のバックグラウンドサービスをインスツルメンテーションする場合は、手動で``/opt/signalfx`` に設定する必要があります。デフォルトでは、Windowsインストーラーは自動的に``C:\\Program Files\\SignalFx\\.NET Tracing`` ディレクトリを使用する。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:77 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:80 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:360
msgid "Exporter settings"
msgstr "エクスポート設定"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:79 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:96 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:103 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:127 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:82 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:67 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:69
#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:61
msgid "The following settings control trace exporters and their endpoints:"
msgstr "以下の設定は、トレース・エクスポーターとそのエンドポイントをコントロールする："

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:88 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:246 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:273 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:107 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:81 ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:43
#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:93 ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:72
msgid "``SIGNALFX_ACCESS_TOKEN``"
msgstr "``SIGNALFX_ACCESS_TOKEN``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:89
msgid "Splunk Observability Cloud access token for your organization. The token activates sending traces directly to the Splunk Observability Cloud ingest endpoint. To obtain an access token, see :ref:`admin-api-access-tokens`."
msgstr "お客様の組織の Splunk Observability Cloud アクセストークン。このトークンは、Splunk Observability Cloud インジェストエンドポイントに直接トレースを送信します。アクセストークンを取得するには、:ref:`admin-api-access-tokens` を参照してください。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:90 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:248 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:275 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:83
msgid "``SIGNALFX_REALM``"
msgstr "``SIGNALFX_REALM``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:91
msgid "The name of your organization's realm, for example, ``us0``. When you set the realm, metrics are sent to ``https://ingest.<realm>.signalfx.com/v2/datapoint`` and traces are sent to ``https://ingest.<realm>.signalfx.com/v2/trace``."
msgstr "あなたの組織のレルムの名前。例えば、``us0`` 。レルムを設定すると、メトリクスは``https://ingest.<realm>.signalfx.com/v2/datapoint`` に、トレースは``https://ingest.<realm>.signalfx.com/v2/trace`` に送信されます。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:92 ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:83 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:111 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:85 ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:27 ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:97
#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:76
msgid "``SIGNALFX_ENDPOINT_URL``"
msgstr "``SIGNALFX_ENDPOINT_URL``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:93
msgid "The URL to where the trace exporter sends traces. The default value is ``http://localhost:9411/api/v2/spans``. Setting a value overrides the ``SIGNALFX_REALM`` environment variable."
msgstr "トレース・エクスポーターがトレースを送信する URL。デフォルト値は``http://localhost:9411/api/v2/spans`` 。値を設定すると、``SIGNALFX_REALM`` 環境変数がオーバーライドされる。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:94 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:87
msgid "``SIGNALFX_METRICS_ENDPOINT_URL``"
msgstr "``SIGNALFX_METRICS_ENDPOINT_URL``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:95
msgid "The URL to where the metrics exporter sends metrics. The default value is ``http://localhost:9943/v2/datapoint``. Setting a value overrides the ``SIGNALFX_REALM`` environment variable."
msgstr "メトリクス・エクスポーターがメトリクスを送信する URL。デフォルト値は``http://localhost:9943/v2/datapoint`` 。値を設定すると、``SIGNALFX_REALM`` 環境変数がオーバーライドされる。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:96 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:89
msgid "``SIGNALFX_TRACE_PARTIAL_FLUSH_ENABLED``"
msgstr "``SIGNALFX_TRACE_PARTIAL_FLUSH_ENABLED``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:97
msgid "Activate to export traces that contain a minimum number of closed spans, as defined by ``SIGNALFX_TRACE_PARTIAL_FLUSH_MIN_SPANS``. The default value is ``false``."
msgstr "``SIGNALFX_TRACE_PARTIAL_FLUSH_MIN_SPANS`` で定義されているように、最小数の閉じたスパンを含むトレースをエクスポートするようにアクティブにします。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:98 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:91
msgid "``SIGNALFX_TRACE_PARTIAL_FLUSH_MIN_SPANS``"
msgstr "``SIGNALFX_TRACE_PARTIAL_FLUSH_MIN_SPANS``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:99
msgid "Minimum number of closed spans in a trace before it's exported. The default value is ``500``. Requires the value of the ``SIGNALFX_TRACE_PARTIAL_FLUSH_ENABLED`` environment variable to be ``true``."
msgstr "トレースがエクスポートされるまでの、トレース内の閉じたスパンの最小数。デフォルト値は``500`` 。環境変数``SIGNALFX_TRACE_PARTIAL_FLUSH_ENABLED`` の値が``true`` であることが必要。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:104 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:101
msgid "Trace propagation settings"
msgstr "トレース伝播の設定"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:106 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:152 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:166 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:178 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:103 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:88 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:88
#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:82
msgid "The following settings control trace propagation:"
msgstr "以下の設定はトレース伝搬をコントロールする："

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:115 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:95
msgid "``SIGNALFX_PROPAGATORS``"
msgstr "``SIGNALFX_PROPAGATORS``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:116
msgid "Comma-separated list of propagators for the tracer. The available propagators are ``B3`` and ``W3C``, which correspond to the ``b3multi`` and ``tracecontext`` propagators in the OpenTelemetry SDK. The default value is ``B3,W3C``."
msgstr "カンマで区切られたトレーサーのプロパゲータのリスト。利用可能なプロパゲータは``B3`` と``W3C`` で、OpenTelemetry SDK の``b3multi`` と``tracecontext`` のプロパゲータに対応しています。デフォルト値は``B3,W3C`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:121
msgid ".NET settings for AlwaysOn Profiling"
msgstr "AlwaysOn プロファイリングの .NET 設定"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:123
msgid "The following settings control the AlwaysOn Profiling feature for the .NET instrumentation:"
msgstr "以下の設定は、.NET インストルメンテーションの AlwaysOn プロファイリング機能を制御します："

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:130 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:51 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:72 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:101 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:136 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:157 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:87
#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:56 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:79 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:110 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:131 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:171 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:200 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:239
#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:281 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:68 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:94 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:132 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:183 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:213
#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:253 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:127 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:148 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:304 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:332 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:354 ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:23
#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:24 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:41 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:72 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:93 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:24 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:45 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:74
#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:93 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:24 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:41 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:66 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:87 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:102 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:141
#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:110
msgid "Environment variable"
msgstr "環境変数"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:132
msgid "``SIGNALFX_PROFILER_ENABLED``"
msgstr "``SIGNALFX_PROFILER_ENABLED``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:133 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:218
msgid "Activates AlwaysOn Profiling. The default value is ``false``."
msgstr "AlwaysOn プロファイリングを有効にする。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:134
msgid "``SIGNALFX_PROFILER_MEMORY_ENABLED``"
msgstr "``SIGNALFX_PROFILER_MEMORY_ENABLED``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:135
msgid "Activates memory profiling. The default value is ``false``."
msgstr "メモリプロファイリングを有効にする。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:136
msgid "``SIGNALFX_PROFILER_LOGS_ENDPOINT``"
msgstr "``SIGNALFX_PROFILER_LOGS_ENDPOINT``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:137
msgid "The collector endpoint for profiler logs. The default value is ``http://localhost:4318/v1/logs``."
msgstr "プロファイラ・ログのコレクタ・エンドポイント。デフォルト値は``http://localhost:4318/v1/logs`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:138
msgid "``SIGNALFX_PROFILER_CALL_STACK_INTERVAL``"
msgstr "``SIGNALFX_PROFILER_CALL_STACK_INTERVAL``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:139
msgid "Frequency with which call stacks are sampled, in milliseconds. The default value is ``10000`` milliseconds."
msgstr "コールスタックをサンプリングする頻度（ミリ秒単位）。デフォルト値は``10000`` ミリ秒。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:141 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:225 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:241
msgid "For more information on AlwaysOn Profiling, see :ref:`profiling-intro`."
msgstr "AlwaysOn プロファイリングの詳細については、:ref:`profiling-intro` を参照してください。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:146
msgid "Metrics settings"
msgstr "メトリクス設定"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:148
msgid "The following settings control metric collection:"
msgstr "以下の設定がメトリックの収集を制御する："

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:157
msgid "``SIGNALFX_METRICS_{0}_ENABLED``"
msgstr "``SIGNALFX_METRICS_{0}_ENABLED``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:158
msgid "Configuration pattern for activating or deactivating a specific metrics group. For example, to activate ``NetRuntime`` metrics, set ``SIGNALFX_METRICS_NetRuntime_ENABLED=true``. Supported metrics are ``NetRuntime``, ``Process``, ``AspNetCore``, and ``Traces``. The default value is ``false``. See :ref:`dotnet-metrics-attributes` for more information."
msgstr "特定のメトリクス・グループをアクティブまたは非アクティブにするための構成パターン。例えば、``NetRuntime`` メトリクスを有効にするには、``SIGNALFX_METRICS_NetRuntime_ENABLED=true`` を設定します。サポートされているメトリクスは``NetRuntime``,``Process``,``AspNetCore``, および``Traces`` です。デフォルト値は``false`` 。詳しくは:ref:`dotnet-metrics-attributes` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:160 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:19
msgid "NetRuntime metrics are always collected if memory profiling is activated."
msgstr "メモリ・プロファイリングが有効になっている場合、NetRuntime メトリクスは常に収集されます。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:165 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:174 ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:71 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:92 ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:100
msgid "Instrumentation settings"
msgstr "計装設定"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:167 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:176
msgid "The following settings control instrumentations and tracing behavior:"
msgstr "以下の設定は、インスツルメンテーションとトレースの動作を制御します："

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:176 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:59
msgid "``SIGNALFX_GLOBAL_TAGS``"
msgstr "``SIGNALFX_GLOBAL_TAGS``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:177
msgid "Comma-separated list of key-value pairs that specify global span tags. For example: ``key1:val1,key2:val2``."
msgstr "グローバル・スパン・タグを指定するキーと値のペアのカンマ区切りリスト。例：``key1:val1,key2:val2``."

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:178 ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:114 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:113 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:63 ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:37 ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:99
#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:78
msgid "``SIGNALFX_RECORDED_VALUE_MAX_LENGTH``"
msgstr "``SIGNALFX_RECORDED_VALUE_MAX_LENGTH``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:179
msgid "Maximum length of the value of an attribute. Values longer than this value are truncated. Values are discarded entirely when set to ``0``, and ignored when set to a negative value. The default value is ``12000``."
msgstr "属性値の最大長。この値より長い値は切り捨てられる。値が``0`` に設定されている場合は完全に破棄され、負の値に設定されている場合は無視される。デフォルト値は``12000`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:180 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:65
msgid "``SIGNALFX_DISABLED_INTEGRATIONS``"
msgstr "``SIGNALFX_DISABLED_INTEGRATIONS``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:181
msgid "Comma-separated list of library instrumentations you want to deactivate. Each value must match an internal instrumentation ID. See :ref:`supported-dotnet-libraries` for a list of integration identifiers."
msgstr "無効化したいライブラリ・インストゥルメンテーションのカンマ区切りリスト。各値は、内部計装IDと一致しなければならない。統合識別子のリストについては、:ref:`supported-dotnet-libraries` を参照のこと。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:182
msgid "``SIGNALFX_TRACE_{0}_ENABLED``"
msgstr "``SIGNALFX_TRACE_{0}_ENABLED``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:183
msgid "Activates or deactivates a specific instrumentation library. For example, to deactivate the Kafka instrumentation, set ``SIGNALFX_TRACE_Kafka_ENABLED`` to ``false``. The value must match an internal instrumentation ID. See :ref:`supported-dotnet-libraries` for a list of integration identifiers."
msgstr "特定の計装ライブラリをアクティブまたは非アクティブにします。例えば、Kafkaインスツルメンテーションを無効にするには、``SIGNALFX_TRACE_Kafka_ENABLED`` を``false`` に設定します。この値は、内部計装IDと一致しなければならない。統合識別子のリストについては、:ref:`supported-dotnet-libraries` を参照のこと。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:188 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:101
msgid "Library-specific instrumentation settings"
msgstr "ライブラリ固有の計装設定"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:190
msgid "The following settings control the behavior of specific instrumentations:"
msgstr "以下の設定は、特定のインストルメンテーションの動作を制御します："

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:199 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:111
msgid "``SIGNALFX_HTTP_CLIENT_ERROR_STATUSES``"
msgstr "``SIGNALFX_HTTP_CLIENT_ERROR_STATUSES``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:200
msgid "Comma-separated list of HTTP client response statuses or ranges for which the spans are set as errors, for example: ``300, 400-499``. The default value is ``400-599``."
msgstr "スパンがエラーとして設定されるHTTPクライアントのレスポンス・ステータスまたは範囲のカンマ区切りのリスト、例：``300, 400-499``.デフォルト値は``400-599`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:201 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:113
msgid "``SIGNALFX_HTTP_SERVER_ERROR_STATUSES``"
msgstr "``SIGNALFX_HTTP_SERVER_ERROR_STATUSES``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:202
msgid "Comma-separated list of HTTP server response statuses or ranges for which the spans are set as errors, for example: ``300, 400-599``. The default value is ``500-599``."
msgstr "スパンがエラーとして設定されるHTTPサーバーのレスポンス・ステータスまたは範囲のカンマ区切りのリスト、例：``300, 400-599``.デフォルト値は``500-599`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:203 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:115
msgid "``SIGNALFX_INSTRUMENTATION_ELASTICSEARCH_TAG_QUERIES``"
msgstr "``SIGNALFX_INSTRUMENTATION_ELASTICSEARCH_TAG_QUERIES``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:204
msgid "Activates the tagging of a ``PostData`` command as ``db.statement``. It might introduce overhead for direct streaming users. The default value is ``true``."
msgstr "``db.statement`` として``PostData`` コマンドのタグ付けを有効にする。ダイレクト・ストリーミングのユーザーにとってはオーバーヘッドになるかもしれない。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:205 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:117
msgid "``SIGNALFX_INSTRUMENTATION_MONGODB_TAG_COMMANDS``"
msgstr "``SIGNALFX_INSTRUMENTATION_MONGODB_TAG_COMMANDS``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:206
msgid "Activates the tagging of a ``BsonDocument`` command as ``db.statement``. The default value is ``true``."
msgstr "``db.statement`` として``BsonDocument`` コマンドのタグ付けを有効にする。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:207 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:119
msgid "``SIGNALFX_INSTRUMENTATION_REDIS_TAG_COMMANDS``"
msgstr "``SIGNALFX_INSTRUMENTATION_REDIS_TAG_COMMANDS``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:208
msgid "Activates the tagging of Redis commands as ``db.statement``. The default value is ``true``."
msgstr "``db.statement`` としてRedisコマンドのタグ付けを有効にする。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:209 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:123
msgid "``SIGNALFX_TRACE_DELAY_WCF_INSTRUMENTATION_ENABLED``"
msgstr "``SIGNALFX_TRACE_DELAY_WCF_INSTRUMENTATION_ENABLED``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:210
msgid "Activates the updated WCF instrumentation, which delays execution until later in the WCF pipeline when the WCF server exception handling is established. The default value is ``false``."
msgstr "更新されたWCFインスツルメンテーションを有効にし、WCFサーバーの例外処理が確立されるWCFパイプラインの後半まで実行を遅らせる。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:211 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:125
msgid "``SIGNALFX_TRACE_HEADER_TAGS``"
msgstr "``SIGNALFX_TRACE_HEADER_TAGS``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:212
msgid "Comma-separated map of HTTP header keys to tag names, automatically applied as tags on traces.   For example: ``x-my-header:my-tag,header2:tag2``."
msgstr "HTTPヘッダーのキーとタグ名をカンマ区切りでマップしたもので、トレース時にタグとして自動的に適用されます。  例：``x-my-header:my-tag,header2:tag2``."

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:213 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:127
msgid "``SIGNALFX_TRACE_HTTP_CLIENT_EXCLUDED_URL_SUBSTRINGS``"
msgstr "``SIGNALFX_TRACE_HTTP_CLIENT_EXCLUDED_URL_SUBSTRINGS``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:214
msgid "Comma-separated list of URL substrings. Matching URLs are ignored by the tracer. For example, ``subdomain,xyz,login,download``."
msgstr "カンマ区切りのURL部分文字列のリスト。一致するURLはトレーサーによって無視される。例えば、``subdomain,xyz,login,download`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:215 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:129
msgid "``SIGNALFX_TRACE_KAFKA_CREATE_CONSUMER_SCOPE_ENABLED``"
msgstr "``SIGNALFX_TRACE_KAFKA_CREATE_CONSUMER_SCOPE_ENABLED``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:216
msgid "Activate to close consumer scope upon entering a method and starting a new one on method exit. The default value is ``true``."
msgstr "メソッド開始時にコンシューマ・スコープを閉じ、メソッド終了時に新しいコンシューマ・スコープを開始する。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:217 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:133
msgid "``SIGNALFX_TRACE_ROUTE_TEMPLATE_RESOURCE_NAMES_ENABLED``"
msgstr "``SIGNALFX_TRACE_ROUTE_TEMPLATE_RESOURCE_NAMES_ENABLED``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:218
msgid "Activate to base ASP.NET span and resource names on routing configuration, if applicable. The default value is ``true``."
msgstr "該当する場合は、ASP.NETスパンとリソース名をルーティング構成に基づいて有効にします。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:223 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:183 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:253 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:301 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:233 ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:64 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:113
#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:113 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:122
msgid "Server trace information"
msgstr "サーバー・トレース情報"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:225 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:255 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:235 ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:66 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:115
msgid "To connect Real User Monitoring (RUM) requests from mobile and web applications with server trace data, trace response headers are activated by default. The instrumentation adds the following response headers to HTTP responses:"
msgstr "モバイルおよびウェブ・アプリケーションからのリアル・ユーザー・モニタリング（RUM）リクエストとサーバー・トレース・データを結びつけるために、トレース・レスポンス・ヘッダはデフォルトで有効になっています。このインスツルメンテーションは、HTTPレスポンスに以下のレスポンス・ヘッダを追加する："

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:232
msgid "The ``Server-Timing`` header contains the ``traceId`` and ``spanId`` parameters in ``traceparent`` format. W3C tracecontext and W3C baggage context propagation is activated by default. For more information, see the Server-Timing and traceparent documentation on the W3C website."
msgstr "``Server-Timing`` ヘッダーには、``traceId`` と``spanId`` パラメータが``traceparent`` 形式で含まれている。W3C tracecontext と W3C baggage context propagation はデフォルトで有効になっています。詳しくは、W3CウェブサイトのServer-Timingとtraceparentのドキュメントをご覧ください。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:234
msgid "If you need to deactivate trace response headers, set ``SIGNALFX_TRACE_RESPONSE_HEADER_ENABLED`` to ``false``."
msgstr "トレース・レスポンス・ヘッダを無効にする必要がある場合は、``SIGNALFX_TRACE_RESPONSE_HEADER_ENABLED`` を``false`` に設定する。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:239
msgid "Query string settings"
msgstr "クエリー文字列の設定"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:241
msgid "This feature is only available when instrumenting ASP.NET Core applications."
msgstr "この機能は、ASP.NET Coreアプリケーションのインスツルメンテーションでのみ使用できます。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:243
msgid "The following settings control the inclusion of query strings in the ``http.url`` tag for ASP.NET Core instrumented applications."
msgstr "以下の設定は、ASP.NET Coreインスツルメンテッド・アプリケーションの``http.url`` タグにクエリー文字列を含めることを制御します。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:252
msgid "``SIGNALFX_HTTP_SERVER_TAG_QUERY_STRING``"
msgstr "``SIGNALFX_HTTP_SERVER_TAG_QUERY_STRING``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:253
msgid "Activates or deactivates query string inclusion in the ``http.url`` tag for ASP.NET Core applications. The default value is ``true``."
msgstr "ASP.NET Core アプリケーションの``http.url`` タグにクエリー文字列を含めるかどうかを設定します。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:254
msgid "``SIGNALFX_TRACE_OBFUSCATION_QUERY_STRING_REGEXP``"
msgstr "``SIGNALFX_TRACE_OBFUSCATION_QUERY_STRING_REGEXP``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:255
msgid "Custom regular expression to obfuscate query strings. The default value is shown in the example."
msgstr "クエリ文字列を難読化するためのカスタム正規表現。デフォルト値はこの例の通り。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:256
msgid "``SIGNALFX_TRACE_OBFUSCATION_QUERY_STRING_REGEXP_TIMEOUT``"
msgstr "``SIGNALFX_TRACE_OBFUSCATION_QUERY_STRING_REGEXP_TIMEOUT``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:257
msgid "Timeout to the execution of the query string obfuscation pattern defined in ``SIGNALFX_TRACE_OBFUSCATION_QUERY_STRING_REGEXP``, in milliseconds. The default value is ``200``."
msgstr "``SIGNALFX_TRACE_OBFUSCATION_QUERY_STRING_REGEXP`` で定義されているクエリー文字列難読化パターン実行までのタイムアウト（ミリ秒）。デフォルト値は``200`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:259
msgid "Obfuscating query string prevents your applications from sending sensitive data to Splunk."
msgstr "クエリー文字列を難読化することで、アプリケーションが機密データを Splunk に送信するのを防ぎます。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:261
msgid "The default regular expression for query obfuscation is the following:"
msgstr "クエリー難読化のためのデフォルトの正規表現は以下の通りである："

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:270 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:249
msgid "Diagnostic logging settings"
msgstr "診断ロギングの設定"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:272
msgid "The following settings control the internal logging of the SignalFx Instrumentation for .NET:"
msgstr "以下の設定は、SignalFx Instrumentation for .NETの内部ロギングを制御します："

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:281
msgid "``SIGNALFX_DIAGNOSTIC_SOURCE_ENABLED``"
msgstr "``SIGNALFX_DIAGNOSTIC_SOURCE_ENABLED``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:282
msgid "Activate to generate troubleshooting logs using the ``System.Diagnostics.DiagnosticSource`` class. The default value is ``true``."
msgstr "アクティブにすると、``System.Diagnostics.DiagnosticSource`` クラスを使用してトラブルシューティング・ログを生成します。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:283
msgid "``SIGNALFX_FILE_LOG_ENABLED``"
msgstr "``SIGNALFX_FILE_LOG_ENABLED``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:284
msgid "Activates file logging. The default value is ``true``."
msgstr "ファイルのロギングを有効にする。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:285
msgid "``SIGNALFX_MAX_LOGFILE_SIZE``"
msgstr "``SIGNALFX_MAX_LOGFILE_SIZE``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:286
msgid "The maximum size for tracer log files, in bytes. The default value is ``245760``, or 10 megabytes."
msgstr "トレーサー・ログ・ファイルの最大サイズをバイト単位で指定する。デフォルト値は``245760`` （10メガバイト）。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:287
msgid "``SIGNALFX_STDOUT_LOG_ENABLED``"
msgstr "``SIGNALFX_STDOUT_LOG_ENABLED``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:288
msgid "Activates ``stdout`` logging. The default value is ``false``."
msgstr "``stdout`` ロギングを有効にする。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:289
msgid "``SIGNALFX_STDOUT_LOG_TEMPLATE``"
msgstr "``SIGNALFX_STDOUT_LOG_TEMPLATE``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:290
msgid "Configures the ``stdout`` log template using the Serilog formatting conventions. The default value is ``[{Level:u3}] {Message:lj} {NewLine}{Exception}{NewLine}``."
msgstr "Serilog フォーマット規約を使用して``stdout`` ログテンプレートを設定します。デフォルト値は``[{Level:u3}] {Message:lj} {NewLine}{Exception}{NewLine}`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:291 ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:33
msgid "``SIGNALFX_TRACE_DEBUG``"
msgstr "``SIGNALFX_TRACE_DEBUG``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:292
msgid "Activate to activate debugging mode for the tracer. The default value is ``false``."
msgstr "トレーサーのデバッグモードを有効にする。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:293
msgid "``SIGNALFX_TRACE_LOG_DIRECTORY``"
msgstr "``SIGNALFX_TRACE_LOG_DIRECTORY``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:294
msgid "Directory of the .NET tracer logs. Overrides the value in ``SIGNALFX_TRACE_LOG_PATH`` if present.        The default value is ``/var/log/signalfx/dotnet/`` for Linux and ``%ProgramData%\\SignalFx .NET Tracing\\logs\\`` for Windows."
msgstr ".NETトレーサーログのディレクトリ。``SIGNALFX_TRACE_LOG_PATH`` の値があればそれを上書きする。       デフォルト値は、Linuxでは``/var/log/signalfx/dotnet/`` 、Windowsでは``%ProgramData%\\SignalFx .NET Tracing\\logs\\`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:295
msgid "``SIGNALFX_TRACE_LOGGING_RATE``"
msgstr "``SIGNALFX_TRACE_LOGGING_RATE``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:296
msgid "The number of seconds between identical log messages for tracer log files. Setting this environment variable to ``0`` deactivates rate limiting. The default value is ``60``."
msgstr "トレーサー・ログ・ファイルの同一ログ・メッセージ間の秒数。この環境変数を``0`` に設定すると、レート制限が無効になる。デフォルト値は``60`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:297
msgid "``SIGNALFX_TRACE_STARTUP_LOGS``"
msgstr "``SIGNALFX_TRACE_STARTUP_LOGS``"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:298
msgid "Activate to activate diagnostic logs at startup. The default value is ``true``."
msgstr "起動時に診断ログを有効にします。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:303 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:276
msgid "Changing the default service name"
msgstr "デフォルトのサービス名の変更"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:305
msgid "By default, the SignalFx Instrumentation for .NET retrieves the service name by trying the following steps until it succeeds:"
msgstr "デフォルトでは、SignalFx Instrumentation for .NETは、以下のステップを成功するまで試してサービス名を取得します："

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:307
msgid "For the SignalFx .NET Tracing Azure Site Extension, the default service name is the site name as defined by the ``WEBSITE_SITE_NAME`` environment variable."
msgstr "SignalFx .NET Tracing Azure Site Extensionの場合、デフォルトのサービス名は、``WEBSITE_SITE_NAME`` 環境変数で定義されたサイト名です。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:309
msgid "For ASP.NET applications, the default service name is ``SiteName[/VirtualPath]``."
msgstr "ASP.NETアプリケーションの場合、デフォルトのサービス名は``SiteName[/VirtualPath]`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:311
msgid "For other applications, the default service name is the name of the entry assembly. For example, the name of your .NET project file."
msgstr "その他のアプリケーションの場合、デフォルトのサービス名はエントリーアセンブリの名前です。例えば、.NETプロジェクトファイルの名前。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:313 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:282
msgid "If the entry assembly is not available, the instrumentation tries to use the current process name. The process name can be ``dotnet`` if launched directly using an assembly. For example, ``dotnet InstrumentedApp.dll``."
msgstr "エントリー・アセンブリが利用できない場合、インスツルメンテーションは現在のプロセス名を使用しようとする。アセンブリを使って直接起動する場合、プロセス名は``dotnet`` 。例えば、``dotnet InstrumentedApp.dll`` 。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:315
msgid "If all the steps fail, the service name defaults to ``UnknownService``."
msgstr "すべての手順が失敗した場合、サービス名のデフォルトは``UnknownService`` になります。"

#: ../../gdi/get-data-in/application/dotnet/configuration/advanced-dotnet-configuration.rst:317
msgid "To override the default service name, set the ``SIGNALFX_SERVICE_NAME`` environment variable."
msgstr "デフォルトのサービス名を上書きするには、``SIGNALFX_SERVICE_NAME`` 環境変数を設定する。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:-1
msgid "The SignalFx Instrumentation for .NET collects the following runtime and trace metrics."
msgstr "SignalFx Instrumentation for .NETは、以下のランタイムおよびトレース・メトリクスを収集します。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:5
msgid "Metrics collected by the SignalFx Instrumentation for .NET"
msgstr "SignalFx Instrumentation for .NETによって収集されたメトリクス"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:10
msgid "The SignalFx Instrumentation for .NET can collect runtime and trace metrics. To learn about the different metric types, see :ref:`metric-types`."
msgstr "SignalFx Instrumentation for .NETは、ランタイム・メトリクスとトレース・メトリクスを収集できます。メトリックの種類については、:ref:`metric-types` をご覧ください。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:15 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:138 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:17 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:138 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:17 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:133
msgid "Activate metrics collection"
msgstr "メトリクス・コレクションを有効にする"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:17
msgid "To activate the collection of .NET runtime and trace metrics, see :ref:`dotnet-metric-settings`."
msgstr ".NET ランタイムおよびトレース・メトリクスの収集を有効にするには、:ref:`dotnet-metric-settings` を参照してください。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:24 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:24
msgid ".NET runtime metrics"
msgstr ".NETランタイム・メトリクス"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:26
msgid "The SignalFx Instrumentation for .NET can collect the following runtime metrics:"
msgstr "SignalFx Instrumentation for .NETは、以下のランタイム・メトリクスを収集できます："

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:33 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:76 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:107 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:158 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:26 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:93 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:120
#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:142 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:176 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:198 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:257 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:296 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:365 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:46
#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:180 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:33 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:97 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:128
msgid "Metric"
msgstr "メートル"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:34 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:77 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:108 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:159 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:27 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:94 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:121
#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:143 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:177 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:199 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:258 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:297 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:366 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:47
#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:181 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:34 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:98 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:129 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:30 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:68 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:157 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:194
#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:232 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:257 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:284 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:303 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:341 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:373 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:403 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:429 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:34 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:82
#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:106 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:151 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:226 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:253 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:274 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:292 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:321 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:363 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:391
#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:483 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:44 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:251 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:192 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:29 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:136 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:74 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:146 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:175 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:212
#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:253 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:279 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:298 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:321 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:344 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:377 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:399 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:419 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:30 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:102 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:125
#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:165 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:191 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:220 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:242 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:21 ../../gdi/monitors-cache/memcached.md:27 ../../gdi/monitors-cache/opcache.md:68 ../../gdi/monitors-cloud/openstack.md:29 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25 ../../gdi/monitors-conviva/conviva.md:26 ../../gdi/monitors-databases/apache-spark.md:30 ../../gdi/monitors-databases/cassandra.md:22
#: ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-databases/hadoop.md:30 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/logparser.md:23 ../../gdi/monitors-databases/logstash.md:17 ../../gdi/monitors-databases/microsoft-sql-server.md:40 ../../gdi/monitors-databases/mongodb-atlas.md:7 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/mysql.md:49 ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-databases/sap-hana.md:23 ../../gdi/monitors-databases/sql.md:23
#: ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/apache-httpserver.md:38 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/chrony.md:22 ../../gdi/monitors-hosts/collectd-df.md:23 ../../gdi/monitors-hosts/collectd-plugin.md:23 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/couchbase.md:23 ../../gdi/monitors-hosts/cpu.md:7 ../../gdi/monitors-hosts/docker.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/filesystems.md:7 ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/health-checker.md:21
#: ../../gdi/monitors-hosts/host-processes.md:7 ../../gdi/monitors-hosts/host-processload.md:7 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/interface.md:7 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-hosts/microsoft-windows-iis.md:25 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-hosts/ntpq.md:23 ../../gdi/monitors-hosts/php-fpm.md:42 ../../gdi/monitors-hosts/procstat.md:23 ../../gdi/monitors-hosts/solr.md:23 ../../gdi/monitors-hosts/supervisor.md:23 ../../gdi/monitors-hosts/systemd.md:34 ../../gdi/monitors-hosts/varnish.md:33
#: ../../gdi/monitors-hosts/vsphere.md:29 ../../gdi/monitors-hosts/win-services.md:21 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/java-monitor.md:27 ../../gdi/monitors-languages/jmx.md:35 ../../gdi/monitors-languages/microsoft-dotnet.md:41 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-messaging/rabbitmq.md:25 ../../gdi/monitors-monitoring/cadvisor.md:27 ../../gdi/monitors-monitoring/cgroups.md:35 ../../gdi/monitors-monitoring/jaeger-grpc.md:25 ../../gdi/monitors-monitoring/nagios.md:64
#: ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-monitoring/signalfx-forwarder.md:23 ../../gdi/monitors-monitoring/win_perf_counters.md:27 ../../gdi/monitors-network/aws-appmesh.md:26 ../../gdi/monitors-network/dns.md:21 ../../gdi/monitors-network/logstash-tcp.md:25 ../../gdi/monitors-network/net-io.md:21 ../../gdi/monitors-network/ntp.md:23
#: ../../gdi/monitors-network/snmp.md:27 ../../gdi/monitors-network/statsd.md:35 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-events.md:63 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23 ../../gdi/monitors-orchestration/mesos-marathon.md:22 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "Type"
msgstr "タイプ"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:36 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:81
msgid "``process.runtime.dotnet.exceptions.count``"
msgstr "``process.runtime.dotnet.exceptions.count``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:37 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:43 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:46 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:52 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:61 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:80 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:83
#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:89 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:92 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:111 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:114 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:117 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:120 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:123
#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:126 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:129 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:180 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:30 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:42 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:48 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:51 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:54
#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:57 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:60 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:63 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:66 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:97 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:100 ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:118 ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:121
#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:124 ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:144 ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:147 ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:150 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:124 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:149 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:152
#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:180 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:183 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:213 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:216 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:219 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:222 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:225
#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:228 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:261 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:264 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:267 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:270 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:300 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:303
#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:306 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:309 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:312 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:315 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:318 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:50 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:53
#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:56 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:68 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:71 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:40 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:43 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:46 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:52
#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:58 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:64 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:76 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:79 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:101 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:104 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:110
#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:113 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:30 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:36
msgid "Gauge"
msgstr "ゲージ"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:38
msgid "Count of exceptions since the previous observation."
msgstr "前回の観測以降の例外回数。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:39 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:36
msgid "``process.runtime.dotnet.gc.collections.count``"
msgstr "``process.runtime.dotnet.gc.collections.count``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:40 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:49 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:58 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:33 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:39 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:45 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:69 ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:101
#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:115 ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:127 ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:141 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:59 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:62 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:65 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:37
#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:49 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:55 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:61 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:67 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:70 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:73 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:82
#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:107 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:138 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:141 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:144
msgid "Cumulative counter"
msgstr "累積カウンター"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:41 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:38
msgid "Number of garbage collections since the process started."
msgstr "プロセスが始まってからのガベージコレクションの回数。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:42 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:39
msgid "``process.runtime.dotnet.gc.heap.size``"
msgstr "``process.runtime.dotnet.gc.heap.size``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:44
msgid "Heap size, as observed during the last garbage collection."
msgstr "前回のガベージコレクション時に観測されたヒープサイズ。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:45 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:45
msgid "``process.runtime.dotnet.gc.objects.size``"
msgstr "``process.runtime.dotnet.gc.objects.size``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:47
msgid "Count of bytes currently in use by live objects in the GCP heap."
msgstr "GCPヒープ内のライブ・オブジェクトが現在使用しているバイト数。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:48 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:48
msgid "``process.runtime.dotnet.gc.allocations.size``"
msgstr "``process.runtime.dotnet.gc.allocations.size``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:50
msgid "Count of bytes allocated on the managed GCP heap since the process started. Only available for .NET Core."
msgstr "プロセス開始以降に管理GCPヒープに割り当てられたバイト数。.NET Coreでのみ利用可能。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:51 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:51
msgid "``process.runtime.dotnet.gc.committed_memory.size``"
msgstr "``process.runtime.dotnet.gc.committed_memory.size``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:53
msgid "Amount of committed virtual memory for the managed GCP heap, as observed during the last garbage collection. Only available for .NET 6 and higher."
msgstr "最後のガベージ・コレクション時に観測された、管理されたGCPヒープのコミットされた仮想メモリ量。.NET 6以降でのみ使用可能。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:54
msgid "``process.runtime.dotnet.gc.pause.time``"
msgstr "``process.runtime.dotnet.gc.pause.time``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:55 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:162 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:165 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:168 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:171 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:174 ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:177
#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:127 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:155 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:158 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:202 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:207 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:321 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:384
#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:387 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:24 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:27 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:33
msgid "Counter"
msgstr "カウンター"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:56
msgid "Number of milliseconds spent in GCP pause. Only available for .NET Core."
msgstr "GCPポーズに費やされたミリ秒数。.NET Coreでのみ利用可能。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:57 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:54
msgid "``process.runtime.dotnet.monitor.lock_contention.count``"
msgstr "``process.runtime.dotnet.monitor.lock_contention.count``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:59 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:56
msgid "Contentions count when trying to acquire a monitor lock since the process started."
msgstr "プロセスが開始してから、モニター・ロックを取得しようとしたときの競合がカウントされる。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:60 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:57
msgid "``process.runtime.dotnet.thread_pool.threads.count``"
msgstr "``process.runtime.dotnet.thread_pool.threads.count``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:62
msgid "Number of thread pool threads, as observed during the last measurement. Only available for .NET Core."
msgstr "前回の測定時に観測されたスレッドプールのスレッド数。.NET Coreでのみ利用可能。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:67 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:88
msgid "Process metrics"
msgstr "プロセス測定基準"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:69
msgid "The SignalFx Instrumentation for .NET can collect the following process metrics:"
msgstr "SignalFx Instrumentation for .NETは、以下のプロセス・メトリクスを収集できます："

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:79 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:100
msgid "``process.memory.usage``"
msgstr "``process.memory.usage``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:81 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:102
msgid "The amount of physical memory allocated for this process."
msgstr "このプロセスに割り当てられた物理メモリの量。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:82 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:103
msgid "``process.memory.virtual``"
msgstr "``process.memory.virtual``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:84 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:105
msgid "The amount of committed virtual memory for this process."
msgstr "このプロセスのコミット仮想メモリー量。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:85 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:106
msgid "``process.cpu.time``"
msgstr "``process.cpu.time``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:86
msgid "CumulativeCounter"
msgstr "CumulativeCounter"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:87 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:108 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:111
msgid "Total CPU seconds broken down by different states, such as user and system."
msgstr "CPUの総秒数をユーザーやシステムなどの状態別に分類したもの。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:88
msgid "``process.cpu.utilization`` (deprecated)"
msgstr "``process.cpu.utilization`` (非推奨)"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:90
msgid "Difference in ``process.cpu.time`` since the last measurement, divided by the elapsed time and number of CPUs available to the process."
msgstr "前回の測定からの``process.cpu.time`` の差を、経過時間とプロセスで使用可能なCPU数で割ったもの。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:91 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:112
msgid "``process.threads``"
msgstr "``process.threads``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:93 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:114
msgid "Process threads count."
msgstr "プロセスのスレッド数。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:98
msgid "ASP.NET Core metrics"
msgstr "ASP.NET Coreメトリクス"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:100
msgid "The SignalFx Instrumentation for .NET can collect the following ASP.NET Core metrics:"
msgstr "SignalFx Instrumentation for .NETは、以下のASP.NET Coreメトリクスを収集できます："

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:110
msgid "``signalfx.dotnet.aspnetcore.connections.current``"
msgstr "``signalfx.dotnet.aspnetcore.connections.current``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:112
msgid "Number of active HTTP connections to the web server. Only available for .NET Core."
msgstr "ウェブ・サーバーへのアクティブなHTTP接続数。.NET Coreでのみ利用可能。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:113
msgid "``signalfx.dotnet.aspnetcore.connections.queue_length``"
msgstr "``signalfx.dotnet.aspnetcore.connections.queue_length``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:115
msgid "Length of the HTTP connection queue. Only available for .NET Core."
msgstr "HTTP接続キューの長さ。.NET Coreでのみ利用可能。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:116
msgid "``signalfx.dotnet.aspnetcore.connections.total``"
msgstr "``signalfx.dotnet.aspnetcore.connections.total``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:118
msgid "Number of HTTP connections to the web server. Only available for .NET Core."
msgstr "ウェブサーバーへのHTTP接続数。.NET Coreでのみ利用可能。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:119
msgid "``signalfx.dotnet.aspnetcore.requests.current``"
msgstr "``signalfx.dotnet.aspnetcore.requests.current``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:121
msgid "Number of HTTP requests that have started, but haven't stopped yet. Only available for .NET Core."
msgstr "HTTPリクエストを開始したが、まだ停止していない数。.NET Coreでのみ利用可能。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:122
msgid "``signalfx.dotnet.aspnetcore.requests.failed``"
msgstr "``signalfx.dotnet.aspnetcore.requests.failed``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:124
msgid "Number of failed HTTP requests received by the server. Only available for .NET Core."
msgstr "サーバーが受信したHTTPリクエストの失敗数。.NET Coreでのみ利用可能。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:125
msgid "``signalfx.dotnet.aspnetcore.requests.queue_length``"
msgstr "``signalfx.dotnet.aspnetcore.requests.queue_length``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:127
msgid "Length of the HTTP request queue."
msgstr "HTTPリクエストキューの長さ。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:128
msgid "``signalfx.dotnet.aspnetcore.requests.total``"
msgstr "``signalfx.dotnet.aspnetcore.requests.total``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:130
msgid "Number of HTTP requests received by the server. Only available for .NET Core."
msgstr "サーバーが受信したHTTPリクエストの数。.NET Coreでのみ利用可能。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:134
msgid "Additional permissions for IIS"
msgstr "IISの追加パーミッション"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:136
msgid "The .NET Framework collects metrics using performance counters. To let service accounts and IIS application pool accounts access counter data, add them to the ``Performance Monitoring Users`` group."
msgstr ".NET Frameworkは、パフォーマンス・カウンターを使ってメトリクスを収集する。サービス・アカウントおよび IIS アプリケーション・プール・アカウントがカウンタ・データにアクセスできるようにするには、それらを``Performance Monitoring Users`` グループに追加します。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:138
msgid "IIS application pools use special accounts that don't appear in the list of users. To add IIS application pool accounts to the ``Performance Monitoring Users`` group, search for ``IIS APPPOOL\\<name-of-the-pool>``. For example, the user for the ``DefaultAppPool`` pool is ``IIS APPPOOL\\DefaultAppPool``."
msgstr "IISアプリケーションプールは、ユーザーリストに表示されない特別なアカウントを使用する。IIS アプリケーション・プール・アカウントを``Performance Monitoring Users`` グループに追加するには、``IIS APPPOOL\\<name-of-the-pool>`` を検索する。例えば、``DefaultAppPool`` プールのユーザーは``IIS APPPOOL\\DefaultAppPool`` です。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:140
msgid "The following example shows how to add an IIS application pool account to the ``Performance Monitoring Users`` group from a command prompt with Administrator permissions:"
msgstr "次の例は、Administrator 権限を持つコマンド・プロンプトから、IIS アプリケーション・プール・アカウントを``Performance Monitoring Users`` グループに追加する方法を示しています："

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:149
msgid "Trace metrics"
msgstr "トレース・メトリクス"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:151
msgid "The SignalFx Instrumentation for .NET can collect the following trace metrics:"
msgstr "SignalFx Instrumentation for .NETは、以下のトレース・メトリクスを収集できます："

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:161
msgid "``signalfx.tracer.queue.enqueued_traces``"
msgstr "``signalfx.tracer.queue.enqueued_traces``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:163
msgid "Number of traces pushed into the queue."
msgstr "キューにプッシュされたトレースの数。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:164
msgid "``signalfx.tracer.queue.dequeued_traces``"
msgstr "``signalfx.tracer.queue.dequeued_traces``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:166
msgid "Number of traces pulled from the queue for flushing."
msgstr "フラッシュのためにキューから取り出されたトレースの数。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:167
msgid "``signalfx.tracer.queue.enqueued_spans``"
msgstr "``signalfx.tracer.queue.enqueued_spans``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:169
msgid "Number of spans pushed into the queue."
msgstr "キューにプッシュされたスパンの数。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:170
msgid "``signalfx.tracer.queue.dequeued_spans``"
msgstr "``signalfx.tracer.queue.dequeued_spans``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:172
msgid "Number of spans pulled from the queue for flushing."
msgstr "フラッシュのためにキューから引き出されたスパンの数。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:173
msgid "``signalfx.tracer.queue.dropped_traces``"
msgstr "``signalfx.tracer.queue.dropped_traces``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:175
msgid "Number of traces dropped due to a full queue."
msgstr "キューがいっぱいのためにドロップされたトレースの数。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:176
msgid "``signalfx.tracer.queue.dropped_spans``"
msgstr "``signalfx.tracer.queue.dropped_spans``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:178
msgid "Number of spans dropped due to a full queue."
msgstr "キューが一杯になったためにドロップされたスパンの数。"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:179
msgid "``signalfx.tracer.heartbeat``"
msgstr "``signalfx.tracer.heartbeat``"

#: ../../gdi/get-data-in/application/dotnet/configuration/dotnet-metrics-attributes.rst:181
msgid "Number of tracers."
msgstr "トレーサーの数"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:-1 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:-1
msgid "This is what you need to instrument .NET applications for Splunk Observability Cloud."
msgstr "これは、.NET アプリケーションを Splunk Observability Cloud 用に計測するために必要なものです。"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:5
msgid ".NET instrumentation compatibility and requirements"
msgstr ".NETインストゥルメンテーションの互換性と要件"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:10 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:10
msgid "Meet the following requirements to instrument .NET applications for Splunk Observability Cloud:"
msgstr "Splunk Observability Cloud で .NET アプリケーションを計測するには、以下の要件を満たす必要があります："

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:15 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:15
msgid "Ensure you are using supported .NET versions"
msgstr "サポートされている.NETバージョンを使用していることを確認してください。"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:17
msgid "The SignalFx Instrumentation for .NET supports the following .NET versions:"
msgstr "SignalFx Instrumentation for .NETは、以下の.NETバージョンをサポートしています："

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:19 ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:33
msgid "Instrumentation for traces and metrics:"
msgstr "トレースとメトリクスのための計装："

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:21 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:19
msgid ".NET 6.0 and higher"
msgstr ".NET 6.0以上"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:22 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:20
msgid ".NET Framework 4.6.2 and higher"
msgstr ".NET Framework 4.6.2以上"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:24 ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:39
msgid "AlwaysOn Profiling:"
msgstr "AlwaysOnプロファイリング："

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:26
msgid ".NET 6.0 and higher."
msgstr ".NET 6.0以上。"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:29
msgid "Support for legacy .NET versions"
msgstr "レガシー.NETバージョンのサポート"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:31
msgid "Limited support is available for the following legacy versions of .NET:"
msgstr "以下のレガシーバージョンの.NETには限定的なサポートしかありません："

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:35
msgid ".NET Core 3.1"
msgstr ".NET Core 3.1"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:36
msgid ".NET 5.x"
msgstr ".NET 5.x"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:37
msgid ".NET Framework 4.6.1"
msgstr ".NET Framework 4.6.1"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:41
msgid "CPU Profiling: .NET Core 3.1 and .NET 5.x"
msgstr "CPUプロファイリング：.NET Core 3.1と.NET 5.x"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:42
msgid "Memory Profiling: .NET Core 5.x"
msgstr "メモリ・プロファイリング：.NET Core 5.x"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:47 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:58 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:25
msgid "Supported libraries"
msgstr "対応ライブラリ"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:49
msgid "The SignalFx Instrumentation for .NET instruments the following libraries:"
msgstr "SignalFx Instrumentation for .NETは、以下のライブラリを計測します："

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:56 ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:23 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:39 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:103 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:133 ../../gdi/get-data-in/application/php/php-requirements.rst:32
msgid "Library"
msgstr "図書館"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:57 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:41 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:105 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:135
msgid "Instrumentation ID"
msgstr "計装ID"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:58
msgid "``Aerospike.Client``"
msgstr "``Aerospike.Client``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:59
msgid "``Aerospike``"
msgstr "``Aerospike``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:60
msgid "ASP.NET 4.x"
msgstr "ASP.NET 4.x"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:61
msgid "``AspNet``"
msgstr "``AspNet``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:62 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:197 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:45 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:109
msgid "ASP.NET Core"
msgstr "ASP.NET Core"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:63
msgid "``AspNetCore``"
msgstr "``AspNetCore``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:64
msgid "ASP.NET MVC"
msgstr "ASP.NET MVC"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:65
msgid "``AspNetMvc``"
msgstr "``AspNetMvc``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:66
msgid "ASP.NET Web API 2"
msgstr "ASP.NET Web API 2"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:67
msgid "``AspNetWebApi2v``"
msgstr "``AspNetWebApi2v``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:68
msgid "``AWSSDK.Core`` (Experimental)"
msgstr "``AWSSDK.Core`` 実験"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:69
msgid "``AwsSdk``"
msgstr "``AwsSdk``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:70
msgid "``AWSSDK.SQS`` (Experimental)"
msgstr "``AWSSDK.SQS`` 実験"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:71
msgid "``AwsSqs``"
msgstr "``AwsSqs``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:72
msgid "``Confluent.Kafka``"
msgstr "``Confluent.Kafka``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:73
msgid "``Kafka``"
msgstr "``Kafka``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:74
msgid "``CouchbaseNetClient`` (Experimental)"
msgstr "``CouchbaseNetClient`` 実験"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:75
msgid "``Couchbase``"
msgstr "``Couchbase``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:76
msgid "``Elasticsearch.Net``"
msgstr "``Elasticsearch.Net``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:77
msgid "``ElasticsearchNetv``"
msgstr "``ElasticsearchNetv``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:78
msgid "GraphQL"
msgstr "GraphQL"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:79
msgid "``GraphQL``"
msgstr "``GraphQL``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:80
msgid "gRPC"
msgstr "gRPC"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:81
msgid "``Grpc``"
msgstr "``Grpc``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:82
msgid "``Microsoft.Data.SqlClient`` and ``System.Data.SqlClient``"
msgstr "``Microsoft.Data.SqlClient`` そして ``System.Data.SqlClient``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:83
msgid "``SqlClient``"
msgstr "``SqlClient``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:84
msgid "``Microsoft.Extensions.Logging.Abstractions``"
msgstr "``Microsoft.Extensions.Logging.Abstractions``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:85
msgid "``ILOgger``"
msgstr "``ILOgger``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:86
msgid "``Microsoft.Azure.Cosmos`` (Experimental)"
msgstr "``Microsoft.Azure.Cosmos`` 実験"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:87
msgid "``CosmosDb``"
msgstr "``CosmosDb``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:88
msgid "``Microsoft.Azure.WebJobs`` (Experimental)"
msgstr "``Microsoft.Azure.WebJobs`` 実験"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:89
msgid "``AzureFunctions``"
msgstr "``AzureFunctions``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:90
msgid "``Microsoft.ServiceFabric.Services.Remoting`` (Experimental)"
msgstr "``Microsoft.ServiceFabric.Services.Remoting`` 実験"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:91
msgid "``ServiceRemoting``"
msgstr "``ServiceRemoting``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:92
msgid "``Microsoft.VisualStudio.TestPlatform`` (Experimental)"
msgstr "``Microsoft.VisualStudio.TestPlatform`` 実験"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:93
msgid "``MsTestV2``"
msgstr "``MsTestV2``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:94
msgid "``MongoDB.Driver.Core``"
msgstr "``MongoDB.Driver.Core``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:95
msgid "``MongoDb``"
msgstr "``MongoDb``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:96
msgid "``MySql.Data``"
msgstr "``MySql.Data``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:97
msgid "``MySql``"
msgstr "``MySql``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:98 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:75
msgid "Npgsql"
msgstr "Npgsql"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:99
msgid "``Npgsql``"
msgstr "``Npgsql``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:100
msgid "``NUnit`` (Experimental)"
msgstr "``NUnit`` 実験"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:101
msgid "``NUnit``"
msgstr "``NUnit``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:102
msgid "``Oracle.ManagedDataAccess``"
msgstr "``Oracle.ManagedDataAccess``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:103
msgid "``Oracle``"
msgstr "``Oracle``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:104
msgid "``RabbitMQ.Client``"
msgstr "``RabbitMQ.Client``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:105 ../../gdi/monitors-messaging/rabbitmq.md:3 ../../gdi/opentelemetry/collector-architecture.rst:198
msgid "RabbitMQ"
msgstr "RabbitMQ"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:106
msgid "``ServiceStack.Redis``"
msgstr "``ServiceStack.Redis``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:107
msgid "``ServiceStacksRedis``"
msgstr "``ServiceStacksRedis``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:108
msgid "SQLite"
msgstr "SQLite"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:109
msgid "``Sqlite``"
msgstr "``Sqlite``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:110
msgid "``StackExchange.Redis``"
msgstr "``StackExchange.Redis``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:111
msgid "``StackExchangeRedis``"
msgstr "``StackExchangeRedis``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:112 ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:131
msgid "``System.Net.Http.CurlHandler``"
msgstr "``System.Net.Http.CurlHandler``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:113
msgid "``CurlHandler``"
msgstr "``CurlHandler``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:114 ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:132
msgid "``System.Net.Http.MessageHandler``"
msgstr "``System.Net.Http.MessageHandler``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:115
msgid "``HttpMessageHandler``"
msgstr "``HttpMessageHandler``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:116 ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:133
msgid "``System.Net.Http.SocketsHandler``"
msgstr "``System.Net.Http.SocketsHandler``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:117
msgid "``HttpSocketsHandler``"
msgstr "``HttpSocketsHandler``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:118 ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:134
msgid "``System.Net.Http.WinHttpHandler``"
msgstr "``System.Net.Http.WinHttpHandler``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:119
msgid "``WinHttpHandler``"
msgstr "``WinHttpHandler``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:120
msgid "``System.Net.WebRequest``"
msgstr "``System.Net.WebRequest``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:121
msgid "``WebRequest``"
msgstr "``WebRequest``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:122
msgid "``System.Messaging`` (Experimental)"
msgstr "``System.Messaging`` 実験"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:123
msgid "``Msmq``"
msgstr "``Msmq``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:124
msgid "Windows Communication Foundation (WCF)"
msgstr "ウィンドウズ・コミュニケーション・ファウンデーション（WCF）"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:125
msgid "``Wcf``"
msgstr "``Wcf``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:126
msgid "``xunit`` (Experimental)"
msgstr "``xunit`` 実験"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:127
msgid "``XUnit``"
msgstr "``XUnit``"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:129
msgid "To instrument the ``System.Net.Http.HttpClient`` library, you must instrument the following group of libraries:"
msgstr "``System.Net.Http.HttpClient`` ライブラリを計測するには、以下のライブラリ群を計測する必要がある："

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:139 ../../gdi/get-data-in/application/go/go-otel-requirements.rst:103 ../../gdi/get-data-in/application/java/java-otel-requirements.rst:33 ../../gdi/get-data-in/application/nodejs/nodejs-otel-requirements.rst:26 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:143 ../../gdi/get-data-in/application/python/python-otel-requirements.rst:29
msgid "Install and configure the Splunk Distribution of OpenTelemetry Collector"
msgstr "OpenTelemetry Collector の Splunk ディストリビューションのインストールと設定"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:141
msgid "The SignalFx Instrumentation for .NET exports application traces and spans to the Splunk Distribution of OpenTelemetry Collector, which also collects system metric data and logs, including profiling data."
msgstr "SignalFx Instrumentation for .NET は、アプリケーションのトレースとスパンを Splunk Distribution of OpenTelemetry Collector にエクスポートし、プロファイリングデータを含むシステムメトリックデータとログも収集します。"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:143 ../../gdi/get-data-in/application/go/go-otel-requirements.rst:107 ../../gdi/get-data-in/application/java/java-otel-requirements.rst:37 ../../gdi/get-data-in/application/nodejs/nodejs-otel-requirements.rst:30 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:147 ../../gdi/get-data-in/application/python/python-otel-requirements.rst:33
msgid "To send application traces and spans to Splunk Observability Cloud, install the Splunk Distribution of OpenTelemetry Collector for your platform. The following distributions are available:"
msgstr "アプリケーションのトレースとスパンを Splunk Observability Cloud に送信するには、お使いのプラットフォーム用の OpenTelemetry Collector の Splunk Distribution をインストールします。以下のディストリビューションが利用できる："

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:145 ../../gdi/get-data-in/application/go/go-otel-requirements.rst:109 ../../gdi/get-data-in/application/java/java-otel-requirements.rst:39 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:149 ../../gdi/get-data-in/application/python/python-otel-requirements.rst:35 ../../gdi/get-data-in/application/ruby/ruby-otel-requirements.rst:35
msgid "Splunk OTel Collector for Linux. See :ref:`otel-install-linux`."
msgstr "Linux 用 Splunk OTel Collector。:ref:`otel-install-linux` を参照。"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:146 ../../gdi/get-data-in/application/go/go-otel-requirements.rst:110 ../../gdi/get-data-in/application/java/java-otel-requirements.rst:40 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:150 ../../gdi/get-data-in/application/python/python-otel-requirements.rst:36 ../../gdi/get-data-in/application/ruby/ruby-otel-requirements.rst:36
msgid "Splunk OTel Collector for Windows. See :ref:`otel-install-windows`."
msgstr "Windows 用 Splunk OTel Collector。:ref:`otel-install-windows` を参照。"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:147 ../../gdi/get-data-in/application/go/go-otel-requirements.rst:111 ../../gdi/get-data-in/application/java/java-otel-requirements.rst:41 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:151 ../../gdi/get-data-in/application/python/python-otel-requirements.rst:37 ../../gdi/get-data-in/application/ruby/ruby-otel-requirements.rst:37
msgid "Splunk OTel Collector for Kubernetes. See :ref:`otel-install-k8s`."
msgstr "Kubernetes 用 Splunk OTel Collector。:ref:`otel-install-k8s` を参照。"

#: ../../gdi/get-data-in/application/dotnet/dotnet-requirements.rst:149
msgid "The OTel Collector is not required when instrumenting Azure App Service applications. See :ref:`instrument-azure-app`."
msgstr "Azure App Service アプリケーションをインスツルメンテーションする場合、OTel Collector は必要ありません。:ref:`instrument-azure-app` を参照。"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:11 ../../gdi/get-data-in/application/go/get-started.rst:11 ../../gdi/get-data-in/application/istio/istio.rst:16 ../../gdi/get-data-in/application/java/get-started.rst:10 ../../gdi/get-data-in/application/nodejs/get-started.rst:10 ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:10 ../../gdi/get-data-in/application/php/get-started.rst:10 ../../gdi/get-data-in/application/python/get-started.rst:11 ../../gdi/get-data-in/application/ruby/get-started.rst:11 ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:22 ../../gdi/monitors-databases/hadoopjmx.md:25 ../../gdi/monitors-hosts/systemd.md:16
#: ../../gdi/monitors-hosts/varnish.md:16 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:15 ../../gdi/opentelemetry/components/postgresql-receiver.rst:15 ../../gdi/opentelemetry/opentelemetry.rst:10
msgid "Requirements"
msgstr "必要条件"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:11 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:46 ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:10 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:41
msgid "Instrument a .NET application"
msgstr ".NETアプリケーションのインストルメント"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:11 ../../gdi/get-data-in/application/go/get-started.rst:11 ../../gdi/get-data-in/application/java/get-started.rst:10 ../../gdi/get-data-in/application/nodejs/get-started.rst:10 ../../gdi/get-data-in/application/python/get-started.rst:11 ../../gdi/get-data-in/application/ruby/get-started.rst:11
msgid "Connect trace data with logs"
msgstr "トレースデータとログをつなぐ"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:11 ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:10 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:45
msgid "Configure the .NET instrumentation"
msgstr ".NETインストルメンテーションの設定"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:11 ../../gdi/get-data-in/application/go/get-started.rst:11 ../../gdi/get-data-in/application/java/get-started.rst:10 ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:10
msgid "Metrics and attributes"
msgstr "指標と属性"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:11 ../../gdi/get-data-in/application/go/get-started.rst:11 ../../gdi/get-data-in/application/java/get-started.rst:10 ../../gdi/get-data-in/application/nodejs/get-started.rst:10 ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:10 ../../gdi/get-data-in/application/php/get-started.rst:10 ../../gdi/get-data-in/application/python/get-started.rst:11 ../../gdi/get-data-in/application/ruby/get-started.rst:11
msgid "Manual instrumentation"
msgstr "手動計装"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:11 ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:10
msgid "Troubleshoot the .NET instrumentation"
msgstr ".NETインストルメンテーションのトラブルシューティング"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:-1
msgid "Instrument a .NET application to export metrics and spans to Splunk Observability Cloud."
msgstr "メトリクスとスパンを Splunk Observability Cloud にエクスポートするために、.NET アプリケーションをインストルメントする。"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:5
msgid "Instrument .NET applications for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 向けに .NET アプリケーションを構築する"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:22
msgid "The SignalFx Instrumentation for .NET provides automatic instrumentation for popular .NET libraries and frameworks to collect and send telemetry data to Splunk Observability Cloud."
msgstr "SignalFx Instrumentation for .NET は、一般的な .NET ライブラリとフレームワークの自動インストルメンテーションを提供し、テレメトリデータを収集して Splunk Observability Cloud に送信します。"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:24
msgid "To use the experimental OpenTelemetry instrumentation for .NET, see :ref:`get-started-dotnet-otel`."
msgstr ".NET用の実験的なOpenTelemetry計測器を使用するには、:ref:`get-started-dotnet-otel` を参照してください。"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:32
msgid "The SignalFx Instrumentation for .NET provides the following features:"
msgstr "SignalFx Instrumentation for .NETは以下の機能を提供します："

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:34
msgid "Collection and reporting of all spans"
msgstr "全スパンの収集と報告"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:35
msgid "AlwaysOn Profiling for CPU and memory"
msgstr "CPUとメモリのAlwaysOnプロファイリング"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:36
msgid "B3 and W3C headers for context propagation"
msgstr "コンテキスト伝播のためのB3とW3Cヘッダー"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:37
msgid "Zipkin trace exporter to send spans as JSON"
msgstr "スパンをJSONとして送信するZipkinトレースエクスポーター"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:38
msgid "Support for existing custom instrumentation through OpenTracing"
msgstr "OpenTracingによる既存のカスタム計装のサポート"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:39
msgid "Semantic conventions inspired by the OpenTelemetry standards"
msgstr "OpenTelemetry標準にインスパイアされた意味規約"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:47 ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:47
msgid "To instrument your .NET application, follow these steps:"
msgstr ".NETアプリケーションを計測するには、以下の手順に従います："

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:49
msgid "Check compatibility and requirements. See :ref:`dotnet-requirements`."
msgstr "互換性と必要条件を確認してください。:ref:`dotnet-requirements` を参照。"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:50
msgid "Instrument your .NET application. See :ref:`instrument-dotnet-applications`."
msgstr ".NETアプリケーションを計測する。:ref:`instrument-dotnet-applications` を参照。"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:51
msgid "Configure your instrumentation. See :ref:`advanced-dotnet-configuration`."
msgstr "計測器を設定する。:ref:`advanced-dotnet-configuration` を参照。"

#: ../../gdi/get-data-in/application/dotnet/get-started.rst:53
msgid "You can also automatically instrument your .NET applications along with the Splunk Distribution of OpenTelemetry Collector installation. Automatic instrumentation removes the need to install and configure the .NET library separately. See :ref:`auto-instrumentation-dotnet` for the installation instructions."
msgstr "また、OpenTelemetry Collector の Splunk ディストリビューションのインストールと一緒に、.NET アプリケーションを自動的に計測することもできます。自動インストルメンテーションにより、.NETライブラリを個別にインストールして設定する必要がなくなる。取り付け方法は:ref:`auto-instrumentation-dotnet` を参照。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:-1
msgid "Configure .NET logging libraries to include tracing attributes provided automatically by the SignalFx Instrumentation for .NET."
msgstr "SignalFx Instrumentation for .NETによって自動的に提供されるトレース属性を含むように、.NETロギング・ライブラリを設定します。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:5
msgid "Connect .NET trace data with logs for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud で .NET トレースデータとログを接続する"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:10
msgid "You can configure logging libraries to include tracing attributes provided automatically by the SignalFx Instrumentation for .NET. Use the metadata to correlate traces with log events and explore logs in Splunk."
msgstr "SignalFx Instrumentation for .NETによって自動的に提供されるトレース属性を含むように、ロギング・ライブラリを構成することができます。メタデータを使用して、トレースとログイベントを関連付け、Splunk でログを探索します。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:15 ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:15 ../../gdi/get-data-in/rum/android/install-rum-android.rst:26 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:21 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:24 ../../gdi/get-data-in/rum/ios/troubleshooting.rst:26 ../../gdi/get-data-in/rum/react/install-rum-react.rst:19 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:45
msgid "Check compatibility and requirements"
msgstr "互換性と必要条件をチェック"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:17
msgid "The SignalFx Instrumentation supports the following logging libraries:"
msgstr "SignalFx Instrumentation は、以下のロギング・ライブラリをサポートしています："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:24
msgid "Versions"
msgstr "バージョン"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:25
msgid "Layouts"
msgstr "レイアウト"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:26 ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:159
msgid "ILogger"
msgstr "ILogger"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:27
msgid "2.5.0 to 6.x.x"
msgstr "2.5.0から6.x.xまで"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:28
msgid "JSON format: ``json`` from the ``NetEscapades.Extensions.Logging`` package"
msgstr "JSONフォーマット：``NetEscapades.Extensions.Logging`` パッケージの``json`` "

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:29 ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:67
msgid "Log4Net"
msgstr "ログ4ネット"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:30
msgid "1.0.0 to 2.x.x"
msgstr "1.0.0から2.x.xまで"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:31
msgid "JSON format: ``SerializedLayout`` from the ``log4net.Ext.Json`` package"
msgstr "JSONフォーマット：``log4net.Ext.Json`` パッケージの``SerializedLayout`` "

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:32
msgid "Raw format: ``PatternLayout``"
msgstr "生のフォーマット： ``PatternLayout``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:33 ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:100
msgid "NLog"
msgstr "NLog"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:34
msgid "1.0.0.505 to 4.x.x"
msgstr "1.0.0.505から4.x.xまで"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:35
msgid "JSON format: ``JsonLayout``"
msgstr "JSON形式： ``JsonLayout``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:36
msgid "Raw format: Custom layout"
msgstr "生のフォーマット：カスタムレイアウト"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:37 ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:133
msgid "Serilog"
msgstr "セリログ"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:38
msgid "1.4.0 to 2.x.x"
msgstr "1.4.0から2.x.xまで"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:39
msgid "JSON format: ``JsonFormatter`` or ``CompactJsonFormatter`` from the ``Serilog.Formatting.Compact`` package"
msgstr "JSONフォーマット：``JsonFormatter`` または``Serilog.Formatting.Compact`` パッケージの``CompactJsonFormatter`` "

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:40
msgid "Raw format: Output template"
msgstr "生のフォーマット：出力テンプレート"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:45
msgid "Activate log correlation"
msgstr "ログ相関を有効にする"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:47
msgid "To activate log correlation, set the ``SIGNALFX_LOGS_INJECTION`` environment variable to ``true`` before running your instrumented application."
msgstr "ログの相関を有効にするには、インスツルメンテッド・アプリケーションを実行する前に、``SIGNALFX_LOGS_INJECTION`` 環境変数を``true`` に設定する。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:52 ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:26 ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:33 ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:20 ../../gdi/get-data-in/application/ruby/instrumentation/connect-traces-logs.rst:15
msgid "Include trace metadata in log statements"
msgstr "ログ文にトレースメタデータを含める"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:54
msgid "The SignalFx Instrumentation for .NET provides the following attributes for logging libraries:"
msgstr "SignalFx Instrumentation for .NET は、ロギング・ライブラリに以下の属性を提供します："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:56
msgid "``trace_id``"
msgstr "``trace_id``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:57
msgid "``span_id``"
msgstr "``span_id``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:58
msgid "``service.name``, as defined by the ``SIGNALFX_SERVICE_NAME`` environment variable"
msgstr "``service.name``環境変数``SIGNALFX_SERVICE_NAME`` で定義されている。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:59
msgid "``service.version``, as defined by the ``SIGNALFX_VERSION`` environment variable"
msgstr "``service.version``環境変数``SIGNALFX_VERSION`` で定義されている。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:60
msgid "``deployment.environment``, as defined by the ``SIGNALFX_ENV`` environment variable"
msgstr "``deployment.environment``環境変数``SIGNALFX_ENV`` で定義されている。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:62
msgid "If the logging library uses JSON, the tracing library automatically handles data injection."
msgstr "ロギングライブラリがJSONを使用する場合、トレースライブラリは自動的にデータ注入を処理します。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:64
msgid "If the logger uses a raw format, you must configure your logger to include the trace metadata. The following sections show how to configure the supported loggers to include trace metadata."
msgstr "ロガーが生フォーマットを使用する場合、トレース メタデータを含むようにロガーを設定する必要があります。以下のセクションでは、トレース メタデータを含むようにサポートされているロガーを設定する方法を示します。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:69
msgid "When using the ``SerializedLayout`` layout you can add all contextual properties by adding the properties member. For example:"
msgstr "``SerializedLayout`` レイアウトを使用する場合、properties メンバを追加することで、すべてのコンテクスト・プロパティを追加できます。例えば、こうだ："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:78 ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:110
msgid "You can also add the context fields explicitly. For example:"
msgstr "明示的にコンテキスト・フィールドを追加することもできる。例えば、こうだ："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:91
msgid "When using the ``PatternLayout`` layout, add the context fields manually. You must wrap the values in quotation marks. For example:"
msgstr "``PatternLayout`` レイアウトを使用する場合は、コンテキスト・フィールドを手動で追加してください。値を引用符で囲む必要があります。例えば、こうだ："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:102
msgid "When using the ``JsonLayout`` layout and NLog version 4.4.10 and higher, you can add all contextual properties by setting the ``includeMdlc`` attribute to ``true``. For example:"
msgstr "``JsonLayout`` レイアウトとNLogバージョン4.4.10以降を使用する場合、``includeMdlc`` 属性を``true`` に設定することで、すべてのコンテクスト・プロパティを追加することができます。例えば、こうだ："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:123
msgid "When using the custom layout, add the context fields manually. Values must be wrapped in quotation marks. For example:"
msgstr "カスタムレイアウトを使用する場合は、コンテキストフィールドを手動で追加してください。値は引用符で囲む。例えば、こうだ："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:135
msgid "To extract the trace context that you want to inject, enrich the ``LoggerConfiguration`` instance using the log context:"
msgstr "注入したいトレースコンテキストを抽出するには、ログコンテキストを使用して``LoggerConfiguration`` インスタンスをエンリッチします："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:142
msgid "When using the output template, you can either use the ``{Properties}`` placeholder to print all contextual properties or add context fields manually."
msgstr "出力テ ンプ レー ト を使用す る 際には、``{Properties}`` プ レース ホルダ を用いてすべての コ ン テ キ ス ト プ ロ パテ ィ を印字す る か、 ま たは コ ン テ キ ス ト フ ィ ール ド を手動で追加す る こ と がで き ます。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:144
msgid "When adding context fields manually, wrap the values in quotation marks. For example:"
msgstr "コンテキスト・フィールドを手動で追加する場合は、値を引用符で囲んでください。例えば、こうだ："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:150
msgid "The instrumentation uses the underscore character as separator for field names (``_``), as Serilog doesn't support property names that use the dot separator (``.``). To ingest log data, define the following conversion rules:"
msgstr "Serilog はドット区切り (``.``) を使用するプロパティ名をサポートしていないため、インスツルメンテーションではフィールド名の区切り文字としてアンダースコア文字を使用しています (``_``)。ログデータを取り込むには、以下の変換ルールを定義する："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:152
msgid "``service_name`` to ``service.name``"
msgstr "``service_name`` への ``service.name``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:153
msgid "``service_version`` to ``service.version``"
msgstr "``service_version`` への ``service.version``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:154
msgid "``deployment_environment`` to ``deployment.environment``"
msgstr "``deployment_environment`` への ``deployment.environment``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:156
msgid "See :ref:`logs-processors` for more information on how to define log transformation rules."
msgstr "ログ変換ルールの定義方法については、:ref:`logs-processors` を参照。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:161
msgid "When using the ``NetEscapades.Extensions.Logging.RollingFile`` package, activate the ``IncludeScopes`` option and use the ``json`` formatter. For example:"
msgstr "``NetEscapades.Extensions.Logging.RollingFile`` パッケージを使用する場合は、``IncludeScopes`` オプションを有効にし、``json`` フォーマッターを使用する。例えば、こうだ："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:175
msgid "SignalFx Instrumentation for .NET only supports ILogger 2.5.0 or higher."
msgstr "SignalFx Instrumentation for .NETはILogger 2.5.0以降のみをサポートしています。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:177
msgid "Log correlation also works when ILogger is wrapping other supported loggers."
msgstr "ログ相関は、ILogger が他のサポートされているロガーをラップしている場合にも機能します。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:180
msgid "Sample applications"
msgstr "サンプル・アプリケーション"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/connect-traces-logs.rst:182
msgid "To download several sample applications that show how to configure log correlation, see https://github.com/signalfx/signalfx-dotnet-tracing/tree/main/tracer/samples/AutomaticTraceIdInjection on GitHub."
msgstr "ログ相関の設定方法を示すいくつかのサンプル・アプリケーションをダウンロードするには、GitHubのhttps://github.com/signalfx/signalfx-dotnet-tracing/tree/main/tracer/samples/AutomaticTraceIdInjection。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:-1
msgid "The SignalFx Instrumentation for .NET automatically instruments .NET applications, Windows services running .NET applications, ASP.NET applications deployed on IIS, and Azure App Service apps. Follow these steps to get started."
msgstr "SignalFx Instrumentation for .NETは、.NETアプリケーション、.NETアプリケーションを実行するWindowsサービス、IIS上に配置されたASP.NETアプリケーション、およびAzure App Serviceアプリケーションを自動的に計測します。以下の手順で始めましょう。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:5
msgid "Instrument a .NET application for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 向けに .NET アプリケーションをインストルメントする"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:10
msgid "The SignalFx Instrumentation for .NET automatically instruments .NET applications, Windows services running .NET applications, ASP.NET applications deployed on IIS, and Azure App Service applications."
msgstr "SignalFx Instrumentation for .NETは、.NETアプリケーション、.NETアプリケーションを実行するWindowsサービス、IIS上に配置されたASP.NETアプリケーション、およびAzure App Serviceアプリケーションを自動的に計測します。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:12 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:12 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:14 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:12 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:12 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:12
msgid "To get started, use the guided setup or follow the instructions manually."
msgstr "開始するには、ガイド付きセットアップを使用するか、手動で指示に従ってください。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:15 ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:13 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:13 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:15 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:17 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:15 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:15
#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:15 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:36 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:13
msgid "Generate customized instructions using the guided setup"
msgstr "ガイド付きセットアップを使用してカスタマイズされた指示を生成する"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:17
msgid "To generate all the basic installation commands for your environment and application, use the .NET guided setup. To access the .NET guided setup, follow these steps:"
msgstr "あなたの環境とアプリケーションのためのすべての基本的なインストールコマンドを生成するには、.NETガイド付きセットアップを使用します。.NETガイド付きセットアップにアクセスするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:19 ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:17 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:17 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:19 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:21 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:19 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:19
#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:19 ../../gdi/get-data-in/compute/k8s.rst:28 ../../gdi/get-data-in/compute/linux.rst:27 ../../gdi/get-data-in/compute/windows.rst:31 ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:21 ../../gdi/get-data-in/connect/gcp/gcp.rst:161 ../../gdi/get-data-in/rum/android/get-android-data-in.rst:29 ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:33 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:57 ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:29 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:42 ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:30
#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:39 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:17 ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:20 ../../gdi/opentelemetry/deployments/deployments-fargate.rst:28 ../../gdi/opentelemetry/install-the-collector.rst:37 ../../gdi/opentelemetry/legacy-otel-mappings.md:37
msgid "Log in to Splunk Observability Cloud."
msgstr "Splunk Observability Cloud にログインする。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:20
msgid "Open the :new-page:`.NET guided setup <https://login.signalfx.com/#/gdi/scripted/dotnet-tracing/step-1?category=product-apm&gdiState=%7B\"integrationId\":\"dotnet-tracing\"%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`.NET ガイド付きセットアップ<https://login.signalfx.com/#/gdi/scripted/dotnet-tracing/step-1?category=product-apm&gdiState=%7B\"integrationId\":\"dotnet-tracing\"%7D>` を開く。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:22 ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:20 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:20 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:22 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:24 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:22 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:22
#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:22 ../../gdi/get-data-in/integrations.rst:1171 ../../gdi/get-data-in/rum/android/get-android-data-in.rst:33 ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:36 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:58
msgid "In the navigation menu, select :menuselection:`Data Management`."
msgstr "ナビゲーションメニューで、:menuselection:`データ管理` を選択する。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:24 ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:22 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:22 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:24 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:25 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:24 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:24
#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:24 ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:25 ../../gdi/get-data-in/integrations.rst:1172 ../../gdi/get-data-in/rum/android/get-android-data-in.rst:35 ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:38 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:59 ../../gdi/opentelemetry/install-the-collector.rst:41
msgid "Select :guilabel:`Add Integration` to open the :guilabel:`Integrate Your Data` page."
msgstr ":guilabel:`Add Integration` を選択して、:guilabel:`Integrate Your Data` ページを開きます。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:26 ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:24 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:24 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:26 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:26 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:26 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:26
#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:26
msgid "In the integration filter menu, select :guilabel:`By Product`."
msgstr "統合フィルターメニューで、:guilabel:`By Product` を選択する。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:28 ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:26 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:26 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:28 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:27 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:28 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:28
#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:28
msgid "Select the :guilabel:`APM` product."
msgstr ":guilabel:`APM` 製品を選択してください。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:30
msgid "Select the :guilabel:`.NET` tile to open the .NET guided setup."
msgstr ":guilabel:`.NET` タイルを選択し、.NET ガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:33
msgid "Install the SignalFx Instrumentation for .NET manually"
msgstr "SignalFx Instrumentation for .NETを手動でインストールします。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:35
msgid "Follow these instructions to install the SignalFx Instrumentation for .NET:"
msgstr "以下の手順に従って、SignalFx Instrumentation for .NETをインストールしてください："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:37
msgid ":ref:`install-dotnet-instrumentation`"
msgstr ":ref:`install-dotnet-instrumentation`"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:38
msgid ":ref:`instrument-windows-service`"
msgstr ":ref:`instrument-windows-service`"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:39
msgid ":ref:`instrument-aspnet-iis`"
msgstr ":ref:`instrument-aspnet-iis`"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:40
msgid ":ref:`instrument-azure-app`"
msgstr ":ref:`instrument-azure-app`"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:41
msgid ":ref:`instrument-azure-webjobs`"
msgstr ":ref:`instrument-azure-webjobs`"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:48 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:43 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:45
msgid "Follow these steps to automatically instrument your application:"
msgstr "以下の手順に従って、アプリケーションを自動的に計測してください："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:50
msgid "Check that you meet the requirements. See :ref:`dotnet-requirements`."
msgstr "あなたが条件を満たしていることを確認してください。:ref:`dotnet-requirements` を参照。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:52
msgid "Download the latest release of the SignalFx Instrumentation for .NET for your operating system from the :new-page:`Releases page on GitHub <https://github.com/signalfx/signalfx-dotnet-tracing/releases/latest>`."
msgstr "お使いのオペレーティング・システムに対応したSignalFx Instrumentation for .NETの最新リリースは、GitHub<https://github.com/signalfx/signalfx-dotnet-tracing/releases/latest>` の:new-page:`Releasesページからダウンロードしてください。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:54
msgid "Install the package for your operating system:"
msgstr "お使いのオペレーティングシステム用のパッケージをインストールしてください："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:58 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:93
msgid "Windows (PowerShell)"
msgstr "Windows (PowerShell)"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:70 ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:214 ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:21 ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:108 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:103 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:12 ../../gdi/opentelemetry/deployments/deployments-chef.rst:24 ../../gdi/opentelemetry/deployments/deployments-salt.rst:24
#: ../../gdi/smart-agent/smart-agent-resources.rst:90
msgid "Linux"
msgstr "Linux"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:89 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:63
msgid "Set the following environment variables:"
msgstr "以下の環境変数を設定する："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:105
msgid "Avoid setting the environment variables in the system or user scopes in Windows unless you require permanent autoinstrumentation. See :ref:`advanced-dotnet-configuration` for more information on how to include or exclude processes for autoinstrumentation."
msgstr "恒久的な自動計測が必要な場合を除き、Windowsのシステム・スコープやユーザー・スコープに環境変数を設定することは避けてください。自動計測にプロセスを含める、または除外する方法の詳細については、:ref:`advanced-dotnet-configuration` を参照してください。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:116
msgid "(Optional) To activate automatic metric collection, see :ref:`enable_automatic_metric_collection_dotnet`."
msgstr "(オプション) 自動メトリック収集を有効にするには、:ref:`enable_automatic_metric_collection_dotnet` を参照してください。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:118 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:96 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:133
msgid "Run your application."
msgstr "アプリケーションを実行する。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:120
msgid "If no data appears in APM, see :ref:`common-dotnet-troubleshooting`."
msgstr "APM にデータが表示されない場合は、:ref:`common-dotnet-troubleshooting` を参照してください。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:122
msgid "If you need to add custom attributes to spans or want to manually generate spans, instrument your .NET application or service manually. See :ref:`dotnet-manual-instrumentation`."
msgstr "スパンにカスタム属性を追加する必要がある場合、またはスパンを手動で生成する場合は、.NETアプリケーションまたはサービスを手動で計測してください。:ref:`dotnet-manual-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:127 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:115 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:110
msgid "Activate AlwaysOn Profiling"
msgstr "AlwaysOn プロファイリングを有効にする"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:129
msgid "To activate AlwaysOn Profiling, set the ``SIGNALFX_PROFILER_ENABLED`` environment variable to ``true``."
msgstr "AlwaysOn Profiling を有効にするには、環境変数``SIGNALFX_PROFILER_ENABLED`` を``true`` に設定する。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:131
msgid "To activate memory profiling, set the ``SIGNALFX_PROFILER_MEMORY_ENABLED`` environment variable to ``true`` after activating AlwaysOn Profiling."
msgstr "メモリプロファイリングを有効にするには、AlwaysOn プロファイリングを有効にした後、``SIGNALFX_PROFILER_MEMORY_ENABLED`` 環境変数を``true`` に設定します。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:133
msgid "See :ref:`get-data-in-profiling` for more information. For more settings, see :ref:`profiling-configuration-dotnet`."
msgstr "詳しくは:ref:`get-data-in-profiling` 。詳細な設定については、:ref:`profiling-configuration-dotnet` を参照してください。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:140
msgid "To activate automatic metric collection, set the ``SIGNALFX_TRACE_METRICS_ENABLED`` environment variable to ``true``."
msgstr "自動メトリック収集を有効にするには、``SIGNALFX_TRACE_METRICS_ENABLED`` 環境変数を``true`` に設定する。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:142
msgid "To activate runtime metrics, set the ``SIGNALFX_RUNTIME_METRICS_ENABLED`` environment variable to ``true``."
msgstr "ランタイム・メトリクスを有効にするには、``SIGNALFX_RUNTIME_METRICS_ENABLED`` 環境変数を``true`` に設定します。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:144
msgid "See :ref:`dotnet-metrics-attributes` for more information about the metrics collected by the instrumentation. For more metric settings, see :ref:`dotnet-metric-settings`."
msgstr "インスツルメンテーションによって収集されるメトリクスの詳細については、:ref:`dotnet-metrics-attributes` を参照してください。その他のメトリック設定については、:ref:`dotnet-metric-settings` を参照のこと。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:146
msgid "Runtime metrics are always collected if AlwaysOn Profiling is activated."
msgstr "AlwaysOn Profiling が有効になっている場合、ランタイム・メトリクスは常に収集されます。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:151
msgid "Instrument a Windows service running a .NET application"
msgstr ".NETアプリケーションを実行しているWindowsサービスをインストルメントする"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:153
msgid "To instrument a Windows service, install the instrumentation and set the following environment variables:"
msgstr "Windowsサービスをインストルメントするには、インストルメントをインストールし、以下の環境変数を設定する："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:169
msgid "For more information on the default service name, see :ref:`dotnet-default-service-name`."
msgstr "デフォルトのサービス名の詳細については、:ref:`dotnet-default-service-name` を参照。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:174
msgid "Instrument an ASP.NET application deployed on IIS"
msgstr "IISにデプロイされたASP.NETアプリケーションを計測する"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:176
msgid "To instrument an ASP.NET application running on IIS, install the instrumentation and edit the web.config file to add the following settings. See :ref:`configuration-methods-dotnet` for more information."
msgstr "IIS上で動作するASP.NETアプリケーションを計測するには、計測機能をインストールし、web.configファイルを編集して以下の設定を追加する。詳しくは:ref:`configuration-methods-dotnet` 。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:180
msgid "ASP.NET 4.x and higher"
msgstr "ASP.NET 4.x以上"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:182
msgid "Add the following settings inside the ``<appSettings>`` block of your web.config file:"
msgstr "web.configファイルの``<appSettings>`` ブロック内に以下の設定を追加します："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:189 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:210
msgid "After applying the changes to the web.config file, restart IIS by running the following command:"
msgstr "web.configファイルに変更を適用した後、以下のコマンドを実行してIISを再起動する："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:195 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:216
msgid "In some cases, you might have to restart the machine."
msgstr "場合によっては、マシンを再起動する必要があるかもしれません。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:199
msgid "Add the following settings inside the ``<aspNetCore>`` block of your web.config file:"
msgstr "web.configファイルの``<aspNetCore>`` ブロック内に以下の設定を追加します："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:218
msgid "The ASP.NET Core instrumentation collects and obfuscates query strings by default. See :ref:`dotnet-instrumentation-query-strings` for more information."
msgstr "ASP.NET Coreインスツルメンテーションは、デフォルトでクエリー文字列を収集し、難読化する。詳しくは:ref:`dotnet-instrumentation-query-strings` 。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:220
msgid "By default, the installer activates IIS instrumentation for .NET Framework by setting the ``Environment`` registry key for W3SVC and WAS services located in the ``HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services`` folder."
msgstr "デフォルトでは、インストーラーは、``HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services`` フォルダーにある W3SVC と WAS サービス用の``Environment`` レジストリキーを設定することで、.NET Framework 用の IIS インストルメンテーションを有効にします。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:225
msgid "Instrument an application in Azure App Service"
msgstr "Azure App Serviceでアプリケーションをインストゥルメントする"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:227
msgid "To instrument an application or service in Azure App Service, follow these steps:"
msgstr "Azure App Serviceでアプリケーションやサービスを計測するには、以下の手順に従います："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:229
msgid "Select your application in App Service."
msgstr "App Serviceでアプリケーションを選択します。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:231
msgid "Go to :guilabel:`Development Tools`, then :guilabel:` Extensions`."
msgstr ":guilabel:`開発ツール` 、次に:guilabel:` 拡張機能` 。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:233
msgid "Find and install the :strong:`SignalFx .NET Tracing` extension."
msgstr ":strong:`SignalFx .NET Tracing` 拡張機能を見つけてインストールします。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:235 ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:31
msgid "Go to :guilabel:`Settings`, then :guilabel:` Configuration`."
msgstr ":guilabel:`設定` 、次に:guilabel:` 設定` 。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:237 ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:33
msgid "Select :strong:`New application setting` to add the following settings:"
msgstr ":strong:`New application setting` を選択し、以下の設定を追加する："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:244 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:271 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:29 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:67 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:156 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:193 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:231 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:256 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:283
#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:302 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:340 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:372 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:402 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:428 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:33 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:49 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:81 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:105 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:187
#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:225 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:252 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:273 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:291 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:320 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:362 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:390 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:482 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:384
#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:191 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:28 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:135 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:177 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:73 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:122 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:145 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:174 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:211 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:252 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:278
#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:297 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:320 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:343 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:376 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:398 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:29 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:78 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:101 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:124 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:164 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:190
#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:219 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:241 ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:40 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/opentelemetry/components.rst:68 ../../gdi/opentelemetry/components.rst:194 ../../gdi/opentelemetry/components.rst:255 ../../gdi/opentelemetry/components.rst:299 ../../gdi/opentelemetry/components/databricks-receiver.rst:85 ../../gdi/opentelemetry/deployments/deployments-chef.rst:67 ../../gdi/opentelemetry/deployments/deployments-chef.rst:141 ../../gdi/opentelemetry/deployments/deployments-chef.rst:186
#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:50 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:124 ../../gdi/opentelemetry/deployments/deployments-salt.rst:59 ../../gdi/opentelemetry/deployments/deployments-salt.rst:133 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:38
msgid "Name"
msgstr "名称"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:245 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:272 ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:114 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:239 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:341 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:398 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:305
#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:333 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:355 ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:99 ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:41 ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:132
msgid "Value"
msgstr "価値"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:247 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:274 ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:43
msgid "Your Splunk access token. To obtain an access token, see :ref:`admin-api-access-tokens`."
msgstr "Splunk アクセストークン。アクセストークンを取得するには、:ref:`admin-api-access-tokens` を参照してください。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:249 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:276
msgid "``realm`` is the Splunk Observability Cloud realm, for example, ``us0``. To find the realm name of your account, open the navigation menu in Splunk Observability Cloud, select :menuselection:`Settings`, and select your username. The realm name appears in the :guilabel:`Organizations` section."
msgstr "``realm`` は Splunk Observability Cloud の領域で、たとえば``us0`` 。アカウントのレルム名を確認するには、Splunk Observability Cloud のナビゲーションメニューを開き、:menuselection:`Settings` を選択し、ユーザー名を選択します。レルム名は:guilabel:`Organizations` セクションに表示される。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:251 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:278
msgid "The name of your service or application."
msgstr "サービスまたはアプリケーションの名前。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:253 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:280
msgid "The name of your environment where you're instrumenting the application."
msgstr "アプリケーションをインスツルメンテーションする環境名。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:255
msgid "Restart the application in App Service."
msgstr "App Serviceでアプリケーションを再起動する。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:257
msgid "To reduce latency and benefit from OTel Collector features, set the endpoint URL to a Collector instance running in Azure VM over an Azure VNet."
msgstr "待ち時間を短縮し、OTel Collectorの機能を利用するには、エンドポイントURLをAzure VNet上のAzure VMで実行されているCollectorインスタンスに設定します。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:262
msgid "Instrument a background task in Azure App Service"
msgstr "Azure App Serviceでバックグラウンドタスクをインストルメントする"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:264
msgid "When instrumenting an Azure WebJob in App Service, add the following settings. Replace ``<extension-version>`` in system paths with the version of the .NET instrumentation, for example, ``v0.2.0``:"
msgstr "App ServiceでAzure WebJobをインスツルメンテーションする場合、以下の設定を追加します。システムパスの``<extension-version>`` は、.NET インストルメンテーションのバージョンに置き換えてください（例：``v0.2.0`` ："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:281 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:334
msgid "``COR_ENABLE_PROFILING``"
msgstr "``COR_ENABLE_PROFILING``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:282 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:292 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:307 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:335 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:357
msgid "``1``"
msgstr "``1``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:283 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:336
msgid "``COR_PROFILER``"
msgstr "``COR_PROFILER``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:284 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:294
msgid "``{B4C89B0F-9908-4F73-9F59-0D77C5A06874}``"
msgstr "``{B4C89B0F-9908-4F73-9F59-0D77C5A06874}``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:285
msgid "``COR_PROFILER_PATH``"
msgstr "``COR_PROFILER_PATH``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:286 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:290 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:298
msgid "``C:\\home\\signalfx\\tracing\\<extension-version>\\win-x64\\SignalFx.Tracing.ClrProfiler.Native.dll``"
msgstr "``C:\\home\\signalfx\\tracing\\<extension-version>\\win-x64\\SignalFx.Tracing.ClrProfiler.Native.dll``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:287 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:340
msgid "``COR_PROFILER_PATH_32``"
msgstr "``COR_PROFILER_PATH_32``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:288 ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:296
msgid "``C:\\home\\signalfx\\tracing\\<extension-version>\\win-x86\\SignalFx.Tracing.ClrProfiler.Native.dll``"
msgstr "``C:\\home\\signalfx\\tracing\\<extension-version>\\win-x86\\SignalFx.Tracing.ClrProfiler.Native.dll``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:289 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:338
msgid "``COR_PROFILER_PATH_64``"
msgstr "``COR_PROFILER_PATH_64``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:291 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:306 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:356
msgid "``CORECLR_ENABLE_PROFILING``"
msgstr "``CORECLR_ENABLE_PROFILING``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:293 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:308 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:358
msgid "``CORECLR_PROFILER``"
msgstr "``CORECLR_PROFILER``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:295 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:312
msgid "``CORECLR_PROFILER_PATH_32``"
msgstr "``CORECLR_PROFILER_PATH_32``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:297 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:310
msgid "``CORECLR_PROFILER_PATH_64``"
msgstr "``CORECLR_PROFILER_PATH_64``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:300
msgid "``C:\\home\\signalfx\\tracing\\<extension-version>``"
msgstr "``C:\\home\\signalfx\\tracing\\<extension-version>``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:302
msgid "``SnapshotUploader.exe;workerforwarder.exe``"
msgstr "``SnapshotUploader.exe;workerforwarder.exe``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:303
msgid "``SIGNALFX_TRACE_LOG_PATH``"
msgstr "``SIGNALFX_TRACE_LOG_PATH``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:304
msgid "``C:\\home\\LogFiles\\signalfx\\tracing\\<extension-version>\\dotnet-profiler.log``"
msgstr "``C:\\home\\LogFiles\\signalfx\\tracing\\<extension-version>\\dotnet-profiler.log``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:306
msgid "``0``"
msgstr "``0``"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:308
msgid "Set ``SIGNALFX_AZURE_APP_SERVICES`` to ``0`` when instrumenting WebJobs. Keep a separate App Service for the WebJob, so that you can use separate settings for your application and for the background service."
msgstr "WebJobsのインストルメントを作成する場合は、``SIGNALFX_AZURE_APP_SERVICES`` を``0`` に設定してください。アプリケーションとバックグラウンドサービスに別々の設定を使用できるように、WebJob用に別々のApp Serviceを保持します。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:313
msgid "Deploy the .NET instrumentation in Kubernetes"
msgstr "Kubernetesに.NETインスツルメンテーションをデプロイする"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:315
msgid "To deploy the .NET instrumentation in Kubernetes, configure the Kubernetes Downward API to expose environment variables to Kubernetes resources."
msgstr ".NETインスツルメンテーションをKubernetesにデプロイするには、KubernetesダウンワードAPIを設定して、環境変数をKubernetesリソースに公開する。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:317 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:192 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:146 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:139 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:133
msgid "The following example shows how to update a deployment to expose environment variables by adding the agent configuration under the ``.spec.template.spec.containers.env`` section:"
msgstr "次の例は、``.spec.template.spec.containers.env`` セクションにエージェント設定を追加して、環境変数を公開するように配置を更新する方法を示しています："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:354 ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:156 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:237 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:253 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:179 ../../gdi/get-data-in/application/other-languages.rst:195 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:175
#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:168 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:162
msgid "Send data directly to Splunk Observability Cloud"
msgstr "Splunk Observability Cloud に直接データを送信する"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:356
msgid "By default, the instrumentation sends all telemetry to the local instance of the Splunk Distribution of OpenTelemetry Collector."
msgstr "デフォルトでは、インスツルメンテーションはすべてのテレメトリを OpenTelemetry Collector の Splunk ディストリビューションのローカルインスタンスに送信します。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:358 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:183 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:179
msgid "To bypass the OTel Collector and send data directly to Splunk Observability Cloud, set the following environment variables:"
msgstr "OTel Collector をバイパスして Splunk Observability Cloud に直接データを送信するには、以下の環境変数を設定します："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:372 ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:174 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:255 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:271 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:197 ../../gdi/get-data-in/application/other-languages.rst:207 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:193
#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:188 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:180 ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:20
msgid "To obtain an access token, see :ref:`admin-api-access-tokens`."
msgstr "アクセストークンを取得するには、:ref:`admin-api-access-tokens` を参照してください。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:374 ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:176 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:257 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:273 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:199 ../../gdi/get-data-in/application/other-languages.rst:209 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:195
#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:190 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:182 ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:79
msgid "In the ingest endpoint URL, ``realm`` is the Splunk Observability Cloud realm, for example, ``us0``. To find the realm name of your account, follow these steps:"
msgstr "インジェストエンドポイントの URL では、``realm`` は Splunk Observability Cloud のレルムで、例えば``us0`` 。アカウントのレルム名を見つけるには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:376 ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:178 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:259 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:275 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:201 ../../gdi/get-data-in/application/other-languages.rst:211 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:197
#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:192 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:184 ../../gdi/get-data-in/rum/android/install-rum-android.rst:161 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:99 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:178 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:131 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:217 ../../gdi/get-data-in/rum/ios/troubleshooting.rst:74 ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:79 ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:81
#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:24
msgid "Open the navigation menu in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud のナビゲーションメニューを開きます。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:377 ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:179 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:260 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:276 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:202 ../../gdi/get-data-in/application/other-languages.rst:212 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:198
#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:193 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:185 ../../gdi/get-data-in/rum/android/install-rum-android.rst:162 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:100 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:179 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:132 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:218 ../../gdi/get-data-in/rum/ios/troubleshooting.rst:75 ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:80 ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:82
#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:25
msgid "Select :menuselection:`Settings`."
msgstr ":menuselection:`設定` を選択する。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:378 ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:180 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:261 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:277 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:203 ../../gdi/get-data-in/application/other-languages.rst:213 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:199
#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:194 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:186 ../../gdi/get-data-in/rum/android/install-rum-android.rst:163 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:101 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:180 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:133 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:219 ../../gdi/get-data-in/rum/ios/troubleshooting.rst:76 ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:81 ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:83
#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:26
msgid "Select your username."
msgstr "ユーザー名を選択してください。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:380 ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:182 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:263 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:279 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:205 ../../gdi/get-data-in/application/other-languages.rst:215 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:201
#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:196 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:188 ../../gdi/get-data-in/rum/android/install-rum-android.rst:165 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:103 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:182 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:135 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:221 ../../gdi/get-data-in/rum/ios/troubleshooting.rst:78 ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:83 ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:85
#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:28
msgid "The realm name appears in the :guilabel:`Organizations` section."
msgstr "レルム名は:guilabel:`Organizations` セクションに表示される。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:382 ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:184 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:265 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:281 ../../gdi/get-data-in/application/other-languages.rst:217 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:203 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:198
#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:190
msgid "For more information on the ingest API endpoints, see :new-page:`Send APM traces <https://dev.splunk.com/observability/docs/apm/send_traces/>`."
msgstr "インジェストAPIエンドポイントの詳細については、:new-page:`Send APM traces<https://dev.splunk.com/observability/docs/apm/send_traces/>` を参照。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/instrument-dotnet-application.rst:384 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:267 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:283
msgid "This procedure applies to spans and traces. To send AlwaysOn Profiling data, you must use the OTel Collector."
msgstr "この手順はスパンとトレースに適用される。AlwaysOn Profiling データを送信するには、OTel Collector を使用する必要があります。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/manual-dotnet-instrumentation.rst:-1 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:-1
msgid "Manually instrument your .NET application to add custom attributes to spans or manually generate spans. Keep reading to learn how to manually instrument your .NET application for Splunk Observability Cloud."
msgstr "スパンにカスタム属性を追加したり、スパンを手動で生成したりするために、.NETアプリケーションに手動でインスツルメンテーションを行います。Splunk Observability Cloud 用に .NET アプリケーションを手動で計測する方法について説明します。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/manual-dotnet-instrumentation.rst:5 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:5
msgid "Manually instrument .NET applications for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用に .NET アプリケーションを手動でインストルメントする"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/manual-dotnet-instrumentation.rst:10
msgid "The SignalFx Instrumentation for .NET provides and registers an OpenTracing-compatible global tracer that you can use to instrument your applications manually for Splunk Observability Cloud. Custom or manual instrumentation can be helpful when you need to add custom attributes to spans, or need to generate spans manually."
msgstr "SignalFx Instrumentation for .NET は、OpenTracing 互換のグローバルトレーサーを提供および登録し、Splunk Observability Cloud 用にアプリケーションを手動で計測するために使用できます。カスタムまたは手動のインスツルメンテーションは、スパンにカスタム属性を追加する必要がある場合や、スパンを手動で生成する必要がある場合に役立ちます。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/manual-dotnet-instrumentation.rst:12
msgid "The SignalFx Instrumentation for .NET supports OpenTracing version 0.12.1 and higher."
msgstr "SignalFx Instrumentation for .NETは、OpenTracingバージョン0.12.1以降をサポートしています。"

#: ../../gdi/get-data-in/application/dotnet/instrumentation/manual-dotnet-instrumentation.rst:14
msgid "To instrument your .NET application manually, follow these steps:"
msgstr ".NETアプリケーションを手動で計測するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/manual-dotnet-instrumentation.rst:16
msgid "Add the OpenTracing dependency to your project:"
msgstr "OpenTracingの依存関係をプロジェクトに追加します："

#: ../../gdi/get-data-in/application/dotnet/instrumentation/manual-dotnet-instrumentation.rst:22
msgid "Obtain the ``OpenTracing.Util.GlobalTracer`` instance and create spans:"
msgstr "``OpenTracing.Util.GlobalTracer`` インスタンスを取得し、スパンを作成する："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:-1 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:-1
msgid "If your instrumented .NET application is not sending data to Splunk Observability Cloud, or data is missing, follow these steps to identify and resolve the issue."
msgstr "インスツルメンテーションされた .NET アプリケーションが Splunk Observability Cloud にデータを送信しない、またはデータが欠落している場合は、以下の手順に従って問題を特定し、解決してください。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:5 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:5
msgid "Troubleshoot .NET instrumentation for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud の .NET インストルメンテーションのトラブルシューティング"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:10
msgid "When you instrument a .NET application using the SignalFx Instrumentation for .NET and you don't see your data in Splunk Observability Cloud, follow these troubleshooting steps."
msgstr "SignalFx Instrumentation for .NET を使用して .NET アプリケーションを計測したときに Splunk Observability Cloud にデータが表示されない場合は、以下のトラブルシューティング手順に従ってください。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:15 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:17 ../../gdi/opentelemetry/troubleshooting.rst:10
msgid "General troubleshooting"
msgstr "一般的なトラブルシューティング"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:17 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:19
msgid "Follow these steps to troubleshoot general instrumentation issues:"
msgstr "以下の手順に従って、一般的な計装の問題をトラブルシューティングしてください："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:19
msgid "Check that you've configured all settings according to your needs. See :ref:`advanced-dotnet-configuration`."
msgstr "ニーズに応じてすべての設定が完了していることを確認してください。:ref:`advanced-dotnet-configuration` を参照。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:21
msgid "Check what environment variables apply to your process using tools such as Process Explorer. On Linux, run ``cat /proc/<pid>/environ`` where ``<pid>`` is the process ID."
msgstr "プロセス・エクスプローラーなどのツールを使って、どの環境変数がプロセスに適用されるかを確認する。Linuxでは、``cat /proc/<pid>/environ`` を実行する。``<pid>`` はプロセスIDである。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:23
msgid "Make sure that all environment variables are configured use the following commands:"
msgstr "以下のコマンドを使用して、すべての環境変数が設定されていることを確認する："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:38 ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:26 ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:25 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:38 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:42 ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:24 ../../gdi/get-data-in/rum/android/troubleshooting.rst:32 ../../gdi/get-data-in/rum/ios/troubleshooting.rst:42
#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:76
msgid "Activate debug logging"
msgstr "デバッグ・ロギングの有効化"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:40
msgid "The SignalFx Instrumentation for .NET logs its configuration using ``INF`` log messages at startup."
msgstr "SignalFx Instrumentation for .NETは、起動時に``INF`` のログ・メッセージを使用して設定を記録します。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:42 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:40
msgid "You can activate debug logging to obtain more information about the issue:"
msgstr "デバッグ・ロギングを有効にして、問題についての詳細な情報を得ることができます："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:44
msgid "Set the ``SIGNALFX_TRACE_DEBUG`` environment variable to ``true`` before starting your instrumented application."
msgstr "インスツルメンテッド・アプリケーションを起動する前に、環境変数``SIGNALFX_TRACE_DEBUG`` を``true`` に設定する。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:46 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:44
msgid "Run your application or service and generate some activity."
msgstr "アプリケーションまたはサービスを実行し、アクティビティを生成する。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:48
msgid "Collect the debug logs. By default, log files are in the following locations:"
msgstr "デバッグログを収集する。デフォルトでは、ログファイルは以下の場所にある："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:50
msgid "Windows: ``%ProgramData%\\SignalFx .NET Tracing\\logs\\``"
msgstr "Windows: ``%ProgramData%\\SignalFx .NET Tracing\\logs\\``"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:51
msgid "Linux: ``/var/log/signalfx/dotnet/``. If it doesn't exist, run ``/opt/signalfx/createLogPath.sh``."
msgstr "Linux:``/var/log/signalfx/dotnet/``.存在しない場合は、``/opt/signalfx/createLogPath.sh`` を実行する。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:53
msgid "You can change the default location by updating the ``SIGNALFX_TRACE_LOG_DIRECTORY`` environment variable. See :ref:`dotnet-debug-logging-settings` for more information and settings."
msgstr "デフォルトの場所は、``SIGNALFX_TRACE_LOG_DIRECTORY`` 環境変数を更新することで変更できる。詳細と設定については:ref:`dotnet-debug-logging-settings` 。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:55 ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:46 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:56 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:55 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:65 ../../gdi/get-data-in/rum/android/troubleshooting.rst:48 ../../gdi/get-data-in/rum/ios/troubleshooting.rst:58
msgid "Activate debug logging only when needed. Debug mode requires more resources."
msgstr "必要なときだけデバッグ・ロギングを有効にする。デバッグモードはより多くのリソースを必要とする。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:58 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:58
msgid "Traces don't appear in Splunk Observability Cloud"
msgstr "Splunk Observability Cloud にトレースが表示されない"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:60 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:60
msgid "If traces from your instrumented application or service are not available in Splunk Observability Cloud, verify the OpenTelemetry Collector configuration:"
msgstr "インスツルメンテーションされたアプリケーションまたはサービスからのトレースが Splunk Observability Cloud で利用できない場合は、OpenTelemetry Collector の設定を確認してください："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:62
msgid "Make sure that the Splunk Distribution of OpenTelemetry Collector is running."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションが実行されていることを確認します。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:63
msgid "Make sure that a ``zipkin`` receiver and a ``sapm`` exporter are configured."
msgstr "``zipkin`` レシーバーと``sapm`` エクスポーターが設定されていることを確認する。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:64
msgid "Make sure that the ``access_token`` and ``endpoint`` fields are configured."
msgstr "``access_token`` 、``endpoint`` フィールドが設定されていることを確認する。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:65
msgid "Check that the traces pipeline is configured to use the ``zipkin`` receiver and ``sapm`` exporter."
msgstr "トレースパイプラインが``zipkin`` レシーバーと``sapm`` エクスポーターを使用するように設定されていることを確認します。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:68
msgid "Metrics don't appear in Splunk Observability Cloud"
msgstr "Splunk Observability Cloud にメトリクスが表示されない"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:70
msgid "If metrics from your instrumented application or service are not available in Splunk Observability Cloud, make sure that the following conditions are true:"
msgstr "インスツルメンテーションされたアプリケーションまたはサービスからのメトリクスが Splunk Observability Cloud で利用できない場合は、以下の条件が真であることを確認してください："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:72
msgid "The Splunk Distribution of OpenTelemetry Collector is running."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションが実行されています。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:73
msgid "A ``signalfx`` receiver and a ``signalfx`` exporter are configured."
msgstr "``signalfx`` レシーバーと``signalfx`` エクスポーターが構成されている。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:74
msgid "The ``access_token`` and ``realm`` fields are configured."
msgstr "``access_token`` 、``realm`` フィールドを設定する。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:75
msgid "The metrics pipeline is configured to use the ``signalfx`` receiver and ``signalfx`` exporter."
msgstr "メトリクス・パイプラインは、``signalfx`` レシーバーと``signalfx`` エクスポーターを使用するように構成されています。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:80
msgid ".NET instrumentation not working on Linux"
msgstr "Linux上で.NETインストルメンテーションが動作しない"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:82
msgid "Installing the instrumentation on Linux might fail if you use an incompatible package."
msgstr "互換性のないパッケージを使用すると、Linuxへのインストルメンテーションのインストールに失敗することがあります。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:84
msgid "Make sure that you're using an installation package that is compatible with your Linux distribution. To find out your distribution or package manager, run the following commands:"
msgstr "お使いのLinuxディストリビューションと互換性のあるインストールパッケージを使用していることを確認してください。ディストリビューションやパッケージ・マネージャーを調べるには、以下のコマンドを実行してください："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:96 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:88
msgid "High CPU usage"
msgstr "高いCPU使用率"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:98
msgid "By default, the SignalFx Instrumentation for .NET instruments all .NET processes running on the host automatically. This might significantly increase CPU usage if you've activated the instrumentation in the system or user scope. Make sure that the instrumentation's environment variables are always set in the process or terminal scope."
msgstr "デフォルトでは、SignalFx Instrumentation for .NETは、ホスト上で実行されているすべての.NETプロセスを自動的に計測します。システム・スコープやユーザー・スコープでインスツルメンテーションを有効にしている場合、CPU使用率が大幅に増加する可能性があります。インスツルメンテーションの環境変数が、常にプロセス・スコープまたはターミナル・スコープに設定されていることを確認する。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:100
msgid "To restrict global instrumentation to a set of processes, use the ``SIGNALFX_PROFILER_PROCESSES`` and ``SIGNALFX_PROFILER_EXCLUDE_PROCESSES`` environment variables, which include and exclude processes for instrumentation. See :ref:`advanced-dotnet-configuration` for more information."
msgstr "グローバル・インスツルメンテーションを一連のプロセスに制限するには、``SIGNALFX_PROFILER_PROCESSES`` と``SIGNALFX_PROFILER_EXCLUDE_PROCESSES`` 環境変数を使用する。詳しくは:ref:`advanced-dotnet-configuration` 。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:105
msgid "Troubleshoot AlwaysOn Profiling for .NET"
msgstr ".NET の AlwaysOn プロファイリングのトラブルシューティング"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:107 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:138
msgid "See the following common issues and fixes for AlwaysOn Profiling:"
msgstr "AlwaysOn プロファイリングに関する一般的な問題と修正については、以下を参照してください："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:110 ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:152 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:141
msgid "Check that AlwaysOn Profiling is activated"
msgstr "AlwaysOnプロファイリングが有効になっていることを確認する"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:112
msgid "The .NET instrumentation logs the string ``AlwaysOnProfiler::MemoryProfiling`` started at ``info`` log level. To check whether AlwaysOn Profiling is activated, search your logs for strings similar to the following:"
msgstr ".NETインスツルメンテーションは、``info`` ログレベルで開始された文字列``AlwaysOnProfiler::MemoryProfiling`` 。AlwaysOn プロファイリングが有効になっているかどうかを確認するには、以下のような文字列をログから検索します："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:118
msgid "If no string appears, make sure that you've activated the profiler by setting the ``SIGNALFX_PROFILER_ENABLED`` environment variable to ``true``. See :ref:`profiling-configuration-dotnet`."
msgstr "文字列が表示されない場合は、環境変数``SIGNALFX_PROFILER_ENABLED`` を``true`` に設定して、プロファイラが有効になっていることを確認してください。:ref:`profiling-configuration-dotnet` を参照。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:120
msgid "If you've activated the CPU profiler or the memory profiler on an unsupported runtime version, entries similar to the following entry appear in the logs:"
msgstr "サポートされていないランタイム・バージョンでCPUプロファイラーまたはメモリー・プロファイラーを有効にした場合、ログに以下のようなエントリーが表示されます："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:128 ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:163
msgid "Check the AlwaysOn Profiling configuration"
msgstr "AlwaysOnプロファイリングの設定を確認する"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:130
msgid "If AlwaysOn Profiling is :ref:`not working as intended <profiling-intro>`, check the configuration settings. The .NET instrumentation logs AlwaysOn Profiling settings using INF messages at startup. Search for the string ``TRACER CONFIGURATION``."
msgstr "AlwaysOn Profiling が:ref:`not working as intended <profiling-intro>` の場合は、構成設定を確認してください。.NET インスツルメンテーションは、起動時に INF メッセージを使用して AlwaysOn プロファイリング設定を記録します。``TRACER CONFIGURATION`` という文字列を検索する。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:133
msgid "Unsupported .NET version"
msgstr "サポートされていない.NETバージョン"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:135
msgid "To use AlwaysOn Profiling, upgrade your .NET version to .NET Core 3.1 or .NET 5.0 and higher. Memory profiling requires .NET 5.0 and higher, as ``ICorProfilerInfo10`` must be available in the runtime."
msgstr "AlwaysOn プロファイリングを使用するには、.NET のバージョンを .NET Core 3.1 または .NET 5.0 以降にアップグレードします。メモリー・プロファイリングには.NET 5.0以上が必要で、ランタイムで``ICorProfilerInfo10`` 。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:137
msgid "None of the .NET Framework versions is supported."
msgstr "どの.NET Frameworkバージョンもサポートしていない。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:140 ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:208 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:151
msgid "AlwaysOn Profiling data and logs don't appear in Splunk Observability Cloud"
msgstr "AlwaysOn Profiling のデータとログが Splunk Observability Cloud に表示されない"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:142 ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:210 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:153
msgid "Collector configuration issues might prevent AlwaysOn Profiling data and logs from appearing in Splunk Observability Cloud."
msgstr "コレクタ構成の問題により、AlwaysOn プロファイリングデータとログが Splunk Observability Cloud に表示されない場合があります。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:144 ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:212 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:155
msgid "To solve this issue, do the following:"
msgstr "この問題を解決するには、次のようにしてください："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:146
msgid "Check the configuration of the SignalFx Instrumentation for .NET, especially ``SIGNALFX_PROFILER_LOGS_ENDPOINT``."
msgstr "SignalFx Instrumentation for .NET、特に``SIGNALFX_PROFILER_LOGS_ENDPOINT`` の設定を確認してください。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:147 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:158
msgid "Verify that the Splunk Distribution of OpenTelemetry Collector is running at the expected endpoint and that the application host or container can resolve the host name and connect to the OTLP port."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションが期待されるエンドポイントで実行されていること、アプリケーションホストまたはコンテナがホスト名を解決して OTLP ポートに接続できることを確認します。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:148
msgid "Make sure that you're running the Splunk Distribution of OpenTelemetry Collector and that the version is 0.34 or higher. The required version for memory profiling is 0.44. Other collector distributions might not be able to route the log data that contains profiling data."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを実行していることと、バージョンが 0.34 以上であることを確認してください。メモリ・プロファイリングに必要なバージョンは0.44です。他のコレクタディストリビューションでは、プロファイリングデータを含むログデータをルーティングできないことがあります。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:149 ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:216
msgid "A custom configuration might override settings that let the collector handle profiling data. Make sure to configure an ``otlp`` receiver and a ``splunk_hec`` exporter with correct token and endpoint fields. The ``profiling`` pipeline must use the OTLP receiver and Splunk HEC exporter you've configured. See :ref:`splunk-hec-exporter` for more information."
msgstr "カスタム構成は、コレクタにプロファイリングデータを処理させる設定をオーバーライドする可能性があります。``otlp`` レシーバーと``splunk_hec`` エクスポーターを、正しいトークンとエンドポイントフィールドで設定してください。``profiling`` パイプラインは、設定した OTLP レシーバーと Splunk HEC エクスポーターを使用する必要があります。詳しくは:ref:`splunk-hec-exporter` 。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:151 ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:218 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:162
msgid "The following snippet contains a sample ``profiling`` pipeline:"
msgstr "次のスニペットには、``profiling`` パイプラインのサンプルが含まれています："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:181
msgid "Loss of profiling data or gaps in profiling data"
msgstr "プロファイリングデータの紛失またはギャップ"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:183
msgid "When the instrumentation can't send data to Splunk OpenTelemetry Collector due to full buffers, AlwaysOn Profiling activates the escape hatch, which drops all logs with profiling data until the buffers are empty."
msgstr "バッファがいっぱいで計測器が Splunk OpenTelemetry Collector にデータを送信できない場合、AlwaysOn Profiling はエスケープハッチを起動し、バッファが空になるまで、プロファイリングデータを含むすべてのログを削除します。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:185
msgid "If the escape hatch activates, it logs the following message:"
msgstr "エスケープハッチが作動すると、以下のメッセージが記録される："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:191
msgid "You can also look for the ``** THIS WILL RESULT IN LOSS OF PROFILING DATA **.`` message."
msgstr "また、``** THIS WILL RESULT IN LOSS OF PROFILING DATA **.`` のメッセージを探すこともできる。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:193
msgid "The thread sampler resumes its activity when any of the buffers is empty."
msgstr "スレッドサンプラーは、いずれかのバッファが空になると活動を再開する。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:195
msgid "To avoid the loss of profiling data due to full buffers, check the configuration and the communication layer between your process and the Splunk Distribution of OpenTelemetry Collector."
msgstr "フルバッファによるプロファイリングデータの損失を回避するには、プロセスと OpenTelemetry Collector の Splunk ディストリビューション間の設定と通信レイヤを確認してください。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:200
msgid "Uninstall the SignalFx Instrumentation for .NET"
msgstr "SignalFx Instrumentation for .NETをアンインストールします。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:202
msgid "To remove the SignalFx Instrumentation for .NET, follow the instructions for each operating system."
msgstr "SignalFx Instrumentation for .NETを削除するには、各オペレーティング・システムの手順に従ってください。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:205 ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:29 ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:116 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:47 ../../gdi/opentelemetry/deployments/deployments-chef.rst:35 ../../gdi/smart-agent/smart-agent-resources.rst:95
msgid "Windows"
msgstr "Windows"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:207 ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:216
msgid "Follow these steps to remove the SignalFx Instrumentation for .NET:"
msgstr "以下の手順に従って、SignalFx Instrumentation for .NETを削除してください："

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:209 ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:218
msgid "Stop all instrumented services or applications."
msgstr "インスツルメンテッドなサービスまたはアプリケーションをすべて停止する。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:210 ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:219
msgid "Remove all environment variables you might have set for the instrumentation."
msgstr "インスツルメンテーション用に設定した可能性のある環境変数をすべて削除する。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:211
msgid "Uninstall :strong:`SignalFx .NET Tracing` from the :guilabel:`Programs and Features` control panel."
msgstr ":guilabel:`プログラムと機能` コントロールパネルから:strong:`SignalFx .NET Tracing` をアンインストールします。"

#: ../../gdi/get-data-in/application/dotnet/troubleshooting/common-dotnet-troubleshooting.rst:220
msgid "Remove ``signalfx-dotnet-tracing`` using your package manager or delete the files from ``/opt/signalfx`` if you installed the instrumentation using the tar file."
msgstr "パッケージ・マネージャーを使って``signalfx-dotnet-tracing`` を削除するか、tar ファイルを使ってインスツルメンテーションをインストールした場合は``/opt/signalfx`` からファイルを削除してください。"

#: ../../_includes/troubleshooting-steps.rst:2
msgid "Report an issue"
msgstr "問題を報告する"

#: ../../_includes/troubleshooting-steps.rst:4
msgid "Before you create an issue or open a support request, try gathering the following information:"
msgstr "issueを作成したり、サポートリクエストを開く前に、以下の情報を集めてみてください："

#: ../../_includes/troubleshooting-steps.rst:6
msgid "What happened and the impact of the issue."
msgstr "何が起こったのか、そしてその影響は？"

#: ../../_includes/troubleshooting-steps.rst:7
msgid "All the steps you've followed until the issue appeared."
msgstr "問題が発生するまでのすべての手順。"

#: ../../_includes/troubleshooting-steps.rst:8
msgid "What was the expected outcome."
msgstr "期待された結果は？"

#: ../../_includes/troubleshooting-steps.rst:9
msgid "Your attempts to solve the issue, including workarounds."
msgstr "回避策を含む、問題を解決するための試み。"

#: ../../_includes/troubleshooting-steps.rst:10
msgid "The operating system, runtime or compiler version, libraries, frameworks, and application servers of your environment, including your instrumentation settings."
msgstr "あなたの環境のオペレーティングシステム、ランタイムまたはコンパイラのバージョン、ライブラリ、フレームワーク、アプリケーションサーバー（インスツルメンテーション設定を含む）。"

#: ../../_includes/troubleshooting-steps.rst:11
msgid "Debug logs and other logs that might help troubleshoot the issue."
msgstr "問題のトラブルシューティングに役立つ可能性のあるデバッグ・ログおよびその他のログ。"

#: ../../_includes/troubleshooting-steps.rst:13
msgid "To get help, see :ref:`support`."
msgstr "詳しくは:ref:`support` をご覧ください。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:-1
msgid "Configure the Splunk Distribution of OpenTelemetry Go to suit most of your instrumentation needs, like correlating traces with logs, activating exporters, and more."
msgstr "OpenTelemetry Go の Splunk ディストリビューションを設定することで、トレースとログの関連付け、エクスポータの有効化など、ほとんどの計測ニーズに対応できます。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:5
msgid "Configure the Go instrumentation for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用の Go インストルメンテーションを設定する"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:10
msgid "You can configure the Splunk Distribution of OpenTelemetry Go to suit your instrumentation needs."
msgstr "OpenTelemetry Go の Splunk ディストリビューションは、インスツルメンテーションのニーズに合わせて設定できます。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:12
msgid "The following sections describe all available settings for configuring the Go instrumentation, including options for activating new features that are unique to the Splunk Distribution of OpenTelemetry Go."
msgstr "以下のセクションでは、OpenTelemetry Go の Splunk ディストリビューション独自の新機能を有効にするオプションを含め、Go インストルメンテーションを構成するために利用可能なすべての設定について説明します。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:19
msgid "You can change the instrumentation settings in two ways:"
msgstr "インストゥルメンテーションの設定は2つの方法で変更できる："

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:21 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:21
msgid "Set an environment variable. For example:"
msgstr "環境変数を設定する。例えば、こうだ："

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:39
msgid "To configure the instrumentation, use environment variables. Specify options in the code to override existing environment variables."
msgstr "インスツルメンテーションを設定するには、環境変数を使う。既存の環境変数を上書きするオプションをコードで指定する。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:46
msgid "The following settings are specific to the Splunk Distribution of OpenTelemetry Go:"
msgstr "以下の設定は、OpenTelemetry Go の Splunk ディストリビューション固有のものです："

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:53 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:60 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:74 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:108 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:95 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:82
#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:26 ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:94 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:26 ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:73 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:28 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:116 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:68
#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:42
msgid "``SPLUNK_ACCESS_TOKEN``"
msgstr "``SPLUNK_ACCESS_TOKEN``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:54 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:27 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:27
msgid "A Splunk authentication token that lets exporters send data directly to Splunk Observability Cloud. Unset by default. Not required unless you need to send data to the Splunk Observability Cloud ingest endpoint. See :ref:`admin-tokens`."
msgstr "Splunk Observability Cloud に直接データを送信するための Splunk 認証トークン。デフォルトでは未設定。Splunk Observability Cloud インジェストエンドポイントにデータを送信する必要がなければ不要です。:ref:`admin-tokens` を参照。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:55 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:58 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:71 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:93 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:84 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:28 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:26
#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:113 ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:44
msgid "``SPLUNK_REALM``"
msgstr "``SPLUNK_REALM``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:56 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:73 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:94
msgid "The name of your organization's realm, for example, ``us0``. When you set the realm, telemetry is sent directly to the ingest endpoint of Splunk Observability Cloud, bypassing the Splunk Distribution of OpenTelemetry Collector."
msgstr "あなたの組織のレルムの名前。例えば、``us0`` 。レルムを設定すると、テレメトリは Splunk Distribution of OpenTelemetry Collector をバイパスして Splunk Observability Cloud のインジェストエンドポイントに直接送信されます。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:57 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:62 ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:96 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:77 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:126 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:56
#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:132 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:28 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:30
msgid "``SPLUNK_TRACE_RESPONSE_HEADER_ENABLED``"
msgstr "``SPLUNK_TRACE_RESPONSE_HEADER_ENABLED``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:58 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:31
msgid "Lets you add server trace information to HTTP response headers using the ``net/http`` instrumentation package. For more information, see :ref:`server-trace-information-go`. The default value is ``true``."
msgstr "``net/http`` instrumentation パッケージを使用して、HTTP レスポンスヘッダーにサーバートレース情報を追加できます。詳細は:ref:`server-trace-information-go` を参照。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:59 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:80 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:260 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:145
msgid "``OTEL_LOG_LEVEL``"
msgstr "``OTEL_LOG_LEVEL``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:60
msgid "Sets the logging level for instrumentation log messages. Possible values are ``error``, ``warn``, ``info``, and ``debug``. The default value is ``info``. The log level might not apply if you use ``WithLogger`` to change the logger."
msgstr "計装ログ・メッセージのロギング・レベルを設定します。指定可能な値は``error`` 、``warn`` 、``info`` 、``debug`` 。デフォルト値は``info`` 。``WithLogger`` を使ってロガーを変更すると、ログレベルが適用されない場合があります。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:65 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:70 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:87 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:34 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:38 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:34
msgid "Trace configuration"
msgstr "トレース設定"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:67 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:72 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:89 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:36 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:40 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:36
msgid "The following settings control tracing limits and attributes:"
msgstr "以下の設定は、トレースの制限と属性を制御します："

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:74 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:81 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:100 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:110 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:185 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:45
#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:96 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:47 ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:75 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:43 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:160
msgid "``OTEL_SERVICE_NAME``"
msgstr "``OTEL_SERVICE_NAME``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:75 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:102 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:186 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:46 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:48
msgid "Name of the service or application you're instrumenting. Takes precedence over the service name defined in the ``OTEL_RESOURCE_ATTRIBUTES`` variable."
msgstr "インスツルメンテーションするサービスまたはアプリケーションの名前。変数``OTEL_RESOURCE_ATTRIBUTES`` で定義されたサービス名より優先される。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:76 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:83 ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:90 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:103 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:187 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:60
#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:47 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:49 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:45
msgid "``OTEL_RESOURCE_ATTRIBUTES``"
msgstr "``OTEL_RESOURCE_ATTRIBUTES``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:77 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:105 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:188 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:48 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:50
msgid "Comma-separated list of resource attributes added to every reported span. For example, ``key1=val1,key2=val2``."
msgstr "報告されたスパンごとに追加されるリソース属性のカンマ区切りリスト。例えば、``key1=val1,key2=val2`` 。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:78 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:89 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:91 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:106 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:193 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:49 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:51
#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:47
msgid "``OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT``"
msgstr "``OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:79 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:90 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:50 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:52
msgid "Maximum number of attributes per span. The default value is unlimited."
msgstr "スパンあたりの最大属性数。デフォルト値は無制限。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:80 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:91 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:51 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:53
msgid "``OTEL_EVENT_ATTRIBUTE_COUNT_LIMIT``"
msgstr "``OTEL_EVENT_ATTRIBUTE_COUNT_LIMIT``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:81 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:92 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:52 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:54
msgid "Maximum number of attributes per event. The default value is unlimited."
msgstr "イベントごとの属性の最大数。デフォルト値は無制限。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:82 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:93 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:53 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:55
msgid "``OTEL_LINK_ATTRIBUTE_COUNT_LIMIT``"
msgstr "``OTEL_LINK_ATTRIBUTE_COUNT_LIMIT``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:83 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:94 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:54 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:56
msgid "Maximum number of attributes per link. The default value is unlimited."
msgstr "リンクあたりの最大属性数。デフォルト値は無制限。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:84 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:95 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:93 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:109 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:195 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:55 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:57
#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:49
msgid "``OTEL_SPAN_EVENT_COUNT_LIMIT``"
msgstr "``OTEL_SPAN_EVENT_COUNT_LIMIT``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:85 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:96 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:56 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:58
msgid "Maximum number of events per span. The default value is unlimited."
msgstr "1スパンあたりの最大イベント数。デフォルト値は無制限。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:86 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:97 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:95 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:112 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:197 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:57 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:59
#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:51
msgid "``OTEL_SPAN_LINK_COUNT_LIMIT``"
msgstr "``OTEL_SPAN_LINK_COUNT_LIMIT``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:87 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:98 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:58 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:60
msgid "Maximum number of links per span. The default value is ``1000``."
msgstr "スパンあたりの最大リンク数。デフォルト値は``1000`` 。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:88 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:99 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:64
msgid "``OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT``"
msgstr "``OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:89 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:100
msgid "Maximum length of strings for span attribute values. Values larger than the limit are truncated. The default value is ``12000``."
msgstr "スパン属性値の文字列の最大長。制限値より大きな値は切り捨てられる。デフォルト値は``12000`` 。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:94 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:101 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:125 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:65 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:67 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:59
msgid "Exporters configuration"
msgstr "輸出業者の設定"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:103 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:112 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:135 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:74 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:76 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:68
msgid "``OTEL_TRACES_EXPORTER``"
msgstr "``OTEL_TRACES_EXPORTER``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:104
msgid "The traces exporter to use. The default value is ``otlp``. Acceptable values are ``otlp`` and ``none``. Setting ``none`` deactivates trace exports."
msgstr "使用するトレース・エクスポーター。デフォルト値は``otlp`` 。許容できる値は``otlp`` と``none`` である。``none`` を設定すると、トレース・エクスポートが無効になる。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:105 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:138
msgid "``OTEL_METRICS_EXPORTER``"
msgstr "``OTEL_METRICS_EXPORTER``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:106
msgid "The metrics exporter to use. The default value is ``otlp``. Accepted values are ``otlp`` and ``none``. Setting ``none`` deactivates metric exports."
msgstr "使用するメトリクス・エクスポーター。デフォルト値は``otlp`` 。使用可能な値は``otlp`` と``none`` 。``none`` を設定すると、メトリック・エクスポートが無効になる。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:107 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:265
msgid "``OTEL_METRIC_EXPORT_INTERVAL``"
msgstr "``OTEL_METRIC_EXPORT_INTERVAL``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:108
msgid "Interval, in milliseconds, between the start of two export attempts. The default value is ``60000``."
msgstr "2回のエクスポートの開始間隔（ミリ秒単位）。デフォルト値は``60000`` 。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:109
msgid "``OTEL_METRIC_EXPORT_TIMEOUT``"
msgstr "``OTEL_METRIC_EXPORT_TIMEOUT``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:110 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:141
msgid "Maximum allowed time to export data, in milliseconds. The default value is ``30000``."
msgstr "データのエクスポートに許容される最大時間（ミリ秒単位）。デフォルト値は``30000`` 。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:111 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:114 ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:84 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:144 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:91 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:86
#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:88 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:76 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:78 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:70
msgid "``OTEL_EXPORTER_OTLP_ENDPOINT``"
msgstr "``OTEL_EXPORTER_OTLP_ENDPOINT``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:112 ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:116 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:146 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:77
msgid "The OTLP endpoint. The default value is ``http://localhost:4317``."
msgstr "OTLPのエンドポイント。デフォルト値は``http://localhost:4317`` 。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:113
msgid "``OTEL_EXPORTER_OTLP_TRACES_ENDPOINT``"
msgstr "``OTEL_EXPORTER_OTLP_TRACES_ENDPOINT``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:114
msgid "The OTLP endpoint for traces. The default value is ``http://localhost:4317``."
msgstr "トレース用の OTLP エンドポイント。デフォルト値は``http://localhost:4317`` 。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:115 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:262
msgid "``OTEL_EXPORTER_OTLP_METRICS_ENDPOINT``"
msgstr "``OTEL_EXPORTER_OTLP_METRICS_ENDPOINT``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:118
msgid "To send data directly to Splunk Observability Cloud, see :ref:`export-directly-to-olly-cloud-go`."
msgstr "Splunk Observability Cloud に直接データを送信するには、:ref:`export-directly-to-olly-cloud-go` を参照してください。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:121
msgid "Configure a TLS connection"
msgstr "TLS接続を設定する"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:123
msgid "By default, the exporters don't use a TLS connection. To configure a TLS connection, set the ``WithTLSConfig`` option in the code. See :ref:`configuration-methods-go`."
msgstr "デフォルトでは、エクスポーターはTLS接続を使用しない。TLS接続を設定するには、コードで``WithTLSConfig`` オプションを設定する。:ref:`configuration-methods-go` を参照。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:128
msgid "Batch processor settings"
msgstr "バッチプロセッサーの設定"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:130
msgid "The following settings control the ``BatchSpanProcessor`` configuration:"
msgstr "``BatchSpanProcessor`` ："

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:138
msgid "``OTEL_BSP_SCHEDULE_DELAY``"
msgstr "``OTEL_BSP_SCHEDULE_DELAY``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:139
msgid "Delay between two consecutive exports, in milliseconds. The default value is ``5000``."
msgstr "2つの連続したエクスポート間の遅延（ミリ秒単位）。デフォルト値は``5000`` 。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:140
msgid "``OTEL_BSP_EXPORT_TIMEOUT``"
msgstr "``OTEL_BSP_EXPORT_TIMEOUT``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:142
msgid "``OTEL_BSP_MAX_QUEUE_SIZE``"
msgstr "``OTEL_BSP_MAX_QUEUE_SIZE``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:143
msgid "Maximum queue size. The default value is ``2048``."
msgstr "キューの最大サイズ。デフォルト値は``2048`` 。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:144
msgid "``OTEL_BSP_MAX_EXPORT_BATCH_SIZE``"
msgstr "``OTEL_BSP_MAX_EXPORT_BATCH_SIZE``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:145
msgid "Maximum batch size. The default value is ``512``."
msgstr "最大バッチサイズ。デフォルト値は``512`` 。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:150 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:164 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:176 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:86 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:86 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:80
msgid "Propagators configuration"
msgstr "プロパゲータの構成"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:159 ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:173 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:186 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:112 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:95 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:95 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:89
msgid "``OTEL_PROPAGATORS``"
msgstr "``OTEL_PROPAGATORS``"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:160
msgid "Comma-separated list of propagators you want to use. The default value is ``tracecontext,baggage``. Values can be joined with a comma (``,``) to produce a composite ``TextMapPropagator``."
msgstr "使用したいプロパゲータのカンマ区切りリスト。デフォルト値は``tracecontext,baggage`` 。値をカンマ (``,``) で連結して、複合``TextMapPropagator`` を作成することができます。"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:162
msgid "The instrumentation supports the following propagators:"
msgstr "インストゥルメントは以下のプロパゲータをサポートしている："

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:164
msgid "``tracecontext``: W3C tracecontext"
msgstr "``tracecontext``:W3Cトレースコンテキスト"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:165
msgid "``baggage``: W3C baggage"
msgstr "``baggage``:W3Cのお荷物"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:166
msgid "``b3``: B3 single-header format"
msgstr "``b3``:B3シングルヘッダー形式"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:167
msgid "``b3multi``: B3 multiheader format"
msgstr "``b3multi``:B3マルチヘッダーフォーマット"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:168
msgid "``xray``: AWS X-Ray"
msgstr "``xray``:AWS X線"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:169
msgid "``ottrace``: OpenTracing"
msgstr "``ottrace``:オープントレーシング"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:170
msgid "``none``: None"
msgstr "``none``:なし"

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:172
msgid "You can also change the trace propagator using ``otel.SetTextMapPropagator``. For example:"
msgstr "また、``otel.SetTextMapPropagator`` を使用してトレースプロパゲータを変更することもできます。例えば、こうだ："

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:185
msgid "To connect Real User Monitoring (RUM) requests from mobile and web applications with server trace data, add the HTTP instrumentation packages to your code. For example:"
msgstr "モバイル・アプリケーションやウェブ・アプリケーションからのリアル・ユーザー・モニタリング（RUM）リクエストとサーバー・トレース・データを接続するには、HTTPインスツルメンテーション・パッケージをコードに追加します。例えば、こうだ："

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:211
msgid "Your application instrumentation adds the following response headers to HTTP responses:"
msgstr "アプリケーション・インスツルメンテーションは、HTTPレスポンスに以下のレスポンス・ヘッダーを追加します："

#: ../../gdi/get-data-in/application/go/configuration/advanced-go-otel-configuration.rst:218 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:322 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:159
msgid "The ``Server-Timing`` header contains the ``traceId`` and ``spanId`` in ``traceparent`` format. For more information, see the Server-Timing and traceparent documentation on the W3C website."
msgstr "``Server-Timing`` ヘッダーには、``traceId`` と``spanId`` が``traceparent`` 形式で含まれている。詳しくは、W3CウェブサイトのServer-Timingとtraceparentのドキュメントをご覧ください。"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:-1
msgid "The Splunk Distribution of OpenTelemetry Go collects the following metrics."
msgstr "Splunk Distribution of OpenTelemetry Go は以下のメトリクスを収集します。"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:5
msgid "Metrics and attributes collected by the Splunk Distribution of OTel Go"
msgstr "OTel Go の Splunk ディストリビューションによって収集されたメトリクスと属性"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:10
msgid "The Splunk Distribution of OpenTelemetry Go collects runtime and custom metrics. To learn about the different metric types, see :ref:`metric-types`."
msgstr "OpenTelemetry Go の Splunk ディストリビューションは、ランタイムとカスタムメトリクスを収集します。メトリックの種類については、:ref:`metric-types` をご覧ください。"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:12
msgid "For custom metrics instrumentation and instrument types, see :ref:`custom-metrics-go`."
msgstr "カスタム・メトリクスの測定器と測定器タイプについては、:ref:`custom-metrics-go` を参照してください。"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:17 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:24
msgid "Runtime metrics"
msgstr "ランタイム・メトリクス"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:19 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:39 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:173
msgid "The following runtime metrics are automatically collected and exported:"
msgstr "以下のランタイム・メトリクスが自動的に収集され、エクスポートされます："

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:29
msgid "``runtime.go.cgo.calls`` (Experimental)"
msgstr "``runtime.go.cgo.calls`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:31
msgid "Number of cgo calls made by the current process."
msgstr "現在のプロセスが行ったcgo呼び出しの数。"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:32
msgid "``runtime.go.gc.count`` (Experimental)"
msgstr "``runtime.go.gc.count`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:34
msgid "Number of completed garbage collection cycles"
msgstr "完了したガベージコレクションサイクルの数"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:35
msgid "``runtime.go.gc.pause_ns`` (Experimental)"
msgstr "``runtime.go.gc.pause_ns`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:36
msgid "Cumulative counter (histogram)"
msgstr "累積カウンター（ヒストグラム）"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:37
msgid "Amount of nanoseconds in GC stop-the-world pauses"
msgstr "GCのストップ・ザ・ワールドのポーズにおけるナノ秒の量"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:38
msgid "``runtime.go.gc.pause_total_ns`` (Experimental)"
msgstr "``runtime.go.gc.pause_total_ns`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:40
msgid "Cumulative nanoseconds in GC stop-the-world pauses since the program started"
msgstr "プログラム開始以来のGCのstop-the-world休止の累積ナノ秒数"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:41
msgid "``runtime.go.goroutines`` (Experimental)"
msgstr "``runtime.go.goroutines`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:43
msgid "Number of goroutines that currently exist"
msgstr "現在存在するゴルーチンの数"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:44
msgid "``runtime.go.lookups`` (Experimental)"
msgstr "``runtime.go.lookups`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:46
msgid "Number of pointer lookups performed by the runtime"
msgstr "ランタイムが実行したポインタ検索数"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:47
msgid "``runtime.go.mem.heap_alloc`` (Experimental)"
msgstr "``runtime.go.mem.heap_alloc`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:49
msgid "Bytes of allocated heap objects"
msgstr "割り当てられたヒープオブジェクトのバイト数"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:50
msgid "``runtime.go.mem.heap_idle`` (Experimental)"
msgstr "``runtime.go.mem.heap_idle`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:52
msgid "Bytes in idle (unused) spans"
msgstr "アイドル（未使用）スパンのバイト数"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:53
msgid "``runtime.go.mem.heap_inuse`` (Experimental)"
msgstr "``runtime.go.mem.heap_inuse`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:55
msgid "Bytes in in-use spans"
msgstr "使用中スパンのバイト数"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:56
msgid "``runtime.go.mem.heap_objects`` (Experimental)"
msgstr "``runtime.go.mem.heap_objects`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:58
msgid "Number of allocated heap objects"
msgstr "割り当てられたヒープオブジェクトの数"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:59
msgid "``runtime.go.mem.heap_released`` (Experimental)"
msgstr "``runtime.go.mem.heap_released`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:61
msgid "Bytes of idle spans whose physical memory has been returned to the OS"
msgstr "物理メモリがOSに戻されたアイドルスパンのバイト数"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:62
msgid "``runtime.go.mem.heap_sys`` (Experimental)"
msgstr "``runtime.go.mem.heap_sys`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:64
msgid "Bytes of heap memory obtained from the OS"
msgstr "OSから取得したヒープメモリのバイト数"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:65
msgid "``runtime.go.mem.live_objects`` (Experimental)"
msgstr "``runtime.go.mem.live_objects`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:67
msgid "Number of live objects is the number of cumulative Mallocs - Frees"
msgstr "ライブオブジェクト数は、累積マロック数-フリー数"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:68
msgid "``runtime.uptime`` (Experimental)"
msgstr "``runtime.uptime`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:70
msgid "Milliseconds since application was initialized"
msgstr "アプリケーションが初期化されてからのミリ秒数"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:75 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:276
msgid "Connection pool metrics"
msgstr "接続プールのメトリクス"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:77
msgid "The Splunk Distribution of OpenTelemetry Go instruments several connection pool implementations:"
msgstr "OpenTelemetry Go の Splunk ディストリビューションは、いくつかの接続プール実装を実装しています："

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:79
msgid "``splunksql``"
msgstr "``splunksql``"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:80
msgid "``splunkmysql``"
msgstr "``splunkmysql``"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:81
msgid "``splunkpgx``"
msgstr "``splunkpgx``"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:82
msgid "``splunkgorm``"
msgstr "``splunkgorm``"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:83
msgid "``splunksqlx``"
msgstr "``splunksqlx``"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:84
msgid "``splunkpq``"
msgstr "``splunkpq``"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:86 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:289
msgid "Each of the connection pools reports a subset of the following metrics:"
msgstr "各接続プールでは、以下のメトリクスのサブセットがレポートされます："

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:96
msgid "``db.client.connections.usage`` (Experimental)"
msgstr "``db.client.connections.usage`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:98
msgid "Number of connections that are currently in the state described by the ``state`` attribute."
msgstr "``state`` 属性で記述された状態に現在あるコネクションの数。"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:99
msgid "``db.client.connections.max`` (Experimental)"
msgstr "``db.client.connections.max`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:101 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:316
msgid "Maximum number of open connections allowed."
msgstr "オープン接続の最大許容数。"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:102
msgid "``db.client.connections.wait_time`` (Experimental)"
msgstr "``db.client.connections.wait_time`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:103 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:146 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:161 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:324 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:327 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:330 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:369
#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:372 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:375 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:378 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:381
msgid "Timer"
msgstr "タイマー"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:104
msgid "Time it took to obtain an open connection from the pool."
msgstr "プールからオープン接続を取得するのにかかった時間。"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:106
msgid "The following attributes are available:"
msgstr "以下の属性が利用できる："

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:113 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:238 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:340 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:397
msgid "Tag"
msgstr "タグ"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:115
msgid "``pool.name`` (Experimental)"
msgstr "``pool.name`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:116
msgid "Name of the connection pool. Applies to all connection pool metrics."
msgstr "接続プールの名前。すべての接続プールのメトリクスに適用されます。"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:117
msgid "``state`` (Experimental)"
msgstr "``state`` 実験"

#: ../../gdi/get-data-in/application/go/configuration/go-otel-metrics.rst:118
msgid "State of the connection. Can be ``idle`` or ``used``. Only applies to the ``db.client.connections.usage`` metric."
msgstr "接続の状態。``idle`` または``used`` 。``db.client.connections.usage`` メトリックにのみ適用される。"

#: ../../gdi/get-data-in/application/go/get-started.rst:11
msgid "Instrument a Go application"
msgstr "囲碁アプリケーションのインストゥルメント"

#: ../../gdi/get-data-in/application/go/get-started.rst:11
msgid "Configure the Go instrumentation"
msgstr "Go計装の設定"

#: ../../gdi/get-data-in/application/go/get-started.rst:11
msgid "Troubleshoot Go instrumentation"
msgstr "囲碁計測器のトラブルシューティング"

#: ../../gdi/get-data-in/application/go/get-started.rst:11
msgid "About Splunk OTel Go"
msgstr "Splunk OTel Goについて"

#: ../../gdi/get-data-in/application/go/get-started.rst:11
msgid "Migrate from SignalFx Go"
msgstr "SignalFx Goからの移行"

#: ../../gdi/get-data-in/application/go/get-started.rst:-1
msgid "Instrument Go applications to export spans and metrics to Splunk Observability Cloud."
msgstr "Go アプリケーションをインストゥルメントして、スパンとメトリクスを Splunk Observability Cloud にエクスポートします。"

#: ../../gdi/get-data-in/application/go/get-started.rst:5
msgid "Instrument Go applications for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 向けに Go アプリケーションをインストゥルメントする"

#: ../../gdi/get-data-in/application/go/get-started.rst:24
msgid "The Splunk Distribution of OpenTelemetry Go provides multiple Go packages that instrument your Go application. The instrumentation captures distributed traces and metrics and sends them to Splunk Observability Cloud."
msgstr "OpenTelemetry Go の Splunk ディストリビューションは、Go アプリケーションを計測する複数の Go パッケージを提供します。インスツルメンテーションは分散トレースとメトリクスをキャプチャし、Splunk Observability Cloud に送信します。"

#: ../../gdi/get-data-in/application/go/get-started.rst:26
msgid "To instrument your Go application, follow these steps:"
msgstr "Goアプリケーションを計測するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/go/get-started.rst:28
msgid "Check compatibility and requirements. See :ref:`go-otel-requirements`."
msgstr "互換性と必要条件を確認してください。:ref:`go-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/go/get-started.rst:29
msgid "Instrument your Go application. See :ref:`instrument-go-applications`."
msgstr "Goアプリケーションをインストゥルメントする。:ref:`instrument-go-applications` を参照。"

#: ../../gdi/get-data-in/application/go/get-started.rst:30
msgid "Configure your instrumentation. See :ref:`advanced-go-otel-configuration`."
msgstr "計測器を設定する。:ref:`advanced-go-otel-configuration` を参照。"

#: ../../gdi/get-data-in/application/go/get-started.rst:32
msgid "For more information, see :ref:`splunk-go-otel-dist`."
msgstr "詳細は:ref:`splunk-go-otel-dist` を参照。"

#: ../../gdi/get-data-in/application/go/get-started.rst:34
msgid "The SignalFx Tracing Library for Go is deprecated and will reach End of Support on June 8th, 2023. To migrate to the Splunk Distribution of OpenTelemetry Go, see :ref:`migrate-signalfx-go-to-otel`."
msgstr "Go用SignalFxトレーシング・ライブラリは非推奨となり、2023年6月8日にサポート終了となります。OpenTelemetry Go の Splunk ディストリビューションに移行するには、:ref:`migrate-signalfx-go-to-otel` を参照してください。"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:-1
msgid "This is what you need to instrument any Go application for Splunk Observability Cloud."
msgstr "これは、Splunk Observability Cloud 用に Go アプリケーションを計測するために必要なものです。"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:5
msgid "Go instrumentation compatibility and requirements"
msgstr "Go計測器の互換性と要件"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:10
msgid "Meet these requirements to instrument Go applications for Splunk Observability Cloud."
msgstr "Go アプリケーションを Splunk Observability Cloud で計測するには、以下の要件を満たす必要があります。"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:15 ../../gdi/get-data-in/application/java/java-otel-requirements.rst:15 ../../gdi/get-data-in/application/php/php-requirements.rst:23 ../../gdi/get-data-in/application/python/python-otel-requirements.rst:15 ../../gdi/get-data-in/application/ruby/ruby-otel-requirements.rst:15
msgid "Supported libraries and frameworks"
msgstr "サポートされているライブラリとフレームワーク"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:17
msgid "The Splunk Distribution of OpenTelemetry Go can instrument the following libraries. Check the documentation of each instrumentation package to learn how to activate it."
msgstr "OpenTelemetry Go の Splunk ディストリビューションでは、以下のライブラリを計測できます。各インストルメンテーション・パッケージのドキュメントをチェックし、有効化する方法を学んでください。"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:24
msgid "Target package"
msgstr "ターゲット・パッケージ"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:25
msgid "Instrumentation package"
msgstr "計装パッケージ"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:26
msgid "database/sql"
msgstr "database/sql"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:27
msgid ":new-page:`splunksql <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/database/sql/splunksql/>`"
msgstr ":new-page:`splunksql <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/database/sql/splunksql/>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:28 ../../gdi/get-data-in/connect/aws/aws-logs.rst:169 ../../gdi/get-data-in/connect/aws/aws-logs.rst:221 ../../gdi/get-data-in/connect/aws/aws-logs.rst:286 ../../gdi/get-data-in/connect/aws/aws-logs.rst:310 ../../gdi/get-data-in/connect/aws/aws-logs.rst:350 ../../gdi/get-data-in/connect/aws/aws-logs.rst:374
msgid "host"
msgstr "ホスト"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:29
msgid ":new-page:`host <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/host>`"
msgstr ":new-page:`ホスト <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/host>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:30
msgid "net/http"
msgstr "net/http"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:31
msgid ":new-page:`otelhttp <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp>`"
msgstr ":new-page:`オテルhttp <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:32
msgid "net/http/httptrace"
msgstr "net/http/httptrace"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:33
msgid ":new-page:`httptrace <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace>`"
msgstr ":new-page:`httptrace <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:34
msgid "runtime"
msgstr "ランタイム"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:35
msgid ":new-page:`runtime <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/runtime/>`"
msgstr ":new-page:`ランタイム <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/runtime/>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:36
msgid "github.com/aws/aws-sdk-go-v2"
msgstr "github.com/aws/aws-sdk-go-v2"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:37 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:208
msgid ":new-page:`otelaws <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/aws/aws-sdk-go-v2/otelaws>`"
msgstr ":new-page:`各法令 <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/aws/aws-sdk-go-v2/otelaws>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:38
msgid "github.com/bradfitz/gomemcache"
msgstr "github.com/bradfitz/gomemcache"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:39 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:210
msgid ":new-page:`otelmemcache <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/bradfitz/gomemcache/memcache/otelmemcache>`"
msgstr ":new-page:`otelmemcache <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/bradfitz/gomemcache/memcache/otelmemcache>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:40
msgid "github.com/confluentinc/confluent-kafka-go/kafka"
msgstr "github.com/confluentinc/confluent-kafka-go/kafka"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:41
msgid ":new-page:`splunkkafka <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/confluentinc/confluent-kafka-go/kafka/splunkkafka>`"
msgstr ":new-page:`splunkkafka <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/confluentinc/confluent-kafka-go/kafka/splunkkafka>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:42
msgid "github.com/confluentinc/confluent-kafka-go/v2/kafka"
msgstr "github.com/confluentinc/confluent-kafka-go/v2/kafka"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:43
msgid ":new-page:`splunkkafka <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/confluentinc/confluent-kafka-go/v2/kafka/splunkkafka>`"
msgstr ":new-page:`splunkkafka <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/confluentinc/confluent-kafka-go/v2/kafka/splunkkafka>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:44
msgid "github.com/emicklei/go-restful"
msgstr "github.com/emicklei/go-restful"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:45 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:216
msgid ":new-page:`otelrestful <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/emicklei/go-restful/otelrestful>`"
msgstr ":new-page:`オテルレストフル <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/emicklei/go-restful/otelrestful>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:46
msgid "github.com/gin-gonic/gin"
msgstr "github.com/gin-gonic/gin"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:47 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:220
msgid ":new-page:`otelgin <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/gin-gonic/gin/otelgin>`"
msgstr ":new-page:`otelgin <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/gin-gonic/gin/otelgin>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:48
msgid "github.com/go-chi/chi"
msgstr "github.com/go-chi/chi"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:49
msgid ":new-page:`splunkchi <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/go-chi/chi/splunkchi>`"
msgstr ":new-page:`splunkchi <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/go-chi/chi/splunkchi>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:50
msgid "github.com/go-kit/kit"
msgstr "github.com/go-kit/kit"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:51
msgid ":new-page:`otelkit <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/go-kit/kit/otelkit>`"
msgstr ":new-page:`オテルキット <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/go-kit/kit/otelkit>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:52
msgid "github.com/go-sql-driver/mysql"
msgstr "github.com/go-sql-driver/mysql"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:53
msgid ":new-page:`splunkmysql <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/go-sql-driver/mysql/splunkmysql>`"
msgstr ":new-page:`splunkmysql <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/go-sql-driver/mysql/splunkmysql>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:54
msgid "github.com/gocql/gocql"
msgstr "github.com/gocql/gocql"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:55 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:228
msgid ":new-page:`otelgocql <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/gocql/gocql/otelgocql>`"
msgstr ":new-page:`otelgocql <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/gocql/gocql/otelgocql>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:56
msgid "github.com/gomodule/redigo"
msgstr "github.com/gomodule/redigo"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:57
msgid ":new-page:`splunkredigo <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/gomodule/redigo/splunkredigo>`"
msgstr ":new-page:`splunkredigo <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/gomodule/redigo/splunkredigo>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:58
msgid "github.com/gorilla/mux"
msgstr "github.com/gorilla/mux"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:59 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:238
msgid ":new-page:`otelmux <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/gorilla/mux/otelmux>`"
msgstr ":new-page:`otelmux <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/gorilla/mux/otelmux>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:60
msgid "github.com/graph-gophers/graphql-go"
msgstr "github.com/graph-gophers/graphql-go"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:61
msgid ":new-page:`splunkgraphql <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/graph-gophers/graphql-go/splunkgraphql>`"
msgstr ":new-page:`splunkgraphql <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/graph-gophers/graphql-go/splunkgraphql>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:62
msgid "github.com/jackc/pgx"
msgstr "github.com/jackc/pgx"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:63
msgid ":new-page:`splunkpgx <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/jackc/pgx/splunkpgx>`"
msgstr ":new-page:`splunkpgx <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/jackc/pgx/splunkpgx>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:64
msgid "github.com/jinzhu/gorm"
msgstr "github.com/jinzhu/gorm"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:65
msgid ":new-page:`splunkgorm <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/jinzhu/gorm/splunkgorm>`"
msgstr ":new-page:`splunkgorm <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/jinzhu/gorm/splunkgorm>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:66
msgid "github.com/jmoiron/sqlx"
msgstr "github.com/jmoiron/sqlx"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:67
msgid ":new-page:`splunksqlx <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/jmoiron/sqlx/splunksqlx>`"
msgstr ":new-page:`splunksqlx <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/jmoiron/sqlx/splunksqlx>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:68
msgid "github.com/julienschmidt/httprouter"
msgstr "github.com/julienschmidt/httprouter"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:69
msgid ":new-page:`splunkhttprouter <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/julienschmidt/httprouter/splunkhttprouter/>`"
msgstr ":new-page:`splunkhttprouter <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/julienschmidt/httprouter/splunkhttprouter/>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:70
msgid "github.com/labstack/echo"
msgstr "github.com/labstack/echo"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:71 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:250
msgid ":new-page:`otelecho <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/labstack/echo/otelecho>`"
msgstr ":new-page:`オテレコ <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/labstack/echo/otelecho>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:72
msgid "github.com/lib/pq"
msgstr "github.com/lib/pq"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:73
msgid ":new-page:`splunkpq <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/lib/pq/splunkpq>`"
msgstr ":new-page:`splunkpq <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/lib/pq/splunkpq>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:74
msgid "github.com/miekg/dns"
msgstr "github.com/miekg/dns"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:75
msgid ":new-page:`splunkdns <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/miekg/dns/splunkdns>`"
msgstr ":new-page:`splunkdns <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/miekg/dns/splunkdns>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:76
msgid "gopkg.in/olivere/elastic"
msgstr "gopkg.in/olivere/elastic"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:77
msgid ":new-page:`splunkelastic <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/gopkg.in/olivere/elastic/splunkelastic>`"
msgstr ":new-page:`splunkelastic <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/gopkg.in/olivere/elastic/splunkelastic>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:78
msgid "github.com/Shopify/sarama"
msgstr "github.com/Shopify/sarama"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:79 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:262
msgid ":new-page:`otelsarama <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/Shopify/sarama/otelsarama>`"
msgstr ":new-page:`otelsarama <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/github.com/Shopify/sarama/otelsarama>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:80
msgid "github.com/syndtr/goleveldb/leveldb"
msgstr "github.com/syndtr/goleveldb/leveldb"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:81
msgid ":new-page:`splunkleveldb <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/syndtr/goleveldb/leveldb/splunkleveldb/>`"
msgstr ":new-page:`splunkleveldb <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/syndtr/goleveldb/leveldb/splunkleveldb/>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:82
msgid "github.com/tidwall/buntdb"
msgstr "github.com/tidwall/buntdb"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:83
msgid ":new-page:`splunkbuntdb <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/tidwall/buntdb/splunkbuntdb>`"
msgstr ":new-page:`splunkbuntdb <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/github.com/tidwall/buntdb/splunkbuntdb>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:84
msgid "go.mongodb.org/mongo-driver"
msgstr "go.mongodb.org/mongo-driver"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:85 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:256
msgid ":new-page:`otelmongo <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/go.mongodb.org/mongo-driver/mongo/otelmongo>`"
msgstr ":new-page:`otelmongo <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/go.mongodb.org/mongo-driver/mongo/otelmongo>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:86
msgid "google.golang.org/grpc"
msgstr "google.golang.org/grpc"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:87 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:236
msgid ":new-page:`otelgrpc <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc>`"
msgstr ":new-page:`otelgrpc <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:88
msgid "gopkg.in/macaron.v1"
msgstr "gopkg.in/macaron.v1"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:89
msgid ":new-page:`otelmacaron <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/gopkg.in/macaron.v1/otelmacaron>`"
msgstr ":new-page:`otelmacaron <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/gopkg.in/macaron.v1/otelmacaron>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:90
msgid "k8s.io/client-go"
msgstr "k8s.io/client-go"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:91
msgid ":new-page:`splunkclient-go <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/k8s.io/client-go/splunkclient-go>`"
msgstr ":new-page:`splunkclient-go <https://pkg.go.dev/github.com/signalfx/splunk-otel-go/instrumentation/k8s.io/client-go/splunkclient-go>`"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:96
msgid "Ensure you are using supported Go versions"
msgstr "サポートされているGoのバージョンを使用していることを確認してください。"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:98
msgid "The Splunk Distribution of OpenTelemetry Go is compatible with Go 1.19 and higher."
msgstr "OpenTelemetry Go の Splunk ディストリビューションは、Go 1.19 以降と互換性があります。"

#: ../../gdi/get-data-in/application/go/go-otel-requirements.rst:105
msgid "The Splunk Distribution of OpenTelemetry Go exports application traces and spans to the Splunk Distribution of OpenTelemetry Collector, which also collects system metric data and logs."
msgstr "Splunk Distribution of OpenTelemetry Go は、アプリケーションのトレースとスパンを Splunk Distribution of OpenTelemetry Collector にエクスポートします。"

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:-1
msgid "You can configure logging libraries to include tracing attributes provided automatically by Splunk OTel Go instrumentation. Use the trace metadata to correlate traces with log events and explore logs in Splunk Observability Cloud."
msgstr "Splunk OTel Go インスツルメンテーションによって自動的に提供されるトレース属性を含めるように、ロギングライブラリを設定できます。トレースメタデータを使用して、トレースとログイベントを関連付け、Splunk Observability Cloud でログを探索します。"

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:5
msgid "Connect Go trace data with logs for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud のログと Go トレースデータを接続する"

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:10
msgid "You can configure logging libraries to include tracing attributes provided automatically by Splunk OTel Go instrumentation. Use the trace metadata to correlate traces with log events and explore logs in Splunk."
msgstr "Splunk OTel Go インスツルメンテーションによって自動的に提供されるトレース属性を含めるように、ロギングライブラリを設定できます。トレースメタデータを使用して、トレースとログイベントを関連付け、Splunk でログを探索します。"

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:12
msgid "The following steps describe how to extract trace metadata and configure logging libraries to include the data as log fields."
msgstr "以下のステップでは、トレースメタデータを抽出し、ログフィールドとしてデータを含むようにロギングライブラリを設定する方法を説明します。"

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:15
msgid "Extract trace metadata from contexts"
msgstr "コンテキストからトレースメタデータを抽出する"

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:17
msgid "The ``SpanContextFromContext`` function of the OpenTelemetry Trace API extracts the trace metadata from a ``context.Context`` and returns it in the form of a ``SpanContext``. The following example shows how to use the function:"
msgstr "OpenTelemetry Trace API の``SpanContextFromContext`` 関数は、``context.Context`` からトレースメタデータを抽出し、``SpanContext`` の形式で返します。次の例は、この関数の使い方を示している："

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:28
msgid "The ``SpanContext`` struct contains the trace and span ID, trace flags with sampling information, and state information. You can add this metadata to log events to enrich their context, and to correlate traces and logs."
msgstr "``SpanContext`` 構造体には、トレースとスパンID、サンプリング情報を含むトレースフラグ、ステート情報が含まれる。このメタデータをログイベントに追加することで、そのコンテキストを充実させ、トレースとログを相関させることができる。"

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:31
msgid "Annotate log events"
msgstr "ログイベントに注釈を付ける"

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:33
msgid "After you gather metadata in a ``SpanContext``, you can use it to annotate log events."
msgstr "``SpanContext`` でメタデータを収集した後、それを使ってログイベントに注釈を付けることができます。"

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:36
msgid "Structured logs"
msgstr "構造化ログ"

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:38
msgid "If you're using a structured logger, add the trace metadata as fields. The following example shows how to annotate log events using the ``zap`` logging library:"
msgstr "構造化ロガーを使用している場合、トレース・メタデータをフィールドとして追加します。次の例は、``zap`` ロギング・ライブラリを使用してログ・イベントに注釈を付ける方法を示しています："

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:52
msgid "Unstructured logs"
msgstr "非構造化ログ"

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:54
msgid "If you're using unstructured logging, you can add the trace metadata as part of the logged message. The following example shows how to add trace metadata using the standard library ``log`` package:"
msgstr "非構造化ロギングを使用している場合、ロギングされたメッセージの一部としてトレースメタデータを追加することができます。以下の例では、標準ライブラリ``log`` パッケージを使ってトレース・メタデータを追加する方法を示している："

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:69
msgid "Example of log annotation"
msgstr "ログ注釈の例"

#: ../../gdi/get-data-in/application/go/instrumentation/connect-traces-logs.rst:71
msgid "The following is a complete example of a ``chi`` server that extracts trace metadata and annotates log messages for handled requests:"
msgstr "以下は、トレースメタデータを抽出し、処理されたリクエストのログメッセージに注釈を付ける``chi`` サーバーの完全な例である："

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:-1
msgid "Write custom instrumentation for your Go application when you need to add custom attributes to spans or want to manually generate spans and metrics."
msgstr "スパンにカスタム属性を追加する必要がある場合、またはスパンとメトリックを手動で生成したい場合は、Go アプリケーション用にカスタム インストルメンテーションを記述します。"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:5
msgid "Custom Go instrumentation for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用のカスタム Go インストルメンテーション"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:10
msgid "Instrumenting applications using the Splunk Distribution of OpenTelemetry Go and instrumentation libraries covers most needs. Writing custom instrumentation for your application is only necessary when, for example, you need to add custom attributes to spans or need to manually generate spans and metrics."
msgstr "OpenTelemetry Go とインスツルメンテーションライブラリの Splunk ディストリビューションを使用したアプリケーションのインスツルメンテーションは、ほとんどのニーズに対応しています。アプリケーション用にカスタム・インスツルメンテーションを記述する必要があるのは、例えば、スパンにカスタム属性を追加する必要がある場合や、スパンとメトリクスを手動で生成する必要がある場合のみです。"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:15 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:18
msgid "Create custom traces"
msgstr "カスタムトレースの作成"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:17 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:20
msgid "To create custom spans and traces, follow these steps:"
msgstr "カスタムのスパンとトレースを作成するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:19 ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:52
msgid "Import the OpenTelemetry API:"
msgstr "OpenTelemetry API をインポートする："

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:25
msgid "Create a tracer for your spans:"
msgstr "スパンのトレーサーを作成する："

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:31
msgid "To create a span, you need a handle on a ``context.Context`` instance. You can also set the tags. For example:"
msgstr "スパンを作成するには、``context.Context`` インスタンスのハンドルが必要です。タグを設定することもできる。例えば、こうだ："

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:41
msgid "See the :new-page:`OpenTelemetry Traces API documentation <https://pkg.go.dev/go.opentelemetry.io/otel/trace>` for additional information."
msgstr "詳細は:new-page:`OpenTelemetry Traces API documentation<https://pkg.go.dev/go.opentelemetry.io/otel/trace>` を参照。"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:46 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:51
msgid "Create custom metrics"
msgstr "カスタムメトリクスの作成"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:48
msgid "You can create custom metrics of type counter (sum with delta aggregation temporality), cumulative counter (sum), and gauge."
msgstr "カウンタ（デルタ集計の一時性を持つ合計）、累積カウンタ（合計）、およびゲージのタイプのカスタム・メトリクスを作成できます。"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:50 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:53
msgid "To create custom metrics, follow these steps:"
msgstr "カスタム・メトリクスを作成するには、以下の手順に従います："

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:58
msgid "Create a meter:"
msgstr "メーターを作る："

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:64
msgid "Create an instrument to take measurements:"
msgstr "測定器を作る："

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:77
msgid "Perform the measurements:"
msgstr "測定を行う："

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:83
msgid "See the :new-page:`OpenTelemetry Metrics API docs <https://pkg.go.dev/go.opentelemetry.io/otel/metric>` for additional information."
msgstr "詳細は:new-page:`OpenTelemetry Metrics API docs<https://pkg.go.dev/go.opentelemetry.io/otel/metric>` を参照。"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:88
msgid "OpenTelemetry Go instrument types"
msgstr "OpenTelemetry Go 測定器の種類"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:90
msgid "The following table shows the equivalences between OpenTelemetry instrument types and Splunk Observability Cloud metric types."
msgstr "次の表は、OpenTelemetry の計測器タイプと Splunk Observability Cloud のメトリックタイプの等価性を示しています。"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:97
msgid "OpenTelemetry Go"
msgstr "OpenTelemetry Go"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:98 ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:75
msgid "Splunk Observability Cloud"
msgstr "Splunk Observability Cloud"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:100
msgid "``Int64Counter``"
msgstr "``Int64Counter``"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:103
msgid "``Int64Histogram``"
msgstr "``Int64Histogram``"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:104
msgid "Histogram types generate three separate metrics in Splunk Observability Cloud:"
msgstr "ヒストグラムタイプは、Splunk Observability Cloud で 3 つの別々のメトリクスを生成します："

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:106
msgid "``_count`` (Cumulative counter), which represents the item count."
msgstr "``_count`` (累積カウンタ）。"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:107
msgid "``_sum`` (Cumulative counter), which represents the sum of all values."
msgstr "``_sum`` (累積カウンタ）で、すべての値の合計を表す。"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:108 ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:134
msgid "``_bucket`` (Cumulative counter), which assigns a data point to the bucket."
msgstr "``_bucket`` (累積カウンタ)で、バケツにデータポイントを割り当てる。"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:109 ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:135
msgid "``_min`` (Gauge), which indicates the minumum value."
msgstr "``_min`` (ゲージ）の最小値を示す。"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:110 ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:136
msgid "``_max`` (Gauge), which indicates the maximum value."
msgstr "``_max`` (ゲージ）の最大値を示す。"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:112 ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:138
msgid "Buckets have a dimension ``le`` which is set to the highest value of the items counted in the bucket."
msgstr "バケツには、``le`` というディメンションがあり、バケツにカウントされているアイテムの中で最も高い値が設定される。"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:114
msgid "``Int64ObservableCounter``"
msgstr "``Int64ObservableCounter``"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:117
msgid "``Int64ObservableGauge``"
msgstr "``Int64ObservableGauge``"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:120
msgid "``Int64ObservableUpDownCounter``"
msgstr "``Int64ObservableUpDownCounter``"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:123
msgid "``Int64UpDownCounter``"
msgstr "``Int64UpDownCounter``"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:126
msgid "``Float64Counter``"
msgstr "``Float64Counter``"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:129
msgid "``Float64Histogram``"
msgstr "``Float64Histogram``"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:130
msgid "Histogram types generate the following separate metrics in Splunk Observability Cloud:"
msgstr "ヒストグラムタイプは、Splunk Observability Cloud で以下の個別のメトリクスを生成します："

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:132
msgid "``_count`` (Cumulative counter), which represents the total count of data points."
msgstr "``_count`` (累積カウンタ）で、データポイントの総カウント数を表す。"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:133
msgid "``_sum`` (Cumulative counter), which represents the sum of all values in the histogram."
msgstr "``_sum`` (累積カウンタ）で、ヒストグラムのすべての値の合計を表します。"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:140
msgid "``Float64ObservableCounter``"
msgstr "``Float64ObservableCounter``"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:143
msgid "``Float64ObservableGauge``"
msgstr "``Float64ObservableGauge``"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:146
msgid "``Float64ObservableUpDownCounter``"
msgstr "``Float64ObservableUpDownCounter``"

#: ../../gdi/get-data-in/application/go/instrumentation/go-manual-instrumentation.rst:149
msgid "``Float64UpDownCounter``"
msgstr "``Float64UpDownCounter``"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:-1
msgid "The Splunk Distribution of OpenTelemetry Go can instrument your Go application or service. Follow these steps to get started."
msgstr "OpenTelemetry Go の Splunk ディストリビューションは、Go アプリケーションやサービスを計測することができます。以下の手順で始めましょう。"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:5
msgid "Instrument a Go application for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用の Go アプリケーションをインストゥルメントする"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:10
msgid "The Splunk Distribution of OpenTelemetry Go can instrument your Go application or service. To get started, use the guided setup or follow the instructions manually."
msgstr "OpenTelemetry Go の Splunk ディストリビューションは、Go アプリケーションやサービスを計測することができます。開始するには、ガイド付きセットアップを使用するか、手動で指示に従ってください。"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:15
msgid "To generate all the basic installation commands for your environment and application, use the Go guided setup. To access the Go guided setup, follow these steps:"
msgstr "あなたの環境とアプリケーションの基本的なインストールコマンドをすべて生成するには、Goガイド付きセットアップを使用します。Goガイド付きセットアップにアクセスするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:18
msgid "Open the :new-page:`Go guided setup <https://login.signalfx.com/#/gdi/scripted/go-tracing/step-1?category=product-apm&gdiState=%7B\"integrationId\":\"go-tracing\"%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`Go ガイド付きセットアップ<https://login.signalfx.com/#/gdi/scripted/go-tracing/step-1?category=product-apm&gdiState=%7B\"integrationId\":\"go-tracing\"%7D>` を開きます。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:28
msgid "Select the :guilabel:`Go` tile to open the Go guided setup."
msgstr ":guilabel:`Go` タイルを選択し、Go ガイドセットアップを開きます。"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:31
msgid "Install the Splunk Distribution of OpenTelemetry Go manually"
msgstr "OpenTelemetry Go の Splunk ディストリビューションを手動でインストールする"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:33
msgid "Follow these instructions to install the Splunk Distribution of OpenTelemetry Go."
msgstr "以下の手順に従って、OpenTelemetry Go の Splunk ディストリビューションをインストールしてください。"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:38
msgid "Install and activate the Go instrumentation"
msgstr "Go計装をインストールしてアクティブにする"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:40
msgid "Follow these steps to instrument your application using the Go instrumentation:"
msgstr "以下の手順に従って、Goインスツルメンテーションを使用してアプリケーションをインスツルメンテーションしてください："

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:42
msgid "Check that you meet the requirements. See :ref:`go-otel-requirements`."
msgstr "あなたが条件を満たしていることを確認してください。:ref:`go-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:44
msgid "Install the distribution:"
msgstr "ディストリビューションをインストールします："

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:50 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:63 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:59 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:65 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:65
msgid "Set the ``OTEL_SERVICE_NAME`` environment variable:"
msgstr "環境変数``OTEL_SERVICE_NAME`` を設定する："

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:62 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:75 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:71 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:77
msgid "(Optional) Set the endpoint URL if the Splunk Distribution of OpenTelemetry Collector is running on a different host:"
msgstr "(オプション) OpenTelemetry Collector の Splunk ディストリビューションが別のホストで実行されている場合は、エンドポイント URL を設定します："

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:74
msgid "(Optional) Set the version and environment name:"
msgstr "(オプション）バージョンと環境名を設定します："

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:86
msgid "Add the instrumentation using the ``distro`` package:"
msgstr "``distro`` パッケージを使用して計装を追加する："

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:112
msgid "Activate additional instrumentations. For more information, see :ref:`supported-go-libraries`."
msgstr "追加インストゥルメンテーションをアクティブにする。詳細は:ref:`supported-go-libraries` を参照。"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:114
msgid "(Optional) To link APM and RUM data, activate the HTTP instrumentation. See :ref:`server-trace-information-go`."
msgstr "(オプション）APMデータとRUMデータをリンクするには、HTTPインスツルメンテーションを有効にします。:ref:`server-trace-information-go` を参照。"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:116
msgid "If no data appears in APM, see :ref:`common-go-troubleshooting`."
msgstr "APM にデータが表示されない場合は、:ref:`common-go-troubleshooting` を参照してください。"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:118
msgid "If you need to add custom attributes to spans or want to manually generate spans, instrument your Go application or service manually. See :ref:`go-manual-instrumentation`."
msgstr "スパンにカスタム属性を追加する必要がある場合、またはスパンを手動で生成する場合は、Go アプリケーションまたはサービスを手動で計測してください。:ref:`go-manual-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:123
msgid "Deploy the Go instrumentation in Kubernetes"
msgstr "KubernetesにGoインスツルメンテーションをデプロイする"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:125
msgid "To deploy the Go instrumentation in Kubernetes, configure the Kubernetes Downward API to expose environment variables to Kubernetes resources."
msgstr "GoインスツルメンテーションをKubernetesにデプロイするには、環境変数をKubernetesリソースに公開するようにKubernetes Downward APIを設定する。"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:127
msgid "The following example shows how to update a deployment to expose environment variables by adding the OTel configuration under the ``.spec.template.spec.containers.env`` section:"
msgstr "次の例では、``.spec.template.spec.containers.env`` セクションの下に OTel 設定を追加して、環境変数を公開するように配置を更新する方法を示します："

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:158 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:239 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:255 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:181 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:177 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:164
msgid "By default, all telemetry is sent to the local instance of the Splunk Distribution of OpenTelemetry Collector."
msgstr "デフォルトでは、すべての遠隔測定は OpenTelemetry Collector の Splunk ディストリビューションのローカルインスタンスに送信されます。"

#: ../../gdi/get-data-in/application/go/instrumentation/instrument-go-application.rst:160 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:241 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:257 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:166
msgid "If you need to send data directly to Splunk Observability Cloud, set the following environment variables:"
msgstr "Splunk Observability Cloud に直接データを送信する必要がある場合は、以下の環境変数を設定します："

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:-1 ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:10
msgid "The Splunk Distribution of OpenTelemetry Go extends the OpenTelemetry Instrumentation for Go, a set of open source Go packages that provides APIs to directly measure the performance and behavior of your software."
msgstr "OpenTelemetry Go の Splunk ディストリビューションは、ソフトウェアのパフォーマンスと動作を直接測定するための API を提供するオープンソースの Go パッケージのセットである OpenTelemetry Instrumentation for Go を拡張します。"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:5
msgid "About the Splunk Distribution of OpenTelemetry Go"
msgstr "OpenTelemetry Go の Splunk ディストリビューションについて"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:12
msgid "With the distribution you can instrument any application written in Go 1.19 and higher. See :ref:`go-otel-requirements`."
msgstr "このディストリビューションを使えば、Go 1.19以降で書かれたあらゆるアプリケーションをインストゥルメント化できる。:ref:`go-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:15
msgid "Features of the Splunk Distribution of OpenTelemetry Go"
msgstr "OpenTelemetry Go の Splunk ディストリビューションの特徴"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:17
msgid "In addition to the features of the OpenTelemetry Instrumentation for Go, like bundled exporters and propagators, the Splunk Distribution of OpenTelemetry Go provides additional custom features:"
msgstr "OpenTelemetry Go の Splunk ディストリビューションでは、バンドルされたエクスポーターやプロパゲーターといった Go 用 OpenTelemetry Instrumentation の機能に加えて、さらにカスタム機能を提供しています："

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:19
msgid "Sends trace and metrics telemetry to Splunk Observability Cloud using the OTel Collector."
msgstr "OTel Collector を使用して、トレースとメトリックの遠隔測定を Splunk Observability Cloud に送信します。"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:20
msgid "Provides additional library instrumentations. See :ref:`supported-go-libraries`."
msgstr "追加のライブラリー計装を提供。:ref:`supported-go-libraries` を参照。"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:21
msgid "Provides trace metadata for application logs. See :ref:`correlate-traces-with-logs-go`."
msgstr "アプリケーションログのトレースメタデータを提供する。:ref:`correlate-traces-with-logs-go` を参照。"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:23
msgid "The Splunk Distribution of OpenTelemetry Go is supported by Splunk and is updated frequently, bringing bug fixes and new features to you before they're integrated in the upstream OTel repositories."
msgstr "OpenTelemetry Go の Splunk ディストリビューションは Splunk によってサポートされ、頻繁に更新され、バグフィックスや新機能がアップストリームの OTel リポジトリに統合される前に提供されます。"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:25
msgid "Use the Splunk Distribution of OpenTelemetry Go instead of the upstream OpenTelemetry instrumentation and SDK. Splunk supports only upstream OTel components as part of the Splunk Distribution of OpenTelemetry Go."
msgstr "アップストリームの OpenTelemetry インスツルメンテーションと SDK ではなく、Splunk Distribution of OpenTelemetry Go を使用してください。Splunk は、Splunk Distribution of OpenTelemetry Go の一部として、アップストリームの OTel コンポーネントのみをサポートしています。"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:28
msgid "Defaults of the Splunk Distribution of OpenTelemetry Go"
msgstr "OpenTelemetry Go の Splunk ディストリビューションのデフォルト"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:30
msgid "The Splunk Distribution of OpenTelemetry Go has the following default settings for context propagation, exporters, and trace settings:"
msgstr "OpenTelemetry Go の Splunk ディストリビューションでは、コンテキストプロパゲーション、エクスポーター、トレース設定のデフォルト設定が以下のようになっています："

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:32
msgid "W3C tracecontext and W3C baggage context propagation is activated by default."
msgstr "W3C tracecontext と W3C baggage context propagation はデフォルトで有効になっています。"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:33
msgid "The OTLP over gRPC exporter is configured to send spans and metrics to a locally running the Splunk Distribution of OpenTelemetry Collector."
msgstr "OTLP over gRPC エクスポーターは、スパンとメトリクスを OpenTelemetry Collector の Splunk ディストリビューションを実行しているローカルに送信するように設定されています。"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:34
msgid "Unlimited defaults for trace configuration to support full-fidelity tracing."
msgstr "完全忠実なトレースをサポートするため、トレース設定のデフォルトは無制限。"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:37 ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:67 ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:38 ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:37 ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:37
msgid "Support for previous versions"
msgstr "旧バージョンのサポート"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:39 ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:69 ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:40 ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:39 ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:39
msgid "Splunk is committed to supporting all customers who use this distribution. All major versions of Splunk OpenTelemetry distributions receive critical patches for one year after the next major release. Splunk stops feature development on a major release after it introduces the next major release."
msgstr "Splunk は、このディストリビューションを使用するすべてのお客様をサポートすることをお約束します。Splunk OpenTelemetry ディストリビューションのすべてのメジャーバージョンには、次のメジャーリリースから 1 年間、クリティカルパッチが適用されます。Splunk は次のメジャーリリースを導入した後、メジャーリリースでの機能開発を停止します。"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:41
msgid "For more information on versioning of the Splunk Distribution of OpenTelemetry Go, see :new-page:`the repository <https://github.com/signalfx/splunk-otel-go>` on GitHub."
msgstr "OpenTelemetry Go の Splunk ディストリビューションのバージョン管理については、GitHub の:new-page:`リポジトリ<https://github.com/signalfx/splunk-otel-go>` を参照してください。"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:44 ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:74 ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:45 ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:44 ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:42 ../../gdi/get-data-in/rum/android/install-rum-android.rst:275 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:273 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:312 ../../gdi/get-data-in/rum/react/install-rum-react.rst:197
msgid "How to contribute"
msgstr "投稿方法"

#: ../../gdi/get-data-in/application/go/splunk-go-otel-distribution.rst:46
msgid "The Splunk Distribution of OpenTelemetry Go is open-source software. You can contribute to its improvement by creating pull requests in GitHub. To learn more, see the :new-page:`contributing guidelines <https://github.com/signalfx/splunk-otel-go/blob/main/CONTRIBUTING.md>` on GitHub."
msgstr "OpenTelemetry Go の Splunk ディストリビューションはオープンソースソフトウェアです。GitHubでプルリクエストを作成することで、改良に貢献することができる。詳しくは、GitHub の:new-page:`貢献ガイドライン<https://github.com/signalfx/splunk-otel-go/blob/main/CONTRIBUTING.md>` をご覧ください。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:-1
msgid "If your instrumented Go application is not sending data to Splunk Observability Cloud, or data is missing, follow these steps to identify and resolve the issue."
msgstr "インスツルメンテッド Go アプリケーションが Splunk Observability Cloud にデータを送信しない、またはデータが欠落している場合は、以下の手順に従って問題を特定し、解決してください。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:5
msgid "Troubleshoot Go instrumentation for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud の Go インストルメンテーションのトラブルシューティング"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:10
msgid "When you instrument a Go application using the Splunk Distribution of OpenTelemetry Go and you don't see your data in Splunk Observability Cloud, follow these troubleshooting steps."
msgstr "OpenTelemetry Go の Splunk ディストリビューションを使用して Go アプリケーションを計測しているときに、Splunk Observability Cloud にデータが表示されない場合は、以下のトラブルシューティング手順に従ってください。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:15
msgid "Steps for troubleshooting Go OpenTelemetry issues"
msgstr "Go OpenTelemetryの問題のトラブルシューティングの手順"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:17
msgid "The following steps can help you troubleshoot Go instrumentation issues:"
msgstr "以下の手順は、囲碁インストルメンテーションの問題のトラブルシューティングに役立ちます："

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:19
msgid ":ref:`enable-go-debug-logging`."
msgstr ":ref:`enable-go-debug-logging`."

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:20
msgid ":ref:`check-go-missing-spans`."
msgstr ":ref:`check-go-missing-spans`."

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:21
msgid ":ref:`go-error-dialing-tcp`."
msgstr ":ref:`go-error-dialing-tcp`."

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:28
msgid "Debug logging increases the verbosity of the Go instrumentation. This can help you troubleshoot issues. To activate debug logging, set the ``OTEL_LOG_LEVEL`` environment variable to ``debug``."
msgstr "デバッグ・ロギングは、Goインスツルメンテーションの冗長性を高めます。これは問題のトラブルシューティングに役立つ。デバッグ・ロギングを有効にするには、``OTEL_LOG_LEVEL`` 環境変数を``debug`` に設定する。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:34 ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:32
msgid "Make sure to unset the environment variable after the issue is resolved, as its output might overload systems if left on indefinitely."
msgstr "この環境変数の出力がいつまでもオンのままだとシステムに過負荷をかける可能性があるため、問題解決後は必ず環境変数の設定を解除すること。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:40
msgid "Check for missing spans"
msgstr "スパンの欠落をチェックする"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:42
msgid "Go instrumentation might drop spans due to several reasons. Follow these steps to make sure that the instrumentation isn't dropping valid spans."
msgstr "囲碁のインストルメンテーションは、いくつかの理由でスパンを落とす可能性がある。以下の手順に従って、インストルメンテーションが有効なスパンをドロップしていないことを確認してください。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:47
msgid "All spans from a service are missing"
msgstr "サービスのすべてのスパンが欠けている"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:49
msgid "If you don't see spans in Splunk Observability Cloud for your service, do the following:"
msgstr "サービスのスパンが Splunk Observability Cloud に表示されない場合は、以下を実行してください："

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:51
msgid "Wait a few minutes and check again. There might be delays in the telemetry pipeline."
msgstr "数分待ってからもう一度確認する。テレメトリーのパイプラインに遅れが出るかもしれない。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:53
msgid "Check whether the service names appear in Splunk Observability Cloud with the ``unknown_service`` prefix. For example, ``unknown_service:go``. If that's the case, set the ``OTEL_SERVICE_NAME`` environment variable to the name of your service and restart your application."
msgstr "Splunk Observability Cloud でサービス名が``unknown_service`` 接頭辞付きで表示されるかどうかを確認します。例えば、``unknown_service:go`` 。その場合は、``OTEL_SERVICE_NAME`` 環境変数にサービス名を設定し、アプリケーションを再起動してください。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:55
msgid "Check your debug logs for messages like the following:"
msgstr "デバッグ・ログに以下のようなメッセージがないか確認してください："

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:61
msgid "The value of ``count`` in the log message is the number of spans exported for a given batch:"
msgstr "ログメッセージの``count`` の値は、指定されたバッチでエクスポートされたスパンの数である："

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:63
msgid "If ``count`` is higher than ``0``, the instrumentation is exporting spans. In that case, check the Collector configuration. See :ref:`otel-troubleshooting`."
msgstr "``count`` が``0`` より高ければ、計測器はスパンを輸出している。その場合は、コレクタの設定を確認してください。:ref:`otel-troubleshooting` を参照。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:65
msgid "If ``count`` is equal to ``0``, the instrumentation is not exporting spans. Make sure that all the spans end by calling the ``span.End()`` method."
msgstr "``count`` が``0`` と等しい場合、計測器はスパンをエクスポートしていない。``span.End()`` 、すべてのスパンが終了することを確認する。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:70
msgid "Missing some spans from a service"
msgstr "サービスからいくつかのスパンが欠落している"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:72
msgid "After activating debug logging, check the logs for messages like the following:"
msgstr "デバッグ・ロギングを有効にしたら、以下のようなメッセージがないかログをチェックする："

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:78
msgid "The ``total_dropped`` value is the cumulative number of spans dropped by the instrumentation. If this value is higher than zero, the batch span processor is dropping new spans when the queue is full."
msgstr "``total_dropped`` の値は、インスツルメンテーションによってドロップされたスパンの累積数である。この値がゼロより大きい場合、バッチスパンプロセッサーは、キューが一杯になった時に新しいスパンをドロップしている。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:80
msgid "The batch span processor might drop spans in the following cases:"
msgstr "バッチ・スパン・プロセッサーは、次のような場合にスパンをドロップすることがある："

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:82
msgid "If the value of ``count`` in the log messages is consistently equal to the maximum batch size, the instrumentation might be creating spans faster than they can be exported. If your system has enough resources, increase the batch size and queue size. For example:"
msgstr "ログメッセージの``count`` の値が常に最大バッチサイズと等しい場合、インスツルメンテーションが、エクスポートできるよりも速くスパンを作成している可能性がある。システムに十分なリソースがある場合は、バッチサイズとキューサイズを大きくしてください。例えば、こうだ："

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:90
msgid "If the network has limited bandwidth available, reduce your export batch size. For example:"
msgstr "ネットワークで使用できる帯域幅が限られている場合は、エクスポートバッチサイズを小さくしてください。例えば、こうだ："

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:97
msgid "This might increase the export frequency and drain the queue faster."
msgstr "そうすることで、エクスポートの頻度が上がり、キューの消耗が早くなるかもしれない。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:99
msgid "If the value of ``count`` is not consistently equal to the maximum batch size, make sure you have a stable connection to the target and that you have adequate bandwidth. You can also reduce export timeouts, decrease the export size and frequency, and increase the queue size. For example:"
msgstr "``count`` の値が一貫して最大バッチサイズと等しくない場合は、ターゲットへの接続が安定しており、十分な帯域幅があることを確認する。また、エクスポートのタイムアウトを減らし、エクスポートのサイズと頻度を減らし、キューのサイズを増やすこともできます。例えば、こうだ："

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:110
msgid "Make sure to allocate enough memory resources on your system to accommodate the increase in queue size. Changes in the export configuration might result in the instrumentation dropping whole export batches that take too long."
msgstr "キュー・サイズの増加に対応できるよう、システムに十分なメモリ・リソースを割り当ててください。エクスポート・コンフィギュレーションを変更すると、時間がかかりすぎるエクスポート・バッチ全体がインストゥルメントによってドロップされる可能性がある。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:115
msgid "Make sure the endpoint is correct"
msgstr "エンドポイントが正しいことを確認する"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:117
msgid "If you get the following logged error message, the exporter might not be able to connect with the endpoint:"
msgstr "次のようなログに記録されたエラーメッセージが表示される場合は、エクスポータがエンドポイントに接続できない可能性があります："

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:124
msgid "To solve this issue, make sure the following conditions are true:"
msgstr "この問題を解決するには、以下の条件が真であることを確認する："

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:126
msgid "The target endpoint is up and receiving connections."
msgstr "ターゲット・エンドポイントは起動しており、コネクションを受信している。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:128
msgid "The target endpoint is reachable from the connecting service."
msgstr "ターゲット・エンドポイントは接続サービスから到達可能である。"

#: ../../gdi/get-data-in/application/go/troubleshooting/common-go-troubleshooting.rst:130
msgid "The target endpoint is correct when providing an alternative value."
msgstr "代替値を提供する場合、ターゲットエンドポイントは正しい。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:-1
msgid "The Splunk Distribution of OpenTelemetry Go replaces the deprecated SignalFx Go Tracing Library. To migrate to the Splunk Distribution of OpenTelemetry Go, follow these instructions."
msgstr "OpenTelemetry Go の Splunk ディストリビューションは、非推奨の SignalFx Go トレースライブラリを置き換えるものです。OpenTelemetry Go の Splunk ディストリビューションに移行するには、以下の手順に従ってください。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:5
msgid "Migrate from the SignalFx Tracing Library for Go"
msgstr "Go用SignalFxトレーシング・ライブラリからの移行"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:10
msgid "The Splunk Distribution of OpenTelemetry Go replaces the deprecated SignalFx Go Tracing Library. To migrate to the Splunk Go OTel instrumentation, follow these instructions."
msgstr "OpenTelemetry Go の Splunk ディストリビューションは、非推奨の SignalFx Go トレースライブラリを置き換えるものです。Splunk Go OTel インストルメンテーションに移行するには、以下の手順に従ってください。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:15 ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:17 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:17 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:17 ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:19 ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:19
msgid "Compatibility and requirements"
msgstr "互換性と要件"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:17
msgid "The Splunk Distribution of OpenTelemetry Go requires Go 1.18 and higher. See :ref:`go-otel-requirements`."
msgstr "OpenTelemetry Go の Splunk ディストリビューションには Go 1.18 以上が必要です。:ref:`go-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:20
msgid "Reconfigure the tracing settings"
msgstr "トレース設定の再設定"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:22
msgid "The ``distro`` package from the Splunk Distribution of OpenTelemetry Go replaces the ``tracing`` package from the SignalFx Tracing Library for Go. Replace the ``tracing.Start`` function with ``distro.Run``."
msgstr "Splunk Distribution of OpenTelemetry Go の``distro`` パッケージは、SignalFx Tracing Library for Go の``tracing`` パッケージを置き換えます。``tracing.Start`` 関数を``distro.Run`` に置き換える。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:24
msgid "Use the following replacements in ``tracing.StartOption`` instances:"
msgstr "``tracing.StartOption`` インスタンスでは、以下の置換を使用する："

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:29 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:169
msgid "SignalFx Tracing Library"
msgstr "SignalFx トレーシング・ライブラリ"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:30 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:170
msgid "Splunk OTel Go"
msgstr "Splunk OTel Go"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:31
msgid "``tracing.WithAccessToken``"
msgstr "``tracing.WithAccessToken``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:32
msgid "Use the ``SPLUNK_ACCESS_TOKEN`` environment variable. See  :ref:`main-go-settings` for more information."
msgstr "環境変数``SPLUNK_ACCESS_TOKEN`` 。詳しくは:ref:`main-go-settings` 。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:33
msgid "``tracing.WithEndpointURL``"
msgstr "``tracing.WithEndpointURL``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:34
msgid "Use the ``SPLUNK_REALM`` or other environment variables to configure the exporter. See  :ref:`trace-exporters-settings-go` for more information."
msgstr "``SPLUNK_REALM`` 、またはその他の環境変数を使用してエクスポーターを設定する。詳しくは:ref:`trace-exporters-settings-go` 。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:35
msgid "``tracing.WithGlobalTag``"
msgstr "``tracing.WithGlobalTag``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:36 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:40 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:174 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:176
msgid "See :ref:`go-migration-define-resource`."
msgstr ":ref:`go-migration-define-resource` を参照。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:37
msgid "``tracing.WithRecordedValueMaxLength``"
msgstr "``tracing.WithRecordedValueMaxLength``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:38 ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:184
msgid "See :ref:`go-migration-set-span-limits`."
msgstr ":ref:`go-migration-set-span-limits` を参照。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:39
msgid "``tracing.WithServiceName``"
msgstr "``tracing.WithServiceName``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:41
msgid "``tracing.WithoutLibraryTags``"
msgstr "``tracing.WithoutLibraryTags``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:42
msgid "Metadata about the tracing library is available in the ``Resource`` associated with the ``distro.SDK``. See :ref:`go-migration-define-resource` for more information."
msgstr "トレース・ライブラリに関するメタデータは、``distro.SDK`` に関連する``Resource`` で入手できます。詳しくは:ref:`go-migration-define-resource` 。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:44
msgid "The ``distro.SDK`` must shut down when your application stops. Defer a cleanup function in your application ``main`` function as in the following example:"
msgstr "アプリケーションが停止したら、``distro.SDK`` 。次の例のように、アプリケーションの``main`` 関数のクリーンアップ関数を延期してください："

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:63
msgid "Defining resources"
msgstr "リソースの定義"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:65
msgid "OpenTelemetry uses resources to describe the metadata applied to all spans. The ``distro.Run`` function creates a default ``Resource`` entity containing all the required Splunk and OpenTelemetry metadata for traces. To provide metadata about your service, include it in ``Resource``."
msgstr "OpenTelemetryは、すべてのスパンに適用されるメタデータを記述するためにリソースを使用する。``distro.Run`` 関数は、トレースに必要なすべての Splunk および OpenTelemetry メタデータを含むデフォルトの``Resource`` エンティティを作成します。サービスに関するメタデータを提供するには、``Resource`` 。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:67
msgid "To include additional attributes in the metadata for all traces produced by the ``distro.SDK``, use the ``OTEL_RESOURCE_ATTRIBUTES`` environment variable. For example:"
msgstr "``distro.SDK`` によって生成されたすべてのトレースのメタデータに追加属性を含めるには、``OTEL_RESOURCE_ATTRIBUTES`` 環境変数を使用します。例えば、こうだ："

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:73
msgid "Setting the name of the service is required. If you don't set a service name using the ``OTEL_SERVICE_NAME`` environment variable, trace data might be unidentifiable."
msgstr "サービス名の設定は必須。環境変数``OTEL_SERVICE_NAME`` を使ってサービス名を設定しないと、トレース・データが特定できない場合がある。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:78
msgid "Setting span limits"
msgstr "スパンリミットの設定"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:80
msgid "OpenTelemetry includes guards to prevent code from producing excessive usage of computational resources. You can configure span limits by setting the following environment variables:"
msgstr "OpenTelemetryは、コードが計算リソースを過剰に使用するのを防ぐためのガードを含んでいます。以下の環境変数を設定することで、スパン制限を設定できる："

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:102
msgid "Replace instances of ``tracing.WithRecordedValueMaxLength`` by setting the ``OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT`` environment variable to the same value."
msgstr "``OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT`` 環境変数を同じ値に設定することで、``tracing.WithRecordedValueMaxLength`` のインスタンスを置き換える。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:105
msgid "Rewrite all manual instrumentation"
msgstr "マニュアルの計器類をすべて書き換える"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:107
msgid "Edit all spans created using the ``tracer`` package so that they use OpenTelemetry."
msgstr "``tracer`` パッケージを使用して作成されたすべてのスパンを、OpenTelemetry を使用するように編集する。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:109
msgid "Consider the following function instrumented using the ``tracer`` package:"
msgstr "``tracer`` パッケージを使って計測された次の関数を考えてみよう："

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:126
msgid "After editing all the spans to use OpenTelemetry, the code looks like the following example:"
msgstr "すべてのスパンをOpenTelemetryを使うように編集すると、コードは次の例のようになります："

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:142
msgid "Create OpenTelemetry Tracers"
msgstr "OpenTelemetryトレーサーを作成する"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:144
msgid "OpenTelemetry uses traces to encapsulate the tracing function of a single instrumentation library. Create a ``Tracer`` from the global ``TracerProvider`` registered when you start ``distro.SDK``, as in the following example:"
msgstr "OpenTelemetryは、単一のインスツルメンテーション・ライブラリのトレース機能をカプセル化するためにトレースを使用します。以下の例のように、``distro.SDK`` の起動時に登録されたグローバル``TracerProvider`` から``Tracer`` を作成する："

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:151
msgid "Use the new tracer and its ``Start`` function to replace all ``tracer.StartSpan`` invocations:"
msgstr "新しいトレーサーとその``Start`` 関数を使用して、すべての``tracer.StartSpan`` 呼び出しを置き換える："

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:157
msgid "Use the ``operationName`` parameter from ``tracer.StartSpan`` as the ``name`` parameter for ``Start``."
msgstr "``tracer.StartSpan`` の``operationName`` パラメータを``Start`` の``name`` パラメータとして使用する。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:160
msgid "Replace StartSpanOption instances"
msgstr "StartSpanOptionインスタンスを置き換える"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:162
msgid "Use the following replacements for ``tracer.StartSpanOption`` instances:"
msgstr "``tracer.StartSpanOption`` インスタンスには以下の置換を使用する："

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:171
msgid "``tracer.ChildOf``"
msgstr "``tracer.ChildOf``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:172
msgid "The relationship between spans is defined using a ``context.Context``. The ``context.Context`` passed to ``Start`` needs to contain your parent span. This is done automatically if the context is returned from a previous call to ``Start``. To define a parent span explicitly in a context, use ``trace.ContextWithSpan``."
msgstr "スパン間の関係は、``context.Context`` を使って定義される。``Start`` に渡される``context.Context`` には、親スパンを含める必要があります。これは、以前の``Start`` の呼び出しからコンテキストが返された場合に自動的に行われる。コンテキスト内で親スパンを明示的に定義するには、``trace.ContextWithSpan`` を使用します。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:173
msgid "``tracer.ResourceName``"
msgstr "``tracer.ResourceName``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:175
msgid "``tracer.ServiceName``"
msgstr "``tracer.ServiceName``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:177
msgid "``tracer.SpanType``"
msgstr "``tracer.SpanType``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:178
msgid "``trace.WithSpanKind``"
msgstr "``trace.WithSpanKind``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:179
msgid "``tracer.StartTime``"
msgstr "``tracer.StartTime``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:180
msgid "``trace.WithTimestamp``"
msgstr "``trace.WithTimestamp``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:181
msgid "``tracer.Tag``"
msgstr "``tracer.Tag``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:182
msgid "``trace.WithAttributes``"
msgstr "``trace.WithAttributes``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:183
msgid "``tracer.WithRecordedValueMaxLength``"
msgstr "``tracer.WithRecordedValueMaxLength``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:185
msgid "``tracer.WithSpanID``"
msgstr "``tracer.WithSpanID``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:186
msgid "Span IDs are automatically set. If you require custom span IDs, create a custom ``IDGenerator``."
msgstr "スパンIDは自動的に設定される。カスタムのスパンIDが必要な場合は、カスタム``IDGenerator`` を作成してください。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:189
msgid "End all spans"
msgstr "すべてのスパンを終了する"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:191
msgid "Use the OpenTelemetry ``End`` method to end spans, as in the following example:"
msgstr "次の例のように、OpenTelemetry``End`` メソッドを使用してスパンを終了します："

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:198
msgid "Replace all instrumentation libraries"
msgstr "すべての計装ライブラリを交換する"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:200
msgid "Replace the following instrumentation libraries with the OpenTelemetry equivalent, if available:"
msgstr "もしあれば、以下の計測ライブラリを OpenTelemetry と同等のものに置き換えてください："

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:205
msgid "SignalFx library"
msgstr "SignalFx ライブラリ"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:206
msgid "OpenTelemetry library"
msgstr "OpenTelemetry ライブラリ"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:207
msgid "``aws/aws-sdk-go/aws``"
msgstr "``aws/aws-sdk-go/aws``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:209
msgid "``bradfitz/gomemcache/memcache``"
msgstr "``bradfitz/gomemcache/memcache``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:211
msgid "``confluentinc/confluent-kafka-go/kafka``"
msgstr "``confluentinc/confluent-kafka-go/kafka``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:212
msgid ":new-page:`splunkkafka <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/confluentinc/confluent-kafka-go/kafka/splunkkafka>`"
msgstr ":new-page:`splunkkafka <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/confluentinc/confluent-kafka-go/kafka/splunkkafka>`"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:213
msgid "``database/sql``"
msgstr "``database/sql``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:214
msgid ":new-page:`splunksql <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/database/sql/splunksql>` (:new-page:`splunkmysql <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/go-sql-driver/mysql/splunkmysql>`, :new-page:`splunkpgx <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/jackc/pgx/splunkpgx>`, :new-page:`splunkpq <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/lib/pq/splunkpq>`)"
msgstr ":new-page:`splunksql<https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/database/sql/splunksql>` (:new-page:`splunkmysql<https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/go-sql-driver/mysql/splunkmysql>`,:new-page:`splunkpgx<https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/jackc/pgx/splunkpgx>`,:new-page:`splunkpq<https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/lib/pq/splunkpq>`)"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:215
msgid "``emicklei/go-restful``"
msgstr "``emicklei/go-restful``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:217
msgid "``garyburd/redigo``"
msgstr "``garyburd/redigo``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:218
msgid "``gomodule/redigo`` and :new-page:`splunkredigo <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/gomodule/redigo/splunkredigo>`"
msgstr "``gomodule/redigo`` そして:new-page:`splunkredigo <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/gomodule/redigo/splunkredigo>`"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:219
msgid "``gin-gonic/gin``"
msgstr "``gin-gonic/gin``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:221
msgid "``globalsign/mgo``"
msgstr "``globalsign/mgo``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:222
msgid "``mongodb/mongo-go-driver`` and ``otelmongo``"
msgstr "``mongodb/mongo-go-driver`` そして ``otelmongo``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:223
msgid "``go-chi/chi``"
msgstr "``go-chi/chi``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:224
msgid ":new-page:`splunkchi <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/go-chi/chi/splunkchi>`"
msgstr ":new-page:`splunkchi <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/go-chi/chi/splunkchi>`"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:225
msgid "``go-redis/redis``"
msgstr "``go-redis/redis``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:226
msgid "This package provides native support for OpenTelemetry."
msgstr "本パッケージは OpenTelemetry のネイティブサポートを提供します。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:227
msgid "``gocql/gocql``"
msgstr "``gocql/gocql``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:229
msgid "``gomodule/redigo``"
msgstr "``gomodule/redigo``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:230
msgid ":new-page:`splunkredigo <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/gomodule/redigo/splunkredigo>`"
msgstr ":new-page:`splunkredigo <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/gomodule/redigo/splunkredigo>`"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:231
msgid "``google.golang.org/api``"
msgstr "``google.golang.org/api``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:232
msgid "Use either :new-page:`otelgrpc <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc>` or :new-page:`otelhttp <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp>` with a gRPC or HTTP client when calling ``cloudresourcemanager.NewService``."
msgstr ":new-page:`otelgrpc<https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc>` または:new-page:`otelhttp<https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp>` のいずれかを、gRPC または HTTP クライアントとともに使用して、``cloudresourcemanager.NewService`` を呼び出します。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:233
msgid "``google.golang.org/grpc.v12``"
msgstr "``google.golang.org/grpc.v12``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:234
msgid "Use the latest version of the package alongside :new-page:`otelgrpc <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc>`."
msgstr ":new-page:`otelgrpc<https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc>` と共に最新バージョンのパッケージを使用してください。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:235
msgid "``google.golang.org/grpc``"
msgstr "``google.golang.org/grpc``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:237
msgid "``gorilla/mux``"
msgstr "``gorilla/mux``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:239
msgid "``graph-gophers/graphql-go``"
msgstr "``graph-gophers/graphql-go``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:240
msgid ":new-page:`splunkgraphql <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/graph-gophers/graphql-go/splunkgraphql>`"
msgstr ":new-page:`splunkgraphql <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/graph-gophers/graphql-go/splunkgraphql>`"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:241
msgid "``jinzhu/gorm``"
msgstr "``jinzhu/gorm``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:242
msgid ":new-page:`splunkgorm <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/jinzhu/gorm/splunkgorm>`"
msgstr ":new-page:`splunkgorm <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/jinzhu/gorm/splunkgorm>`"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:243
msgid "``jmoiron/sqlx``"
msgstr "``jmoiron/sqlx``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:244
msgid ":new-page:`splunksqlx <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/jmoiron/sqlx/splunksqlx>`"
msgstr ":new-page:`splunksqlx <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/jmoiron/sqlx/splunksqlx>`"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:245
msgid "``julienschmidt/httprouter``"
msgstr "``julienschmidt/httprouter``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:246
msgid ":new-page:`splunkhttprouter <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/julienschmidt/httprouter/splunkhttprouter>`"
msgstr ":new-page:`splunkhttprouter <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/julienschmidt/httprouter/splunkhttprouter>`"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:247
msgid "``k8s.io/client-go/kubernetes``"
msgstr "``k8s.io/client-go/kubernetes``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:248
msgid ":new-page:`splunkclient-go <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/k8s.io/client-go/splunkclient-go>`"
msgstr ":new-page:`splunkclient-go <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/k8s.io/client-go/splunkclient-go>`"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:249
msgid "``labstack/echo.v4``"
msgstr "``labstack/echo.v4``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:251
msgid "``labstack/echo``"
msgstr "``labstack/echo``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:252
msgid "Upgrade to ``echo@v4`` and use ``otelecho``."
msgstr "``echo@v4`` にアップグレードし、``otelecho`` 。"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:253
msgid "``miekg/dns``"
msgstr "``miekg/dns``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:254
msgid ":new-page:`splunkdns <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/miekg/dns/splunkdns>`"
msgstr ":new-page:`splunkdns <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/miekg/dns/splunkdns>`"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:255
msgid "``mongodb/mongo-go-driver/mongo``"
msgstr "``mongodb/mongo-go-driver/mongo``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:257
msgid "``net/http``"
msgstr "``net/http``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:258
msgid ":new-page:`splunkhttp <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/net/http/splunkhttp>` and :new-page:`otelhttp <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp>`"
msgstr ":new-page:`splunkhttp<https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/net/http/splunkhttp>` および:new-page:`otelhttp <https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp>`"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:259
msgid "``olivere/elastic``"
msgstr "``olivere/elastic``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:260
msgid ":new-page:`splunkelastic <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/gopkg.in/olivere/elastic/splunkelastic>`"
msgstr ":new-page:`splunkelastic <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/gopkg.in/olivere/elastic/splunkelastic>`"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:261
msgid "``Shopify/sarama``"
msgstr "``Shopify/sarama``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:263
msgid "``syndtr/goleveldb/leveldb``"
msgstr "``syndtr/goleveldb/leveldb``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:264
msgid ":new-page:`splunkleveldb <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/syndtr/goleveldb/leveldb/splunkleveldb>`"
msgstr ":new-page:`splunkleveldb <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/syndtr/goleveldb/leveldb/splunkleveldb>`"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:265
msgid "``tidwall/buntdb``"
msgstr "``tidwall/buntdb``"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:266
msgid ":new-page:`splunkbuntdb <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/tidwall/buntdb/splunkbuntdb>`"
msgstr ":new-page:`splunkbuntdb <https://github.com/signalfx/splunk-otel-go/tree/main/instrumentation/github.com/tidwall/buntdb/splunkbuntdb>`"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:269
msgid "Remove the SignalFx Tracing Library"
msgstr "SignalFxトレーシング・ライブラリの削除"

#: ../../gdi/get-data-in/application/go/troubleshooting/migrate-signalfx-go-to-otel.rst:271
msgid "After you've completed the migration, remove all dependencies on ``github.com/signalfx/signalfx-go-tracing`` packages. Make sure to verify this by checking your ``go.mod`` files after cleaning them up."
msgstr "移行が完了したら、``github.com/signalfx/signalfx-go-tracing`` パッケージの依存関係をすべて削除してください。``go.mod`` 、ファイルをクリーンアップした後に確認してください。"

#: ../../gdi/get-data-in/application/istio/istio.rst:-1
msgid "Send telemetry from your Istio service mesh to Splunk Observability Cloud."
msgstr "Istio サービスメッシュから Splunk Observability Cloud にテレメトリを送信します。"

#: ../../gdi/get-data-in/application/istio/istio.rst:5
msgid "Send traces from Istio to Splunk Observability Cloud"
msgstr "Istio から Splunk Observability Cloud にトレースを送信する"

#: ../../gdi/get-data-in/application/istio/istio.rst:10
msgid "Istio 1.8 and higher has native support for observability. You can configure your Istio service mesh to send traces, metrics, and logs to Splunk Observability Cloud by configuring the Splunk OpenTelemetry Collector and Istio."
msgstr "Istio 1.8以降では、observabilityがネイティブでサポートされている。Splunk OpenTelemetry Collector と Istio を設定することで、トレース、メトリクス、ログを Splunk Observability Cloud に送信するように Istio サービスメッシュを設定できます。"

#: ../../gdi/get-data-in/application/istio/istio.rst:13
msgid "The SignalFx Istio Mixer Adapter is deprecated. For details, see the :new-page:`Deprecation Notice <https://github.com/signalfx/signalfx-istio-adapter/blob/main/DEPRECATION-NOTICE.md>`."
msgstr "SignalFx Istio Mixer Adapterは非推奨です。詳しくは、:new-page:`Deprecation Notice<https://github.com/signalfx/signalfx-istio-adapter/blob/main/DEPRECATION-NOTICE.md>` をご覧ください。"

#: ../../gdi/get-data-in/application/istio/istio.rst:18
msgid "To send telemetry from Istio to Splunk Observability Cloud you need the following:"
msgstr "Istio から Splunk Observability Cloud にテレメトリを送信するには、以下が必要です："

#: ../../gdi/get-data-in/application/istio/istio.rst:20
msgid "Istio 1.8 and higher"
msgstr "Istio 1.8 以上"

#: ../../gdi/get-data-in/application/istio/istio.rst:21
msgid "Splunk OpenTelemetry Collector for Kubernetes in host monitoring (agent) mode. See :ref:`otel-install-k8s`."
msgstr "Splunk OpenTelemetry Collector for Kubernetes のホスト監視 (エージェント) モード。:ref:`otel-install-k8s` を参照。"

#: ../../gdi/get-data-in/application/istio/istio.rst:22
msgid "Splunk APM instrumentation with B3 context propagation. To set B3 as the context propagator, set the ``OTEL_PROPAGATORS`` environment variable to ``b3``."
msgstr "B3 コンテキスト伝播による Splunk APM 計測。コンテキストプロパゲータとしてB3を設定するには、``OTEL_PROPAGATORS`` 環境変数を``b3`` に設定する。"

#: ../../gdi/get-data-in/application/istio/istio.rst:24
msgid "OpenCensus and W3C trace context are not supported because Istio does not support them."
msgstr "OpenCensusとW3Cトレースコンテキストは、Istioがサポートしていないため、サポートされていません。"

#: ../../gdi/get-data-in/application/istio/istio.rst:27 ../../gdi/get-data-in/application/ruby/ruby-otel-requirements.rst:29
msgid "Install and configure the Splunk OpenTelemetry Collector"
msgstr "Splunk OpenTelemetry Collector をインストールして設定する"

#: ../../gdi/get-data-in/application/istio/istio.rst:29
msgid "Deploy the Splunk OpenTelemetry Collector for Kubernetes in host monitoring (agent) mode. The required Collector components depend on product entitlements and the data you want to collect. See :ref:`otel-install-k8s`."
msgstr "Splunk OpenTelemetry Collector for Kubernetes をホスト監視 (エージェント) モードでデプロイします。必要な Collector コンポーネントは、製品権限と収集するデータによって異なります。:ref:`otel-install-k8s` を参照。"

#: ../../gdi/get-data-in/application/istio/istio.rst:31
msgid "In the Helm chart for the Collector, set the ``autodetect.istio`` parameter to ``true`` by passing ``--set autodetect.istio=true`` to the ``helm install`` or ``helm upgrade`` commands."
msgstr "コレクターの Helm チャートで、``helm install`` または``helm upgrade`` コマンドに``--set autodetect.istio=true`` を渡して、``autodetect.istio`` パラメータを``true`` に設定します。"

#: ../../gdi/get-data-in/application/istio/istio.rst:33
msgid "You can also add the following snippet to your  values.yaml file, which you can pass using the ``-f myvalues.yaml`` argument:"
msgstr "また、values.yamlファイルに以下のスニペットを追加し、``-f myvalues.yaml`` 引数で渡すこともできる："

#: ../../gdi/get-data-in/application/istio/istio.rst:41
msgid "Ensure that data forwarding doesn't generate telemetry"
msgstr "データ転送がテレメトリを生成しないようにする"

#: ../../gdi/get-data-in/application/istio/istio.rst:43
msgid "Forwarding telemetry from Istio to the Collector might generate undesired telemetry. To avoid this, do one of the following:"
msgstr "IstioからCollectorにテレメトリを転送すると、望ましくないテレメトリが生成される可能性がある。これを避けるには、以下のいずれかを行う："

#: ../../gdi/get-data-in/application/istio/istio.rst:45
msgid "Run the Collector in a separate namespace that lacks the Istio proxy."
msgstr "Istioプロキシがない別のネームスペースでCollectorを実行する。"

#: ../../gdi/get-data-in/application/istio/istio.rst:46
msgid "Add a label to the Collector pods to prevent the injection of the Istio proxy. This is default configuration when the ``autodetect.istio`` parameter is set to ``true``."
msgstr "Istioプロキシの注入を防ぐために、Collectorポッドにラベルを追加する。これは、``autodetect.istio`` パラメーターが``true`` に設定されている場合のデフォルト設定である。"

#: ../../gdi/get-data-in/application/istio/istio.rst:47
msgid "If you need the Istio proxy in the Collector pods, deactivate tracing in the Collector pods. For example:"
msgstr "CollectorポッドでIstioプロキシが必要な場合は、Collectorポッドでトレースを無効にする。例えば、こうだ："

#: ../../gdi/get-data-in/application/istio/istio.rst:60
msgid "The instrumentation pod is a DaemonSet and isn't injected with a proxy by default. If Istio injects proxies in instrumentation pods, deactivate tracing using a ``podAnnotation``."
msgstr "インスツルメンテーション・ポッドはDaemonSetであり、デフォルトではプロキシは注入されない。Istio がインスツルメンテーション・ポッドにプロキシを注入する場合は、``podAnnotation`` を使用してトレースを無効にします。"

#: ../../gdi/get-data-in/application/istio/istio.rst:63
msgid "Configure the Istio Operator"
msgstr "Istio オペレータの設定"

#: ../../gdi/get-data-in/application/istio/istio.rst:65
msgid "Configure the Istio Operator following these steps:"
msgstr "以下の手順に従って、Istio Operator を設定する："

#: ../../gdi/get-data-in/application/istio/istio.rst:67
msgid "Set an ``environment.deployment`` attribute."
msgstr "``environment.deployment`` 属性を設定する。"

#: ../../gdi/get-data-in/application/istio/istio.rst:68
msgid "Configure the Zipkin tracer to send data to the Splunk OpenTelemetry Collector running on the host."
msgstr "ホスト上で実行されている Splunk OpenTelemetry Collector にデータを送信するように Zipkin トレーサーを設定します。"

#: ../../_includes/event-sending-functionality.md:6 ../../gdi/get-data-in/application/istio/istio.rst:70 ../../gdi/get-data-in/application/istio/istio.rst:119 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:121 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:161 ../../gdi/monitors-orchestration/openshift-cluster.md:31 ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:276 ../../gdi/opentelemetry/discovery-mode.rst:99 ../../gdi/opentelemetry/install-k8s.rst:125 ../../gdi/opentelemetry/kubernetes-config.rst:54 ../../gdi/opentelemetry/kubernetes-config.rst:95 ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:134
msgid "For example:"
msgstr "例えば、こうだ："

#: ../../gdi/get-data-in/application/istio/istio.rst:95
msgid "To activate the new configuration, run:"
msgstr "新しいコンフィギュレーションを有効にするには、以下を実行する："

#: ../../gdi/get-data-in/application/istio/istio.rst:101
msgid "Restart the pods that contain the Istio proxy to activate the new tracing configuration."
msgstr "Istio プロキシを含むポッドを再起動して、新しいトレース設定を有効にする。"

#: ../../gdi/get-data-in/application/istio/istio.rst:104
msgid "Update all pods in the service mesh"
msgstr "サービスメッシュ内のすべてのポッドを更新する"

#: ../../gdi/get-data-in/application/istio/istio.rst:106
msgid "Update all pods that are in the Istio service mesh to include an ``app`` label. Istio uses this to define the Splunk service."
msgstr "Istio サービスメッシュにあるすべてのポッドを更新して、``app`` ラベルを含める。Istio はこれを使用して Splunk サービスを定義する。"

#: ../../gdi/get-data-in/application/istio/istio.rst:109
msgid "If you don't set the ``app`` label, identifying the relationship between the proxy and your service is more difficult."
msgstr "もし``app`` ラベルを設定しなければ、プロキシとあなたのサービスの関係を特定することはより難しくなる。"

#: ../../gdi/get-data-in/application/istio/istio.rst:112
msgid "Recommendations"
msgstr "推薦の言葉"

#: ../../gdi/get-data-in/application/istio/istio.rst:114
msgid "To make the best use of full-fidelity data retention, configure Istio to send as much trace data as possible by configuring sampling and maximum tag length as follows:"
msgstr "完全忠実なデータ保持を最大限に活用するには、サンプリングと最大タグ長を以下のように設定して、できるだけ多くのトレースデータを送信するようにIstioを設定する："

#: ../../gdi/get-data-in/application/istio/istio.rst:116
msgid "Set a ``sampling`` value of ``100`` to ensure that all traces have correct root spans."
msgstr "すべてのトレースが正しいルートスパンを持つように、``100`` の``sampling`` 値を設定する。"

#: ../../gdi/get-data-in/application/istio/istio.rst:117
msgid "Set a ``max_path_tag_length`` value of ``99999`` to avoid that key tags get truncated."
msgstr "キー・タグが切り捨てられるのを避けるため、``max_path_tag_length`` の値を``99999`` に設定する。"

#: ../../gdi/get-data-in/application/istio/istio.rst:145
msgid "For more information on how to configure Istio see the Istio distributed tracing installation documentation."
msgstr "Istioの設定方法の詳細については、Istio分散トレースのインストールドキュメントを参照してください。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:-1
msgid "Configure the agent of the Splunk Distribution of OpenTelemetry Java to suit most of your instrumentation needs, like correlating traces with logs, activating custom sampling, and more."
msgstr "OpenTelemetry Java の Splunk ディストリビューションのエージェントを設定することで、トレースとログの相関、カスタムサンプリングの有効化など、ほとんどの計測ニーズに対応できます。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:5
msgid "Configure the Java agent for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用の Java エージェントを設定する"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:10
msgid "You can configure the Java agent from the Splunk Distribution of OpenTelemetry Java to suit most of your instrumentation needs. In most cases, modifying the basic configuration is enough to get started. More advanced settings are also available."
msgstr "OpenTelemetry Java の Splunk ディストリビューションから、ほとんどの計測ニーズに合うように Java エージェントを設定できます。たいていの場合、基本的なコンフィギュレーションを変更するだけで始められる。より高度な設定も可能。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:12
msgid "The following sections describe all available settings for configuring the Java Virtual Machine (JVM) agent, including options for activating new features that are unique to the Splunk Distribution of OpenTelemetry Java."
msgstr "以下のセクションでは、OpenTelemetry Java の Splunk ディストリビューション独自の新機能を有効にするオプションを含め、Java 仮想マシン (JVM) エージェントを構成するために利用可能なすべての設定について説明します。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:19
msgid "You can change the agent settings in two ways:"
msgstr "エージェントの設定は2つの方法で変更できます："

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:33
msgid "Add a system property as runtime parameter. For example:"
msgstr "システム・プロパティをランタイム・パラメータとして追加する。例えば、こうだ："

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:42
msgid "Environment variables are the preferred way of configuring OpenTelemetry agents. System properties, if specified, override existing environment variables."
msgstr "OpenTelemetry エージェントを設定するには、環境変数が望ましい方法です。システム・プロパティが指定されている場合は、既存の環境変数を上書きする。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:49
msgid "The following settings are specific to the Splunk Distribution of OpenTelemetry Java:"
msgstr "以下の設定は、OpenTelemetry Java の Splunk ディストリビューション固有のものです："

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:59
msgid "The name of your organization's realm, for example, ``us0``. When you set the realm, telemetry is sent directly to the ingest endpoint of Splunk Observability Cloud, bypassing the Splunk Distribution of OpenTelemetry Collector. |br| |br| System property: ``splunk.realm``"
msgstr "あなたの組織のレルムの名前。例えば、``us0`` 。レルムを設定すると、テレメトリは Splunk Distribution of OpenTelemetry Collector をバイパスして Splunk Observability Cloud のインジェストエンドポイントに直接送信されます。|br| |br| システムプロパティ： ``splunk.realm``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:61
msgid "A Splunk authentication token that lets exporters send data directly to Splunk Observability Cloud. Unset by default. Not required unless you need to send data to the Splunk Observability Cloud ingest endpoint. See :ref:`admin-tokens`. |br| |br| System property: ``splunk.access.token``"
msgstr "Splunk Observability Cloud に直接データを送信するための Splunk 認証トークン。デフォルトでは未設定。Splunk Observability Cloud インジェストエンドポイントにデータを送信する必要がなければ不要です。:ref:`admin-tokens` を参照。|br| |br| システムプロパティ： ``splunk.access.token``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:63
msgid "Activates the addition of server trace information to HTTP response headers. For more information, see :ref:`server-trace-information-java`. The default value is ``true``. |br| |br| System property: ``splunk.trace-response-header.enabled``"
msgstr "HTTP レスポンスヘッダーへのサーバートレース情報の追加を有効にする。詳細は:ref:`server-trace-information-java` を参照。デフォルト値は``true`` 。|br| |br| システムプロパティ： ``splunk.trace-response-header.enabled``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:64
msgid "``SPLUNK_METRICS_FORCE_FULL_COMMANDLINE``"
msgstr "``SPLUNK_METRICS_FORCE_FULL_COMMANDLINE``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:65
msgid "Adds the full command line as a resource attribute for all metrics. If false, commands longer than 255 characters are truncated. |br| |br| System property: ``splunk.metrics.force_full_commandline``"
msgstr "すべてのメトリクスのリソース属性として完全なコマンド行を追加します。falseの場合、255文字以上のコマンドは切り捨てられる。|br| |br| システムプロパティ： ``splunk.metrics.force_full_commandline``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:82
msgid "Name of the service or application you're instrumenting. Takes precedence over the service name defined in the ``OTEL_RESOURCE_ATTRIBUTES`` variable. |br| |br| System property: ``otel.service.name``"
msgstr "インスツルメンテーションするサービスまたはアプリケーションの名前。変数``OTEL_RESOURCE_ATTRIBUTES`` で定義されたサービス名より優先される。|br| |br| システムプロパティ： ``otel.service.name``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:84
msgid "Comma-separated list of resource attributes added to every reported span. For example, ``key1=val1,key2=val2``. |br| |br| System property: ``otel.resource.attributes``"
msgstr "報告されたスパンごとに追加されるリソース属性のカンマ区切りリスト。例えば、``key1=val1,key2=val2`` 。|br| |br| システムプロパティ： ``otel.resource.attributes``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:85
msgid "``OTEL_INSTRUMENTATION_COMMON_`` |br| ``PEER_SERVICE_MAPPING``"
msgstr "``OTEL_INSTRUMENTATION_COMMON_`` |br| ``PEER_SERVICE_MAPPING``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:86
msgid "Used to add a ``peer.service`` attribute by specifying a comma-separated list of mapping from hostnames or IP addresses. For example, if set to ``1.2.3.4=cats-srv,dogs-srv.com=dogs-api``, requests to ``1.2.3.4`` have a ``peer.service`` attribute of ``cats-service`` and requests to ``dogs-srv.com`` have one of ``dogs-api``. |br| |br| System property: ``otel.instrumentation.common`` |br| ``.peer-service-mapping``"
msgstr "ホスト名またはIPアドレスからのマッピングのカンマ区切りリストを指定して、``peer.service`` 属性を追加するために使用します。例えば、``1.2.3.4=cats-srv,dogs-srv.com=dogs-api`` に設定された場合、``1.2.3.4`` へのリクエストは``peer.service`` 属性に``cats-service`` を持ち、``dogs-srv.com`` へのリクエストは``dogs-api`` を持つ。|br| |br| システムプロパティ： ``otel.instrumentation.common`` |br| ``.peer-service-mapping``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:87
msgid "``OTEL_INSTRUMENTATION_METHODS_INCLUDE``"
msgstr "``OTEL_INSTRUMENTATION_METHODS_INCLUDE``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:88
msgid "Adds ``@WithSpan`` annotation functionality for the target method string. Format is ``my.package.MyClass1[m1,m2];my.package.MyClass2[m3]``. |br| |br| System property: ``otel.instrumentation.methods.include``"
msgstr "対象メソッド文字列の``@WithSpan`` アノテーション機能を追加します。フォーマットは``my.package.MyClass1[m1,m2];my.package.MyClass2[m3]`` 。|br| |br| システムプロパティ： ``otel.instrumentation.methods.include``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:89
msgid "``OTEL_INSTRUMENTATION_OPENTELEMETRY`` |br| ``_ANNOTATIONS_EXCLUDE_METHODS``"
msgstr "``OTEL_INSTRUMENTATION_OPENTELEMETRY`` |br| ``_ANNOTATIONS_EXCLUDE_METHODS``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:90
msgid "Suppresses ``@WithSpan`` instrumentation for specific methods. Format is ``my.package.MyClass1[m1,m2];my.package.MyClass2[m3]``. |br| |br| System property: ``otel.instrumentation.opentelemetry`` |br| ``-annotations.exclude-methods``"
msgstr "``@WithSpan`` 、特定のメソッドに対する計装を抑制する。フォーマットは``my.package.MyClass1[m1,m2];my.package.MyClass2[m3]`` 。|br| |br| システムプロパティ： ``otel.instrumentation.opentelemetry`` |br| ``-annotations.exclude-methods``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:92
msgid "Maximum number of attributes per span. The default value is unlimited. |br| |br| System property: ``otel.span.attribute.count.limit``"
msgstr "スパンあたりの最大属性数。デフォルト値は無制限。|br| |br| システムプロパティ： ``otel.span.attribute.count.limit``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:94
msgid "Maximum number of events per span. The default value is unlimited. |br| |br| System property: ``otel.span.event.count.limit``"
msgstr "1スパンあたりの最大イベント数。デフォルト値は無制限。|br| |br| システムプロパティ： ``otel.span.event.count.limit``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:96
msgid "Maximum number of links per span. The default value is ``1000``. |br| |br| System property: ``otel.span.link.count.limit``"
msgstr "スパンあたりの最大リンク数。デフォルト値は``1000`` 。|br| |br| システムプロパティ： ``otel.span.link.count.limit``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:113
msgid "Trace exporter to use. You can set multiple comma-separated values. |br| |br| System property: ``otel.traces.exporter``"
msgstr "使用するトレースエクスポーター。カンマ区切りの値を複数設定することができます。|br| |br| システムプロパティ： ``otel.traces.exporter``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:115
msgid "OTLP gRPC endpoint. The default value is ``http://localhost:4317``. |br| |br| System property: ``otel.exporter.otlp.endpoint``"
msgstr "OTLP gRPCエンドポイント。デフォルト値は``http://localhost:4317`` 。|br| |br| システムプロパティ： ``otel.exporter.otlp.endpoint``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:117
msgid "The Splunk Distribution of OpenTelemetry Java uses the OTLP gRPC span exporter by default. To send data directly to Splunk Observability Cloud, see :ref:`export-directly-to-olly-cloud-java`."
msgstr "OpenTelemetry Java の Splunk ディストリビューションは、デフォルトで OTLP gRPC span エクスポーターを使用します。Splunk Observability Cloud に直接データを送信するには、:ref:`export-directly-to-olly-cloud-java` を参照してください。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:122 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:118
msgid "Samplers configuration"
msgstr "サンプラーの設定"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:124 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:120
msgid "The following settings control trace sampling:"
msgstr "以下の設定はトレースサンプリングをコントロールする："

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:133 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:129
msgid "``OTEL_TRACES_SAMPLER``"
msgstr "``OTEL_TRACES_SAMPLER``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:134
msgid "Sampler to use. The default value is ``always_on``. |br| |br| In addition to the samplers provided by the OpenTelemetry Java SDK, you can use the following samplers:"
msgstr "使用するサンプラー。デフォルト値は``always_on`` 。|br| |br| OpenTelemetry Java SDKが提供するサンプラーに加えて、以下のサンプラーを使用できます："

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:136
msgid "``internal_root_off``: Drops all traces with root spans where ``spanKind`` is ``INTERNAL``, ``CLIENT`` or ``PRODUCER``. Keeps root spans where ``spanKind`` is ``SERVER`` or ``CONSUMER``."
msgstr "``internal_root_off``:``spanKind`` が``INTERNAL``,``CLIENT`` または``PRODUCER`` であるルートスパンを持つすべてのトレースを削除します。``spanKind`` が``SERVER`` または``CONSUMER`` であるルートスパンを保持する。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:137
msgid "``rules``: Drops all traces that originate from specific endpoints, as defined by the value of the ``OTEL_TRACES_SAMPLER_ARG`` setting. Only applies to spans where ``spanKind`` is ``SERVER``."
msgstr "``rules``:``OTEL_TRACES_SAMPLER_ARG`` の設定値で定義された、特定のエンドポイントから発信されたすべてのトレースを削除します。``spanKind`` が``SERVER`` のスパンにのみ適用される。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:139
msgid "System property: ``otel.traces.sampler``"
msgstr "システムプロパティ： ``otel.traces.sampler``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:141 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:131
msgid "``OTEL_TRACES_SAMPLER_ARG``"
msgstr "``OTEL_TRACES_SAMPLER_ARG``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:142
msgid "Semicolon-separated list of rules for the ``rules`` sampler. For example: |br| |br| ``OTEL_TRACES_SAMPLER_ARG=drop=/healthcheck;fallback=always_on`` |br| |br| The following rules are supported:"
msgstr "``rules`` サンプラーのルールをセミコロンで区切ったリスト。例えば |br| |br| ``OTEL_TRACES_SAMPLER_ARG=drop=/healthcheck;fallback=always_on`` |br| |br| 以下のルールがサポートされています："

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:144
msgid "``drop=<value>``: The sampler drops a span if its ``http.target`` attribute has a substring equal to the value you've provided. For example: ``drop=/status``."
msgstr "``drop=<value>``:サンプラーは、スパンの``http.target`` 属性に、指定した値と同じ部分文字列がある場合、そのスパンを削除します。例：``drop=/status``."

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:145
msgid "``fallback=<sampler>``: Sampler to use if no ``drop`` rule matched a given span. Supported samplers are ``always_on`` and ``parentbased_always_on``. If you define multiple fallback samplers, the Java agent uses the last one."
msgstr "``fallback=<sampler>``:指定されたスパンにマッチする``drop`` ルールがない場合に使用するサンプラー。対応サンプラーは``always_on`` と``parentbased_always_on`` 。複数のフォールバック・サンプラーを定義した場合、Javaエージェントは最後のものを使用する。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:147
msgid "If you don't set arguments when using the ``rules`` sampler, the instrumentation defaults to the ``parentbased_always_on`` sampler. |br| |br| System property: ``otel.traces.sampler.arg``"
msgstr "``rules`` サンプラーを使用する際に引数を設定しなかった場合、インストゥルメンテーションのデフォルトは``parentbased_always_on`` サンプラーになる。|br| |br| システムプロパティ： ``otel.traces.sampler.arg``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:150
msgid "Example of trace sampling"
msgstr "微量サンプリングの例"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:152
msgid "The following example shows how to use the ``rules`` traces sampler to exclude the ``/healthcheck`` endpoint from monitoring:"
msgstr "次の例は、``rules`` traces sampler を使用して、``/healthcheck`` エンドポイントを監視から除外する方法を示しています："

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:159
msgid "All requests to downstream services that happen as a consequence of calling an excluded endpoint are also excluded."
msgstr "除外されたエンドポイントを呼び出した結果として起こるダウンストリームサービスへのリクエストもすべて除外される。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:174
msgid "Comma-separated list of propagators you want to use. The default value is ``tracecontext,baggage``. You can find the list of supported propagators in the OpenTelemetry documentation. |br| |br| System property: ``otel.propagators``"
msgstr "使用したいプロパゲータのカンマ区切りリスト。デフォルト値は``tracecontext,baggage`` 。サポートされているプロパゲータのリストはOpenTelemetryのドキュメントにあります。|br| |br| システムプロパティ： ``otel.propagators``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:176
msgid "For backward compatibility with older versions of the Splunk Distribution of OpenTelemetry Java or the SignalFx Java Agent, use the b3multi trace propagator:"
msgstr "旧バージョンの Splunk Distribution of OpenTelemetry Java または SignalFx Java Agent との後方互換性を保つには、b3multi トレースプロパゲータを使用してください："

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:191
msgid "Java settings for AlwaysOn Profiling"
msgstr "AlwaysOn プロファイリングの Java 設定"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:193
msgid "The following settings control the AlwaysOn Profiling feature for the Java agent:"
msgstr "以下の設定は、Java エージェントの AlwaysOn プロファイリング機能を制御します："

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:202 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:216
msgid "``SPLUNK_PROFILER_ENABLED``"
msgstr "``SPLUNK_PROFILER_ENABLED``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:203
msgid "Activates AlwaysOn Profiling. The default value is ``false``. |br| |br| System property: ``splunk.profiler.enabled``"
msgstr "AlwaysOn プロファイリングを有効にする。デフォルト値は``false`` 。|br| |br| システムプロパティ： ``splunk.profiler.enabled``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:204 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:222
msgid "``SPLUNK_PROFILER_LOGS_ENDPOINT``"
msgstr "``SPLUNK_PROFILER_LOGS_ENDPOINT``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:205
msgid "The collector endpoint for profiler logs. By default, it takes the value of ``otel.exporter.otlp.endpoint``. |br| |br| System property: ``splunk.profiler.logs-endpoint``"
msgstr "プロファイラ・ログのコレクタ・エンドポイント。デフォルトでは、``otel.exporter.otlp.endpoint`` の値を取る。|br| |br| システムプロパティ： ``splunk.profiler.logs-endpoint``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:206
msgid "``SPLUNK_PROFILER_DIRECTORY``"
msgstr "``SPLUNK_PROFILER_DIRECTORY``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:207
msgid "The location of the JDK Flight Recorder files. The default value is the local directory (``.``). |br| |br| System property: ``splunk.profiler.directory``"
msgstr "JDKフライトレコーダーのファイルの場所。デフォルト値はローカル・ディレクトリ(``.``)である。|br| |br| システムプロパティ： ``splunk.profiler.directory``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:208
msgid "``SPLUNK_PROFILER_RECORDING_DURATION``"
msgstr "``SPLUNK_PROFILER_RECORDING_DURATION``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:209
msgid "The duration of the recording unit. You can define duration in the form ``<number><unit>``, where the unit can be ``ms``, ``s``, ``m``, ``h``, or ``d``. The default interval is ``20s``. If you enter a number but not a unit, the default unit is assumed to be ``ms``. |br| |br| System property: ``splunk.profiler.recording.duration``"
msgstr "記録単位の継続時間。``<number><unit>`` という形式で期間を定義することができる。単位は``ms`` 、``s`` 、``m`` 、``h`` 、``d`` のいずれか。デフォルトの間隔は``20s`` です。数値を入力し、単位を入力しなかった場合、デフォルトの単位は``ms`` となる。|br| |br| システムプロパティ： ``splunk.profiler.recording.duration``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:210
msgid "``SPLUNK_PROFILER_KEEP_FILES``"
msgstr "``SPLUNK_PROFILER_KEEP_FILES``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:211
msgid "Whether to preserve JDK Flight Recorder (JFR) files or not. The default value is ``false``, which means that JFR files are deleted after processing. |br| |br| System property: ``splunk.profiler.keep-files``"
msgstr "JDKフライトレコーダー（JFR）ファイルを保存するかどうか。デフォルト値は``false`` で、これはJFRファイルが処理後に削除されることを意味する。|br| |br| システムプロパティ： ``splunk.profiler.keep-files``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:212 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:225
msgid "``SPLUNK_PROFILER_CALL_STACK_INTERVAL``"
msgstr "``SPLUNK_PROFILER_CALL_STACK_INTERVAL``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:213
msgid "Frequency with which call stacks are sampled, in milliseconds. The default value is 10000 milliseconds. |br| |br| System property: ``splunk.profiler.call.stack.interval``"
msgstr "コールスタックをサンプリングする頻度（ミリ秒単位）。デフォルト値は10000ミリ秒。|br| |br| システムプロパティ： ``splunk.profiler.call.stack.interval``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:214 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:219
msgid "``SPLUNK_PROFILER_MEMORY_ENABLED``"
msgstr "``SPLUNK_PROFILER_MEMORY_ENABLED``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:215
msgid "Activates memory profiling with all the options. Activating memory profiling overrides the value of ``splunk.metrics.enabled``. The default value is ``false``. Requires ``splunk.profiler.enabled`` to be set to ``true``. To activate or deactivate specific memory profiling options, set their values explicitly. |br| |br| System property: ``splunk.profiler.memory.enabled``"
msgstr "すべてのオプションでメモリプロファイリングを有効にする。メモリ・プロファイリングを有効にすると、``splunk.metrics.enabled`` の値が上書きされる。デフォルト値は``false`` 。``splunk.profiler.enabled`` を``true`` に設定する必要がある。特定のメモリー・プロファイリング・オプションを有効または無効にするには、明示的にその値を設定する。|br| |br| システムプロパティ： ``splunk.profiler.memory.enabled``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:216
msgid "``SPLUNK_PROFILER_MEMORY_EVENT_RATE``"
msgstr "``SPLUNK_PROFILER_MEMORY_EVENT_RATE``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:217
msgid "Rate limit for memory profiling data, expressed as stack traces per unit of time. You can define duration in the form ``<number>/<unit>``, where the unit can be ``s`` or ``m``. The default value is ``150/s``, or 150 stack traces per second. Consider increasing this value when collecting memory profiling data from complex, multithreaded workloads, like application servers. |br| |br| System property: ``splunk.profiler.memory.event.rate``"
msgstr "メモリプロファイリングデータのレート制限。単位時間あたりのスタックトレースで表される。``<number>/<unit>`` という形式で継続時間を定義することができます。単位は``s`` または``m`` です。デフォルト値は``150/s`` 、1秒間に150スタック・トレースである。アプリケーションサーバーのような複雑なマルチスレッドワークロードからメモリプロファイリングデータを収集する場合は、この値を増やすことを検討する。|br| |br| システムプロパティ： ``splunk.profiler.memory.event.rate``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:218
msgid "``SPLUNK_PROFILER_TLAB_ENABLED``"
msgstr "``SPLUNK_PROFILER_TLAB_ENABLED``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:219
msgid "Whether to activate TLAB memory events. The default value is the value assigned to the ``splunk.profiler.memory.enabled`` property. |br| |br| System property: ``splunk.profiler.tlab.enabled``"
msgstr "TLABメモリーイベントをアクティブにするかどうか。デフォルト値は、``splunk.profiler.memory.enabled`` プロパティに割り当てられた値です。|br| |br| システムプロパティ： ``splunk.profiler.tlab.enabled``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:220
msgid "``SPLUNK_PROFILER_INCLUDE_INTERNAL_STACKS``"
msgstr "``SPLUNK_PROFILER_INCLUDE_INTERNAL_STACKS``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:221
msgid "Whether to include stack traces of the agent internal threads and stack traces with JDK internal frames. The default value is ``false``. |br| |br| System property: ``splunk.profiler.include.internal.stacks``"
msgstr "エージェント内部スレッドのスタックトレースと JDK 内部フレームのスタックトレースを含めるかどうか。デフォルト値は``false`` 。|br| |br| システムプロパティ： ``splunk.profiler.include.internal.stacks``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:222
msgid "``SPLUNK_PROFILER_TRACING_STACKS_ONLY``"
msgstr "``SPLUNK_PROFILER_TRACING_STACKS_ONLY``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:223
msgid "Whether to include only stack traces that are linked to a span context. The default value is ``false``. When set to ``true``, call stacks not linked to span contexts are dropped, which is useful to reduce data ingest volume. |br| |br| System property: ``splunk.profiler.tracing.stacks.only``"
msgstr "スパンコンテキストにリンクされているスタックトレースのみを含めるかどうか。デフォルト値は``false`` 。``true`` に設定すると、スパンコンテキストにリンクされていないコールスタックは削除される。|br| |br| システムプロパティ： ``splunk.profiler.tracing.stacks.only``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:230
msgid "Metrics collection settings"
msgstr "メトリクス収集設定"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:232
msgid "The following settings control metrics collection for the Java agent:"
msgstr "以下の設定は、Java エージェントのメトリクス収集を制御します："

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:241 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:256
msgid "``SPLUNK_METRICS_ENABLED``"
msgstr "``SPLUNK_METRICS_ENABLED``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:242
msgid "Activates exporting metrics. If you activate memory profiling using the ``splunk.profiler.memory.enabled`` property, the value of ``splunk.metrics.enabled`` is ignored. See :ref:`java-otel-metrics-attributes` for more information. Default is ``false``. |br| |br| System property: ``splunk.metrics.enabled``"
msgstr "メトリクスのエクスポートを有効にします。``splunk.profiler.memory.enabled`` プロパティを使用してメモリ・プロファイリングを有効にした場合、``splunk.metrics.enabled`` の値は無視されます。詳しくは:ref:`java-otel-metrics-attributes` 。デフォルトは``false`` 。|br| |br| システムプロパティ： ``splunk.metrics.enabled``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:243 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:259 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:104
msgid "``SPLUNK_METRICS_ENDPOINT``"
msgstr "``SPLUNK_METRICS_ENDPOINT``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:244
msgid "The OTel collector metrics endpoint. Default is ``http://localhost:9943``. |br| |br| System property: ``splunk.metrics.endpoint``"
msgstr "OTel コレクター・メトリクスのエンドポイント。デフォルトは``http://localhost:9943`` 。|br| |br| システムプロパティ： ``splunk.metrics.endpoint``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:245
msgid "``SPLUNK_METRICS_EXPORT_INTERVAL``"
msgstr "``SPLUNK_METRICS_EXPORT_INTERVAL``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:246
msgid "Interval between pushing metrics. You can define duration in the form ``<number><unit>``, where the unit can be ``ms``, ``s``, ``m``, ``h``, or ``d``. The default interval is ``30s``. If you enter a number but not a unit, the default unit is assumed to be ``ms``. |br| |br| System property: ``splunk.metrics.export.interval``"
msgstr "メトリクスをプッシュする間隔。``<number><unit>`` という形式で期間を定義することができる。単位は``ms`` 、``s`` 、``m`` 、``h`` 、``d`` のいずれか。デフォルトの間隔は``30s`` です。数値を入力し、単位を入力しなかった場合、デフォルトの単位は``ms`` となる。|br| |br| システムプロパティ： ``splunk.metrics.export.interval``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:248
msgid "Metric support is experimental."
msgstr "メトリックのサポートは実験的である。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:262 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:242 ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:73 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:122 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:131
msgid "The ``Server-Timing`` header contains the ``traceId`` and ``spanId`` parameters in ``traceparent`` format. For more information, see the Server-Timing and traceparent documentation on the W3C website."
msgstr "``Server-Timing`` ヘッダーには、``traceId`` と``spanId`` パラメータが``traceparent`` 形式で含まれている。詳しくは、W3CウェブサイトのServer-Timingとtraceparentのドキュメントをご覧ください。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:264
msgid "The following server frameworks and libraries add ``Server-Timing`` information:"
msgstr "以下のサーバー・フレームワークとライブラリーは、``Server-Timing`` の情報を追加する："

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:266
msgid "Servlet API versions 2.2 to 4.X."
msgstr "サーブレット API バージョン 2.2 から 4.X まで。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:267
msgid "Netty versions 3.8 to 4.0."
msgstr "Nettyバージョン3.8から4.0。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:269 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:244 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:124
msgid "If you need to deactivate trace response headers, set ``SPLUNK_TRACE_RESPONSE_HEADER_ENABLED`` to ``false``."
msgstr "トレース・レスポンス・ヘッダを無効にする必要がある場合は、``SPLUNK_TRACE_RESPONSE_HEADER_ENABLED`` を``false`` に設定する。"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:274 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:136
msgid "Other settings"
msgstr "その他の設定"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:283 ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:86
msgid "``OTEL_JAVAAGENT_ENABLED``"
msgstr "``OTEL_JAVAAGENT_ENABLED``"

#: ../../gdi/get-data-in/application/java/configuration/advanced-java-otel-configuration.rst:284
msgid "Globally activates the Java agent automatic instrumentation. The default value is ``true``. Useful for deactivating auto instrumentation in testing scenarios or pipelines. |br| |br| System property: ``otel.javaagent.enabled``"
msgstr "Javaエージェントの自動インスツルメンテーションをグローバルに有効にします。デフォルト値は``true`` 。テストシナリオやパイプラインで自動計測を無効にするのに便利です。|br| |br| システムプロパティ： ``otel.javaagent.enabled``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:-1
msgid "The Splunk Distribution of OpenTelemetry Java collects the following application metrics data and WebEngine attributes. You can also collect custom metrics through Micrometer."
msgstr "OpenTelemetry Java の Splunk ディストリビューションは、以下のアプリケーションメトリクスデータと WebEngine 属性を収集します。また、Micrometerを通じてカスタムメトリクスを収集することもできます。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:5
msgid "Metrics and attributes collected by the Splunk OTel Java agent"
msgstr "Splunk OTel Java エージェントが収集したメトリクスと属性"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:10
msgid "The agent of the Splunk Distribution of OpenTelemetry Java collects the following application metrics data and attributes in addition to all that the upstream OpenTelemetry agent collects. To learn about the different metric types, see :ref:`metric-types`."
msgstr "OpenTelemetry Java の Splunk ディストリビューションのエージェントは、アップストリームの OpenTelemetry エージェントが収集するすべてのものに加えて、以下のアプリケーションメトリクスのデータと属性を収集します。メトリックの種類については、:ref:`metric-types` をご覧ください。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:12
msgid "This feature is experimental, and exported metric data and configuration properties might change. See more in :new-page:`GitHub <https://github.com/signalfx/splunk-otel-java/blob/main/docs/metrics.md#metrics-and-attributes/>`."
msgstr "この機能は実験的なものであり、エクスポートされるメトリックデータや構成プロパティは変更される可能性があります。もっと見る:new-page:`GitHub<https://github.com/signalfx/splunk-otel-java/blob/main/docs/metrics.md#metrics-and-attributes/>`."

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:19
msgid "To collect Java application and Java Virtual Machine metrics, see :ref:`enable_automatic_metric_collection`."
msgstr "JavaアプリケーションとJava仮想マシンのメトリクスを収集するには、:ref:`enable_automatic_metric_collection` を参照してください。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:24
msgid "Application metrics"
msgstr "アプリケーション・メトリクス"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:26
msgid "The agent of the Splunk Distribution of OpenTelemetry Java collects the following application metrics."
msgstr "OpenTelemetry Java の Splunk ディストリビューションのエージェントは、以下のアプリケーションメトリクスを収集します。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:31
msgid "Default metric dimensions"
msgstr "デフォルトのメートル寸法"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:33
msgid "The following dimensions are automatically added to all metrics exported by the agent:"
msgstr "以下のディメンジョンは、エージェントによってエクスポートされるすべてのメトリクスに自動的に追加されます："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:40 ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Dimension"
msgstr "寸法"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:42 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:159 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:193
msgid "``deployment.environment``"
msgstr "``deployment.environment``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:43
msgid "Value of the ``deployment.environment`` resource attribute, if present."
msgstr "存在する場合は、``deployment.environment`` リソース属性の値。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:44
msgid "``runtime``"
msgstr "``runtime``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:45
msgid "Value of the ``process.runtime.name`` resource attribute, for example ``OpenJDK Runtime Environment``."
msgstr "``process.runtime.name`` リソース属性の値、例えば``OpenJDK Runtime Environment`` 。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:46
msgid "``process.pid``"
msgstr "``process.pid``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:47
msgid "The Java process identifier (PID)."
msgstr "Javaプロセス識別子（PID）。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:48 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:169
msgid "``container.id``"
msgstr "``container.id``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:49
msgid "Identifier of the container, if applicable."
msgstr "該当する場合、容器の識別子。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:50 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:217 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:267 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:297 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:413
msgid "``host.name``"
msgstr "``host.name``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:51
msgid "Name of the host."
msgstr "ホストの名前。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:52 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:137
msgid "``service``"
msgstr "``service``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:53
msgid "Value of the ``service.name`` resource attribute."
msgstr "``service.name`` リソース属性の値。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:60
msgid "The agent collects the following metrics through the following libraries:"
msgstr "エージェントは、以下のライブラリを通じて以下のメトリクスを収集します："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:67
msgid "Library/Framework"
msgstr "ライブラリ/フレームワーク"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:68
msgid "Instrumentation"
msgstr "計装"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:69 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:40 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:104 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:134 ../../gdi/get-data-in/compute/k8s.rst:19 ../../gdi/get-data-in/compute/linux.rst:13 ../../gdi/get-data-in/compute/windows.rst:13
msgid "Supported versions"
msgstr "対応バージョン"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:70
msgid ":ref:`jvm-metrics`"
msgstr ":ref:`jvm-metrics`"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:71
msgid "``jvm-metrics-splunk``"
msgstr "``jvm-metrics-splunk``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:72
msgid "Java runtimes version 8 and higher"
msgstr "Javaランタイムバージョン8以上"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:73
msgid ":ref:`Apache DBCP2 connection pool metrics <connection-pool-metrics>`"
msgstr ":ref:`Apache DBCP2 connection pool metrics <connection-pool-metrics>`"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:74
msgid "``commons-dbcp2-splunk``"
msgstr "``commons-dbcp2-splunk``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:75
msgid "Version 2.0 and higher"
msgstr "バージョン2.0以上"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:76
msgid ":ref:`c3p0 connection pool metrics <connection-pool-metrics>`"
msgstr ":ref:`c3p0 connection pool metrics <connection-pool-metrics>`"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:77
msgid "``c3p0-splunk``"
msgstr "``c3p0-splunk``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:78
msgid "Version 0.9.5 and higher"
msgstr "バージョン0.9.5以上"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:79
msgid ":ref:`HikariCP connection pool metrics <connection-pool-metrics>`"
msgstr ":ref:`HikariCP connection pool metrics <connection-pool-metrics>`"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:80
msgid "``hikaricp-splunk``"
msgstr "``hikaricp-splunk``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:81
msgid "Version 3.0 and higher"
msgstr "バージョン3.0以上"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:82
msgid ":ref:`Oracle Universal Connection Pool metrics (UCP) <connection-pool-metrics>`"
msgstr ":ref:`Oracle Universal Connection Pool metrics (UCP) <connection-pool-metrics>`"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:83
msgid "``oracle-ucp-splunk``"
msgstr "``oracle-ucp-splunk``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:84
msgid "Version 11.2.0.4 and higher"
msgstr "バージョン11.2.0.4以上"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:85
msgid ":ref:`Tomcat JDBC connection pool metrics <connection-pool-metrics>`"
msgstr ":ref:`Tomcat JDBC connection pool metrics <connection-pool-metrics>`"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:86
msgid "``tomcat-jdbc-splunk``"
msgstr "``tomcat-jdbc-splunk``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:87 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:93
msgid "Version 8.5 and higher"
msgstr "バージョン8.5以上"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:88
msgid ":ref:`Vibur DBCP connection pool metrics <connection-pool-metrics>`"
msgstr ":ref:`Vibur DBCP connection pool metrics <connection-pool-metrics>`"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:89
msgid "``vibur-dbcp-splunk``"
msgstr "``vibur-dbcp-splunk``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:90
msgid "Version 20.0 and higher"
msgstr "バージョン20.0以上"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:91
msgid ":ref:`Tomcat thread pool metrics <thread-pool-metrics>`"
msgstr ":ref:`Tomcat thread pool metrics <thread-pool-metrics>`"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:92
msgid "``tomcat``"
msgstr "``tomcat``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:94
msgid ":ref:`WebSphere Liberty thread pool metrics <thread-pool-metrics>`"
msgstr ":ref:`WebSphere Liberty thread pool metrics <thread-pool-metrics>`"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:95
msgid "``liberty``"
msgstr "``liberty``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:96
msgid "Version 20.0.0.12"
msgstr "バージョン20.0.0.12"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:97
msgid ":ref:`WebLogic thread pool metrics <thread-pool-metrics>`"
msgstr ":ref:`WebLogic thread pool metrics <thread-pool-metrics>`"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:98
msgid "``weblogic``"
msgstr "``weblogic``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:99
msgid "Versions 12.x and 14.x"
msgstr "バージョン12.xおよび14.x"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:104
msgid "JVM metrics"
msgstr "JVMメトリクス"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:106
msgid "The Splunk OTel Java agent collects the following Java Virtual Machine (JVM) metrics when metric collection is activated:"
msgstr "Splunk OTel Java エージェントは、メトリック収集が有効になっている場合、以下の Java 仮想マシン (JVM) メトリックを収集します："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:111
msgid "ClassLoader metrics"
msgstr "クラスローダーの測定基準"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:113
msgid "The agent collects the following ClassLoader metrics:"
msgstr "エージェントは、以下の ClassLoader メトリクスを収集します："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:123
msgid "``runtime.jvm.classes.loaded``"
msgstr "``runtime.jvm.classes.loaded``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:125
msgid "Number of loaded classes."
msgstr "ロードされたクラスの数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:126
msgid "``runtime.jvm.classes.unloaded``"
msgstr "``runtime.jvm.classes.unloaded``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:128
msgid "Total number of unloaded classes since the process started."
msgstr "プロセスが開始してからアンロードされたクラスの総数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:133
msgid "Garbage collection metrics"
msgstr "ガベージコレクション・メトリクス"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:135
msgid "The agent collects the following garbage collection (GC) metrics:"
msgstr "エージェントは、以下のガベージ・コレクション（GC）メトリクスを収集する："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:145
msgid "``runtime.jvm.gc.concurrent.phase.time``"
msgstr "``runtime.jvm.gc.concurrent.phase.time``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:147
msgid "Time spent in concurrent phase, in milliseconds."
msgstr "コンカレント・フェーズに費やされた時間（ミリ秒単位）。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:148
msgid "``runtime.jvm.gc.live.data.size``"
msgstr "``runtime.jvm.gc.live.data.size``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:150
msgid "Size of long-lived heap memory pool after reclamation, in bytes."
msgstr "再利用後の長寿命ヒープメモリプールのサイズ（バイト単位）。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:151
msgid "``runtime.jvm.gc.max.data.size``"
msgstr "``runtime.jvm.gc.max.data.size``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:153
msgid "Maximum size of long-lived heap memory pool, in bytes."
msgstr "長寿命ヒープメモリプールの最大サイズ（バイト単位）。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:154
msgid "``runtime.jvm.gc.memory.allocated``"
msgstr "``runtime.jvm.gc.memory.allocated``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:156
msgid "Increase in the size of the young heap memory pool after one garbage collection and before the next."
msgstr "あるガベージコレクションの後、次のガベージコレクションの前に、若いヒープメモリプールのサイズが増加する。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:157
msgid "``runtime.jvm.gc.memory.promoted``"
msgstr "``runtime.jvm.gc.memory.promoted``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:159
msgid "Count of positive increases in the size of the old generation memory pool from before to after garbage collection."
msgstr "ガベージコレクション前からガベージコレクション後にかけて、旧世代のメモリプールのサイズが正方向に増加した数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:160
msgid "``runtime.jvm.gc.pause``"
msgstr "``runtime.jvm.gc.pause``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:162
msgid "Time spent in garbage collection pause, in seconds. It produces multiple aggregations, such as ``runtime.jvm.gc.pause.avg``, ``runtime.jvm.gc.pause.count``, ``runtime.jvm.gc.pause.max``, or ``runtime.jvm.gc.pause.totalTime``."
msgstr "ガベージコレクションの一時停止に費やされた時間（秒）。``runtime.jvm.gc.pause.avg`` 、``runtime.jvm.gc.pause.count`` 、``runtime.jvm.gc.pause.max`` 、``runtime.jvm.gc.pause.totalTime`` のような複数の集合体を生成する。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:167
msgid "Heap pressure metrics"
msgstr "ヒープ圧力メトリクス"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:169
msgid "The agent collects the following heap pressure metrics:"
msgstr "エージェントは以下のヒープ圧のメトリクスを収集する："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:179
msgid "``runtime.jvm.gc.overhead``"
msgstr "``runtime.jvm.gc.overhead``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:181
msgid "An approximation of the percentage of CPU time used by GCP activities over the last lookback period or since monitoring began, whichever is shorter, in the range [0..1]."
msgstr "直近のルックバック期間またはモニタリング開始以降のいずれか短い期間において、GCPアクティビティが使用したCPU時間の割合の近似値。[0..1] の範囲。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:182
msgid "``runtime.jvm.memory.usage.after.gc``"
msgstr "``runtime.jvm.memory.usage.after.gc``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:184
msgid "The percentage of long-lived heap pool used after the last GCP event, in the range [0..1]."
msgstr "[0..1]の範囲で、最後のGCPイベント後に使用された長寿命ヒーププールの割合。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:189
msgid "Memory metrics"
msgstr "メモリ・メトリクス"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:191
msgid "The agent collects the following memory metrics:"
msgstr "エージェントは以下のメモリ・メトリクスを収集する："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:201
msgid "``process.runtime.jvm.memory.allocated``"
msgstr "``process.runtime.jvm.memory.allocated``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:204
msgid "Total number of bytes allocated by JVM threads since the previous data point was emitted."
msgstr "前のデータ・ポイントが発行されてから、JVMスレッドによって割り当てられたバイト数の合計。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:204 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:210
msgid "Use the rate per second rollup."
msgstr "1秒あたりのレートをロールアップする。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:205 ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:211
msgid "Requires to activate memory profiling, or to use the ``splunk.metrics.experimental.enabled`` flag."
msgstr "メモリ・プロファイリングを有効にするか、``splunk.metrics.experimental.enabled`` フラグを使用する必要がある。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:206
msgid "``process.runtime.jvm.memory.reclaimed``"
msgstr "``process.runtime.jvm.memory.reclaimed``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:210
msgid "Total number of bytes reclaimed by the GCP since the previous data point was emitted. Notes:"
msgstr "前のデータ・ポイントが発行されてからGCPが取り戻したバイト数の合計。注釈"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:209
msgid "This metric might be inaccurate for concurrent garbage collectors such as Shenandoah or ZGC."
msgstr "ShenandoahやZGCのような同時実行ガベージコレクタでは、この指標は不正確かもしれない。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:212
msgid "``runtime.jvm.buffer.count``"
msgstr "``runtime.jvm.buffer.count``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:214
msgid "An estimate of the number of buffers in the pool."
msgstr "プール内のバッファ数の推定値。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:215
msgid "``runtime.jvm.buffer.memory.used``"
msgstr "``runtime.jvm.buffer.memory.used``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:217
msgid "An estimate of the memory that the JVM is using for this buffer pool, in bytes."
msgstr "JVMがこのバッファ・プールに使用しているメモリの推定値（バイト単位）。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:218
msgid "``runtime.jvm.buffer.total.capacity``"
msgstr "``runtime.jvm.buffer.total.capacity``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:220
msgid "An estimate of the total capacity of the buffers in this pool, in bytes."
msgstr "このプール内のバッファの総容量の見積もり（バイト単位）。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:221
msgid "``runtime.jvm.memory.committed``"
msgstr "``runtime.jvm.memory.committed``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:223
msgid "Amount of memory available to the JVM, in bytes."
msgstr "JVMが利用可能なメモリー量（バイト単位）。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:224
msgid "``runtime.jvm.memory.max``"
msgstr "``runtime.jvm.memory.max``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:226
msgid "Maximum amount of memory available for memory management, in bytes."
msgstr "メモリ管理で使用可能なメモリの最大量（バイト単位）。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:227
msgid "``runtime.jvm.memory.used``"
msgstr "``runtime.jvm.memory.used``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:229
msgid "Amount of used memory, in bytes."
msgstr "使用メモリ量（バイト）。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:231
msgid "All memory pool metrics share the following tags:"
msgstr "すべてのメモリ・プール測定基準は、以下のタグを共有しています："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:240
msgid "``area``"
msgstr "``area``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:241
msgid "Either ``heap`` or ``nonheap``"
msgstr "``heap`` または ``nonheap``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:242 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:32 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:194 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:31
msgid "``id``"
msgstr "``id``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:243
msgid "Name of the memory pool. For example, ``Perm Gen``"
msgstr "メモリプールの名前。例えば、こうだ、 ``Perm Gen``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:248
msgid "Thread metrics"
msgstr "スレッド配置"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:250
msgid "The agent collects the following thread metrics:"
msgstr "エージェントは、以下のスレッド・メトリクスを収集する："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:260
msgid "``runtime.jvm.threads.daemon``"
msgstr "``runtime.jvm.threads.daemon``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:262
msgid "Number of live daemon threads."
msgstr "デーモンのスレッド数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:263
msgid "``runtime.jvm.threads.live``"
msgstr "``runtime.jvm.threads.live``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:265
msgid "Number of live threads, including both daemon and nondaemon threads."
msgstr "デーモン・スレッドとノンデーモン・スレッドの両方を含む、ライブ・スレッド数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:266
msgid "``runtime.jvm.threads.peak``"
msgstr "``runtime.jvm.threads.peak``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:268
msgid "Peak live thread count since the JVM started or peak was reset."
msgstr "JVMの開始またはピークがリセットされてからのピーク・ライブ・スレッド数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:269
msgid "``runtime.jvm.threads.states``"
msgstr "``runtime.jvm.threads.states``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:271
msgid "Number of threads per ``state`` as a metric tag."
msgstr "``state`` 、指標タグとしてのスレッド数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:278
msgid "The Splunk Distribution of OpenTelemetry Java instruments several Java Database Connectivity (JDBC) connection pool implementations:"
msgstr "OpenTelemetry Java の Splunk ディストリビューションは、いくつかの Java Database Connectivity (JDBC) 接続プールの実装を実装しています："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:280
msgid "Apache DBCP2"
msgstr "Apache DBCP2"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:281
msgid "c3p0"
msgstr "c3p0"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:282
msgid "HikariCP"
msgstr "ひかりCP"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:283
msgid "Oracle Universal Connection Pool (UCP)"
msgstr "オラクル・ユニバーサル接続プール（UCP）"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:284
msgid "Tomcat JDBC"
msgstr "Tomcat JDBC"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:285
msgid "Vibur DBCP"
msgstr "バイバーDBCP"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:286
msgid "WebSphere Liberty"
msgstr "WebSphere Liberty"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:287
msgid "WebLogic thread pools"
msgstr "WebLogicスレッドプール"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:299
msgid "``db.pool.connections``"
msgstr "``db.pool.connections``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:301
msgid "Number of open connections."
msgstr "開いている接続の数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:302
msgid "``db.pool.connections.active``"
msgstr "``db.pool.connections.active``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:304
msgid "Number of open connections that are in use."
msgstr "使用中のオープン接続数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:305
msgid "``db.pool.connections.idle``"
msgstr "``db.pool.connections.idle``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:307
msgid "Number of open connections that are idle."
msgstr "アイドル状態のオープン接続数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:308
msgid "``db.pool.connections.idle.max``"
msgstr "``db.pool.connections.idle.max``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:310
msgid "Maximum number of idle open connections allowed."
msgstr "アイドルオープン接続の最大許容数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:311
msgid "``db.pool.connections.idle.min``"
msgstr "``db.pool.connections.idle.min``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:313
msgid "Minimum number of idle open connections allowed."
msgstr "アイドルオープン接続の最小許容数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:314
msgid "``db.pool.connections.max``"
msgstr "``db.pool.connections.max``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:317
msgid "``db.pool.connections.pending_threads``"
msgstr "``db.pool.connections.pending_threads``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:319
msgid "Number of threads that are waiting for an open connection."
msgstr "オープン接続を待機しているスレッド数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:320
msgid "``db.pool.connections.timeouts``"
msgstr "``db.pool.connections.timeouts``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:322
msgid "Number of connection timeouts that have happened since the application started."
msgstr "アプリケーション起動後に発生した接続タイムアウトの数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:323
msgid "``db.pool.connections.create_time``"
msgstr "``db.pool.connections.create_time``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:325
msgid "Time it took to create a new connection."
msgstr "新しい接続を作成するのにかかった時間。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:326
msgid "``db.pool.connections.wait_time``"
msgstr "``db.pool.connections.wait_time``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:328
msgid "Time it took to get an open connection from the pool."
msgstr "プールからオープン接続を取得するのにかかった時間。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:329
msgid "``db.pool.connections.use_time``"
msgstr "``db.pool.connections.use_time``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:331
msgid "Time between borrowing a connection and returning it to the pool."
msgstr "コネクションを借りてからプールに返すまでの時間。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:333
msgid "All connection pool metrics share the following tags:"
msgstr "すべての接続プール・メトリクスは、以下のタグを共有しています："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:342
msgid "``pool.name``"
msgstr "``pool.name``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:343
msgid "Name of the connection pool. Spring bean name if Spring is used, JMX object name otherwise."
msgstr "接続プールの名前。Spring を使用している場合は Spring Bean 名、そうでない場合は JMX オブジェクト名。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:344
msgid "``pool.type``"
msgstr "``pool.type``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:345
msgid "Type or implementation of the connection pool. For example, ``c3p0``, ``dbcp2``, or ``hikari``."
msgstr "接続プールのタイプまたは実装。例えば、``c3p0`` 、``dbcp2`` 、``hikari`` 。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:350
msgid "Thread pool metrics"
msgstr "スレッドプールのメトリクス"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:352
msgid "The Splunk Distribution of OpenTelemetry Java instruments the following thread pool implementations:"
msgstr "OpenTelemetry Java の Splunk ディストリビューションは、以下のスレッドプール実装を実装しています："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:354
msgid "Tomcat connector thread pools"
msgstr "Tomcatコネクタのスレッドプール"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:355
msgid "WebSphere Liberty web request thread pool"
msgstr "WebSphere Liberty Web リクエスト・スレッド・プール"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:356
msgid "Weblogic thread pools"
msgstr "Weblogicスレッドプール"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:358
msgid "Each of the supported connection pools reports a subset of the following metrics:"
msgstr "サポートされている各接続プールでは、以下のメトリックのサブセットがレポートされます："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:368
msgid "``executor.threads``"
msgstr "``executor.threads``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:370
msgid "Number of threads in the pool."
msgstr "プール内のスレッド数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:371
msgid "``executor.threads.active``"
msgstr "``executor.threads.active``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:373
msgid "Number of threads that are executing code."
msgstr "コードを実行しているスレッドの数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:374
msgid "``executor.threads.idle``"
msgstr "``executor.threads.idle``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:376
msgid "Number of threads that aren't executing code."
msgstr "コードを実行していないスレッドの数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:377
msgid "``executor.threads.core``"
msgstr "``executor.threads.core``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:379
msgid "Core thread pool size, expressed as the number of threads that are always kept in the pool."
msgstr "コアのスレッドプールサイズ。常にプールに保持されるスレッド数で表される。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:380
msgid "``executor.threads.max``"
msgstr "``executor.threads.max``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:382
msgid "Maximum number of threads in the pool."
msgstr "プール内の最大スレッド数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:383
msgid "``executor.tasks.submitted``"
msgstr "``executor.tasks.submitted``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:385
msgid "Total number of tasks submitted to the executor."
msgstr "実行者に提出されたタスクの総数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:386
msgid "``executor.tasks.completed``"
msgstr "``executor.tasks.completed``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:388
msgid "Total number of tasks completed by the executor."
msgstr "実行者が完了したタスクの総数。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:390
msgid "All thread pool metrics have the following tags:"
msgstr "すべてのスレッド・プール・メトリクスには以下のタグがあります："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:399
msgid "``executor.name``"
msgstr "``executor.name``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:400
msgid "Name of the thread pool."
msgstr "スレッドプールの名前。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:401
msgid "``executor.type``"
msgstr "``executor.type``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:402
msgid "Type/implementation of the connection pool. For example, ``tomcat``, ``liberty``, or ``weblogic``."
msgstr "接続プールのタイプ/実装。例えば、``tomcat`` 、``liberty`` 、``weblogic`` 。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:407
msgid "WebEngine attributes"
msgstr "ウェブエンジンの属性"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:409
msgid "The Splunk Distribution of OpenTelemetry Java captures data about the application server and adds the following attributes to `SERVER` spans:"
msgstr "OpenTelemetry Java の Splunk ディストリビューションは、アプリケーションサーバーに関するデータを取得し、`SERVER` のスパンに以下の属性を追加します："

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:415
msgid "Span attribute"
msgstr "スパン属性"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:417
msgid "``webengine.name``"
msgstr "``webengine.name``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:418
msgid "Name of the applications server. For example, ``tomcat``."
msgstr "アプリケーションサーバーの名前。例えば、``tomcat`` 。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:419
msgid "``webengine.version``"
msgstr "``webengine.version``"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:420
msgid "Version of the application server."
msgstr "アプリケーション・サーバーのバージョン。"

#: ../../gdi/get-data-in/application/java/configuration/java-otel-metrics-attributes.rst:422
msgid "For a list of supported application servers, see the OpenTelemetry documentation at https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/main/docs/supported-libraries.md#application-servers."
msgstr "サポートされているアプリケーションサーバーのリストについては、OpenTelemetry のドキュメント（https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/main/docs/supported-libraries.md#application-servers）を参照してください。"

#: ../../gdi/get-data-in/application/java/get-started.rst:10
msgid "Instrument a Java application"
msgstr "Javaアプリケーションをインストルメントする"

#: ../../gdi/get-data-in/application/java/get-started.rst:10
msgid "Instructions for app servers"
msgstr "アプリサーバーに関する説明"

#: ../../gdi/get-data-in/application/java/get-started.rst:10 ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:179
msgid "Configure the Java agent"
msgstr "Javaエージェントの設定"

#: ../../gdi/get-data-in/application/java/get-started.rst:10
msgid "Performance overhead"
msgstr "パフォーマンス・オーバーヘッド"

#: ../../gdi/get-data-in/application/java/get-started.rst:10
msgid "Troubleshoot the Java agent"
msgstr "Javaエージェントのトラブルシューティング"

#: ../../gdi/get-data-in/application/java/get-started.rst:10
msgid "About Splunk OTel Java"
msgstr "Splunk OTel Java について"

#: ../../gdi/get-data-in/application/java/get-started.rst:10
msgid "Migrate from SignalFx Java agent"
msgstr "SignalFx Javaエージェントからの移行"

#: ../../gdi/get-data-in/application/java/get-started.rst:-1
msgid "Instrument Java applications automatically to export spans and metrics to Splunk Observability Cloud."
msgstr "Java アプリケーションを自動的にインストルメントし、スパンとメトリクスを Splunk Observability Cloud にエクスポートします。"

#: ../../gdi/get-data-in/application/java/get-started.rst:5
msgid "Instrument Java applications for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用に Java アプリケーションをインストルメントする"

#: ../../gdi/get-data-in/application/java/get-started.rst:25
msgid "The Splunk Distribution of OpenTelemetry Java provides a Java Virtual Machine (JVM) agent that automatically adds APM instrumentation to your Java application or service. The instrumentation captures distributed traces and sends them to Splunk Observability Cloud. For more information, see :ref:`splunk-java-otel-dist`."
msgstr "OpenTelemetry Java の Splunk ディストリビューションは、Java アプリケーションやサービスに APM 測定機能を自動的に追加する Java 仮想マシン (JVM) エージェントを提供します。インスツルメンテーションは分散トレースをキャプチャし、Splunk Observability Cloud に送信する。詳細は:ref:`splunk-java-otel-dist` を参照。"

#: ../../gdi/get-data-in/application/java/get-started.rst:27
msgid "To instrument your Java application, follow these steps:"
msgstr "Javaアプリケーションを計測するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/java/get-started.rst:29
msgid "Check compatibility and requirements. See :ref:`java-otel-requirements`."
msgstr "互換性と必要条件を確認してください。:ref:`java-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/java/get-started.rst:30
msgid "Instrument your Java application. See :ref:`instrument-java-applications`."
msgstr "Javaアプリケーションを計測する。:ref:`instrument-java-applications` を参照。"

#: ../../gdi/get-data-in/application/java/get-started.rst:31
msgid "Configure your instrumentation. See :ref:`configure-java-instrumentation`."
msgstr "計測器を設定する。:ref:`configure-java-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/java/get-started.rst:33
msgid "You can also automatically instrument your Java applications along with the Splunk Distribution of OpenTelemetry Collector installation. Automatic instrumentation removes the need to install and configure the Java agent separately. See :ref:`auto-instrumentation-java` for the installation instructions."
msgstr "また、Splunk Distribution of OpenTelemetry Collector のインストールと一緒に、Java アプリケーションを自動的に計測することもできます。自動インスツルメンテーションにより、Javaエージェントを個別にインストールして設定する必要がなくなる。取り付け方法は:ref:`auto-instrumentation-java` を参照。"

#: ../../gdi/get-data-in/application/java/get-started.rst:35
msgid "The SignalFx Java Agent is deprecated and will reach End of Support on December 17th, 2022. To migrate to the Splunk Distribution of OpenTelemetry Java, see :ref:`migrate-signalfx-java-agent-to-otel`."
msgstr "SignalFx Javaエージェントは非推奨となり、2022年12月17日にサポート終了となります。OpenTelemetry Java の Splunk ディストリビューションに移行するには、:ref:`migrate-signalfx-java-agent-to-otel` を参照してください。"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:-1
msgid "You can configure Java logging libraries to include tracing attributes provided automatically by the Splunk OTel Java agent. Use the trace metadata to correlate traces with log events and explore logs in Splunk Observability Cloud."
msgstr "Splunk OTel Java エージェントが自動的に提供するトレース属性を含めるように Java ログライブラリを設定できます。トレースメタデータを使用して、トレースとログイベントを関連付け、Splunk Observability Cloud でログを探索します。"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:5
msgid "Connect Java trace data with logs for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud のログと Java トレースデータを接続する"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:10
msgid "You can configure Java logging libraries to include tracing attributes provided automatically by the Splunk OTel Java agent. Use the trace metadata to correlate traces with log events and explore logs in Splunk."
msgstr "Splunk OTel Java エージェントが自動的に提供するトレース属性を含めるように Java ログライブラリを設定できます。トレースメタデータを使用して、トレースとログイベントを関連付け、Splunk でログを探索します。"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:17
msgid "The Splunk OTel Java agent supports the following logging libraries:"
msgstr "Splunk OTel Java エージェントは以下のロギングライブラリをサポートしています："

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:19
msgid "Log4j 2 2.7 and higher"
msgstr "Log4j 2 2.7 以上"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:20
msgid "Log4j 1 1.2 and higher"
msgstr "Log4j 1 1.2 以上"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:21
msgid "Logback 1.0 and higher"
msgstr "ログバック1.0以上"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:28
msgid "The Splunk OTel Java agent provides the following attributes for logging libraries:"
msgstr "Splunk OTel Java エージェントは、ロギングライブラリに対して以下の属性を提供します："

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:30
msgid "Trace information: ``trace_id`` and ``span_id``"
msgstr "トレース情報：``trace_id``  ``span_id``"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:31
msgid "Resource attributes: ``service.name`` and ``deployment.environment``"
msgstr "リソース属性：``service.name``  ``deployment.environment``"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:33
msgid "The following examples show how to include trace data in log statements produced by the logging library:"
msgstr "以下の例は、ロギング・ライブラリーが生成するログ文にトレース・データを含める方法を示している："

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:37
msgid "Log4j"
msgstr "Log4j"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:39
msgid "Edit your Log4j configuration, for example in the ``src/main/resources/log4j2.xml`` file. Depending on your environment, you might have to edit a different file or use a different configuration system."
msgstr "Log4jのコンフィギュレーションを、例えば``src/main/resources/log4j2.xml`` 。お使いの環境によっては、別のファイルを編集するか、別のコンフィギュレーション・システムを使用する必要があるかもしれません。"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:58 ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:82
msgid "For Spring Boot applications, you can also edit the ``application.properties`` file to add the following logging pattern:"
msgstr "Spring Bootアプリケーションでは、``application.properties`` ファイルを編集して、以下のロギングパターンを追加することもできる："

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:64
msgid "Logback"
msgstr "ログバック"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:66
msgid "Edit your Logback configuration, for example in the ``src/main/resources/logback.xml`` file. Depending on your environment, you might have to edit a different file or use a different configuration system."
msgstr "``src/main/resources/logback.xml`` ファイルなどで、Logback の設定を編集してください。お使いの環境によっては、別のファイルを編集するか、別のコンフィギュレーション・システムを使用する必要があるかもしれません。"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:89
msgid "Add resource attributes to your application logs"
msgstr "アプリケーションログにリソース属性を追加する"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:91
msgid "The Splunk Distribution of OpenTelemetry Java exposes resource attributes as system properties prefixed with ``otel.resource.``, which you can use to configure logger libraries."
msgstr "OpenTelemetry Java の Splunk ディストリビューションは、ロガーライブラリを設定するために使用できる``otel.resource.`` をプレフィックスとするシステムプロパティとして、リソース属性を公開しています。"

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:93
msgid "The following examples show how to add Splunk OTel Java metadata to the logger configuration:"
msgstr "以下の例は、Splunk OTel Java メタデータをロガー設定に追加する方法を示しています："

#: ../../gdi/get-data-in/application/java/instrumentation/connect-traces-logs.rst:111
msgid "If you're instrumenting a serverless service or application, use environment variables instead:"
msgstr "サーバーレスのサービスやアプリケーションを計測する場合は、代わりに環境変数を使用する："

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:-1
msgid "Start sending metrics and log telemetry to Splunk Observability Cloud using the Splunk OpenTelemetry Java agent to automatically instrument your Java application or service. Follow these steps to get started."
msgstr "Splunk OpenTelemetry Java エージェントを使用して Splunk Observability Cloud にメトリクスとログの遠隔測定を送信し、Java アプリケーションまたはサービスを自動的に計測します。以下の手順で始めましょう。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:5
msgid "Instrument a Java application for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用の Java アプリケーションをインストルメントする"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:10
msgid "The Java agent from the Splunk Distribution of OpenTelemetry Java can automatically instrument your Java application by injecting instrumentation to Java classes. To get started, use the guided setup or follow the instructions manually."
msgstr "OpenTelemetry Java の Splunk ディストリビューションの Java エージェントは、Java クラスにインスツルメンテーションを注入することで、Java アプリケーションを自動的にインスツルメンテーションできます。開始するには、ガイド付きセットアップを使用するか、手動で指示に従ってください。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:15
msgid "To generate all the basic installation commands for your environment and application, use the Java guided setup. To access the Java guided setup, follow these steps:"
msgstr "あなたの環境とアプリケーションの基本的なインストール・コマンドをすべて生成するには、Javaガイド付きセットアップを使用します。Javaガイド付きセットアップにアクセスするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:18
msgid "Open the :new-page:`Java guided setup <https://login.signalfx.com/#/gdi/scripted/java-tracing/step-1?gdiState=%7B\"integrationId\":\"java-tracing\"%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`Javaガイド付きセットアップ<https://login.signalfx.com/#/gdi/scripted/java-tracing/step-1?gdiState=%7B\"integrationId\":\"java-tracing\"%7D>` を開く。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:28
msgid "Select the :guilabel:`Java` tile to open the Java guided setup."
msgstr ":guilabel:`Java` タイルを選択し、Javaガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:31
msgid "Install the Splunk Distribution of OpenTelemetry Java manually"
msgstr "OpenTelemetry Java の Splunk ディストリビューションを手動でインストールする"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:33
msgid "Follow these instructions to install the Splunk Distribution of OpenTelemetry Java:"
msgstr "以下の手順に従って、OpenTelemetry Java の Splunk ディストリビューションをインストールしてください："

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:37
msgid ":ref:`install-enable-jvm-agent`"
msgstr ":ref:`install-enable-jvm-agent`"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:36
msgid ":ref:`enable_profiling_java`"
msgstr ":ref:`enable_profiling_java`"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:37
msgid ":ref:`enable_automatic_metric_collection`"
msgstr ":ref:`enable_automatic_metric_collection`"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:38
msgid ":ref:`ignore_endpoints_java`"
msgstr ":ref:`ignore_endpoints_java`"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:39
msgid ":ref:`configure-java-instrumentation`"
msgstr ":ref:`configure-java-instrumentation`"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:44
msgid "Install and activate the Java agent"
msgstr "Javaエージェントのインストールと有効化"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:46
msgid "Follow these steps to automatically instrument your application using the Java agent:"
msgstr "以下の手順に従って、Javaエージェントを使用してアプリケーションを自動的に計測してください："

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:48
msgid "Check that you meet the requirements. See :ref:`java-otel-requirements`."
msgstr "あなたが条件を満たしていることを確認してください。:ref:`java-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:50
msgid "Download the JAR file for the latest version of the agent:"
msgstr "エージェントの最新バージョンのJARファイルをダウンロードする："

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:87 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:83 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:89 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:89
msgid "(Optional) Set the deployment environment and service version:"
msgstr "(オプション）展開環境とサービスバージョンを設定します："

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:99
msgid "Set the ``-javaagent`` argument to the path of the Java agent:"
msgstr "``-javaagent`` 引数にJavaエージェントのパスを設定する："

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:106
msgid "If your application runs on a supported Java server, see :ref:`java-servers-instructions`."
msgstr "アプリケーションがサポートされているJavaサーバー上で動作する場合は、:ref:`java-servers-instructions` を参照してください。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:108
msgid "If no data appears in APM, see :ref:`common-java-troubleshooting`."
msgstr "APM にデータが表示されない場合は、:ref:`common-java-troubleshooting` を参照してください。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:110
msgid "If you need to add custom attributes to spans or want to manually generate spans, instrument your Java application or service manually. See :ref:`java-manual-instrumentation`."
msgstr "スパンにカスタム属性を追加する必要がある場合、またはスパンを手動で生成したい場合は、Javaアプリケーションまたはサービスを手動で計測してください。:ref:`java-manual-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:117
msgid "To activate AlwaysOn Profiling, use the following system property argument. You can also use the ``SPLUNK_PROFILER_ENABLED`` environment variable. For more information, see :ref:`profiling-intro`."
msgstr "AlwaysOnプロファイリングを有効にするには、以下のシステム・プロパティ引数を使用する。環境変数``SPLUNK_PROFILER_ENABLED`` を使うこともできる。詳細は:ref:`profiling-intro` を参照。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:119
msgid "To activate memory profiling, set the ``splunk.profiler.memory.enabled`` system property or the ``SPLUNK_PROFILER_MEMORY_ENABLED`` environment variable to ``true`` after activating AlwaysOn Profiling."
msgstr "メモリプロファイリングを有効にするには、AlwaysOn プロファイリングを有効にした後で、``splunk.profiler.memory.enabled`` システムプロパティまたは``SPLUNK_PROFILER_MEMORY_ENABLED`` 環境変数を``true`` に設定します。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:121
msgid "The following example shows how to activate the profiler using the system property:"
msgstr "次の例は、システム・プロパティを使用してプロファイラを有効にする方法を示しています："

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:133
msgid "See :ref:`get-data-in-profiling` for more information. For more settings, see :ref:`profiling-configuration-java`."
msgstr "詳しくは:ref:`get-data-in-profiling` 。詳細な設定については、:ref:`profiling-configuration-java` を参照してください。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:140
msgid "To activate automatic metric collection, activate the metrics feature using a system property argument. You can also use the ``SPLUNK_METRICS_ENABLED`` environment variable."
msgstr "自動メトリック収集を有効にするには、システム・プロパティ引数を使用してメトリック機能を有効にします。環境変数``SPLUNK_METRICS_ENABLED`` を使うこともできる。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:149
msgid "If your metrics endpoint is different than the default value, set the ``SPLUNK_METRICS_ENDPOINT`` environment variable. See :ref:`metrics-configuration-java` for more information."
msgstr "使用するメトリクス・エンドポイントがデフォルト値と異なる場合は、環境変数``SPLUNK_METRICS_ENDPOINT`` を設定します。詳しくは:ref:`metrics-configuration-java` 。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:151
msgid "If you activate memory profiling, metrics collection is activated automatically and cannot be deactivated."
msgstr "メモリ・プロファイリングを有効にすると、メトリクス収集が自動的に有効になり、無効にすることはできません。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:156
msgid "Ignore specific endpoints"
msgstr "特定のエンドポイントを無視する"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:158
msgid "By default, the Java agent collects traces from all the endpoints of your application. To ignore specific endpoints, use the ``rules`` sampler and define ``drop`` rules."
msgstr "デフォルトでは、Javaエージェントはアプリケーションのすべてのエンドポイントからトレースを収集します。特定のエンドポイントを無視するには、``rules`` サンプラーを使用し、``drop`` ルールを定義する。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:160
msgid "In the following example, the sampler drops all ``SERVER`` spans whose endpoints match ``healtcheck``, and sends the rest of spans using the fallback sampler, ``parentbased_always_on``:"
msgstr "次の例では、サンプラーは、終点が``healtcheck`` と一致する``SERVER`` のスパンをすべてドロップし、残りのスパンはフォールバックサンプラー``parentbased_always_on`` を使って送信する："

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:174
msgid "See :ref:`trace-sampling-settings-java` for more information."
msgstr "詳しくは:ref:`trace-sampling-settings-java` 。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:181
msgid "You can configure the agent using environment variables or by setting system properties as runtime arguments. For more details about both methods, see :ref:`configuration-methods-java`."
msgstr "環境変数を使用するか、システム・プロパティを実行時引数として設定することで、エージェントを設定することができます。両方の方法の詳細については、:ref:`configuration-methods-java` を参照。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:183
msgid "For advanced configuration of the JVM agent, like changing trace propagation formats, correlating traces and logs, or activating custom sampling, see :ref:`advanced-java-otel-configuration`."
msgstr "トレース伝播フォーマットの変更、トレースとログの相関、カスタムサンプリングの有効化など、JVMエージェントの高度な設定については、:ref:`advanced-java-otel-configuration` を参照のこと。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:188
msgid "Deploy the Java agent in Kubernetes"
msgstr "KubernetesにJavaエージェントをデプロイする"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:190
msgid "To deploy the Java agent in Kubernetes, configure the Kubernetes Downward API to expose environment variables to Kubernetes resources."
msgstr "JavaエージェントをKubernetesにデプロイするには、環境変数をKubernetesリソースに公開するようにKubernetes Downward APIを設定する。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:221
msgid "Deploy the Java agent in Docker"
msgstr "JavaエージェントをDockerにデプロイする"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:223
msgid "To deploy the Java agent in Docker, edit the Dockerfile for your application image to add the following commands:"
msgstr "JavaエージェントをDockerにデプロイするには、アプリケーション・イメージのDockerfileを編集して、以下のコマンドを追加します："

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:232
msgid "Use ``ENV`` commands to set environment variables for the Java agent. To activate metrics or profiling, add the required ``-Dotel`` argument to the ``ENTRYPOINT`` list."
msgstr "Javaエージェントの環境変数を設定するには、``ENV`` コマンドを使用する。メトリクスまたはプロファイリングを有効にするには、必要な``-Dotel`` 引数を``ENTRYPOINT`` リストに追加します。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:272 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:286 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:203 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:195
msgid "Instrument Lambda functions"
msgstr "ラムダ関数"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:274 ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:288 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:205 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:197
msgid "You can instrument AWS Lambda functions using the Splunk OpenTelemetry Lambda Layer. See :ref:`instrument-aws-lambda-functions` for more information."
msgstr "Splunk OpenTelemetry Lambda Layer を使用して AWS Lambda 関数を計測できます。詳しくは:ref:`instrument-aws-lambda-functions` 。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:279
msgid "Upgrade the Splunk Distribution of OpenTelemetry Java"
msgstr "OpenTelemetry Java の Splunk ディストリビューションをアップグレードする"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:281
msgid "New releases of the Splunk Distribution of OpenTelemetry Java happen after a new upstream release, or when new features and enhancements are available."
msgstr "OpenTelemetry Java の Splunk ディストリビューションの新しいリリースは、新しいアップストリームリリースの後、または新しい機能や拡張が利用可能になったときに行われます。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:283
msgid "Upgrade to each new version of the Splunk Distribution of OpenTelemetry Java after it's released. To find out about new releases, watch the GitHub repository at :new-page:`https://github.com/signalfx/splunk-otel-java/releases <https://github.com/signalfx/splunk-otel-java/releases>`"
msgstr "OpenTelemetry Java の Splunk ディストリビューションの新バージョンがリリースされるたびにアップグレードしてください。新しいリリースについては、GitHubリポジトリ:new-page:`https://github.com/signalfx/splunk-otel-java/releases をご覧ください。 <https://github.com/signalfx/splunk-otel-java/releases>`"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:285
msgid "See the :new-page:`versioning document <https://github.com/signalfx/splunk-otel-java/blob/main/VERSIONING.md>` in GitHub to learn more about version numbers. Major versions contain a large number of changes, which might result in increased risk to your production environment. Minor version changes indicate common releases, which contain a modest number of changes Patch releases are infrequent and contain specific fixes or enhancements."
msgstr "バージョン番号の詳細については、GitHubの:new-page:`バージョン管理ドキュメント<https://github.com/signalfx/splunk-otel-java/blob/main/VERSIONING.md>` を参照してください。メジャーバージョンには多くの変更が含まれているため、本番環境へのリスクが高まる可能性があります。マイナー・バージョンの変更は、一般的なリリースを示し、その中にはそれなりの数の変更が含まれている。 パッチ・リリースは頻度が低く、特定の修正や機能強化が含まれている。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:288
msgid "Best practices for upgrades"
msgstr "アップグレードのベストプラクティス"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:290
msgid "To reduce the risk of issues with an upgrade, do the following:"
msgstr "アップグレードで問題が発生するリスクを減らすには、以下のようにしてください："

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:292
msgid "Read the release notes and changelog for each release to determine if the release has changes that might affect your environment. Pay attention to mentions of libraries, frameworks, and tools that your software uses."
msgstr "各リリースのリリースノートと変更履歴を読んで、そのリリースにあなたの環境に影響するような変更があるかどうかを判断してください。あなたのソフトウェアが使用しているライブラリ、フレームワーク、ツールについての言及に注意してください。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:293
msgid "Never put untested code into production. Verify that the new build works in a staging or pre-production environment before promoting it to production. Don't use snapshot builds in production."
msgstr "テストされていないコードを本番環境に置いてはならない。本番環境に昇格させる前に、新しいビルドがステージング環境またはプリプロダクション環境で動作することを確認する。スナップショットビルドを本番で使用しないでください。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:294
msgid "Use canary instances. Let the canaries operate with the code before releasing the code to production. Run the canaries for at least a few hours, and preferably for a few days."
msgstr "カナリアインスタンスを使用する。本番環境にコードをリリースする前に、カナリアたちにコードを操作させる。少なくとも数時間、できれば数日間カナリアを動かす。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:295
msgid "Minimize the number of dependencies, including instrumentation, that change in a given release. Determining the root cause of a problem after upgrading multiple dependencies at the same time can be difficult."
msgstr "インスツルメンテーションを含め、特定のリリースで変更される依存関係の数を最小限に抑える。複数の依存関係を同時にアップグレードした後に、問題の根本的な原因を特定するのは難しいかもしれません。"

#: ../../gdi/get-data-in/application/java/instrumentation/instrument-java-application.rst:296
msgid "Pin version numbers in your build pipeline. Don't use the ``latest`` URL in automated processes."
msgstr "ビルドパイプラインにバージョン番号を固定する。自動化されたプロセスでは、``latest`` URLを使用しないでください。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:-1
msgid "Manually instrument your Java application when you need to add custom attributes to spans or want to manually generate spans and metrics. Keep reading to learn how to manually instrument your Java application for Splunk Observability Cloud."
msgstr "スパンにカスタム属性を追加したり、スパンやメトリクスを手動で生成したりする必要がある場合は、Java アプリケーションを手動でインスツルメンテーションします。Splunk Observability Cloud 用に Java アプリケーションを手動で計測する方法について説明します。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:5
msgid "Manually instrument Java applications for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用に Java アプリケーションを手動でインストルメントする"

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:10
msgid "Instrumenting applications automatically using the agent of the Splunk Distribution of OpenTelemetry Java covers most needs. Manually instrumenting your application is only necessary when, for example, you need to add custom attributes to spans or need to manually generate spans and metrics."
msgstr "OpenTelemetry Java の Splunk ディストリビューションのエージェントを使用して、アプリケーションを自動的にインスツルメンテーションすることで、ほとんどのニーズに対応できます。アプリケーションを手動でインスツルメンテーションする必要があるのは、たとえば、スパンにカスタム属性を追加する必要がある場合や、スパンとメトリクスを手動で生成する必要がある場合だけです。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:12
msgid "For instructions on how to manually instrument Java applications, see the Manual instrumentation docs in the OpenTelemetry Java Instrumentation repository at https://opentelemetry.io/docs/java/manual_instrumentation."
msgstr "Java アプリケーションを手動で計測する方法については、https://opentelemetry.io/docs/java/manual_instrumentation の OpenTelemetry Java Instrumentation リポジトリの Manual instrumentation docs を参照してください。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:14
msgid "Manual OTel instrumentation is fully compatible with Splunk automatic JVM instrumentation and is fully supported by Splunk."
msgstr "手動 OTel 計測は Splunk 自動 JVM 計測と完全に互換性があり、Splunk によって完全にサポートされています。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:19
msgid "Send custom Java application metrics"
msgstr "カスタムJavaアプリケーション・メトリクスの送信"

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:21
msgid "The Splunk Distribution of OpenTelemetry Java agent detects if the instrumented application is using Micrometer and injects a special ``MeterRegistry`` implementation that lets the agent collect user-defined meters."
msgstr "Splunk Distribution of OpenTelemetry Java エージェントは、インスツルメンテーションされたアプリケーションが Micrometer を使用しているかどうかを検出し、エージェントがユーザー定義のメーターを収集できるようにする特別な``MeterRegistry`` 実装を注入します。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:23
msgid "Follow these steps to activate custom application metrics:"
msgstr "カスタム・アプリケーション・メトリクスを有効にするには、以下の手順に従います："

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:25
msgid ":ref:`add-micrometer-dep`"
msgstr ":ref:`add-micrometer-dep`"

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:26
msgid ":ref:`add-meter-registry`"
msgstr ":ref:`add-meter-registry`"

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:31
msgid "Add the micrometer-core dependency"
msgstr "マイクロメーター・コアの依存関係を追加"

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:33
msgid "To export custom metrics through the Java agent, add a dependency on the ``micrometer-core`` library with version 1.5 and higher:"
msgstr "Java エージェントを通じてカスタム・メトリクスをエクスポートするには、バージョン 1.5 以上の``micrometer-core`` ライブラリに依存関係を追加します："

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:52
msgid "Register each custom meter"
msgstr "各カスタムメーターを登録する"

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:54
msgid "You must register each custom meter in the global ``Metrics.globalRegistry`` instance provided by the Micrometer library. You can use one of meter factory methods provided by the ``Metrics`` class, or use meter builders and reference the ``Metrics.globalRegistry`` directly, as in the following example:"
msgstr "各カスタムメータは、マイクロメータライブラリが提供するグローバルな``Metrics.globalRegistry`` インスタンスに登録する必要があります。次の例のように、``Metrics`` クラスが提供するメーターファクトリーメソッドを使用するか、メータービルダーを使用し、``Metrics.globalRegistry`` を直接参照することができます："

#: ../../gdi/get-data-in/application/java/instrumentation/java-manual-instrumentation.rst:72
msgid "For more information on the Micrometer API, see the Micrometer official documentation."
msgstr "Micrometer APIの詳細については、Micrometerの公式ドキュメントを参照してください。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:-1
msgid "To instrument your Java application, you must define the path to the agent from the Splunk OpenTelemetry Java agent. The following sections describe how to set the agent path for supported Java servers."
msgstr "Java アプリケーションを計測するには、Splunk OpenTelemetry Java エージェントからエージェントへのパスを定義する必要があります。以下のセクションでは、サポートされているJavaサーバーのエージェント・パスを設定する方法について説明します。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:5
msgid "Define agent paths for Java application servers for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用 Java アプリケーションサーバーのエージェントパスを定義する"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:10
msgid "To instrument your Java application for Splunk Observability Cloud, you must define the path to the agent from the :ref:`Splunk Distribution of OpenTelemetry Java <splunk-java-otel-dist>`. The following sections describe how to set the agent path for each of the supported servers."
msgstr "Java アプリケーションを Splunk Observability Cloud で計測するには、:ref:`Splunk Distribution of OpenTelemetry Java <splunk-java-otel-dist>` からエージェントへのパスを定義する必要があります。以下のセクションでは、サポートされている各サーバーのエージェント・パスの設定方法について説明します。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:15
msgid "JBoss EAP and WildFly"
msgstr "JBoss EAPとWildFly"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:17
msgid "Add the ``javaagent`` argument to the standalone configuration file:"
msgstr "``javaagent`` 引数をスタンドアロン設定ファイルに追加する："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:23
msgid "On Linux add the following line at the end of the standalone.conf file:"
msgstr "Linuxでは、standalone.confファイルの最後に以下の行を追加する："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:31
msgid "On Windows, add the following line at the end of the standalone.conf.bat file:"
msgstr "Windowsでは、standalone.conf.batファイルの最後に以下の行を追加する："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:40
msgid "Jetty"
msgstr "桟橋"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:42
msgid "Add the path to the JVM agent using the ``-javaagent`` argument:"
msgstr "``-javaagent`` 引数を使用して、JVMエージェントへのパスを追加する："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:48
msgid "Alternatively, you can add the ``-javaagent`` argument to your jetty.sh or start.ini files:"
msgstr "あるいは、jetty.shまたはstart.iniファイルに``-javaagent`` 引数を追加することもできます："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:50
msgid "If you use the jetty.sh file to start Jetty, add the following line to the <jetty_home>/bin/jetty.sh file:"
msgstr "jetty.shファイルを使ってJettyを起動する場合は、<jetty_home>/bin/jetty.shファイルに以下の行を追加します："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:56
msgid "If you use the start.ini file to define JVM arguments, add the ``javaagent`` argument below the ``--exec`` option:"
msgstr "start.iniファイルを使用してJVM引数を定義する場合は、``--exec`` オプションの下に``javaagent`` 引数を追加する："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:69
msgid "Glassfish and Payara"
msgstr "グラスフィッシュとパヤラ"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:71
msgid "Add the path to the JVM agent to the settings using the asadmin command-line tool:"
msgstr "asadminコマンドラインツールを使用して、JVMエージェントへのパスを設定に追加する："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:73
msgid "On Linux, enter the following command:"
msgstr "Linuxでは、以下のコマンドを入力する："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:79
msgid "On Windows, enter the following command:"
msgstr "Windowsでは、以下のコマンドを入力する："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:85
msgid "You can also add the ``-javaagent`` argument from the Glassfish or Payara Admin Console:"
msgstr "GlassfishまたはPayaraアドミンコンソールから``-javaagent`` 引数を追加することもできます："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:87
msgid "Open the GlassFish Admin Console at ``http://localhost:4848``."
msgstr "GlassFish Admin Console（``http://localhost:4848`` ）を開きます。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:88
msgid "Go to :menuselection:`Configurations`, then :menuselection:`server-config`."
msgstr ":menuselection:`Configurations` にアクセスし、次に:menuselection:`server-config` にアクセスする。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:89
msgid "Select :menuselection:`JVM Settings`."
msgstr ":menuselection:`JVM設定` を選択する。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:90
msgid "Select :menuselection:`JVM Options`, then :menuselection:`Add JVM Option`."
msgstr ":menuselection:`JVMオプション` を選択し、:menuselection:`JVMオプションの追加` を選択する。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:91
msgid "In the blank field, enter the path to the splunk-otel-javaagent.jar file:"
msgstr "空欄に splunk-otel-javaagent.jar ファイルへのパスを入力します："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:93
msgid "``-javaagent:/path/to/splunk-otel-javaagent.jar``"
msgstr "``-javaagent:/path/to/splunk-otel-javaagent.jar``"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:95
msgid "Select :strong:`Save` and restart the server."
msgstr ":strong:`Save` を選択し、サーバーを再起動する。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:97
msgid "Make sure that the domain.xml file in your domain directory contains a ``<jmv-options>`` entry for the agent."
msgstr "ドメインディレクトリの domain.xml ファイルに、エージェントの``<jmv-options>`` エントリが含まれていることを確認してください。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:102
msgid "Tomcat and TomEE"
msgstr "TomcatとTomEE"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:104
msgid "Add the path to the JVM agent to your Tomcat or TomEE startup script:"
msgstr "JVMエージェントへのパスをTomcatまたはTomEEの起動スクリプトに追加します："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:110
msgid "On Linux, add the following line to the <tomcat_home>/bin/setenv.sh file:"
msgstr "Linuxでは、<tomcat_home>/bin/setenv.shファイルに次の行を追加する："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:118
msgid "On Windows, add the following line to the <tomcat_home>\\bin\\setenv.bat file:"
msgstr "Windowsでは、以下の行を<tomcat_home></bin></setenv.batファイルに追加する："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:127
msgid "WebLogic"
msgstr "WebLogic"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:129
msgid "Add the path to the JVM agent to your WebLogic domain startup script:"
msgstr "WebLogicドメインの起動スクリプトに、JVMエージェントへのパスを追加します："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:131
msgid "On Linux, add the following line to the <domain_home>/bin/startWebLogic.sh file:"
msgstr "Linuxでは、<domain_home>/bin/startWebLogic.shファイルに以下の行を追加する："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:137
msgid "On Windows, add the following line to the <domain_home>\\bin\\startWebLogic.cmd file:"
msgstr "Windows の場合、以下の行を <domain_home></bin></bin></startWebLogic.cmd ファイルに追加する："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:143
msgid "For managed server instances, add the ``-javaagent`` argument using the admin console."
msgstr "管理サーバー・インスタンスの場合は、管理コンソールを使用して``-javaagent`` 引数を追加する。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:148
msgid "WebSphere Liberty Profile"
msgstr "WebSphere Liberty プロファイル"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:150
msgid "Add the path to the JVM agent to the jvm.options file:"
msgstr "JVMエージェントへのパスをjvm.optionsファイルに追加する："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:152
msgid "Open the jvm.options file: - For a single server, create or edit the ``${server.config.dir}/jvm.options`` file. - For all servers, create or edit the ``${wlp.install.dir}/etc/jvm.options`` file."
msgstr "jvm.optionsファイルを開く：- 単一サーバーの場合は、``${server.config.dir}/jvm.options`` ファイルを作成または編集する。- すべてのサーバーの場合は、``${wlp.install.dir}/etc/jvm.options`` ファイルを作成または編集します。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:155
msgid "Add the following line:"
msgstr "次の行を追加する："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:161
msgid "Save the file and restart the server."
msgstr "ファイルを保存し、サーバーを再起動する。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:163
msgid "Note that WebSphere Liberty servers on mainframes is not supported."
msgstr "メインフレーム上の WebSphere Liberty サーバはサポートされていません。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:168
msgid "WebSphere Traditional"
msgstr "WebSphereトラディショナル"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:170
msgid "Open the WebSphere Admin Console and follow these steps:"
msgstr "WebSphere Admin Console を開き、以下の手順に従います："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:172
msgid "Navigate to :guilabel:`Servers`, then :guilabel:` Server type`."
msgstr ":guilabel:`Servers` に移動し、次に:guilabel:` Server type` に移動する。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:173
msgid "Select :guilabel:`WebSphere application servers`."
msgstr ":guilabel:`WebSphere アプリケーション・サーバー` を選択する。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:174
msgid "Select the desired server."
msgstr "ご希望のサーバーを選択してください。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:175
msgid "Navigate to :guilabel:`Java and Process Management`, then :guilabel:` Process Definition`."
msgstr ":guilabel:`Java and Process Management` に移動し、次に:guilabel:` Process Definition` に移動する。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:176
msgid "Select :guilabel:`Java Virtual Machine`."
msgstr ":guilabel:`Java仮想マシン` を選択する。"

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:177
msgid "In the :guilabel:`Generic JVM arguments` field, enter the path to Splunk Java agent:"
msgstr ":guilabel:`Generic JVM arguments` フィールドに、Splunk Java エージェントのパスを入力します："

#: ../../gdi/get-data-in/application/java/instrumentation/java-servers-instructions.rst:183
msgid "Select :guilabel:`OK`. When asked, save the main configuration and restart the server."
msgstr ":guilabel:`OK` を選択する。と聞かれたら、メイン設定を保存してサーバーを再起動する。"

#: ../../gdi/get-data-in/application/java/java-otel-requirements.rst:-1
msgid "This is what you need to instrument Java applications for Splunk Observability Cloud."
msgstr "これは、Java アプリケーションを Splunk Observability Cloud 用に計測するために必要なものです。"

#: ../../gdi/get-data-in/application/java/java-otel-requirements.rst:5
msgid "Java agent compatibility and requirements"
msgstr "Javaエージェントの互換性と要件"

#: ../../gdi/get-data-in/application/java/java-otel-requirements.rst:10
msgid "Meet the following requirements to instrument Java applications for Splunk Observability Cloud:"
msgstr "Splunk Observability Cloud で Java アプリケーションを計測するには、以下の要件を満たす必要があります："

#: ../../gdi/get-data-in/application/java/java-otel-requirements.rst:17
msgid "The Splunk Distribution of OpenTelemetry Java instruments numerous libraries, frameworks, and application servers. For a complete list of supported libraries and frameworks, see :new-page:`Supported libraries <https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/main/docs/supported-libraries.md>` in the OpenTelemetry documentation."
msgstr "OpenTelemetry Java の Splunk ディストリビューションは、多数のライブラリ、フレームワーク、アプリケーションサーバーを実装しています。サポートされているライブラリとフレームワークの完全なリストについては、OpenTelemetry ドキュメントの:new-page:`サポートされているライブラリ<https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/main/docs/supported-libraries.md>` を参照してください。"

#: ../../gdi/get-data-in/application/java/java-otel-requirements.rst:19
msgid "For custom metrics support, you must use MicroMeter 1.5 and higher. See :ref:`java-otel-custom-metrics`."
msgstr "カスタム・メトリクスをサポートするには、MicroMeter 1.5以上を使用する必要があります。:ref:`java-otel-custom-metrics` を参照。"

#: ../../gdi/get-data-in/application/java/java-otel-requirements.rst:21
msgid "To deactivate specific instrumentations, see :ref:`java-instrumentation-issues`."
msgstr "特定のインストゥルメンテーションを無効にするには、:ref:`java-instrumentation-issues` を参照。"

#: ../../gdi/get-data-in/application/java/java-otel-requirements.rst:26
msgid "Ensure you are using compatible Java and JVM versions"
msgstr "互換性のあるJavaとJVMのバージョンを使用していることを確認してください。"

#: ../../_includes/gdi/java-requirements.rst:1
msgid "The agent of the Splunk Distribution of OpenTelemetry Java is compatible with the following Java versions:"
msgstr "OpenTelemetry Java の Splunk ディストリビューションのエージェントは、以下の Java バージョンと互換性があります："

#: ../../_includes/gdi/java-requirements.rst:3
msgid "Java 8 starting from 8u40 (8u262 for AlwaysOn Profiling)"
msgstr "8u40 以降の Java 8（AlwaysOn プロファイリングの場合は 8u262）"

#: ../../_includes/gdi/java-requirements.rst:4
msgid "Java 11 and higher LTS versions"
msgstr "Java 11およびそれ以降のLTSバージョン"

#: ../../_includes/gdi/java-requirements.rst:6
msgid "The following Java Virtual Machines (JVMs) are compatible:"
msgstr "以下のJava仮想マシン（JVM）に対応しています："

#: ../../_includes/gdi/java-requirements.rst:8
msgid "AdoptOpenJDK"
msgstr "AdoptOpenJDK"

#: ../../_includes/gdi/java-requirements.rst:9
msgid "Amazon Corretto"
msgstr "Amazon Corretto"

#: ../../_includes/gdi/java-requirements.rst:10
msgid "Azul Zulu"
msgstr "Azul Zulu"

#: ../../_includes/gdi/java-requirements.rst:11
msgid "BellSoft Liberica JDK"
msgstr "BellSoft Liberica JDK"

#: ../../_includes/gdi/java-requirements.rst:12
msgid "Eclipse Adoptium/Temurin"
msgstr "エクリプス・アドプティウム／テムリン"

#: ../../_includes/gdi/java-requirements.rst:13
msgid "IBM J9 (AlwaysOn Profiling is not supported)"
msgstr "IBM J9 (AlwaysOn プロファイリングはサポートされていません)"

#: ../../_includes/gdi/java-requirements.rst:14
msgid "Microsoft OpenJDK"
msgstr "Microsoft OpenJDK"

#: ../../_includes/gdi/java-requirements.rst:15
msgid "Oracle OpenJDK"
msgstr "オラクルOpenJDK"

#: ../../_includes/gdi/java-requirements.rst:16
msgid "Red Hat OpenJDK"
msgstr "Red Hat OpenJDK"

#: ../../_includes/gdi/java-requirements.rst:17
msgid "SAP SapMachine"
msgstr "SAP SapMachine"

#: ../../gdi/get-data-in/application/java/java-otel-requirements.rst:35
msgid "The Splunk Distribution of OpenTelemetry Java exports application and JVM metrics and spans to the Splunk Distribution of OpenTelemetry Collector, which also collects system metric data and logs, including profiling data."
msgstr "Splunk Distribution of OpenTelemetry Java は、アプリケーションと JVM のメトリックとスパンを Splunk Distribution of OpenTelemetry Collector にエクスポートし、プロファイリングデータを含むシステムのメトリックデータとログも収集します。"

#: ../../gdi/get-data-in/application/java/performance.rst:-1
msgid "Minimum requirements of the Splunk OTel Java agent, as well as potential constraints impacting performance, and guidelines to optimize and troubleshoot the performance of the agent."
msgstr "Splunk OTel Java エージェントの最小要件、パフォーマンスに影響を与える潜在的な制約、エージェントのパフォーマンスを最適化しトラブルシューティングするためのガイドライン。"

#: ../../gdi/get-data-in/application/java/performance.rst:5
msgid "Performance reference for Splunk OTel Java agent"
msgstr "Splunk OTel Java エージェントのパフォーマンスリファレンス"

#: ../../gdi/get-data-in/application/java/performance.rst:10
msgid "The Splunk OTel Java agent instruments your application by running inside the same Java Virtual Machine (JVM). Like any other software agent, the Java agent requires system resources like CPU, memory, and network bandwidth. The use of resources by the agent is called performance or agent overhead. The Splunk OTel Java agent has minimal impact on system performance when instrumenting JVM applications, although the final overhead depends on multiple factors."
msgstr "Splunk OTel Java エージェントは、同じ Java 仮想マシン (JVM) 内で動作することで、アプリケーションを計測します。他のソフトウェアエージェントと同様に、JavaエージェントはCPU、メモリ、ネットワーク帯域幅などのシステムリソースを必要とする。エージェントによるリソースの使用は、パフォーマンスまたはエージェントのオーバーヘッドと呼ばれる。Splunk OTel Java エージェントは、JVM アプリケーションをインスツルメンテーションする際にシステムパフォーマンスへの影響を最小限に抑えますが、最終的なオーバーヘッドは複数の要因に依存します。"

#: ../../gdi/get-data-in/application/java/performance.rst:12
msgid "Some factors that might increase agent overhead are environmental, such as the physical machine architecture, CPU frequency, amount and speed of memory, system temperature, and resource contention. Other factors include virtualization and containerization, the operating system and its libraries, the JVM version and vendor, JVM settings, the algorithmic design of the software being monitored, and sofware dependencies."
msgstr "エージェントのオーバーヘッドを増加させる可能性のある要因には、物理的なマシンアーキテクチャー、CPUの周波数、メモリの量と速度、システムの温度、リソースの競合などの環境要因がある。その他の要因としては、仮想化とコンテナ化、オペレーティング・システムとそのライブラリ、JVMのバージョンとベンダー、JVMの設定、監視対象ソフトウェアのアルゴリズム設計、ソフトウェアの依存関係などがある。"

#: ../../gdi/get-data-in/application/java/performance.rst:14
msgid "Due to the complexity of modern software and the broad diversity in deployment scenarios, it is impossible to come up with a single overhead estimate. To find out the overhead of any instrumentation agent in a given deployment, you have to conduct experiments and collect measurements directly. Therefore, all statements about performance in this document must be treated as general information and guidelines which are subject to evaluation in a specific system."
msgstr "最新のソフトウェアは複雑で、導入シナリオも多岐にわたるため、オーバーヘッドの見積もりを一律に出すことは不可能である。ある配備における計測エージェントのオーバーヘッドを調べるには、実験を行い、直接計測値を収集する必要がある。したがって、本書における性能に関する記述はすべて、特定のシステムにおいて評価される一般的な情報およびガイドラインとして扱われなければならない。"

#: ../../gdi/get-data-in/application/java/performance.rst:16
msgid "The following sections describe the minimum requirements of the Splunk OTel Java agent, as well as potential constraints impacting performance, and guidelines to optimize and troubleshoot the performance of the agent."
msgstr "以下のセクションでは、Splunk OTel Java エージェントの最小要件、パフォーマンスに影響を与える潜在的な制約、エージェントのパフォーマンスを最適化しトラブルシューティングするためのガイドラインについて説明します。"

#: ../../gdi/get-data-in/application/java/performance.rst:22
msgid "Minimum requirements for production deployments"
msgstr "本番導入のための最低要件"

#: ../../gdi/get-data-in/application/java/performance.rst:30
msgid "Guidelines to reduce agent overhead"
msgstr "エージェントのオーバーヘッドを削減するためのガイドライン"

#: ../../gdi/get-data-in/application/java/performance.rst:32
msgid "The following best practices and techniques might help in reducing the overhead caused by the Java agent."
msgstr "以下のベスト・プラクティスとテクニックは、Javaエージェントによるオーバーヘッドを減らすのに役立つかもしれない。"

#: ../../gdi/get-data-in/application/java/performance.rst:35
msgid "Configure trace sampling"
msgstr "トレースサンプリングの設定"

#: ../../gdi/get-data-in/application/java/performance.rst:37
msgid "The volume of spans processed by the instrumentation might impact overhead. You can configure trace sampling to adjust the span volume and reduce resource usage. See :ref:`trace-sampling-settings-java` for more information on sampling settings."
msgstr "インスツルメンテーションによって処理されるスパンの量は、オーバーヘッドに影響するかもしれない。トレースサンプリングを設定することで、スパン量を調整し、リソースの使用量を減らすことができます。サンプリング設定の詳細については、:ref:`trace-sampling-settings-java` を参照。"

#: ../../gdi/get-data-in/application/java/performance.rst:42
msgid "Turn off specific instrumentations"
msgstr "特定の計測器をオフにする"

#: ../../gdi/get-data-in/application/java/performance.rst:44
msgid "Consider turning off instrumentations that you don't need or are producing too many spans to further reduce overhead and span volume. To turn off an instrumentation, use ``-Dotel.instrumentation.<name>.enabled=false`` or the ``OTEL_INSTRUMENTATION_<NAME>_ENABLED`` environment variable, where ``<name>`` is the name of the instrumentation."
msgstr "オーバーヘッドとスパン量をさらに減らすために、不要なインストゥルメンテーションや、スパン数が多すぎるインストゥルメンテーションをオフにすることを検討する。インスツルメンテーションをオフにするには、``-Dotel.instrumentation.<name>.enabled=false`` または``OTEL_INSTRUMENTATION_<NAME>_ENABLED`` 環境変数を使用する。``<name>`` はインスツルメンテーションの名前である。"

#: ../../gdi/get-data-in/application/java/performance.rst:46
msgid "For example, the following option turns off the JDBC instrumentation: ``-Dotel.instrumentation.jdbc.enabled=false``"
msgstr "例えば、以下のオプションはJDBCインスツルメンテーションをオフにする： ``-Dotel.instrumentation.jdbc.enabled=false``"

#: ../../gdi/get-data-in/application/java/performance.rst:48
msgid "Use Trace Analyzer in Splunk APM to explore the spans from your application and identify instrumentations you don't need. See :ref:`trace-search-concept` for more information."
msgstr "Splunk APM のトレースアナライザーを使用して、アプリケーションからのスパンを調査し、不要なインスツルメンテーションを特定します。詳しくは:ref:`trace-search-concept` 。"

#: ../../gdi/get-data-in/application/java/performance.rst:51
msgid "Allocate more memory for the application"
msgstr "アプリケーションにより多くのメモリを割り当てる"

#: ../../gdi/get-data-in/application/java/performance.rst:53
msgid "Incresing the maximum heap size of the JVM using the ``--Xmx<size>`` option might help in alleviating overhead issues, as instrumentations can generate a large number of short-lived objects in memory."
msgstr "``--Xmx<size>`` ・オプションを使用してJVMの最大ヒープ・サイズを増やすと、オーバーヘッドの問題を軽減できるかもしれない。インスツルメンテーションは、メモリー内に短命のオブジェクトを大量に生成する可能性があるからだ。"

#: ../../gdi/get-data-in/application/java/performance.rst:56
msgid "Reduce manual instrumentation to a minimum"
msgstr "手作業による計装を最小限に抑える"

#: ../../gdi/get-data-in/application/java/performance.rst:58
msgid "Manual instrumentation might introduce inefficiencies that increase agent overhead. For example, using ``@WithSpan`` on every method results in a high span volume, which in turn increases noise in the data and consumes more system resources."
msgstr "手作業による計測は、エージェントのオーバーヘッドを増加させる非効率性をもたらすかもしれない。例えば、すべてのメソッドで``@WithSpan`` 、スパン量が多くなり、データのノイズが増え、システムリソースを消費する。"

#: ../../gdi/get-data-in/application/java/performance.rst:61
msgid "Provision adequate resources"
msgstr "適切なリソースの提供"

#: ../../gdi/get-data-in/application/java/performance.rst:63
msgid "Make sure to provision enough resources for your instrumentation and for the Collector. The amount of resources such as memory or disk depend on your application architecture and needs. For example, a common setup is to run the instrumented application on the same host as the Splunk Distribution of OpenTelemetry Collector. In that case, consider rightsizing the resources for the Collector and optimize its settings. See :ref:`otel-sizing`."
msgstr "装置とコレクタに十分なリソースを用意してください。メモリやディスクなどのリソースの量は、アプリケーションのアーキテクチャやニーズによって異なります。例えば、一般的なセットアップは、OpenTelemetry Collector の Splunk ディストリビューションと同じホスト上で計測アプリケーションを実行することです。その場合は、コレクターのリソースのサイズ変更と設定の最適化を検討してください。:ref:`otel-sizing` を参照。"

#: ../../gdi/get-data-in/application/java/performance.rst:69
msgid "Constraints impacting the performance of the Java agent"
msgstr "Javaエージェントのパフォーマンスに影響を与える制約"

#: ../../gdi/get-data-in/application/java/performance.rst:71
msgid "In general, the more telemetry you collect from your application, the bigger is the impact on overhead. For example, tracing methods that aren't relevant to your application can still produce considerable overhead, as tracing such methods is computationally more expensive than executing the method itself. Similarly, high cardinality tags in metrics might increase memory usage. Debug logging, if turned on, also increase write operations to disk and memory usage."
msgstr "一般的に、アプリケーションから収集するテレメトリが多ければ多いほど、オーバーヘッドへの影響は大きくなる。たとえば、アプリケーションに関係のないメソッドをトレースしても、かなりのオーバーヘッドが発生することがあります。そのようなメソッドのトレースは、メソッド自体を実行するよりも計算コストが高いからです。同様に、メトリクスのカーディナリティが高いタグは、メモリ使用量を増加させる可能性がある。デバッグ・ロギングをオンにすると、ディスクへの書き込み操作とメモリ使用量も増加する。"

#: ../../gdi/get-data-in/application/java/performance.rst:73
msgid "Some features of the Java agent, like AlwaysOn Profiling, increase resource consumption, as JFR recordings require heap space and memory profiling relies on TLAB events that might increase overhead significantly when produced in high numbers. Some instrumentations, for example JDBC or Redis, produce high span volumes that increase overhead. For more information on how to turn off unnecessary instrumentations, see :ref:`turn-off-java-instrumentations`."
msgstr "JFR の記録にはヒープ領域が必要であり、メモリプロファイリングは TLAB イベントに依存するため、大量に生成されるとオーバーヘッドが大幅に増加する可能性がある。JDBCやRedisなど、一部のインスツルメンテーションは、オーバーヘッドを増大させるような大量のスパンを生成する。不要な計装をオフにする方法については、:ref:`turn-off-java-instrumentations` を参照。"

#: ../../gdi/get-data-in/application/java/performance.rst:75
msgid "Experimental features of the Java agent might increase overhead due to the experimental focus on functionality over performance. Stable features are safer in terms of overhead."
msgstr "Javaエージェントの実験的な機能は、パフォーマンスよりも機能性に重点を置いた実験的なものであるため、オーバーヘッドを増加させる可能性がある。安定した機能はオーバーヘッドの面でも安全だ。"

#: ../../gdi/get-data-in/application/java/performance.rst:81
msgid "Troubleshooting performance overhead issues"
msgstr "パフォーマンス・オーバーヘッドの問題のトラブルシューティング"

#: ../../gdi/get-data-in/application/java/performance.rst:83
msgid "When troubleshooting performance overhead issues, do the following:"
msgstr "パフォーマンス・オーバーヘッドの問題をトラブルシューティングする場合は、以下のようにしてください："

#: ../../gdi/get-data-in/application/java/performance.rst:85
msgid "Check minimum requirements. See :ref:`java-overhead-requirements`."
msgstr "最低条件を確認する。:ref:`java-overhead-requirements` を参照。"

#: ../../gdi/get-data-in/application/java/performance.rst:86
msgid "Use the latest compatible version of the Java agent."
msgstr "Javaエージェントの最新の互換バージョンを使用してください。"

#: ../../gdi/get-data-in/application/java/performance.rst:87
msgid "Use the latest compatible version of your JVM."
msgstr "お使いのJVMの最新の互換バージョンを使用してください。"

#: ../../gdi/get-data-in/application/java/performance.rst:89
msgid "Consider taking the following actions to decrease overhead:"
msgstr "諸経費を削減するために、以下の措置をとることを検討する："

#: ../../gdi/get-data-in/application/java/performance.rst:91
msgid "If your application is approaching memory limits, consider giving it more memory."
msgstr "アプリケーションがメモリ制限に近づいている場合は、より多くのメモリを与えることを検討してください。"

#: ../../gdi/get-data-in/application/java/performance.rst:92
msgid "If your application is using all the CPU, you might want to scale it horizontally."
msgstr "アプリケーションがすべてのCPUを使用している場合は、水平方向にスケーリングすることをお勧めします。"

#: ../../gdi/get-data-in/application/java/performance.rst:93
msgid "Try turning off or tune CPU or memory profiling. See :ref:`profiling-configuration-java`."
msgstr "CPUまたはメモリのプロファイリングをオフにするか、調整してみてください。:ref:`profiling-configuration-java` を参照。"

#: ../../gdi/get-data-in/application/java/performance.rst:94
msgid "Try turning off or tune metrics. See :ref:`metrics-configuration-java`."
msgstr "メトリクスをオフにするか、調整してみてください。:ref:`metrics-configuration-java` を参照。"

#: ../../gdi/get-data-in/application/java/performance.rst:95
msgid "Tune trace sampling settings to reduce span volume. See :ref:`trace-sampling-settings-java`."
msgstr "スパン量を減らすためにトレースサンプリング設定を調整する。:ref:`trace-sampling-settings-java` を参照。"

#: ../../gdi/get-data-in/application/java/performance.rst:96
msgid "Turn off specific instrumentations. See :ref:`turn-off-java-instrumentations`."
msgstr "特定の機器をオフにする。:ref:`turn-off-java-instrumentations` を参照。"

#: ../../gdi/get-data-in/application/java/performance.rst:97
msgid "Review manual instrumentation for unnecessary span generation."
msgstr "不要なスパンが発生していないか、手動計測を見直す。"

#: ../../gdi/get-data-in/application/java/performance.rst:103
msgid "Guidelines for measuring performance overhead"
msgstr "オーバーヘッド測定ガイドライン"

#: ../../gdi/get-data-in/application/java/performance.rst:105
msgid "Measuring overhead in your own environment and deployments provides accurate data about the impact of instrumentation on the performance of your application or service. The following guidelines describe the general steps for collecting and comparing reliable performance overhead measurements."
msgstr "お客様自身の環境やデプロイメントにおけるオーバーヘッドを測定することで、アプリケーションやサービスのパフォーマンスに対するインスツルメンテーションの影響に関する正確なデータが得られます。以下のガイドラインでは、信頼性の高いパフォーマンス・オーバーヘッド測定を収集し、比較するための一般的な手順を説明します。"

#: ../../gdi/get-data-in/application/java/performance.rst:108
msgid "1. Decide what you want to measure"
msgstr "1.何を測定したいかを決める"

#: ../../gdi/get-data-in/application/java/performance.rst:110
msgid "Different users of your application or service might notice different aspects of agent overhead. For example, while end users might notice degradation in service latency, power users with heavy workloads pay more attention to CPU overhead. On the other hand, users who deploy frequently, for example due to elastic workloads, care more about startup time."
msgstr "アプリケーションやサービスの利用者によって、エージェントのオーバーヘッドが異なることに気づくかもしれません。例えば、エンドユーザーはサービス遅延の劣化に気づくかもしれないが、重いワークロードを持つパワーユーザーはCPUオーバーヘッドにもっと注意を払う。一方、エラスティックなワークロードなどで頻繁にデプロイするユーザーは、起動時間をより気にする。"

#: ../../gdi/get-data-in/application/java/performance.rst:112
msgid "Reduce your measurements to factors that are sure to impact the user experience of your application, so as not to produce datasets that contain irrelevant information. Some examples of measurements include the following:"
msgstr "無関係な情報を含むデータセットを作成しないように、測定はアプリケーションのユーザーエクスペリエンスに確実に影響を与える要因に絞りましょう。測定の例としては、以下のようなものがある："

#: ../../gdi/get-data-in/application/java/performance.rst:114
msgid "CPU usage: user average, user peak, and machine average"
msgstr "CPU使用率：ユーザー平均、ユーザーピーク、マシン平均"

#: ../../gdi/get-data-in/application/java/performance.rst:115
msgid "Memory: maximum heap used and total allocated"
msgstr "メモリ：最大ヒープ使用量と総割り当て量"

#: ../../gdi/get-data-in/application/java/performance.rst:116
msgid "Garbage collection pause time"
msgstr "ガベージコレクション休止時間"

#: ../../gdi/get-data-in/application/java/performance.rst:117
msgid "Startup time in milliseconds"
msgstr "起動時間（ミリ秒"

#: ../../gdi/get-data-in/application/java/performance.rst:118
msgid "Service latency: average and percentile 95 (p95)"
msgstr "サービス遅延：平均およびパーセンタイル95（p95）"

#: ../../gdi/get-data-in/application/java/performance.rst:119
msgid "Network read and write average throughput"
msgstr "ネットワークの読み取りと書き込みの平均スループット"

#: ../../gdi/get-data-in/application/java/performance.rst:122
msgid "2. Prepare a suitable test environment"
msgstr "2.適切なテスト環境を準備する"

#: ../../gdi/get-data-in/application/java/performance.rst:124
msgid "By measuring overhead in a controlled test environment you can better control and identify the factors affecting performance. When preparing a test environment, pay attention to the following:"
msgstr "コントロールされたテスト環境でオーバーヘッドを測定することで、パフォーマンスに影響する要因をよりよくコントロールし、特定することができます。テスト環境を準備する際には、以下の点に注意してください："

#: ../../gdi/get-data-in/application/java/performance.rst:126
msgid "Make sure that the configuration of the test environment resembles production."
msgstr "テスト環境の構成が本番環境に似ていることを確認する。"

#: ../../gdi/get-data-in/application/java/performance.rst:127
msgid "Isolate the application under test from other services that might interfere."
msgstr "テスト対象のアプリケーションを、干渉する可能性のある他のサービスから隔離する。"

#: ../../gdi/get-data-in/application/java/performance.rst:128
msgid "Turn off or remove all unnecessary system services on the application host."
msgstr "アプリケーションホスト上の不要なシステムサービスをすべてオフにするか、削除する。"

#: ../../gdi/get-data-in/application/java/performance.rst:129
msgid "Ensure that the application has enough system resources to handle the test workload."
msgstr "アプリケーションに、テスト作業負荷を処理するのに十分なシステムリソースがあることを確認する。"

#: ../../gdi/get-data-in/application/java/performance.rst:132
msgid "3. Create a battery of realistic tests"
msgstr "3.現実的なテストのバッテリーを作る"

#: ../../gdi/get-data-in/application/java/performance.rst:134
msgid "Design the tests that you run against the test environment to resemble typical workloads as much as possible. For example, if some REST API endpoints of your service are susceptible to high request volumes, create a test that simulates heavy network traffic."
msgstr "テスト環境に対して実行するテストは、可能な限り典型的なワークロードに似せて設計する。例えば、サービスの一部のREST APIエンドポイントが大量のリクエストの影響を受けやすい場合、大量のネットワーク・トラフィックをシミュレートするテストを作成する。"

#: ../../gdi/get-data-in/application/java/performance.rst:136
msgid "For Java applications, use a warmup phase prior to starting measurements. The JVM is a highly dynamic machine that performs a large number of optimizations through just-in-time compilation (JIT). The warmup phase helps the application to finish most of its class loading and gives the JIT compiler time to run the majority of optimizations."
msgstr "Javaアプリケーションでは、測定を開始する前にウォームアップフェーズを使用する。JVMは高度にダイナミックなマシンで、ジャスト・イン・タイム・コンパイル（JIT）によって多数の最適化を実行する。ウォームアップ・フェーズは、アプリケーションのクラス・ロードの大半を終了させ、JITコンパイラに最適化の大半を実行させる時間を与える。"

#: ../../gdi/get-data-in/application/java/performance.rst:138
msgid "Make sure to run a large number of requests and to repeat the test pass many times. This helps to ensure a representative data sample. Include error scenarios in your test data. Simulate an error rate similar to that of a normal workload, typically between 2% to 10%."
msgstr "多くのリクエストを実行し、テストパスを何度も繰り返すようにしてください。これは、代表的なデータサンプルを確保するのに役立つ。テストデータにエラーシナリオを含める。通常の作業負荷と同様のエラー率（通常2％から10％）をシミュレートする。"

#: ../../gdi/get-data-in/application/java/performance.rst:141
msgid "4. Collect comparable measurements"
msgstr "4.比較可能な測定値を集める"

#: ../../gdi/get-data-in/application/java/performance.rst:143
msgid "To identify which factors might be affecting performance and causing overhead, collect measurements in the same environment after modifying a single factor or condition."
msgstr "どの要因がパフォーマンスに影響し、オーバーヘッドを引き起こしているかを特定するために、1つの要因や条件を変更した後、同じ環境で測定値を収集する。"

#: ../../gdi/get-data-in/application/java/performance.rst:145
msgid "For example, you can take produce three different sets of measruments where the only difference is the presence and settings of the instrumentation:"
msgstr "例えば、計測器の有無と設定だけが異なる3つの異なる計測器のセットを作ることができる："

#: ../../gdi/get-data-in/application/java/performance.rst:147
msgid "Condition A: No instrumentation or baseline"
msgstr "条件A：計測器なし、ベースラインなし"

#: ../../gdi/get-data-in/application/java/performance.rst:148
msgid "Condition B: Instrumentation without AlwaysOn Profiling"
msgstr "条件 B：AlwaysOn プロファイリングを使用しない計装"

#: ../../gdi/get-data-in/application/java/performance.rst:149
msgid "Condition C: Instrumentation with AlwaysOn Profiling"
msgstr "条件 C: AlwaysOn プロファイリングによる計測"

#: ../../gdi/get-data-in/application/java/performance.rst:152
msgid "5. Analyze the overhead data"
msgstr "5.オーバーヘッドデータの分析"

#: ../../gdi/get-data-in/application/java/performance.rst:154
msgid "After collecting data from multiple passes, you can compare averages using simple statistical tests to check for significant differences, or plot results in a chart."
msgstr "複数のパスからデータを収集した後、単純な統計検定を使って平均値を比較し、有意差をチェックしたり、結果をグラフにプロットしたりすることができます。"

#: ../../gdi/get-data-in/application/java/performance.rst:156
msgid "Consider that different stacks, applications, and environments might result in different operational characteristics and different overhead measurement results."
msgstr "スタック、アプリケーション、環境が異なれば、運用特性もオーバーヘッド測定結果も異なる可能性があることを考慮すること。"

#: ../../gdi/get-data-in/application/java/performance.rst:161
msgid "How to get support"
msgstr "サポートを受けるには"

#: ../../_includes/troubleshooting-components.rst:1
msgid "If you are a Splunk Observability Cloud customer and are not able to see your data in Splunk Observability Cloud, you can get help in the following ways."
msgstr "Splunk Observability Cloudをご利用のお客様で、Splunk Observability Cloudでデータを確認できない場合は、以下の方法でサポートを受けることができます。"

#: ../../_includes/troubleshooting-components.rst:4 ../../_includes/troubleshooting.md:7 ../../_includes/troubleshooting.md:10
msgid "Available to Splunk Observability Cloud customers"
msgstr "Splunk Observability Cloudをご利用のお客様"

#: ../../_includes/troubleshooting-components.rst:6
msgid "Submit a case in the :new-page:`Splunk Support Portal <https://splunkcommunities.force.com/customers/home/home.jsp>`."
msgstr ":new-page:`Splunk サポートポータル<https://splunkcommunities.force.com/customers/home/home.jsp>` でケースを送信します。"

#: ../../_includes/troubleshooting-components.rst:8
msgid "Call :new-page:`Splunk Customer Support <https://www.splunk.com/en_us/about-splunk/contact-us.html>`."
msgstr "電話:new-page:`Splunk カスタマーサポート<https://www.splunk.com/en_us/about-splunk/contact-us.html>`."

#: ../../_includes/troubleshooting-components.rst:11
msgid "Available to customers and free trial users"
msgstr "顧客および無料トライアルユーザーが利用可能"

#: ../../_includes/troubleshooting-components.rst:13
msgid "Ask a question and get answers through community support at :new-page:`Splunk Answers <https://community.splunk.com/t5/Splunk-Observability-Cloud/bd-p/it-signalfx>`."
msgstr "コミュニティサポート:new-page:`Splunk Answers<https://community.splunk.com/t5/Splunk-Observability-Cloud/bd-p/it-signalfx>` で質問し、回答を得ることができます。"

#: ../../_includes/troubleshooting-components.rst:15
msgid "Join the Splunk :new-page:`#observability <https://splunk-usergroups.slack.com/archives/C01AK4CCWR4>` user group Slack channel to communicate with customers, partners, and Splunk employees worldwide. To join, see :new-page:`Chat groups <https://docs.splunk.com/Documentation/Community/current/community/Chat>` in the *Get Started with Splunk Community* manual."
msgstr "Splunk:new-page:`#observability<https://splunk-usergroups.slack.com/archives/C01AK4CCWR4>` ユーザーグループの Slack チャンネルに参加して、世界中の顧客、パートナー、Splunk 社員とのコミュニケーションを図りましょう。参加するには、*Get Started with Splunk Community* マニュアルの:new-page:`Chat groups<https://docs.splunk.com/Documentation/Community/current/community/Chat>` を参照してください。"

#: ../../_includes/troubleshooting-components.rst:17
msgid "To learn about even more support options, see :new-page:`Splunk Customer Success <https://www.splunk.com/en_us/customer-success.html>`."
msgstr "その他のサポートオプションについては、:new-page:`Splunk Customer Success<https://www.splunk.com/en_us/customer-success.html>` をご覧ください。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:-1
msgid "The Splunk Distribution of OpenTelemetry Java is a wrapper for the OpenTelemetry Instrumentation for Java, an open source Java agent that dynamically injects bytecode to capture telemetry from many Java libraries and frameworks."
msgstr "OpenTelemetry Java の Splunk ディストリビューションは、OpenTelemetry Instrumentation for Java のラッパーであり、多くの Java ライブラリやフレームワークからテレメトリをキャプチャするためにバイトコードを動的に注入するオープンソースの Java エージェントです。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:5
msgid "About the Splunk Distribution of OpenTelemetry Java"
msgstr "OpenTelemetry Java の Splunk ディストリビューションについて"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:10
msgid "The Splunk Distribution of OpenTelemetry Java is a wrapper for the OpenTelemetry Instrumentation for Java, an open source Java agent that dynamically injects bytecode to capture telemetry data."
msgstr "OpenTelemetry Java の Splunk ディストリビューションは、OpenTelemetry Instrumentation for Java のラッパーであり、テレメトリデータをキャプチャするためにバイトコードを動的に注入するオープンソースの Java エージェントです。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:12
msgid "With the agent you can automatically instrument any application written in a Java Virtual Machine (JVM) language, like Java and Groovy. See :ref:`java-otel-requirements`)."
msgstr "エージェントを使えば、JavaやGroovyのようなJava仮想マシン（JVM）言語で書かれたアプリケーションを自動的に計測することができる。:ref:`java-otel-requirements` 参照）。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:15
msgid "Features of the Splunk Distribution of OpenTelemetry Java"
msgstr "OpenTelemetry Java の Splunk ディストリビューションの特徴"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:17
msgid "In addition to the features of the OpenTelemetry Instrumentation for Java, like bundled exporters and propagators, the agent provides additional custom features:"
msgstr "バンドルされたエクスポータやプロパゲータのような OpenTelemetry Instrumentation for Java の機能に加えて、エージェントは追加のカスタム機能を提供します："

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:19 ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:19 ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:19
msgid "Sends trace and span data to Splunk Observability Cloud using the OTel Collector.."
msgstr "OTel コレクターを使用して、トレースとスパンデータを Splunk Observability Cloud に送信します。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:20
msgid "Collection of application and JVM metrics, which you can export to the Splunk Collector or Splunk ingest. See :ref:`java-otel-metrics`."
msgstr "アプリケーションと JVM のメトリクスを収集し、Splunk Collector または Splunk ingest にエクスポートできます。:ref:`java-otel-metrics` を参照。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:21
msgid "AlwaysOn Profiling, which captures the call stack state for all JVM threads and sends them to Splunk Observability Cloud. See :ref:`profiling-intro` and :ref:`profiling-configuration-java`."
msgstr "すべての JVM スレッドのコールスタック状態をキャプチャし、Splunk Observability Cloud に送信する AlwaysOn プロファイリング。:ref:`profiling-intro` および:ref:`profiling-configuration-java` を参照のこと。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:22
msgid "Instrumentation for HTTP server frameworks that returns server trace information in HTTP responses. See :ref:`server-trace-information-java`."
msgstr "HTTPサーバーフレームワーク用のインストルメンテーションで、HTTPレスポンスにサーバートレース情報を返す。:ref:`server-trace-information-java` を参照。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:23
msgid "Collection of data about application servers, stored as server span attributes. See :ref:`webengine-attributes-java-otel`."
msgstr "サーバー・スパン属性として格納されている、アプリケーション・サーバーに関するデータのコレクション。:ref:`webengine-attributes-java-otel` を参照。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:24
msgid "Automatic injection of trace metadata into application logs. See :ref:`correlate-traces-with-logs-java`."
msgstr "アプリケーションログへのトレースメタデータの自動注入。:ref:`correlate-traces-with-logs-java` を参照。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:26
msgid "The agent of the Splunk Distribution of OpenTelemetry Java is supported by Splunk and is updated frequently, bringing bug fixes and new features to you before they are integrated in the upstream OTel repositories."
msgstr "OpenTelemetry Java の Splunk ディストリビューションのエージェントは Splunk によってサポートされ、頻繁に更新されるため、バグフィックスや新機能がアップストリームの OTel リポジトリに統合される前にお客様にお届けします。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:28
msgid "Use the Splunk Distribution of OpenTelemetry Java instead of the upstream OpenTelemetry instrumentation and OpenTelemetry SDK. Splunk supports only upstream OTel components as part of the Splunk Distribution of OpenTelemetry Java."
msgstr "アップストリームの OpenTelemetry インスツルメンテーションや OpenTelemetry SDK ではなく、OpenTelemetry Java の Splunk ディストリビューションを使用してください。Splunk は、OpenTelemetry Java の Splunk ディストリビューションの一部として、アップストリームの OTel コンポーネントのみをサポートしています。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:31
msgid "Release types"
msgstr "リリースの種類"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:33
msgid "The Splunk Distribution of OpenTelemetry Java has two release channels: stable releases and snapshots."
msgstr "OpenTelemetry Java の Splunk ディストリビューションには、安定リリースとスナップショットという 2 つのリリースチャンネルがあります。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:36
msgid "Stable releases"
msgstr "安定したリリース"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:38
msgid "The stable version of the Splunk Distribution of OpenTelemetry Java is released every 4 weeks, within 5 working days of the OTel Java instrumentation release. Fast releases ensure that all new features and fixes coming from upstream are incorporated into the Splunk platform distribution."
msgstr "OpenTelemetry Java の Splunk ディストリビューションの安定バージョンは、4 週間ごとに、OTel Java インストルメンテーションのリリースから 5 営業日以内にリリースされます。迅速なリリースにより、アップストリームから提供されるすべての新機能と修正が Splunk プラットフォームのディストリビューションに組み込まれます。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:40
msgid "To browse the release notes, see the :new-page:`changelog <https://github.com/signalfx/splunk-otel-java/blob/main/CHANGELOG.md>` on GitHub."
msgstr "リリースノートを参照するには、GitHub の:new-page:`changelog<https://github.com/signalfx/splunk-otel-java/blob/main/CHANGELOG.md>` をご覧ください。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:43
msgid "Snapshot releases"
msgstr "スナップショット・リリース"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:45
msgid "Snapshot releases contain the latest fixes and features developed for Splunk Observability Cloud, so that you can test them without having to wait for the stable release."
msgstr "スナップショットリリースには、Splunk Observability Cloud 用に開発された最新の修正と機能が含まれており、安定版リリースを待つことなくテストできます。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:47
msgid "To access the latest snapshot releases, see the Splunk Observability Cloud :new-page:`snapshot repository <https://oss.sonatype.org/content/repositories/snapshots/com/splunk/splunk-otel-javaagent/>`."
msgstr "最新のスナップショットリリースにアクセスするには、Splunk Observability Cloud:new-page:`スナップショットリポジトリ<https://oss.sonatype.org/content/repositories/snapshots/com/splunk/splunk-otel-javaagent/>` を参照してください。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:49
msgid "Snapshot releases are not supported by Splunk. Use them only for testing new fixes and features before the stable release."
msgstr "スナップショットリリースは Splunk ではサポートされていません。安定版リリース前の新しい修正や機能のテストにのみ使用してください。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:52
msgid "Defaults of the Splunk Distribution of OpenTelemetry Java"
msgstr "OpenTelemetry Java の Splunk ディストリビューションのデフォルト"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:54
msgid "The Splunk Distribution of OpenTelemetry Java has the following default settings for context propagation, exporters, and trace settings:"
msgstr "OpenTelemetry Java の Splunk ディストリビューションでは、コンテキストプロパゲーション、エクスポーター、トレース設定のデフォルト設定が以下のようになっています："

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:56
msgid "W3C tracecontext and W3C baggage context propagation is activated by default. See :ref:`trace-propagation-configuration-java`."
msgstr "W3C tracecontext と W3C baggage context propagation はデフォルトで有効になっています。:ref:`trace-propagation-configuration-java` を参照。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:57 ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:33
msgid "The OTLP gRPC exporter is configured by default to send spans to the local :ref:`Splunk OpenTelemetry Collector <otel-intro>`."
msgstr "OTLP gRPCエクスポータは、デフォルトで、スパンをローカル:ref:`Splunk OpenTelemetry Collector <otel-intro>` に送信するように設定されています。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:59
msgid "Unlimited defaults for trace configuration to support full-fidelity tracing. See :ref:`trace-configuration-java`."
msgstr "完全忠実なトレースをサポートするため、トレース設定のデフォルトは無制限。:ref:`trace-configuration-java` を参照。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:62
msgid "Performance overhead of the Splunk OTel Java agent"
msgstr "Splunk OTel Java エージェントのパフォーマンスオーバーヘッド"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:64
msgid "The Splunk OTel Java Agent has minimal impact on system performance when instrumenting Java Virtual Machine (JVM) applications. See :ref:`java-otel-performance` for more information."
msgstr "Splunk OTel Java エージェントは、Java 仮想マシン (JVM) アプリケーションをインスツルメンテーションする際、システムパフォーマンスへの影響を最小限に抑えます。詳しくは:ref:`java-otel-performance` 。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:71
msgid "For more information on versioning of the Splunk Distribution of OpenTelemetry Java, see :new-page:`the versioning guidelines <https://github.com/signalfx/splunk-otel-java/blob/main/VERSIONING.md>` on GitHub."
msgstr "OpenTelemetry Java の Splunk ディストリビューションのバージョン管理に関する詳細は、GitHub の:new-page:`バージョン管理ガイドライン<https://github.com/signalfx/splunk-otel-java/blob/main/VERSIONING.md>` を参照してください。"

#: ../../gdi/get-data-in/application/java/splunk-java-otel-distribution.rst:76
msgid "The Splunk Distribution of OpenTelemetry Java is open-source software. You can contribute to its improvement by creating pull requests in GitHub. To learn more, see the :new-page:`contributing guidelines <https://github.com/signalfx/splunk-otel-java/blob/main/CONTRIBUTING.md>` on GitHub."
msgstr "OpenTelemetry Java の Splunk ディストリビューションはオープンソースソフトウェアです。GitHubでプルリクエストを作成することで、改良に貢献することができる。詳しくは、GitHub の:new-page:`貢献ガイドライン<https://github.com/signalfx/splunk-otel-java/blob/main/CONTRIBUTING.md>` をご覧ください。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:-1
msgid "If your instrumented Java application is not sending data to Splunk Observability Cloud, or data is missing, follow these steps to identify and resolve the issue."
msgstr "インスツルメンテーションされた Java アプリケーションが Splunk Observability Cloud にデータを送信しない、またはデータが欠落している場合は、以下の手順に従って問題を特定し、解決してください。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:5
msgid "Troubleshoot Java instrumentation for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud の Java インストルメンテーションのトラブルシューティング"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:10
msgid "When you instrument a Java application using the Splunk Distribution of OpenTelemetry Java and you don't see your data in Splunk Observability Cloud, follow these troubleshooting steps."
msgstr "Splunk Distribution of OpenTelemetry Java を使用して Java アプリケーションを計測しているときに Splunk Observability Cloud にデータが表示されない場合は、以下のトラブルシューティング手順に従ってください。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:15
msgid "Steps for troubleshooting Java OpenTelemetry issues"
msgstr "Java OpenTelemetryの問題のトラブルシューティングの手順"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:17
msgid "The following steps can help you troubleshoot Java agent issues:"
msgstr "以下の手順は、Javaエージェントの問題のトラブルシューティングに役立ちます："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:19
msgid ":ref:`enable-java-debug-logging`"
msgstr ":ref:`enable-java-debug-logging`"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:20
msgid ":ref:`verify-runtime-status`"
msgstr ":ref:`verify-runtime-status`"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:27
msgid "Debug logging is a special execution mode that outputs more information about the Java agent of the Splunk Distribution of OpenTelemetry Java. This can help you troubleshoot Java instrumentation issues."
msgstr "デバッグロギングは、OpenTelemetry Java の Splunk ディストリビューションの Java エージェントに関するより多くの情報を出力する特別な実行モードです。これは、Javaインスツルメンテーションの問題のトラブルシューティングに役立つ。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:29
msgid "To activate debug logging for the Java agent, select one of the following options:"
msgstr "Javaエージェントのデバッグ・ロギングを有効にするには、以下のオプションのいずれかを選択します："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:31
msgid "Pass the following argument when running your application: ``-Dotel.javaagent.debug=true``."
msgstr "アプリケーションの実行時に以下の引数を渡します：``-Dotel.javaagent.debug=true``."

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:33
msgid "Set the ``OTEL_JAVAAGENT_DEBUG`` environment variable to ``true`` before running your application."
msgstr "アプリケーションを実行する前に、``OTEL_JAVAAGENT_DEBUG`` 環境変数を``true`` に設定する。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:35
msgid "When you run the agent with debug logging activated, debug information is sent to the console as ``stderr``. Debug log entries look like the following example:"
msgstr "デバッグログを有効にしてエージェントを実行すると、デバッグ情報は``stderr`` としてコンソールに送られます。デバッグログエントリーは以下の例のようになる："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:44
msgid "While not all debug entries are relevant to the issue affecting your Java instrumentation, the root cause is likely to appear in your debug log."
msgstr "すべてのデバッグ・エントリが、Javaインストルメンテーションに影響を与える問題に関連するとは限りませんが、根本的な原因はデバッグ・ログに現れる可能性が高いです。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:51
msgid "Check the status of the runtime"
msgstr "ランタイムの状態をチェックする"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:53
msgid "Run the ``jps -lvm`` command to verify that the Java runtime has started. The output is a list of all the Java Virtual Machines (JVM) currently running. Make sure the JVM you instrumented appears among them."
msgstr "``jps -lvm`` コマンドを実行して、Javaランタイムが開始したことを確認する。出力は、現在実行中のすべてのJava仮想マシン（JVM）のリストである。その中に、インスツルメンテーションしたJVMが表示されていることを確認する。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:55
msgid "In the following example, the first entry shows a JVM running the agent with ``-javaagent``:"
msgstr "以下の例では、最初のエントリーは、``-javaagent`` でエージェントを実行している JVM を示している："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:62
msgid "If the instrumented JVM doesn't appear in the list, check the JVM or application logs to find the cause of the problem. Also check that the additional startup parameters are correctly passed to the runtime. See :ref:`instrument-java-applications` to learn more about startup parameters."
msgstr "インスツルメンテーションされたJVMがリストに表示されない場合は、JVMまたはアプリケーション・ログをチェックして問題の原因を見つける。また、追加の起動パラメータがランタイムに正しく渡されていることも確認する。スタートアップ・パラメーターの詳細については、:ref:`instrument-java-applications` を参照のこと。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:67
msgid "Library instrumentation issues"
msgstr "ライブラリーの計装に関する問題"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:69
msgid "If you find an issue with a specific instrumentation of a library, or suspect there might be an issue affecting that instrumentation, deactivating it can help you troubleshoot the Java agent."
msgstr "ライブラリの特定のインスツルメンテーションに問題が見つかった場合、またはそのインスツルメンテーションに影響する問題がある可能性が疑われる場合、そのインスツルメンテーションを無効にすると、Javaエージェントのトラブルシューティングに役立ちます。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:71
msgid "To deactivate a specific library instrumentation, add the following argument:"
msgstr "特定のライブラリ・インストルメンテーションを無効にするには、以下の引数を追加する："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:73
msgid "``-Dotel.instrumentation.<name>.enabled=false``"
msgstr "``-Dotel.instrumentation.<name>.enabled=false``"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:75
msgid "Replace ``<name>`` with the corresponding instrumentation from the OpenTelemetry Java instrumentation on GitHub at https://opentelemetry.io/docs/instrumentation/java/automatic/agent-config/#suppressing-specific-auto-instrumentation."
msgstr "``<name>`` を、GitHub https://opentelemetry.io/docs/instrumentation/java/automatic/agent-config/#suppressing-specific-auto-instrumentation にある OpenTelemetry Java instrumentation の対応するインストルメンテーションに置き換えてください。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:80
msgid "Class instrumentation issues"
msgstr "クラス編成の問題"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:82
msgid "You can prevent specific classes from being instrumented. Excluded classes don't send spans, which is useful for muting specific classes or packages."
msgstr "特定のクラスがインストゥルメント化されないようにすることができます。除外されたクラスはスパンを送信しないので、特定のクラスやパッケージをミュートするのに便利です。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:84
msgid "To deactivate instrumentation for a class, set the ``otel.javaagent.exclude-classes`` system property or the ``OTEL_JAVAAGENT_EXCLUDE_CLASSES`` environment variable to the name of the class or classes."
msgstr "クラスのインスツルメンテーションを無効にするには、``otel.javaagent.exclude-classes`` システム・プロパティまたは``OTEL_JAVAAGENT_EXCLUDE_CLASSES`` 環境変数をクラスまたはクラスの名前に設定します。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:86
msgid "You can enter multiple classes. For example, ``my.package.MyClass,my.package2.*``."
msgstr "複数のクラスにエントリーすることができる。例えば、``my.package.MyClass,my.package2.*`` 。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:88
msgid "Deactivating instrumentation for specific classes can have unintended side effects. Use this feature with caution."
msgstr "特定のクラスのインスツルメンテーションを無効にすると、意図しない副作用が生じることがある。この機能は注意して使用すること。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:93 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:68 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:70 ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:37
msgid "Trace exporter issues"
msgstr "トレース・エクスポーターの問題"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:95
msgid "By default, the Splunk Distribution of OpenTelemetry Java uses the OTLP exporter. Any issue affecting the export of traces produces an error in the debug logs."
msgstr "デフォルトでは、OpenTelemetry Java の Splunk ディストリビューションは OTLP エクスポーターを使用します。トレースのエクスポートに影響する問題はすべて、デバッグログにエラーを生成します。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:98 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:73 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:75 ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:42
msgid "OTLP can't export spans"
msgstr "OTLPはスパンをエクスポートできない"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:100 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:77
msgid "The following error in the logs means that the agent can't send trace data to the OpenTelemetry Collector:"
msgstr "ログの以下のエラーは、エージェントがトレースデータを OpenTelemetry Collector に送信できないことを意味します："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:106
msgid "To troubleshoot the lack of connectivity between the OTLP exporter and the OTel Collector, try the following steps:"
msgstr "OTLPエクスポータとOTelコレクタ間の接続不足をトラブルシューティングするには、以下の手順を試してください："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:108
msgid "Make sure that ``otel.exporter.otlp.endpoint`` points to the correct OpenTelemetry Collector instance host."
msgstr "``otel.exporter.otlp.endpoint`` が正しい OpenTelemetry Collector インスタンスホストを指していることを確認する。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:109 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:87
msgid "Check that your OTel Collector instance is configured and running. See :ref:`otel-splunk-collector-tshoot`."
msgstr "OTel Collectorインスタンスが構成され、実行されていることを確認します。:ref:`otel-splunk-collector-tshoot` を参照。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:110 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:88
msgid "Check that the OTLP gRPC receiver is activated in the OTel Collector and plugged into the traces pipeline."
msgstr "OTLP gRPC レシーバが OTel Collector でアクティブになり、トレースパイプラインに接続されていることを確認します。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:111 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:87 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:89
msgid "Check that the OTel Collector points to the following address: ``http://<host>:4317``. Verify that your URL is correct."
msgstr "OTel コレクタが以下のアドレスを指していることを確認する：``http://<host>:4317``.URLが正しいことを確認してください。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:114 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:90 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:116 ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:52
msgid "401 error when sending spans"
msgstr "スパン送信時の401エラー"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:116 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:92 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:118 ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:54
msgid "If you send traces directly to Splunk Observability Cloud and receive a 401 error code, the authentication token specified in ``SPLUNK_ACCESS_TOKEN`` is invalid. The following are possible reasons:"
msgstr "トレースを Splunk Observability Cloud に直接送信して 401 エラーコードを受け取った場合、``SPLUNK_ACCESS_TOKEN`` で指定した認証トークンが無効です。以下のような理由が考えられる："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:118 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:94 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:120 ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:56
msgid "The value is null."
msgstr "値はnullである。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:119 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:95 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:121 ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:57
msgid "The value is not a well-formed token."
msgstr "値が整形式トークンでない。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:120 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:96 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:122 ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:58
msgid "The token is not an access token that has ``authScope`` set to ingest."
msgstr "トークンは、``authScope`` がインジェストに設定されているアクセストークンではありません。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:122 ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:140 ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:98 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:124 ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:60
msgid "Make sure that you're using a valid Splunk access token when sending data directly to your Splunk platform instance. See :ref:`admin-api-access-tokens`."
msgstr "Splunk プラットフォームインスタンスに直接データを送信する際には、有効な Splunk アクセストークンを使用していることを確認してください。:ref:`admin-api-access-tokens` を参照。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:127
msgid "Metrics exporter issues"
msgstr "メトリクス・エクスポーターの問題"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:129
msgid "If you see the following warning in your logs, it means that the Java agent can't send metrics to your OTel Collector, Smart Agent (now deprecated), or to the Splunk platform endpoints:"
msgstr "ログに次のような警告が表示された場合は、Java エージェントが OTel Collector、Smart Agent (現在は非推奨)、または Splunk プラットフォームのエンドポイントにメトリクスを送信できないことを意味します："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:135
msgid "To troubleshoot connectivity issues affecting application metrics, try the following steps:"
msgstr "アプリケーション・メトリクスに影響する接続性の問題をトラブルシューティングするには、以下の手順を試してください："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:137
msgid "Make sure that ``splunk.metrics.endpoint`` points to the correct host."
msgstr "``splunk.metrics.endpoint`` が正しいホストを指していることを確認してください。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:138
msgid "Check that the OpenTelemetry Collector or Smart Agent instance is configured and running."
msgstr "OpenTelemetry Collector または Smart Agent インスタンスが設定され、実行されていることを確認します。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:139
msgid "Check that the OpenTelemetry Collector or Smart Agent are using the correct ports for the SignalFx receiver. The Collector uses ``http://<host>:9943``, and the Smart Agent uses ``http://<host>:9080/v2/datapoint``."
msgstr "OpenTelemetryコレクタまたはスマートエージェントが、SignalFxレシーバに正しいポートを使用していることを確認します。コレクターは``http://<host>:9943`` を使用し、スマートエージェントは``http://<host>:9080/v2/datapoint`` を使用する。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:142
msgid "Metric collection for Java using OpenTelemetry instrumentation is still experimental."
msgstr "OpenTelemetryインスツルメンテーションを使ったJavaのメトリクス収集は、まだ実験的なものです。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:147
msgid "Troubleshoot AlwaysOn Profiling for Java"
msgstr "Java の AlwaysOn プロファイリングのトラブルシューティング"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:149
msgid "Follow these steps to troubleshoot issues with AlwaysOn Profiling:"
msgstr "以下の手順に従って、AlwaysOn プロファイリングの問題をトラブルシューティングしてください："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:154
msgid "The Java agent logs the string ``JFR profiler is active`` at startup using an ``INFO`` message. To check whether AlwaysOn Profiling is activated, search your logs for strings similar to the following:"
msgstr "Javaエージェントは、``INFO`` メッセージを使用して、起動時に文字列``JFR profiler is active`` を記録する。AlwaysOn プロファイリングが有効になっているかどうかを確認するには、以下のような文字列をログから検索します："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:160
msgid "If the string does not appear, make sure that you've activated the profiler by setting the ``splunk.profiler.enabled`` system property or the ``SPLUNK_PROFILER_ENABLED`` environment variable. See :ref:`profiling-configuration-java`."
msgstr "文字列が表示されない場合は、``splunk.profiler.enabled`` システム・プロパティまたは``SPLUNK_PROFILER_ENABLED`` 環境変数を設定して、プロファイラが有効になっていることを確認してください。:ref:`profiling-configuration-java` を参照。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:165
msgid "If AlwaysOn Profiling is not working as intended, check the configuration settings. The Java agent logs AlwaysOn Profiling settings using INFO messages at startup. Search for the string ``com.splunk.opentelemetry.profiler.ConfigurationLogger`` to see entries like the following:"
msgstr "AlwaysOn Profiling が意図したとおりに動作しない場合は、構成設定を確認してください。Java エージェントは、起動時に INFO メッセージを使用して AlwaysOn プロファイリング設定を記録します。文字列``com.splunk.opentelemetry.profiler.ConfigurationLogger`` を検索すると、以下のようなエントリーが表示される："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:182
msgid "JFR is not available error"
msgstr "JFRは利用できませんエラー"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:184
msgid "If your Java Virtual Machine does not support Java Flight Recording (JFR), the profiler logs a warning at startup with the message ``Java Flight Recorder (JFR) is not available in this JVM. Profiling is disabled.``."
msgstr "Java仮想マシンがJava Flight Recording (JFR)をサポートしていない場合、プロファイラの起動時に警告がログに記録され、``Java Flight Recorder (JFR) is not available in this JVM. Profiling is disabled.`` というメッセージが表示されます。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:186
msgid "To use the profiler, upgrade your JVM version to 8u262 and higher. See :ref:`java-otel-requirements`."
msgstr "プロファイラーを使用するには、JVMのバージョンを8u262以上にアップグレードしてください。:ref:`java-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:191
msgid "Access denied error"
msgstr "アクセス拒否エラー"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:193
msgid "If your Java runtime has Java Security Manager (JSM) activated, the following error might appear:"
msgstr "JavaランタイムでJava Security Manager（JSM）が有効になっている場合、以下のエラーが表示されることがあります："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:199
msgid "To fix this, deactivate JSM or add the following block to the JSM policy file:"
msgstr "これを解決するには、JSMを非アクティブにするか、JSMポリシーファイルに以下のブロックを追加する："

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:214
msgid "Find the value of ``splunk.profiler.logs-endpoint`` and ``otel.exporter.otlp.endpoint`` in the startup log messages. Check that a collector is running using that endpoint and that the application host or container can resolve any host names and connect to the OTLP port."
msgstr "起動時のログメッセージから、``splunk.profiler.logs-endpoint`` と``otel.exporter.otlp.endpoint`` の値を見つける。コレクタがそのエンドポイントを使用して実行されていること、アプリケーションホストまたはコンテナがホスト名を解決して OTLP ポートに接続できることを確認する。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:215
msgid "Make sure that you're running the Splunk Distribution of OpenTelemetry Collector and that the version is 0.34 and higher. Other collector distributions might not be able to route the log data that contains profiling data."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを実行していることと、バージョンが 0.34 以上であることを確認してください。他のコレクタディストリビューションでは、プロファイリングデータを含むログデータをルーティングできないことがあります。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:250
msgid "Deactivate all Java agent logs"
msgstr "すべてのJavaエージェントログを無効にする"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:252
msgid "By default, the Splunk Java agent outputs logs to the console. In certain situations you might want to silence the output of the agent so as not to clutter the system logs."
msgstr "デフォルトでは、Splunk Java エージェントはログをコンソールに出力します。特定の状況では、システムログを散らかさないように、エージェントの出力を消したいかもしれません。"

#: ../../gdi/get-data-in/application/java/troubleshooting/common-java-troubleshooting.rst:254
msgid "To run the Java agent in silent mode, add the following argument:"
msgstr "Javaエージェントをサイレント・モードで実行するには、以下の引数を追加する："

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:-1
msgid "The agent of the Splunk Distribution of OpenTelemetry Java replaces the deprecated SignalFx Java Agent. To migrate to the Splunk Java OTel agent, follow these instructions."
msgstr "Splunk Distribution of OpenTelemetry Java のエージェントは、非推奨の SignalFx Java エージェントに取って代わるものです。Splunk Java OTel エージェントに移行するには、以下の手順に従ってください。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:5
msgid "Migrate from the SignalFx Java Agent"
msgstr "SignalFx Javaエージェントからの移行"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:10
msgid "The SignalFx Java Agent is deprecated and has reached End of Support. Replace it with the agent from the Splunk Distribution of OpenTelemetry Java."
msgstr "SignalFxのJavaエージェントはサポート終了となりました。OpenTelemetry Java の Splunk ディストリビューションからエージェントに置き換える。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:12
msgid "The agent of the Splunk Distribution of OpenTelemetry Java is based on the OpenTelemetry Instrumentation for Java, an open-source project that uses the OpenTelemetry API and has a smaller memory footprint than the SignalFx Java Agent."
msgstr "OpenTelemetry Java の Splunk ディストリビューションのエージェントは、OpenTelemetry API を使用するオープンソースプロジェクトである OpenTelemetry Instrumentation for Java をベースにしており、SignalFx Java エージェントよりもメモリフットプリントが小さくなっています。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:19
msgid "The Splunk Distribution of OpenTelemetry Java requires Java runtimes version 8 and higher. See :ref:`java-otel-requirements`."
msgstr "OpenTelemetry Java の Splunk ディストリビューションには、Java ランタイムバージョン 8 以上が必要です。:ref:`java-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:24
msgid "Migrate to the Splunk Distribution of OpenTelemetry Java"
msgstr "OpenTelemetry Java の Splunk ディストリビューションへの移行"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:26
msgid "To migrate from the SignalFx Java Agent to the Splunk Distribution of OpenTelemetry Java, follow these steps:"
msgstr "SignalFx Java Agent から Splunk Distribution of OpenTelemetry Java へ移行するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:28
msgid "Install and activate the Java agent. See :ref:`install-enable-jvm-agent`."
msgstr "Javaエージェントをインストールし、アクティベートする。:ref:`install-enable-jvm-agent` を参照。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:29
msgid "Specify the endpoint of the OpenTelemetry Collector you're exporting traces to. See :ref:`trace-exporters-settings-java`."
msgstr "トレースをエクスポートする OpenTelemetry Collector のエンドポイントを指定します。:ref:`trace-exporters-settings-java` を参照。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:30
msgid "In your application startup script, replace ``-javaagent:./signalfx-tracing.jar`` with ``-javaagent:/path/to/splunk-otel-javaagent.jar``."
msgstr "アプリケーションの起動スクリプトで、``-javaagent:./signalfx-tracing.jar`` を``-javaagent:/path/to/splunk-otel-javaagent.jar`` に置き換えてください。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:32
msgid "If you manually instrumented your code with OpenTracing, expose the OpenTelemetry tracer using the OpenTracing Shim. If you use another API for manual instrumentation, ensure it's in your application's ``classpath`` as well."
msgstr "手動で OpenTracing を使ってコードをインスツルメンテーションした場合は、 OpenTracing Shim を使って OpenTelemetry トレーサを公開します。手動計測に別のAPIを使う場合は、アプリケーションの``classpath`` 。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:34 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:36 ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:35 ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:34
msgid "Semantic conventions for span names and attributes change when you migrate. For more information, see :ref:`migrate-sa-to-otel-collector`."
msgstr "スパン名と属性の意味上の規約は、マイグレーションの際に変更されます。詳細は:ref:`migrate-sa-to-otel-collector` を参照。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:39 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:38
msgid "Changes in functionality"
msgstr "機能の変更"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:41
msgid "Each of the following sections describe the main changes in functionality as you migrate from the SignalFx Java Agent to the Splunk Distribution of OpenTelemetry Java."
msgstr "以下の各セクションでは、SignalFx Java Agent から Splunk Distribution of OpenTelemetry Java への移行に伴う機能の主な変更点について説明します。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:44 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:43
msgid "Configuration setting changes"
msgstr "コンフィギュレーション設定の変更"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:46
msgid "The following table shows SignalFx Java Agent system properties and their OpenTelemetry equivalents:"
msgstr "次の表は、SignalFx Java Agent のシステム・プロパティと、それに相当する OpenTelemetry のプロパティです："

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:51
msgid "SignalFx system property"
msgstr "SignalFx システム・プロパティ"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:52
msgid "OpenTelemetry system property"
msgstr "OpenTelemetry システム・プロパティ"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:53
msgid "``signalfx.service.name``"
msgstr "``signalfx.service.name``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:54
msgid "``otel.service.name=<service_name>``"
msgstr "``otel.service.name=<service_name>``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:55
msgid "``signalfx.env``"
msgstr "``signalfx.env``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:56
msgid "``otel.resource.attributes=deployment.environment=<environment_name>``"
msgstr "``otel.resource.attributes=deployment.environment=<environment_name>``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:57
msgid "``signalfx.endpoint.url``"
msgstr "``signalfx.endpoint.url``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:58
msgid "``otel.exporter.otlp.endpoint``"
msgstr "``otel.exporter.otlp.endpoint``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:59
msgid "``signalfx.tracing.enabled``"
msgstr "``signalfx.tracing.enabled``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:60
msgid "``otel.javaagent.enabled``"
msgstr "``otel.javaagent.enabled``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:61
msgid "``signalfx.integration.<name>.enabled=false``"
msgstr "``signalfx.integration.<name>.enabled=false``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:62
msgid "``otel.instrumentation.<id>.enabled=false``. For more information, see :ref:`java-instrumentation-issues`."
msgstr "``otel.instrumentation.<id>.enabled=false``.詳細は:ref:`java-instrumentation-issues` を参照。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:63
msgid "``signalfx.span.tags``"
msgstr "``signalfx.span.tags``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:64
msgid "``otel.resource.attributes=<comma-separated key=value pairs>``"
msgstr "``otel.resource.attributes=<comma-separated key=value pairs>``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:65
msgid "``signalfx.trace.annotated.method.blacklist``"
msgstr "``signalfx.trace.annotated.method.blacklist``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:66
msgid "``otel.trace.annotated.methods.exclude``"
msgstr "``otel.trace.annotated.methods.exclude``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:67
msgid "``signalfx.trace.methods``"
msgstr "``signalfx.trace.methods``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:68
msgid "``otel.trace.methods``"
msgstr "``otel.trace.methods``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:69
msgid "``signalfx.server.timing.context``"
msgstr "``signalfx.server.timing.context``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:70
msgid "``splunk.trace-response-header.enabled``"
msgstr "``splunk.trace-response-header.enabled``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:72
msgid "The following table shows SignalFx Java Agent environment variables and their OpenTelemetry equivalents:"
msgstr "次の表は、SignalFx Java エージェントの環境変数と、それに相当する OpenTelemetry の環境変数を示しています："

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:77 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:105 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:51 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:109 ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:91 ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:70
#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:65
msgid "SignalFx environment variable"
msgstr "SignalFx 環境変数"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:78 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:106 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:52 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:110 ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:92 ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:71
#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:66
msgid "OpenTelemetry environment variable"
msgstr "OpenTelemetry環境変数"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:80 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:54
msgid "``OTEL_SERVICE_NAME=<service_name>``"
msgstr "``OTEL_SERVICE_NAME=<service_name>``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:82 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:56
msgid "``OTEL_RESOURCE_ATTRIBUTES=deployment.environment=<environment_name>``"
msgstr "``OTEL_RESOURCE_ATTRIBUTES=deployment.environment=<environment_name>``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:85 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:127 ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:29
msgid "``SIGNALFX_TRACING_ENABLED``"
msgstr "``SIGNALFX_TRACING_ENABLED``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:87
msgid "``SIGNALFX_INTEGRATION_<name>_ENABLED=false``"
msgstr "``SIGNALFX_INTEGRATION_<name>_ENABLED=false``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:88
msgid "``OTEL_INSTRUMENTATION_<id>_ENABLED=false``. For more information, see :ref:`java-instrumentation-issues`."
msgstr "``OTEL_INSTRUMENTATION_<id>_ENABLED=false``.詳細は:ref:`java-instrumentation-issues` を参照。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:89 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:117
msgid "``SIGNALFX_SPAN_TAGS``"
msgstr "``SIGNALFX_SPAN_TAGS``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:91
msgid "``SIGNALFX_TRACE_ANNOTATED_METHOD_BLACKLIST``"
msgstr "``SIGNALFX_TRACE_ANNOTATED_METHOD_BLACKLIST``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:92
msgid "``OTEL_TRACE_ANNOTATED_METHODS_EXCLUDE``"
msgstr "``OTEL_TRACE_ANNOTATED_METHODS_EXCLUDE``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:93
msgid "``SIGNALFX_TRACE_METHODS``"
msgstr "``SIGNALFX_TRACE_METHODS``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:94
msgid "``OTEL_TRACE_METHODS``"
msgstr "``OTEL_TRACE_METHODS``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:95 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:125
msgid "``SIGNALFX_SERVER_TIMING_CONTEXT``"
msgstr "``SIGNALFX_SERVER_TIMING_CONTEXT``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:98
msgid "The following SignalFx Java Agent system properties and environment variables don't have a corresponding setting in the Splunk Distribution for OpenTelemetry Java:"
msgstr "以下の SignalFx Java Agent のシステムプロパティと環境変数には、Splunk Distribution for OpenTelemetry Java に対応する設定がありません："

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:101
msgid "Deprecated system properties"
msgstr "非推奨システム・プロパティ"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:103
msgid "``signalfx.agent.host``"
msgstr "``signalfx.agent.host``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:104
msgid "``signalfx.db.statement.max.length``"
msgstr "``signalfx.db.statement.max.length``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:105
msgid "``signalfx.recorded.value.max.length``"
msgstr "``signalfx.recorded.value.max.length``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:106
msgid "``signalfx.max.spans.per.trace``"
msgstr "``signalfx.max.spans.per.trace``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:107
msgid "``signalfx.max.continuation.depth``"
msgstr "``signalfx.max.continuation.depth``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:110
msgid "Deprecated environment variables"
msgstr "非推奨環境変数"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:112
msgid "``SIGNALFX_AGENT_HOST``"
msgstr "``SIGNALFX_AGENT_HOST``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:113
msgid "``SIGNALFX_DB_STATEMENT_MAX_LENGTH``"
msgstr "``SIGNALFX_DB_STATEMENT_MAX_LENGTH``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:115 ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:116
msgid "``SIGNALFX_MAX_SPANS_PER_TRACE``"
msgstr "``SIGNALFX_MAX_SPANS_PER_TRACE``"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:118
msgid "For more information about Splunk Java OTel settings, see :ref:`advanced-java-otel-configuration`."
msgstr "Splunk Java OTel 設定の詳細については、:ref:`advanced-java-otel-configuration` を参照してください。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:121 ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:112 ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:84
msgid "Log injection changes"
msgstr "ログ・インジェクションの変更"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:123
msgid "For a list of compatible logging frameworks for injecting trace data in logs, see :ref:`correlate-traces-with-logs-java`."
msgstr "ログにトレースデータを注入するための互換性のあるロギングフレームワークのリストについては、:ref:`correlate-traces-with-logs-java` を参照のこと。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:126
msgid "Trace annotation changes"
msgstr "注釈変更のトレース"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:128
msgid "The ``@Trace`` annotation that the SignalFx Java Agent uses is compatible with the Splunk Distribution of OpenTelemetry Java. If you're using the ``@Trace`` annotation for custom instrumentation, you don't have to make any changes."
msgstr "SignalFx Java エージェントが使用する``@Trace`` アノテーションは、Splunk Distribution of OpenTelemetry Java と互換性があります。``@Trace`` アノテーションをカスタムインスツルメンテーションに使用している場合は、何も変更する必要はありません。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:130
msgid "If you want to configure new custom instrumentation and don't want to use the OpenTelemetry ``getTracer`` and API directly, use the OpenTelemetry ``@WithSpan`` annotation instead of the ``@Trace`` annotation. For more information, see Configure a WithSpan annotation in the OpenTelemetry documentation."
msgstr "新しいカスタム計測器を設定したいが、OpenTelemetry``getTracer`` と API を直接使いたくない場合は、``@Trace`` アノテーションの代わりに OpenTelemetry``@WithSpan`` アノテーションを使ってください。詳細については、OpenTelemetryドキュメントのWithSpanアノテーションの構成を参照してください。"

#: ../../gdi/get-data-in/application/java/troubleshooting/migrate-signalfx-java-agent-to-otel.rst:133
msgid "The ``@TraceSetting`` annotation to allow an exception isn't supported."
msgstr "例外を許可するための``@TraceSetting`` アノテーションはサポートされていません。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:-1
msgid "Configure the Splunk Distribution of OpenTelemetry JS to suit your instrumentation needs, like correlating traces with logs, activating exporters, and more."
msgstr "OpenTelemetry JS の Splunk ディストリビューションは、トレースとログの関連付け、エクスポータの有効化など、インスツルメンテーションのニーズに合わせて設定します。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:5
msgid "Configure the Splunk Distribution of OTel JS for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用の OTel JS の Splunk ディストリビューションを設定する"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:10
msgid "You can configure the Splunk Distribution of OpenTelemetry JS to suit your instrumentation needs. In most cases, modifying the basic configuration is enough to get started."
msgstr "OpenTelemetry JS の Splunk ディストリビューションは、インスツルメンテーションのニーズに合わせて設定することができます。たいていの場合、基本的なコンフィギュレーションを変更するだけで始められる。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:12
msgid "The following sections describe all available settings for configuring OpenTelemetry for Node.js, including options for activating new features that are unique to the Splunk Distribution of OpenTelemetry JS."
msgstr "以下のセクションでは、OpenTelemetry JS の Splunk ディストリビューション独自の新機能を有効にするオプションを含め、Node.js 用の OpenTelemetry を設定するために利用可能なすべての設定について説明します。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:19
msgid "To configure the Splunk Distribution of OpenTelemetry JS, you can use a combination of environment variables and arguments passed to the ``start()`` function:"
msgstr "OpenTelemetry JS の Splunk ディストリビューションを設定するには、環境変数と``start()`` 関数に渡す引数を組み合わせて使用します："

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:21 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:305
msgid "Environment variables"
msgstr "環境変数"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:23
msgid "For example: ``export OTEL_SERVICE_NAME='test-service'``"
msgstr "例えば、こうだ： ``export OTEL_SERVICE_NAME='test-service'``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:25
msgid "Arguments passed to the ``start()`` function"
msgstr "``start()`` 関数に渡される引数"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:27
msgid "For example: ``start({ serviceName: 'my-node-service', });``"
msgstr "例えば、こうだ： ``start({ serviceName: 'my-node-service', });``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:29
msgid "Configuration for each of the supported data type, such as metrics or tracing, is set using additional properties on the configuration object:"
msgstr "メトリックスやトレースなど、サポートされている各データ・タイプのコンフィギュレーションは、コンフィギュレーション・オブジェクトの追加プロパティを使用して設定します："

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:46
msgid "You can also activate the collection of a specific data type by passing a boolean value instead of an object. For example:"
msgstr "オブジェクトの代わりにブーリアン値を渡すことで、特定のデータ型のコレクションをアクティブにすることもできる。例えば、こうだ："

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:56
msgid "Function arguments take precedence over the corresponding environment variables."
msgstr "関数の引数は、対応する環境変数よりも優先される。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:63
msgid "The following settings are specific to the Splunk Distribution of OpenTelemetry JS:"
msgstr "以下の設定は、OpenTelemetry JS の Splunk ディストリビューション固有のものです："

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:69 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:95 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:133 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:184 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:214 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:254
msgid "Argument to ``start()``"
msgstr "への反論 ``start()``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:72 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:46
msgid "``realm``"
msgstr "``realm``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:75 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:141 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:142
msgid "``accessToken``"
msgstr "``accessToken``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:76 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:96
msgid "A Splunk authentication token that lets exporters send data directly to Splunk Observability Cloud. Unset by default. Required if you need to send data to the Splunk Observability Cloud ingest endpoint. See :ref:`admin-tokens`."
msgstr "Splunk Observability Cloud に直接データを送信するための Splunk 認証トークン。デフォルトでは未設定。Splunk Observability Cloud インジェストエンドポイントにデータを送信する必要がある場合に必要です。:ref:`admin-tokens` を参照。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:78
msgid "``tracing.serverTimingEnabled``"
msgstr "``tracing.serverTimingEnabled``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:79
msgid "Activates the addition of server trace information to HTTP response headers. For more information, see :ref:`server-trace-information-nodejs`. The default value is ``true``."
msgstr "HTTP レスポンスヘッダーへのサーバートレース情報の追加を有効にする。詳細は:ref:`server-trace-information-nodejs` を参照。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:81
msgid "``logLevel``"
msgstr "``logLevel``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:82
msgid "Log level for the OpenTelemetry diagnostic console logger. To activate debug logging, set the ``debug`` value. Available values are ``error``, ``info``, ``debug``, and ``verbose``. The default value is ``none``."
msgstr "OpenTelemetry 診断コンソールロガーのログレベル。デバッグ・ロギングを有効にするには、``debug`` 。利用可能な値は``error`` 、``info`` 、``debug`` 、``verbose`` 。デフォルト値は``none`` 。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:97 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:128 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:43
msgid "``OTEL_TRACE_ENABLED``"
msgstr "``OTEL_TRACE_ENABLED``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:98 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:104 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:107 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:110 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:113 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:116
#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:119 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:68 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:74 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:76 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:78 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:90
#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:92 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:112 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:114 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:116 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:124 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:126
#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:130
msgid "Not applicable"
msgstr "該当なし"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:99
msgid "Activates tracer creation and autoinstrumentation. Default value is ``true``."
msgstr "トレーサー作成と自動計測を有効にする。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:101 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:138
msgid "``serviceName``"
msgstr "``serviceName``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:108 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:194
msgid "Maximum number of attributes per span. Default value is unlimited."
msgstr "スパンあたりの最大属性数。デフォルト値は無制限。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:111 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:196
msgid "Maximum number of events per span. Default value is unlimited."
msgstr "1スパンあたりの最大イベント数。デフォルト値は無制限。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:114 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:198
msgid "Maximum number of links per span. Default value is ``1000``."
msgstr "スパンあたりの最大リンク数。デフォルト値は``1000`` 。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:115 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:114 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:199 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:59 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:61 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:53
msgid "``OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT``"
msgstr "``OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:117 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:200
msgid "Maximum length of strings for attribute values. Values larger than the limit are truncated. Default value is ``1200``. Empty values are treated as infinity."
msgstr "属性値の文字列の最大長。制限値より大きな値は切り捨てられる。デフォルト値は``1200`` 。空の値は無限大として扱われる。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:118
msgid "``SPLUNK_REDIS_INCLUDE_COMMAND_ARGS``"
msgstr "``SPLUNK_REDIS_INCLUDE_COMMAND_ARGS``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:120
msgid "Whether to include the full Redis query in ``db.statement`` span attributes when using the Redis instrumentation. Default value is ``false``."
msgstr "Redisインスツルメンテーションを使用する際に、``db.statement`` span属性にRedisクエリ全体を含めるかどうか。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:136
msgid "``tracing.spanExporterFactory``"
msgstr "``tracing.spanExporterFactory``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:137
msgid "Comma-separated list of trace exporters to use. The default value is ``otlp``. To output to the console, set the variable to ``console``."
msgstr "使用するトレース・エクスポーターのカンマ区切りリスト。デフォルト値は``otlp`` 。コンソールに出力するには、この変数を``console`` に設定する。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:139 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:142
msgid "``metrics.metricReaderFactory``"
msgstr "``metrics.metricReaderFactory``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:140
msgid "Comma-separated list of metrics exporter to use. The default value is ``otlp``. To output to the console, set the variable to ``console``."
msgstr "使用するメトリクス・エクスポーターのカンマ区切りリスト。デフォルト値は``otlp`` 。コンソールに出力するには、この変数を``console`` に設定する。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:141
msgid "``OTEL_EXPORTER_OTLP_METRICS_PROTOCOL``"
msgstr "``OTEL_EXPORTER_OTLP_METRICS_PROTOCOL``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:143
msgid "Procotol for exporting metrics. Accepted values are ``grpc`` and ``http/protobuf``. The default value is ``grpc``."
msgstr "メトリクスをエクスポートするためのProcotol。使用可能な値は``grpc`` と``http/protobuf`` 。デフォルト値は``grpc`` 。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:145 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:140 ../../gdi/opentelemetry/components/databricks-receiver.rst:91
msgid "``endpoint``"
msgstr "``endpoint``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:151
msgid "Jaeger exporter"
msgstr "イエーガー輸出業者"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:153
msgid "To use the Jaeger exporter, add the ``@opentelemetry/exporter-jaeger`` package as in the following example:"
msgstr "イェーガー・エクスポーターを使うには、以下の例のように``@opentelemetry/exporter-jaeger`` パッケージを追加する："

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:171
msgid "To send data directly to Splunk Observability Cloud, see :ref:`export-directly-to-olly-cloud-nodejs`."
msgstr "Splunk Observability Cloud に直接データを送信するには、:ref:`export-directly-to-olly-cloud-nodejs` を参照してください。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:187
msgid "``tracing.propagators``"
msgstr "``tracing.propagators``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:188 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:96 ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:96
msgid "Comma-separated list of propagators you want to use. The default value is ``tracecontext,baggage``. You can find the list of supported propagators in the OpenTelemetry documentation."
msgstr "使用したいプロパゲータのカンマ区切りリスト。デフォルト値は``tracecontext,baggage`` 。サポートされているプロパゲータのリストはOpenTelemetryのドキュメントにあります。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:190
msgid "For backward compatibility with the SignalFx Tracing Library for Node.js, use the b3multi trace propagator:"
msgstr "SignalFx Tracing Library for Node.jsとの後方互換性のために、b3multiトレースプロパゲータを使用してください："

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:205
msgid "Node.js settings for AlwaysOn Profiling"
msgstr "AlwaysOn プロファイリングの Node.js 設定"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:207
msgid "The following settings control the AlwaysOn Profiling feature for the Node.js agent:"
msgstr "以下の設定は、Node.js エージェントの AlwaysOn プロファイリング機能を制御します："

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:217
msgid "``profilingEnabled``"
msgstr "``profilingEnabled``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:220
msgid "``profiling.memoryProfilingEnabled``"
msgstr "``profiling.memoryProfilingEnabled``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:221
msgid "Activates memory profiling for AlwaysOn Profiling. The default value is ``false``."
msgstr "AlwaysOn Profiling のメモリプロファイリングを有効にします。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:223
msgid "``profiling.endpoint``"
msgstr "``profiling.endpoint``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:224
msgid "The collector endpoint for profiler logs. The default value is ``localhost:4317``."
msgstr "プロファイラ・ログのコレクタ・エンドポイント。デフォルト値は``localhost:4317`` 。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:226
msgid "``profiling.callstackInterval``"
msgstr "``profiling.callstackInterval``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:227
msgid "Frequency with which call stacks are sampled, in milliseconds. The default value is 1000 milliseconds."
msgstr "コールスタックをサンプリングする頻度（ミリ秒単位）。デフォルト値は1000ミリ秒。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:229
msgid "To configure AlwaysOn Profiling programmatically, pass the arguments to the ``start`` function, as in the following example:"
msgstr "プログラムで AlwaysOn プロファイリングを設定するには、次の例のように``start`` 関数に引数を渡します："

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:246 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:95
msgid "Metrics configuration"
msgstr "メトリクスの設定"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:248
msgid "The following settings activate runtime metrics collection:"
msgstr "以下の設定は、ランタイム・メトリクスの収集を有効にします："

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:257
msgid "Activated by calling ``start``."
msgstr "``start`` 。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:258
msgid "Activates metrics collection. The default value is ``false``. For more information on Node metrics, see :ref:`nodejs-otel-metrics`."
msgstr "メトリクスの収集をアクティブにします。デフォルト値は``false`` 。ノード・メトリクスの詳細については、:ref:`nodejs-otel-metrics` を参照してください。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:260 ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:263
msgid "``metrics.endpoint``"
msgstr "``metrics.endpoint``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:261
msgid "The metrics endpoint. Takes precedence over ``OTEL_EXPORTER_OTLP_METRICS_ENDPOINT``. When ``SPLUNK_REALM`` is used, the default value is ``https://ingest.<realm>.signalfx.com/v2/datapoint/otlp``."
msgstr "メトリクスのエンドポイント。``OTEL_EXPORTER_OTLP_METRICS_ENDPOINT`` よりも優先される。``SPLUNK_REALM`` を使用した場合、デフォルト値は``https://ingest.<realm>.signalfx.com/v2/datapoint/otlp`` となる。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:264
msgid "The metrics endpoint. Takes precedence over the value set in ``OTEL_EXPORTER_OTLP_ENDPOINT``. The default value is ``http://localhost:4317``. When ``SPLUNK_REALM`` is used, the default value is ``https://ingest.<realm>.signalfx.com/v2/datapoint/otlp``."
msgstr "メトリクスのエンドポイント。``OTEL_EXPORTER_OTLP_ENDPOINT`` で設定された値よりも優先される。デフォルト値は``http://localhost:4317`` 。``SPLUNK_REALM`` を使用した場合、デフォルト値は``https://ingest.<realm>.signalfx.com/v2/datapoint/otlp`` となる。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:266
msgid "``metrics.exportIntervalMillis``"
msgstr "``metrics.exportIntervalMillis``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:267
msgid "The interval, in milliseconds, of metrics collection and exporting. The default value is ``30000``."
msgstr "メトリクスの収集とエクスポートの間隔をミリ秒単位で指定します。デフォルト値は``30000`` 。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:268
msgid "``SPLUNK_RUNTIME_METRICS_ENABLED``"
msgstr "``SPLUNK_RUNTIME_METRICS_ENABLED``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:269
msgid "``metrics.runtimeMetricsEnabled``"
msgstr "``metrics.runtimeMetricsEnabled``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:270
msgid "Activates the collection and export of runtime metrics. The default value is ``true``. Runtime metrics are only sent if the ``SPLUNK_METRICS_ENABLED`` environment variable is set to ``true`` or if memory profiling is activated. For more information, see :ref:`nodejs-otel-runtime-metrics`."
msgstr "ランタイム・メトリクスの収集とエクスポートを有効にします。デフォルト値は``true`` 。ランタイム・メトリクスは、``SPLUNK_METRICS_ENABLED`` 環境変数が``true`` に設定されているか、メモリ・プロファイリングが有効になっている場合にのみ送信されます。詳細は:ref:`nodejs-otel-runtime-metrics` を参照。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:271
msgid "``SPLUNK_RUNTIME_METRICS_COLLECTION_INTERVAL``"
msgstr "``SPLUNK_RUNTIME_METRICS_COLLECTION_INTERVAL``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:272
msgid "``metrics.runtimeMetricsCollectionIntervalMillis``"
msgstr "``metrics.runtimeMetricsCollectionIntervalMillis``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:273
msgid "The interval, in milliseconds, during which garbage collection and event loop statistics are collected. After collection, the values become available to the metric exporter. The default value is ``5000``."
msgstr "ガベージコレクションとイベントループ統計が収集される間隔（ミリ秒単位）。収集後、値はメトリック・エクスポーターが利用できるようになる。デフォルト値は``5000`` 。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:274
msgid "``SPLUNK_DEBUG_METRICS_ENABLED``"
msgstr "``SPLUNK_DEBUG_METRICS_ENABLED``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:275
msgid "``metrics.debugMetricsEnabled``"
msgstr "``metrics.debugMetricsEnabled``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:276
msgid "Activates the collection and export of internal debug metrics for troubleshooting. The default value is ``false``. Debug metrics are only sent if the ``SPLUNK_METRICS_ENABLED`` environment variable is set to ``true``. For more information, see :ref:`nodejs-otel-debug-metrics`."
msgstr "トラブルシューティング用の内部デバッグ・メトリクスの収集とエクスポートを有効にします。デフォルト値は``false`` 。デバッグ・メトリクスは、環境変数``SPLUNK_METRICS_ENABLED`` が``true`` に設定されている場合にのみ送信されます。詳細は:ref:`nodejs-otel-debug-metrics` を参照。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:277 ../../gdi/opentelemetry/deployments/deployments-chef.rst:72 ../../gdi/opentelemetry/deployments/deployments-chef.rst:75 ../../gdi/opentelemetry/deployments/deployments-chef.rst:78 ../../gdi/opentelemetry/deployments/deployments-chef.rst:191 ../../gdi/opentelemetry/deployments/deployments-chef.rst:194 ../../gdi/opentelemetry/deployments/deployments-chef.rst:197 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:55 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:58 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:61
#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:88 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:135 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:141 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:144 ../../gdi/opentelemetry/deployments/deployments-salt.rst:64 ../../gdi/opentelemetry/deployments/deployments-salt.rst:67 ../../gdi/opentelemetry/deployments/deployments-salt.rst:70 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:43 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:46 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:49
#: ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:76
msgid "None"
msgstr "なし"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:278
msgid "``metrics.resourceFactory``"
msgstr "``metrics.resourceFactory``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:279
msgid "Callback that lets you filter the default resource or provide a custom one. The function takes one argument of type ``Resource``, which contains the service name, environment, host, and process attributes by default."
msgstr "デフォルトのリソースをフィルタリングしたり、カスタムのリソースを提供したりするコールバック。この関数は、``Resource`` 型の引数を1つ取り、デフォルトでサービス名、環境、ホスト、プロセス属性を含む。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:281
msgid "To pass settings as arguments, use the ``start()`` function."
msgstr "引数として設定を渡すには、``start()`` 関数を使用します。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:284
msgid "Configuring an existing metrics client to send custom metrics"
msgstr "既存のメトリクス・クライアントを設定してカスタム・メトリクスを送信する"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:286
msgid "You can use an existing SignalFx client for sending custom metrics instead of creating and configuring a new one."
msgstr "カスタムメトリクスの送信には、新しいクライアントを作成して設定する代わりに、既存のSignalFxクライアントを使用できます。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:288
msgid "To configure an existing client, pass the following data to the ``start()`` function:"
msgstr "既存のクライアントを設定するには、``start()`` 関数に以下のデータを渡します："

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:290
msgid "``signalfx``: A JavaScript object with optional ``client`` and ``dimensions`` fields. The ``dimensions`` object adds a predefined dimension for each data point. The format for ``dimensions`` is ``{key: value, ...}``."
msgstr "``signalfx``:オプションで``client`` と``dimensions`` フィールドを持つ JavaScript オブジェクト。``dimensions`` オブジェクトは、各データポイントに定義済みの次元を追加します。``dimensions`` のフォーマットは``{key: value, ...}`` 。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:292
msgid "The following is a list of dimensions added by default:"
msgstr "以下は、デフォルトで追加される寸法のリストである："

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:294
msgid "``service``: See ``serviceName`` in :ref:`trace-configuration-nodejs`."
msgstr "``service``::ref:`trace-configuration-nodejs` の``serviceName`` を参照。"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:295
msgid "``metric_source``: ``splunk-otel-js``"
msgstr "``metric_source``: ``splunk-otel-js``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:296
msgid "``node_version``: ``process.versions.node``, for example ``16.10.0``"
msgstr "``node_version``:``process.versions.node``例えば ``16.10.0``"

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:303
msgid "To connect Real User Monitoring (RUM) requests from mobile and web applications with server trace data, activate Splunk trace response headers by setting the following environment variable:"
msgstr "モバイルおよび Web アプリケーションからの Real User Monitoring (RUM) リクエストをサーバーのトレースデータに接続するには、以下の環境変数を設定して Splunk のトレースレスポンスヘッダーを有効にします："

#: ../../gdi/get-data-in/application/nodejs/configuration/advanced-nodejs-otel-configuration.rst:315
msgid "When you set this environment variable, your application instrumentation adds the following response headers to HTTP responses."
msgstr "この環境変数を設定すると、アプリケーション・インスツルメンテーションはHTTPレスポンスに以下のレスポンス・ヘッダを追加する。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:-1
msgid "The Splunk Distribution of OpenTelemetry JS collects the following metrics."
msgstr "Splunk Distribution of OpenTelemetry JS は以下のメトリクスを収集します。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:5
msgid "Metrics and attributes collected by the Splunk Distribution of OTel JS"
msgstr "OTel JS の Splunk ディストリビューションによって収集されたメトリクスと属性"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:10
msgid "The Splunk Distribution of OpenTelemetry JS collects runtime and custom metrics. To activate runtime metrics collection, see :ref:`metrics-configuration-nodejs`."
msgstr "OpenTelemetry JS の Splunk ディストリビューションは、ランタイムとカスタムメトリクスを収集します。実行時のメトリクス収集を有効にするには、:ref:`metrics-configuration-nodejs` を参照してください。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:12
msgid "To learn about the different metric types, see :ref:`metric-types`."
msgstr "メトリックの種類については、:ref:`metric-types` をご覧ください。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:19
msgid "To collect Node.js metrics, see :ref:`metrics-configuration-nodejs`."
msgstr "Node.jsのメトリクスを収集するには、:ref:`metrics-configuration-nodejs` を参照してください。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:26
msgid "To activate runtime metrics, see :ref:`metrics-configuration-nodejs`. The following example shows how to activate runtime metrics by passing the ``runtimeMetricsEnabled`` argument to the ``start`` method:"
msgstr "ランタイム・メトリクスを有効にするには、:ref:`metrics-configuration-nodejs` を参照してください。次の例では、``start`` メソッドに``runtimeMetricsEnabled`` 引数を渡して、ランタイム・メトリクスを有効にする方法を示します："

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:49 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:136
msgid "``process.runtime.nodejs.memory.heap.total``"
msgstr "``process.runtime.nodejs.memory.heap.total``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:51
msgid "Heap total, in bytes. Extracted from ``process.memoryUsage().heapTotal``."
msgstr "バイト単位のヒープ合計。``process.memoryUsage().heapTotal`` より抜粋。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:52 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:138
msgid "``process.runtime.nodejs.memory.heap.used``"
msgstr "``process.runtime.nodejs.memory.heap.used``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:54
msgid "Heap used, in bytes. Extracted from ``process.memoryUsage().heapUsed``."
msgstr "使用ヒープ、バイト単位。``process.memoryUsage().heapUsed`` より抜粋。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:55 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:140
msgid "``process.runtime.nodejs.memory.rss``"
msgstr "``process.runtime.nodejs.memory.rss``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:57
msgid "Resident set size, in bytes. Extracted from ``process.memoryUsage().rss``."
msgstr "レジデントセットのサイズ（バイト単位）。``process.memoryUsage().rss`` より抜粋。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:58 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:142
msgid "``process.runtime.nodejs.memory.gc.size``"
msgstr "``process.runtime.nodejs.memory.gc.size``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:60
msgid "Total collected by the garbage collector, in bytes."
msgstr "ガベージコレクタが収集した合計（バイト単位）。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:61 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:144
msgid "``process.runtime.nodejs.memory.gc.pause``"
msgstr "``process.runtime.nodejs.memory.gc.pause``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:63
msgid "Time spent by the garbage collector, in nanoseconds."
msgstr "ガベージコレクタが費やした時間（ナノ秒単位）。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:64 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:146
msgid "``process.runtime.nodejs.memory.gc.count``"
msgstr "``process.runtime.nodejs.memory.gc.count``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:66
msgid "Number of garbage collector executions."
msgstr "ガベージコレクタの実行回数。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:67 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:148
msgid "``process.runtime.nodejs.event_loop.lag.max``"
msgstr "``process.runtime.nodejs.event_loop.lag.max``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:69
msgid "Maximum event loop lag within the collection interval, in nanoseconds."
msgstr "収集間隔内の最大イベントループラグ（ナノ秒単位）。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:70 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:150
msgid "``process.runtime.nodejs.event_loop.lag.min``"
msgstr "``process.runtime.nodejs.event_loop.lag.min``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:72
msgid "Minimum event loop lag within the collection interval, in nanoseconds."
msgstr "収集間隔内の最小イベントループラグ（ナノ秒単位）。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:77
msgid "Migrate from SignalFx metrics for NodeJS"
msgstr "NodeJS用SignalFxメトリクスからの移行"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:79
msgid "To migrate your custom metric instrumentation from the SignalFx client library, follow these steps:"
msgstr "SignalFxクライアントライブラリからカスタムメトリック計測を移行するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:81
msgid "Replace the ``getSignalFxClient`` dependency with ``opentelemetry/api-metrics``, and initialize metrics collection using ``start()``. For example:"
msgstr "``getSignalFxClient`` 依存関係を``opentelemetry/api-metrics`` で置き換え、``start()`` を使用してメトリクス・コレクションを初期化する。例えば、こうだ："

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:89 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:112
msgid "Becomes the following:"
msgstr "以下のようになる："

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:102
msgid "Replace calls to ``getSignalFxClient()`` with metrics instances. For example:"
msgstr "``getSignalFxClient()`` への呼び出しをメトリクス・インスタンスに置き換える。例えば、こうだ："

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:125
msgid "Previous metric names"
msgstr "以前のメトリック名"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:127
msgid "With the release of version 2.0 of the Splunk Distribution of OpenTelemetry JS, metric names changed to conform with OpenTelemetry conventions. The following table shows the equivalence between the current and previous metric names."
msgstr "Splunk Distribution of OpenTelemetry JS のバージョン 2.0 のリリースに伴い、メトリック名が OpenTelemetry の規約に合わせて変更されました。以下の表は、現在のメトリック名と以前のメトリック名の等価性を示している。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:134
msgid "Current metric name"
msgstr "現在のメトリック名"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:135
msgid "Previous metric name"
msgstr "旧メトリック名"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:137
msgid "``nodejs.memory.heap.total``"
msgstr "``nodejs.memory.heap.total``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:139
msgid "``nodejs.memory.heap.used``"
msgstr "``nodejs.memory.heap.used``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:141
msgid "``nodejs.memory.rss``"
msgstr "``nodejs.memory.rss``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:143
msgid "``nodejs.memory.gc.size``"
msgstr "``nodejs.memory.gc.size``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:145
msgid "``nodejs.memory.gc.pause``"
msgstr "``nodejs.memory.gc.pause``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:147
msgid "``nodejs.memory.gc.count``"
msgstr "``nodejs.memory.gc.count``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:149
msgid "``nodejs.event_loop.lag.max``"
msgstr "``nodejs.event_loop.lag.max``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:151
msgid "``nodejs.event_loop.lag.min``"
msgstr "``nodejs.event_loop.lag.min``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:156
msgid "Debug metrics"
msgstr "デバッグ・メトリクス"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:158
msgid "To activate debug metrics, see :ref:`metrics-configuration-nodejs`. Debug metrics are used for internal debugging purposes and to provide data to Splunk customer support."
msgstr "デバッグ・メトリクスを有効にするには、:ref:`metrics-configuration-nodejs` を参照してください。デバッグメトリクスは、社内のデバッグ目的および Splunk カスタマーサポートへのデータ提供に使用されます。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:160
msgid "The following example shows how to activate runtime metrics by passing the ``debugMetricsEnabled`` argument to the ``start`` method:"
msgstr "次の例では、``start`` メソッドに``debugMetricsEnabled`` 引数を渡して、ランタイム・メトリクスを有効にする方法を示します："

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:183
msgid "``splunk.profiler.cpu.start.duration``"
msgstr "``splunk.profiler.cpu.start.duration``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:184 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:187 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:190 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:193 ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:196 ../../gdi/opentelemetry/components/prometheus-receiver.rst:141 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:91
msgid "Histogram"
msgstr "ヒストグラム"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:185
msgid "Time to start a new V8 profiling run."
msgstr "新しいV8プロファイリングを始める時だ。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:186
msgid "``splunk.profiler.cpu.stop.duration``"
msgstr "``splunk.profiler.cpu.stop.duration``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:188
msgid "Time to stop a new V8 profiling run."
msgstr "新しいV8プロファイリングの実行を止める時だ。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:189
msgid "``splunk.profiler.cpu.process.duration``"
msgstr "``splunk.profiler.cpu.process.duration``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:191
msgid "Time spent matching span activations with stack traces and building the final output."
msgstr "スパンアクティベーションをスタックトレースと照合し、最終出力を構築するのにかかった時間。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:192
msgid "``splunk.profiler.heap.collect.duration``"
msgstr "``splunk.profiler.heap.collect.duration``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:194
msgid "Time to provide an alloxation profile through the V8 profiler."
msgstr "V8プロファイラーでアロックスプロファイルを提供する時間。"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:195
msgid "``splunk.profiler.heap.process.duration``"
msgstr "``splunk.profiler.heap.process.duration``"

#: ../../gdi/get-data-in/application/nodejs/configuration/nodejs-otel-metrics.rst:197
msgid "Time to traverse the call graph and build stack traces from the allocation samples."
msgstr "コールグラフを走査し、アロケーションサンプルからスタックトレースを構築する時間。"

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:10
msgid "Instrument a Node.js application"
msgstr "Node.jsアプリケーションをインストルメントする"

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:10
msgid "Runtime and custom metrics"
msgstr "ランタイムとカスタム・メトリクス"

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:10
msgid "Configure the Node.js agent"
msgstr "Node.jsエージェントの設定"

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:10
msgid "Troubleshoot the Node.js agent"
msgstr "Node.jsエージェントのトラブルシューティング"

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:10
msgid "About Splunk OTel JS"
msgstr "Splunk OTel JSについて"

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:10
msgid "Migrate from the SFx Tracing Library"
msgstr "SFXトレースライブラリからの移行"

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:-1
msgid "Instrument a Node.js application to export metrics and spans to Splunk Observability Cloud."
msgstr "メトリクスとスパンを Splunk Observability Cloud にエクスポートするために、Node.js アプリケーションをインストルメントする。"

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:5
msgid "Instrument Node.js applications for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud で Node.js アプリケーションを計測する"

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:23
msgid "The Splunk Distribution of OpenTelemetry JS provides a Node.js SDK that automatically adds APM instrumentation to your Node application. The instrumentation captures traces, runtime metrics, and CPU and memory profiles and sends them to Splunk Observability Cloud."
msgstr "OpenTelemetry JS の Splunk ディストリビューションは Node.js SDK を提供し、Node アプリケーションに APM 測定機能を自動的に追加します。インスツルメンテーションは、トレース、ランタイムメトリクス、CPU とメモリのプロファイルをキャプチャし、Splunk Observability Cloud に送信します。"

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:25
msgid "To instrument your Node.js application, follow these steps:"
msgstr "Node.jsアプリケーションを計測するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:27
msgid "Check compatibility and requirements. See :ref:`nodes-requirements`."
msgstr "互換性と必要条件を確認してください。:ref:`nodes-requirements` を参照。"

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:28
msgid "Instrument your Node application. See :ref:`instrument-nodejs-applications`."
msgstr "Nodeアプリケーションを計測します。:ref:`instrument-nodejs-applications` を参照。"

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:29
msgid "Configure your instrumentation. See :ref:`configure-nodejs-instrumentation`."
msgstr "計測器を設定する。:ref:`configure-nodejs-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:31
msgid "For more information, see :ref:`splunk-nodejs-otel-dist`."
msgstr "詳細は:ref:`splunk-nodejs-otel-dist` を参照。"

#: ../../gdi/get-data-in/application/nodejs/get-started.rst:33
msgid "The SignalFx Tracing Library for NodeJS is deprecated and will reach End of Support on June 8th, 2023. To migrate to the Splunk Distribution of OpenTelemetry JS, see :ref:`migrate-signalfx-nodejs-agent-to-otel`."
msgstr "SignalFx Tracing Library for NodeJSは、2023年6月8日にサポート終了となります。OpenTelemetry JS を Splunk ディストリビューションに移行するには、:ref:`migrate-signalfx-nodejs-agent-to-otel` を参照してください。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:-1 ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:10
msgid "You can configure Node logging libraries to include tracing attributes provided automatically by the Splunk Distribution of OpenTelemetry JS. Use the trace metadata to correlate traces with log events and explore Node application logs in Splunk Observability Cloud."
msgstr "OpenTelemetry JS の Splunk ディストリビューションが自動的に提供するトレース属性を含めるように、Node ロギングライブラリを設定できます。トレースメタデータを使用してトレースとログイベントを関連付け、Splunk Observability Cloud で Node アプリケーションログを探索します。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:5
msgid "Connect Node.js trace data with logs for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud で Node.js のトレースデータをログに接続する"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:15
msgid "Supported logging libraries"
msgstr "サポートされているロギング・ライブラリ"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:17
msgid "The Splunk Distribution of OpenTelemetry JS automatically supports the following logging libraries:"
msgstr "OpenTelemetry JS の Splunk ディストリビューションは、以下のロギングライブラリを自動的にサポートします："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:19
msgid "Bunyan"
msgstr "バニヤン"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:20
msgid "Pino"
msgstr "ピノ"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:21
msgid "Winston"
msgstr "ウィンストン"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:26
msgid "Activate logs injection"
msgstr "ログ注入を有効にする"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:28
msgid "Log injection is already activated for the supported libraries. To inject trace data into formatted logs, see the documentation for each library."
msgstr "サポートされているライブラリでは、ログ注入はすでに有効になっています。フォーマットされたログにトレースデータを注入するには、各ライブラリのドキュメントを参照してください。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:35
msgid "The Splunk Distribution of OpenTelemetry JS provides the following attributes for logging libraries:"
msgstr "OpenTelemetry JS の Splunk ディストリビューションは、ロギングライブラリに以下の属性を提供します："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:37
msgid "Trace information: ``trace_id``, ``span_id``, and ``trace_flags``"
msgstr "トレース情報：``trace_id`` ``span_id`` ``trace_flags``"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:38
msgid "Resource attributes: ``service.name``, ``service.version``, and ``deployment.environment`` as ``service.environment``"
msgstr "リソース属性：``service.name``として、``service.version`` 、``deployment.environment`` 。 ``service.environment``"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/connect-traces-logs.rst:40
msgid "The format of each log message depends on the library. The following is a sample log message formatted using Pino:"
msgstr "各ログメッセージのフォーマットはライブラリによって異なる。以下は、Pinoを使用してフォーマットされたログメッセージのサンプルです："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:-1
msgid "The Splunk Distribution of OpenTelemetry Node.js can automatically instrument your Node application or service. Follow these steps to get started."
msgstr "OpenTelemetry Node.js の Splunk ディストリビューションは、Node アプリケーションやサービスを自動的に計測することができます。以下の手順で始めましょう。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:5
msgid "Instrument a Node application for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用のノードアプリケーションをインストルメントする"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:10
msgid "The Splunk Distribution of OpenTelemetry JS can automatically instrument your Node application and many of the popular node.js libraries your application uses."
msgstr "OpenTelemetry JS の Splunk ディストリビューションは、Node アプリケーションと、アプリケーションが使用する一般的な node.js ライブラリの多くを自動的に計測できます。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:17
msgid "To generate all the basic installation commands for your environment and application, use the Node.js guided setup. To access the Node.js guided setup, follow these steps:"
msgstr "あなたの環境とアプリケーションのためのすべての基本的なインストール・コマンドを生成するには、Node.jsガイド付きセットアップを使用します。Node.jsのガイド付きセットアップにアクセスするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:20
msgid "Open the :new-page:`Node.js guided setup <https://login.signalfx.com/#/gdi/scripted/nodejs-tracing/step-1?category=product-apm&gdiState=%7B\"integrationId\":\"nodejs-tracing\"%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`Node.js guided setup<https://login.signalfx.com/#/gdi/scripted/nodejs-tracing/step-1?category=product-apm&gdiState=%7B\"integrationId\":\"nodejs-tracing\"%7D>` を開く。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:30
msgid "Select the :guilabel:`Node.js` tile to open the Node.js guided setup."
msgstr ":guilabel:`Node.js` タイルを選択し、Node.js ガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:34
msgid "Install the Splunk Distribution of OpenTelemetry JS manually"
msgstr "OpenTelemetry JS の Splunk ディストリビューションを手動でインストールする"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:36
msgid "Follow these instructions to install the Splunk Distribution of OpenTelemetry JS:"
msgstr "以下の手順に従って、OpenTelemetry JS の Splunk ディストリビューションをインストールしてください："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:39
msgid ":ref:`install-enable-nodejs-agent`"
msgstr ":ref:`install-enable-nodejs-agent`"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:39
msgid ":ref:`enable_profiling_nodejs`"
msgstr ":ref:`enable_profiling_nodejs`"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:40
msgid ":ref:`enable_automatic_metric_collection_nodejs`"
msgstr ":ref:`enable_automatic_metric_collection_nodejs`"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:41
msgid ":ref:`configure-nodejs-instrumentation`"
msgstr ":ref:`configure-nodejs-instrumentation`"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:42
msgid ":ref:`nodejs-programmatically-instrument`"
msgstr ":ref:`nodejs-programmatically-instrument`"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:47
msgid "Install and activate the Node.js instrumentation"
msgstr "Node.jsインスツルメンテーションをインストールし、有効化する。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:49
msgid "To instrument your Node.js application with the Splunk Distribution of OpenTelemetry JS, follow these steps:"
msgstr "OpenTelemetry JS の Splunk ディストリビューションで Node.js アプリケーションを計測するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:51
msgid "Install the ``@splunk/otel`` package:"
msgstr "``@splunk/otel`` パッケージをインストールする："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:57
msgid "To add custom instrumentations, see :ref:`add-custom-instrumentation`."
msgstr "カスタム計装を追加するには、:ref:`add-custom-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:95
msgid "(Optional) Activate metric collection. See :ref:`enable_automatic_metric_collection_nodejs`."
msgstr "(オプション) メトリック収集を有効にします。:ref:`enable_automatic_metric_collection_nodejs` を参照。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:97
msgid "To run your Node application, enter the following command:"
msgstr "Nodeアプリケーションを実行するには、以下のコマンドを入力する："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:103
msgid "If no data appears in APM, see :ref:`common-nodejs-troubleshooting`."
msgstr "APM にデータが表示されない場合は、:ref:`common-nodejs-troubleshooting` を参照してください。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:105
msgid "To instrument applications that use Webpack, see :ref:`nodejs-webpack-issues`."
msgstr "Webpack を使用するアプリケーションを計測するには、:ref:`nodejs-webpack-issues` を参照してください。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:112
msgid "To activate AlwaysOn Profiling, set the ``SPLUNK_PROFILER_ENABLED`` environment variable to ``true``."
msgstr "AlwaysOn Profiling を有効にするには、環境変数``SPLUNK_PROFILER_ENABLED`` を``true`` に設定する。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:114
msgid "To activate memory profiling, set the ``SPLUNK_PROFILER_MEMORY_ENABLED`` environment variable to ``true`` after activating AlwaysOn Profiling."
msgstr "メモリプロファイリングを有効にするには、AlwaysOn プロファイリングを有効にした後、``SPLUNK_PROFILER_MEMORY_ENABLED`` 環境変数を``true`` に設定します。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:116
msgid "The following example shows how to activate the profiler from your application code:"
msgstr "次の例は、アプリケーション・コードからプロファイラを起動する方法を示しています："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:128
msgid "See :ref:`get-data-in-profiling` for more information. For more settings, see :ref:`profiling-configuration-nodejs`."
msgstr "詳しくは:ref:`get-data-in-profiling` 。詳細な設定については、:ref:`profiling-configuration-nodejs` を参照してください。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:135
msgid "To activate automatic runtime metric collection, activate the metrics feature using the ``SPLUNK_METRICS_ENABLED`` environment variable. See :ref:`metrics-configuration-nodejs` for more information."
msgstr "実行時の自動メトリクス収集を有効にするには、``SPLUNK_METRICS_ENABLED`` 環境変数を使用してメトリクス機能を有効にします。詳しくは:ref:`metrics-configuration-nodejs` 。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:150
msgid "Configure the Node.js distribution"
msgstr "Node.jsディストリビューションの設定"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:152
msgid "In most cases, the only configuration setting you need to enter is the service name. For advanced configuration, like changing trace propagation formats or configuring server trace data, see :ref:`advanced-nodejs-otel-configuration`."
msgstr "ほとんどの場合、入力が必要なコンフィギュレーション設定はサービス名だけです。トレース伝搬フォーマットの変更やサーバー・トレース・データの設定などの高度な設定については、:ref:`advanced-nodejs-otel-configuration` を参照してください。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:157
msgid "Instrument your application programmatically"
msgstr "プログラムでアプリケーションを計測する"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:159
msgid "To have even finer control over the tracing pipeline, instrument your Node application programmatically."
msgstr "トレース・パイプラインをさらに細かく制御するには、Nodeアプリケーションをプログラムで計測します。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:161
msgid "To instrument your application programmatically, add the following lines at the beginning of your entry point script, before any instrumentation function is called:"
msgstr "プログラムでアプリケーションをインスツルメンテーションするには、エントリー・ポイント・スクリプトの先頭に、インスツルメンテーション関数が呼び出される前に、以下の行を追加します："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:174
msgid "The ``start()`` function accepts :ref:`configuration settings <advanced-nodejs-otel-configuration>` as arguments. For example, you can use it to activate runtime metrics and memory profiling:"
msgstr "``start()`` 、引数として:ref:`configuration settings <advanced-nodejs-otel-configuration>` 。例えば、ランタイム・メトリクスやメモリ・プロファイリングを有効にするために使用できます："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:184
msgid "After you add the ``start()`` function to your entry point script, run your application by passing the instrumented entry point script using the ``-r`` flag:"
msgstr "エントリー・ポイント・スクリプトに``start()`` 関数を追加したら、``-r`` フラグを使用してインスツルメンテーションされたエントリー・ポイント・スクリプトを渡してアプリケーションを実行します："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:193
msgid "Add custom instrumentation"
msgstr "カスタム計装の追加"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:195
msgid "To add custom or third-party instrumentations that implement the OpenTelemetry JS Instrumentation interface, pass them to ``startTracing()`` using the following code:"
msgstr "OpenTelemetry JS Instrumentation インターフェースを実装したカスタムまたはサードパーティのインスツルメンテーションを追加するには、以下のコードを使って``startTracing()`` に渡します："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:212
msgid "For a list of supported instrumentations, see :new-page:`https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/metapackages/auto-instrumentations-node#supported-instrumentations <https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/metapackages/auto-instrumentations-node#supported-instrumentations>` on GitHub."
msgstr "サポートされているインストルメンテーションのリストは、GitHubの:new-page:`https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/metapackages/auto-instrumentations-node#supported-instrumentations<https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/metapackages/auto-instrumentations-node#supported-instrumentations>` を参照。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:214
msgid "For an example of entry point script, see the :new-page:`sample tracer.js file <https://github.com/signalfx/splunk-otel-js/blob/main/examples/express/tracer.js>` on GitHub."
msgstr "エントリー・ポイント・スクリプトの例については、GitHubの:new-page:`sample tracer.jsファイル<https://github.com/signalfx/splunk-otel-js/blob/main/examples/express/tracer.js>` 。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:219
msgid "Deploy the Node.js distribution in Kubernetes"
msgstr "KubernetesにNode.jsディストリビューションをデプロイする"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:221
msgid "To deploy the Splunk Distribution of OpenTelemetry JS in Kubernetes, configure the Kubernetes Downward API to expose environment variables to Kubernetes resources."
msgstr "OpenTelemetry JS の Splunk ディストリビューションを Kubernetes にデプロイするには、Kubernetes リソースに環境変数を公開するように Kubernetes Downward API を設定します。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/instrument-nodejs-application.rst:223
msgid "The following example shows how to update a deployment to expose environment variables by adding the OpenTelemetry configuration under the ``.spec.template.spec.containers.env`` section:"
msgstr "次の例は、``.spec.template.spec.containers.env`` セクションの下に OpenTelemetry 設定を追加して、環境変数を公開するようにデプロイメントを更新する方法を示しています："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:-1
msgid "Manually instrument your Node application when you need to add custom attributes to spans or want to manually generate spans and metrics. Keep reading to learn how to manually instrument your Node application for Splunk Observability Cloud."
msgstr "スパンにカスタム属性を追加する必要がある場合や、スパンやメトリクスを手動で生成したい場合に、Node アプリケーションを手動で計測します。Splunk Observability Cloud 用に Node アプリケーションを手動で計測する方法について説明します。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:5
msgid "Manually instrument Node applications for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud のノードアプリケーションを手動で計測する"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:10
msgid "Instrumenting applications automatically using the agent of the Splunk Distribution of OpenTelemetry Node covers most needs. Manually instrumenting your application is only necessary when, for example, you need to add custom attributes to spans or need to manually generate spans."
msgstr "OpenTelemetry Node の Splunk ディストリビューションのエージェントを使用して、アプリケーションを自動的にインスツルメンテーションすることで、ほとんどのニーズに対応できます。アプリケーションを手動でインスツルメンテーションする必要があるのは、例えば、スパンにカスタム属性を追加する必要がある場合や、スパンを手動で生成する必要がある場合のみです。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:12
msgid "For instructions on how to manually instrument Java applications, see the Manual instrumentation docs in the OpenTelemetry official documentation at :new-page:`https://opentelemetry.io/docs/instrumentation/js/manual/ <https://opentelemetry.io/docs/instrumentation/js/manual/>`."
msgstr "Java アプリケーションを手動で計測する方法については、OpenTelemetry 公式ドキュメントの Manual instrumentation docs:new-page:`https://opentelemetry.io/docs/instrumentation/js/manual/<https://opentelemetry.io/docs/instrumentation/js/manual/>` を参照してください。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:14
msgid "Manual OTel instrumentation is fully compatible with Splunk automatic Node.js instrumentation and is fully supported by Splunk."
msgstr "手動 OTel 計測は Splunk 自動 Node.js 計測と完全に互換性があり、Splunk によって完全にサポートされています。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:19
msgid "Custom metrics"
msgstr "カスタムメトリクス"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:21
msgid "To send custom application metrics to Splunk Observability Cloud, add ``@opentelemetry/api-metrics`` to your dependencies:"
msgstr "カスタムアプリケーションメトリクスを Splunk Observability Cloud に送信するには、依存関係に``@opentelemetry/api-metrics`` を追加します："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:52
msgid "Set up custom metric readers and exporters"
msgstr "カスタムメトリックリーダーとエクスポーターの設定"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:54
msgid "You can provide custom exporters and readers using the ``metricReaderFactory`` setting."
msgstr "``metricReaderFactory`` 、カスタム・エクスポーターとカスタム・リーダーを提供することができます。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:56
msgid "Usage of ``metricReaderFactory`` invalidates the ``exportInterval`` and ``endpoint`` settings."
msgstr "``metricReaderFactory`` の使用は、``exportInterval`` と``endpoint`` の設定を無効にする。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:58
msgid "The following example shows how to provide a custom exporter:"
msgstr "次の例は、カスタム・エクスポーターを提供する方法を示しています："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:83
msgid "Select the type of aggregation temporality"
msgstr "集計時間のタイプを選択する"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:85
msgid "Aggregation temporality describes how data is reported over time."
msgstr "集計の時間性は、データがどのように時系列で報告されるかを表す。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:87
msgid "You can define two different aggregation temporalities:"
msgstr "2つの異なる集計時間を定義できる："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:89
msgid "``AggregationTemporality.CUMULATIVE``: Cumulative metrics, such as counters and histograms, are continuously summed together from a given starting point, which in this case is set with the call to ``start``. This is the default temporality."
msgstr "``AggregationTemporality.CUMULATIVE``:``start``カウンタやヒストグラムのような累積メトリクスは、与えられた開始点から連続的に合計される。これがデフォルトの時間性である。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:90
msgid "``AggregationTemporality.DELTA``: Metrics are summed together relative to the last metric collection step, which is set by the export interval."
msgstr "``AggregationTemporality.DELTA``:メトリクスは、エクスポート間隔によって設定される最後のメトリクス収集ステップからの相対値で合計されます。"

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:92
msgid "To configure aggregation temporality in your custom metrics, use ``AggregationTemporality`` as in the example:"
msgstr "カスタム・メトリクスで集計の一時性を構成するには、例のように``AggregationTemporality`` を使用します："

#: ../../gdi/get-data-in/application/nodejs/instrumentation/manual-instrumentation.rst:115
msgid "For more information on aggregation temporality, see :new-page:`https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/data-model.md#sums <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/data-model.md#sums>` on GitHub."
msgstr "集約の時間性についての詳細は、GitHubの:new-page:`https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/data-model.md#sums<https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/data-model.md#sums>` を参照のこと。"

#: ../../gdi/get-data-in/application/nodejs/nodejs-otel-requirements.rst:-1
msgid "This is what you need to instrument any Node.js application using the Splunk Distribution of OpenTelemetry JS."
msgstr "これは、OpenTelemetry JS の Splunk ディストリビューションを使用して Node.js アプリケーションを計測するために必要なものです。"

#: ../../gdi/get-data-in/application/nodejs/nodejs-otel-requirements.rst:5
msgid "Splunk OTel JS compatibility and requirements"
msgstr "Splunk OTel JS の互換性と要件"

#: ../../gdi/get-data-in/application/nodejs/nodejs-otel-requirements.rst:10
msgid "Meet these requirements to instrument Node.js applications for Splunk Observability Cloud using the Splunk Distribution of OpenTelemetry JS."
msgstr "OpenTelemetry JS の Splunk ディストリビューションを使用して Splunk Observability Cloud の Node.js アプリケーションを計測するには、以下の要件を満たしてください。"

#: ../../gdi/get-data-in/application/nodejs/nodejs-otel-requirements.rst:15
msgid "Ensure you have supported Node.js and library versions"
msgstr "サポートされているNode.jsとライブラリのバージョンを確認してください。"

#: ../../gdi/get-data-in/application/nodejs/nodejs-otel-requirements.rst:17
msgid "The Splunk Distribution of OpenTelemetry JS requires Node.js 14 and higher. To activate AlwaysOn Profiling, you need Node.js 16 or higher."
msgstr "OpenTelemetry JS の Splunk ディストリビューションには、Node.js 14 以上が必要です。AlwaysOn Profiling を有効にするには、Node.js 16 以上が必要です。"

#: ../../gdi/get-data-in/application/nodejs/nodejs-otel-requirements.rst:19
msgid "The Splunk Distribution of OpenTelemetry JS instruments numerous libraries and packages. For a complete list, see :new-page:`the plugins folder <https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/plugins/node>` in the OpenTelemetry upstream repository on GitHub. To use any additional instrumentation, install it using npm before running your application."
msgstr "OpenTelemetry JS の Splunk ディストリビューションは、多数のライブラリとパッケージを実装しています。完全なリストについては、GitHub の OpenTelemetry アップストリーム・リポジトリの:new-page:`the plugins folder<https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/plugins/node>` を参照してください。追加のインスツルメンテーションを使用するには、アプリケーションを実行する前にnpmを使用してインストールしてください。"

#: ../../gdi/get-data-in/application/nodejs/nodejs-otel-requirements.rst:21
msgid "If you're using a Node.js version lower than 14, use the :new-page:`SignalFx Tracing Library for Node.js <https://github.com/signalfx/signalfx-nodejs-tracing>`."
msgstr "Node.jsのバージョンが14より低い場合は、:new-page:`SignalFx Tracing Library for Node.js<https://github.com/signalfx/signalfx-nodejs-tracing>` を使用してください。"

#: ../../gdi/get-data-in/application/nodejs/nodejs-otel-requirements.rst:28
msgid "The Splunk Distribution of OpenTelemetry JS exports application traces and spans to the Splunk Distribution of OpenTelemetry Collector, which also collects system metric data and logs, including profiling data."
msgstr "Splunk Distribution of OpenTelemetry JS は、アプリケーションのトレースとスパンを Splunk Distribution of OpenTelemetry Collector にエクスポートし、プロファイリングデータを含むシステムメトリックデータとログも収集します。"

#: ../../gdi/get-data-in/application/nodejs/nodejs-otel-requirements.rst:32
msgid "Splunk Distribution of the OpenTelemetry Collector for Linux. See :ref:`otel-install-linux`."
msgstr "Linux 用 OpenTelemetry Collector の Splunk ディストリビューション。:ref:`otel-install-linux` を参照。"

#: ../../gdi/get-data-in/application/nodejs/nodejs-otel-requirements.rst:33
msgid "Splunk Distribution of the OpenTelemetry Collector for Windows. See :ref:`otel-install-windows`."
msgstr "OpenTelemetry Collector for Windows の Splunk ディストリビューション。:ref:`otel-install-windows` を参照。"

#: ../../gdi/get-data-in/application/nodejs/nodejs-otel-requirements.rst:34
msgid "Splunk Distribution of the OpenTelemetry Collector for Kubernetes. See :ref:`otel-install-k8s`."
msgstr "Kubernetes 用 OpenTelemetry Collector の Splunk ディストリビューション。:ref:`otel-install-k8s` を参照。"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:-1 ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:10
msgid "The Splunk Distribution of OpenTelemetry JS is a wrapper for the OpenTelemetry Instrumentation for Node.js, an open source Node framework that automatically instruments Node applications and libraries so that they capture telemetry data at runtime."
msgstr "OpenTelemetry JS の Splunk ディストリビューションは OpenTelemetry Instrumentation for Node.js のラッパーです。これは、オープンソースの Node フレームワークで、Node アプリケーションとライブラリを自動的に計測し、実行時に遠隔計測データを取り込むようにします。"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:5
msgid "About the Splunk Distribution of OpenTelemetry JS"
msgstr "OpenTelemetry JS の Splunk ディストリビューションについて"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:12
msgid "You can automatically instrument any application written in Node.js 14 and higher. See :ref:`nodejs-otel-requirements`. To instrument applications that use Node versions lower than 14, use the :new-page:`SignalFx Tracing Library for Node.js <https://github.com/signalfx/signalfx-nodejs-tracing>`."
msgstr "Node.js 14以降で書かれたアプリケーションを自動的に計測することができます。:ref:`nodejs-otel-requirements` を参照。Nodeのバージョンが14より低いアプリケーションを計測するには、:new-page:`SignalFx Tracing Library for Node.js<https://github.com/signalfx/signalfx-nodejs-tracing>` を使用してください。"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:15
msgid "Features of the Splunk Distribution of OpenTelemetry JS"
msgstr "OpenTelemetry JS の Splunk ディストリビューションの特徴"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:17
msgid "In addition to the features of the OpenTelemetry Instrumentation for Node.js, like bundled exporters and propagators, the Splunk Distribution of OpenTelemetry JS provides additional custom features:"
msgstr "OpenTelemetry Instrumentation for Node.js のバンドルされたエクスポータやプロパゲータのような機能に加えて、OpenTelemetry JS の Splunk ディストリビューションは、追加のカスタム機能を提供します："

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:20
msgid "Collection of runtime metrics. See :ref:`nodejs-otel-metrics`."
msgstr "ランタイム・メトリクスのコレクション。:ref:`nodejs-otel-metrics` を参照。"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:21
msgid "Instrumentation for HTTP server frameworks that returns server trace information in HTTP responses. See :ref:`server-trace-information-nodejs`."
msgstr "HTTPサーバーフレームワーク用のインストルメンテーションで、HTTPレスポンスにサーバートレース情報を返す。:ref:`server-trace-information-nodejs` を参照。"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:22
msgid "Automatic injection of trace metadata into application logs. See :ref:`correlate-traces-with-logs-nodejs`."
msgstr "アプリケーションログへのトレースメタデータの自動注入。:ref:`correlate-traces-with-logs-nodejs` を参照。"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:24
msgid "The Splunk Distribution of OpenTelemetry JS is supported by Splunk and is updated frequently, bringing bug fixes and new features to you before they are integrated in the upstream OTel repositories."
msgstr "OpenTelemetry JSのSplunkディストリビューションはSplunkによってサポートされ、頻繁に更新され、バグフィックスや新機能がアップストリームのOTelリポジトリに統合される前に提供されます。"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:26
msgid "Use the Splunk Distribution of OpenTelemetry JS instead of the upstream OpenTelemetry JavaScript Client. Splunk supports only upstream OTel components as part of the Splunk Distribution of OpenTelemetry JS."
msgstr "アップストリームの OpenTelemetry JavaScript Client ではなく、OpenTelemetry JS の Splunk ディストリビューションを使用してください。Splunk は、OpenTelemetry JS の Splunk ディストリビューションの一部として、アップストリームの OTel コンポーネントのみをサポートしています。"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:29
msgid "Defaults of the Splunk Distribution of OpenTelemetry JS"
msgstr "OpenTelemetry JS の Splunk ディストリビューションのデフォルト"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:31
msgid "The Splunk Distribution of OpenTelemetry JS has the following default settings for context propagation, exporters, and trace settings:"
msgstr "OpenTelemetry JS の Splunk ディストリビューションでは、コンテキストプロパゲーション、エクスポーター、トレース設定のデフォルト設定が以下のようになっています："

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:33
msgid "W3C tracecontext and W3C baggage context propagation is activated by default. You can also configure B3 propagation. See :ref:`trace-propagation-configuration-nodejs`."
msgstr "W3C tracecontext と W3C baggage context propagation はデフォルトで有効になっています。また、B3プロパゲーションを設定することもできる。:ref:`trace-propagation-configuration-nodejs` を参照。"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:34
msgid "The OTLP exporter is configured by default to send spans to the local :ref:`Splunk Distribution of OpenTelemetry Collector <otel-intro>` over gRPC."
msgstr "OTLPエクスポータは、デフォルトで、gRPCを介してローカル:ref:`Splunk Distribution of OpenTelemetry Collector <otel-intro>` にスパンを送信するように設定されています。"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:35
msgid "Unlimited defaults for trace configuration to support full-fidelity tracing. See :ref:`trace-configuration-nodejs`."
msgstr "完全忠実なトレースをサポートするため、トレース設定のデフォルトは無制限。:ref:`trace-configuration-nodejs` を参照。"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:42
msgid "For more information on versioning of the Splunk Distribution of OpenTelemetry JS, see :new-page:`the release guidelines <https://github.com/signalfx/splunk-otel-js/blob/main/RELEASING.md>` on GitHub."
msgstr "OpenTelemetry JS の Splunk ディストリビューションのバージョン管理については、GitHub の:new-page:`リリースガイドライン<https://github.com/signalfx/splunk-otel-js/blob/main/RELEASING.md>` を参照してください。"

#: ../../gdi/get-data-in/application/nodejs/splunk-nodejs-otel-distribution.rst:47
msgid "The Splunk Distribution of OpenTelemetry JS is open-source software. You can contribute to its improvement by creating pull requests in GitHub. To learn more, see the :new-page:`contributing guidelines <https://github.com/signalfx/splunk-otel-js/blob/main/CONTRIBUTING.md>` on GitHub."
msgstr "OpenTelemetry JS の Splunk ディストリビューションはオープンソースソフトウェアです。GitHubでプルリクエストを作成することで、改良に貢献することができる。詳しくは、GitHub の:new-page:`貢献ガイドライン<https://github.com/signalfx/splunk-otel-js/blob/main/CONTRIBUTING.md>` をご覧ください。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:-1
msgid "If your instrumented Node.js application is not sending data to Splunk Observability Cloud, or data is missing, follow these steps to identify and resolve the issue."
msgstr "インスツルメンテーションされた Node.js アプリケーションが Splunk Observability Cloud にデータを送信しない、またはデータが欠落している場合は、以下の手順に従って問題を特定し、解決してください。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:5
msgid "Troubleshoot Node.js instrumentation for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud の Node.js インストルメンテーションのトラブルシューティング"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:10
msgid "When you instrument a Node.js application using the Splunk Distribution of OpenTelemetry JS and you don't see your data in Splunk Observability Cloud, follow these troubleshooting steps."
msgstr "Splunk Distribution of OpenTelemetry JS を使用して Node.js アプリケーションを計測しているときに、Splunk Observability Cloud にデータが表示されない場合は、以下のトラブルシューティング手順に従ってください。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:15
msgid "Steps for troubleshooting Node.js OpenTelemetry issues"
msgstr "Node.jsのOpenTelemetry問題のトラブルシューティングの手順"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:17
msgid "The following steps can help you troubleshoot Node.js instrumentation issues:"
msgstr "以下の手順は、Node.js インストルメンテーションの問題のトラブルシューティングに役立ちます："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:19
msgid ":ref:`enable-nodejs-debug-logging`"
msgstr ":ref:`enable-nodejs-debug-logging`"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:20
msgid ":ref:`enable-debug-metrics`"
msgstr ":ref:`enable-debug-metrics`"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:25
msgid "Activate diagnostic logging"
msgstr "診断ロギングの有効化"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:27
msgid "Diagnostic logs can help you troubleshoot instrumentation issues."
msgstr "診断ログは、計装の問題のトラブルシューティングに役立ちます。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:29
msgid "To output instrumentation logs to the console, set the ``OTEL_LOG_LEVEL`` environment variable to ``debug``."
msgstr "計測ログをコンソールに出力するには、環境変数``OTEL_LOG_LEVEL`` を``debug`` に設定する。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:31
msgid "You can also activate debug logging programmatically by setting the ``logLevel`` argument. For example:"
msgstr "また、``logLevel`` 引数を設定することで、プログラムでデバッグ・ロギングを有効にすることもできる。例えば、こうだ："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:49
msgid "To deactivate debug logging in your code, call ``setLogger()`` as in the following example:"
msgstr "コードでデバッグ・ロギングを無効にするには、次の例のように``setLogger()`` ："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:61
msgid "Activate debug metrics"
msgstr "デバッグ・メトリクスを有効にする"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:63
msgid "You can activate internal debug metrics by setting the ``SPLUNK_DEBUG_METRICS_ENABLED`` environment variable to true. For more information, see :ref:`nodejs-otel-debug-metrics`."
msgstr "``SPLUNK_DEBUG_METRICS_ENABLED`` 環境変数を true に設定することで、内部デバッグ・メトリクスを有効にできます。詳細は:ref:`nodejs-otel-debug-metrics` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:70
msgid "By default, the :ref:`Splunk Distribution of OpenTelemetry JS <splunk-nodejs-otel-dist>` uses the OTLP exporter. Any issue affecting the export of traces produces an error in the debug logs."
msgstr "デフォルトでは、:ref:`Splunk Distribution of OpenTelemetry JS <splunk-nodejs-otel-dist>` 、OTLPエクスポーターを使用します。トレースのエクスポートに影響する問題はすべて、デバッグログにエラーを生成します。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:75
msgid "The following error in the logs means that the instrumentation can't send trace data to the OpenTelemetry Collector:"
msgstr "ログの以下のエラーは、計測器がトレースデータを OpenTelemetry Collector に送信できないことを意味します："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:82
msgid "To troubleshoot the lack of connectivity between the OTLP exporter and the OTel Collector, make sure that the following is true:"
msgstr "OTLPエクスポータとOTelコレクタ間の接続不足のトラブルシューティングを行うには、以下のことを確認してください："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:84 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:62 ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:86 ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:46
msgid "Make sure that ``OTEL_EXPORTER_OTLP_ENDPOINT`` points to the correct OpenTelemetry Collector instance host."
msgstr "``OTEL_EXPORTER_OTLP_ENDPOINT`` が正しい OpenTelemetry Collector インスタンスホストを指していることを確認する。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:85 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:63
msgid "Check that your collector instance is configured and running. See :ref:`otel-splunk-collector-tshoot`."
msgstr "コレクタインスタンスが構成され、稼動していることを確認します。:ref:`otel-splunk-collector-tshoot` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:86 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:64 ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:48
msgid "Check that the OTLP receiver is activated in the OTel Collector and plugged into the traces pipeline."
msgstr "OTLP レシーバが OTel Collector でアクティブになり、トレースパイプラインに接続されていることを確認します。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:103
msgid "Webpack compatibility issues"
msgstr "Webpackの互換性の問題"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:105
msgid "The Splunk Distribution of OpenTelemetry JS can't instrument modules bundled using Webpack, as OpenTelemetry can instrument libraries only by intercepting its ``require`` calls."
msgstr "OpenTelemetry JS の Splunk ディストリビューションでは、Webpack を使ってバンドルされたモジュールを計測することができません。OpenTelemetry はライブラリの``require`` 呼び出しを傍受することでしかライブラリを計測できないからです。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:107
msgid "To instrument Node applications that use bundled modules, use the Webpack ``externals`` configuration option so that the ``require`` calls are visible to OpenTelemetry."
msgstr "バンドルされたモジュールを使用する Node アプリケーションを計測するには、``require`` の呼び出しが OpenTelemetry から見えるように、 Webpack``externals`` 設定オプションを使用します。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:109
msgid "The following example shows how to edit the ``webpack.config.js`` file to instrument the ``express`` framework:"
msgstr "以下の例では、``express`` フレームワークをインストゥルメント化するために、``webpack.config.js`` ファイルを編集する方法を示している："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:124
msgid "When added to ``externals``, the ``express`` framework loads through the ``require`` method and OpenTelemetry can instrument it. Make sure that the package is in the ``node_modules`` folder so that the ``require`` method can find it:"
msgstr "``externals`` に追加されると、``express`` フレームワークが``require`` メソッドを通してロードされ、OpenTelemetry はそれを計測することができます。``require`` メソッドが見つけられるように、パッケージが``node_modules`` フォルダーにあることを確認してください："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:131
msgid "You don't need to add Node.js core modules such as ``http``, ``net``, and ``dns`` to the ``externals`` list."
msgstr "``http`` 、``net`` 、``dns`` などの Node.js コア・モジュールを``externals`` リストに追加する必要はありません。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:136
msgid "Troubleshoot AlwaysOn Profiling for Node.js"
msgstr "Node.js の AlwaysOn プロファイリングのトラブルシューティング"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:143
msgid "Make sure that you've activated the profiler by setting the ``SPLUNK_PROFILER_ENABLED`` environment variable to ``true``. See :ref:`profiling-configuration-nodejs`."
msgstr "環境変数``SPLUNK_PROFILER_ENABLED`` を``true`` に設定して、プロファイラーが有効になっていることを確認してください。:ref:`profiling-configuration-nodejs` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:146
msgid "Unsupported Node version"
msgstr "サポートされていないノードのバージョン"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:148
msgid "To use AlwaysOn Profiling, upgrade to Node version 16 or higher."
msgstr "AlwaysOn プロファイリングを使用するには、Node のバージョンを 16 以降にアップグレードしてください。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:157
msgid "Check the configuration of the Node agent, especially ``SPLUNK_PROFILER_LOGS_ENDPOINT``."
msgstr "ノードエージェントのコンフィギュレーション、特に``SPLUNK_PROFILER_LOGS_ENDPOINT`` をチェックする。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:159
msgid "Make sure that you're running the Splunk Distribution of OpenTelemetry Collector and that the version is 0.34 or higher. Other collector distributions might not be able to route the log data that contains profiling data."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを実行していることと、バージョンが 0.34 以上であることを確認してください。他のコレクタディストリビューションでは、プロファイリングデータを含むログデータをルーティングできないことがあります。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/common-nodejs-troubleshooting.rst:160
msgid "A custom configuration might override settings that let the collector handle profiling data. Make sure to configure an ``otlp`` receiver and a ``splunk_hec`` exporter with correct token and endpoint fields. The ``profiling`` pipeline must use the OTLP receiver and Splunk HEC exporter you've configured."
msgstr "カスタム構成は、コレクタにプロファイリングデータを処理させる設定をオーバーライドする可能性があります。``otlp`` レシーバーと``splunk_hec`` エクスポーターを、正しいトークンとエンドポイントフィールドで設定してください。``profiling`` パイプラインは、設定した OTLP レシーバーと Splunk HEC エクスポーターを使用する必要があります。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:-1
msgid "The Splunk Distribution of OpenTelemetry JS replaces the deprecated SignalFx Tracing Library for Node.js. To migrate to the Splunk Distribution of OTel JS, follow these instructions."
msgstr "OpenTelemetry JS の Splunk ディストリビューションは、Node.js 用の非推奨 SignalFx Tracing Library を置き換えるものです。OTel JS の Splunk ディストリビューションに移行するには、以下の手順に従ってください。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:5
msgid "Migrate from the SignalFx Tracing Library for NodeJS"
msgstr "SignalFx Tracing Library for NodeJSからの移行"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:10
msgid "The SignalFx Tracing Library for NodeJS is deprecated and will reach End of Support on June 8th, 2023. Replace it with the Splunk Distribution of OpenTelemetry JS. Read the following instructions to learn how to migrate."
msgstr "SignalFx Tracing Library for NodeJSは、2023年6月8日にサポート終了となります。OpenTelemetry JS の Splunk ディストリビューションに置き換えてください。移行方法については、以下の説明をお読みください。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:12
msgid "The Splunk Distribution of OpenTelemetry JS is based on the OpenTelemetry Instrumentation for Node.js, an open-source project that uses the OpenTelemetry API."
msgstr "OpenTelemetry JS の Splunk ディストリビューションは、OpenTelemetry API を使用するオープンソースプロジェクトである OpenTelemetry Instrumentation for Node.js をベースにしています。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:19
msgid "The Splunk Distribution of OpenTelemetry JS requires Node.js 14 and higher. See :ref:`nodejs-otel-requirements`."
msgstr "OpenTelemetry JS の Splunk ディストリビューションには、Node.js 14 以上が必要です。:ref:`nodejs-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:21
msgid "See :ref:`considerations-nodejs-migration` for considerations about migrating from the SignalFx Tracing Library for Node.js to the Splunk Distribution of OpenTelemetry JS."
msgstr "SignalFx Tracing Library for Node.js から Splunk Distribution of OpenTelemetry JS への移行に関する考慮事項については、:ref:`considerations-nodejs-migration` を参照してください。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:26
msgid "Migrate to the Splunk Distribution of OpenTelemetry JS"
msgstr "OpenTelemetry JS の Splunk ディストリビューションへの移行"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:28
msgid "To migrate from the SignalFx Tracing Library for Node.js to the Splunk Distribution of OpenTelemetry JS, follow these steps:"
msgstr "SignalFx Tracing Library for Node.js から Splunk Distribution of OpenTelemetry JS に移行するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:30
msgid "Remove the tracing library packages. See :ref:`remove-nodejs-tracing-library`."
msgstr "トレースライブラリパッケージを削除する。:ref:`remove-nodejs-tracing-library` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:31
msgid "Deploy the Splunk Distribution of OpenTelemetry JS. See :ref:`install-splunk-otel-nodejs-distribution`."
msgstr "OpenTelemetry JS の Splunk ディストリビューションをデプロイします。:ref:`install-splunk-otel-nodejs-distribution` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:32
msgid "Install the instrumentation packages for your library or framework, as instructed in :ref:`install-enable-nodejs-agent`. For a list of supported instrumentation packages, see :new-page:`Default Instrumentation Packages <https://github.com/signalfx/splunk-otel-js#default-instrumentation-packages>` on GitHub."
msgstr ":ref:`install-enable-nodejs-agent` の指示に従って、ライブラリまたはフレームワークのインスツルメンテーション・パッケージをインストールしてください。サポートされているインストルメンテーション・パッケージのリストについては、GitHubの:new-page:`Default Instrumentation Packages<https://github.com/signalfx/splunk-otel-js#default-instrumentation-packages>` を参照のこと。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:33
msgid "Update the instrumentation entry point. See :ref:`update-instrumentation-entry-point-nodejs`"
msgstr "インストルメンテーション・エントリーポイントを更新する。参照 :ref:`update-instrumentation-entry-point-nodejs`"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:34
msgid "Migrate your existing configuration. See :ref:`migrate-settings-nodejs-agent`."
msgstr "既存の構成を移行する。:ref:`migrate-settings-nodejs-agent` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:41
msgid "Remove the SignalFx Tracing Library for Node.js"
msgstr "Node.js用SignalFxトレーシング・ライブラリの削除"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:43 ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:42 ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:41
msgid "Follow these steps to remove the tracing library and its dependencies:"
msgstr "以下の手順に従って、トレース・ライブラリとその依存関係を削除してください："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:45 ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:44
msgid "Uninstall ``signalfx-tracing``:"
msgstr "アンインストール``signalfx-tracing`` ："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:51
msgid "If npm didn't remove every dependency for ``signalfx-tracing``, remove them manually."
msgstr "npmが``signalfx-tracing`` 、すべての依存関係を削除していない場合は、手動で削除してください。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:53
msgid "Remove any additional instrumentation packages related to the SignalFx Tracing Library for Node.js."
msgstr "SignalFx Tracing Library for Node.jsに関連する追加のインスツルメンテーション・パッケージを削除します。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:58
msgid "Deploy the Splunk Distribution of OpenTelemetry JS"
msgstr "OpenTelemetry JS の Splunk ディストリビューションをデプロイする"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:60
msgid "To install the Splunk Distribution of OpenTelemetry JS, see :ref:`instrument-nodejs-applications`."
msgstr "OpenTelemetry JS の Splunk ディストリビューションをインストールするには、:ref:`instrument-nodejs-applications` を参照してください。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:65
msgid "Update the instrumentation entry point"
msgstr "インストルメンテーション・エントリーポイントの更新"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:67
msgid "In your code, the instrumentation entry point for SignalFx tracing is similar to:"
msgstr "あなたのコードでは、SignalFxトレースのためのインスツルメンテーション・エントリーポイントは、以下のようなものです："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:75
msgid "You have two options to update your instrumentation entry point:"
msgstr "インストルメンテーション・エントリーポイントを更新するには、2つのオプションがある："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:77
msgid "Update the entry point to use ``@splunk/otel`` and ``start()``, as shown in the following code:"
msgstr "次のコードに示すように、``@splunk/otel`` と``start()`` を使用するようにエントリーポイントを更新する："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:87
msgid "Automatically update your application to use Splunk Distribution of OpenTelemetry JS instead of SignalFx Tracing Library. To do so, run Node using the following command:"
msgstr "SignalFx Tracing Library の代わりに Splunk Distribution of OpenTelemetry JS を使用するように、アプリケーションを自動的に更新します。そのためには、以下のコマンドを使ってNodeを実行する："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:93
msgid "To export traces directly to Splunk Observability Cloud, see :ref:`export-directly-to-olly-cloud-nodejs`."
msgstr "トレースを Splunk Observability Cloud に直接エクスポートするには、:ref:`export-directly-to-olly-cloud-nodejs` を参照してください。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:98
msgid "Migrate settings"
msgstr "設定の移行"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:100
msgid "To migrate settings from the SignalFx tracing library to the Splunk Distribution of OpenTelemetry JS, rename the following environment variables:"
msgstr "SignalFx トレースライブラリから Splunk Distribution of OpenTelemetry JS に設定を移行するには、以下の環境変数の名前を変更します："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:112
msgid "See :ref:`migrate-endpoint-url-nodejs`."
msgstr ":ref:`migrate-endpoint-url-nodejs` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:115
msgid "``SIGNALFX_TRACING_DEBUG``"
msgstr "``SIGNALFX_TRACING_DEBUG``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:116
msgid "See :ref:`migrate-logging-nodejs`."
msgstr ":ref:`migrate-logging-nodejs` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:118
msgid "``OTEL_RESOURCE_ATTRIBUTES`` as comma-separated key-value pairs. See :ref:`advanced-nodejs-otel-configuration`."
msgstr "``OTEL_RESOURCE_ATTRIBUTES`` をカンマ区切りのキーと値のペアで指定します。:ref:`advanced-nodejs-otel-configuration` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:119 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:121
msgid "``SIGNALFX_LOGS_INJECTION``"
msgstr "``SIGNALFX_LOGS_INJECTION``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:120
msgid "Not applicable. Log injection is always activated. See :ref:`correlate-traces-with-logs-nodejs`."
msgstr "該当なし。ログ注入は常に有効である。:ref:`correlate-traces-with-logs-nodejs` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:121
msgid "``SIGNALFX_LOGS_INJECTION_TAGS``"
msgstr "``SIGNALFX_LOGS_INJECTION_TAGS``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:122
msgid "Not applicable See :ref:`correlate-traces-with-logs-nodejs`."
msgstr "該当なし:ref:`correlate-traces-with-logs-nodejs` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:123
msgid "``SIGNALFX_ENABLED_PLUGINS``"
msgstr "``SIGNALFX_ENABLED_PLUGINS``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:124 ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:156
msgid "Not applicable. To install instrumentation packages, see :ref:`add-custom-instrumentation`."
msgstr "該当なし。計装パッケージをインストールするには、:ref:`add-custom-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:130
msgid "If you're using the passing configuration options as arguments to ``start()``, update them as well:"
msgstr "``start()`` の引数として渡す設定オプションを使用している場合は、それらも更新してください："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:135
msgid "SignalFx property"
msgstr "SignalFx プロパティ"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:136
msgid "OpenTelemetry property"
msgstr "OpenTelemetry プロパティ"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:139
msgid "``url``"
msgstr "``url``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:143
msgid "``enabled``"
msgstr "``enabled``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:144
msgid "No equivalent. Use the ``OTEL_TRACE_ENABLED`` environment variable."
msgstr "同等のものはない。環境変数``OTEL_TRACE_ENABLED`` 。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:145 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:85 ../../gdi/opentelemetry/components/logging-exporter.rst:71
msgid "``debug``"
msgstr "``debug``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:146
msgid "No equivalent. See :ref:`migrate-logging-nodejs`."
msgstr "同等のものはない。:ref:`migrate-logging-nodejs` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:147 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:50 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:49 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:94 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:50
msgid "``tags``"
msgstr "``tags``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:148
msgid "``tracerConfig.resource``"
msgstr "``tracerConfig.resource``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:149
msgid "``logInjection``"
msgstr "``logInjection``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:150
msgid "``logInjectionEnabled``"
msgstr "``logInjectionEnabled``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:151
msgid "``logInjectionTags``"
msgstr "``logInjectionTags``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:152
msgid "No equivalent. Use ``tracerConfig.resource`` instead."
msgstr "同等のものはない。代わりに``tracerConfig.resource`` 。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:153
msgid "``flushInterval``"
msgstr "``flushInterval``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:154
msgid "No equivalent. Set the ``OTEL_BSP_SCHEDULE_DELAY`` environment variable instead."
msgstr "同等のものはない。代わりに``OTEL_BSP_SCHEDULE_DELAY`` 環境変数を設定する。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:155
msgid "``plugins``"
msgstr "``plugins``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:157
msgid "``recordedValueMaxLength``"
msgstr "``recordedValueMaxLength``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:158
msgid "Not applicable. Set the ``OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT`` environment variable instead."
msgstr "該当なし。代わりに``OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT`` 環境変数を設定する。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:159
msgid "``enableServerTiming``"
msgstr "``enableServerTiming``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:160
msgid "``serverTimingEnabled``"
msgstr "``serverTimingEnabled``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:165
msgid "Migrate debug log settings"
msgstr "デバッグ・ログ設定の移行"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:167
msgid "To configure the debug logs produced by the instrumentation, the closest equivalent to ``SIGNALFX_TRACING_DEBUG`` is ``OTEL_LOG_LEVEL``. See :ref:`enable-nodejs-debug-logging`."
msgstr "インスツルメンテーションによって生成されるデバッグ・ログを設定するには、``SIGNALFX_TRACING_DEBUG`` に最も近いものが``OTEL_LOG_LEVEL`` です。:ref:`enable-nodejs-debug-logging` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:172
msgid "Update the endpoint URL"
msgstr "エンドポイントURLの更新"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:174
msgid "By default, the Splunk Distribution of OpenTelemetry JS uses the OTLP exporter instead of Jaeger."
msgstr "デフォルトでは、OpenTelemetry JS の Splunk ディストリビューションは Jaeger の代わりに OTLP エクスポーターを使用します。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:176
msgid "If the receiver endpoint you were using with the SignalFx Tracing Library supports OTLP, set ``OTEL_EXPORTER_OTLP_ENDPOINT`` instead of ``SIGNALFX_ENDPOINT_URL``. The OTel Collector supports OTLP."
msgstr "SignalFx Tracing Library で使用していた受信機エンドポイントが OTLP をサポートしている場合は、``SIGNALFX_ENDPOINT_URL`` の代わりに``OTEL_EXPORTER_OTLP_ENDPOINT`` を設定してください。OTel コレクターは OTLP をサポートしています。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:179
msgid "Migrate custom metric collection"
msgstr "カスタムメトリックコレクションの移行"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:181
msgid "To migrate your custom metric instrumentation from the SignalFx client library, see :ref:`nodejs-otel-metrics-migration`.`"
msgstr "SignalFxクライアント・ライブラリからカスタム計測器を移行するには、:ref:`nodejs-otel-metrics-migration` を参照してください。`"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:184
msgid "Migrate instrumentations"
msgstr "計装の移行"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:186
msgid "All libraries supported by the SignalFx Tracing Library for NodeJS are support by the Splunk Distribution of OpenTelemetry JS. The only exceptions are listed in :ref:`considerations-nodejs-migration`."
msgstr "SignalFx Tracing Library for NodeJS でサポートされているすべてのライブラリは、Splunk Distribution of OpenTelemetry JS でサポートされています。唯一の例外は:ref:`considerations-nodejs-migration` に記載されている。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:188
msgid "To find equivalent instrumentation, search for each instrumentation in the OpenTelemetry registry. If an instrumentation is not bundled, you can use custom instrumentation packages. See :ref:`add-custom-instrumentation`."
msgstr "同等のインスツルメンテーションを見つけるには、OpenTelemetry レジストリで各インスツルメンテーションを検索します。インスツルメンテーションがバンドルされていない場合は、カスタムインスツルメンテーションパッケージを使用することができます。:ref:`add-custom-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:193
msgid "Considerations for migrating to Splunk Distribution of OpenTelemetry JS"
msgstr "OpenTelemetry JSのSplunkディストリビューションへの移行の考慮点"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:195
msgid "The following limitations apply when migrating from the SignalFx Tracing Library for Node.js:"
msgstr "SignalFx Tracing Library for Node.jsから移行する場合、以下の制限が適用されます："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:197
msgid "The set of Node.js versions that Splunk Distribution of OpenTelemetry JS supports is different from the set that SignalFx Tracing Library supports. See :ref:``nodejs-otel-requirements``."
msgstr "Splunk Distribution of OpenTelemetry JS がサポートする Node.js バージョンのセットは、SignalFx Tracing Library がサポートするセットとは異なります。:ref:``nodejs-otel-requirements`` を参照のこと。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:198
msgid "The default flush interval, which defines how frequently captured telemetry data is sent to the back end, is now 500 milliseconds instead of 2 seconds, and can't be modified."
msgstr "デフォルトのフラッシュ間隔は、捕捉されたテレメトリーデータがバックエンドに送信される頻度を定義するもので、2秒から500ミリ秒に変更され、変更することはできない。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:202
msgid "Autoinstrumentation is not available for the following libraries:"
msgstr "自動計測は以下のライブラリではご利用いただけません："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:200
msgid "``AdonisJS``"
msgstr "``AdonisJS``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:201
msgid "``amqp10``"
msgstr "``amqp10``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:202
msgid "``mongodb-core``"
msgstr "``mongodb-core``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:203
msgid "``sails``"
msgstr "``sails``"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:206
msgid "Some instrumentations have specific requirements:"
msgstr "一部の計測器には特別な要件がある："

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:205
msgid "``express``, ``koa``, and ``hapi`` instrumentations require active ``http`` or ``https`` instrumentation to produce spans."
msgstr "``express````koa`` 、``hapi`` 、``http`` 、``https`` 。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:206
msgid "``bluebird``, ``q``, and ``when`` are supported through ``AsyncLocalStorageContextManager`` (or ``AsyncHooksContextManager`` when the Node version is lower than 14.8)."
msgstr "``bluebird````q`` 、``when`` は、``AsyncLocalStorageContextManager`` （Nodeのバージョンが14.8より低い場合は``AsyncHooksContextManager`` ）までサポートされています。"

#: ../../gdi/get-data-in/application/nodejs/troubleshooting/migrate-signalfx-nodejs-agent-to-otel.rst:208
msgid "Use the :new-page:`OpenTelemetry Registry <https://opentelemetry.io/registry>` to find autoinstrumentation packages for libraries supported by the Splunk Distribution of OpenTelemetry JS."
msgstr ":new-page:`OpenTelemetry Registry<https://opentelemetry.io/registry>` を使用して、OpenTelemetry JS の Splunk ディストリビューションでサポートされているライブラリの自動計測パッケージを検索します。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:-1
msgid "Configure the Splunk Distribution of OpenTelemetry .NET to suit your instrumentation needs, such as correlating traces with logs and activating custom sampling."
msgstr "OpenTelemetry .NET の Splunk ディストリビューションを、トレースとログの関連付けやカスタムサンプリングの有効化など、計測のニーズに合わせて設定します。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:5
msgid "Configure the Splunk Distribution of OpenTelemetry .NET"
msgstr "OpenTelemetry .NET の Splunk ディストリビューションを設定する"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:10
msgid "You can configure the Splunk Distribution of OpenTelemetry .NET to suit your instrumentation needs. In most cases, modifying the basic configuration is enough to get started. More advanced settings are also available."
msgstr "OpenTelemetry .NET の Splunk ディストリビューションは、インスツルメンテーションのニーズに合わせて設定することができます。たいていの場合、基本的なコンフィギュレーションを変更するだけで始められる。より高度な設定も可能。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:12 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:12 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:29 ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:23 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:13 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:12 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:12
msgid "This is a beta distribution. Use it for evaluation purposes only. Don't use it in production environments. Some features might have restrictions, limited stability, or might change in next versions. Limited support is provided on best-effort basis."
msgstr "これはベータ分布である。評価目的にのみ使用してください。本番環境では使わないこと。一部の機能には制限があったり、安定性に制限があったり、次のバージョンで変更される可能性があります。限られたサポートはベストエフォートで提供される。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:19
msgid "You can change the settings of the Splunk Distribution of OpenTelemetry .NET in the following ways:"
msgstr "OpenTelemetry .NET の Splunk ディストリビューションの設定は、以下の方法で変更できます："

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:21
msgid "For .NET applications, set environment variables. On Windows, set them in the process scope unless you want to activate automatic instrumentation globally for all .NET applications."
msgstr ".NETアプリケーションの場合は、環境変数を設定する。Windowsでは、すべての.NETアプリケーションで自動計測をグローバルに有効にする場合を除き、プロセススコープに設定します。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:23
msgid "For .NET Framework applications running as Windows services, you can add settings in the ``appSettings`` block of the app.config file when supported or set environment variables using the Windows Registry."
msgstr "Windowsサービスとして実行される.NET Frameworkアプリケーションでは、サポートされている場合、app.configファイルの``appSettings`` ブロックで設定を追加するか、Windowsレジストリを使用して環境変数を設定することができます。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:25
msgid "For ASP.NET applications, add settings in the ``appSettings`` block of the web.config file. For example:"
msgstr "ASP.NETアプリケーションの場合は、web.configファイルの``appSettings`` ブロックに設定を追加する。例えば、こうだ："

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:35
msgid "Alternatively, you can set environment variables using any of the following methods:"
msgstr "あるいは、以下のいずれかの方法で環境変数を設定することもできる："

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:37
msgid "Add the ``<environmentVariables>`` element in ``applicationHost.config`` for your application pools."
msgstr "``applicationHost.config`` 、アプリケーション・プール用に``<environmentVariables>`` 要素を追加する。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:38
msgid "Set the environment variables for ``W3SVC`` and ``WAS``."
msgstr "``W3SVC`` と``WAS`` の環境変数を設定する。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:40
msgid "For ASP.NET Core applications, add ``<environmentVariable>`` elements inside the ``<aspNetCore>`` block of your web.config file."
msgstr "ASP.NET Coreアプリケーションの場合は、web.configファイルの``<aspNetCore>`` ブロック内に``<environmentVariable>`` 要素を追加します。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:57
msgid "Activated by default. Adds server trace information to HTTP response headers. For more information, see :ref:`server-trace-information-dotnet-otel`. The default value is ``true``."
msgstr "デフォルトで有効。HTTP レスポンスヘッダにサーバトレース情報を追加する。詳細は:ref:`server-trace-information-dotnet-otel` を参照。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:58 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:72
msgid "``OTEL_DOTNET_AUTO_EXCLUDE_PROCESSES``"
msgstr "``OTEL_DOTNET_AUTO_EXCLUDE_PROCESSES``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:59
msgid "Names of the executable files that the profiler cannot instrument. Supports multiple semicolon-separated values, for example: ``ReservedProcess.exe;powershell.exe``. Can't be set using the web.config or app.config files."
msgstr "プロファイラが計測できない実行ファイル名。セミコロンで区切られた複数の値をサポートする。例えば、``ReservedProcess.exe;powershell.exe``.web.configやapp.configファイルでは設定できない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:60
msgid "``OTEL_DOTNET_AUTO_TRACES_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_TRACES_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:61
msgid "Traces are collected by default. To deactivate trace collection, set the environment variable to ``false``. Data from custom or manual instrumentation is not affected."
msgstr "トレースはデフォルトで収集される。トレース収集を無効にするには、環境変数を``false`` に設定する。カスタムまたは手動の計測器からのデータは影響を受けない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:62
msgid "``OTEL_DOTNET_AUTO_METRICS_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_METRICS_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:63
msgid "Metrics are collected by default. To deactivate metric collection, set the environment variable to ``false``. Data from custom or manual instrumentation is not affected."
msgstr "メトリクスはデフォルトで収集される。メトリック・コレクションを無効にするには、環境変数を``false`` に設定する。カスタムまたは手動の計測器からのデータは影響を受けない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:64
msgid "``OTEL_DOTNET_AUTO_LOGS_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_LOGS_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:65
msgid "Logs are collected by default. To deactivate log collection, set the environment variable to ``false``. Data from custom or manual instrumentation is not affected."
msgstr "ログはデフォルトで収集される。ログ収集を無効にするには、環境変数を``false`` に設定する。カスタムまたは手動の計測器からのデータは影響を受けない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:66
msgid "``OTEL_DOTNET_AUTO_OPENTRACING_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_OPENTRACING_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:67
msgid "Activates the OpenTracing tracer. The default value is ``false``. See :ref:`migrate-signalfx-dotnet-to-dotnet-otel` for more information."
msgstr "OpenTracing トレーサーをアクティブにします。デフォルト値は``false`` 。詳しくは:ref:`migrate-signalfx-dotnet-to-dotnet-otel` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:68
msgid "``OTEL_DOTNET_AUTO_NETFX_REDIRECT_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_NETFX_REDIRECT_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:69
msgid "Activates immediate redirection of the assemblies used by the automatic instrumentation on the .NET Framework. The default values is ``true``. Can't be set using the web.config or app.config files."
msgstr ".NET Frameworkの自動インストルメンテーションで使用されるアセンブリの即時リダイレクトを有効にします。デフォルト値は``true`` です。web.configやapp.configファイルでは設定できない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:70
msgid "``OTEL_DOTNET_AUTO_FLUSH_ON_UNHANDLEDEXCEPTION``"
msgstr "``OTEL_DOTNET_AUTO_FLUSH_ON_UNHANDLEDEXCEPTION``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:71
msgid "Controls whether the telemetry data is flushed when an ``AppDomain.UnhandledException`` event is raised. Set to ``true`` when experiencing missing telemetry at the same time of unhandled exceptions."
msgstr "``AppDomain.UnhandledException`` イベントが発生したときに、テレメトリデータをフラッシュするかどうかを制御します。未処理の例外と同時にテレメトリの欠落が発生した場合は、``true`` に設定する。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:72
msgid "``OTEL_DOTNET_AUTO_RULE_ENGINE_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_RULE_ENGINE_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:73
msgid "Activates RuleEngine. The default values is ``true``. RuleEngine increases the stability of the instrumentation by validating assemblies for unsupported scenarios."
msgstr "RuleEngineを起動する。デフォルト値は``true`` です。RuleEngineは、サポートされていないシナリオのアセンブリを検証することで、インストゥルメンテーションの安定性を高めます。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:74
msgid "``OTEL_DOTNET_AUTO_FAIL_FAST_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_FAIL_FAST_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:75
msgid "Activate to let the process fail when automatic instrumentation can't be executed. This setting is for debugging purposes, don't use it in production environments. The default value is ``false``. Can't be set using the web.config or app.config files."
msgstr "自動インスツルメンテーションが実行できない場合、プロセスを失敗させる。この設定はデバッグ用であり、本番環境では使用しないでください。デフォルト値は``false`` 。web.configやapp.configファイルでは設定できない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:92
msgid "The URL to where traces and metrics are sent. The default value is ``http://localhost:4318``. Setting a value overrides the ``SPLUNK_REALM`` environment variable."
msgstr "トレースとメトリクスの送信先 URL。デフォルト値は``http://localhost:4318`` 。値を設定すると、``SPLUNK_REALM`` 環境変数がオーバーライドされる。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:113
msgid "Comma-separated list of propagators for the tracer. The default value is ``tracecontext,baggage``. Supported values are ``b3multi``, ``b3``, ``tracecontext``, and ``baggage``."
msgstr "カンマで区切られたトレーサーのプロパゲータのリスト。デフォルト値は``tracecontext,baggage`` 。サポートされる値は``b3multi`` 、``b3`` 、``tracecontext`` 、``baggage`` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:130
msgid "Sampler to use. The default value is ``parentbased_always_on``. Supported values are ``always_on``, ``always_off``, ``traceidratio``, ``parentbased_always_on``, ``parentbased_always_off``, and ``parentbased_traceidratio``."
msgstr "使用するサンプラー。デフォルト値は``parentbased_always_on`` 。サポートされる値は、``always_on`` 、``always_off`` 、``traceidratio`` 、``parentbased_always_on`` 、``parentbased_always_off`` 、``parentbased_traceidratio`` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:132
msgid "Semicolon-separated list of rules for the ``rules`` sampler. The default value is ``1.0``."
msgstr "``rules`` サンプラーのルールをセミコロンで区切ったリスト。デフォルト値は``1.0`` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:137
msgid "Resource detectors configuration"
msgstr "リソース検出器の構成"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:139
msgid "You can use resource detectors to retrieve additional attributes for your application's spans."
msgstr "リソース検出器を使用して、アプリケーションのスパンの追加属性を取得できます。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:141
msgid "The following settings control resource detectors:"
msgstr "以下の設定は、リソース検出器を制御する："

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:150
msgid "``OTEL_DOTNET_AUTO_RESOURCE_DETECTOR_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_RESOURCE_DETECTOR_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:151
msgid "Activates or deactivates all resource detectors. The default values is ``true``."
msgstr "すべてのリソース検出器をアクティブまたは非アクティブにする。デフォルト値は``true`` です。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:152
msgid "``OTEL_DOTNET_AUTO_{DECTECTOR}_RESOURCE_DETECTOR_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_{DECTECTOR}_RESOURCE_DETECTOR_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:153
msgid "Activates or deactivates a specific resource detector, where ``{DETECTOR}`` is the uppercase identifier of the resource detector you want to activate. Overrides ``OTEL_DOTNET_AUTO_RESOURCE_DETECTOR_ENABLED``."
msgstr "特定のリソース検出器をアクティブまたは非アクティブにします。``{DETECTOR}`` は、アクティブにしたいリソース検出器の大文字の識別子です。``OTEL_DOTNET_AUTO_RESOURCE_DETECTOR_ENABLED`` を上書きする。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:157
msgid "The following resource detectors are available:"
msgstr "以下の資源探知機が利用できる："

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:164
msgid "Detector ID"
msgstr "検出器ID"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:166 ../../gdi/opentelemetry/data-processing.rst:82
msgid "Attributes"
msgstr "属性"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:167
msgid "``CONTAINER``"
msgstr "``CONTAINER``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:168
msgid "Container detector. For example, Docker or Podman containers."
msgstr "コンテナ探知機。例えば、DockerやPodmanコンテナなどだ。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:189
msgid "``OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES``"
msgstr "``OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:190
msgid "Comma-separated list of additional ``System.Diagnostics.ActivitySource`` names to be added to the tracer at startup. Use it to capture spans from manual instrumentation."
msgstr "起動時にトレーサーに追加される``System.Diagnostics.ActivitySource`` 名のカンマ区切りリスト。手動計測からスパンをキャプチャするために使用します。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:191
msgid "``OTEL_DOTNET_AUTO_METRICS_ADDITIONAL_SOURCES``"
msgstr "``OTEL_DOTNET_AUTO_METRICS_ADDITIONAL_SOURCES``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:192
msgid "Comma-separated list of additional ``System.Diagnostics.Metrics.Meter`` names to be added to the meter at the startup. Use it to capture custom metrics."
msgstr "スタートアップ時にメーターに追加される追加の``System.Diagnostics.Metrics.Meter`` 名のカンマ区切りリスト。カスタムメトリクスを取得するために使用します。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:201
msgid "``OTEL_DOTNET_AUTO_GRAPHQL_SET_DOCUMENT``"
msgstr "``OTEL_DOTNET_AUTO_GRAPHQL_SET_DOCUMENT``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:202
msgid "Whether the GraphQL instrumentation can pass raw queries as a ``graphql.document`` attribute. As queries might contain sensitive information, the default value is ``false``."
msgstr "GraphQLインスツルメンテーションが生のクエリーを``graphql.document`` 属性として渡せるかどうか。クエリには機密情報が含まれる可能性があるため、デフォルト値は``false`` です。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:203
msgid "``OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_LEGACY_SOURCES``"
msgstr "``OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_LEGACY_SOURCES``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:204
msgid "Comma-separated list of additional legacy source names to be added to the tracer at the startup. Use it to capture ``System.Diagnostics.Activity`` objects created without using the ``System.Diagnostics.ActivitySource`` API."
msgstr "起動時にトレーサーに追加される追加のレガシー・ソース名のカンマ区切りリスト。``System.Diagnostics.ActivitySource`` APIを使用せずに作成された``System.Diagnostics.Activity`` オブジェクトをキャプチャするために使用します。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:206
msgid "The following settings control which instrumentations are activated. See :ref:`disable-instrumentations-otel-dotnet` for more information."
msgstr "以下の設定は、どのインストゥルメンテーションをアクティブにするかを制御する。詳しくは:ref:`disable-instrumentations-otel-dotnet` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:215
msgid "``OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:216
msgid "Activates or deactivates all instrumentations. The default value is ``true``.  Can't be set using the web.config or app.config files."
msgstr "すべてのインストゥルメンテーションをアクティブまたは非アクティブにする。デフォルト値は``true`` 。 web.configやapp.configファイルでは設定できない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:217
msgid "``OTEL_DOTNET_AUTO_TRACES_INSTRUMENTATION_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_TRACES_INSTRUMENTATION_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:218
msgid "Activates or deactivates all trace instrumentations. Overrides ``OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED``. Inherits the value of the ``OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED`` environment variable. Can't be set using the web.config or app.config files."
msgstr "すべてのトレース計装をアクティブまたは非アクティブにする。``OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED`` を上書きする。環境変数``OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED`` の値を継承する。web.configやapp.configファイルでは設定できない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:219
msgid "``OTEL_DOTNET_AUTO_TRACES_{INSTRUMENTATION}_INSTRUMENTATION_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_TRACES_{INSTRUMENTATION}_INSTRUMENTATION_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:220
msgid "Activates or deactivates a specific trace instrumentation, where ``{INSTRUMENTATION}`` is the case-sensitive name of the instrumentation. Overrides ``OTEL_DOTNET_AUTO_TRACES_INSTRUMENTATION_ENABLED``. Inherits the value of the ``OTEL_DOTNET_AUTO_TRACES_INSTRUMENTATION_ENABLED`` environment variable. Can't be set using the web.config or app.config files."
msgstr "``{INSTRUMENTATION}`` は、大文字と小文字を区別するインスツルメンテーションの名前です。``OTEL_DOTNET_AUTO_TRACES_INSTRUMENTATION_ENABLED`` を上書きする。環境変数``OTEL_DOTNET_AUTO_TRACES_INSTRUMENTATION_ENABLED`` の値を継承する。web.configやapp.configファイルでは設定できない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:221
msgid "``OTEL_DOTNET_AUTO_METRICS_INSTRUMENTATION_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_METRICS_INSTRUMENTATION_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:222
msgid "Activates or deactivates all metric instrumentations. Overrides ``OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED``. Inherits the value of the ``OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED`` environment variable. Can't be set using the web.config or app.config files."
msgstr "すべてのメトリック計装をアクティブまたは非アクティブにします。``OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED`` を上書きする。環境変数``OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED`` の値を継承する。web.configやapp.configファイルでは設定できない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:223
msgid "``OTEL_DOTNET_AUTO_METRICS_{INSTRUMENTATION}_INSTRUMENTATION_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_METRICS_{INSTRUMENTATION}_INSTRUMENTATION_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:224
msgid "Activates or deactivates a specific metric instrumentation, where ``{INSTRUMENTATION}`` is the case-sensitive name of the instrumentation. Overrides ``OTEL_DOTNET_AUTO_METRICS_INSTRUMENTATION_ENABLED``. Inherits the value of the ``OTEL_DOTNET_AUTO_METRICS_INSTRUMENTATION_ENABLED`` environment variable. Can't be set using the web.config or app.config files."
msgstr "``{INSTRUMENTATION}`` はインスツルメンテーションの大文字と小文字を区別した名前です。``OTEL_DOTNET_AUTO_METRICS_INSTRUMENTATION_ENABLED`` を上書きする。環境変数``OTEL_DOTNET_AUTO_METRICS_INSTRUMENTATION_ENABLED`` の値を継承する。web.configやapp.configファイルでは設定できない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:225
msgid "``OTEL_DOTNET_AUTO_LOGS_INSTRUMENTATION_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_LOGS_INSTRUMENTATION_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:226
msgid "Activates or deactivates all log instrumentations. Overrides ``OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED``. Inherits the value of the ``OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED`` environment variable. Can't be set using the web.config or app.config files."
msgstr "すべてのログ計装をアクティブまたは非アクティブにします。``OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED`` を上書きする。環境変数``OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED`` の値を継承する。web.configやapp.configファイルでは設定できない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:227
msgid "``OTEL_DOTNET_AUTO_LOGS_{INSTRUMENTATION}_INSTRUMENTATION_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_LOGS_{INSTRUMENTATION}_INSTRUMENTATION_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:228
msgid "Activates or deactivates a specific log instrumentation, where ``{INSTRUMENTATION}`` is the case-sensitive name of the instrumentation. Overrides ``OTEL_DOTNET_AUTO_LOGS_INSTRUMENTATION_ENABLED``. Inherits the value of the ``OTEL_DOTNET_AUTO_LOGS_INSTRUMENTATION_ENABLED`` environment variable. Can't be set using the web.config or app.config files."
msgstr "``{INSTRUMENTATION}`` は大文字と小文字を区別した名前です。``OTEL_DOTNET_AUTO_LOGS_INSTRUMENTATION_ENABLED`` を上書きする。環境変数``OTEL_DOTNET_AUTO_LOGS_INSTRUMENTATION_ENABLED`` の値を継承する。web.configやapp.configファイルでは設定できない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:251
msgid "The following settings control the internal logging of the Splunk Distribution of OpenTelemetry .NET:"
msgstr "以下の設定は、OpenTelemetry .NET の Splunk ディストリビューションの内部ロギングを制御します："

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:261
msgid "Sets the logging level for instrumentation log messages. Possible values are ``none``, ``error``, ``warn``, ``info``, and ``debug``. The default value is ``info``. Can't be set using the web.config or app.config files."
msgstr "計装ログ・メッセージのロギング・レベルを設定します。指定可能な値は``none``,``error``,``warn``,``info``,``debug`` です。デフォルト値は``info`` 。web.configやapp.configファイルでは設定できない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:262
msgid "``OTEL_DOTNET_AUTO_LOG_DIRECTORY``"
msgstr "``OTEL_DOTNET_AUTO_LOG_DIRECTORY``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:263
msgid "Directory of the .NET tracer logs. The default value is ``/var/log/opentelemetry/dotnet`` for Linux, and ``%ProgramData%\\OpenTelemetry .NET AutoInstrumentation\\logs`` for Windows. Can't be set using the web.config or app.config files."
msgstr ".NETトレーサーログのディレクトリ。デフォルト値は、Linuxでは``/var/log/opentelemetry/dotnet`` 、Windowsでは``%ProgramData%\\OpenTelemetry .NET AutoInstrumentation\\logs`` 。web.configやapp.configファイルでは設定できない。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:264
msgid "``OTEL_DOTNET_AUTO_TRACES_CONSOLE_EXPORTER_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_TRACES_CONSOLE_EXPORTER_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:265
msgid "Whether the traces console exporter is activated. The default value is ``false``."
msgstr "トレースコンソールエクスポーターが有効かどうか。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:266
msgid "``OTEL_DOTNET_AUTO_METRICS_CONSOLE_EXPORTER_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_METRICS_CONSOLE_EXPORTER_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:267
msgid "Whether the metrics console exporter is activated. The default value is ``false``."
msgstr "メトリクス・コンソール・エクスポーターが有効になっているかどうか。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:268
msgid "``OTEL_DOTNET_AUTO_LOGS_CONSOLE_EXPORTER_ENABLED``"
msgstr "``OTEL_DOTNET_AUTO_LOGS_CONSOLE_EXPORTER_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:269
msgid "Whether the logs console exporter is activated. The default value is ``false``.The default value is ``false``."
msgstr "ログコンソールエクスポーターが有効になっているかどうか。デフォルト値は``false`` 。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:270
msgid "``OTEL_DOTNET_AUTO_LOGS_INCLUDE_FORMATTED_MESSAGE``"
msgstr "``OTEL_DOTNET_AUTO_LOGS_INCLUDE_FORMATTED_MESSAGE``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:271
msgid "Whether the log state have to be formatted. The default value is ``false``."
msgstr "ログの状態をフォーマットするかどうか。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:278
msgid "By default, the Splunk Distribution of OpenTelemetry .NET retrieves the service name by trying the following steps until it succeeds:"
msgstr "デフォルトでは、OpenTelemetry .NET の Splunk ディストリビューションは、成功するまで以下の手順を試してサービス名を取得します："

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:280
msgid "The default service name is the name of the entry assembly. For example, the name of your .NET project file. For ASP.NET applications, the default service name is ``SiteName[/VirtualPath]``."
msgstr "デフォルトのサービス名は、エントリー・アセンブリの名前である。例えば、.NETプロジェクトファイルの名前。ASP.NETアプリケーションの場合、デフォルトのサービス名は``SiteName[/VirtualPath]`` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:284
msgid "If all the steps fail, the service name defaults to ``unknown_service``."
msgstr "すべての手順が失敗した場合、サービス名のデフォルトは``unknown_service`` になります。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:286
msgid "To override the default service name, set the ``OTEL_SERVICE_NAME`` environment variable."
msgstr "デフォルトのサービス名を上書きするには、``OTEL_SERVICE_NAME`` 環境変数を設定する。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:291
msgid "Environment variables for manual installation"
msgstr "手動インストールのための環境変数"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:293
msgid "When deploying the instrumentation manually, you need to make sure to set the following environment variables:"
msgstr "インスツルメンテーションを手動でデプロイする場合、以下の環境変数を必ず設定する必要がある："

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:297
msgid "Windows (.NET)"
msgstr "Windows (.NET)"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:309 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:337 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:359
msgid "``{918728DD-259F-4A6A-AC2B-B85E1B658318}``"
msgstr "``{918728DD-259F-4A6A-AC2B-B85E1B658318}``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:311 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:339
msgid "``$installationLocation\\win-x64\\OpenTelemetry.AutoInstrumentation.Native.dll``"
msgstr "``$installationLocation\\win-x64\\OpenTelemetry.AutoInstrumentation.Native.dll``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:313 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:341
msgid "``$installationLocation\\win-x86\\OpenTelemetry.AutoInstrumentation.Native.dll``"
msgstr "``$installationLocation\\win-x86\\OpenTelemetry.AutoInstrumentation.Native.dll``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:314 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:362
msgid "``DOTNET_ADDITIONAL_DEPS``"
msgstr "``DOTNET_ADDITIONAL_DEPS``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:315
msgid "``$installationLocation\\AdditionalDeps``"
msgstr "``$installationLocation\\AdditionalDeps``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:316 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:364
msgid "``DOTNET_SHARED_STORE``"
msgstr "``DOTNET_SHARED_STORE``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:317
msgid "``$installationLocation\\store``"
msgstr "``$installationLocation\\store``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:318 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:366
msgid "``DOTNET_STARTUP_HOOKS``"
msgstr "``DOTNET_STARTUP_HOOKS``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:319
msgid "``$installationLocation\\net\\OpenTelemetry.AutoInstrumentation.StartupHook.dll``"
msgstr "``$installationLocation\\net\\OpenTelemetry.AutoInstrumentation.StartupHook.dll``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:320 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:342 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:368
msgid "``OTEL_DOTNET_AUTO_HOME``"
msgstr "``OTEL_DOTNET_AUTO_HOME``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:321 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:343
msgid "``$installationLocation``"
msgstr "``$installationLocation``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:322 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:344 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:370
msgid "``OTEL_DOTNET_AUTO_PLUGINS``"
msgstr "``OTEL_DOTNET_AUTO_PLUGINS``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:323 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:345 ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:371
msgid "``Splunk.OpenTelemetry.AutoInstrumentation.Plugin, Splunk.OpenTelemetry.AutoInstrumentation``"
msgstr "``Splunk.OpenTelemetry.AutoInstrumentation.Plugin, Splunk.OpenTelemetry.AutoInstrumentation``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:325
msgid "Windows (.NET Framework)"
msgstr "ウィンドウズ（.NET Framework）"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:347
msgid "Linux (.NET)"
msgstr "Linux (.NET)"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:360
msgid "``CORECLR_PROFILER_PATH``"
msgstr "``CORECLR_PROFILER_PATH``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:361
msgid "``$INSTALL_DIR/linux-x64/OpenTelemetry.AutoInstrumentation.Native.so`` (glibc) |br| ``$INSTALL_DIR/linux-musl-x64/OpenTelemetry.AutoInstrumentation.Native.so`` (musl)"
msgstr "``$INSTALL_DIR/linux-x64/OpenTelemetry.AutoInstrumentation.Native.so`` (glibc)|br| ``$INSTALL_DIR/linux-musl-x64/OpenTelemetry.AutoInstrumentation.Native.so`` (musl)"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:363
msgid "``$INSTALL_DIR\\AdditionalDeps``"
msgstr "``$INSTALL_DIR\\AdditionalDeps``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:365
msgid "``$INSTALL_DIR\\store``"
msgstr "``$INSTALL_DIR\\store``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:367
msgid "``$INSTALL_DIR\\net\\OpenTelemetry.AutoInstrumentation.StartupHook.dll``"
msgstr "``$INSTALL_DIR\\net\\OpenTelemetry.AutoInstrumentation.StartupHook.dll``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:369
msgid "``$INSTALL_DIR``"
msgstr "``$INSTALL_DIR``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/advanced-dotnet-configuration.rst:373
msgid "The default installation path on Linux is ``$HOME/.otel-dotnet-auto``."
msgstr "Linux でのデフォルトのインストールパスは``$HOME/.otel-dotnet-auto`` です。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:-1
msgid "The Splunk Distribution of OpenTelemetry .NET collects the following runtime and trace metrics."
msgstr "OpenTelemetry .NET の Splunk ディストリビューションは、以下のランタイムおよびトレースメトリクスを収集します。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:5
msgid "Metrics collected by the Splunk Distribution of OpenTelemetry .NET"
msgstr "OpenTelemetry .NET の Splunk ディストリビューションによって収集されたメトリクス"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:10
msgid "The Splunk Distribution of OpenTelemetry .NET can collect runtime and trace metrics. To learn about the different metric types, see :ref:`metric-types`."
msgstr "OpenTelemetry .NET の Splunk ディストリビューションは、ランタイムとトレースのメトリクスを収集できます。メトリックの種類については、:ref:`metric-types` をご覧ください。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:17
msgid "Configure metrics collection"
msgstr "メトリクス収集の構成"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:19
msgid "Metric collection is activated by default. To configure metric settings, see :ref:`dotnet-otel-instrumentation-settings`."
msgstr "メトリック収集はデフォルトで有効になっている。メトリック設定を行うには、:ref:`dotnet-otel-instrumentation-settings` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:26
msgid "The Splunk Distribution of OpenTelemetry .NET can collect the following runtime metrics:"
msgstr "OpenTelemetry .NET の Splunk ディストリビューションでは、以下のランタイムメトリクスを収集できます："

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:41
msgid "Heap size, as observed during the last garbage collection. Only available for .NET 6 or higher."
msgstr "前回のガベージコレクション時に観測されたヒープサイズ。.NET 6以降でのみ使用可能。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:42
msgid "``process.runtime.dotnet.gc.heap.fragmentation.size``"
msgstr "``process.runtime.dotnet.gc.heap.fragmentation.size``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:44
msgid "Heap fragmentation, as observed during the last garbage collection. Only available for .NET 7 or higher."
msgstr "前回のガベージコレクションで確認されたヒープの断片化。.NET 7以降でのみ使用可能。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:47
msgid "Count of bytes currently in use by live objects in the GC heap."
msgstr "GCヒープ内のライブオブジェクトが現在使用しているバイト数。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:50
msgid "Count of bytes allocated on the managed GC heap since the process started. Only available for .NET 6 or higher."
msgstr "プロセス開始以降に管理GCヒープに割り当てられたバイト数。.NET 6以降でのみ使用可能。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:53
msgid "Amount of committed virtual memory for the managed GC heap, as observed during the last garbage collection. Only available for .NET 6 and higher."
msgstr "最後のガベージコレクション時に観測された、マネージドGCヒープのコミットされた仮想メモリー量。.NET 6以降でのみ使用可能。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:59
msgid "Number of thread pool threads, as observed during the last measurement. Only available for .NET 6 or higher."
msgstr "前回の測定時に観測されたスレッドプールのスレッド数。.NET 6以降でのみ使用可能。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:60
msgid "``process.runtime.dotnet.thread_pool.completed_items.count``"
msgstr "``process.runtime.dotnet.thread_pool.completed_items.count``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:62
msgid "Number of work items processed by the thread pool since the process started. Only available for .NET 6 or higher."
msgstr "プロセスが開始してからスレッドプールで処理されたワークアイテムの数。.NET 6以降でのみ使用可能。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:63
msgid "``process.runtime.dotnet.thread_pool.queue.length``"
msgstr "``process.runtime.dotnet.thread_pool.queue.length``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:65
msgid "Number of work items currently queued for processing by the thread pool. Only available for .NET 6 or higher."
msgstr "スレッドプールが現在処理のためにキューに入れているワークアイテムの数。.NET 6以降でのみ使用可能。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:66
msgid "``process.runtime.dotnet.jit.il_compiled.size``"
msgstr "``process.runtime.dotnet.jit.il_compiled.size``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:68
msgid "Bytes of intermediate language that have been compiled since the process started. Only available for .NET 6 or higher."
msgstr "プロセス開始以降にコンパイルされた中間言語のバイト数。.NET 6以降でのみ使用可能。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:69
msgid "``process.runtime.dotnet.jit.methods_compiled.count``"
msgstr "``process.runtime.dotnet.jit.methods_compiled.count``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:71
msgid "Number of times the JIT compiler compiled a method since the process started. Only available for .NET 6 or higher."
msgstr "プロセスが開始してからJITコンパイラがメソッドをコンパイルした回数。.NET 6以降でのみ使用可能。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:72
msgid "``process.runtime.dotnet.jit.compilation_time``"
msgstr "``process.runtime.dotnet.jit.compilation_time``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:74
msgid "Amount of time the compiler spent compiling methods since the process started. Only available for .NET 6 or higher."
msgstr "プロセスが開始してからコンパイラがメソッドのコンパイルに費やした時間。.NET 6以降でのみ使用可能。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:75
msgid "``process.runtime.dotnet.timer.count``"
msgstr "``process.runtime.dotnet.timer.count``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:77
msgid "Number of timer instances currently active. Only available for .NET 6 or higher."
msgstr "現在アクティブなタイマーインスタンスの数。.NET 6以降でのみ使用可能。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:78
msgid "``process.runtime.dotnet.assemblies.count``"
msgstr "``process.runtime.dotnet.assemblies.count``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:80
msgid "Number of .NET assemblies that are currently loaded."
msgstr "現在ロードされている.NETアセンブリの数。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:83
msgid "Count of exceptions thrown in managed code since the observation started."
msgstr "観測開始以降にマネージドコードでスローされた例外の数。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:90
msgid "The Splunk Distribution of OpenTelemetry .NET can collect the following process metrics:"
msgstr "OpenTelemetry .NET の Splunk ディストリビューションでは、以下のプロセスメトリクスを収集できます："

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:109
msgid "``process.cpu.count``"
msgstr "``process.cpu.count``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:119
msgid "Instrumentation metrics"
msgstr "計装メトリクス"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:121
msgid "The Splunk Distribution of OpenTelemetry .NET can collect the following instrumentation metrics:"
msgstr "OpenTelemetry .NET の Splunk ディストリビューションでは、以下のインスツルメンテーションメトリクスを収集できます："

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:131
msgid "``http.client.duration_{bucket|count|sum}``"
msgstr "``http.client.duration_{bucket|count|sum}``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:132 ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:135
msgid "Cumulative counters (histogram)"
msgstr "累積カウンター（ヒストグラム）"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:133
msgid "Duration of outbound HTTP requests, in the form of count, sum, and histogram buckets. This metric originates multiple metric time series, which might result in increased data ingestion costs."
msgstr "アウトバウンド HTTP リクエストの継続時間。カウント、合計、ヒストグラムのバケツで表します。この指標は複数の指標時系列を発生させるため、データ取り込みコストが増加する可能性がある。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:134
msgid "``http.server.duration_{bucket|count|sum}``"
msgstr "``http.server.duration_{bucket|count|sum}``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:136
msgid "Duration of the inbound HTTP request, in the form of count, sum, and histogram buckets. This metric originates multiple metric time series, which might result in increased data ingestion costs."
msgstr "カウント、合計、およびヒストグラムのバケットの形式での、受信 HTTP リクエストの持続時間。この指標は複数の指標時系列を発生させるため、データ取り込みコストが増加する可能性がある。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:137
msgid "``nservicebus.messaging.successes``"
msgstr "``nservicebus.messaging.successes``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:139
msgid "Number of messages successfully processed by the endpoint."
msgstr "エンドポイントによって正常に処理されたメッセージの数。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:140
msgid "``nservicebus.messaging.fetches``"
msgstr "``nservicebus.messaging.fetches``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:142
msgid "Number of messages retrieved from the queue by the endpoint."
msgstr "エンドポイントがキューから取得したメッセージの数。"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:143
msgid "``nservicebus.messaging.failures``"
msgstr "``nservicebus.messaging.failures``"

#: ../../gdi/get-data-in/application/otel-dotnet/configuration/dotnet-metrics-attributes.rst:145
msgid "Number of messages unsuccessfully processed by the endpoint."
msgstr "エンドポイントが処理に失敗したメッセージの数。"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:5
msgid "OpenTelemetry .NET instrumentation compatibility and requirements"
msgstr "OpenTelemetry .NET 計測器の互換性と要件"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:17
msgid "The Splunk Distribution of OpenTelemetry .NET supports the following .NET versions:"
msgstr "OpenTelemetry .NET の Splunk ディストリビューションは、以下の .NET バージョンをサポートしています："

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:27
msgid "The Splunk Distribution of OpenTelemetry .NET instruments the following libraries."
msgstr "OpenTelemetry .NET の Splunk ディストリビューションでは、以下のライブラリを使用します。"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:32
msgid "Traces instrumentations"
msgstr "トレース機器"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:42
msgid "ASP.NET Framework (.NET Framework) |br| MVC / WebApi (Only integrated pipeline mode supported)"
msgstr "ASP.NET Framework (.NET Framework)|br| MVC / WebApi (統合パイプラインモードのみ対応)"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:43 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:46 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:61 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:107 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:110 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:113 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:116 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:122
msgid "See :ref:`dotnet-otel-versions`"
msgstr "参照 :ref:`dotnet-otel-versions`"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:44
msgid "``ASPNET``"
msgstr "``ASPNET``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:47
msgid "``ASPNETCORE``"
msgstr "``ASPNETCORE``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:48
msgid "Elastic.Clients.Elasticsearch"
msgstr "Elastic.Clients.Elasticsearch"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:49 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:64 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:79 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:119
msgid "8.0.0 and higher"
msgstr "8.0.0以上"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:50
msgid "``ELASTICSEARCH``"
msgstr "``ELASTICSEARCH``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:51
msgid "Microsoft.EntityFrameworkCore |br| (Not supported on .NET Framework)"
msgstr "Microsoft.EntityFrameworkCore|br| （.NET Framework ではサポートされていません。）"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:52
msgid "6.0.12 and higher"
msgstr "6.0.12以上"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:53
msgid "``ENTITYFRAMEWORKCORE``"
msgstr "``ENTITYFRAMEWORKCORE``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:54
msgid "GraphQL |br| (Not supported on .NET Framework)"
msgstr "GraphQL|br| (.NET Frameworkではサポートされていません)"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:55
msgid "7.5.0 and higher"
msgstr "7.5.0以上"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:56
msgid "``GRAPHQL``"
msgstr "``GRAPHQL``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:57
msgid "Grpc.Net.Client"
msgstr "Grpc.Net.Client"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:58
msgid "2.43.0 to 3.0.0"
msgstr "2.43.0 から 3.0.0"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:59
msgid "``GRPCNETCLIENT``"
msgstr "``GRPCNETCLIENT``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:60 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:112
msgid "System.Net.Http.HttpClient and |br| System.Net.HttpWebRequest"
msgstr "System.Net.Http.HttpClient および|br| System.Net.HttpWebRequest"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:62 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:114
msgid "``HTTPCLIENT``"
msgstr "``HTTPCLIENT``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:63
msgid "MassTransit |br| (Not supported on .NET Framework)"
msgstr "MassTransit|br| （.NET Framework ではサポートされていません。）"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:65
msgid "``MASSTRANSIT``"
msgstr "``MASSTRANSIT``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:66
msgid "MongoDB.Driver.Core |br| (Not supported on .NET Framework)"
msgstr "MongoDB.Driver.Core|br| (.NET Framework ではサポートされていません)"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:67
msgid "2.13.3 to 3.0.0"
msgstr "2.13.3から3.0.0へ"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:68
msgid "``MONGODB``"
msgstr "``MONGODB``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:69
msgid "MySqlConnector"
msgstr "MySqlConnector"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:70
msgid "2.0.0 and higher"
msgstr "2.0.0以上"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:71
msgid "``MYSQLCONNECTOR``"
msgstr "``MYSQLCONNECTOR``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:72
msgid "MySql.Data |br| (Not supported on .NET Framework)"
msgstr "MySql.Data|br| (.NET Frameworkではサポートされていません)"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:73
msgid "6.10.7 to 8.0.32"
msgstr "6.10.7 から 8.0.32"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:74
msgid "``MYSQLDATA``"
msgstr "``MYSQLDATA``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:76 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:137
msgid "6.0.0 and higher"
msgstr "6.0.0以上"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:77
msgid "``NPGSQL``"
msgstr "``NPGSQL``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:78 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:118
msgid "NServiceBus"
msgstr "NServiceBus"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:80 ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:120
msgid "``NSERVICEBUS``"
msgstr "``NSERVICEBUS``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:81
msgid "Microsoft.Data.SqlClient and |br| System.Data.SqlClient"
msgstr "Microsoft.Data.SqlClientおよび|br| System.Data.SqlClient"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:82
msgid "Version 3.* is not supported on .NET Framework"
msgstr "バージョン3.*は、.NET Frameworkではサポートされていません。"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:83
msgid "``SQLCLIENT``"
msgstr "``SQLCLIENT``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:84
msgid "Quartz |br| (Not supported on .NET Framework 4.7.1 and lower)"
msgstr "Quartz|br| (.NET Framework 4.7.1 以下ではサポートされていません)"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:85
msgid "3.4.0 and higher"
msgstr "3.4.0以上"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:86
msgid "``QUARTZ``"
msgstr "``QUARTZ``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:87
msgid "StackExchange.Redis |br| (Not supported on .NET Framework)"
msgstr "StackExchange.Redis|br| (.NET Frameworkではサポートされていません)"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:88
msgid "2.0.405 to 3.0.0"
msgstr "2.0.405 から 3.0.0"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:89
msgid "``STACKEXCHANGEREDIS``"
msgstr "``STACKEXCHANGEREDIS``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:90
msgid "System.ServiceModel |br| (Not supported on .NET Framework)"
msgstr "System.ServiceModel|br| (.NET Framework ではサポートされていません)"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:91
msgid "4.7.0 and higher |br| of ``System.ServiceModel.Primitives``"
msgstr "4.7.0 以上|br|  ``System.ServiceModel.Primitives``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:92
msgid "``WCFCLIENT`` for client side instrumentation and |br| ``WCFSERVICE`` for service side instrumentation"
msgstr "``WCFCLIENT`` クライアント側のインスツルメンテーションには|br| ``WCFSERVICE`` を、サービス側のインスツルメンテーションには を使用する。"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:96
msgid "Metrics instrumentations"
msgstr "計測機器"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:106
msgid "ASP.NET Framework"
msgstr "ASP.NET Framework"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:108
msgid "``ASPNET`` |br| (Requires the trace instrumentation)"
msgstr "``ASPNET`` |br| (トレース装置が必要）"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:111
msgid "``ASPNETCORE`` |br| (Automatically activates ``Microsoft.AspNetCore.Hosting.HttpRequestIn`` spans.)"
msgstr "``ASPNETCORE`` |br| (自動的に``Microsoft.AspNetCore.Hosting.HttpRequestIn`` スパンが有効になる）。"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:115
msgid "OpenTelemetry.Instrumentation.Runtime"
msgstr "OpenTelemetry.Instrumentation.Runtime"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:117
msgid "``NETRUNTIME``"
msgstr "``NETRUNTIME``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:121
msgid "OpenTelemetry.Instrumentation.Process"
msgstr "OpenTelemetry.Instrumentation.Process"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:123
msgid "``PROCESS``"
msgstr "``PROCESS``"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:126
msgid "Logs instrumentations"
msgstr "ログの計測"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:136
msgid "Microsoft.Extensions.Logging 6.0.0 and higher |br| (Not supported on .NET Framework)"
msgstr "Microsoft.Extensions.Logging 6.0.0 以降|br| (.NET Framework ではサポートされていません)"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:138
msgid "``ILOGGER`` |br| (Requires the trace instrumentation)"
msgstr "``ILOGGER`` |br| (トレース装置が必要）"

#: ../../gdi/get-data-in/application/otel-dotnet/dotnet-requirements.rst:145
msgid "The Splunk Distribution of OpenTelemetry .NET exports application traces and spans to the Splunk Distribution of OpenTelemetry Collector, which also collects system metric data and logs, including profiling data."
msgstr "Splunk Distribution of OpenTelemetry .NET は、アプリケーションのトレースとスパンを Splunk Distribution of OpenTelemetry Collector にエクスポートし、プロファイリングデータを含むシステムメトリックデータとログも収集します。"

#: ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:10
msgid "Migrate from SignalFx Instrumentation for .NET"
msgstr "SignalFx Instrumentation for .NETからの移行"

#: ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:-1
msgid "Instrument a .NET application to export spans and metrics to Splunk Observability Cloud."
msgstr "スパンとメトリクスを Splunk Observability Cloud にエクスポートする .NET アプリケーションをインストルメントします。"

#: ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:5
msgid "Instrument .NET applications for Splunk Observability Cloud (OpenTelemetry)"
msgstr "Splunk Observability Cloud (OpenTelemetry) 用の .NET アプリケーションを構築する"

#: ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:21
msgid "The Splunk Distribution of OpenTelemetry .NET provides automatic instrumentation for popular .NET libraries and frameworks to collect and send telemetry to Splunk Observability Cloud."
msgstr "OpenTelemetry .NET の Splunk ディストリビューションは、一般的な .NET ライブラリとフレームワークの自動インストルメンテーションを提供し、テレメトリを収集して Splunk Observability Cloud に送信します。"

#: ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:31
msgid "The Splunk Distribution of OpenTelemetry .NET provides the following features:"
msgstr "OpenTelemetry .NET の Splunk ディストリビューションは以下の機能を提供します："

#: ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:33
msgid "Collection and reporting of all spans and traces"
msgstr "すべてのスパンとトレースの収集と報告"

#: ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:34
msgid "Ready for Splunk Observability Cloud (APM and RUM)"
msgstr "Splunk Observability Cloud（APMおよびRUM）の準備完了"

#: ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:35
msgid "W3C headers with baggage for context propagation by default"
msgstr "W3Cのヘッダは、デフォルトでコンテキスト伝播のためのバッゲージを持つ"

#: ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:36
msgid "OTLP over HTTP exporter to send spans to the Splunk OTel Collector"
msgstr "スパンを Splunk OTel コレクターに送信する OTLP over HTTP エクスポーター"

#: ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:37
msgid "OpenTelemetry and Splunk Observability Cloud semantic conventions"
msgstr "OpenTelemetry と Splunk Observability Cloud のセマンティック規約"

#: ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:39
msgid "If you need AlwaysOn Profiling for .NET, use the SignalFx Instrumentation for .NET. See :ref:`get-started-dotnet`."
msgstr ".NET 用の AlwaysOn プロファイリングが必要な場合は、SignalFx Instrumentation for .NET を使用します。:ref:`get-started-dotnet` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:49
msgid "Check compatibility and requirements. See :ref:`dotnet-otel-requirements`."
msgstr "互換性と必要条件を確認してください。:ref:`dotnet-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:50
msgid "Instrument your .NET application. See :ref:`instrument-otel-dotnet-applications`."
msgstr ".NETアプリケーションを計測する。:ref:`instrument-otel-dotnet-applications` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/get-started.rst:51
msgid "Configure your instrumentation. See :ref:`advanced-dotnet-otel-configuration`."
msgstr "計測器を設定する。:ref:`advanced-dotnet-otel-configuration` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:-1
msgid "The Splunk Distribution of OpenTelemetry .NET automatically instruments .NET applications, Windows services running .NET applications, and ASP.NET applications deployed on IIS. Follow these steps to get started."
msgstr "OpenTelemetry .NET の Splunk ディストリビューションは、.NET アプリケーション、.NET アプリケーションを実行している Windows サービス、IIS 上に配置された ASP.NET アプリケーションを自動的に計測します。以下の手順で始めましょう。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:5
msgid "Instrument a .NET application for Splunk Observability Cloud (OpenTelemetry)"
msgstr "Splunk Observability Cloud (OpenTelemetry) 用 .NET アプリケーションをインストルメントする"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:10
msgid "The Splunk Distribution of OpenTelemetry .NET automatically instruments .NET applications, Windows services running .NET applications, and ASP.NET applications deployed on IIS."
msgstr "OpenTelemetry .NET の Splunk ディストリビューションは、.NET アプリケーション、.NET アプリケーションを実行している Windows サービス、IIS 上に配置された ASP.NET アプリケーションを自動的に計測します。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:12
msgid "This distribution is currently in beta. Don't use it in production environments. Some features might not be supported or might have constrained capabilities. Support is provided on a best-effort basis."
msgstr "このディストリビューションは現在ベータ版である。本番環境では使わないこと。機能によってはサポートされていないものや、機能に制約があるものもあります。サポートはベストエフォートで提供される。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:19
msgid "To generate all the basic installation commands for your environment and application, use the .NET OpenTelemetry guided setup. To access the .NET OpenTelemetry guided setup, follow these steps:"
msgstr "あなたの環境とアプリケーションのための全ての基本的なインストール・コマンドを生成するには、.NET OpenTelemetry ガイド付きセットアップを使用します。.NET OpenTelemetryガイド付きセットアップにアクセスするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:22
msgid "Open the :new-page:`.NET OpenTelemetry guided setup <https://login.signalfx.com/#/gdi/scripted/otel-dotnet-tracing/>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`.NET OpenTelemetry ガイド付きセットアップ<https://login.signalfx.com/#/gdi/scripted/otel-dotnet-tracing/>` を開きます。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:28
msgid "Select the :guilabel:`.NET (OpenTelemetry)` tile to open the .NET OpenTelemetry guided setup."
msgstr ":guilabel:`.NET (OpenTelemetry)` タイルを選択し、.NET OpenTelemetry ガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:31
msgid "Install the Splunk Distribution of OpenTelemetry .NET manually"
msgstr "OpenTelemetry .NET の Splunk ディストリビューションを手動でインストールする"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:33
msgid "Follow these instructions to install the Splunk Distribution of OpenTelemetry .NET:"
msgstr "以下の手順に従って、OpenTelemetry .NET の Splunk ディストリビューションをインストールしてください："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:35
msgid ":ref:`install-dotnet-otel-instrumentation`"
msgstr ":ref:`install-dotnet-otel-instrumentation`"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:36 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:38
msgid ":ref:`configure-otel-dotnet`"
msgstr ":ref:`configure-otel-dotnet`"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:49 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:105
msgid "Check that you meet the requirements. See :ref:`dotnet-otel-requirements`."
msgstr "あなたが条件を満たしていることを確認してください。:ref:`dotnet-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:51 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:107
msgid "(Optional) If needed, uninstall the SignalFx Instrumentation for .NET. See :ref:`uninstall-dotnet-sfx`."
msgstr "(オプション）必要に応じて、SignalFx Instrumentation for .NETをアンインストールします。:ref:`uninstall-dotnet-sfx` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:53
msgid "Download and install the Splunk Distribution of OpenTelemetry .NET from the :new-page:`Releases page on GitHub <https://github.com/signalfx/splunk-otel-dotnet/releases>`. For example:"
msgstr "GitHub<https://github.com/signalfx/splunk-otel-dotnet/releases>` の:new-page:`リリースページから OpenTelemetry .NET の Splunk ディストリビューションをダウンロードしてインストールします。例えば、こうだ："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:67
msgid "Replace ``<version>`` in the ``module_url`` with the desired version."
msgstr "``module_url`` の``<version>`` を希望のバージョンに置き換える。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:69
msgid "Register the distribution:"
msgstr "ディストリビューションを登録する："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:89 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:127
msgid "Set the environment and service version resource attributes:"
msgstr "環境とサービスバージョンのリソース属性を設定する："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:98 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:135
msgid "If no data appears in APM, see :ref:`common-dotnet-otel-troubleshooting`."
msgstr "APM にデータが表示されない場合は、:ref:`common-dotnet-otel-troubleshooting` を参照してください。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:100
msgid "If you need to add custom attributes to spans or want to manually generate spans and metrics, instrument your .NET application or service manually. See :ref:`dotnet-otel-manual-instrumentation`."
msgstr "スパンにカスタム属性を追加する必要がある場合、またはスパンとメトリックを手動で生成する場合は、.NETアプリケーションまたはサービスを手動で測定してください。:ref:`dotnet-otel-manual-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:109
msgid "Download and install the installation script of the Splunk Distribution of OpenTelemetry .NET from the :new-page:`Releases page on GitHub <https://github.com/signalfx/splunk-otel-dotnet/releases>`. For example:"
msgstr "GitHub<https://github.com/signalfx/splunk-otel-dotnet/releases>` の:new-page:`Releases ページから、Splunk Distribution of OpenTelemetry .NET のインストールスクリプトをダウンロードしてインストールします。例えば、こうだ："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:118
msgid "Replace ``<version>`` in the curl URL with the desired version."
msgstr "curl URLの``<version>`` を希望のバージョンに置き換えてください。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:120
msgid "Activate the automatic instrumentation:"
msgstr "自動計測を起動する："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:137
msgid "If you need to add custom attributes to spans or want to manually generate spans, instrument your .NET application or service manually. See :ref:`dotnet-otel-manual-instrumentation`."
msgstr "スパンにカスタム属性を追加する必要がある場合、またはスパンを手動で生成する場合は、.NETアプリケーションまたはサービスを手動で計測してください。:ref:`dotnet-otel-manual-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:142 ../../gdi/get-data-in/rum/android/get-android-data-in.rst:10 ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:10 ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:10 ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:10
msgid "Configure the instrumentation"
msgstr "計測器の設定"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:144
msgid "For advanced configuration of the .NET automatic instrumentation, like changing trace propagation formats or changing the endpoint URLs, see :ref:`advanced-dotnet-otel-configuration`."
msgstr "トレース伝播フォーマットの変更やエンドポイントURLの変更など、.NET自動計測の高度な設定については、:ref:`advanced-dotnet-otel-configuration` を参照してください。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:149
msgid "Offline installation for Windows"
msgstr "Windows用オフラインインストール"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:151
msgid "To install the .NET automatic instrumentation on Windows hosts that are offline, follow these steps:"
msgstr "オフラインのWindowsホストに.NET自動インストルメンテーションをインストールするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:153
msgid "Download the following files from the :new-page:`Releases page on GitHub <https://github.com/signalfx/splunk-otel-dotnet/releases>` and copy them to the offline server:"
msgstr "GitHub<https://github.com/signalfx/splunk-otel-dotnet/releases>` の:new-page:`Releases ページから以下のファイルをダウンロードし、オフライン・サーバーにコピーする："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:155
msgid "``Splunk.OTel.DotNet.psm1``"
msgstr "``Splunk.OTel.DotNet.psm1``"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:156
msgid "``splunk-opentelemetry-dotnet-windows.zip``"
msgstr "``splunk-opentelemetry-dotnet-windows.zip``"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:158
msgid "Import the PowerShell script manually by running the following command:"
msgstr "以下のコマンドを実行して、PowerShellスクリプトを手動でインポートする："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:166
msgid "When prompted, enter ``R`` for ``Run Once``."
msgstr "プロンプトが表示されたら、``Run Once`` に``R`` を入力する。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/instrument-dotnet-application.rst:168
msgid "Run the install command:"
msgstr "インストール・コマンドを実行する："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:10
msgid "The Splunk Distribution of OpenTelemetry .NET automatic instrumentation provides a base you can build on by adding your own manual instrumentation. By using both automatic and manual instrumentation, you can better instrument the logic and functionality of your applications, clients, and frameworks."
msgstr "OpenTelemetry .NET 自動計測機能の Splunk ディストリビューションは、独自の手動計測機能を追加することで構築できるベースを提供します。自動インスツルメンテーションと手動インスツルメンテーションの両方を使用することで、アプリケーション、クライアント、フレームワークのロジックと機能をより適切にインスツルメンテーションすることができます。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:22
msgid "Install the Splunk Distribution of OpenTelemetry .NET. See :ref:`install-dotnet-otel-instrumentation`."
msgstr "OpenTelemetry .NET の Splunk ディストリビューションをインストールします。:ref:`install-dotnet-otel-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:24 ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:55
msgid "Add the ``System.Diagnostics.DiagnosticSource`` dependency to your project:"
msgstr "``System.Diagnostics.DiagnosticSource`` の依存関係をプロジェクトに追加する："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:30
msgid "Create an ``ActivitySource`` instance:"
msgstr "``ActivitySource`` インスタンスを作成する："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:36
msgid "Create an ``Activity``. Optionally, set tags:"
msgstr "``Activity`` を作成する。オプションでタグを設定する："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:46
msgid "Register your ``ActivitySource`` by setting the ``OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES`` environmental variable. You can set the value to either ``Examples.ManualInstrumentations.Registered`` or to ``Examples.ManualInstrumentations.*``, which registers the entire prefix."
msgstr "環境変数``OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES`` を設定して、``ActivitySource`` を登録する。値は、``Examples.ManualInstrumentations.Registered`` または、プレフィックス全体を登録する``Examples.ManualInstrumentations.*`` のいずれかに設定できる。"

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:61
msgid "Create a ``Meter`` instance:"
msgstr "``Meter`` インスタンスを作成する："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:67
msgid "Create an ``Instrument`` instance:"
msgstr "``Instrument`` インスタンスを作成する："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:73
msgid "Update the ``Instrument`` value:"
msgstr "``Instrument`` の値を更新する："

#: ../../gdi/get-data-in/application/otel-dotnet/instrumentation/manual-dotnet-instrumentation.rst:79
msgid "Register your ``Meter`` with OpenTelemetry.AutoInstrumentation by setting the ``OTEL_DOTNET_AUTO_METRICS_ADDITIONAL_SOURCES`` environment variable:"
msgstr "``OTEL_DOTNET_AUTO_METRICS_ADDITIONAL_SOURCES`` 環境変数を設定して、``Meter`` を OpenTelemetry.AutoInstrumentation に登録します："

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:10
msgid "When you instrument a .NET application using the Splunk Distribution of OpenTelemetry .NET and you don't see your data in Splunk Observability Cloud, follow these troubleshooting steps."
msgstr "Splunk Distribution of OpenTelemetry .NET を使用して .NET アプリケーションを計測しているときに、Splunk Observability Cloud にデータが表示されない場合は、以下のトラブルシューティング手順に従ってください。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:21
msgid "Check that you've configured all settings according to your needs. See :ref:`advanced-dotnet-otel-configuration`."
msgstr "ニーズに応じてすべての設定が完了していることを確認してください。:ref:`advanced-dotnet-otel-configuration` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:23
msgid "Check what environment variables apply to your process:"
msgstr "あなたのプロセスに適用される環境変数を確認する："

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:42
msgid "Set the ``OTEL_LOG_LEVEL`` environment variable to ``debug`` before starting your instrumented application."
msgstr "インスツルメンテッド・アプリケーションを起動する前に、環境変数``OTEL_LOG_LEVEL`` を``debug`` に設定する。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:46
msgid "Collect the debug logs. The instrumentation saves its logs in the following locations:"
msgstr "デバッグログを収集する。計測器は以下の場所にログを保存する："

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:48
msgid "Windows: ``%ProgramData%\\OpenTelemetry .NET AutoInstrumentation\\logs``"
msgstr "Windows: ``%ProgramData%\\OpenTelemetry .NET AutoInstrumentation\\logs``"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:49
msgid "Linux: ``/var/log/opentelemetry/dotnet``"
msgstr "Linux: ``/var/log/opentelemetry/dotnet``"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:51
msgid "If the default log directories can't be created, logs are saved in the user's temporary folder."
msgstr "デフォルトのログディレクトリを作成できない場合、ログはユーザーの一時フォルダに保存されます。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:53
msgid "You can change the default location by updating the ``OTEL_DOTNET_AUTO_LOG_DIRECTORY`` environment variable. See :ref:`dotnet-otel-debug-logging-settings` for more information and settings."
msgstr "デフォルトの場所は、``OTEL_DOTNET_AUTO_LOG_DIRECTORY`` 環境変数を更新することで変更できる。詳細と設定については:ref:`dotnet-otel-debug-logging-settings` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:65 ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:49
msgid "Check that the OTel Collector points to the following address: ``http://<host>:4318``. Verify that your URL is correct."
msgstr "OTel コレクタが以下のアドレスを指していることを確認する：``http://<host>:4318``.URLが正しいことを確認してください。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:68
msgid "Assembly in AdditionalDeps was not found"
msgstr "AdditionalDepsのアセンブリが見つかりませんでした。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:70
msgid "The following assembly error message might appear in some cases:"
msgstr "以下のようなアセンブリエラーメッセージが表示される場合があります："

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:76
msgid "To troubleshoot the issue, activate host tracing as in the following example:"
msgstr "この問題をトラブルシューティングするには、次の例のようにホストトレースを有効にしてください："

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:83
msgid "Run the application to collect the logs."
msgstr "アプリケーションを実行してログを収集する。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:90
msgid "By default, the Splunk Distribution of OpenTelemetry .NET instruments all .NET processes running on the host automatically. This might significantly increase CPU usage if you've activated the instrumentation in the system or user scope. Make sure that the instrumentation's environment variables are always set in the process or terminal scope."
msgstr "デフォルトでは、OpenTelemetry .NET の Splunk ディストリビューションは、ホスト上で実行されているすべての .NET プロセスを自動的に計測します。システム・スコープやユーザー・スコープでインスツルメンテーションを有効にしている場合、CPU使用率が大幅に増加する可能性があります。インスツルメンテーションの環境変数が、常にプロセス・スコープまたはターミナル・スコープに設定されていることを確認する。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:92
msgid "To restrict global instrumentation to a set of processes, use the ``OTEL_DOTNET_AUTO_EXCLUDE_PROCESSES`` environment variable, which excludes processes for instrumentation. See :ref:`advanced-dotnet-otel-configuration` for more information."
msgstr "グローバル・インスツルメンテーションを一連のプロセスに制限するには、``OTEL_DOTNET_AUTO_EXCLUDE_PROCESSES`` 環境変数を使用する。詳しくは:ref:`advanced-dotnet-otel-configuration` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:97
msgid "Deactivate specific instrumentations"
msgstr "特定の機器を停止する"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:99
msgid "All instrumentations are activated by default for all signal types: traces, metrics, and logs."
msgstr "デフォルトでは、トレース、メトリクス、ログのすべてのシグナル・タイプで、すべてのインスツルメンテーションが有効になっています。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:101
msgid "You can deactivate all instrumentations for a specific signal type by setting the ``OTEL_DOTNET_AUTO_{SIGNAL}_ENABLED_INSTRUMENTATIONS`` environment variable to ``false``."
msgstr "環境変数``OTEL_DOTNET_AUTO_{SIGNAL}_ENABLED_INSTRUMENTATIONS`` を``false`` に設定することで、特定のシグナル・タイプに対するすべてのインスツルメンテーションを非アクティブにすることができる。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:103
msgid "For a more granular approach, you can deactivate specific instrumentations for a given signal type by setting the ``OTEL_DOTNET_AUTO_{SIGNAL}_{INSTRUMENTATION}_INSTRUMENTATION_ENABLED`` environment variable to ``false``, where ``{SIGNAL}`` is the type of signal, for example traces, and ``{INSTRUMENTATION}`` is the case-sensitive name of the instrumentation."
msgstr "よりきめ細かなアプローチとして、``OTEL_DOTNET_AUTO_{SIGNAL}_{INSTRUMENTATION}_INSTRUMENTATION_ENABLED`` 環境変数を``false`` に設定することで、特定のシグナル・タイプのインスツルメンテーションを無効にすることができます。``{SIGNAL}`` はシグナルのタイプ（例えばトレース）、``{INSTRUMENTATION}`` はインスツルメンテーションの大文字と小文字を区別した名前です。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/common-dotnet-troubleshooting.rst:105
msgid "You can't set environment variables for deactivating instrumentations using the web.config or app.config files."
msgstr "web.configファイルやapp.configファイルを使用して、インストゥルメンテーションを停止するための環境変数を設定することはできません。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:-1 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:10
msgid "The agent of the Splunk Distribution of OpenTelemetry .NET is an alternative to the SignalFx Instrumentation for .NET. To migrate from the SignalFx instrumentation, follow these instructions."
msgstr "Splunk Distribution of OpenTelemetry .NET のエージェントは、SignalFx Instrumentation for .NET の代替です。SignalFxインスツルメンテーションから移行するには、以下の手順に従ってください。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:5
msgid "Migrate from the SignalFx .NET Instrumentation"
msgstr "SignalFx .NET Instrumentationからの移行"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:19
msgid "For a complete list of requirements, see :ref:`dotnet-otel-requirements`."
msgstr "要件の完全なリストについては、:ref:`dotnet-otel-requirements` を参照してください。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:24
msgid "Migrate to the Splunk Distribution of OpenTelemetry .NET"
msgstr "OpenTelemetry .NET の Splunk ディストリビューションへの移行"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:26
msgid "To migrate from the SignalFx Instrumentation for .NET to the Splunk Distribution of OpenTelemetry .NET, follow these steps:"
msgstr "SignalFx Instrumentation for .NET から Splunk Distribution of OpenTelemetry .NET に移行するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:28
msgid "Uninstall the SignalFx Instrumentation for .NET. See :ref:`uninstall-dotnet-sfx`."
msgstr "SignalFx Instrumentation for .NETをアンインストールします。:ref:`uninstall-dotnet-sfx` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:29
msgid "Install and activate the Splunk Distribution of OpenTelemetry .NET. See :ref:`install-dotnet-otel-instrumentation`."
msgstr "OpenTelemetry .NET の Splunk ディストリビューションをインストールし、有効化します。:ref:`install-dotnet-otel-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:30
msgid "Specify the endpoint of the OpenTelemetry Collector you're exporting traces to. See :ref:`dotnet-otel-exporter-settings`."
msgstr "トレースをエクスポートする OpenTelemetry Collector のエンドポイントを指定します。:ref:`dotnet-otel-exporter-settings` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:31
msgid "Update your settings. See :ref:`changes-functionality-dotnet-otel`."
msgstr "設定を更新してください。:ref:`changes-functionality-dotnet-otel` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:33
msgid "If you manually instrumented your code with OpenTracing, activate OpenTracing support by setting the ``OTEL_DOTNET_AUTO_OPENTRACING_ENABLED`` environment variable to ``true``."
msgstr "手動でコードをOpenTracingでインスツルメンテーションした場合は、``OTEL_DOTNET_AUTO_OPENTRACING_ENABLED`` 環境変数を``true`` に設定することで、OpenTracingのサポートを有効にしてください。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:40
msgid "Each of the following sections describe the main changes in functionality as you migrate from the SignalFx Instrumentation for .NET to the Splunk Distribution of OpenTelemetry .NET."
msgstr "以下の各セクションでは、SignalFx Instrumentation for .NET から Splunk Distribution of OpenTelemetry .NET への移行に伴う機能の主な変更点について説明します。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:45
msgid "The following table shows SignalFx Instrumentation for .NET environment variables and their OpenTelemetry equivalents:"
msgstr "次の表は、SignalFx Instrumentation for .NET 環境変数と、それに相当する OpenTelemetry 環境変数を示しています："

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:58
msgid "``OTEL_RESOURCE_ATTRIBUTES=version=<version>``"
msgstr "``OTEL_RESOURCE_ATTRIBUTES=version=<version>``"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:61
msgid "``SIGNALFX_TRACE_{<instrumentation>}_ENABLED``"
msgstr "``SIGNALFX_TRACE_{<instrumentation>}_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:62
msgid "``OTEL_DOTNET_AUTO_TRACES_DISABLED_INSTRUMENTATIONS``"
msgstr "``OTEL_DOTNET_AUTO_TRACES_DISABLED_INSTRUMENTATIONS``"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:66
msgid "``OTEL_DOTNET_AUTO_TRACES_DISABLED_INSTRUMENTATIONS``. For a list of supported instrumentations, see :ref:`supported-dotnet-otel-libraries`."
msgstr "``OTEL_DOTNET_AUTO_TRACES_DISABLED_INSTRUMENTATIONS``.サポートされているインストゥルメンテーションのリストは、:ref:`supported-dotnet-otel-libraries` を参照。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:70
msgid "``OTEL_DOTNET_AUTO_HOME``. On Linux, set to ``$HOME/.splunk-otel-dotnet``."
msgstr "``OTEL_DOTNET_AUTO_HOME``.Linuxでは、``$HOME/.splunk-otel-dotnet`` に設定する。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:79
msgid "``SIGNALFX_METRICS_{<metric>}_ENABLED``"
msgstr "``SIGNALFX_METRICS_{<metric>}_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:80
msgid "``OTEL_DOTNET_AUTO_METRICS_ENABLED_INSTRUMENTATIONS`` |br| ``OTEL_DOTNET_AUTO_METRICS_DISABLED_INSTRUMENTATIONS``"
msgstr "``OTEL_DOTNET_AUTO_METRICS_ENABLED_INSTRUMENTATIONS`` |br| ``OTEL_DOTNET_AUTO_METRICS_DISABLED_INSTRUMENTATIONS``"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:93
msgid "``SIGNALFX_TRACE_BUFFER_SIZE``"
msgstr "``SIGNALFX_TRACE_BUFFER_SIZE``"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:94
msgid "``OTEL_BSP_MAX_QUEUE_SIZE``. The default value is ``2048``."
msgstr "``OTEL_BSP_MAX_QUEUE_SIZE``.デフォルト値は``2048`` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:96
msgid "``OTEL_PROPAGATORS``. The default values are ``tracecontext, baggage``. Also available: ``b3multi, b3``."
msgstr "``OTEL_PROPAGATORS``.デフォルト値は``tracecontext, baggage`` 。``b3multi, b3`` 。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:98
msgid "For more information about Splunk Java OTel settings, see :ref:`advanced-dotnet-otel-configuration`."
msgstr "Splunk Java OTel 設定の詳細については、:ref:`advanced-dotnet-otel-configuration` を参照してください。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:103
msgid "The following table shows library-specific environment variables for the SignalFx Instrumentation for .NET and their OpenTelemetry equivalents:"
msgstr "次の表は、SignalFx Instrumentation for .NET と OpenTelemetry のライブラリ固有の環境変数を示しています："

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:118
msgid "Not configurable using environment variable"
msgstr "環境変数では設定できない"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:120 ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:128
msgid "Not configurable using environment variable."
msgstr "環境変数では設定できない。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:122
msgid "Logs are correlated if the ``Microsoft.Extensions.Logging`` is used."
msgstr "``Microsoft.Extensions.Logging`` を使用した場合、ログは相関する。"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:131
msgid "``SIGNALFX_TRACE_RESPONSE_HEADER_ENABLED``"
msgstr "``SIGNALFX_TRACE_RESPONSE_HEADER_ENABLED``"

#: ../../gdi/get-data-in/application/otel-dotnet/troubleshooting/migrate-signalfx-dotnet-to-dotnet-otel.rst:134
msgid "Not applicable. The default behavior is equivalent to setting to previous setting to ``true``."
msgstr "該当なし。デフォルトの動作は、以前の設定を``true`` に設定するのと同じです。"

#: ../../gdi/get-data-in/application/other-languages.rst:-1
msgid "You can send traces to Splunk Observabilty Cloud from applications or services written in programming languages for which a Splunk distribution isn't available."
msgstr "Splunk ディストリビューションが利用できないプログラミング言語で書かれたアプリケーションやサービスから Splunk Observabilty Cloud にトレースを送信できます。"

#: ../../gdi/get-data-in/application/other-languages.rst:10
msgid "You can send traces to Splunk Observabilty Cloud from applications or services written in programming languages for which a Splunk distribution isn't available. See :ref:`get-started-application` for a list of supported languages."
msgstr "Splunk ディストリビューションが利用できないプログラミング言語で書かれたアプリケーションやサービスから Splunk Observabilty Cloud にトレースを送信できます。対応言語一覧は:ref:`get-started-application` を参照。"

#: ../../gdi/get-data-in/application/other-languages.rst:12
msgid "Follow these steps to manually instrument an application to send traces to Splunk APM in Splunk Observability Cloud."
msgstr "以下の手順に従って、Splunk Observability Cloud の Splunk APM にトレースを送信するアプリケーションを手動で計測します。"

#: ../../gdi/get-data-in/application/other-languages.rst:17
msgid "1. Add the required dependencies or packages"
msgstr "1.必要な依存関係やパッケージを追加する"

#: ../../gdi/get-data-in/application/other-languages.rst:19
msgid "To instrument your application for Splunk Observability Cloud, you need to generate traces and spans that follow the OpenTelemetry format and semantic conventions. Add the required OpenTelemetry dependencies to your project, including gRPC communication libraries for communicating with the Splunk OpenTelemetry Collector."
msgstr "アプリケーションを Splunk Observability Cloud 用に計測するには、OpenTelemetry フォーマットとセマンティック規約に従ったトレースとスパンを生成する必要があります。Splunk OpenTelemetry Collector と通信するための gRPC 通信ライブラリなど、必要な OpenTelemetry 依存関係をプロジェクトに追加します。"

#: ../../gdi/get-data-in/application/other-languages.rst:23 ../../gdi/get-data-in/application/other-languages.rst:77
msgid "Erlang"
msgstr "アーラン"

#: ../../gdi/get-data-in/application/other-languages.rst:25
msgid "Add the OpenTelemetry packages to the list of dependencies in your rebar.config file:"
msgstr "rebar.config ファイルの依存リストに OpenTelemetry パッケージを追加します："

#: ../../gdi/get-data-in/application/other-languages.rst:35
msgid "You also must add them to the ``Applications`` section, together with gRPC libraries:"
msgstr "また、gRPCライブラリと一緒に``Applications`` ："

#: ../../gdi/get-data-in/application/other-languages.rst:49 ../../gdi/get-data-in/application/other-languages.rst:91 ../../gdi/get-data-in/application/other-languages.rst:155
msgid "Rust"
msgstr "さび"

#: ../../gdi/get-data-in/application/other-languages.rst:51
msgid "Add the required dependencies to the cargo.toml file:"
msgstr "必要な依存関係を cargo.toml ファイルに追加します："

#: ../../gdi/get-data-in/application/other-languages.rst:71
msgid "2. Initialize the OpenTelemetry tracer"
msgstr "2.OpenTelemetryトレーサーを初期化する"

#: ../../gdi/get-data-in/application/other-languages.rst:73
msgid "In your application code, initialize the OpenTelemetry library and tracer like in the following examples:"
msgstr "アプリケーションコードで、以下の例のようにOpenTelemetryライブラリとトレーサーを初期化します："

#: ../../gdi/get-data-in/application/other-languages.rst:79
msgid "Include the OpenTelemetry tracer in your application code."
msgstr "アプリケーションコードにOpenTelemetryトレーサーを含める。"

#: ../../gdi/get-data-in/application/other-languages.rst:89
msgid "Erlang automatically initializes the tracer."
msgstr "Erlangは自動的にトレーサーを初期化します。"

#: ../../gdi/get-data-in/application/other-languages.rst:93 ../../gdi/get-data-in/application/other-languages.rst:157
msgid "Add the required modules and initialize the tracer:"
msgstr "必要なモジュールを追加し、トレーサーを初期化する："

#: ../../gdi/get-data-in/application/other-languages.rst:130
msgid "3. Generate spans for your application"
msgstr "3.アプリケーションのスパンを生成する"

#: ../../gdi/get-data-in/application/other-languages.rst:132
msgid "In your application code, create spans for the operations you want to track. How you create spans differs depending on the target programming language."
msgstr "アプリケーション・コードで、追跡したい操作のスパンを作成する。スパンの作成方法は、対象となるプログラミング言語によって異なる。"

#: ../../gdi/get-data-in/application/other-languages.rst:134
msgid "The following examples show how to create spans that have attributes or tags:"
msgstr "以下の例では、属性やタグを持つスパンの作成方法を示しています："

#: ../../gdi/get-data-in/application/other-languages.rst:197
msgid "By default, all telemetry goes to the local instance of the Splunk Distribution of OpenTelemetry Collector."
msgstr "デフォルトでは、すべての遠隔測定は OpenTelemetry Collector の Splunk ディストリビューションのローカルインスタンスに送られます。"

#: ../../gdi/get-data-in/application/other-languages.rst:199
msgid "If you need to send data directly to Splunk Observability Cloud, set the following environment variables. When instrumenting Rust applications or services you might need to read the values of the environment variables first."
msgstr "Splunk Observability Cloud に直接データを送信する必要がある場合は、以下の環境変数を設定します。Rustアプリケーションやサービスをインストゥルメントする場合、まず環境変数の値を読み込む必要があるかもしれない。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:-1
msgid "Configure the SignalFx Tracing Library for PHP to suit most of your instrumentation needs."
msgstr "SignalFx Tracing Library for PHPを設定することで、ほとんどの計測ニーズに対応できます。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:6
msgid "Configure the PHP instrumentation for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用の PHP インストルメンテーションを設定する"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:11
msgid "The following sections describe all available settings for configuring the SignalFx Tracing Library for PHP."
msgstr "以下のセクションでは、SignalFx Tracing Library for PHP の設定について説明します。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:18 ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:19
msgid "The following settings are specific to the Splunk Distribution of OpenTelemetry Python:"
msgstr "以下の設定は、OpenTelemetry Python の Splunk ディストリビューション固有のものです："

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:26
msgid "Service name in Splunk Observability Cloud. The default value is ``unnamed-php-service``."
msgstr "Splunk Observability Cloud のサービス名。デフォルト値は``unnamed-php-service`` 。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:28
msgid "Endpoint URL. The default value is ``http://localhost:9080/v1/trace``."
msgstr "エンドポイントのURL。デフォルト値は``http://localhost:9080/v1/trace`` 。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:30
msgid "Whether to activate automatic tracer creation and instrumentation. The default value is ``true``."
msgstr "トレーサーの自動作成と計測を有効にするかどうか。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:31
msgid "``SIGNALFX_TRACE_CLI_ENABLED``"
msgstr "``SIGNALFX_TRACE_CLI_ENABLED``"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:32
msgid "Whether to activate automatic tracer creation and instrumentation for the ``cli`` SAPI. See :ref:`tracing-cli-sessions` for more information. The default value is ``false``."
msgstr "``cli`` SAPIの自動トレーサー作成とインスツルメンテーションを有効にするかどうか。詳しくは:ref:`tracing-cli-sessions` 。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:34
msgid "Whether to activate debug logging. The default value is ``false``."
msgstr "デバッグ・ロギングを有効にするかどうか。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:35
msgid "``SIGNALFX_DISTRIBUTED_TRACING``"
msgstr "``SIGNALFX_DISTRIBUTED_TRACING``"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:36
msgid "Whether to activate B3 context propagation. The default value is ``true``."
msgstr "B3コンテキストの伝播を有効にするかどうか。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:38
msgid "Maximum length an attribute value can have. Values longer than this are truncated.       The default value is ``1200``."
msgstr "属性値の最大長。これより長い値は切り捨てられる。      デフォルト値は``1200`` 。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:39
msgid "``SIGNALFX_CAPTURE_ENV_VARS``"
msgstr "``SIGNALFX_CAPTURE_ENV_VARS``"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:40
msgid "List of environment variables to attach to the root span, separated by commas."
msgstr "ルート・スパンにアタッチする環境変数をカンマ区切りで列挙する。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:41
msgid "``SIGNALFX_CAPTURE_REQUEST_HEADERS``"
msgstr "``SIGNALFX_CAPTURE_REQUEST_HEADERS``"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:42
msgid "Comma-separated list of incoming request headers to turn into spans. For example, ``User-Agent`` is captured as ``http.request.headers.user_agent``."
msgstr "スパンに変換するリクエストヘッダのカンマ区切りリスト。例えば、``User-Agent`` は``http.request.headers.user_agent`` としてキャプチャされる。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:44
msgid "Splunk authentication token that lets the library send data directly to Splunk Observability Cloud. Unset by default. Not required unless you need to send data to the Splunk Observability Cloud ingest endpoint. See :ref:`export-directly-to-olly-cloud-php` for more information."
msgstr "ライブラリから Splunk Observability Cloud に直接データを送信するための Splunk 認証トークン。デフォルトでは未設定。Splunk Observability Cloud インジェストエンドポイントにデータを送信する必要がなければ不要です。詳しくは:ref:`export-directly-to-olly-cloud-php` 。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:49
msgid "Tracing CLI sessions"
msgstr "CLIセッションのトレース"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:51
msgid "To trace the CLI SAPI functionality, you have to activate it manually using the ``SIGNALFX_TRACE_CLI_ENABLED`` environment variable. When you activate CLI tracing, the instrumentation automatically creates a root span to track the lifetime of your CLI session."
msgstr "CLI SAPI機能をトレースするには、``SIGNALFX_TRACE_CLI_ENABLED`` 環境変数を使用して手動で有効にする必要があります。CLIトレースを有効にすると、インスツルメンテーションは自動的にルート・スパンを作成し、CLIセッションのライフタイムを追跡します。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:59
msgid "This SAPI is deactivated by default to avoid undesired tracing of system activity."
msgstr "このSAPIは、システム活動の望ましくないトレースを避けるため、デフォルトでは無効になっている。"

#: ../../gdi/get-data-in/application/php/configuration/advanced-php-configuration.rst:75
msgid "If you need to deactivate trace response headers, set ``SIGNALFX_TRACE_RESPONSE_HEADER_ENABLED`` to ``false`` or set the ``signalfx.trace.response_header_enabled`` option in your INI file to ``false``."
msgstr "トレースレスポンスヘッダーを無効にする必要がある場合は、``SIGNALFX_TRACE_RESPONSE_HEADER_ENABLED`` を``false`` に設定するか、INI ファイルの``signalfx.trace.response_header_enabled`` オプションを``false`` に設定してください。"

#: ../../gdi/get-data-in/application/php/get-started.rst:10 ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:43
msgid "Instrument a PHP application"
msgstr "PHPアプリケーションをインストルメントする"

#: ../../gdi/get-data-in/application/php/get-started.rst:10
msgid "Configure the PHP instrumentation"
msgstr "PHPインスツルメンテーションの設定"

#: ../../gdi/get-data-in/application/php/get-started.rst:-1
msgid "Instrument a PHP application to export metrics and spans to Splunk Observability Cloud."
msgstr "メトリクスとスパンを Splunk Observability Cloud にエクスポートするために PHP アプリケーションをインストルメントする。"

#: ../../gdi/get-data-in/application/php/get-started.rst:5
msgid "Instrument PHP applications for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用に PHP アプリケーションをインストゥルメントする"

#: ../../gdi/get-data-in/application/php/get-started.rst:18
msgid "The SignalFx Tracing Library for PHP provides automatic instrumentations for many popular PHP libraries and frameworks. The library is a native extension that supports PHP versions 7.0 or higher running on the Zend Engine."
msgstr "PHP用のSignalFx Tracing Libraryは、多くの一般的なPHPライブラリとフレームワークの自動インストルメンテーションを提供します。このライブラリはネイティブの拡張モジュールで、Zend Engine 上で動作する PHP バージョン 7.0 以降をサポートしています。"

#: ../../gdi/get-data-in/application/php/get-started.rst:20
msgid "To instrument your PHP application, follow these steps:"
msgstr "PHP アプリケーションを計測するには、以下の手順を実行します："

#: ../../gdi/get-data-in/application/php/get-started.rst:22
msgid "Check compatibility and requirements. See :ref:`php-requirements`."
msgstr "互換性と必要条件を確認してください。:ref:`php-requirements` を参照。"

#: ../../gdi/get-data-in/application/php/get-started.rst:23
msgid "Instrument your PHP application. See :ref:`instrument-php-applications`."
msgstr "PHPアプリケーションを計測する。:ref:`instrument-php-applications` を参照。"

#: ../../gdi/get-data-in/application/php/get-started.rst:24
msgid "Configure your instrumentation. See :ref:`advanced-php-configuration`."
msgstr "計測器を設定する。:ref:`advanced-php-configuration` を参照。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:-1
msgid "The SignalFx Tracing Library for PHP automatically instruments PHP applications. Follow these steps to get started."
msgstr "SignalFx Tracing Library for PHPは、PHPアプリケーションを自動的に計測します。以下の手順で始めましょう。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:5
msgid "Instrument a PHP application for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用の PHP アプリケーションをインストルメントする"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:10
msgid "The SignalFx Tracing Library for PHP automatically instruments PHP applications."
msgstr "SignalFx Tracing Library for PHPは、PHPアプリケーションを自動的に計測します。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:17
msgid "To generate all the basic installation commands for your environment and application, use the PHP guided setup. To access the PHP guided setup, follow these steps:"
msgstr "あなたの環境やアプリケーションにあった基本的なインストールコマンドをすべて生成するには、PHPガイド付きセットアップを使用します。PHPガイド付きセットアップにアクセスするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:20
msgid "Open the :new-page:`PHP guided setup <https://login.signalfx.com/#/gdi/scripted/php-tracing/step-1?category=product-apm&gdiState=%7B\"integrationId\":\"php-tracing\"%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`PHPガイド付きセットアップ<https://login.signalfx.com/#/gdi/scripted/php-tracing/step-1?category=product-apm&gdiState=%7B\"integrationId\":\"php-tracing\"%7D>` を開いてください。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:30
msgid "Select the :guilabel:`PHP` tile to open the PHP guided setup."
msgstr ":guilabel:`PHP` タイルを選択し、PHPガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:33
msgid "Install the SignalFx Tracing Library for PHP manually"
msgstr "SignalFx Tracing Library for PHPを手動でインストールします。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:35
msgid "Follow these instructions to install the SignalFx Tracing Library for PHP:"
msgstr "以下の手順に従って、SignalFx Tracing Library for PHPをインストールしてください："

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:37
msgid ":ref:`install-php-instrumentation`"
msgstr ":ref:`install-php-instrumentation`"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:47
msgid "Check that you meet the requirements. See :ref:`php-requirements`."
msgstr "あなたが条件を満たしていることを確認してください。:ref:`php-requirements` を参照。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:49
msgid "Download the installation script from the following location:"
msgstr "以下の場所からインストールスクリプトをダウンロードしてください："

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:55
msgid "Install by running the installation script:"
msgstr "インストールスクリプトを実行してインストールする："

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:61
msgid "If you omit the ``--php-bin`` option, you can interactively select the PHP installation."
msgstr "``--php-bin`` オプションを省略すると、対話的に PHP のインストールを選択することができます。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:67 ../../gdi/monitors-hosts/apache-httpserver.md:82
msgid "Apache configuration"
msgstr "Apacheの設定"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:77
msgid "Terminal"
msgstr "ターミナル"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:85
msgid "Set environment variables globally or using the start script of your PHP application."
msgstr "環境変数をグローバルに設定するか、PHP アプリケーションのスタートスクリプトを使用します。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:87
msgid "Restart your server."
msgstr "サーバーを再起動してください。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:89
msgid "If you need to add custom attributes to spans or want to manually generate spans, instrument your PHP application or service manually. See :ref:`php-manual-instrumentation`."
msgstr "スパンにカスタム属性を追加する必要がある場合や、スパンを手動で生成したい場合は、PHPアプリケーションやサービスを手動で計測してください。:ref:`php-manual-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:94
msgid "INI file settings"
msgstr "INIファイルの設定"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:96
msgid "If you don't set any environment variable, the library extracts default values from the INI file. The prefix for settings defined using environment variables that start with ``SIGNALFX_TRACE_`` is ``signalfx.trace.``. For all other environment variables that start with ``SIGNALFX_`` the prefix is ``signalfx.``."
msgstr "環境変数を設定しない場合、ライブラリーはINIファイルからデフォルト値を抽出する。``SIGNALFX_TRACE_`` で始まる環境変数を使用して定義された設定の接頭辞は``signalfx.trace.`` です。``SIGNALFX_`` で始まるその他の環境変数のプレフィックスは``signalfx.`` 。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:98
msgid "You can use the ``signalfx-setup.php`` script to set INI file options without having to manually locate each file. For example:"
msgstr "``signalfx-setup.php`` スクリプトを使用すると、手動で各ファイルを探すことなく INI ファイルオプションを設定できます。例えば、こうだ："

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:104
msgid "This is useful for options common to all PHP services running in the system, like endpoints."
msgstr "これは、エンドポイントなど、システムで動作するすべての PHP サービスに共通するオプションを指定する際に便利です。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:109
msgid "Deploy the PHP instrumentation in Docker"
msgstr "PHPインストルメンテーションをDockerにデプロイする"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:111
msgid "You can deploy the PHP instrumentation using Docker. Follow these steps to get started:"
msgstr "Dockerを使ってPHPインストルメンテーションをデプロイできる。以下の手順で始めましょう："

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:113
msgid "Create a startup shell script in a location Docker can access. The script can have any name, for example setup.sh."
msgstr "Dockerがアクセスできる場所にスタートアップ・シェルスクリプトを作成する。スクリプトは、例えばsetup.shのように、任意の名前を付けることができる。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:115
msgid "Edit the startup shell script to export the environment variables described in :ref:`install-php-instrumentation`."
msgstr ":ref:`install-php-instrumentation` に記載されている環境変数をエクスポートするように、起動シェルスクリプトを編集する。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:117
msgid "Add the following commands to the startup shell script to initialize the PHP instrumentation:"
msgstr "起動シェルスクリプトに以下のコマンドを追加し、PHPインスツルメンテーションを初期化します："

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:127
msgid "Add a line to the script to start the application using ``supervisorctl``, ``supervisord``, ``systemd``, or similar. The following example uses ``supervisorctl``:"
msgstr "スクリプトに、``supervisorctl`` 、``supervisord`` 、``systemd`` などを使ってアプリケーションを起動する行を追加する。以下の例では、``supervisorctl`` を使用しています："

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:133
msgid "Add a command to run the newly created shell script at the end of the Dockerfile."
msgstr "Dockerfileの最後に、新しく作成したシェルスクリプトを実行するコマンドを追加する。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:135
msgid "Rebuild the container using ``docker build``."
msgstr "``docker build`` を使ってコンテナを再構築する。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:137
msgid "Make sure to deactivate the ``Xdebug`` extension completely, as it's not compatible with the PHP instrumentation."
msgstr "PHPのインスツルメンテーションと互換性がないので、``Xdebug`` 拡張機能を完全に無効にしてください。"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:142
msgid "Deploy the PHP instrumentation in Kubernetes"
msgstr "KubernetesにPHPインスツルメンテーションをデプロイする"

#: ../../gdi/get-data-in/application/php/instrumentation/instrument-php-application.rst:144
msgid "To deploy the PHP instrumentation in Kubernetes, configure the Kubernetes Downward API to expose environment variables to Kubernetes resources."
msgstr "KubernetesにPHPインスツルメンテーションをデプロイするには、Kubernetesのリソースに環境変数を公開するようにKubernetes Downward APIを設定する。"

#: ../../gdi/get-data-in/application/php/instrumentation/php-manual-instrumentation.rst:-1
msgid "Manually instrument your PHP application to add custom attributes to spans or manually generate spans. Keep reading to learn how to manually instrument your PHP application for Splunk Observability Cloud."
msgstr "スパンにカスタム属性を追加したり、スパンを手動で生成したりするために、PHPアプリケーションに手動でインスツルメンテーションを行います。Splunk Observability Cloud 用に PHP アプリケーションを手動で計測する方法について説明します。"

#: ../../gdi/get-data-in/application/php/instrumentation/php-manual-instrumentation.rst:5
msgid "Manually instrument PHP applications for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用に PHP アプリケーションを手動でインストルメントする"

#: ../../gdi/get-data-in/application/php/instrumentation/php-manual-instrumentation.rst:10
msgid "The SignalFx Tracing Library for PHP provides and registers an OpenTracing-compatible global tracer that you can use to instrument your applications manually for Splunk Observability Cloud. Custom or manual instrumentation can be helpful when you need to add custom attributes to spans, or need to generate spans manually."
msgstr "SignalFx Tracing Library for PHP は、OpenTracing 互換のグローバルトレーサーを提供および登録し、Splunk Observability Cloud 用にアプリケーションを手動で計測するために使用できます。カスタムまたは手動のインスツルメンテーションは、スパンにカスタム属性を追加する必要がある場合や、スパンを手動で生成する必要がある場合に役立ちます。"

#: ../../gdi/get-data-in/application/php/instrumentation/php-manual-instrumentation.rst:12
msgid "The following example shows how to create a custom span and attach a tag to it:"
msgstr "次の例は、カスタム・スパンを作成し、それにタグを付ける方法を示しています："

#: ../../gdi/get-data-in/application/php/php-requirements.rst:-1
msgid "This is what you need to instrument PHP applications for Splunk Observability Cloud."
msgstr "これは、PHP アプリケーションを Splunk Observability Cloud 用に計測するために必要なものです。"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:5
msgid "PHP instrumentation compatibility and requirements"
msgstr "PHP計測器の互換性と要件"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:10
msgid "The SignalFx Tracing Library for PHP supports PHP version 7.0 or higher running on the Zend engine."
msgstr "SignalFx Tracing Library for PHP は、Zend エンジン上で動作する PHP バージョン 7.0 以降をサポートしています。"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:12
msgid "Supported web servers are:"
msgstr "対応しているウェブサーバーは以下の通り："

#: ../../gdi/get-data-in/application/php/php-requirements.rst:14 ../../gdi/opentelemetry/collector-architecture.rst:159
msgid "Apache"
msgstr "アパッチ"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:15 ../../gdi/opentelemetry/collector-architecture.rst:165
msgid "php-fpm"
msgstr "php-fpm"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:16
msgid "php-cli"
msgstr "php-cli"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:18
msgid "The library is not compatible with Windows environments."
msgstr "このライブラリはWindows環境には対応していません。"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:25
msgid "The SignalFx Tracing Library for PHP instruments the following libraries and frameworks:"
msgstr "PHP用のSignalFx Tracing Libraryは、以下のライブラリとフレームワークを使用します："

#: ../../gdi/get-data-in/application/php/php-requirements.rst:33
msgid "Version"
msgstr "バージョン"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:34
msgid "CakePHP"
msgstr "CakePHP"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:35
msgid "2.x"
msgstr "2.x"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:36
msgid "CodeIgniter"
msgstr "CodeIgniter"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:37
msgid "2.2 and higher"
msgstr "2.2以上"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:38
msgid "Curl"
msgstr "カール"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:39 ../../gdi/get-data-in/application/php/php-requirements.rst:53 ../../gdi/get-data-in/application/php/php-requirements.rst:57 ../../gdi/get-data-in/application/php/php-requirements.rst:61
msgid "All supported PHP versions"
msgstr "サポートされているすべてのPHPバージョン"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:40
msgid "Drupal"
msgstr "ドラパル"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:41
msgid "7.x, 8.x, and 9.x"
msgstr "7.x、8.x、9.x"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:42
msgid "ElasticSearch"
msgstr "ElasticSearch"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:43
msgid "1.x"
msgstr "1.x"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:44
msgid "Eloquent"
msgstr "雄弁"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:45
msgid "All supported Laravel versions"
msgstr "サポートされているすべてのLaravelバージョン"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:46
msgid "Guzzle"
msgstr "ガズル"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:47
msgid "5.0 and higher"
msgstr "5.0以上"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:48
msgid "Laravel"
msgstr "ララベル"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:49
msgid "4.2 or 5.0 and higher"
msgstr "4.2または5.0以上"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:50
msgid "Lumen"
msgstr "ルーメン"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:51
msgid "5.2 to 5.8"
msgstr "5.2から5.8"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:52 ../../gdi/monitors-cache/memcached.md:2 ../../gdi/opentelemetry/collector-architecture.rst:162
msgid "Memcached"
msgstr "メムキャッシュ"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:54 ../../gdi/monitors-databases/mongodb.md:2 ../../gdi/opentelemetry/collector-architecture.rst:196
msgid "MongoDB"
msgstr "MongoDB"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:55
msgid "1.4"
msgstr "1.4"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:56
msgid "MySQLi"
msgstr "MySQLi"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:58
msgid "Nette"
msgstr "ネッテ"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:59
msgid "2.4, 3.x"
msgstr "2.4, 3.x"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:60
msgid "PDO"
msgstr "PDO"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:62
msgid "Predis"
msgstr "プレディス"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:63
msgid "1.1"
msgstr "1.1"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:64
msgid "Slim"
msgstr "スリム"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:65
msgid "3.x"
msgstr "3.x"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:66
msgid "Symfony"
msgstr "Symfony"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:67
msgid "3.3, 3.4, 4.x, 5.x"
msgstr "3.3、3.4、4.x、5.x"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:68
msgid "Wordpress"
msgstr "ワードプレス"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:69
msgid "4.8, 5.5 and higher"
msgstr "4.8、5.5以上"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:70
msgid "Yii"
msgstr "イイ"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:71
msgid "2.0"
msgstr "2.0"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:72
msgid "Zend"
msgstr "ゼット"

#: ../../gdi/get-data-in/application/php/php-requirements.rst:73
msgid "1.12"
msgstr "1.12"

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:-1
msgid "Configure the agent of the Splunk Distribution of OpenTelemetry Python to suit most of your instrumentation needs, like correlating traces with logs, activating exporters, and more."
msgstr "OpenTelemetry Python の Splunk ディストリビューションのエージェントを設定することで、トレースとログの関連付けや、エクスポータの有効化など、ほとんどの計測ニーズに対応できます。"

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:5
msgid "Configure the Python agent for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用の Python エージェントを設定する"

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:10
msgid "You can configure the Python agent from the Splunk Distribution of OpenTelemetry Python to suit your instrumentation needs. In most cases, modifying the basic configuration is enough to get started."
msgstr "OpenTelemetry Python の Splunk ディストリビューションの Python エージェントを、計測のニーズに合わせて設定することができます。たいていの場合、基本的なコンフィギュレーションを変更するだけで始められる。"

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:12
msgid "The following sections describe all available settings for configuring the Python agent, including options for activating new features that are unique to the Splunk Distribution of OpenTelemetry Python."
msgstr "以下のセクションでは、OpenTelemetry Python の Splunk ディストリビューション独自の新機能を有効にするオプションを含め、Python エージェントを設定するために利用可能なすべての設定について説明します。"

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:29
msgid "Activates the addition of server trace information to HTTP response headers. For more information, see :ref:`server-trace-information-python`. The default value is ``true``."
msgstr "HTTP レスポンスヘッダーへのサーバートレース情報の追加を有効にする。詳細は:ref:`server-trace-information-python` を参照。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:44
msgid "Activates tracer creation and autoinstrumentation. The default value is ``true``."
msgstr "トレーサー作成と自動計測を有効にする。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:60
msgid "Maximum length of strings for attribute values. Values larger than the limit are truncated. The default value is ``1200``."
msgstr "属性値の文字列の最大長。制限値より大きな値は切り捨てられる。デフォルト値は``1200`` 。"

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:75
msgid "Trace exporter to use. You can set multiple comma-separated values (for example, ``otlp,console``). The default value is ``otlp``. To select the Jaeger exporter, use ``jaeger-thrift-splunk``."
msgstr "使用するトレースエクスポーター。コンマで区切られた複数の値を設定することができます（たとえば、``otlp,console`` ）。デフォルト値は``otlp`` 。イェーガー・エクスポーターを選択するには、``jaeger-thrift-splunk`` を使用します。"

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:78 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:72
msgid "``OTEL_EXPORTER_JAEGER_ENDPOINT``"
msgstr "``OTEL_EXPORTER_JAEGER_ENDPOINT``"

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:79
msgid "The Jaeger endpoint. The default value is ``http://localhost:9080/v1/trace``."
msgstr "イェーガーの終点。デフォルト値は``http://localhost:9080/v1/trace`` 。"

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:81
msgid "The Splunk Distribution of OpenTelemetry Python uses the OTLP gRPC span exporter by default. If you're still using the Smart Agent (now deprecated), or if you want to send traces directly to the Splunk Observability Cloud ingest endpoint, use the Jaeger exporter."
msgstr "OpenTelemetry Python の Splunk ディストリビューションは、デフォルトで OTLP gRPC span エクスポーターを使用します。Smart Agent (現在は非推奨) をまだ使用している場合、またはトレースを Splunk Observability Cloud インジェストエンドポイントに直接送信したい場合は、Jaeger エクスポーターを使用してください。"

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:98
msgid "For backward compatibility with the SignalFx Python Tracing Library, use the b3multi trace propagator:"
msgstr "SignalFx Python Tracing Libraryとの後方互換性のために、b3multiトレースプロパゲータを使用してください："

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:129
msgid "Configure the Python agent in your code"
msgstr "コード内でPythonエージェントを設定する"

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:131
msgid "If you can't set environment variables or can't use ``splunk-py-trace`` for setting configuration values at runtime, define the configuration settings in your code."
msgstr "環境変数を設定できない場合、または実行時に設定値を設定するために``splunk-py-trace`` 。"

#: ../../gdi/get-data-in/application/python/configuration/advanced-python-otel-configuration.rst:133
msgid "The following example shows how all the configuration options you can pass to ``start_tracing()`` as arguments:"
msgstr "次の例では、``start_tracing()`` に引数として渡せるすべての設定オプションがどのようなものかを示している："

#: ../../gdi/get-data-in/application/python/get-started.rst:11
msgid "Instrument a Python application"
msgstr "Pythonアプリケーションを計測する"

#: ../../gdi/get-data-in/application/python/get-started.rst:11 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:126
msgid "Configure the Python agent"
msgstr "Pythonエージェントの設定"

#: ../../gdi/get-data-in/application/python/get-started.rst:11
msgid "Additional steps for frameworks"
msgstr "フレームワークのための追加ステップ"

#: ../../gdi/get-data-in/application/python/get-started.rst:11
msgid "Troubleshoot the Python instrumentation"
msgstr "Pythonインスツルメンテーションのトラブルシューティング"

#: ../../gdi/get-data-in/application/python/get-started.rst:11
msgid "About Splunk OTel Python"
msgstr "Splunk OTel Python について"

#: ../../gdi/get-data-in/application/python/get-started.rst:11
msgid "Migrate from SignalFx Python agent"
msgstr "SignalFx Pythonエージェントからの移行"

#: ../../gdi/get-data-in/application/python/get-started.rst:-1
msgid "Instrument Python applications automatically to export spans and metrics to Splunk Observability Cloud."
msgstr "スパンとメトリクスを Splunk Observability Cloud にエクスポートするために、Python アプリケーションを自動的に計測します。"

#: ../../gdi/get-data-in/application/python/get-started.rst:5
msgid "Instrument Python applications for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用の Python アプリケーションを構築する"

#: ../../gdi/get-data-in/application/python/get-started.rst:24
msgid "The Splunk Distribution of OpenTelemetry Python provides a Python agent that automatically adds APM instrumentation to your Python application. The instrumentation captures distributed traces and sends them to Splunk Observability Cloud."
msgstr "Splunk Distribution of OpenTelemetry Python は、Python アプリケーションに APM 測定機能を自動的に追加する Python エージェントを提供します。インスツルメンテーションは分散トレースをキャプチャし、Splunk Observability Cloud に送信する。"

#: ../../gdi/get-data-in/application/python/get-started.rst:26
msgid "To instrument your Python application, follow these steps:"
msgstr "Pythonアプリケーションを計測するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/python/get-started.rst:28
msgid "Check compatibility and requirements. See :ref:`python-otel-requirements`."
msgstr "互換性と必要条件を確認してください。:ref:`python-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/python/get-started.rst:29
msgid "Instrument your Python application. See :ref:`instrument-python-applications`."
msgstr "Pythonアプリケーションを計測する。:ref:`instrument-python-applications` を参照。"

#: ../../gdi/get-data-in/application/python/get-started.rst:30
msgid "Configure your instrumentation. See :ref:`configure-python-instrumentation`."
msgstr "計測器を設定する。:ref:`configure-python-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/python/get-started.rst:32
msgid "For more information, see :ref:`splunk-python-otel-dist`."
msgstr "詳細は:ref:`splunk-python-otel-dist` を参照。"

#: ../../gdi/get-data-in/application/python/get-started.rst:34
msgid "The SignalFx Python Agent is deprecated and will reach End of Support on December 17th, 2022. To migrate to the Splunk Distribution of OpenTelemetry Python, see :ref:`migrate-signalfx-python-agent-to-otel`."
msgstr "SignalFx Python Agentは非推奨となり、2022年12月17日にサポート終了となります。OpenTelemetry Python を Splunk ディストリビューションに移行するには、:ref:`migrate-signalfx-python-agent-to-otel` を参照してください。"

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:-1
msgid "You can configure the logging module of the Python standard library to include tracing attributes provided automatically by Splunk OTel Python agent. Use the trace metadata to correlate traces with log events and explore logs in Splunk Observability Cloud."
msgstr "Python 標準ライブラリのロギングモジュールを設定して、Splunk OTel Python エージェントが自動的に提供するトレース属性を含めることができます。トレースメタデータを使用して、トレースとログイベントを関連付け、Splunk Observability Cloud でログを探索します。"

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:5
msgid "Connect Python trace data with logs for Splunk Observability Cloud"
msgstr "Python のトレースデータを Splunk Observability Cloud のログに接続する"

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:10
msgid "You can configure the logging module of Python standard library to include tracing attributes provided automatically by the Splunk OTel Python agent. Use the trace metadata to correlate traces with log events and explore logs in Splunk."
msgstr "Python 標準ライブラリのロギングモジュールを設定して、Splunk OTel Python エージェントが自動的に提供するトレース属性を含めることができます。トレースメタデータを使用して、トレースとログイベントを関連付け、Splunk でログを探索します。"

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:12
msgid "To include trace metadata in application logs, follow these steps:"
msgstr "アプリケーションログにトレースメタデータを含めるには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:14
msgid ":ref:`python-include-trace-data`"
msgstr ":ref:`python-include-trace-data`"

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:15
msgid "(Optional) :ref:`disable-trace-log-python`"
msgstr "(オプション） :ref:`disable-trace-log-python`"

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:22
msgid "The Splunk OTel Python agent provides the following attributes for the logging module in the standard library:"
msgstr "Splunk OTel Python エージェントは、標準ライブラリのロギングモジュールに以下の属性を提供します："

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:24
msgid "Trace information: ``otelTraceID`` and ``otelSpanID``"
msgstr "トレース情報：``otelTraceID``  ``otelSpanID``"

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:25
msgid "Resource attributes: ``otelServiceName``"
msgstr "リソース属性： ``otelServiceName``"

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:27
msgid "The integration uses the following logging format by default:"
msgstr "統合は、デフォルトで以下のロギング形式を使用します："

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:34
msgid "Customize format and level of log statements"
msgstr "ログ文のフォーマットとレベルのカスタマイズ"

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:36
msgid "You can change the format and level of log statements by setting the following environment variables:"
msgstr "以下の環境変数を設定することで、ログ文のフォーマットやレベルを変更できる："

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:38
msgid "``OTEL_PYTHON_LOG_FORMAT``"
msgstr "``OTEL_PYTHON_LOG_FORMAT``"

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:39
msgid "``OTEL_PYTHON_LOG_LEVEL``: Options are ``info``, ``error``, ``debug``, and ``warning``"
msgstr "``OTEL_PYTHON_LOG_LEVEL``:オプションは、``info`` 、``error`` 、``debug`` 、および ``warning``"

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:41
msgid "Alternatively, you can pass new values to the ``LoggingInstrumentor`` as arguments:"
msgstr "あるいは、``LoggingInstrumentor`` に新しい値を引数として渡すこともできる："

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:43
#, python-format
msgid "``LoggingInstrumentor(logging_format='%(msg)s [span_id=%(span_id)s]')``"
msgstr "``LoggingInstrumentor(logging_format='%(msg)s [span_id=%(span_id)s]')``"

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:44
msgid "``LoggingInstrumentor(log_level=logging.DEBUG)``"
msgstr "``LoggingInstrumentor(log_level=logging.DEBUG)``"

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:49
msgid "Deactivate log correlation"
msgstr "ログの相関を無効にする"

#: ../../gdi/get-data-in/application/python/instrumentation/connect-traces-logs.rst:51
msgid "To deactivate the injection of trace metadata, set the ``OTEL_PYTHON_LOG_CORRELATION`` environment variable to ``false``."
msgstr "トレースメタデータの注入を無効にするには、環境変数``OTEL_PYTHON_LOG_CORRELATION`` を``false`` に設定する。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:-1
msgid "The Splunk OpenTelemetry Python agent can automatically instrument your Python application or service. Follow these steps to get started."
msgstr "Splunk OpenTelemetry Python エージェントは、Python アプリケーションやサービスを自動的に計測することができます。以下の手順で始めましょう。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:5
msgid "Instrument a Python application for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用 Python アプリケーションをインストルメントする"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:10
msgid "The Python agent from the Splunk Distribution of OpenTelemetry Python can automatically instrument your Python application by dynamically patching supported libraries."
msgstr "OpenTelemetry Python の Splunk ディストリビューションの Python エージェントは、サポートされているライブラリに動的にパッチを適用することで、Python アプリケーションを自動的に計測することができます。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:17
msgid "To generate all the basic installation commands for your environment and application, use the Python guided setup. To access the Python guided setup, follow these steps:"
msgstr "あなたの環境とアプリケーションのための基本的なインストールコマンドをすべて生成するには、Pythonガイド付きセットアップを使用します。Pythonガイド付きセットアップにアクセスするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:20
msgid "Open the :new-page:`Python guided setup <https://login.signalfx.com/#/gdi/scripted/python-tracing/step-1?category=product-apm&gdiState=%7B\"integrationId\":\"python-tracing\"%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`Python guided setup<https://login.signalfx.com/#/gdi/scripted/python-tracing/step-1?category=product-apm&gdiState=%7B\"integrationId\":\"python-tracing\"%7D>` を開いてください。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:30
msgid "Select the :guilabel:`Python` tile to open the Python guided setup."
msgstr ":guilabel:`Python` タイルを選択し、Pythonガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:33
msgid "Install the Splunk Distribution of OpenTelemetry Python manually"
msgstr "OpenTelemetry Python の Splunk ディストリビューションを手動でインストールする"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:35
msgid "Follow these instructions to install the Splunk Distribution of OpenTelemetry Python:"
msgstr "以下の手順に従って、OpenTelemetry Python の Splunk ディストリビューションをインストールしてください："

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:37
msgid ":ref:`install-enable-python-agent`"
msgstr ":ref:`install-enable-python-agent`"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:38 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:38
msgid ":ref:`configure-python-instrumentation`"
msgstr ":ref:`configure-python-instrumentation`"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:43
msgid "Install and activate the Python agent"
msgstr "Pythonエージェントのインストールと有効化"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:45
msgid "Follow these steps to automatically instrument your application using the Python agent:"
msgstr "以下の手順に従って、Pythonエージェントを使用してアプリケーションを自動的に計測してください："

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:47
msgid "Check that you meet the requirements. See :ref:`python-otel-requirements`."
msgstr "あなたが条件を満たしていることを確認してください。:ref:`python-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:49
msgid "Install the ``splunk-opentelemetry[all]`` package:"
msgstr "``splunk-opentelemetry[all]`` パッケージをインストールする："

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:55
msgid "If you're using a requirements.txt or pyproject.toml file, add ``splunk-opentelemetry[all]`` to it."
msgstr "requirements.txtまたはpyproject.tomlファイルを使用している場合は、``splunk-opentelemetry[all]`` 。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:57
msgid "Run the bootstrap script to install instrumentation for every supported package in your environment:"
msgstr "ブートストラップ・スクリプトを実行して、お使いの環境でサポートされているすべてのパッケージのインスツルメンテーションをインストールします："

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:63
msgid "To print the instrumentation packages to the console instead of installing them, run ``splunk-py-trace-bootstrap --action=requirements``. You can then add the output to your requirements or Pipfile."
msgstr "計装パッケージをインストールする代わりにコンソールに表示するには、``splunk-py-trace-bootstrap --action=requirements``.そして、その出力を要件やPipfileに追加することができる。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:101
msgid "Activate the Splunk OTel Python agent by editing your Python service command."
msgstr "Python サービスコマンドを編集して Splunk OTel Python エージェントをアクティブにします。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:103
msgid "For example, if you open your Python application as follows:"
msgstr "例えば、以下のようにPythonアプリケーションを開くとする："

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:109
msgid "prefix the command with ``splunk-py-trace``:"
msgstr "コマンドの前に``splunk-py-trace`` ："

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:115
msgid "To instrument uWSGI applications, see :ref:`python-manual-instrumentation`."
msgstr "uWSGIアプリケーションを計測するには、:ref:`python-manual-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:117
msgid "(Optional) Perform these additional steps if you're using the Django framework:"
msgstr "(オプション) Django フレームワークを使用している場合は、以下の追加手順を実行します："

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:119
msgid ":ref:`django-instrumentation`"
msgstr ":ref:`django-instrumentation`"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:121
msgid "If no data appears in APM, see :ref:`common-python-troubleshooting`."
msgstr "APM にデータが表示されない場合は、:ref:`common-python-troubleshooting` を参照してください。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:128 ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:122
msgid "In most cases, the only configuration setting you need to enter is the service name. You can also define other basic settings, like the deployment environment, the service version, and the endpoint, among others."
msgstr "ほとんどの場合、入力が必要なコンフィギュレーション設定はサービス名だけです。デプロイ環境、サービスバージョン、エンドポイントなど、その他の基本設定も定義できます。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:130
msgid "For advanced configuration of the Python agent, like changing trace propagation formats, correlating traces and logs, or configuring server trace data, see :ref:`advanced-python-otel-configuration`."
msgstr "トレース伝播フォーマットの変更、トレースとログの相関、サーバーのトレースデータの設定など、 Python エージェントの高度な設定については、:ref:`advanced-python-otel-configuration` を参照してください。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:135
msgid "Deploy the Python agent in Kubernetes"
msgstr "KubernetesにPythonエージェントをデプロイする"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:137
msgid "To deploy the Python agent in Kubernetes, configure the Kubernetes Downward API to expose environment variables to Kubernetes resources."
msgstr "KubernetesにPythonエージェントをデプロイするには、Kubernetesのリソースに環境変数を公開するようにKubernetes Downward APIを設定する。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:170
msgid "By default, the agent sends all telemetry to the local instance of the Splunk Distribution of OpenTelemetry Collector."
msgstr "デフォルトでは、エージェントはすべてのテレメトリを OpenTelemetry Collector の Splunk ディストリビューションのローカルインスタンスに送信します。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-application.rst:172
msgid "To send data directly to Splunk Observability Cloud, set the following environment variables:"
msgstr "Splunk Observability Cloud に直接データを送信するには、以下の環境変数を設定します："

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-frameworks.rst:-1
msgid "If you're instrumenting a Python app that uses Django or uWSGI, perform these additional steps after you've followed the common procedure for automatic instrumentation."
msgstr "Django や uWSGI を使う Python アプリをインスツルメンテーションする場合は、自動インスツルメンテーションの一般的な手順を踏んだ後に、以下の追加手順を実行してください。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-frameworks.rst:5
msgid "Instrument Python frameworks for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用 Python フレームワークの実装"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-frameworks.rst:10
msgid "If you're instrumenting a Python application or service that uses Django or uWSGI, follow these additional steps after you've followed all the steps in :ref:`instrument-python-applications`."
msgstr "Django や uWSGI を使っている Python アプリケーションやサービスをインスツルメンテー ションする場合は、:ref:`instrument-python-applications` のすべてのステップを実行した後に、 以下の追加ステップを実行してください。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-frameworks.rst:15
msgid "Instrument a Django application"
msgstr "Djangoアプリケーションをインストゥルメントする"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-frameworks.rst:17
msgid "To automatically instrument Django applications, set the ``DJANGO_SETTINGS_MODULE`` environment variable to the same value in manage.py or wsgi.py."
msgstr "Django アプリケーションを自動的に計測するには、 manage.py か wsgi.py で``DJANGO_SETTINGS_MODULE`` 環境変数を同じ値に設定してください。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-frameworks.rst:19
msgid "For example, if your manage.py file sets the environment variable to mydjangoproject.settings and you start your project using ``./manage.py runserver``, you can run the following commands:"
msgstr "例えば、manage.py ファイルが環境変数を mydjangoproject.settings に設定し、``./manage.py runserver`` を使ってプロジェクトを開始する場合、以下のコマンドを実行できます："

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-frameworks.rst:36
msgid "Instrument a uWSGI application"
msgstr "uWSGIアプリケーションをインストゥルメントする"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-frameworks.rst:38
msgid "When using uWSGI, you must configure tracing as a response to the ``post_fork`` signal:"
msgstr "uWSGIを使用する場合は、``post_fork`` シグナルへの応答としてトレースを設定する必要があります："

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-frameworks.rst:49 ../../gdi/get-data-in/application/python/instrumentation/instrument-python-frameworks.rst:84
msgid "Customize and use the following snippet to run the application:"
msgstr "以下のスニペットをカスタマイズして使用し、アプリケーションを実行する："

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-frameworks.rst:55
msgid "Place the snippet in the main Python script that uWSGI imports and loads."
msgstr "uWSGIがインポートしてロードするメインのPythonスクリプトにスニペットを配置します。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-frameworks.rst:57
msgid "Do not run your uWSGI application using ``splunk-py-trace``, as it could have unintended consequences."
msgstr "uWSGIアプリケーションは、``splunk-py-trace`` を使用して実行しないでください。意図しない結果を招く可能性があります。"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-frameworks.rst:60
msgid "uWSGI and Flask"
msgstr "uWSGIとフラスコ"

#: ../../gdi/get-data-in/application/python/instrumentation/instrument-python-frameworks.rst:62
msgid "When using both uSWGI and Flask, calling ``start_tracing()`` only auto-instruments new Flask instances. To instrument an existing Flask app, import and call the Flask instrumentor:"
msgstr "uSWGIとFlaskの両方を使用している場合、``start_tracing()`` を呼び出すと、新しいFlaskインスタンスのみが自動生成されます。既存のFlaskアプリを計測するには、Flask instrumentorをインポートして呼び出します："

#: ../../gdi/get-data-in/application/python/instrumentation/python-manual-instrumentation.rst:-1
msgid "Manually instrument your Python application when you need to add custom attributes to spans or want to manually generate spans. Keep reading to learn how to manually instrument your Python application for Splunk Observability Cloud."
msgstr "スパンにカスタム属性を追加する必要がある場合や、スパンを手動で生成したい場合に、Pythonアプリケーションを手動で計測します。Splunk Observability Cloud 用の Python アプリケーションを手動で計測する方法については、このまま読み進めてください。"

#: ../../gdi/get-data-in/application/python/instrumentation/python-manual-instrumentation.rst:5
msgid "Manually instrument Python applications for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用の Python アプリケーションを手動で計測する"

#: ../../gdi/get-data-in/application/python/instrumentation/python-manual-instrumentation.rst:10
msgid "Instrumenting applications automatically using the agent of the Splunk Distribution of OpenTelemetry Python covers most needs. Manually instrumenting your application is only necessary when, for example, you need to add custom attributes to spans or need to manually generate spans."
msgstr "OpenTelemetry Python の Splunk ディストリビューションのエージェントを使用して、アプリケーションを自動的にインストゥルメントすることで、ほとんどのニーズに対応できる。アプリケーションを手動でインスツルメンテーションする必要があるのは、例えば、スパンにカスタム属性を追加する必要がある場合や、スパンを手動で生成する必要がある場合のみです。"

#: ../../gdi/get-data-in/application/python/instrumentation/python-manual-instrumentation.rst:12
msgid "For instructions on how to manually instrument Python applications, see the Manual instrumentation docs in the OpenTelemetry Python Instrumentation repository at https://opentelemetry.io/docs/instrumentation/python/manual/."
msgstr "Python アプリケーションを手動で計測する方法については、 https://opentelemetry.io/docs/instrumentation/python/manual/ の OpenTelemetry Python Instrumentation リポジトリの Manual instrumentation docs を参照してください。"

#: ../../gdi/get-data-in/application/python/instrumentation/python-manual-instrumentation.rst:15
msgid "Frameworks that require manual instrumentation"
msgstr "手動計測を必要とするフレームワーク"

#: ../../gdi/get-data-in/application/python/instrumentation/python-manual-instrumentation.rst:17
msgid "Some Python frameworks only support manual instrumentation. For specific instructions, see:"
msgstr "Pythonフレームワークの中には、手動による計測しかサポートしていないものがあります。具体的な手順については、こちらを参照のこと："

#: ../../gdi/get-data-in/application/python/instrumentation/python-manual-instrumentation.rst:19
msgid ":ref:`uwsgi-instrumentation`"
msgstr ":ref:`uwsgi-instrumentation`"

#: ../../gdi/get-data-in/application/python/instrumentation/python-manual-instrumentation.rst:21
msgid "Manual OTel instrumentation is fully compatible with Splunk automatic Python instrumentation and is fully supported by Splunk."
msgstr "手動 OTel 計測は Splunk 自動 Python 計測と完全に互換性があり、Splunk によって完全にサポートされています。"

#: ../../gdi/get-data-in/application/python/python-otel-requirements.rst:-1
msgid "This is what you need to instrument any Python application using the Splunk OTel Python agent."
msgstr "これは、Splunk OTel Python エージェントを使用して Python アプリケーションを計測するために必要なものです。"

#: ../../gdi/get-data-in/application/python/python-otel-requirements.rst:5
msgid "Python agent compatibility and requirements"
msgstr "Pythonエージェントの互換性と要件"

#: ../../gdi/get-data-in/application/python/python-otel-requirements.rst:10
msgid "Meet these requirements to instrument Python applications for Splunk Observability Cloud."
msgstr "Splunk Observability Cloud で Python アプリケーションを計測するには、以下の要件を満たす必要があります。"

#: ../../gdi/get-data-in/application/python/python-otel-requirements.rst:17
msgid "The Splunk Distribution of OpenTelemetry Python instruments numerous libraries and packages. For a complete list, see :new-page:`Supported libraries <https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/README.md>` in the OpenTelemetry documentation."
msgstr "OpenTelemetry Python の Splunk ディストリビューションは、多数のライブラリとパッケージを実装しています。完全なリストについては、OpenTelemetry ドキュメントの:new-page:`サポートされているライブラリ<https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/README.md>` を参照してください。"

#: ../../gdi/get-data-in/application/python/python-otel-requirements.rst:22
msgid "Ensure you have supported Python and library versions"
msgstr "サポートされているPythonとライブラリのバージョンを確認してください。"

#: ../../gdi/get-data-in/application/python/python-otel-requirements.rst:24
msgid "The agent of the Splunk Distribution of OpenTelemetry Python is compatible with Python 3.7 and higher."
msgstr "Splunk Distribution of OpenTelemetry Python のエージェントは Python 3.7 以降と互換性があります。"

#: ../../gdi/get-data-in/application/python/python-otel-requirements.rst:31
msgid "The Splunk Distribution of OpenTelemetry Python exports application traces and spans to the Splunk Distribution of OpenTelemetry Collector, which also collects system metric data and logs."
msgstr "Splunk Distribution of OpenTelemetry Python は、アプリケーションのトレースとスパンを Splunk Distribution of OpenTelemetry Collector にエクスポートします。"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:-1
msgid "The Splunk Distribution of OpenTelemetry Python is a wrapper for the OpenTelemetry Instrumentation for Python, an open source Python agent that dynamically patches supported libraries at runtime with an OTel-compatible tracer to capture and export traces and spans."
msgstr "OpenTelemetry Python の Splunk ディストリビューションは、OpenTelemetry Instrumentation for Python のラッパーであり、トレースとスパンをキャプチャしてエクスポートするための OTel 互換のトレーサで、サポートされているライブラリに実行時に動的にパッチを適用するオープンソースの Python エージェントです。"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:5
msgid "About the Splunk Distribution of OpenTelemetry Python"
msgstr "OpenTelemetry Python の Splunk ディストリビューションについて"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:10
msgid "The Splunk Distribution of OpenTelemetry Python is a wrapper for the OpenTelemetry Instrumentation for Python, an open source Python agent that dynamically patches supported libraries to capture telemetry data."
msgstr "OpenTelemetry Python の Splunk ディストリビューションは、OpenTelemetry Instrumentation for Python のラッパーであり、サポートされているライブラリに動的にパッチを適用して遠隔測定データをキャプチャするオープンソースの Python エージェントです。"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:12
msgid "With the agent you can automatically instrument any application written in Python 3.7 and higher. See :ref:`python-otel-requirements`."
msgstr "エージェントを使えば、Python 3.7以降で書かれたアプリケーションを自動的に計測することができます。:ref:`python-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:15
msgid "Features of the Splunk Distribution of OpenTelemetry Python"
msgstr "OpenTelemetry Python の Splunk ディストリビューションの機能"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:17
msgid "In addition to the features of the OpenTelemetry Instrumentation for Python, like bundled exporters and propagators, the agent provides additional custom features:"
msgstr "バンドルされたエクスポーターやプロパゲーターのような OpenTelemetry Instrumentation for Python の機能に加えて、エージェントは追加のカスタム機能を提供します："

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:20
msgid "Instrumentation for HTTP server frameworks that returns server trace information in HTTP responses. See :ref:`server-trace-information-python`."
msgstr "HTTPサーバーフレームワーク用のインストルメンテーションで、HTTPレスポンスにサーバートレース情報を返す。:ref:`server-trace-information-python` を参照。"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:21
msgid "Automatic injection of trace metadata into application logs. See :ref:`correlate-traces-with-logs-python`."
msgstr "アプリケーションログへのトレースメタデータの自動注入。:ref:`correlate-traces-with-logs-python` を参照。"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:23
msgid "The agent of the Splunk Distribution of OpenTelemetry Python is supported by Splunk and is updated frequently, bringing bug fixes and new features to you before they are integrated in the upstream OTel repositories."
msgstr "OpenTelemetry Python の Splunk ディストリビューションのエージェントは Splunk によってサポートされ、頻繁に更新され、バグフィックスや新機能がアップストリームの OTel リポジトリに統合される前に提供されます。"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:25
msgid "Use the Splunk Distribution of OpenTelemetry Python instead of the upstream OpenTelemetry instrumentation and SDK. Splunk supports upstream OTel components as part of the Splunk Distribution of OpenTelemetry Python."
msgstr "アップストリームの OpenTelemetry インスツルメンテーションと SDK ではなく、Splunk Distribution of OpenTelemetry Python を使用してください。Splunk は、Splunk Distribution of OpenTelemetry Python の一部として、アップストリームの OTel コンポーネントをサポートしています。"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:28
msgid "Defaults of the Splunk Distribution of OpenTelemetry Python"
msgstr "OpenTelemetry Python の Splunk ディストリビューションのデフォルト"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:30
msgid "The Splunk Distribution of OpenTelemetry Python has the following default settings for context propagation, exporters, and trace settings:"
msgstr "OpenTelemetry Python の Splunk ディストリビューションでは、コンテキストの伝播、エクスポータ、トレース設定のデフォルト設定が以下のようになっています："

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:32
msgid "W3C tracecontext and W3C baggage context propagation is activated by default. You can also configure B3 propagation. See :ref:`trace-propagation-configuration-python`."
msgstr "W3C tracecontext と W3C baggage context propagation はデフォルトで有効になっています。また、B3プロパゲーションを設定することもできる。:ref:`trace-propagation-configuration-python` を参照。"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:33
msgid "The OTLP gRPC exporter is configured by default to send spans to the local :ref:`Splunk Distribution of OpenTelemetry Collector <otel-intro>`."
msgstr "OTLP gRPCエクスポータは、デフォルトで、スパンをローカル:ref:`Splunk Distribution of OpenTelemetry Collector <otel-intro>` に送信するように設定されています。"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:34
msgid "Unlimited defaults for trace configuration to support full-fidelity tracing. See :ref:`trace-configuration-python`."
msgstr "完全忠実なトレースをサポートするため、トレース設定のデフォルトは無制限。:ref:`trace-configuration-python` を参照。"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:41
msgid "For more information on versioning of the Splunk Distribution of OpenTelemetry Python, see :new-page:`the release guidelines <https://github.com/signalfx/splunk-otel-python/blob/main/RELEASING.md>` on GitHub."
msgstr "OpenTelemetry Python の Splunk ディストリビューションのバージョン管理については、GitHub の:new-page:`リリースガイドライン<https://github.com/signalfx/splunk-otel-python/blob/main/RELEASING.md>` を参照してください。"

#: ../../gdi/get-data-in/application/python/splunk-python-otel-distribution.rst:46
msgid "The Splunk Distribution of OpenTelemetry Python is open-source software. You can contribute to its improvement by creating pull requests in GitHub. To learn more, see the :new-page:`contributing guidelines <https://github.com/signalfx/splunk-otel-python/blob/main/CONTRIBUTING.md>` on GitHub."
msgstr "OpenTelemetry Python の Splunk ディストリビューションはオープンソースソフトウェアです。GitHubでプルリクエストを作成することで、改良に貢献することができる。詳しくは、GitHub の:new-page:`貢献ガイドライン<https://github.com/signalfx/splunk-otel-python/blob/main/CONTRIBUTING.md>` をご覧ください。"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:-1
msgid "If your instrumented Python application is not sending data to Splunk Observability Cloud, or data is missing, follow these steps to identify and resolve the issue."
msgstr "インスツルメンテーションされた Python アプリケーションが Splunk Observability Cloud にデータを送信しない、またはデータが欠落している場合は、以下の手順に従って問題を特定し、解決してください。"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:5
msgid "Troubleshoot Python instrumentation for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud の Python インストルメンテーションのトラブルシューティング"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:10
msgid "When you instrument a Python application using the Splunk Distribution of OpenTelemetry Python and you don't see your data in Splunk Observability Cloud, follow these troubleshooting steps."
msgstr "Splunk Distribution of OpenTelemetry Python を使用して Python アプリケーションを計測しているときに Splunk Observability Cloud にデータが表示されない場合は、以下のトラブルシューティング手順に従ってください。"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:15
msgid "Steps for troubleshooting Python OpenTelemetry issues"
msgstr "Python OpenTelemetryの問題のトラブルシューティングの手順"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:17
msgid "The following steps can help you troubleshoot Python agent issues:"
msgstr "以下の手順は Python エージェントの問題のトラブルシューティングに役立ちます："

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:19
msgid ":ref:`check-python-path`"
msgstr ":ref:`check-python-path`"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:20
msgid ":ref:`enable-python-debug-logging`"
msgstr ":ref:`enable-python-debug-logging`"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:25
msgid "Check that your pip install directory is in PATH"
msgstr "PATHにpipのインストールディレクトリがあるか確認する。"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:27
msgid "To run ``splunk-py-trace`` and ``splunk-py-trace-bootstrap``, the install directory of ``pip`` must be on your system's ``PATH`` environment variable."
msgstr "``splunk-py-trace`` と``splunk-py-trace-bootstrap`` を実行するには、``pip`` のインストール・ディレクトリが、あなたのシステムの``PATH`` 環境変数上になければならない。"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:29
msgid "If ``pip`` installs packages into your user local environment, add the user base ``bin`` directory to ``PATH``."
msgstr "``pip`` がユーザーローカル環境にパッケージをインストールする場合、ユーザーベース``bin`` ディレクトリを``PATH`` に追加する。"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:31
msgid "Find out your Python user base by running ``python -m site --user-base``."
msgstr "``python -m site --user-base`` を実行して、Pythonのユーザー数を調べよう。"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:33
msgid "Add the user base directory to your path:"
msgstr "ユーザー・ベース・ディレクトリをパスに追加する："

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:44
msgid "Activating debug logging can help you troubleshoot Python instrumentation issues."
msgstr "デバッグログを有効にすると、Python のインスツルメンテーションの問題のトラブルシューティングに役立ちます。"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:46
msgid "To activate logging, import the ``logging`` module and configure the logging level to ``DEBUG``:"
msgstr "ロギングを有効にするには、``logging`` モジュールをインポートし、ロギング・レベルを``DEBUG`` に設定する："

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:54
msgid "When you run the agent with debug logging activated, debug information is sent to the console (stderr). Debug log entries look like the following example:"
msgstr "デバッグログを有効にしてエージェントを実行すると、デバッグ情報がコンソール(stderr)に送信されます。デバッグログエントリーは以下の例のようになる："

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:63
msgid "While not all debug entries might be relevant to the issue affecting your Python instrumentation, the root cause is likely to appear in your debug log."
msgstr "すべてのデバッグエントリが Python のインスツルメンテーションに影響する問題に関連するとは限りませんが、根本的な原因はデバッグログに現れる可能性が高いです。"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:72
msgid "By default, the Splunk Distribution of OpenTelemetry Python uses the OTLP exporter. Any issue affecting the export of traces produces an error in the debug logs."
msgstr "デフォルトでは、OpenTelemetry Python の Splunk ディストリビューションは OTLP エクスポーターを使用します。トレースのエクスポートに影響する問題はすべて、デバッグログにエラーを生成します。"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:84 ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:44
msgid "To troubleshoot the lack of connectivity between the OTLP exporter and the OTel Collector, try the following:"
msgstr "OTLPエクスポータとOTelコレクタ間の接続不足をトラブルシューティングするには、以下を試してください："

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:92
msgid "Channel pipeline error"
msgstr "チャンネル・パイプライン・エラー"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:94
msgid "If you're seeing the following error in your logs, it might mean that the Python agent is trying to send trace data to the Splunk Observability Cloud ingest endpoint, which is not yet supported by OTLP:"
msgstr "ログに以下のようなエラーが表示される場合は、PythonエージェントがSplunk Observability Cloudの取り込みエンドポイントにトレースデータを送信しようとしている可能性があります："

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:101
msgid "To solve this issue, use the Jaeger exporter instead. See :ref:`trace-exporters-settings-python`."
msgstr "この問題を解決するには、代わりにイェーガー・エクスポーターを使ってください。:ref:`trace-exporters-settings-python` を参照。"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:104
msgid "Jaeger can't export spans"
msgstr "イェーガーはスパンを輸出できない"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:106
msgid "If you're exporting trace data using the Jaeger exporter, errors in your logs might mean the Python agent can't send trace data to the OTel Collector, Smart Agent (now deprecated), or Splunk Cloud Platform:"
msgstr "Jaeger エクスポーターを使ってトレースデータをエクスポートしている場合、ログにエラーがあると、Python エージェントが OTel Collector、Smart Agent (現在は非推奨)、または Splunk Cloud Platform にトレースデータを送信できない可能性があります："

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:108
msgid "To troubleshoot the lack of connectivity between Jaeger and Splunk Observability Cloud, try the following:"
msgstr "Jaeger と Splunk Observability Cloud の間の接続不足をトラブルシューティングするには、以下をお試しください："

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:110
msgid "Make sure that ``OTEL_EXPORTER_JAEGER_ENDPOINT`` points to a OpenTelemetry Collector or your Collector or Smart Agent (deprecated) configuration instance, or to the Splunk Ingest URL. See the Splunk Ingest URL summary in :new-page:`Summary of Splunk Observability Cloud API Endpoints <https://dev.splunk.com/observability/docs/apibasics/api_list>`."
msgstr "``OTEL_EXPORTER_JAEGER_ENDPOINT`` が OpenTelemetry Collector、Collector または Smart Agent (廃止予定) の設定インスタンス、あるいは Splunk Ingest URL を指していることを確認してください。:new-page:`Summary of Splunk Observability Cloud API Endpoints<https://dev.splunk.com/observability/docs/apibasics/api_list>` の Splunk Ingest URL サマリーを参照。"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:111
msgid "Check that the OTel Collector or Smart Agent instance is configured and running."
msgstr "OTel CollectorまたはSmart Agentインスタンスが構成され、実行されていることを確認します。"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:112
msgid "Check that the Jaeger Thrift HTTP receiver is activated and plugged into the traces pipeline. See :ref:`otel-exposed-endpoints`."
msgstr "Jaeger Thrift HTTPレシーバーが有効化され、トレースパイプラインに接続されていることを確認してください。:ref:`otel-exposed-endpoints` を参照。"

#: ../../gdi/get-data-in/application/python/troubleshooting/common-python-troubleshooting.rst:113
msgid "Check that the endpoint is correct. The OpenTelemetry Collector and Smart Agent use different ports and paths by default. For the Jaeger receiver, the OTel Collector uses ``http://<host>:14268/api/traces``, while the Smart Agent uses ``http://<host>:9080/v1/trace``."
msgstr "エンドポイントが正しいことを確認する。OpenTelemetry Collector と Smart Agent は、デフォルトでは異なるポートとパスを使用します。イェーガー受信機では、OTelコレクターは``http://<host>:14268/api/traces`` 、スマートエージェントは``http://<host>:9080/v1/trace`` を使用する。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:-1
msgid "The agent of the Splunk Distribution of OpenTelemetry Python replaces the deprecated SignalFx Python Tracing Library. To migrate to the Splunk Python OTel agent, follow these instructions."
msgstr "Splunk Distribution of OpenTelemetry Python のエージェントは、非推奨の SignalFx Python Tracing Library を置き換えます。Splunk Python OTel エージェントに移行するには、以下の手順に従ってください。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:5
msgid "Migrate from the SignalFx Tracing Library for Python"
msgstr "Python用SignalFxトレースライブラリからの移行"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:10
msgid "The SignalFx Tracing Library for Python is deprecated and will reach End of Support on December 17th, 2022. Replace it with the agent from the Splunk Distribution of OpenTelemetry Python."
msgstr "SignalFx Tracing Library for Pythonは非推奨となり、2022年12月17日にサポート終了となります。OpenTelemetry Python の Splunk ディストリビューションのエージェントに置き換えてください。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:12
msgid "The agent of the Splunk Distribution of OpenTelemetry Python is based on the OpenTelemetry Instrumentation for Python, an open-source project that uses the OpenTelemetry API."
msgstr "Splunk Distribution of OpenTelemetry Python のエージェントは、OpenTelemetry API を使用するオープンソースプロジェクトである OpenTelemetry Instrumentation for Python をベースにしています。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:14
msgid "Read the following instructions to learn how to migrate to the Splunk Python OTel agent."
msgstr "Splunk Python OTel エージェントへの移行方法については、以下の説明をお読みください。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:21
msgid "The Splunk Distribution of OpenTelemetry Python requires Python 3.7 and higher. See :ref:`python-otel-requirements`."
msgstr "OpenTelemetry Python の Splunk ディストリビューションには Python 3.7 以上が必要です。:ref:`python-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:26
msgid "Migrate to the Splunk Distribution of OpenTelemetry Python"
msgstr "OpenTelemetry Python の Splunk ディストリビューションへの移行"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:28
msgid "To migrate from the SignalFx Tracing Library for Python to the Splunk Distribution of OpenTelemetry Python, follow these steps:"
msgstr "SignalFx Tracing Library for Python から Splunk Distribution of OpenTelemetry Python に移行するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:30
msgid "Remove the tracing library packages. See :ref:`remove-python-tracing-library`."
msgstr "トレースライブラリパッケージを削除する。:ref:`remove-python-tracing-library` を参照。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:31
msgid "Deploy the Splunk Distribution of OpenTelemetry Python. See :ref:`install-splunk-otel-python-distribution`."
msgstr "OpenTelemetry Python の Splunk ディストリビューションをデプロイします。:ref:`install-splunk-otel-python-distribution` を参照。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:32
msgid "Migrate your existing configuration. See :ref:`migrate-settings-python-agent`."
msgstr "既存の構成を移行する。:ref:`migrate-settings-python-agent` を参照。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:33
msgid "Start your Python service or application. See :ref:`start-python-service-after-migration`."
msgstr "Pythonのサービスまたはアプリケーションを開始します。:ref:`start-python-service-after-migration` を参照。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:40
msgid "Remove the SignalFx Tracing Library for Python"
msgstr "Python用SignalFxトレース・ライブラリの削除"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:50
msgid "Remove ``signalfx-tracing`` from your requirements.txt or pyproject.toml file."
msgstr "requirements.txtまたはpyproject.tomlファイルから``signalfx-tracing`` 。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:52
msgid "If the package manager didn't remove every dependency for ``signalfx-tracing``, remove them manually:"
msgstr "パッケージ・マネージャーが``signalfx-tracing`` の依存関係をすべて削除していない場合は、手動で削除してください："

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:59
msgid "Remove every instrumentation package installed by the ``sfx-py-trace-bootstrap`` command."
msgstr "``sfx-py-trace-bootstrap`` コマンドでインストールされたすべての計装パッケージを削除する。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:61 ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:51
msgid "Remove any additional OpenTracing instrumentation packages you installed."
msgstr "追加でインストールした OpenTracing の計測パッケージをすべて削除します。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:64
msgid "Additional steps for Django applications"
msgstr "Djangoアプリケーションの追加手順"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:66
msgid "The Splunk Distribution of OpenTelemetry Python doesn't require you to add anything to ``INSTALLED_APPS``."
msgstr "OpenTelemetry Python の Splunk ディストリビューションでは、``INSTALLED_APPS`` に何も追加する必要はありません。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:68
msgid "Follow these steps to update your Django configuration:"
msgstr "以下の手順に従って、Django の設定を更新してください："

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:70
msgid "Remove ``signalfx_tracing`` from ``INSTALLED_APPS`` in settings.py."
msgstr "settings.py の``INSTALLED_APPS`` から``signalfx_tracing`` を削除。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:72
msgid "Set the ``DJANGO_SETTINGS_MODULE`` environment variable to the same value as in manage.py or wsgi.py."
msgstr "環境変数``DJANGO_SETTINGS_MODULE`` を manage.py または wsgi.py と同じ値に設定します。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:77
msgid "Deploy the Splunk Python agent"
msgstr "Splunk Python エージェントをデプロイする"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:79
msgid "To install the Splunk Distribution of OpenTelemetry Python, see :ref:`instrument-python-applications`."
msgstr "OpenTelemetry Python の Splunk ディストリビューションをインストールするには、:ref:`instrument-python-applications` を参照してください。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:84
msgid "Migrate settings for the Splunk Python OTel agent"
msgstr "Splunk Python OTel エージェントの設定を移行する"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:86
msgid "To migrate settings from the SignalFx tracing library to the Splunk Distribution of OpenTelemetry Python, rename the following environment variables:"
msgstr "SignalFx トレースライブラリから Splunk Distribution of OpenTelemetry Python に設定を移行するには、以下の環境変数の名前を変更します："

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:98 ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:77
msgid "``OTEL_EXPORTER_JAEGER_ENDPOINT`` or ``OTEL_EXPORTER_OTLP_ENDPOINT``"
msgstr "``OTEL_EXPORTER_JAEGER_ENDPOINT`` または ``OTEL_EXPORTER_OTLP_ENDPOINT``"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:100 ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:79
msgid "``SPLUNK_MAX_ATTR_LENGTH``"
msgstr "``SPLUNK_MAX_ATTR_LENGTH``"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:102
msgid "For more information about Splunk Python OTel settings, see :ref:`advanced-python-otel-configuration`."
msgstr "Splunk Python OTel 設定の詳細については、:ref:`advanced-python-otel-configuration` を参照してください。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:107
msgid "Start you Python application after completing the migration"
msgstr "マイグレーション完了後、Pythonアプリケーションを起動します。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:109
msgid "Run your python application or service using ``splunk-py-trace``. For example, if you run your service using ``python main.py``, you can automatically instrument by running it with ``splunk-py-trace python main.py``. For more information, see :ref:`instrument-python-applications`."
msgstr "``splunk-py-trace`` を使って Python アプリケーションやサービスを実行します。例えば、``python main.py`` を使用してサービスを実行する場合、``splunk-py-trace python main.py`` を使用して実行することで、自動的にインスツルメンテーションを行うことができます。詳細は:ref:`instrument-python-applications` を参照。"

#: ../../gdi/get-data-in/application/python/troubleshooting/migrate-signalfx-python-agent-to-otel.rst:114
msgid "To inject tracing metadata into log statements, see :ref:`correlate-traces-with-logs-python`."
msgstr "トレース・メタデータをログ文に注入するには、:ref:`correlate-traces-with-logs-python` を参照してください。"

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:-1
msgid "Configure the agent of the Splunk Distribution of OpenTelemetry Ruby to suit most of your instrumentation needs, like correlating traces with logs, activating exporters, and more."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションのエージェントを設定することで、トレースとログの関連付け、エクスポータの有効化など、ほとんどの計測ニーズに対応できます。"

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:5
msgid "Configure the Ruby agent for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用の Ruby エージェントを設定する"

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:10
msgid "You can configure the Ruby agent from the Splunk Distribution of OpenTelemetry Ruby to suit your instrumentation needs. In most cases, modifying the basic configuration is enough to get started."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションから、インスツルメンテーションのニーズに合わせて Ruby エージェントを設定することができます。たいていの場合、基本的なコンフィギュレーションを変更するだけで始められる。"

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:12
msgid "The following sections describe all available settings for configuring the Ruby agent, including options for activating new features that are unique to the Splunk Distribution of OpenTelemetry Ruby."
msgstr "以下のセクションでは、OpenTelemetry Ruby の Splunk ディストリビューション独自の新機能を有効にするオプションを含め、Ruby エージェントを設定するために利用可能なすべての設定について説明します。"

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:19
msgid "The following settings are specific to the Splunk Distribution of OpenTelemetry Ruby:"
msgstr "以下の設定は、OpenTelemetry Ruby の Splunk ディストリビューション固有のものです："

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:29
msgid "The name of your organization's realm, for example, ``us0``. When you set the realm, telemetry is sent directly to the ingest endpoint of Splunk Observability Cloud, bypassing the Splunk OpenTelemetry Collector."
msgstr "あなたの組織のレルムの名前。例えば、``us0`` 。レルムを設定すると、テレメトリは Splunk OpenTelemetry Collector をバイパスして Splunk Observability Cloud のインジェストエンドポイントに直接送信されます。"

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:33
msgid "To send data directly to Splunk Observability Cloud, see :ref:`export-directly-to-olly-cloud-ruby`."
msgstr "Splunk Observability Cloud に直接データを送信するには、:ref:`export-directly-to-olly-cloud-ruby` を参照してください。"

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:62
msgid "Maximum length of strings for attribute values. Values larger than the limit are truncated. The default value is ``12000``."
msgstr "属性値の文字列の最大長。制限値より大きな値は切り捨てられる。デフォルト値は``12000`` 。"

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:77
msgid "Trace exporter to use. You can set multiple comma-separated values (for example, ``otlp,console``). The default value is ``otlp``. For debugging purposes, use the ``console`` exporter, which writes spans to the console."
msgstr "使用するトレースエクスポーター。コンマで区切られた複数の値を設定することができます（たとえば、``otlp,console`` ）。デフォルト値は``otlp`` 。デバッグのためには、コンソールにスパンを書き込む``console`` エクスポーターを使用する。"

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:79
msgid "The OTLP endpoint. The default value is ``http://localhost:4318``."
msgstr "OTLPのエンドポイント。デフォルト値は``http://localhost:4318`` 。"

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:81
msgid "The Splunk Distribution of OpenTelemetry Ruby uses the OTLP gRPC span exporter by default."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションでは、デフォルトで OTLP gRPC span exporter を使用します。"

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:98
msgid "For backward compatibility with the SignalFx Ruby Tracing Library, use the b3multi trace propagator:"
msgstr "SignalFx Ruby Tracing Libraryとの後方互換性のために、b3multiトレースプロパゲータを使用してください："

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:115
msgid "To connect Real User Monitoring (RUM) requests from mobile and web applications with server trace data, activate the Rack instrumentation in the configuration:"
msgstr "モバイルおよびウェブ・アプリケーションからのリアル・ユーザー・モニタリング（RUM）リクエストとサーバー・トレース・データを接続するには、コンフィギュレーションでRackインスツルメンテーションを有効にします："

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:130
msgid "When using ActionPack, the middleware is added automatically if the instrumentation ActionPack is activated:"
msgstr "ActionPackを使用する場合、インストルメンテーションActionPackが有効になっていれば、ミドルウェアは自動的に追加される："

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:140
msgid "After you've activated the Rack instrumentation, set the following environment variable:"
msgstr "ラックのインストルメンテーションを有効にしたら、以下の環境変数を設定する："

#: ../../gdi/get-data-in/application/ruby/configuration/advanced-ruby-otel-configuration.rst:152
msgid "When you set this environment variable, the instrumentation adds the following response headers to HTTP responses:"
msgstr "この環境変数を設定すると、インスツルメンテーションはHTTPレスポンスに以下のレスポンス・ヘッダを追加する："

#: ../../gdi/get-data-in/application/ruby/get-started.rst:11
msgid "Instrument a Ruby application"
msgstr "Rubyアプリケーションのインストゥルメント"

#: ../../gdi/get-data-in/application/ruby/get-started.rst:11
msgid "Configure the Ruby instrumentation"
msgstr "Rubyインスツルメンテーションの設定"

#: ../../gdi/get-data-in/application/ruby/get-started.rst:11
msgid "Troubleshoot Ruby instrumentation"
msgstr "Rubyインスツルメンテーションのトラブルシューティング"

#: ../../gdi/get-data-in/application/ruby/get-started.rst:11
msgid "About Splunk OTel Ruby"
msgstr "Splunk OTel Ruby について"

#: ../../gdi/get-data-in/application/ruby/get-started.rst:11
msgid "Migrate from SignalFx Ruby agent"
msgstr "SignalFx Rubyエージェントからの移行"

#: ../../gdi/get-data-in/application/ruby/get-started.rst:-1
msgid "Instrument Ruby applications automatically to export spans and metrics to Splunk Observability Cloud."
msgstr "Ruby アプリケーションを自動的に計測し、スパンとメトリクスを Splunk Observability Cloud にエクスポートします。"

#: ../../gdi/get-data-in/application/ruby/get-started.rst:5
msgid "Instrument Ruby applications for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 向けに Ruby アプリケーションをインストゥルメントする"

#: ../../gdi/get-data-in/application/ruby/get-started.rst:23
msgid "The Splunk Distribution of OpenTelemetry Ruby provides a Ruby agent that automatically adds APM instrumentation to your Ruby application. The instrumentation captures distributed traces and sends them to Splunk Observability Cloud."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションは、APM 計測機能を Ruby アプリケーションに自動的に追加する Ruby エージェントを提供します。インスツルメンテーションは分散トレースをキャプチャし、Splunk Observability Cloud に送信する。"

#: ../../gdi/get-data-in/application/ruby/get-started.rst:25
msgid "To instrument your Ruby application, follow these steps:"
msgstr "Rubyアプリケーションを計測するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/ruby/get-started.rst:27
msgid "Check compatibility and requirements. See :ref:`ruby-otel-requirements`."
msgstr "互換性と必要条件を確認してください。:ref:`ruby-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/ruby/get-started.rst:28
msgid "Instrument your Ruby application. See :ref:`instrument-ruby-applications`."
msgstr "Rubyアプリケーションを計測する。:ref:`instrument-ruby-applications` を参照。"

#: ../../gdi/get-data-in/application/ruby/get-started.rst:29
msgid "Configure your instrumentation. See :ref:`configure-ruby-instrumentation`."
msgstr "計測器を設定する。:ref:`configure-ruby-instrumentation` を参照。"

#: ../../gdi/get-data-in/application/ruby/get-started.rst:31
msgid "For more information, see :ref:`splunk-ruby-otel-dist`."
msgstr "詳細は:ref:`splunk-ruby-otel-dist` を参照。"

#: ../../gdi/get-data-in/application/ruby/get-started.rst:33
msgid "The SignalFx Ruby tracing library is deprecated and will reach End of Support on September 30th, 2023. To migrate to the Splunk Distribution of OpenTelemetry Ruby, see :ref:`migrate-signalfx-ruby-agent-to-otel`."
msgstr "SignalFx Rubyトレース・ライブラリは非推奨となり、2023年9月30日にサポート終了となります。OpenTelemetry Ruby を Splunk ディストリビューションに移行するには、:ref:`migrate-signalfx-ruby-agent-to-otel` を参照してください。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/connect-traces-logs.rst:-1
msgid "You can configure the Ruby standard logger to include tracing attributes provided automatically by Splunk OTel Ruby agent. Use the trace metadata to correlate traces with log events and explore logs in Splunk Observability Cloud."
msgstr "Splunk OTel Ruby エージェントが自動的に提供するトレース属性を含めるように、Ruby 標準ロガーを設定できます。トレースメタデータを使用して、トレースとログイベントを関連付け、Splunk Observability Cloud でログを探索します。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/connect-traces-logs.rst:5
msgid "Connect Ruby trace data with logs for Splunk Observability Cloud"
msgstr "Ruby のトレースデータを Splunk Observability Cloud のログに接続する"

#: ../../gdi/get-data-in/application/ruby/instrumentation/connect-traces-logs.rst:10
msgid "You can configure the Ruby standard logger to include tracing attributes provided automatically by the Splunk OTel Ruby agent. Use the trace metadata to correlate traces with log events and explore logs in Splunk."
msgstr "Splunk OTel Ruby エージェントが自動的に提供するトレース属性を含めるように、Ruby 標準ロガーを設定できます。トレースメタデータを使用して、トレースとログイベントを関連付け、Splunk でログを探索します。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/connect-traces-logs.rst:17
msgid "The Splunk OTel Ruby agent provides the following attributes for the logging module in the standard library:"
msgstr "Splunk OTel Ruby エージェントは、標準ライブラリのロギングモジュールに対して以下の属性を提供します："

#: ../../gdi/get-data-in/application/ruby/instrumentation/connect-traces-logs.rst:19
msgid "Trace information: ``TraceId`` and ``SpanId``"
msgstr "トレース情報：``TraceId``  ``SpanId``"

#: ../../gdi/get-data-in/application/ruby/instrumentation/connect-traces-logs.rst:20
msgid "Resource attributes: ``ServiceName``"
msgstr "リソース属性： ``ServiceName``"

#: ../../gdi/get-data-in/application/ruby/instrumentation/connect-traces-logs.rst:22
msgid "To add trace metadata to logs, use the ``Splunk::Otel::Logging.format_correlation`` function of the Ruby standard logger to set the formatter, as in the following example:"
msgstr "ログにトレースメタデータを追加するには、以下の例のように、Ruby標準ロガーの``Splunk::Otel::Logging.format_correlation`` 関数を使ってフォーマッタを設定する："

#: ../../gdi/get-data-in/application/ruby/instrumentation/connect-traces-logs.rst:30
msgid "This adds ``service.name=<ServiceName> trace_id=<TraceId> span_id=<SpanId>`` to each log line. For example:"
msgstr "これにより、各ログ行に``service.name=<ServiceName> trace_id=<TraceId> span_id=<SpanId>`` 。例えば、こうだ："

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:-1
msgid "The Splunk OpenTelemetry Ruby agent can automatically instrument your Ruby application or service. Follow these steps to get started."
msgstr "Splunk OpenTelemetry Ruby エージェントは、Ruby アプリケーションやサービスを自動的に計測することができます。以下の手順で始めましょう。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:5
msgid "Instrument a Ruby application for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用に Ruby アプリケーションをインストルメントする"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:10
msgid "The Ruby agent from the Splunk Distribution of OpenTelemetry Ruby can automatically instrument your Ruby application by dynamically patching supported libraries."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションに含まれる Ruby エージェントは、サポートされているライブラリに動的にパッチを適用することで、Ruby アプリケーションを自動的に計測することができます。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:17
msgid "To generate all the basic installation commands for your environment and application, use the Ruby guided setup. To access the Ruby guided setup:"
msgstr "あなたの環境とアプリケーションのための基本的なインストール・コマンドをすべて生成するには、Rubyガイド付きセットアップを使用します。Rubyのガイド付きセットアップにアクセスする："

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:20
msgid "Open the :new-page:`Ruby guided setup <https://login.signalfx.com/#/gdi/scripted/ruby-tracing/step-1?category=product-apm&gdiState=%7B\"integrationId\":\"ruby-tracing\"%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`Ruby guided setup<https://login.signalfx.com/#/gdi/scripted/ruby-tracing/step-1?category=product-apm&gdiState=%7B\"integrationId\":\"ruby-tracing\"%7D>` を開いてください。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:30
msgid "Select the :guilabel:`Ruby` tile to open the Ruby guided setup."
msgstr ":guilabel:`Ruby` タイルを選択し、Rubyのガイド付きセットアップを開く。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:33
msgid "Install the Splunk Distribution of OpenTelemetry Ruby manually"
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションを手動でインストールする"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:35
msgid "Follow these instructions to install the Splunk Distribution of OpenTelemetry Ruby:"
msgstr "以下の手順に従って、OpenTelemetry Ruby の Splunk ディストリビューションをインストールしてください："

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:37
msgid ":ref:`install-enable-ruby-agent`"
msgstr ":ref:`install-enable-ruby-agent`"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:43
msgid "Install and activate the Ruby agent"
msgstr "Rubyエージェントのインストールと有効化"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:45
msgid "Follow these steps to automatically instrument your application using the Ruby agent:"
msgstr "Rubyエージェントを使用してアプリケーションを自動的に計測するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:47
msgid "Check that you meet the requirements. See :ref:`ruby-otel-requirements`."
msgstr "あなたが条件を満たしていることを確認してください。:ref:`ruby-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:49
msgid "Add the following gems to your project's Gemfile:"
msgstr "以下のgemをプロジェクトのGemfileに追加する："

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:56
msgid "Run ``bundle install`` to install the gems."
msgstr "``bundle install`` を実行して gems をインストールする。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:58
msgid "Activate the instrumentation by passing ``auto_instrument:true`` to the ``configure`` method of ``Splunk::Otel``:"
msgstr "``Splunk::Otel`` の``configure`` メソッドに``auto_instrument:true`` を渡してインストゥルメンテーションをアクティブにする："

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:77
msgid "(Optional) Set the endpoint URL if the Splunk OpenTelemetry Collector is running on a different host:"
msgstr "(オプション) Splunk OpenTelemetry Collector が別のホストで実行されている場合は、エンドポイント URL を設定します："

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:101
msgid "If no data appears in APM, see :ref:`common-ruby-troubleshooting`."
msgstr "APM にデータが表示されない場合は、:ref:`common-ruby-troubleshooting` を参照してください。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:103
msgid "If you want to manually install and activate instrumentation libraries, see :ref:`ruby-manual-instrumentation`."
msgstr "インスツルメンテーション・ライブラリを手動でインストールし、有効にしたい場合は、:ref:`ruby-manual-instrumentation` を参照してください。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:106
msgid "Instrument Ruby on Rails applications"
msgstr "Ruby on Railsアプリケーションの構築"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:108
msgid "To instrument a Ruby on Rails application, see :ref:`instrument-ruby-rails`."
msgstr "Ruby on Railsアプリケーションを計測するには、:ref:`instrument-ruby-rails` を参照。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:113
msgid "Activate server timing for RUM"
msgstr "RUMのサーバータイミングを有効にする"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:115
msgid "You can connect Real User Monitoring (RUM) requests from mobile and web applications with server trace data produced by your Ruby application or service. For more information, see :ref:`server-trace-information-ruby`."
msgstr "モバイルアプリケーションやウェブアプリケーションからのReal User Monitoring (RUM) リクエストと、Rubyアプリケーションやサービスが生成するサーバトレースデータを連携させることができます。詳細は:ref:`server-trace-information-ruby` を参照。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:120
msgid "Configure the Ruby agent"
msgstr "Rubyエージェントの設定"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:124
msgid "For advanced configuration of the Ruby agent, like changing trace propagation formats, correlating traces and logs, or configuring server trace data, see :ref:`advanced-ruby-otel-configuration`."
msgstr "トレース伝播フォーマットの変更、トレースとログの相関、サーバトレースデータの設定など、Ruby エージェントの高度な設定については、:ref:`advanced-ruby-otel-configuration` を参照してください。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:129
msgid "Deploy the Ruby agent in Kubernetes"
msgstr "KubernetesにRubyエージェントをデプロイする"

#: ../../gdi/get-data-in/application/ruby/instrumentation/instrument-ruby-application.rst:131
msgid "To deploy the Ruby agent in Kubernetes, configure the Kubernetes Downward API to expose environment variables to Kubernetes resources."
msgstr "KubernetesにRubyエージェントをデプロイするには、Kubernetesのリソースに環境変数を公開するようにKubernetes Downward APIを設定する。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:-1
msgid "Manually instrument your Ruby application when you need to add custom attributes to spans or want to manually generate spans. Keep reading to learn how to manually instrument your Ruby application for Splunk Observability Cloud."
msgstr "スパンにカスタム属性を追加する必要がある場合や、スパンを手動で生成したい場合に、Rubyアプリケーションを手動でインストゥルメントします。Splunk Observability Cloud 用に Ruby アプリケーションを手動で計測する方法について学びましょう。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:5
msgid "Manually instrument Ruby applications for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用に Ruby アプリケーションを手動でインストルメントする"

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:10
msgid "Instrumenting applications automatically using the agent of the Splunk Distribution of OpenTelemetry Ruby covers most needs. Manually instrumenting your application is only necessary when, for example, you need to add custom attributes to spans or need to manually generate spans."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションのエージェントを使用して、アプリケーションを自動的にインストゥルメントすることで、ほとんどのニーズに対応できる。アプリケーションを手動でインスツルメンテーションする必要があるのは、例えば、スパンにカスタム属性を追加する必要がある場合や、スパンを手動で生成する必要がある場合のみです。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:13
msgid "Libraries installation"
msgstr "ライブラリーの設置"

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:15
msgid "With manual instrumentation, you can install and activate instrumentation libraries separately. This lets you control which gems Ruby retrieves when building your project."
msgstr "手動インスツルメンテーションでは、インスツルメンテーション・ライブラリを個別にインストールし、有効化することができます。これにより、プロジェクトをビルドする際にRubyが取得するgemを制御することができます。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:17
msgid "To learn how to manually instrument a Ruby application, see  :new-page:`https://opentelemetry.io/docs/instrumentation/ruby/manual/` at OpenTelemetry.io."
msgstr "Rubyアプリケーションを手動で計測する方法については、OpenTelemetry.ioの:new-page:`https://opentelemetry.io/docs/instrumentation/ruby/manual/` を参照のこと。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:19
msgid "To install and activate an instrumentation library manually:"
msgstr "計装ライブラリを手動でインストールし、アクティブ化する："

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:21
msgid "Install the instrumentation library using ``gem install`` or by including it in the project's Gemfile. For example, to install the Sinatra instrumentation, add the following to your Gemfile:"
msgstr "``gem install`` 、またはプロジェクトのGemfileにインクルードして、インストゥルメンテーション・ライブラリをインストールする。例えば、Sinatraインストゥルメンテーションをインストールするには、Gemfileに以下を追加する："

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:27
msgid "In a block passed to the ``Splunk::Otel.configure`` method, configure the SDK to use each of the instrumentation libraries. In the case of the Sinatra instrumentation, the block would look like the following example:"
msgstr "``Splunk::Otel.configure`` メソッドに渡されるブロックの中で、SDK が各インスツルメンテーション・ライブラリを使用するように設定する。Sinatraインストルメンテーションの場合、ブロックは以下の例のようになる："

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:39
msgid "Instrument a Rails application"
msgstr "Railsアプリケーションをインストルメントする"

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:41
msgid "To instrument a Ruby on Rails application, follow these steps:"
msgstr "Ruby on Railsアプリケーションを計測するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:43
msgid "Add the instrumentation library it to your project's ``Gemfile``:"
msgstr "インスツルメンテーション・ライブラリをプロジェクトの``Gemfile`` に追加する："

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:49
msgid "You can also install the gem using ``bundle``:"
msgstr "``bundle`` を使って gem をインストールすることもできます："

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:55
msgid "Configure OpenTelemetry to use all available instrumentation libraries:"
msgstr "OpenTelemetry が利用可能なすべての計測ライブラリを使用するように設定します："

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:66
msgid "You can deactivate specific instrumentations through the ``use_all`` function. For example:"
msgstr "``use_all`` 、特定のインストゥルメントを無効にすることができます。例えば、こうだ："

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:74
msgid "To activate only Rails, you can use a single ``c.use`` statement:"
msgstr "Railsだけをアクティブにするには、``c.use`` ："

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:82
msgid "For an example, see :new-page:`Rails 7 example <https://github.com/signalfx/splunk-otel-ruby/blob/main/examples/rails-7-barebones/README.md>`."
msgstr "例については、:new-page:`Rails 7 の例<https://github.com/signalfx/splunk-otel-ruby/blob/main/examples/rails-7-barebones/README.md>` を参照してください。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:85
msgid "Manual instrumentation for spans and events"
msgstr "スパンとイベントの手動計測"

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:87
msgid "For examples of manual instrumentation for Ruby, see the official OpenTelemetry documentation."
msgstr "Rubyの手動計測の例については、OpenTelemetryの公式ドキュメントを参照してください。"

#: ../../gdi/get-data-in/application/ruby/instrumentation/ruby-manual-instrumentation.rst:89
msgid "Manual OTel instrumentation is fully compatible with Splunk automatic Ruby instrumentation and is fully supported by Splunk."
msgstr "手動 OTel 計測は、Splunk の自動 Ruby 計測と完全に互換性があり、Splunk によって完全にサポートされています。"

#: ../../gdi/get-data-in/application/ruby/ruby-otel-requirements.rst:-1
msgid "This is what you need to instrument any Ruby application using the Splunk OTel Ruby agent."
msgstr "これは、Splunk OTel Ruby エージェントを使用して Ruby アプリケーションを計測するために必要なものです。"

#: ../../gdi/get-data-in/application/ruby/ruby-otel-requirements.rst:5
msgid "Ruby agent compatibility and requirements"
msgstr "Rubyエージェントの互換性と要件"

#: ../../gdi/get-data-in/application/ruby/ruby-otel-requirements.rst:10
msgid "Meet these requirements to instrument Ruby applications for Splunk Observability Cloud."
msgstr "Splunk Observability Cloud で Ruby アプリケーションを計測するには、以下の要件を満たす必要があります。"

#: ../../gdi/get-data-in/application/ruby/ruby-otel-requirements.rst:17
msgid "The Splunk Distribution of OpenTelemetry Ruby instruments numerous libraries and packages. For a complete list, see :new-page:`Supported libraries <https://github.com/open-telemetry/opentelemetry-ruby-contrib/tree/main/instrumentation>` in the OpenTelemetry documentation."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションは、多数のライブラリとパッケージを実装しています。完全なリストについては、OpenTelemetry ドキュメントの:new-page:`サポートされているライブラリ<https://github.com/open-telemetry/opentelemetry-ruby-contrib/tree/main/instrumentation>` を参照してください。"

#: ../../gdi/get-data-in/application/ruby/ruby-otel-requirements.rst:22
msgid "Ensure you have supported Ruby and library versions"
msgstr "サポートされているRubyとライブラリのバージョンを確認してください。"

#: ../../gdi/get-data-in/application/ruby/ruby-otel-requirements.rst:24
msgid "The agent of the Splunk Distribution of OpenTelemetry Ruby is compatible with Ruby 2.6 and higher."
msgstr "Splunk Distribution of OpenTelemetry Ruby のエージェントは Ruby 2.6 以降に対応しています。"

#: ../../gdi/get-data-in/application/ruby/ruby-otel-requirements.rst:31
msgid "The Splunk Distribution of OpenTelemetry Ruby exports application traces and spans to the Splunk OpenTelemetry Collector, which also collects system metric data and logs."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションは、アプリケーションのトレースとスパンを Splunk OpenTelemetry Collector にエクスポートし、システムメトリックデータとログも収集します。"

#: ../../gdi/get-data-in/application/ruby/ruby-otel-requirements.rst:33
msgid "To send application traces and spans to Splunk Observability Cloud, install the Splunk OpenTelemetry Collector for your platform. The following distributions are available:"
msgstr "アプリケーションのトレースとスパンを Splunk Observability Cloud に送信するには、お使いのプラットフォーム用の Splunk OpenTelemetry Collector をインストールします。以下のディストリビューションが利用できる："

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:-1
msgid "The Splunk Distribution of OpenTelemetry Ruby is a wrapper for the OpenTelemetry Instrumentation for Ruby, an open source Ruby agent that dynamically patches supported libraries at runtime with an OTel-compatible tracer to capture and export traces and spans."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションは、OpenTelemetry Instrumentation for Ruby のラッパーです。OpenTelemetry Instrumentation for Ruby はオープンソースの Ruby エージェントで、OTel 互換のトレーサでサポートされるライブラリを実行時に動的にパッチし、トレースとスパンをキャプチャしてエクスポートします。"

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:5
msgid "About the Splunk Distribution of OpenTelemetry Ruby"
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションについて"

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:10
msgid "The Splunk Distribution of OpenTelemetry Ruby is a wrapper for the OpenTelemetry Instrumentation for Ruby, an open source Ruby agent that dynamically patches supported libraries to capture telemetry data."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションは、OpenTelemetry Instrumentation for Ruby のラッパーです。OpenTelemetry Instrumentation for Ruby はオープンソースの Ruby エージェントで、サポートされているライブラリに動的にパッチを適用して遠隔測定データをキャプチャします。"

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:12
msgid "With the agent you can automatically instrument any application written in Ruby 2.6 and higher. See :ref:`ruby-otel-requirements`."
msgstr "このエージェントを使えば、Ruby 2.6以降で書かれたアプリケーションを自動的に計測することができます。:ref:`ruby-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:15
msgid "Features of the Splunk Distribution of OpenTelemetry Ruby"
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションの特徴"

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:17
msgid "In addition to all the features of the OpenTelemetry Instrumentation for Ruby, like bundled exporters and propagators, the agent provides additional custom features:"
msgstr "OpenTelemetry Instrumentation for Ruby のすべての機能（バンドルされたエクスポータやプロパゲータなど）に加えて、エージェントは追加のカスタム機能を提供します："

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:19
msgid "Configured to send trace and span data to Splunk Observability Cloud using the OTel Collector.."
msgstr "OTel コレクターを使用してトレースとスパンデータを Splunk Observability Cloud に送信するように設定..."

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:20
msgid "Instrumentation for HTTP server frameworks that returns server trace information in HTTP responses. See :ref:`server-trace-information-ruby`."
msgstr "HTTPサーバーフレームワーク用のインストルメンテーションで、HTTPレスポンスにサーバートレース情報を返す。:ref:`server-trace-information-ruby` を参照。"

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:21
msgid "Automatic injection of trace metadata into application logs. See :ref:`correlate-traces-with-logs-ruby`."
msgstr "アプリケーションログへのトレースメタデータの自動注入。:ref:`correlate-traces-with-logs-ruby` を参照。"

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:23
msgid "The agent of the Splunk Distribution of OpenTelemetry Ruby is supported by Splunk and is updated frequently, bringing bug fixes and new features to you before they are integrated in the upstream OTel repositories."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションのエージェントは Splunk によってサポートされ、頻繁に更新され、バグフィックスや新機能がアップストリームの OTel リポジトリに統合される前に提供されます。"

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:25
msgid "Use the Splunk Distribution of OpenTelemetry Ruby instead of the upstream OpenTelemetry instrumentation and SDK. Splunk supports only upstream OTel components as part of the Splunk Distribution of OpenTelemetry Ruby."
msgstr "アップストリームの OpenTelemetry インスツルメンテーションと SDK ではなく、OpenTelemetry Ruby の Splunk ディストリビューションを使用してください。Splunk は、OpenTelemetry Ruby の Splunk ディストリビューションの一部として、アップストリームの OTel コンポーネントのみをサポートしています。"

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:28
msgid "Defaults of the Splunk Distribution of OpenTelemetry Ruby"
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションのデフォルト"

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:30
msgid "The Splunk Distribution of OpenTelemetry Ruby has the following default settings for context propagation, exporters, and trace settings:"
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションでは、コンテキストプロパゲーション、エクスポーター、トレース設定のデフォルト設定が以下のようになっています："

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:32
msgid "W3C tracecontext and W3C baggage context propagation is activated by default. You can also configure B3 propagation. See :ref:`trace-propagation-configuration-ruby`."
msgstr "W3C tracecontext と W3C baggage context propagation はデフォルトで有効になっています。また、B3プロパゲーションを設定することもできる。:ref:`trace-propagation-configuration-ruby` を参照。"

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:34
msgid "Unlimited defaults for trace configuration to support full-fidelity tracing. See :ref:`trace-configuration-ruby`."
msgstr "完全忠実なトレースをサポートするため、トレース設定のデフォルトは無制限。:ref:`trace-configuration-ruby` を参照。"

#: ../../gdi/get-data-in/application/ruby/splunk-ruby-otel-distribution.rst:44
msgid "The Splunk Distribution of OpenTelemetry Ruby is open source software. You can contribute to its improvement by creating pull requests in GitHub. To learn more, see the :new-page:`contributing guidelines <https://github.com/signalfx/splunk-otel-ruby/blob/main/CONTRIBUTING.md>` on GitHub."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションはオープンソースソフトウェアです。GitHubでプルリクエストを作成することで、改良に貢献することができる。詳しくは、GitHub の:new-page:`貢献ガイドライン<https://github.com/signalfx/splunk-otel-ruby/blob/main/CONTRIBUTING.md>` をご覧ください。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:-1
msgid "If your instrumented Ruby application is not sending data to Splunk Observability Cloud, or data is missing, follow these steps to identify the issue and solve it."
msgstr "インスツルメンテッド Ruby アプリケーションが Splunk Observability Cloud にデータを送信しない、またはデータが欠落している場合は、以下の手順に従って問題を特定し、解決してください。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:5
msgid "Troubleshoot Ruby instrumentation for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud の Ruby インストルメンテーションのトラブルシューティング"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:10
msgid "When you instrument a Ruby application using the Splunk Distribution of OpenTelemetry Ruby and you don't see your data in Splunk Observability Cloud, follow these troubleshooting steps."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションを使用して Ruby アプリケーションを計測しているときに、Splunk Observability Cloud にデータが表示されない場合は、以下のトラブルシューティング手順に従ってください。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:15
msgid "Steps for troubleshooting Ruby OpenTelemetry issues"
msgstr "Ruby OpenTelemetryのトラブルシューティングの手順"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:17
msgid "The following steps can help you troubleshoot Ruby instrumentation issues:"
msgstr "以下の手順は、Rubyインストルメンテーションのトラブルシューティングに役立ちます："

#: ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:19
msgid ":ref:`enable-ruby-debug-logging`."
msgstr ":ref:`enable-ruby-debug-logging`."

#: ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:26
msgid "Debug logging increases the verbosity of the Ruby instrumentation. This can help you troubleshoot issues. To activate debug logging, set the ``OTEL_LOG_LEVEL`` environment variable to ``debug``."
msgstr "デバッグ・ロギングはRubyのインスツルメンテーションの冗長性を高めます。これは問題のトラブルシューティングに役立つ。デバッグ・ロギングを有効にするには、``OTEL_LOG_LEVEL`` 環境変数を``debug`` に設定する。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:39
msgid "By default, the :ref:`Splunk Distribution of OpenTelemetry Ruby <splunk-ruby-otel-dist>` uses the OTLP exporter. Any issue affecting the export of traces produces an error in the debug logs."
msgstr "デフォルトでは、:ref:`Splunk Distribution of OpenTelemetry Ruby <splunk-ruby-otel-dist>` 、OTLPエクスポーターを使用します。トレースのエクスポートに影響する問題はすべて、デバッグログにエラーを生成します。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/common-ruby-troubleshooting.rst:47
msgid "Check that your collector instance is configured and running. See :ref:`otel-troubleshooting`."
msgstr "コレクタインスタンスが構成され、稼動していることを確認します。:ref:`otel-troubleshooting` を参照。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:-1
msgid "The agent of the Splunk Distribution of OpenTelemetry Ruby replaces the deprecated SignalFx Ruby Tracing Library. To migrate to the Splunk Ruby OTel agent, follow these instructions."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションのエージェントは、非推奨の SignalFx Ruby トレースライブラリを置き換えます。Splunk Ruby OTel エージェントに移行するには、以下の手順に従ってください。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:5
msgid "Migrate from the SignalFx Tracing Library for Ruby"
msgstr "SignalFx Tracing Library for Rubyからの移行"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:10
msgid "The SignalFx Ruby tracing library is deprecated and will reach End of Support on September 30th, 2023. Replace it with the agent from the Splunk Distribution of OpenTelemetry Ruby."
msgstr "SignalFx Rubyトレース・ライブラリは非推奨となり、2023年9月30日にサポート終了となります。OpenTelemetry Ruby の Splunk ディストリビューションのエージェントに置き換えてください。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:12
msgid "The agent of the Splunk Distribution of OpenTelemetry Ruby is based on the OpenTelemetry Instrumentation for Ruby, an open-source project that uses the OpenTelemetry API."
msgstr "Splunk Distribution of OpenTelemetry Ruby のエージェントは、OpenTelemetry API を使用するオープンソースプロジェクトである OpenTelemetry Instrumentation for Ruby に基づいています。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:14
msgid "Read the following instructions to learn how to migrate to the Splunk Ruby OTel agent."
msgstr "Splunk Ruby OTel エージェントへの移行方法については、以下の説明をお読みください。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:21
msgid "The Splunk Distribution of OpenTelemetry Ruby requires Ruby 2.5 and higher. See :ref:`ruby-otel-requirements`."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションには Ruby 2.5 以上が必要です。:ref:`ruby-otel-requirements` を参照。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:26
msgid "Migrate to the Splunk Distribution of OpenTelemetry Ruby"
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションへの移行"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:28
msgid "To migrate from the SignalFx Tracing Library for Ruby to the Splunk Distribution of OpenTelemetry Ruby, follow these steps:"
msgstr "SignalFx Tracing Library for Ruby から Splunk Distribution of OpenTelemetry Ruby へ移行するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:30
msgid "Remove the tracing library packages. See :ref:`remove-ruby-tracing-library`."
msgstr "トレースライブラリパッケージを削除する。:ref:`remove-ruby-tracing-library` を参照。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:31
msgid "Deploy the Splunk Distribution of OpenTelemetry Ruby. See :ref:`install-splunk-otel-ruby-distribution`."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションをデプロイします。:ref:`install-splunk-otel-ruby-distribution` を参照。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:32
msgid "Migrate your existing configuration. See :ref:`migrate-settings-ruby-agent`."
msgstr "既存の構成を移行する。:ref:`migrate-settings-ruby-agent` を参照。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:39
msgid "Remove the SignalFx Tracing Library for Ruby"
msgstr "Ruby用SignalFxトレーシング・ライブラリの削除"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:43
msgid "Uninstall ``signalfx``:"
msgstr "アンインストール``signalfx`` ："

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:49
msgid "Remove ``signalfx`` from your Gemfile."
msgstr "Gemfileから``signalfx`` 。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:56
msgid "Deploy the Splunk Ruby agent"
msgstr "Splunk Ruby エージェントをデプロイする"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:58
msgid "To install the Splunk Distribution of OpenTelemetry Ruby, see :ref:`instrument-ruby-applications`."
msgstr "OpenTelemetry Ruby の Splunk ディストリビューションをインストールするには、:ref:`instrument-ruby-applications` を参照してください。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:63
msgid "Migrate settings for the Splunk Ruby OTel agent"
msgstr "Splunk Ruby OTel エージェントの設定を移行する"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:65
msgid "To migrate settings from the SignalFx tracing library to the Splunk Distribution of OpenTelemetry Ruby, rename the following environment variables:"
msgstr "SignalFx トレースライブラリから Splunk Distribution of OpenTelemetry Ruby に設定を移行するには、以下の環境変数の名前を変更します："

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:81
msgid "For more information about Splunk Ruby OTel settings, see :ref:`advanced-ruby-otel-configuration`."
msgstr "Splunk Ruby OTel 設定の詳細については、:ref:`advanced-ruby-otel-configuration` を参照してください。"

#: ../../gdi/get-data-in/application/ruby/troubleshooting/migrate-signalfx-ruby-agent-to-otel.rst:86
msgid "To inject tracing metadata into log statements, see :ref:`correlate-traces-with-logs-ruby`."
msgstr "トレース・メタデータをログ文に注入するには、:ref:`correlate-traces-with-logs-ruby` を参照してください。"

#: ../../gdi/get-data-in/application/span-attributes.rst:-1
msgid "Reference documentation for spans, with links semantics and conventions."
msgstr "リンクのセマンティクスと規約を記載した、スパンのリファレンス・ドキュメント。"

#: ../../gdi/get-data-in/application/span-attributes.rst:7
msgid "Spans in Splunk Observability Cloud"
msgstr "Splunk Observability Cloud のスパン"

#: ../../gdi/get-data-in/application/span-attributes.rst:12
msgid "Spans represent specific operations in and between systems, such as calls that use well-known protocols like HTTP, or database calls."
msgstr "スパンは、HTTPのようなよく知られたプロトコルを使用する呼び出しやデータベース呼び出しなど、システム内およびシステム間の特定の操作を表す。"

#: ../../gdi/get-data-in/application/span-attributes.rst:14
msgid "Spans generated by OpenTelemetry can be annotated with attributes specific to the represented operation. Depending on the protocol and the type of operation, you might need additional information to represent and analyze a span correctly."
msgstr "OpenTelemetryによって生成されたスパンは、表現されたオペレーションに固有のアトリビュートでアノテートすることができます。プロトコルと操作の種類によっては、スパンを正しく表現し分析するために追加情報が必要になる場合がある。"

#: ../../gdi/get-data-in/application/span-attributes.rst:16
msgid "It's also important to unify how attribution works in different languages. This way, you don't need to learn specifics of a language, and telemetry collected from multilanguage, micro-service environments can still be correlated and cross-analyzed."
msgstr "また、異なる言語でのアトリビューションの仕組みを統一することも重要だ。この方法では、言語の詳細を学ぶ必要はなく、多言語、マイクロサービス環境から収集された遠隔測定は、まだ相関し、クロス分析することができる。"

#: ../../gdi/get-data-in/application/span-attributes.rst:19
msgid "Semantic conventions"
msgstr "意味上の規則"

#: ../../gdi/get-data-in/application/span-attributes.rst:21
msgid "The following semantic conventions apply for spans:"
msgstr "スパンには以下の意味上の規則が適用される："

#: ../../gdi/get-data-in/application/span-attributes.rst:23
msgid ":new-page:`General <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/span-general.md>`: General semantic attributes that might be used in describing different kinds of operations."
msgstr ":new-page:`General<https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/span-general.md>`: さまざまな種類の操作を記述する際に使用される可能性のある、一般的な意味属性。"

#: ../../gdi/get-data-in/application/span-attributes.rst:25
msgid ":new-page:`HTTP <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md>`: For HTTP client and server spans."
msgstr ":new-page:`HTTP<https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md>`: HTTPクライアントとサーバーのスパン。"

#: ../../gdi/get-data-in/application/span-attributes.rst:27
msgid ":new-page:`Database <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/database.md>`: For SQL and NoSQL client call spans."
msgstr ":new-page:`Database<https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/database.md>`: SQLおよびNoSQLクライアントのコールスパン。"

#: ../../gdi/get-data-in/application/span-attributes.rst:29
msgid ":new-page:`RPC/RMI <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/rpc.md>`: For remote procedure call (for example, gRPC) spans."
msgstr ":new-page:`RPC/RMI<https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/rpc.md>`: リモートプロシージャコール（例えばgRPC）のスパン。"

#: ../../gdi/get-data-in/application/span-attributes.rst:31
msgid ":new-page:`Messaging <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/messaging.md>`: For messaging system spans (queues, publish/subscribe, and so on)."
msgstr ":new-page:`Messaging<https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/messaging.md>`: メッセージング・システムのスパン（キュー、パブリッシュ／サブスクライブなど）。"

#: ../../gdi/get-data-in/application/span-attributes.rst:33
msgid ":new-page:`FaaS <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/faas.md>`: For Function as a Service (for example, AWS Lambda) spans."
msgstr ":new-page:`FaaS<https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/faas.md>` ：Function as a Service（例えばAWS Lambda）のスパン。"

#: ../../gdi/get-data-in/application/span-attributes.rst:35
msgid ":new-page:`Exceptions <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/exceptions.md>`: For recording exceptions associated with a span."
msgstr ":new-page:`例外<https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/exceptions.md>` ：スパンに関連する例外を記録する。"

#: ../../gdi/get-data-in/application/span-attributes.rst:37
msgid ":new-page:`Compatibility <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/compatibility.md>`: For spans generated by compatibility components. For example, OpenTracing Shim layer."
msgstr ":new-page:`互換性<https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/compatibility.md>`: 互換性コンポーネントによって生成されたスパン用。例えば、OpenTracingのシム・レイヤー。"

#: ../../gdi/get-data-in/application/span-attributes.rst:39
msgid "Learn more about OpenTelemetry in the OpenTelemetry official documentation, such as library-specific semantic conventions for AWS Lambda, AWS SDK, or GraphQL."
msgstr "OpenTelemetry の詳細については、AWS Lambda、AWS SDK、GraphQL におけるライブラリ固有のセマンティック規約など、OpenTelemetry 公式ドキュメントを参照してください。"

#: ../../gdi/get-data-in/application/span-attributes.rst:42
msgid "Event naming guidelines"
msgstr "イベント・ネーミング・ガイドライン"

#: ../../gdi/get-data-in/application/span-attributes.rst:44
msgid "Don't add a new event with the same name as an event that existed in the past, even if that event has been renamed."
msgstr "過去に存在したイベントと同じ名前の新しいイベントを追加しないでください（たとえそのイベントの名前が変更されたとしても）。"

#: ../../gdi/get-data-in/application/span-attributes.rst:46
msgid "When introducing a new event, check names in all existing schema files to make sure it doesn't appear as a key of any `rename_events` section. Keys show old event names in rename operations."
msgstr "新しいイベントを導入する際には、既存のすべてのスキーマ・ファイルの名前をチェックし、`rename_events` セクションのキーとして表示されていないことを確認してください。キーは名前の変更操作で古いイベント名を表示する。"

#: ../../gdi/get-data-in/compute/compute.rst:-1
msgid "Start sending application metrics and logs to Splunk Observability Cloud."
msgstr "アプリケーションメトリクスとログの Splunk Observability Cloud への送信を開始します。"

#: ../../gdi/get-data-in/compute/compute.rst:5
msgid "Collect infrastructure metrics and logs"
msgstr "インフラのメトリクスとログを収集する"

#: ../../gdi/get-data-in/compute/compute.rst:17
msgid "Deploy the Splunk Distribution of OpenTelemetry Collector on your infrastructure to start sending application metrics and spans to Splunk Observability Cloud."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションをインフラストラクチャにデプロイして、Splunk Observability Cloud にアプリケーションメトリクスとスパンの送信を開始します。"

#: ../../gdi/get-data-in/compute/compute.rst:19
msgid "See the following topics to set up the Splunk Distribution of OpenTelemetry Collector on each of these hosts:"
msgstr "それぞれのホストで OpenTelemetry Collector の Splunk ディストリビューションをセットアップするには、以下のトピックを参照してください："

#: ../../gdi/get-data-in/compute/compute.rst:21 ../../gdi/opentelemetry/collector-with-the-uf.rst:22
msgid ":ref:`get-started-k8s`"
msgstr ":ref:`get-started-k8s`"

#: ../../gdi/get-data-in/compute/compute.rst:22
msgid ":ref:`get-started-linux`"
msgstr ":ref:`get-started-linux`"

#: ../../gdi/get-data-in/compute/compute.rst:23
msgid ":ref:`get-started-windows`"
msgstr ":ref:`get-started-windows`"

#: ../../gdi/get-data-in/compute/compute.rst:25
msgid "To send custom metrics to Splunk Observability Cloud, see :ref:`send-custom-metrics`. To learn more about Splunk Observability Cloud's data model, refer to :ref:`data-model`."
msgstr "カスタムメトリクスを Splunk Observability Cloud に送信するには、:ref:`send-custom-metrics` を参照してください。Splunk Observability Cloud のデータモデルの詳細については、:ref:`data-model` を参照してください。"

#: ../../gdi/get-data-in/compute/k8s.rst:-1
msgid "Integrate Kubernetes metrics and logs with Splunk Observability Cloud."
msgstr "Kubernetes のメトリクスとログを Splunk Observability Cloud と統合します。"

#: ../../gdi/get-data-in/compute/k8s.rst:5
msgid "Collect Kubernetes data"
msgstr "Kubernetesデータの収集"

#: ../../gdi/get-data-in/compute/k8s.rst:10
msgid "The Splunk Distribution of OpenTelemetry Collector provides integrated collection and forwarding for all Kubernetes telemetry. Deploy the Collector to gather telemetry for Splunk Infrastructure Monitoring, Splunk APM, or Splunk Log Observer."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションは、すべての Kubernetes テレメトリの統合された収集と転送を提供します。コレクターを配置して、Splunk Infrastructure Monitoring、Splunk APM、または Splunk Log Observer 用の遠隔測定を収集します。"

#: ../../gdi/get-data-in/compute/k8s.rst:12
msgid "The Collector is deployed using a Helm chart for the Splunk Distribution of OpenTelemetry Collector for Kubernetes. In a Kubernetes cluster, the chart creates a Kubernetes DaemonSet as well as other Kubernetes objects. These objects collect the following for the cluster:"
msgstr "コレクターは、Splunk Distribution of OpenTelemetry Collector for Kubernetes の Helm チャートを使用してデプロイされます。Kubernetesクラスタでは、チャートはKubernetes DaemonSetと他のKubernetesオブジェクトを作成する。これらのオブジェクトは、クラスタについて以下を収集する："

#: ../../gdi/get-data-in/compute/k8s.rst:14
msgid "Metrics for Infrastructure Monitoring"
msgstr "インフラ監視のための指標"

#: ../../gdi/get-data-in/compute/k8s.rst:15
msgid "Traces for APM"
msgstr "APMのトレース"

#: ../../gdi/get-data-in/compute/k8s.rst:16
msgid "Logs for Log Observer"
msgstr "ログオブザーバー用ログ"

#: ../../gdi/get-data-in/compute/k8s.rst:21
msgid "This Kubernetes solution has been validated in Kubernetes environments that use Minikube, Amazon Elastic Kubernetes Service (Amazon EKS), and Google Kubernetes Engine."
msgstr "このKubernetesソリューションは、Minikube、Amazon Elastic Kubernetes Service（Amazon EKS）、Google Kubernetes Engineを使用するKubernetes環境で検証されています。"

#: ../../gdi/get-data-in/compute/k8s.rst:24
msgid "Start the integration"
msgstr "統合の開始"

#: ../../gdi/get-data-in/compute/k8s.rst:26
msgid "To start a Kubernetes integration, follow these steps:"
msgstr "Kubernetesインテグレーションを開始するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/compute/k8s.rst:30
msgid "Open the :new-page:`Kubernetes guided setup <https://login.signalfx.com/#/gdi/scripted/kubernetes/step-1?gdiState=%7B\"integrationId\":\"kubernetes\"%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`Kubernetes guided setup<https://login.signalfx.com/#/gdi/scripted/kubernetes/step-1?gdiState=%7B\"integrationId\":\"kubernetes\"%7D>` を開く。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/compute/k8s.rst:32 ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:33 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:44 ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:34 ../../gdi/get-data-in/rum/react/install-rum-react.rst:41 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:21 ../../gdi/opentelemetry/install-the-collector.rst:39
msgid "In the navigation menu, select :menuselection:`Data Management` to open the Integrate Your Data page."
msgstr "ナビゲーションメニューで、:menuselection:`Data Management` を選択し、Integrate Your Data ページを開きます。"

#: ../../gdi/get-data-in/compute/k8s.rst:34
msgid "Select :guilabel:`Kubernetes`."
msgstr ":guilabel:`Kubernetes` を選択する。"

#: ../../gdi/get-data-in/compute/k8s.rst:36 ../../gdi/get-data-in/compute/linux.rst:37 ../../gdi/get-data-in/compute/windows.rst:41
msgid "Select :guilabel:`Add Connection`. The integration guided setup appears."
msgstr ":guilabel:`接続の追加` を選択する。統合ガイドセットアップが表示されます。"

#: ../../gdi/get-data-in/compute/k8s.rst:38 ../../gdi/get-data-in/compute/linux.rst:39 ../../gdi/get-data-in/compute/windows.rst:43
msgid "Follow the steps in the guided setup."
msgstr "セットアップガイドの手順に従ってください。"

#: ../../gdi/get-data-in/compute/k8s.rst:41
msgid "Advanced install"
msgstr "高度なインストール"

#: ../../gdi/get-data-in/compute/k8s.rst:43
msgid "For advanced installation instructions, see :ref:`otel-install-k8s`."
msgstr "高度なインストール手順については、:ref:`otel-install-k8s` を参照してください。"

#: ../../gdi/get-data-in/compute/k8s.rst:45
msgid "This includes :ref:`how to configure the destination for the Collector <collector-k8s-destination>`: Splunk Enterprise or Splunk Cloud (``splunkPlatform``) or Splunk Observability Cloud (``splunkObservability``)."
msgstr "これには:ref:`how to configure the destination for the Collector <collector-k8s-destination>` が含まれます：Splunk Enterprise または Splunk Cloud (``splunkPlatform``) または Splunk Observability Cloud (``splunkObservability``)."

#: ../../gdi/get-data-in/compute/k8s.rst:48
msgid "Check access tokens"
msgstr "アクセストークンのチェック"

#: ../../gdi/get-data-in/compute/k8s.rst:50
msgid "Access tokens are organization-level tokens that, by default, are valid for one year. For access tokens created prior to February 28, 2022, the expiration date remains 5 years from the creation date. You must use an org token to authenticate emitters that send data points to Splunk Observability Cloud. You can use an org token in long-running scripts that call the API. For more information, see :ref:`admin-org-tokens`."
msgstr "アクセストークンは組織レベルのトークンで、デフォルトでは1年間有効です。2022年2月28日以前に作成されたアクセストークンは、作成日から5年間が有効期限となります。Splunk Observability Cloud にデータポイントを送信するエミッタを認証するには、org トークンを使用する必要があります。APIを呼び出す長時間実行スクリプトでorgトークンを使用することができます。詳細は:ref:`admin-org-tokens` を参照。"

#: ../../_includes/gdi/next-steps.rst:2 ../../gdi/get-data-in/compute/k8s.rst:53 ../../gdi/get-data-in/compute/linux.rst:44 ../../gdi/get-data-in/compute/windows.rst:48 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:514 ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:105 ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:127 ../../gdi/get-data-in/connect/aws/get-awstoc.rst:10 ../../gdi/opentelemetry/install-k8s.rst:266 ../../gdi/opentelemetry/install-linux-manual.rst:280 ../../gdi/opentelemetry/install-linux.rst:249 ../../gdi/opentelemetry/install-windows-manual.rst:218 ../../gdi/opentelemetry/install-windows.rst:176
msgid "Next steps"
msgstr "次のステップ"

#: ../../gdi/get-data-in/compute/k8s.rst:55
msgid "Configure the Collector. See :ref:`otel-kubernetes-config`."
msgstr "コレクタを設定する。:ref:`otel-kubernetes-config` を参照。"

#: ../../gdi/get-data-in/compute/k8s.rst:56
msgid "See how to send Kubernetes logs in :ref:`otel-kubernetes-config-logs`."
msgstr ":ref:`otel-kubernetes-config-logs` でKubernetesのログを送信する方法を参照してください。"

#: ../../gdi/get-data-in/compute/k8s.rst:57 ../../gdi/get-data-in/compute/linux.rst:47 ../../gdi/get-data-in/compute/windows.rst:51
msgid "Learn about the Collector commands. See :ref:`otel-commands`."
msgstr "Collector コマンドについて説明します。:ref:`otel-commands` を参照。"

#: ../../gdi/get-data-in/compute/k8s.rst:58 ../../gdi/get-data-in/compute/linux.rst:48 ../../gdi/get-data-in/compute/windows.rst:52
msgid "Troubleshoot Collector issues. See :ref:`otel-troubleshooting`."
msgstr "コレクターの問題のトラブルシューティング:ref:`otel-troubleshooting` を参照。"

#: ../../gdi/get-data-in/compute/k8s.rst:59
msgid "Troubleshoot Kubernetes and container issues. See :ref:`tshoot-k8s-container-runtimes`."
msgstr "Kubernetesとコンテナの問題のトラブルシューティング。:ref:`tshoot-k8s-container-runtimes` を参照。"

#: ../../gdi/get-data-in/compute/linux.rst:-1
msgid "Send metrics and logs from Linux hosts to Splunk Observability Cloud."
msgstr "メトリクスとログを Linux ホストから Splunk Observability Cloud に送信します。"

#: ../../gdi/get-data-in/compute/linux.rst:5
msgid "Collect Linux data"
msgstr "Linuxデータの収集"

#: ../../gdi/get-data-in/compute/linux.rst:10
msgid "The Splunk Distribution of OpenTelemetry Collector is a package that provides integrated collection and forwarding for all telemetry types for the Linux platform. You can deploy the Collector to gather telemetry for Splunk Infrastructure Monitoring, Splunk APM, or Splunk Log Observer."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションは、Linux プラットフォーム向けに、すべてのテレメトリタイプの統合収集と転送を提供するパッケージです。コレクターを配置して、Splunk Infrastructure Monitoring、Splunk APM、または Splunk Log Observer 用の遠隔測定を収集できます。"

#: ../../gdi/get-data-in/compute/linux.rst:15
msgid "The Collector supports the following Linux distributions and versions:"
msgstr "コレクターは以下のLinuxディストリビューションとバージョンをサポートしています："

#: ../../gdi/get-data-in/compute/linux.rst:17 ../../gdi/opentelemetry/deployments/deployments-chef.rst:28 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:14 ../../gdi/opentelemetry/deployments/deployments-salt.rst:27
msgid "Amazon Linux: 2"
msgstr "Amazon Linux: 2"

#: ../../gdi/get-data-in/compute/linux.rst:18 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:15
msgid "CentOS / Red Hat / Oracle: 7, 8"
msgstr "CentOS / Red Hat / Oracle: 7, 8"

#: ../../gdi/get-data-in/compute/linux.rst:19 ../../gdi/opentelemetry/deployments/deployments-chef.rst:30 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:17 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:16 ../../gdi/opentelemetry/deployments/deployments-salt.rst:29 ../../gdi/opentelemetry/install-linux.rst:27
msgid "Debian: 9, 10, 11"
msgstr "Debian: 9、10、11"

#: ../../gdi/get-data-in/compute/linux.rst:20 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:18
msgid "Ubuntu: 16.04, 18.04, 20.04, 22.04"
msgstr "Ubuntu：16.04, 18.04, 20.04, 22.04"

#: ../../gdi/get-data-in/compute/linux.rst:23 ../../gdi/opentelemetry/components/attributes-processor.rst:39 ../../gdi/opentelemetry/components/batch-processor.rst:13 ../../gdi/opentelemetry/components/databricks-receiver.rst:22 ../../gdi/opentelemetry/components/filter-processor.rst:35 ../../gdi/opentelemetry/components/fluentd-receiver.rst:17 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:28 ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:15 ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:15 ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:17 ../../gdi/opentelemetry/components/logging-exporter.rst:16
#: ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:18 ../../gdi/opentelemetry/components/oracledb-receiver.rst:14 ../../gdi/opentelemetry/components/postgresql-receiver.rst:22 ../../gdi/opentelemetry/components/prometheus-receiver.rst:20 ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:22 ../../gdi/opentelemetry/components/resource-processor.rst:41 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:29 ../../gdi/opentelemetry/components/signalfx-exporter.rst:17 ../../gdi/opentelemetry/components/signalfx-receiver.rst:17 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:20
#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:24 ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:12 ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:21 ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:17 ../../gdi/opentelemetry/components/transform-processor.rst:35 ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:19 ../../gdi/opentelemetry/deployments/deployments-nomad.rst:17 ../../gdi/opentelemetry/resources.rst:15
msgid "Get started"
msgstr "スタート"

#: ../../gdi/get-data-in/compute/linux.rst:25 ../../gdi/get-data-in/compute/windows.rst:29 ../../gdi/opentelemetry/install-the-collector.rst:35
msgid "Splunk Observability Cloud offers a guided setup to install the Collector:"
msgstr "Splunk Observability Cloud は Collector をインストールするためのガイド付きセットアップを提供します："

#: ../../gdi/get-data-in/compute/linux.rst:29
msgid "Open the :new-page:`Linux guided setup <https://login.signalfx.com/#/gdi/scripted/otel-connector-linux/step-1?category=all&gdiState=%7B\"integrationId\":\"otel-connector-linux\"%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`Linux guided setup<https://login.signalfx.com/#/gdi/scripted/otel-connector-linux/step-1?category=all&gdiState=%7B\"integrationId\":\"otel-connector-linux\"%7D>` を開いてください。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/compute/linux.rst:31 ../../gdi/get-data-in/compute/windows.rst:35 ../../gdi/get-data-in/connect/gcp/gcp.rst:164
msgid "In the navigation menu, select :menuselection:`Data Management`, then select :guilabel:`+ Add Integration` to open the :strong:`Integrate Your Data` page."
msgstr "ナビゲーションメニューで、:menuselection:`Data Management` を選択し、:guilabel:`+ Add Integration` を選択して、:strong:`Integrate Your Data` ページを開きます。"

#: ../../gdi/get-data-in/compute/linux.rst:33 ../../gdi/get-data-in/compute/windows.rst:37 ../../gdi/get-data-in/integrations.rst:1173 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:23
msgid "In the integration filter menu, select :guilabel:`All`."
msgstr "統合フィルターメニューで、:guilabel:`All` を選択する。"

#: ../../gdi/get-data-in/compute/linux.rst:35
msgid "Select :guilabel:`Linux`."
msgstr ":guilabel:`Linux` を選択する。"

#: ../../gdi/get-data-in/compute/linux.rst:41
msgid "For advanced installation instructions, see :ref:`otel-install-linux`."
msgstr "高度なインストール手順については、:ref:`otel-install-linux` を参照してください。"

#: ../../gdi/get-data-in/compute/linux.rst:46
msgid "Configure the Collector on Linux. See :ref:`otel-linux-config`."
msgstr "Linux でコレクタを設定します。:ref:`otel-linux-config` を参照。"

#: ../../gdi/get-data-in/compute/windows.rst:-1
msgid "Start sending metrics and log telemetry from Windows hosts to Splunk Observability Cloud."
msgstr "Windows ホストから Splunk Observability Cloud にメトリクスとログの遠隔測定を送信する。"

#: ../../gdi/get-data-in/compute/windows.rst:5
msgid "Collect Windows data"
msgstr "Windowsデータの収集"

#: ../../gdi/get-data-in/compute/windows.rst:10
msgid "The Splunk Distribution of OpenTelemetry Collector is a package that provides integrated collection and forwarding for all telemetry types for Windows. You can deploy the Collector to gather telemetry for Splunk Infrastructure Monitoring, Splunk APM, or Splunk Log Observer."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションは、Windows 用のすべての遠隔測定タイプの統合収集と転送を提供するパッケージです。コレクターを配置して、Splunk Infrastructure Monitoring、Splunk APM、または Splunk Log Observer 用の遠隔測定を収集できます。"

#: ../../gdi/get-data-in/compute/windows.rst:15
msgid "The Collector supports the following Windows versions:"
msgstr "コレクタは以下の Windows バージョンをサポートしています："

#: ../../gdi/get-data-in/compute/windows.rst:17
msgid "Windows Server 2012 64-bit"
msgstr "Windows Server 2012 64ビット"

#: ../../gdi/get-data-in/compute/windows.rst:18
msgid "Windows Server 2016 64-bit"
msgstr "Windows Server 2016 64ビット"

#: ../../gdi/get-data-in/compute/windows.rst:19 ../../gdi/opentelemetry/deployments/deployments-chef.rst:39
msgid "Windows Server 2019 64-bit"
msgstr "Windows Server 2019 64ビット"

#: ../../gdi/get-data-in/compute/windows.rst:20 ../../gdi/opentelemetry/deployments/deployments-chef.rst:40
msgid "Windows Server 2022 64-bit"
msgstr "Windows Server 2022 64ビット"

#: ../../gdi/get-data-in/compute/windows.rst:21
msgid "Windows 10 Home"
msgstr "Windows 10 Home"

#: ../../gdi/get-data-in/compute/windows.rst:22
msgid "Windows 10 Pro"
msgstr "Windows 10 Pro"

#: ../../gdi/get-data-in/compute/windows.rst:24
msgid "PowerShell 3.0 or higher is required."
msgstr "PowerShell 3.0以上が必要です。"

#: ../../gdi/get-data-in/compute/windows.rst:27 ../../gdi/opentelemetry/deployments/deployments-chef.rst:43 ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:26 ../../gdi/opentelemetry/deployments/deployments-fargate.rst:35 ../../gdi/opentelemetry/deployments/deployments-salt.rst:34
msgid "Getting started"
msgstr "スタート"

#: ../../gdi/get-data-in/compute/windows.rst:33
msgid "Open the :new-page:`Windows guided setup <https://login.signalfx.com/#/gdi/scripted/otel-connector-windows/step-1?category=all&gdiState=%7B\"integrationId\":\"otel-connector-windows\"%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`Windowsガイド付きセットアップ<https://login.signalfx.com/#/gdi/scripted/otel-connector-windows/step-1?category=all&gdiState=%7B\"integrationId\":\"otel-connector-windows\"%7D>` を開いてください。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/compute/windows.rst:39
msgid "Select :guilabel:`Windows`."
msgstr ":guilabel:`Windows` を選択する。"

#: ../../gdi/get-data-in/compute/windows.rst:45
msgid "For advanced installation instructions, see :ref:`otel-install-windows`."
msgstr "高度なインストール手順については、:ref:`otel-install-windows` を参照してください。"

#: ../../gdi/get-data-in/compute/windows.rst:50
msgid "Configure the Collector. See :ref:`otel-configuration`."
msgstr "コレクタを設定する。:ref:`otel-configuration` を参照。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:-1
msgid "Deprecation notice for the AWS integration GetMetricStatistics API."
msgstr "AWSインテグレーションGetMetricStatistics APIの廃止のお知らせ。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:5 ../../gdi/get-data-in/connect/aws/get-awstoc.rst:10
msgid "GetMetricStatistics API deprecation notice"
msgstr "GetMetricStatistics API の非推奨のお知らせ"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:11
msgid "Splunk will remove support for the ``GetMetricStatistics`` API on :strike:`May 1, 2023` :strike:`May 23, 2023` **May 31, 2023**. After this date **only** the ``GetMetricData`` API will be used. Follow the instructions on this document to migrate to the ``GetMetricData`` API."
msgstr "Splunk は:strike:`2023 年 5 月 1 日` :strike:`2023 年 5 月 23 日` **2023 年 5 月 31 日** に``GetMetricStatistics`` API のサポートを終了します。この日以降は、``GetMetricData`` APIのみが使用されます。``GetMetricData`` API に移行するには、この文書の指示に従ってください。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:13
msgid "Splunk Observability Cloud provides a unified view into metrics, traces, and logs coming from various sources through integrations with third party services, including AWS integrations."
msgstr "Splunk Observability Cloud は、AWS 統合などのサードパーティサービスとの統合により、さまざまなソースからのメトリクス、トレース、ログを統合的に表示します。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:15
msgid "Splunk provides the following options to integrate with CloudWatch:"
msgstr "Splunk は CloudWatch と統合するために以下のオプションを提供している："

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:17
msgid "``GetMetricStatistics``, the legacy poll-based API."
msgstr "``GetMetricStatistics``レガシーなポーリング・ベースのAPI。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:18
msgid "``GetMetricData``, the modern poll-based API. It supports bulk retrieval of CloudWatch metric data. Shifting from ``GetMetricStatistics`` to ``GetMetricData`` can result in up to 20 times fewer API calls, substantially improving performance and data latency."
msgstr "``GetMetricData``つまり、最新のポーリング・ベースのAPIである。CloudWatchメトリック・データの一括検索をサポートする。``GetMetricStatistics`` から``GetMetricData`` に移行すると、API呼び出しが最大20倍少なくなり、パフォーマンスとデータレイテンシーが大幅に改善される。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:19
msgid ":ref:`Metric Streams, the streaming API <aws-metricstreams>`."
msgstr ":ref:`Metric Streams, the streaming API <aws-metricstreams>`."

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:22
msgid "Switch to the GetMetricData API"
msgstr "GetMetricData APIに切り替える"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:24
msgid "You can configure any existing integration to use the ``GetMetricData`` API, all you need to do is to ensure Splunk Observability Cloud is :ref:`allowed to use the GetMetricData API <aws-iam-policy>`."
msgstr "既存の統合を構成して``GetMetricData`` API を使用することができます。必要なのは Splunk Observability Cloud が:ref:`allowed to use the GetMetricData API <aws-iam-policy>` であることを確認することだけです。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:26
msgid "To do so, add ``\"cloudwatch:GetMetricData\"`` in the :strong:`Action` section of the AWS IAM policy JSON document."
msgstr "そのためには、AWS IAM ポリシー JSON ドキュメントの:strong:`Action` セクションに``\"cloudwatch:GetMetricData\"`` を追加する。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:29
msgid "Configure the API using the AWS UI"
msgstr "AWS UIを使用してAPIを設定する"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:31
msgid "Alternatively, you can configure this using the AWS Management Console."
msgstr "または、AWSマネジメントコンソールを使用して設定することもできます。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:36
msgid "Select ``GetMetricData`` (and other permissions if pertinent), choose :guilabel:`Review Policy`, and then save the changes to make them effective."
msgstr "``GetMetricData`` （および該当する場合はその他の権限）を選択し、:guilabel:`Review Policy` 、変更を保存して有効にします。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:39
msgid "Monitor the effects of the new configuration"
msgstr "新しいコンフィギュレーションの効果をモニターする"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:41
msgid "Monitor CloudWatch integration calls by checking the ``sf.org.num.awsServiceCallCount`` metric. This metric tracks the number of calls by a ``method`` and ``aws_account_id`` so you can easily verify what API each AWS account is using."
msgstr "``sf.org.num.awsServiceCallCount`` メトリックをチェックすることで、CloudWatch 統合コールを監視する。このメトリクスは、``method`` と``aws_account_id`` によるコール数を追跡するので、各 AWS アカウントが使用している API を簡単に確認できる。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:43
msgid "After switching to ``GetMetricData``, you should see:"
msgstr "``GetMetricData`` に切り替えてみてください："

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:45
msgid "A significant reduction (up to 20x) in the total number of calls required to obtain data."
msgstr "データ取得に必要な通話回数を大幅に削減（最大20倍）。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:46
msgid "A related reduction in the latency of data obtained by polling CloudWatch."
msgstr "CloudWatchをポーリングすることで得られるデータのレイテンシが減少する。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:49
msgid "Manage costs"
msgstr "コスト管理"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:51
msgid "If an AWS account produces many CloudWatch metrics, the improved performance might lead to an increase in the AWS API cost."
msgstr "AWSアカウントが多くのCloudWatchメトリクスを生成する場合、パフォーマンスの向上はAWS APIコストの増加につながるかもしれない。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:53
msgid "For example, if the ``GetMetricStatistics`` API takes 5 minutes to retrieve all the data, the ``GetMetricData`` API might take only 1 minute. When an AWS integration's poll rate is set to 1 minute, the ``GetMetricData`` requests are sent up to 5 times more often, generating a larger AWS API bill, while improving data latency at the same time. Increase the poll rate to 5 minutes to keep the cost at the same level."
msgstr "例えば、``GetMetricStatistics`` APIがすべてのデータを取得するのに5分かかる場合、``GetMetricData`` APIは1分で済むかもしれない。AWSインテグレーションのポーリングレートを1分に設定すると、``GetMetricData`` リクエストは最大5倍の頻度で送信され、より大きなAWS API請求が発生すると同時に、データレイテンシーも改善される。ポーリングレートを5分に上げれば、コストは同レベルに保たれる。"

#: ../../gdi/get-data-in/connect/aws/aws-api-notice.rst:55
msgid "You can keep track of the CloudWatch API cost incurred by Splunk Observability Cloud using the AWS CloudWatch integration pricing section in the :ref:`Organization Metrics / Cloud Integrations built-in dashboards <aws-dashboards>`."
msgstr "Splunk Observability Cloud で発生する CloudWatch API コストは、:ref:`Organization Metrics / Cloud Integrations built-in dashboards <aws-dashboards>` の AWS CloudWatch 統合価格セクションを使用して追跡できます。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:-1
msgid "Use the API to connect Splunk Observability Cloud to AWS, review permissions, configure the integration, collect logs, or activate CloudWatch Metric Streams."
msgstr "API を使用して、Splunk Observability Cloud を AWS に接続し、権限を確認し、統合を設定し、ログを収集し、CloudWatch Metric Streams を有効にします。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:5
msgid "Connect to AWS using the Splunk Observability Cloud API"
msgstr "Splunk Observability Cloud API を使用して AWS に接続する"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:10
msgid "To connect Splunk Observability Cloud to your AWS account, complete the following steps:"
msgstr "Splunk Observability Cloud を AWS アカウントに接続するには、以下の手順を実行します："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:12
msgid ":ref:`Create an AWS connection <aws-api-create-connection>`. See the available :ref:`AWS regions <aws-regions>`."
msgstr ":ref:`Create an AWS connection <aws-api-create-connection>`.:ref:`AWS regions <aws-regions>` をご覧ください。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:13
msgid ":ref:`Review your IAM policy <review-aws-iam-policy>`. Specify whether to collect both metrics and logs, and whether to gather metrics by API polling (which is the default) or through CloudWatch Metric Streams."
msgstr ":ref:`Review your IAM policy <review-aws-iam-policy>`.メトリクスとログの両方を収集するかどうか、APIポーリング（デフォルト）またはCloudWatch Metric Streamsを介してメトリクスを収集するかどうかを指定します。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:14
msgid ":ref:`Configure your setup <aws-api-setup>`."
msgstr ":ref:`Configure your setup <aws-api-setup>`."

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:15
msgid "Optionally, :ref:`activate Metric Streams <activate-cw-metricstreams>`."
msgstr "オプションで、:ref:`activate Metric Streams <activate-cw-metricstreams>` 。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:16
msgid ":ref:`Collect logs <aws-api-logs>`."
msgstr ":ref:`Collect logs <aws-api-logs>`."

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:17
msgid "See :ref:`next steps <aws-api-next-steps>`."
msgstr ":ref:`next steps <aws-api-next-steps>` を参照。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:22
msgid "Create an AWS connection"
msgstr "AWS接続の作成"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:24
msgid "To connect Splunk Observability Cloud to AWS through the Splunk Observability Cloud API, open your command-line interface and perform the following steps:"
msgstr "Splunk Observability Cloud API を介して Splunk Observability Cloud を AWS に接続するには、コマンドラインインターフェイスを開き、以下の手順を実行します："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:26
msgid ":ref:`Create an external AWS ID <aws-api-create-id>`"
msgstr ":ref:`Create an external AWS ID <aws-api-create-id>`"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:27
msgid ":ref:`Create an AWS policy and IAM role <aws-api-create-policy-role>`"
msgstr ":ref:`Create an AWS policy and IAM role <aws-api-create-policy-role>`"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:32
msgid "Create an external AWS ID"
msgstr "外部AWS IDの作成"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:34
msgid "Use the ``-X`` flag on a POST request to create an AWS connection that generates an external ID:"
msgstr "外部 ID を生成する AWS 接続を作成するには、POST リクエストで``-X`` フラグを使用する："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:44
msgid "Your system response looks something like this:"
msgstr "システム・レスポンスは次のようになる："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:62
msgid "In the system response, note the following:"
msgstr "システム・レスポンスでは、以下の点に注意："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:64
msgid "Values are displayed for the ``externalId`` and ``id`` fields."
msgstr "``externalId`` 、``id`` フィールドに値が表示される。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:65
msgid "The ``importCloudWatch`` value is set to ``false`` because CloudWatch Metrics collection has not been configured."
msgstr "CloudWatch Metrics コレクションが設定されていないため、``importCloudWatch`` の値が``false`` に設定されています。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:70
msgid "Create an AWS policy and IAM role"
msgstr "AWSポリシーとIAMロールを作成する"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:72
msgid "To create an AWS policy and an AWS IAM (Identity and Access Management) role with a unique Amazon Resource Name (ARN), use a PUT request with the ``externalId`` value generated in the previous step."
msgstr "一意の Amazon Resource Name (ARN) を持つ AWS ポリシーと AWS IAM (Identity and Access Management) ロールを作成するには、前のステップで生成された``externalId`` 値を持つ PUT リクエストを使用します。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:74
msgid "The following example shows a PUT request for collecting data from two regions and three AWS services. The regions involved are ``us-west-1`` and ``us-east-1``. Services are identified by the ``namespace`` tag."
msgstr "次の例は、2つのリージョンと3つのAWSサービスからデータを収集するPUTリクエストを示している。関係する領域は``us-west-1`` と``us-east-1`` である。サービスは``namespace`` タグで識別される。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:84
msgid "For further information and more examples on how to integrate AWS monitoring with Splunk Observability Cloud, see :new-page:`our developer documentation <https://dev.splunk.com/observability/docs/integrations/aws_integration_overview#Integrate-AWS-monitoring-with-Splunk-Observability-Cloud>`."
msgstr "AWSモニタリングとSplunk Observability Cloudを統合する方法に関する詳細な情報と詳細な例については、:new-page:`開発者向けドキュメント<https://dev.splunk.com/observability/docs/integrations/aws_integration_overview#Integrate-AWS-monitoring-with-Splunk-Observability-Cloud>` をご覧ください。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:89
msgid "Review your IAM policy"
msgstr "IAMポリシーを見直す"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:91
msgid "To collect AWS data, review the permissions in this document:"
msgstr "AWS データを収集するには、このドキュメントの許可を確認してください："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:93
msgid ":ref:`Required permissions <aws-iam-policy-required>`"
msgstr ":ref:`Required permissions <aws-iam-policy-required>`"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:94
msgid ":ref:`Permissions for the CloudWatch API <aws-iam-policy-cw>`"
msgstr ":ref:`Permissions for the CloudWatch API <aws-iam-policy-cw>`"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:95
msgid ":ref:`Permissions for Metric Streams <aws-iam-policy-ms>`"
msgstr ":ref:`Permissions for Metric Streams <aws-iam-policy-ms>`"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:96
msgid ":ref:`Permissions for tag and properties collection <aws-iam-policy-services>`"
msgstr ":ref:`Permissions for tag and properties collection <aws-iam-policy-services>`"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:97
msgid ":ref:`Permissions for logs <aws-iam-policy-logs>`"
msgstr ":ref:`Permissions for logs <aws-iam-policy-logs>`"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:98
msgid ":ref:`Permissions for usage collection and reports <aws-iam-policy-reports>`"
msgstr ":ref:`Permissions for usage collection and reports <aws-iam-policy-reports>`"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:103
msgid "Required permissions in Splunk Observability Cloud"
msgstr "Splunk Observability Cloud で必要な権限"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:105
msgid "Regardless of the services you want to use, you need the following permissions:"
msgstr "使用するサービスにかかわらず、以下のパーミッションが必要です："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:107
msgid "``organizations:DescribeOrganization``. Only needed when Amazon cost and usage metrics are activated."
msgstr "``organizations:DescribeOrganization``.Amazonのコストと使用量メトリクスが有効になっている場合にのみ必要です。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:108
msgid "``ec2:DescribeRegions``"
msgstr "``ec2:DescribeRegions``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:109
msgid "``tag:GetResources``"
msgstr "``tag:GetResources``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:114
msgid "Permissions for the CloudWatch API"
msgstr "CloudWatch APIのパーミッション"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:116
msgid "Besides the :ref:`required permissions <aws-iam-policy-required>`, include these permissions to allow Splunk Observability Cloud to collect AWS metrics using the CloudWatch API:"
msgstr ":ref:`required permissions <aws-iam-policy-required>` 以外に、Splunk Observability Cloud が CloudWatch API を使用して AWS メトリクスを収集できるようにするには、以下の権限を含めます："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:118
msgid "``cloudwatch:GetMetricData``"
msgstr "``cloudwatch:GetMetricData``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:119
msgid "``cloudwatch:ListMetrics``"
msgstr "``cloudwatch:ListMetrics``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:146
msgid "Permissions for Metric Streams"
msgstr "メトリックストリームのパーミッション"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:148
msgid "Besides the :ref:`required permissions <aws-iam-policy-required>`, include these permissions to allow Splunk Observability Cloud to collect AWS metrics using CloudWatch Metric Streams:"
msgstr ":ref:`required permissions <aws-iam-policy-required>` 以外に、Splunk Observability Cloud が CloudWatch Metric Streams を使用して AWS メトリックスを収集できるようにするには、以下のパーミッションを含めます："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:150
msgid "``\"cloudwatch:DeleteMetricStream\"``"
msgstr "``\"cloudwatch:DeleteMetricStream\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:151
msgid "``\"cloudwatch:GetMetricStream\"``"
msgstr "``\"cloudwatch:GetMetricStream\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:152
msgid "``\"cloudwatch:ListMetricStreams\"``"
msgstr "``\"cloudwatch:ListMetricStreams\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:153
msgid "``\"cloudwatch:ListMetrics\"``"
msgstr "``\"cloudwatch:ListMetrics\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:154
msgid "``\"cloudwatch:PutMetricStream\"``"
msgstr "``\"cloudwatch:PutMetricStream\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:155
msgid "``\"cloudwatch:StartMetricStreams\"``"
msgstr "``\"cloudwatch:StartMetricStreams\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:156
msgid "``\"cloudwatch:StopMetricStreams\"``"
msgstr "``\"cloudwatch:StopMetricStreams\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:157
msgid "``\"iam:PassRole\"``"
msgstr "``\"iam:PassRole\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:159
msgid "These permissions include the ``MetricStream`` phrase and the ``iam:PassRole`` permissions. Note the ``iam:PassRole`` permission is restricted to resources matching the ``arn:aws:iam::*:role/splunk-metric-streams*`` pattern."
msgstr "これらのパーミッションには、``MetricStream`` フレーズと``iam:PassRole`` パーミッションが含まれる。``iam:PassRole`` 権限は、``arn:aws:iam::*:role/splunk-metric-streams*`` パターンにマッチするリソースに制限されていることに注意。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:198
msgid "Permissions for tag and properties collection"
msgstr "タグとプロパティコレクションのパーミッション"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:200
msgid "On top of the required permissions, you also need to include the specific permissions for the services you use in your AWS IAM policy to allow Splunk Observability Cloud to collect specific AWS tags and properties. You'll be able to use Infrastructure Monitoring :ref:`to filter metrics based on those tags and properties <aws-filter>`."
msgstr "必要な権限に加えて、Splunk Observability Cloud が特定の AWS タグとプロパティを収集できるように、AWS IAM ポリシーに使用するサービスの特定の権限を含める必要があります。Infrastructure Monitoring:ref:`to filter metrics based on those tags and properties <aws-filter>` を使用できるようになります。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:202
msgid "These are these permissions to allow Splunk Observability Cloud to collect AWS tags and properties:"
msgstr "これらは、Splunk Observability Cloud が AWS タグとプロパティを収集できるようにするための権限です："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:204
msgid "``\"apigateway:GET\"``"
msgstr "``\"apigateway:GET\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:205
msgid "``\"autoscaling:DescribeAutoScalingGroups\"``"
msgstr "``\"autoscaling:DescribeAutoScalingGroups\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:206
msgid "``\"cloudformation:ListResources\"``"
msgstr "``\"cloudformation:ListResources\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:207
msgid "``\"cloudformation:GetResource\"``"
msgstr "``\"cloudformation:GetResource\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:208 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:379
msgid "``\"cloudfront:GetDistributionConfig\"``"
msgstr "``\"cloudfront:GetDistributionConfig\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:209 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:380
msgid "``\"cloudfront:ListDistributions\"``"
msgstr "``\"cloudfront:ListDistributions\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:210 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:381
msgid "``\"cloudfront:ListTagsForResource\"``"
msgstr "``\"cloudfront:ListTagsForResource\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:211
msgid "``\"directconnect:DescribeConnections\"``"
msgstr "``\"directconnect:DescribeConnections\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:212
msgid "``\"dynamodb:DescribeTable\"``"
msgstr "``\"dynamodb:DescribeTable\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:213
msgid "``\"dynamodb:ListTables\"``"
msgstr "``\"dynamodb:ListTables\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:214
msgid "``\"dynamodb:ListTagsOfResource\"``"
msgstr "``\"dynamodb:ListTagsOfResource\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:215
msgid "``\"ec2:DescribeInstances\"``"
msgstr "``\"ec2:DescribeInstances\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:216
msgid "``\"ec2:DescribeInstanceStatus\"``"
msgstr "``\"ec2:DescribeInstanceStatus\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:217
msgid "``\"ec2:DescribeNatGateways\"``"
msgstr "``\"ec2:DescribeNatGateways\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:218 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:382 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:406
msgid "``\"ec2:DescribeRegions\"``"
msgstr "``\"ec2:DescribeRegions\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:219
msgid "``\"ec2:DescribeReservedInstances\"``"
msgstr "``\"ec2:DescribeReservedInstances\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:220
msgid "``\"ec2:DescribeReservedInstancesModifications\"``"
msgstr "``\"ec2:DescribeReservedInstancesModifications\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:221
msgid "``\"ec2:DescribeTags\"``"
msgstr "``\"ec2:DescribeTags\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:222
msgid "``\"ec2:DescribeVolumes\"``"
msgstr "``\"ec2:DescribeVolumes\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:223
msgid "``\"ecS:DescribeClusters\"``"
msgstr "``\"ecS:DescribeClusters\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:224
msgid "``\"ecs:DescribeServices\"``"
msgstr "``\"ecs:DescribeServices\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:225
msgid "``\"ecs:DescribeTasks\"``"
msgstr "``\"ecs:DescribeTasks\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:226
msgid "``\"ecs:ListClusters\"``"
msgstr "``\"ecs:ListClusters\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:227
msgid "``\"ecs:ListServices\"``"
msgstr "``\"ecs:ListServices\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:228
msgid "``\"ecs:ListTagsForResource\"``"
msgstr "``\"ecs:ListTagsForResource\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:229
msgid "``\"ecs:ListTaskDefinitions\"``"
msgstr "``\"ecs:ListTaskDefinitions\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:230
msgid "``\"ecs:ListTasks\"``"
msgstr "``\"ecs:ListTasks\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:231
msgid "``\"elasticache:DescribeCacheClusters\"``"
msgstr "``\"elasticache:DescribeCacheClusters\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:232 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:383
msgid "``\"elasticloadbalancing:DescribeLoadBalancerAttributes\"``"
msgstr "``\"elasticloadbalancing:DescribeLoadBalancerAttributes\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:233 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:384
msgid "``\"elasticloadbalancing:DescribeLoadBalancers\"``"
msgstr "``\"elasticloadbalancing:DescribeLoadBalancers\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:234 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:385
msgid "``\"elasticloadbalancing:DescribeTags\"``"
msgstr "``\"elasticloadbalancing:DescribeTags\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:235 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:386
msgid "``\"elasticloadbalancing:DescribeTargetGroups\"``"
msgstr "``\"elasticloadbalancing:DescribeTargetGroups\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:236
msgid "``\"elasticmapreduce:DescribeCluster\"``"
msgstr "``\"elasticmapreduce:DescribeCluster\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:237
msgid "``\"elasticmapreduce:ListClusters\"``"
msgstr "``\"elasticmapreduce:ListClusters\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:238
msgid "``\"es:DescribeElasticsearchDomain\"``"
msgstr "``\"es:DescribeElasticsearchDomain\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:239
msgid "``\"es:ListDomainNames\"``"
msgstr "``\"es:ListDomainNames\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:240
msgid "``\"kinesis:DescribeStream\"``"
msgstr "``\"kinesis:DescribeStream\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:241
msgid "``\"kinesis:ListShards\"``"
msgstr "``\"kinesis:ListShards\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:242
msgid "``\"kinesis:ListStreams\"``"
msgstr "``\"kinesis:ListStreams\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:243
msgid "``\"kinesis:ListTagsForStream\"``"
msgstr "``\"kinesis:ListTagsForStream\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:244
msgid "``“kinesisanalytics:DescribeApplication”``"
msgstr "``“kinesisanalytics:DescribeApplication”``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:245
msgid "``“kinesisanalytics:ListApplications”``"
msgstr "``“kinesisanalytics:ListApplications”``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:246
msgid "``\"kinesisanalytics:ListTagsForResource\"``"
msgstr "``\"kinesisanalytics:ListTagsForResource\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:247
msgid "``\"lambda:GetAlias\"``"
msgstr "``\"lambda:GetAlias\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:248
msgid "``\"lambda:ListFunctions\"``"
msgstr "``\"lambda:ListFunctions\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:249
msgid "``\"lambda:ListTags\"``"
msgstr "``\"lambda:ListTags\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:250
msgid "``\"rds:DescribeDBInstances\"``"
msgstr "``\"rds:DescribeDBInstances\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:251
msgid "``\"rds:ListTagsForResource\"``"
msgstr "``\"rds:ListTagsForResource\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:252 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:390
msgid "``\"redshift:DescribeClusters\"``"
msgstr "``\"redshift:DescribeClusters\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:253 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:391
msgid "``\"redshift:DescribeLoggingStatus\"``"
msgstr "``\"redshift:DescribeLoggingStatus\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:254
msgid "``\"s3:GetBucketLocation\"``"
msgstr "``\"s3:GetBucketLocation\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:255
msgid "``\"s3:GetBucketTagging\"``"
msgstr "``\"s3:GetBucketTagging\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:256 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:394
msgid "``\"s3:ListAllMyBuckets\"``"
msgstr "``\"s3:ListAllMyBuckets\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:257 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:395
msgid "``\"s3:ListBucket\"``"
msgstr "``\"s3:ListBucket\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:258
msgid "``\"states:ListActivities\"``"
msgstr "``\"states:ListActivities\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:259
msgid "``\"states:ListStateMachines\"``"
msgstr "``\"states:ListStateMachines\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:260
msgid "``\"sqs:GetQueueAttributes\"``"
msgstr "``\"sqs:GetQueueAttributes\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:261
msgid "``\"sqs:ListQueues\"``"
msgstr "``\"sqs:ListQueues\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:262
msgid "``\"sqs:ListQueueTags\"``"
msgstr "``\"sqs:ListQueueTags\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:263 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:397
msgid "``\"tag:GetResources\"``"
msgstr "``\"tag:GetResources\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:264
msgid "``\"workspaces:DescribeWorkspaces\"``"
msgstr "``\"workspaces:DescribeWorkspaces\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:266
msgid "Cassandra permissions are declared as a separate object. See the example below."
msgstr "Cassandraパーミッションは別のオブジェクトとして宣言されます。下の例をご覧ください。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:268
msgid "Add the ``\"<service>:<permission>\"`` pair relevant to each service in the ``Action`` array of the :ref:`AWS IAM policy JSON <review-aws-iam-policy>`. For example:"
msgstr ":ref:`AWS IAM policy JSON <review-aws-iam-policy>` の``Action`` 配列に、各サービスに関連する``\"<service>:<permission>\"`` ペアを追加する。例えば、こうだ："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:375
msgid "Permissions for log collection"
msgstr "ログ収集の権限"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:377
msgid "These are the permissions to allow Splunk Observability Cloud to collect AWS logs. Include those related to your service in your IAM policy."
msgstr "これらは、Splunk Observability Cloud が AWS ログを収集することを許可する権限です。あなたのサービスに関連するものをIAMポリシーに含める。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:387
msgid "``\"logs:DeleteSubscriptionFilter\"``"
msgstr "``\"logs:DeleteSubscriptionFilter\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:388
msgid "``\"logs:DescribeLogGroups\"``"
msgstr "``\"logs:DescribeLogGroups\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:389
msgid "``\"logs:DescribeSubscriptionFilters\"``"
msgstr "``\"logs:DescribeSubscriptionFilters\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:392
msgid "``\"s3:GetBucketLogging\"``"
msgstr "``\"s3:GetBucketLogging\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:393
msgid "``\"s3:GetBucketNotification\"``"
msgstr "``\"s3:GetBucketNotification\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:396
msgid "``\"s3:PutBucketNotification\"``"
msgstr "``\"s3:PutBucketNotification\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:402
msgid "Permissions for usage collection and reports"
msgstr "利用状況の収集とレポートの権限"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:404
msgid "Include these permissions to allow Splunk Observability Cloud to collect AWS usage data and reports:"
msgstr "Splunk Observability Cloud が AWS 利用データとレポートを収集できるようにするには、これらの権限を含めます："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:407
msgid "``\"organizations:DescribeOrganization\"``"
msgstr "``\"organizations:DescribeOrganization\"``"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:412
msgid "Configure your setup"
msgstr "セットアップの設定"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:414
msgid "Provide the ARN role to the Infrastructure Monitoring component of Splunk Observability Cloud. You can also configure your connection to support any of the following use cases:"
msgstr "Splunk Observability Cloud のインフラストラクチャ監視コンポーネントに ARN ロールを提供する。また、以下のユースケースをサポートするように接続を設定することもできます："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:416
msgid "Collect metrics for selected regions and services using the CloudWatch API."
msgstr "CloudWatch APIを使用して、選択したリージョンとサービスのメトリクスを収集する。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:417
msgid "Collect metrics for all regions and all services using the CloudWatch API."
msgstr "CloudWatch APIを使用して、すべてのリージョンとすべてのサービスのメトリクスを収集する。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:418
msgid "Collect metrics using CloudWatch Metric Streams by itself or together with log collection."
msgstr "CloudWatch Metric Streamsを単独で、またはログ収集と一緒に使用してメトリクスを収集する。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:420
msgid "The following example shows how to collect metrics from all regions and services by leaving the regions and services values unspecified."
msgstr "次の例では、地域とサービスの値を指定せずに、すべての地域とサービスからメトリクスを収集する方法を示します。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:433
msgid "Configure API polling (optional)"
msgstr "APIポーリングの設定（オプション）"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:435
msgid "If you're retrieving AWS metrics polling CloudWatch APIs, keep in mind the following intervals:"
msgstr "CloudWatchAPIをポーリングしてAWSのメトリクスを取得する場合、以下の間隔に注意してください："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:437
msgid "First, the list of metrics is retrieved with the ``ListMetrics`` API every 15 minutes."
msgstr "まず、``ListMetrics`` APIで15分ごとにメトリクスのリストを取得する。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:439
msgid "Next, data points are retrieved with the ``GetMetricData`` API. Note that the ``GetMetricStatistics`` API is deprecated, see more in :ref:`aws-api-notice`."
msgstr "次に、``GetMetricData`` APIでデータポイントを取得する。``GetMetricStatistics`` API は非推奨であることに注意してください。詳しくは:ref:`aws-api-notice` をご覧ください。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:441
msgid "Use ``pollRate`` to configure the polling interval for metrics."
msgstr "``pollRate`` を使用して、メトリクスのポーリング間隔を構成します。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:442
msgid "Use ``metadataPollRate`` to configure the polling interval for metadata."
msgstr "``metadataPollRate`` 、メタデータのポーリング間隔を設定する。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:443
msgid "See :new-page:`how to configure the APIs in the developer portal <https://dev.splunk.com/observability/reference/api/integrations/latest#endpoint-retrieve-integrations-query>` for more information."
msgstr "詳しくは、:new-page:`開発者ポータルでのAPIの設定方法<https://dev.splunk.com/observability/reference/api/integrations/latest#endpoint-retrieve-integrations-query>` をご覧ください。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:448
msgid "Activate CloudWatch Metric Streams (optional)"
msgstr "CloudWatch Metric Streamsを有効化する（オプション）"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:450
msgid "To activate CloudWatch Metric Streams as an alternative to traditional API polling, follow these steps:"
msgstr "従来のAPIポーリングの代替としてCloudWatch Metric Streamsを有効にするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:452 ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:479
msgid "Submit a GET request to ``https://api.<realm>.signalfx.com/v2/integration/<integration-id>`` to retrieve your current settings. Make sure to substitute your own realm and integration ID in the URL."
msgstr "``https://api.<realm>.signalfx.com/v2/integration/<integration-id>`` に GET リクエストを送信し、現在の設定を取得します。URLには、必ず自分のレルムと統合IDを代入してください。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:453
msgid "Set the ``metricStreamsSyncState`` field to ``ENABLED``."
msgstr "``metricStreamsSyncState`` フィールドを``ENABLED`` に設定する。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:454
msgid "Set the ``importCloudWatch`` field to ``true``."
msgstr "``importCloudWatch`` フィールドを``true`` に設定する。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:455
msgid "Set the ``enabled`` field to ``true``."
msgstr "``enabled`` フィールドを``true`` に設定する。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:456
msgid "Submit a PUT request to the ``https://api.<realm>.signalfx.com/v2/integration/<integration-id>`` endpoint to save your updated settings."
msgstr "``https://api.<realm>.signalfx.com/v2/integration/<integration-id>`` エンドポイントに PUT リクエストを送信して、更新した設定を保存します。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:458 ../../gdi/get-data-in/connect/aws/get-awstoc.rst:44
msgid "CloudWatch Metric Streams supports filtering by namespace and metric name but doesn't support filtering based on resource tags."
msgstr "CloudWatch Metric Streamsは名前空間とメトリック名によるフィルタリングをサポートしているが、リソースタグに基づくフィルタリングはサポートしていない。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:460
msgid "Next, to complete the activation of Metric Streams:"
msgstr "次に、Metric Streamsのアクティベーションを完了する："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:462
msgid "If you haven't already, add the :ref:`relevant permissions to your AWS IAM policy <metricstreams_iampolicy>`."
msgstr "まだの場合は、:ref:`relevant permissions to your AWS IAM policy <metricstreams_iampolicy>` 。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:463
msgid "In every region from which you want to stream metrics from, :ref:`deploy CloudFormation <metricstreams_cloudformation>`."
msgstr "メトリックスをストリーミングしたいすべての地域で、:ref:`deploy CloudFormation <metricstreams_cloudformation>` 。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:465
msgid "This creates:"
msgstr "これによって生み出される："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:467
msgid "Kinesis Firehose."
msgstr "キネシス・ファイアホース"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:468
msgid "The S3 bucket, to back up the events that Kinesis Data Firehose fails to send to the specified HTTP endpoint."
msgstr "Kinesis Data Firehoseが指定したHTTPエンドポイントへの送信に失敗したイベントをバックアップするためのS3バケット。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:469
msgid "The IAM role that Metric Streams will use."
msgstr "メトリックストリームが使用するIAMロール。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:470
msgid "The IAM role that allows Kinesis Firehose to write the S3 bucket."
msgstr "Kinesis FirehoseにS3バケットへの書き込みを許可するIAMロール。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:472
msgid "See :new-page:`Create an AWS integration using an external ID and ARN <https://dev.splunk.com/observability/docs/integrations/aws_integration_overview/#Create-an-AWS-integration-using-an-external-ID-and-ARN>` in the Splunk developer documentation for syntax examples."
msgstr "構文の例については、Splunk 開発者向けドキュメントの:new-page:`Create AWS integration using external ID and ARN<https://dev.splunk.com/observability/docs/integrations/aws_integration_overview/#Create-an-AWS-integration-using-an-external-ID-and-ARN>` を参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:475
msgid "Deactivate Metric Streams"
msgstr "メトリックストリームの停止"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:477
msgid "To deactivate Metric Streams, follow these steps:"
msgstr "メトリックストリームを無効にするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:480
msgid "Set the ``metricStreamsSyncState`` field to ``CANCELLING``."
msgstr "``metricStreamsSyncState`` フィールドを``CANCELLING`` に設定する。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:481
msgid "Wait for Splunk Observability Cloud to clean up. This can take up to 15 minutes."
msgstr "Splunk Observability Cloud がクリーンアップするのを待ちます。最大15分かかることもある。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:483
msgid "If Splunk Observability Cloud sets ``metricStreamsSyncState`` to ``DISABLED``, Metric Streams has been deactivated sucessfully."
msgstr "Splunk Observability Cloud が``metricStreamsSyncState`` を``DISABLED`` に設定した場合、Metric Streams は正常に無効化されました。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:484
msgid "If Splunk Observability Cloud sets ``metricStreamsSyncState`` to ``CANCELLATION_FAILED``, try again, or refer to :ref:`aws-ts-metric-streams`."
msgstr "Splunk Observability Cloud が``metricStreamsSyncState`` を``CANCELLATION_FAILED`` に設定している場合は、もう一度試すか、:ref:`aws-ts-metric-streams` を参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:489
msgid "Deploy CloudFormation"
msgstr "CloudFormationをデプロイする"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:491
msgid "To collect CloudWatch Metric Streams or logs from all supported AWS services across all regions, select and deploy a CloudFormation template that supports metric streams or logs. Deploying the template creates the additional resources on your AWS account required both by Metric Streams (Kinesis Firehose, S3 bucket, IAM roles) and logs (Splunk AWS log collector lambda function, IAM role)."
msgstr "すべてのリージョンでサポートされているすべてのAWSサービスからCloudWatchメトリックストリームまたはログを収集するには、メトリックストリームまたはログをサポートするCloudFormationテンプレートを選択してデプロイする。テンプレートをデプロイすると、Metric Streams (Kinesis Firehose、S3 バケット、IAM ロール) とログ (Splunk AWS ログコレクター lambda 関数、IAM ロール) の両方に必要な追加リソースが AWS アカウントに作成されます。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:493
msgid "See the :ref:`CloudFormation templates table <aws-cloudformation>` for more information."
msgstr "詳しくは:ref:`CloudFormation templates table <aws-cloudformation>` 。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:494
msgid "You can find your access token in your account's profile settings."
msgstr "アクセストークンはアカウントのプロフィール設定で確認できます。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:499
msgid "Collect logs"
msgstr "ログの収集"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:501
msgid "To collect log data from any CloudWatch log group, perform the following steps:"
msgstr "任意のCloudWatchロググループからログデータを収集するには、以下の手順を実行する："

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:503
msgid "Deploy one of the :ref:`CloudFormation templates <aws-cloudformation>` provided by Splunk that supports log collection."
msgstr "ログ収集をサポートする Splunk が提供する:ref:`CloudFormation templates <aws-cloudformation>` のいずれかを導入する。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:504
msgid "Update your AWS integration using the ``curl -X PUT`` request to set the ``logsSyncState`` field value to ``ENABLED``."
msgstr "``curl -X PUT`` リクエストを使用して AWS インテグレーションを更新し、``logsSyncState`` フィールドの値を``ENABLED`` に設定する。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:505
msgid "Review the :ref:`required permissions for logs <aws-iam-policy-logs>`."
msgstr ":ref:`required permissions for logs <aws-iam-policy-logs>` を見直す。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:507
msgid "Splunk Observability Cloud synchronizes AWS integration settings with the logging configuration information on your AWS customer account every 5 minutes, adding triggers for newly-added services, and deleting triggers from regions or services removed from the integration."
msgstr "Splunk Observability Cloud は、AWS 統合設定を AWS カスタマーアカウントのロギング構成情報と 5 分ごとに同期し、新しく追加されたサービスのトリガーを追加し、統合から削除されたリージョンまたはサービスのトリガーを削除します。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:509
msgid "See Splunk developer documentation about :new-page:`POST /integration <https://dev.splunk.com/observability/reference/api/integrations/latest#endpoint-create-integration>` for more examples of the request format."
msgstr "リクエストフォーマットの例については、Splunk 開発者向けドキュメント:new-page:`POST /integration<https://dev.splunk.com/observability/reference/api/integrations/latest#endpoint-create-integration>` を参照ください。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:516
msgid "After you connect Splunk Observability Cloud with AWS, you'll be able to track a series of metrics and analyze your AWS data in real time. See :ref:`how to leverage data from integration with AWS <aws-post-install>` for more information."
msgstr "Splunk Observability Cloud を AWS と接続すると、一連のメトリクスを追跡し、AWS データをリアルタイムで分析できるようになります。詳しくは:ref:`how to leverage data from integration with AWS <aws-post-install>` 。"

#: ../../gdi/get-data-in/connect/aws/aws-apiconfig.rst:518
msgid "When you edit an AWS integration through the user interface for Splunk Observability Cloud, the integration ID shows in your browser address bar as an alphanumeric string in quotation marks (\") after a colon (:) at the end of the URL."
msgstr "Splunk Observability Cloud のユーザーインターフェイスから AWS インテグレーションを編集すると、インテグレーション ID がブラウザのアドレスバーに、URL 末尾のコロン (:) の後に引用符 (\") で囲まれた英数字の文字列として表示されます。"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:-1
msgid "CloudFormation templates for AWS in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud の AWS 用 CloudFormation テンプレート。"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:5
msgid "Available CloudFormation templates"
msgstr "利用可能なCloudFormationテンプレート"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:10
msgid "You need to install the AWS integration first before you use any Cloudformation template. Learn more at :ref:`get-started-aws`."
msgstr "Cloudformationテンプレートを使う前に、まずAWSインテグレーションをインストールする必要がある。詳しくは:ref:`get-started-aws` 。"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:12
msgid "Decide which CloudFormation template to use depending on your deployment method (for example, per AWS region or per AWS account) and integration type (for example, logs only, metric streams only, or both). Even if you don't intend to use both logs and metrics, you can safely deploy a CloudFormation template, since unused infrastructure doesn't generate costs."
msgstr "デプロイ方法（例えば、AWSリージョンごと、またはAWSアカウントごと）と統合タイプ（例えば、ログのみ、メトリックストリームのみ、または両方）に応じて、使用するCloudFormationテンプレートを決定する。ログとメトリクスの両方を使うつもりがない場合でも、CloudFormationテンプレートを安全にデプロイすることができる。"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:14
msgid "If you want to collect logs, Splunk Log Observer is no longer available for new users. You can continue to use Log Observer if you already have an entitlement."
msgstr "ログを収集したい場合、Splunk Log Observer は新規ユーザーには提供されなくなりました。すでに権利を持っている場合は、ログ・オブザーバーを使い続けることができます。"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:17
msgid "Prepopulated CloudFormation templates"
msgstr "あらかじめ用意されたCloudFormationテンプレート"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:19
msgid "Select the QuickLink for a template which supports Metric Streams or logs, it will open the AWS Management Console in the last region that you used."
msgstr "Metric StreamsまたはログをサポートするテンプレートのQuickLinkを選択すると、最後に使用したリージョンのAWS Management Consoleが開きます。"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:25
msgid "Supports Log collection"
msgstr "ログ収集に対応"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:26
msgid "Supports Metric Streams"
msgstr "メトリック・ストリームをサポート"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:27
msgid "Deployment type"
msgstr "配備タイプ"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:28
msgid "QuickLink"
msgstr "クイックリンク"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:29
msgid "Hosted template"
msgstr "ホストテンプレート"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:31 ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:32 ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:37 ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:38 ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:43 ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:49 ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:56 ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:62 ../../gdi/get-data-in/connect/gcp/gcp.rst:60 ../../gdi/get-data-in/connect/gcp/gcp.rst:63 ../../gdi/get-data-in/connect/gcp/gcp.rst:81 ../../gdi/get-data-in/connect/gcp/gcp.rst:84
#: ../../gdi/get-data-in/connect/gcp/gcp.rst:87 ../../gdi/get-data-in/get-data-in.rst:47 ../../gdi/get-data-in/get-data-in.rst:53 ../../gdi/get-data-in/get-data-in.rst:59 ../../gdi/get-data-in/get-data-in.rst:65 ../../gdi/get-data-in/get-data-in.rst:89 ../../gdi/monitors-cloud/heroku.md ../../gdi/monitors-cloud/openstack.md:29 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/mysql.md:49 ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-databases/sql.md:23 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-hosts/solr.md:23 ../../gdi/monitors-hosts/systemd.md:34 ../../gdi/monitors-messaging/rabbitmq.md:25
#: ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/ntp.md:23 ../../gdi/monitors-network/traefik.md:23 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:200 ../../gdi/opentelemetry/components/databricks-receiver.rst:90 ../../gdi/opentelemetry/components/databricks-receiver.rst:93 ../../gdi/opentelemetry/components/databricks-receiver.rst:96 ../../gdi/opentelemetry/components/databricks-receiver.rst:99 ../../gdi/opentelemetry/components/databricks-receiver.rst:102
#: ../../gdi/opentelemetry/components/databricks-receiver.rst:105 ../../gdi/other-ingestion-methods/upstream-collector.rst:49 ../../gdi/other-ingestion-methods/upstream-collector.rst:53 ../../gdi/other-ingestion-methods/upstream-collector.rst:61 ../../gdi/other-ingestion-methods/upstream-collector.rst:65 ../../gdi/other-ingestion-methods/upstream-collector.rst:73 ../../gdi/other-ingestion-methods/upstream-collector.rst:81 ../../gdi/other-ingestion-methods/upstream-collector.rst:85
msgid "Yes"
msgstr "はい"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:33 ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:45 ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:57
msgid "Once per account (using StackSets)"
msgstr "アカウントにつき1回（スタックセットを使用）"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:34
msgid "Deploy this :new-page:`QuickLink <https://console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_all_features.yaml>`"
msgstr "この:new-page:`QuickLinkを展開する <https://console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_all_features.yaml>`"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:35
msgid ":new-page:`Hosted template <https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_all_features.yaml>`"
msgstr ":new-page:`ホストテンプレート <https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_all_features.yaml>`"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:39 ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:51 ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:63
msgid "In each region"
msgstr "各地域で"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:40
msgid "Deploy :new-page:`this QuickLink <https://console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_all_features_regional.yaml>` in every region"
msgstr ":new-page:`このQuickLink<https://console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_all_features_regional.yaml>` を各地域に展開する。"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:41
msgid ":new-page:`Hosted template <https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_all_features_regional.yaml>`"
msgstr ":new-page:`ホストテンプレート <https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_all_features_regional.yaml>`"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:44 ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:50 ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:55 ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:61 ../../gdi/get-data-in/get-data-in.rst:71 ../../gdi/get-data-in/get-data-in.rst:77 ../../gdi/get-data-in/get-data-in.rst:83 ../../gdi/monitors-cache/opcache.md:68 ../../gdi/monitors-cloud/heroku.md ../../gdi/monitors-cloud/openstack.md:29 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/mysql.md:49 ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-databases/sql.md:23 ../../gdi/monitors-hosts/ntpq.md:23
#: ../../gdi/monitors-hosts/procstat.md:23 ../../gdi/monitors-hosts/solr.md:23 ../../gdi/monitors-hosts/supervisor.md:23 ../../gdi/monitors-hosts/systemd.md:34 ../../gdi/monitors-hosts/varnish.md:33 ../../gdi/monitors-hosts/vsphere.md:29 ../../gdi/monitors-hosts/win-services.md:21 ../../gdi/monitors-messaging/rabbitmq.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/win_perf_counters.md:27 ../../gdi/monitors-network/ntp.md:23 ../../gdi/monitors-network/snmp.md:27 ../../gdi/monitors-network/statsd.md:35 ../../gdi/monitors-network/traefik.md:23
#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:203 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:206 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:209 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:212 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:215 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:218 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:221 ../../gdi/opentelemetry/components/databricks-receiver.rst:108
#: ../../gdi/opentelemetry/components/databricks-receiver.rst:111 ../../gdi/other-ingestion-methods/upstream-collector.rst:42 ../../gdi/other-ingestion-methods/upstream-collector.rst:46 ../../gdi/other-ingestion-methods/upstream-collector.rst:50 ../../gdi/other-ingestion-methods/upstream-collector.rst:54 ../../gdi/other-ingestion-methods/upstream-collector.rst:58 ../../gdi/other-ingestion-methods/upstream-collector.rst:62 ../../gdi/other-ingestion-methods/upstream-collector.rst:66 ../../gdi/other-ingestion-methods/upstream-collector.rst:70 ../../gdi/other-ingestion-methods/upstream-collector.rst:74 ../../gdi/other-ingestion-methods/upstream-collector.rst:82
#: ../../gdi/other-ingestion-methods/upstream-collector.rst:86
msgid "No"
msgstr "いいえ"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:46
msgid "Deploy this :new-page:`QuickLink <https://console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_logs.yaml>`"
msgstr "この:new-page:`QuickLinkを展開する <https://console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_logs.yaml>`"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:47
msgid ":new-page:`Hosted template <https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_logs.yaml>`"
msgstr ":new-page:`ホストテンプレート <https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_logs.yaml>`"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:52
msgid "Deploy :new-page:`this QuickLink <https://console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_logs_regional.yaml>` in every region"
msgstr ":new-page:`このQuickLink<https://console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_logs_regional.yaml>` を各地域に展開する。"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:53
msgid ":new-page:`Hosted template <https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_logs_regional.yaml>`"
msgstr ":new-page:`ホストテンプレート <https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_logs_regional.yaml>`"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:58
msgid "Deploy this :new-page:`QuickLink <https://console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_metric_streams.yaml>`"
msgstr "この:new-page:`QuickLinkを展開する <https://console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_metric_streams.yaml>`"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:59
msgid ":new-page:`Hosted template <https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_metric_streams.yaml>`"
msgstr ":new-page:`ホストテンプレート <https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_metric_streams.yaml>`"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:64
msgid "Deploy :new-page:`this QuickLink <https://console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_metric_streams_regional.yaml>` in every region"
msgstr ":new-page:`このQuickLink<https://console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_metric_streams_regional.yaml>` を各地域に展開する。"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:65
msgid ":new-page:`Hosted template <https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_metric_streams_regional.yaml>`"
msgstr ":new-page:`ホストテンプレート <https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_metric_streams_regional.yaml>`"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:67
msgid "From the :strong:`CloudFormation templates` table, select the QuickLink for a template with support for metric streams or logs. The QuickLink automatically opens the AWS Management Console in the last region you used, but you can select any other region in the AWS Management Console."
msgstr ":strong:`CloudFormation templates` テーブルから、メトリックストリームまたはログをサポートするテンプレートのクイックリンクを選択します。QuickLinkは、最後に使用したリージョンで自動的にAWS Management Consoleを開きますが、AWS Management Consoleで他のリージョンを選択することもできます。"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:70
msgid "Custom CloudFormation templates"
msgstr "カスタムCloudFormationテンプレート"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:72
msgid "If none of the prepopulated CloudFormation templates meets your needs, you might create required resources using CloudFormation manually by following these steps:"
msgstr "あらかじめ用意されているCloudFormationテンプレートがどれもニーズに合わない場合は、以下の手順でCloudFormationを使用して必要なリソースを手動で作成することができる："

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:74
msgid "Select the :strong:`Hosted template link` to download and modify the template you choose."
msgstr ":strong:`Hosted template link` を選択し、選択したテンプレートをダウンロードして変更します。"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:75
msgid "In the :strong:`Quick Create stack` dialog box for the selected template, enter the access token for your organization."
msgstr "選択したテンプレートの「:strong:`Quick Create stack` 」ダイアログボックスで、組織のアクセストークンを入力します。"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:76
msgid "Select :strong:`Create stack`."
msgstr ":strong:`スタックの作成` を選択する。"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:77
msgid "Use an API call to activate CloudWatch Metric Streams. To learn more, see :ref:`activate-cw-metricstreams`."
msgstr "APIコールを使ってCloudWatch Metric Streamsをアクティブにする。詳しくは、:ref:`activate-cw-metricstreams` をご覧ください。"

#: ../../gdi/get-data-in/connect/aws/aws-cloudformation.rst:79
msgid "You can optionally use AWS CloudFormation StackSets to work simultaneously across multiple AWS regions after configuring the StackSet prerequisites for self-managed permissions. For more details, see Amazon Web Services documentation to configure StackSet prerequisites."
msgstr "オプションとして、自己管理されたアクセス許可のためにStackSetの前提条件を構成した後、複数のAWSリージョンで同時に動作するようにAWS CloudFormation StackSetsを使用することができる。詳細については、StackSetの前提条件を設定するためのAmazon Web Servicesのドキュメントを参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:-1
msgid "Collect logs from your AWS services in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud で AWS サービスからログを収集します。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:5
msgid "Collect logs from your AWS services"
msgstr "AWSサービスからログを収集する"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:10 ../../gdi/get-data-in/connect/aws/aws-post-install.rst:40 ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:11 ../../gdi/get-data-in/connect/gcp/gcp-logs.rst:14 ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:18
msgid "Splunk Log Observer is no longer available for new users. You can continue to use Log Observer if you already have an entitlement."
msgstr "Splunk Log Observer は新規ユーザー向けには提供されなくなりました。すでに権利を持っている場合は、ログ・オブザーバーを使い続けることができます。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:12
msgid "When setting up an AWS connection, you can choose to import logs from a Cloudwatch log group or an S3 bucket."
msgstr "AWS接続を設定する際、CloudwatchのロググループまたはS3バケットからログをインポートすることを選択できる。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:14
msgid "To set up log collection, follow these steps:"
msgstr "ログ収集を設定するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:16
msgid "Open the link to a :ref:`CloudFormation template <aws-cloudformation>`."
msgstr ":ref:`CloudFormation template <aws-cloudformation>` へのリンクを開く。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:17
msgid "Adjust the settings."
msgstr "設定を調整する。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:18
msgid "Deploy the template to create ``splunk-aws-logs-collector``, an AWS Lambda function used to transform log entries, enrich them with metadata, and send them to Splunk Observability Cloud."
msgstr "テンプレートをデプロイして、ログエントリを変換し、メタデータでエンリッチし、Splunk Observability Cloud に送信するために使用する AWS Lambda 関数、``splunk-aws-logs-collector`` を作成します。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:22
msgid "If you experience any issues getting logs from AWS, see :ref:`aws-ts-logs`."
msgstr "AWS からログを取得する際に問題が発生した場合は、:ref:`aws-ts-logs` を参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:25
msgid "How does log collection work?"
msgstr "ログ収集の仕組み"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:27
msgid "The Splunk Observability Cloud back end runs a periodic job which goes through CloudWatch log groups and services in your account. This job adds the appropriate subscriptions and notifications to trigger the ``splunk-aws-logs-collector`` function."
msgstr "Splunk Observability Cloudバックエンドは、アカウント内のCloudWatchロググループとサービスを通過する定期ジョブを実行します。このジョブは、``splunk-aws-logs-collector`` 関数をトリガーするために、適切なサブスクリプションと通知を追加する。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:29
msgid "Splunk Observability Cloud adds subscription filters to log groups for the selected services in the integration, or for all of the supported services when none is selected. For instance, if you select ``AWS/Lambda`` in the integration, Splunk Observability Cloud will add subscription filters to ``/aws/lambda/*`` log groups only. Splunk Observability Cloud doesn't capture logs from all CloudWatch log groups."
msgstr "Splunk Observability Cloud は、統合で選択されたサービスのロググループにサブスクリプションフィルタを追加します。たとえば、統合で``AWS/Lambda`` を選択すると、Splunk Observability Cloud は``/aws/lambda/*`` ロググループのみにサブスクリプションフィルタを追加します。Splunk Observability Cloud はすべての CloudWatch ロググループのログをキャプチャしません。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:32
msgid "Managing subscriptions"
msgstr "サブスクリプションの管理"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:34
msgid "Subscriptions are managed every 5 minutes, which is not configurable at the moment. If you decide to turn off the integration or a particular service, the job will attempt to remove those subscriptions."
msgstr "サブスクリプションは5分ごとに管理され、現時点では設定できない。統合や特定のサービスをオフにすることを決定した場合、ジョブはそれらのサブスクリプションを削除しようとします。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:36
msgid "If a new log group is created for a service in the integration, Splunk Observability Cloud will add a subscription filter to this newly created log group. Afterwards, whenever new log events are added to the log group, AWS triggers ``splunk-aws-logs-collector`` lambda automatically in near real time."
msgstr "統合のサービスに対して新しいロググループが作成されると、Splunk Observability Cloud はこの新しく作成されたロググループにサブスクリプションフィルタを追加します。その後、新しいログイベントがロググループに追加されるたびに、AWSはほぼリアルタイムで自動的に``splunk-aws-logs-collector`` lambdaをトリガーする。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:39
msgid "Which services can you collect logs from?"
msgstr "どのサービスからログを収集できますか？"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:41
msgid "You can collect logs from the following services:"
msgstr "以下のサービスからログを収集できます："

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:43
msgid "Services storing their logs in Cloudwatch. Logs are stored in log groups which start with ``aws/<servicename>``. For example: ``aws/lambda``, ``aws/rds``, or ``aws/eks``"
msgstr "Cloudwatchにログを保存しているサービス。ログは``aws/<servicename>`` で始まるロググループに保存されます。例えば``aws/lambda`` ``aws/rds`` または ``aws/eks``"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:44
msgid "WAF CloudWatch logs"
msgstr "WAF CloudWatchログ"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:45
msgid "API Gateway execution logs"
msgstr "API Gatewayの実行ログ"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:46
msgid "AWS Glue continuous logs if a default log group name is used"
msgstr "デフォルトのロググループ名が使用されている場合、AWS Glueの連続ログ"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:47
msgid "Network and Application Load Balancers access logs (classic Load Balancers not supported) from S3"
msgstr "ネットワークとアプリケーションのロードバランサーは、S3からログにアクセスします（古典的なロードバランサーはサポートされていません）。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:48
msgid "S3 access logs from S3"
msgstr "S3からのアクセスログ"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:49
msgid "Redshift access logs from S3"
msgstr "S3からのRedshiftアクセスログ"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:50
msgid "CloudFront access logs from S3"
msgstr "S3からのCloudFrontアクセスログ"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:53 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:325
msgid "Limitations"
msgstr "制限事項"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:55
msgid "The following restrictions apply:"
msgstr "以下の制限が適用される："

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:57
msgid "Log sync can only be activated for a single AWS integration per AWS account. Note the integration can cover multiple services and regions."
msgstr "ログ同期を有効にできるのは、AWSアカウントごとに1つのAWSインテグレーションのみです。統合は複数のサービスや地域をカバーできることに注意。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:59
msgid "Deployment in China or Gov regions requires additional manual steps. See :new-page:`the available CloudFormation templates on GitHub <https://github.com/signalfx/aws-cloudformation-templates>`."
msgstr "中国やゴブ地域での展開には、さらに手作業が必要になる。GitHub<https://github.com/signalfx/aws-cloudformation-templates>` の:new-page:`利用可能なCloudFormationテンプレートを参照。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:64
msgid "Collect logs from unsupported services"
msgstr "サポートされていないサービスからログを収集する"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:66
msgid "CloudWatch log groups also store logs from unsupported services. If you want to capture those logs, add ``/aws/<namespace>`` to the list of custom namespaces in the integration object. While this option is not available in the Splunk Observability UI, you can easily do it using :ref:`API <aws-logs-api>`, or by adding :ref:`subscription filters <aws-logs-filter>`."
msgstr "CloudWatchのロググループは、サポートされていないサービスからのログも保存する。これらのログを取得したい場合は、``/aws/<namespace>`` を統合オブジェクトのカスタム名前空間のリストに追加します。このオプションは Splunk Observability UI では利用できませんが、:ref:`API <aws-logs-api>` を使用するか、:ref:`subscription filters <aws-logs-filter>` を追加することで簡単に実行できます。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:71
msgid "Collect logs using API"
msgstr "APIを使ってログを収集する"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:73
msgid "To capture logs from unsupported services using the API, follow these steps:"
msgstr "APIを使用してサポートされていないサービスからログをキャプチャするには、以下の手順に従います："

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:75
msgid "Use a ``GET`` request to retrieve existing integration object:"
msgstr "``GET`` リクエストを使用して、既存の統合オブジェクトを取得します："

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:82
msgid "Update the retrieved object by adding or modifying the ``customNamespaceSyncRules`` field by executing:"
msgstr "``customNamespaceSyncRules`` フィールドを追加または修正して、検索されたオブジェクトを更新する："

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:96
msgid "Namespaces must use lowercase only"
msgstr "名前空間は小文字のみを使用すること"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:97
msgid "Some fields are omitted for brevity"
msgstr "簡潔にするため、いくつかのフィールドは省略している。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:99
msgid "Use a ``PUT`` request to update your integration:"
msgstr "``PUT`` リクエストを使用して、統合を更新します："

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:113
msgid "Collect logs manually with subscription filters"
msgstr "サブスクリプション・フィルタを使って手動でログを収集する"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:115
msgid "Instead of sending all logs to Splunk Observability Cloud, you can forward logs only from selected CloudWatch log groups by adding a subscription filter. To add a filter, follow these steps:"
msgstr "すべてのログを Splunk Observability Cloud に送信する代わりに、サブスクリプションフィルタを追加することで、選択した CloudWatch ロググループからのログのみを転送することができます。フィルターを追加するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:117
msgid "Install the ``splunk-aws-logs-collector`` lambda using the :ref:`CloudFormation template <aws-cloudformation>`. Don't select ``CloudWatch Logs`` as a data type to ingest in the AWS integration."
msgstr ":ref:`CloudFormation template <aws-cloudformation>` を使って``splunk-aws-logs-collector`` ラムダをインストールする。AWS インテグレーションでインジェストするデータタイプとして``CloudWatch Logs`` を選択しないでください。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:119
msgid "Create a subscription filter to invoke the lambda as a CloudWatch log group subscriber for any log groups you want to forward logs from."
msgstr "ログを転送したいロググループのCloudWatchロググループサブスクライバーとしてラムダを起動するサブスクリプションフィルターを作成します。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:121
msgid "Do not name your filters ``Splunk Log Collector``. It's a reserved name for Splunk-managed subscriptions and they'll be removed automatically."
msgstr "フィルターに``Splunk Log Collector`` という名前をつけないでください。これは Splunk が管理するサブスクリプションの予約名で、自動的に削除されます。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:124
msgid "Metadata"
msgstr "メタデータ"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:126
msgid "Log events from AWS services are enriched with relevant metadata. Some of the metadata is common :ref:`to all services <aws-logs-meta-common>`, while some other is :ref:`service-specific <aws-logs-meta-service>`."
msgstr "AWSサービスからのログイベントは、関連するメタデータでエンリッチされる。メタデータの一部は一般的なものであり、:ref:`to all services <aws-logs-meta-common>` 、他の一部は:ref:`service-specific <aws-logs-meta-service>` 。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:131
msgid "Common metadata"
msgstr "共通メタデータ"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:137 ../../gdi/get-data-in/connect/aws/aws-logs.rst:165 ../../gdi/get-data-in/connect/aws/aws-logs.rst:196 ../../gdi/get-data-in/connect/aws/aws-logs.rst:213 ../../gdi/get-data-in/connect/aws/aws-logs.rst:240 ../../gdi/get-data-in/connect/aws/aws-logs.rst:261 ../../gdi/get-data-in/connect/aws/aws-logs.rst:277 ../../gdi/get-data-in/connect/aws/aws-logs.rst:301 ../../gdi/get-data-in/connect/aws/aws-logs.rst:325 ../../gdi/get-data-in/connect/aws/aws-logs.rst:341 ../../gdi/get-data-in/connect/aws/aws-logs.rst:365 ../../gdi/get-data-in/connect/aws/aws-logs.rst:389 ../../gdi/get-data-in/connect/aws/aws-logs.rst:409
msgid "Field name"
msgstr "フィールド名"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:139 ../../gdi/get-data-in/connect/aws/aws-logs.rst:167 ../../gdi/get-data-in/connect/aws/aws-logs.rst:198 ../../gdi/get-data-in/connect/aws/aws-logs.rst:215 ../../gdi/get-data-in/connect/aws/aws-logs.rst:242 ../../gdi/get-data-in/connect/aws/aws-logs.rst:263 ../../gdi/get-data-in/connect/aws/aws-logs.rst:279 ../../gdi/get-data-in/connect/aws/aws-logs.rst:303 ../../gdi/get-data-in/connect/aws/aws-logs.rst:327 ../../gdi/get-data-in/connect/aws/aws-logs.rst:343 ../../gdi/get-data-in/connect/aws/aws-logs.rst:367 ../../gdi/get-data-in/connect/aws/aws-logs.rst:391 ../../gdi/get-data-in/connect/aws/aws-logs.rst:411
#: ../../gdi/monitors-cache/memcached.md:30 ../../gdi/monitors-cache/memory.md:36 ../../gdi/monitors-cache/opcache.md:71 ../../gdi/monitors-cloud/kong.md:72 ../../gdi/monitors-cloud/openstack.md:32 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:28 ../../gdi/monitors-conviva/conviva.md:29 ../../gdi/monitors-databases/apache-couchdb.md:36 ../../gdi/monitors-databases/apache-spark.md:33 ../../gdi/monitors-databases/cassandra.md:25 ../../gdi/monitors-databases/consul.md:38 ../../gdi/monitors-databases/etcd.md:25 ../../gdi/monitors-databases/exec-input.md:24 ../../gdi/monitors-databases/hadoop.md:33 ../../gdi/monitors-databases/hadoopjmx.md:51
#: ../../gdi/monitors-databases/logparser.md:26 ../../gdi/monitors-databases/logstash.md:20 ../../gdi/monitors-databases/microsoft-sql-server.md:43 ../../gdi/monitors-databases/mongodb.md:56 ../../gdi/monitors-databases/mysql.md:52 ../../gdi/monitors-databases/redis.md:37 ../../gdi/monitors-databases/sap-hana.md:26 ../../gdi/monitors-databases/sql.md:26 ../../gdi/monitors-gitlab/gitlab.md:97 ../../gdi/monitors-hosts/amazon-ecs-metadata.md:26 ../../gdi/monitors-hosts/apache-httpserver.md:40 ../../gdi/monitors-hosts/apache-tomcat.md:26 ../../gdi/monitors-hosts/apache-zookeeper.md:26 ../../gdi/monitors-hosts/chrony.md:25 ../../gdi/monitors-hosts/collectd-df.md:26
#: ../../gdi/monitors-hosts/collectd-plugin.md:25 ../../gdi/monitors-hosts/collectd-uptime.md:26 ../../gdi/monitors-hosts/coredns.md:26 ../../gdi/monitors-hosts/couchbase.md:41 ../../gdi/monitors-hosts/cpufreq.md:26 ../../gdi/monitors-hosts/docker.md:32 ../../gdi/monitors-hosts/elasticsearch-query.md:195 ../../gdi/monitors-hosts/elasticsearch.md:26 ../../gdi/monitors-hosts/haproxy.md:89 ../../gdi/monitors-hosts/health-checker.md:23 ../../gdi/monitors-hosts/host-processlist.md:26 ../../gdi/monitors-hosts/http.md:57 ../../gdi/monitors-hosts/jenkins.md:34 ../../gdi/monitors-hosts/kafka-consumer.md:26 ../../gdi/monitors-hosts/kafka-producer.md:26
#: ../../gdi/monitors-hosts/microsoft-windows-iis.md:28 ../../gdi/monitors-hosts/nginx.md:26 ../../gdi/monitors-hosts/ntpq.md:26 ../../gdi/monitors-hosts/php-fpm.md:45 ../../gdi/monitors-hosts/procstat.md:26 ../../gdi/monitors-hosts/solr.md:26 ../../gdi/monitors-hosts/supervisor.md:26 ../../gdi/monitors-hosts/systemd.md:37 ../../gdi/monitors-hosts/varnish.md:36 ../../gdi/monitors-hosts/vsphere.md:32 ../../gdi/monitors-hosts/win-services.md:24 ../../gdi/monitors-languages/asp-dot-net.md:28 ../../gdi/monitors-languages/expvar.md:27 ../../gdi/monitors-languages/genericjmx.md:26 ../../gdi/monitors-languages/java-monitor.md:30 ../../gdi/monitors-languages/jmx.md:37
#: ../../gdi/monitors-languages/microsoft-dotnet.md:44 ../../gdi/monitors-messaging/apache-activemq.md:32 ../../gdi/monitors-messaging/apache-kafka.md:32 ../../gdi/monitors-messaging/rabbitmq.md:28 ../../gdi/monitors-monitoring/cadvisor.md:30 ../../gdi/monitors-monitoring/cgroups.md:38 ../../gdi/monitors-monitoring/jaeger-grpc.md:27 ../../gdi/monitors-monitoring/nagios.md:39 ../../gdi/monitors-monitoring/prometheus-exporter.md:28 ../../gdi/monitors-monitoring/prometheus-go.md:26 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:28 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:28 ../../gdi/monitors-monitoring/prometheus-node.md:26
#: ../../gdi/monitors-monitoring/prometheus-velero.md:26 ../../gdi/monitors-monitoring/signalfx-forwarder.md:26 ../../gdi/monitors-monitoring/win_perf_counters.md:30 ../../gdi/monitors-network/aws-appmesh.md:29 ../../gdi/monitors-network/dns.md:24 ../../gdi/monitors-network/logstash-tcp.md:27 ../../gdi/monitors-network/net-io.md:24 ../../gdi/monitors-network/network-protocols.md:26 ../../gdi/monitors-network/ntp.md:26 ../../gdi/monitors-network/snmp.md:30 ../../gdi/monitors-network/statsd.md:38 ../../gdi/monitors-network/traefik.md:26 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:28 ../../gdi/monitors-orchestration/kubernetes-events.md:66
#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:27 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:25 ../../gdi/monitors-orchestration/mesos-marathon.md:25 ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:61
msgid "Example"
msgstr "例"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:141
msgid "awsAccountId"
msgstr "awsAccountId"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:142
msgid "The AWS Account ID of the resource that produced the logs"
msgstr "ログを生成したリソースの AWS アカウント ID。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:143
msgid "awsAccountId: 123456790"
msgstr "awsAccountId: 123456790"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:145
msgid "region"
msgstr "地域"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:146
msgid "The AWS region of the resource that produced the logs"
msgstr "ログを生成したリソースのAWSリージョン"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:147
msgid "region: us-east-1"
msgstr "region: us-east-1"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:149
msgid "logForwarder"
msgstr "logForwarder"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:150
msgid "The name and version of ``aws-log-collector`` that sends these logs"
msgstr "これらのログを送信する``aws-log-collector`` の名前とバージョン"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:151
msgid "logForwarder: splunk_aws_log_forwarder:1.0.1"
msgstr "logForwarder: splunk_aws_log_forwarder:1.0.1"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:156
msgid "Service-specific metadata"
msgstr "サービス固有のメタデータ"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:159
msgid "Services that store logs in CloudWatch Logs"
msgstr "CloudWatch Logsにログを保存するサービス"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:170
msgid "Same as ``logGroup``, unless overridden by service specific host"
msgstr "``logGroup`` と同じ。ただし、サービス固有のホストによってオーバーライドされる場合はこの限りではない。"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:171 ../../gdi/get-data-in/connect/aws/aws-logs.rst:175
msgid "logGroup: /aws/lambda/my_function"
msgstr "logGroup: /aws/lambda/my_function"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:173
msgid "logGroup"
msgstr "logGroup"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:174
msgid "Source CloudWatch log group name"
msgstr "ソースCloudWatchロググループ名"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:177
msgid "logStream"
msgstr "logStream"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:178
msgid "Source CloudWatch log stream name"
msgstr "ソースCloudWatchログストリーム名"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:179
msgid "logStream: 2020/07/31/[1]e46fcdcac7094436bd846edb431a3f1"
msgstr "logStream: 2020/07/31/[1]e46fcdcac7094436bd846edb431a3f1"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:181
msgid "source"
msgstr "ソース"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:182
msgid "Service name"
msgstr "サービス名"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:183
msgid "source: lambda"
msgstr "出典：ラムダ"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:185
msgid "sourcetype"
msgstr "sourcetype"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:186
msgid "`aws`: prefixed service name"
msgstr "`aws`: 接頭辞付きサービス名"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:187
msgid "sourcetype: aws:lambda"
msgstr "ソースタイプ: aws:lambda"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:190
msgid "API Gateway, ApplicationELB, CloudFront, EKS, Lambda, NetworkELB, RDS, Redshift, S3"
msgstr "API Gateway, ApplicationELB, CloudFront, EKS, Lambda, NetworkELB, RDS, Redshift, S3"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:200
msgid "[aws_tag_name]"
msgstr "[aws_tag_name]"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:201
msgid "AWS tags associated with the resource that generated logs"
msgstr "ログを生成したリソースに関連するAWSタグ"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:202
msgid "name: my_func_name env: prod myCustomTag: someValue"
msgstr "name: my_func_name env: prod myCustomTag: someValue"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:207
msgid "API Gateway"
msgstr "APIゲートウェイ"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:217 ../../gdi/get-data-in/connect/aws/aws-logs.rst:222 ../../gdi/get-data-in/connect/aws/aws-logs.rst:281 ../../gdi/get-data-in/connect/aws/aws-logs.rst:305 ../../gdi/get-data-in/connect/aws/aws-logs.rst:345 ../../gdi/get-data-in/connect/aws/aws-logs.rst:369
msgid "arn"
msgstr "アーン"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:218
msgid "API gateway ARN"
msgstr "APIゲートウェイARN"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:219
msgid "arn: arn:aws:apigateway:us-east-1::/restapis/kgiqlx3nok/stages/prod"
msgstr "arn: arn:aws:apigateway:us-east-1::/restapis/kgiqlx3nok/stages/prod"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:223
msgid "host: arn:aws:apigateway:us-east-1::/restapis/kgiqlx3nok/stages/prod"
msgstr "host: arn:aws:apigateway:us-east-1::/restapis/kgiqlx3nok/stages/prod"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:225
msgid "apiGatewayStage"
msgstr "apiGatewayStage"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:226
msgid "The API Gateway Stage name"
msgstr "APIゲートウェイのステージ名"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:227
msgid "apiGatewayStage: prod"
msgstr "apiGatewayStage: prod"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:229
msgid "apiGatewayId"
msgstr "apiGatewayId"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:230
msgid "The API Gateway ID"
msgstr "APIゲートウェイID"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:231
msgid "apiGatewayId: kgiqlx3nok"
msgstr "apiGatewayId: kgiqlx3nok"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:234
msgid "Application Load Balancer"
msgstr "アプリケーションロードバランサー"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:244 ../../gdi/get-data-in/connect/aws/aws-logs.rst:329
msgid "elbArn"
msgstr "elbArn"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:245 ../../gdi/get-data-in/connect/aws/aws-logs.rst:330
msgid "Load balancer ARN"
msgstr "ロードバランサーARN"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:246
msgid "elbArn: arn:aws:elasticloadbalancing:us-east-1:1234567890:loadbalancer/app/my-loadbalancer/50dc6c495c0c9188"
msgstr "elbArn: arn:aws:elasticloadbalancing:us-east-1:1234567890:loadbalancer/app/my-loadbalancer/50dc6c495c0c9188"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:249
msgid "targetGroupArn"
msgstr "targetGroupArn"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:250
msgid "Target group ARN (when available)"
msgstr "対象グループ ARN（入手可能な場合）"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:251
msgid "targetGroupArn: arn:aws:elasticloadbalancing:us-east-1:1234567890:loadbalancer/app/my-loadbalancer/50dc6c495c0c9188"
msgstr "targetGroupArn: arn:aws:elasticloadbalancing:us-east-1:1234567890:loadbalancer/app/my-loadbalancer/50dc6c495c0c9188"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:255
msgid "CloudFront"
msgstr "CloudFront"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:265
msgid "distributionArn"
msgstr "distributionArn"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:266
msgid "CloudFront distribution ARN"
msgstr "CloudFrontディストリビューションARN"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:267
msgid "distributionArn: arn:aws:cloudfront::1234567890:distribution/EMLARXS9EXAMPLE"
msgstr "distributionArn: arn:aws:cloudfront::1234567890:distribution/EMLARXS9EXAMPLE"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:271 ../../gdi/opentelemetry/kubernetes-config-advanced.rst:69
msgid "EKS"
msgstr "EKS"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:282
msgid "EKS cluster ARN"
msgstr "EKSクラスタ ARN"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:283
msgid "arn: arn:aws:rds:us-east-1:123456790:cluster/test-eks-cluster"
msgstr "arn: arn:aws:rds:us-east-1:123456790:cluster/test-eks-cluster"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:287
msgid "EKS cluster host"
msgstr "EKSクラスタホスト"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:288
msgid "host: test-eks-cluster"
msgstr "ホスト: test-eks-cluster"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:290
msgid "eksClusterName"
msgstr "eksClusterName"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:291
msgid "The EKS cluster name"
msgstr "EKSクラスタ名"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:292
msgid "eksClusterName: test-eks-cluster"
msgstr "eksClusterName: test-eks-cluster"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:295
msgid "Lambda"
msgstr "ラムダ"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:306
msgid "The ARN of the lambda function that generated the logs"
msgstr "ログを生成したラムダ関数のARN"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:307
msgid "arn: arn:aws:lambda:us-east-1:123456790:function:my_function"
msgstr "arn: arn:aws:lambda:us-east-1:123456790:function:my_function"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:311
msgid "Lambda host"
msgstr "ラムダホスト"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:312
msgid "host: arn:aws:lambda:us-east-1:123456790:function:my_function"
msgstr "host: arn:aws:lambda:us-east-1:123456790:function:my_function"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:314
msgid "functionName"
msgstr "functionName"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:315
msgid "The name of the lambda"
msgstr "ラムダの名前"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:316
msgid "functionName: my_function"
msgstr "functionName: my_function"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:319
msgid "Network Load Balancer"
msgstr "ネットワーク・ロードバランサー"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:331
msgid "elbArn: arn:aws:elasticloadbalancing:us-east-1:1234567890:loadbalancer/net/my-netlb/c6e77e28c25b2234"
msgstr "elbArn: arn:aws:elasticloadbalancing:us-east-1:1234567890:loadbalancer/net/my-netlb/c6e77e28c25b2234"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:335
msgid "RDS PostgreSQL"
msgstr "RDS PostgreSQL"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:346 ../../gdi/get-data-in/connect/aws/aws-logs.rst:370
msgid "DB host ARN"
msgstr "DBホストARN"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:347
msgid "arn: arn:aws:rds:us-east-1:123456790:db:druid-lab0"
msgstr "arn: arn:aws:rds:us-east-1:123456790:db:druid-lab0"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:351 ../../gdi/get-data-in/connect/aws/aws-logs.rst:375
msgid "The host of RDS"
msgstr "RDSのホスト"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:352
msgid "host: druid-lab0"
msgstr "host: druid-lab0"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:354
msgid "dbType"
msgstr "dbType"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:355
msgid "The type of DB"
msgstr "DBの種類"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:356
msgid "dbType: postgresql"
msgstr "dbType: postgresql"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:359
msgid "RDS, other than PostgreSQL"
msgstr "PostgreSQL以外のRDS"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:371
msgid "arn: arn:aws:rds:us-east-1:123456790:db:test-database-1"
msgstr "arn: arn:aws:rds:us-east-1:123456790:db:test-database-1"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:376
msgid "host: test-database-1"
msgstr "ホスト: test-database-1"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:378
msgid "dbLogName"
msgstr "dbLogName"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:379
msgid "The name of the RDS log"
msgstr "RDSログの名前"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:380
msgid "dbLogName: error"
msgstr "dbLogName: error"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:383
msgid "Redshift"
msgstr "Redshift"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:393
msgid "clusterArn"
msgstr "clusterArn"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:394
msgid "Redshift cluster ARN"
msgstr "RedshiftクラスタARN"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:395
msgid "clusterArn: arn:aws:redshift:us-east-1:1234567890:cluster:redshift-cluster-1"
msgstr "clusterArn: arn:aws:redshift:us-east-1:1234567890:cluster:redshift-cluster-1"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:398
msgid "logType"
msgstr "logType"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:399
msgid "Redshift log type. Possible: connectionlog, useractivitylog, or userlog"
msgstr "Redshiftのログタイプ。可能なもの：connectionlog、useractivitylog、userlog"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:400
msgid "logType: userlog"
msgstr "logType: userlog"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:403
msgid "S3"
msgstr "S3"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:413
msgid "bucketArn"
msgstr "bucketArn"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:414
msgid "S3 bucket ARN"
msgstr "S3バケットARN"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:415
msgid "bucketArn: arn:aws:s3:::my-bucket"
msgstr "bucketArn: arn:aws:s3:::my-bucket"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:418
msgid "objectArn"
msgstr "objectArn"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:419
msgid "S3 object ARN (when available)"
msgstr "S3オブジェクトARN（利用可能な場合）"

#: ../../gdi/get-data-in/connect/aws/aws-logs.rst:420
msgid "objectArn: arn:aws:s3:::my-bucket/sample.jpeg"
msgstr "objectArn: arn:aws:s3:::my-bucket/sample.jpeg"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:-1
msgid "After connecting your AWS account to Splunk Observability Cloud, you can perform the actions described in this topic."
msgstr "AWS アカウントを Splunk Observability Cloud に接続したら、このトピックで説明する操作を実行できます。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:5
msgid "Leverage data from your integration with AWS"
msgstr "AWSとの統合によるデータの活用"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:10
msgid "You can use Splunk tooling to monitor, collect, process, and send AWS data after you integrate your AWS with Splunk Observability Cloud. See :ref:`infrastructure-aws`."
msgstr "AWSとSplunk Observability Cloudを統合した後、Splunkツールを使用してAWSデータの監視、収集、処理、送信を行うことができます。:ref:`infrastructure-aws` を参照。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:12
msgid "By default, Splunk Observability Cloud will bring in data from all supported AWS services associated with your account, with :ref:`certain limitations <aws-data-limits>`. To manage the amount of data to import, see :ref:`specify-data-metadata`."
msgstr ":ref:`certain limitations <aws-data-limits>`デフォルトでは、Splunk Observability Cloud は、アカウントに関連付けられたすべてのサポートされた AWS サービスからデータを取り込みます。インポートするデータ量を管理するには、:ref:`specify-data-metadata` を参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:15
msgid "Verify your metrics collection method"
msgstr "メトリクスの収集方法を確認する"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:17
msgid "You can use either Splunk Observability Cloud or your AWS CloudWatch console to confirm whether your metrics are collected by polling or by CloudWatch metric streams:"
msgstr "Splunk Observability Cloud または AWS CloudWatch コンソールのいずれかを使用して、メトリクスがポーリングによって収集されているか、CloudWatch メトリクスストリームによって収集されているかを確認できます："

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:19
msgid "In Splunk Observability Cloud: Use the :ref:`Plot Editor <specify-signal>` for Splunk Infrastructure Monitoring to select the org metric ``sf.org.num.awsServiceCallCount`` and filter by the ``method`` property using check boxes to select the following values: ``putMetricStream``, ``getMetricData``, ``getMetricStream``."
msgstr "Splunk Observability Cloud で：Splunk Infrastructure Monitoring の:ref:`Plot Editor <specify-signal>` を使用して、組織メトリック``sf.org.num.awsServiceCallCount`` を選択し、チェックボックスを使用して``method`` プロパティでフィルタリングして、次の値を選択します：``putMetricStream`` ``getMetricData``,``getMetricStream``."

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:20
msgid "In the AWS CloudWatch console, go to :guilabel:`All`, then :guilabel:`Usage`. Select :guilabel:`By AWS resource`, then :guilabel:`CallCount`, open the ``CallCount`` metric and select the following CloudWatch service resources values  ``putMetricStream``, ``getMetricData``, ``getMetricStream``."
msgstr "AWS CloudWatchコンソールで、:guilabel:`All` にアクセスし、:guilabel:`Usage` にアクセスする。:guilabel:`By AWS resource` を選択し、:guilabel:`CallCount` を選択し、``CallCount`` メトリックを開き、以下の CloudWatch サービスリソースの値``putMetricStream``,``getMetricData``,``getMetricStream`` を選択する。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:23
msgid "Explore your AWS inventory and data"
msgstr "AWSのインベントリとデータを調べる"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:25
msgid "Review your AWS inventory in Splunk Observability Cloud. To learn about the data model of Splunk Observability Cloud, see :ref:`data-model`."
msgstr "Splunk Observability Cloud で AWS インベントリを確認します。Splunk Observability Cloud のデータモデルについては、:ref:`data-model` を参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:28
msgid "Locate your metrics"
msgstr "測定基準を見つける"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:30
msgid "In the :guilabel:`Data Management` section, select :strong:`AWS` from the :guilabel:`Deployed Integrations` list, then select your AWS integration to access the :guilabel:`Data Summary`. Note that depending on how you retrieve metrics (polling or Metric Streams), the Summary UI is different, and :ref:`org metrics <org-metrics>` also differ."
msgstr ":guilabel:`Data Management` セクションで、:guilabel:`Deployed Integrations` リストから:strong:`AWS` を選択し、:guilabel:`Data Summary` にアクセスするために AWS インテグレーションを選択します。メトリクスの取得方法（ポーリングまたはメトリック・ストリーム）によって、サマリーUIが異なり、:ref:`org metrics <org-metrics>` も異なることに注意してください。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:31
msgid "Use the :guilabel:`Metric Finder` on the left nav menu to get a list of categories you can browse, drawn from your integrations or custom categories, if configured. See :ref:`Metric Finder <metrics-finder-and-metadata-catalog>` for details."
msgstr "左のナビメニューにある:guilabel:`Metric Finder` を使用すると、統合またはカスタムカテゴリ（設定されている場合）から抽出された、閲覧可能なカテゴリのリストが表示されます。詳細は:ref:`Metric Finder <metrics-finder-and-metadata-catalog>` 。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:32
msgid "Go to :guilabel:`Settings`, then select :guilabel:`Metric Metadata` to acccess the Metadata Catalog. Use it to find metadata associated with the metrics you send to Splunk Infrastructure Monitoring. See :new-page:`Use the Metadata Catalog <https://docs.splunk.com/Observability/metrics-and-metadata/metrics-finder-metadata-catalog.html#use-the-metadata-catalog>` for details."
msgstr ":guilabel:`Settings` にアクセスし、:guilabel:`Metric Metadata` を選択してメタデータ・カタログにアクセスする。これを使用して、Splunk Infrastructure Monitoring に送信するメトリクスに関連するメタデータを検索します。詳しくは、:new-page:`「メタデータ・カタログを使う」<https://docs.splunk.com/Observability/metrics-and-metadata/metrics-finder-metadata-catalog.html#use-the-metadata-catalog>` を参照のこと。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:33
msgid "Use the Infrastructure Monitoring navigators to explore the collection of technologies used to build, run, and deploy applications in your data ecosystem. See :ref:`use-navigators-imm` for more information."
msgstr "Infrastructure Monitoring ナビゲータを使用して、データ・エコシステムでアプリケーションを構築、実行、展開するために使用されるテクノロジのコレクションを探索します。詳しくは:ref:`use-navigators-imm` 。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:36
msgid "See your logs"
msgstr "ログを見る"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:38
msgid "If you have access to Splunk Log Observer and selected the CloudWatch Logs option during configuration, you can review detailed log information."
msgstr "Splunk Log Observer にアクセスでき、設定時に CloudWatch Logs オプションを選択した場合、詳細なログ情報を確認できます。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:42
msgid "In the :guilabel:`Data Management` section, select :strong:`AWS` from the :guilabel:`Deployed Integrations` list, then select your AWS integration to access the :guilabel:`Data Summary`. Select the :menuselection:`Log Events` tab and click :guilabel:`Explore Log Events` to view more details using Splunk Log Observer."
msgstr ":guilabel:`Data Management` セクションで、:guilabel:`Deployed Integrations` リストから:strong:`AWS` を選択し、:guilabel:`Data Summary` にアクセスするために AWS インテグレーションを選択します。:menuselection:`Log Events` タブを選択し、:guilabel:`Explore Log Events` をクリックして、Splunk Log Observer を使用して詳細を表示します。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:44
msgid "For more information, see :ref:`Introduction to Splunk Log Observer <get-started-logs>`."
msgstr "詳細は:ref:`Introduction to Splunk Log Observer <get-started-logs>` を参照。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:47
msgid "Use Dashboards and Related Content"
msgstr "ダッシュボードと関連コンテンツの活用"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:49
msgid "Explore your AWS data using :strong:`our default dashboards`:"
msgstr ":strong:`デフォルトのダッシュボード` を使用して AWS データを探索します："

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:51
msgid "To access these dashboards, click :guilabel:`Menu` and select :guilabel:`Dashboards`. The Dashboards page displays. See :ref:`Dashboards in Splunk Observability Cloud <dashboards>` for details."
msgstr "これらのダッシュボードにアクセスするには、:guilabel:`Menu` をクリックし、:guilabel:`Dashboards` を選択します。ダッシュボード・ページが表示されます。詳細は:ref:`Dashboards in Splunk Observability Cloud <dashboards>` 。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:52
msgid "Search for :guilabel:`AWS`. Several AWS dashboard groups display."
msgstr ":guilabel:`AWS` を検索する。いくつかのAWSダッシュボードグループが表示される。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:53
msgid "Click a link to access a dashboard."
msgstr "リンクをクリックするとダッシュボードにアクセスできます。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:55 ../../gdi/get-data-in/get-data-in.rst:400
msgid ":ref:`Use Related Content <get-started-relatedcontent>` to jump between components of Splunk Observability Cloud by clicking related data."
msgstr ":ref:`Use Related Content <get-started-relatedcontent>` をクリックすると、関連するデータをクリックして Splunk Observability Cloud のコンポーネント間を移動できます。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:58
msgid "Create detectors and alerts"
msgstr "ディテクターとアラートの作成"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:60
msgid "You can create detectors and alerts based on your AWS data."
msgstr "AWSデータに基づいて検出器とアラートを作成できます。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:62
msgid "Detectors define rules for identifying conditions of interest and the notifications to send when those conditions occur or stop occurring."
msgstr "ディテクターは、関心のある条件を特定するためのルールと、それらの条件が発生したとき、または発生しなくなったときに送信する通知を定義する。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:64
msgid "Alerts indicate that incoming data has triggered one of your detectors."
msgstr "アラートは、受信データが検出器のいずれかをトリガーしたことを示します。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:66
msgid "See :ref:`Introduction to alerts and detectors in Splunk Observability Cloud <get-started-detectoralert>` for details."
msgstr "詳細は:ref:`Introduction to alerts and detectors in Splunk Observability Cloud <get-started-detectoralert>` 。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:69
msgid "Expand your data collection"
msgstr "データ収集の拡大"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:71
msgid "Splunk Observability Cloud uses OpenTelemetry to support efficient instrumentation so that you can see your metrics, traces, and logs."
msgstr "Splunk Observability Cloud は OpenTelemetry を使用して効率的な計測をサポートし、メトリクス、トレース、ログを確認できるようにします。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:73
msgid "If you haven't already done so, you can install the Splunk Distribution of OpenTelemetry Collector to collect, process, and send data. See :ref:`Install the Splunk Distribution of OpenTelemetry Collector <otel-install-platform>` for details."
msgstr "まだインストールしていない場合は、OpenTelemetry Collector の Splunk ディストリビューションをインストールして、データの収集、処理、送信を行うことができます。詳細は:ref:`Install the Splunk Distribution of OpenTelemetry Collector <otel-install-platform>` 。"

#: ../../gdi/get-data-in/connect/aws/aws-post-install.rst:75
msgid "You can also set up Splunk APM :ref:`Splunk APM <get-started-apm>` to monitor traces from your applications, provided you've already installed the Splunk Distribution of OpenTelemetry Collector. See :ref:`Introduction to Splunk APM <get-started-apm>` for details."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションがインストール済みであれば、Splunk APM:ref:`Splunk APM <get-started-apm>` をセットアップしてアプリケーションからのトレースを監視することもできます。詳細は:ref:`Introduction to Splunk APM <get-started-apm>` 。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:-1 ../../gdi/get-data-in/connect/aws/get-awstoc.rst:-1
msgid "Connection planning information and links to the different ways to connect AWS to Splunk Observability Cloud."
msgstr "接続計画情報と、AWS と Splunk Observability Cloud のさまざまな接続方法へのリンク。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:6 ../../gdi/get-data-in/connect/aws/get-awstoc.rst:10
msgid "AWS authentication and supported regions"
msgstr "AWS認証と対応リージョン"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:11
msgid "To connect your AWS services to Spulnk Observability Cloud you need:"
msgstr "AWSサービスをSpulnk Observability Cloudに接続するには、以下のものが必要です："

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:13
msgid "Administrator privileges in Splunk Observability Cloud and your AWS accounts."
msgstr "Splunk Observability Cloud および AWS アカウントの管理者権限。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:14
msgid ":ref:`AWS authentication rights <aws-authentication>`. You can authenticate either with an :ref:`External Id (recommended) <aws-authentication>` or using a :ref:`security token <aws-authentication-token>`."
msgstr ":ref:`AWS authentication rights <aws-authentication>`.:ref:`External Id (recommended) <aws-authentication>` 、または:ref:`security token <aws-authentication-token>` 。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:19
msgid "Authenticate in AWS using an External Id (recommended)"
msgstr "外部IDを使ってAWSで認証する（推奨）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:21
msgid "In AWS you manage access by creating policies and attaching them to IAM identities or AWS resources. A policy is a JSON object that associates an identity or resource with access permissions. When a user (in this case, your account in Splunk Observability Cloud) makes a request, AWS evaluates the associated policy and determines whether the request is allowed or denied."
msgstr "AWSでは、ポリシーを作成し、それをIAMアイデンティティまたはAWSリソースにアタッチすることでアクセスを管理する。ポリシーは、ID またはリソースとアクセス許可を関連付ける JSON オブジェクトである。ユーザー（この場合は Splunk Observability Cloud のアカウント）がリクエストを行うと、AWS は関連するポリシーを評価し、リクエストが許可されるか拒否されるかを決定します。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:23
msgid "For most AWS regions, use :guilabel:`External ID` to authenticate. Follow these steps:"
msgstr "ほとんどのAWSリージョンでは、:guilabel:`External ID` を使用して認証する。以下の手順に従ってください："

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:25
msgid "An :strong:`External ID` for Splunk Observability Cloud. An external ID is a random string used to establish a trust relationship between Splunk Observability Cloud and your AWS account. It's automatically generated for you when you create a new AWS integration in Splunk Observability Cloud. See :new-page:`How to use an external ID when granting access to your AWS resources to a third party <https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html>` in AWS documentation."
msgstr ":strong:`Splunk Observability Cloud 用の外部 ID`.外部 ID は、Splunk Observability Cloud と AWS アカウント間の信頼関係を確立するために使用されるランダムな文字列です。Splunk Observability Cloud で新しい AWS インテグレーションを作成すると、自動的に生成されます。AWS ドキュメントの:new-page:`How to use external ID when granting access to your AWS resources to third party<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html>` を参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:26
msgid "An :ref:`Identity and Access Management (IAM) policy <aws-iam-policy>`."
msgstr ":ref:`Identity and Access Management (IAM) policy <aws-iam-policy>`."

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:27
msgid "An :ref:`AWS IAM role <aws-iam-role>`."
msgstr ":ref:`AWS IAM role <aws-iam-role>`."

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:32
msgid "Create an AWS IAM policy"
msgstr "AWS IAMポリシーを作成する"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:34
msgid "Splunk Observability Cloud refers to an IAM policy to collect data from every supported AWS service."
msgstr "Splunk Observability Cloud は、サポートされているすべての AWS サービスからデータを収集するための IAM ポリシーを参照しています。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:36
msgid "To create a new AWS IAM policy, follow these steps:"
msgstr "新しいAWS IAMポリシーを作成するには、以下の手順に従う："

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:38
msgid "Log into your Amazon Web Services account and look for the :guilabel:`Identity and Access Management (IAM)` service."
msgstr "Amazon Web Servicesアカウントにログインし、:guilabel:`Identity and Access Management (IAM)` サービスを探してください。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:39
msgid "Create a new policy. In the :strong:`JSON` tab, replace the placeholder JSON with the pertinent AWS IAM policy JSON. Guided setup provides this policy in the :guilabel:`Prepare AWS Account` step. See also some :ref:`policy examples <aws-api-create-policy-role>`."
msgstr "新しいポリシーを作成する。:strong:`JSON` タブで、プレースホルダ JSON を該当する AWS IAM ポリシー JSON に置き換える。Guided setup は、:guilabel:`Prepare AWS Account` ステップでこのポリシーを提供する。:ref:`policy examples <aws-api-create-policy-role>` 。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:40
msgid "Follow the instructions to complete the process and create the policy."
msgstr "指示に従ってプロセスを完了し、ポリシーを作成します。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:44 ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:61
msgid "If you have any doubts, check AWS documentation."
msgstr "疑問があれば、AWSのドキュメントを確認してください。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:49
msgid "Create an AWS IAM role"
msgstr "AWS IAMロールを作成する"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:51
msgid "After creating an AWS IAM policy, you need to assign that policy to a particular role by performing the following steps in the Amazon Web Services console:"
msgstr "AWS IAMポリシーを作成した後、Amazon Web Servicesコンソールで以下のステップを実行することで、そのポリシーを特定のロールに割り当てる必要があります："

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:53
msgid "Go to :strong:`Roles`, then :strong:`Create Role`, and select :strong:`Another AWS account` as the type of trusted entity."
msgstr ":strong:`Roles` に移動し、:strong:`Create Role` に移動し、:strong:`Another AWS account` を信頼されるエンティティのタイプとして選択する。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:54
msgid "Copy and paste the Account ID displayed in guided setup into the :strong:`Account ID` field."
msgstr "ガイド付きセットアップで表示されたアカウントIDをコピーして、:strong:`アカウントID` フィールドに貼り付けます。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:55
msgid "Select :strong:`Require external ID`. Copy and paste the External ID displayed in the guided setup into the :strong:`External ID` field."
msgstr ":strong:`Require external ID` を選択する。ガイド付きセットアップで表示された外部IDをコピーして、:strong:`外部ID` フィールドに貼り付けます。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:56
msgid "Continue with :strong:`Next: Permissions`. Under :strong:`Policy name`, select the policy you made in the previous step."
msgstr ":strong:`次へ進む：パーミッション`.:strong:`ポリシー名` で、前のステップで作成したポリシーを選択します。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:57
msgid "Follow the instructions, and name and create your new AWS IAM role."
msgstr "指示に従って、新しいAWS IAMロールに名前を付けて作成します。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:59
msgid "Creating the AWS IAM role generates the ``Role ARN`` used to establish connection with AWS. Copy the created ARN role, and paste it into the :strong:`Role ARN` field in the guided setup."
msgstr "AWS IAM ロールを作成すると、AWS との接続を確立するために使用される``Role ARN`` が生成される。作成したARNロールをコピーし、ガイド付きセットアップの:strong:`Role ARN` フィールドに貼り付けます。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:66
msgid "Authenticate in AWS using a security token"
msgstr "セキュリティトークンを使ってAWSで認証する"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:68
msgid "For the :strong:`GovCloud or China regions`, select the option to authenticate using a secure token, which combines an Access key ID and Secret access key you'll create in your AWS Console."
msgstr ":strong:`GovCloud または China リージョン` では、AWS Console で作成する Access key ID と Secret access key を組み合わせた Secure token を使用して認証するオプションを選択します。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:70
msgid "When you're creating the new permission for your user and are prompted for an access key practice, select :guilabel:`Third-party service`."
msgstr "ユーザーの新しいアクセス許可を作成する際、アクセスキーの練習を求めるプロンプトが表示されたら、:guilabel:`サードパーティ・サービス` を選択してください。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:75
msgid "Supported AWS regions"
msgstr "対応AWSリージョン"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:77
msgid "If you want to activate a specific optional region, you need to do it before adding it to the integration. Make sure you've activated the optional regions you'll need in your AWS console first. Regular regions are activated in AWS by default."
msgstr "特定のオプション地域を有効にしたい場合は、統合に追加する前にそれを行う必要があります。最初にAWSコンソールで必要なオプションリージョンを有効化していることを確認してください。通常のリージョンはデフォルトでAWSで有効になっている。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:79
msgid "If you're using the :ref:`UI guided setup <aws-wizardconfig>` to create the integration, you'll be prompted to select which AWS regions you work with."
msgstr "統合を作成するために:ref:`UI guided setup <aws-wizardconfig>` を使用している場合、どの AWS リージョンと連携するかを選択するプロンプトが表示されます。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:80
msgid "If you're :ref:`using the API <get-configapi>` and supply an empty list in an API call, Splunk Observability Cloud activates all regular regions. If you add the ``ec2:DescribeRegions`` permission to your AWS policy, optional regions you've activated on your AWS account are activated in Splunk Observability Cloud as well."
msgstr ":ref:`using the API <get-configapi>` 、APIコールで空のリストを提供した場合、Splunk Observability Cloudはすべての通常地域をアクティブにします。AWS ポリシーに``ec2:DescribeRegions`` 権限を追加すると、AWS アカウントで有効化したオプションリージョンが Splunk Observability Cloud でも有効化されます。"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:82
msgid "Splunk Observability Cloud supports the following AWS regions:"
msgstr "Splunk Observability Cloud は以下の AWS リージョンをサポートしています："

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:85
msgid "Regular"
msgstr "レギュラー"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:87
msgid "``ap-northeast-1``: Asia Pacific (Tokyo)"
msgstr "``ap-northeast-1``:アジア太平洋（東京）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:88
msgid "``ap-northeast-2``: Asia Pacific (Seoul)"
msgstr "``ap-northeast-2``:アジア太平洋（ソウル）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:89
msgid "``ap-northeast-3``: Asia Pacific (Osaka)"
msgstr "``ap-northeast-3``:アジア太平洋（大阪）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:90
msgid "``ap-south-1``: Asia Pacific (Mumbai)"
msgstr "``ap-south-1``:アジア太平洋地域（ムンバイ）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:91
msgid "``ap-southeast-1``: Asia Pacific (Singapore)"
msgstr "``ap-southeast-1``:アジア・パシフィック（シンガポール）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:92
msgid "``ap-southeast-2``: Asia Pacific (Sydney)"
msgstr "``ap-southeast-2``:アジア太平洋（シドニー）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:93
msgid "``ca-central-1``: Canada (Central)"
msgstr "``ca-central-1``:カナダ（中部）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:94
msgid "``eu-central-1``: Europe (Frankfurt)"
msgstr "``eu-central-1``:ヨーロッパ（フランクフルト）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:95
msgid "``eu-north-1``: Europe (Stockholm)"
msgstr "``eu-north-1``:ヨーロッパ（ストックホルム）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:96
msgid "``eu-west-1``: Europe (Ireland)"
msgstr "``eu-west-1``:ヨーロッパ（アイルランド）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:97
msgid "``eu-west-2``: Europe (London)"
msgstr "``eu-west-2``:ヨーロッパ（ロンドン）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:98
msgid "``eu-west-3``: Europe (Paris)"
msgstr "``eu-west-3``:ヨーロッパ（パリ）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:99
msgid "``sa-east-1``: South America (Sao Paulo)"
msgstr "``sa-east-1``:南米（サンパウロ）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:100
msgid "``us-east-1``: US East (N. Virginia)"
msgstr "``us-east-1``:アメリカ東部（バージニア州北部）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:101
msgid "``us-east-2``: US East (Ohio)"
msgstr "``us-east-2``:アメリカ東部（オハイオ州）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:102
msgid "``us-west-1``: US West (N. California)"
msgstr "``us-west-1``:アメリカ西部（北カリフォルニア）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:103
msgid "``us-west-2``: US West (Oregon)"
msgstr "``us-west-2``:アメリカ西部（オレゴン州）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:106 ../../gdi/get-data-in/get-data-in.rst:56 ../../gdi/get-data-in/get-data-in.rst:57 ../../gdi/get-data-in/get-data-in.rst:62 ../../gdi/get-data-in/get-data-in.rst:68 ../../gdi/get-data-in/get-data-in.rst:86 ../../gdi/get-data-in/get-data-in.rst:87
msgid "Optional"
msgstr "オプション"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:108
msgid "``af-south-1``: Africa (Cape Town)"
msgstr "``af-south-1``:アフリカ（ケープタウン）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:109
msgid "``ap-east-1``: Asia Pacific (Hong Kong)"
msgstr "``ap-east-1``:アジア太平洋（香港）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:110
msgid "``ap-south-2``: Asia Pacific (Hyderabad)"
msgstr "``ap-south-2``:アジア太平洋（ハイデラバード）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:111
msgid "``ap-southeast-3``: Asia Pacific (Jakarta)"
msgstr "``ap-southeast-3``:アジア太平洋地域（ジャカルタ）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:112
msgid "``ap-southeast-4``: Asia Pacific (Melbourne)"
msgstr "``ap-southeast-4``:アジア太平洋地域（メルボルン）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:113
msgid "``eu-central-2``: Europe (Zurich)"
msgstr "``eu-central-2``:ヨーロッパ（チューリッヒ）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:114
msgid "``eu-south-1``: Europe (Milan)"
msgstr "``eu-south-1``:ヨーロッパ (ミラノ)"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:115
msgid "``eu-south-2``: Europe (Spain)"
msgstr "``eu-south-2``:ヨーロッパ（スペイン）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:116
msgid "``me-central-1``: Middle East (UAE)"
msgstr "``me-central-1``:中東（UAE）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:117
msgid "``me-south-1``: Middle East (Bahrain)"
msgstr "``me-south-1``:中東（バーレーン）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:120
msgid "GovCloud"
msgstr "GovCloud"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:122
msgid "``us-gov-east-1``: AWS GovCloud (US-East)"
msgstr "``us-gov-east-1``:AWS GovCloud (米国-東)"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:123
msgid "``us-gov-west-1``: AWS GovCloud (US-West)"
msgstr "``us-gov-west-1``:AWS GovCloud (US-West)"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:126
msgid "China"
msgstr "中国"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:128
msgid "``cn-north-1``: China (Beijing)"
msgstr "``cn-north-1``:中国（北京）"

#: ../../gdi/get-data-in/connect/aws/aws-prereqs.rst:129
msgid "``cn-northwest-1``: China (Ningxia)"
msgstr "``cn-northwest-1``:中国（寧夏）"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:-1
msgid "Use Splunk Terraform to connect Splunk Observability Cloud to AWS, GCP, or Azure."
msgstr "Splunk Observability Cloud を AWS、GCP、Azure に接続するには Splunk Terraform を使用します。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:5
msgid "Connect your cloud services using Splunk Terraform"
msgstr "Splunk Terraform を使ってクラウドサービスを接続する"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:11
msgid "If you use Terraform to turn Splunk Observability Cloud APIs into configuration files and don't want to configure your system manually through guided setup, use ``splunk-terraform/signalfx``, the Splunk Terraform provider, to connect Splunk Observability Cloud to AWS, Azure, or GCP."
msgstr "Terraform を使用して Splunk Observability Cloud API を設定ファイルに変換し、ガイド付きセットアップによって手動でシステムを設定したくない場合は、Splunk Terraform プロバイダの``splunk-terraform/signalfx`` を使用して、Splunk Observability Cloud を AWS、Azure、または GCP に接続します。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:13
msgid "The HashiCorp Configuration Language underlying Terraform supports automation. Although you can apply one configuration file to multiple cloud service providers, this topic explains how to connect a single service to Splunk Observability Cloud using the Terraform Registry."
msgstr "Terraformの基盤となっているHashiCorp Configuration Languageは自動化をサポートしている。1つの設定ファイルを複数のクラウドサービスプロバイダに適用することもできますが、このトピックではTerraformレジストリを使用して単一のサービスをSplunk Observability Cloudに接続する方法を説明します。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:15
msgid "As with other connection options, Terraform uses the Splunk Observability REST API endpoints. For examples, see:"
msgstr "他の接続オプションと同様に、Terraform は Splunk Observability REST API エンドポイントを使用します。例としては、以下を参照："

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:17
msgid ":new-page:`Integrate AWS monitoring with Splunk Observability Cloud <https://dev.splunk.com/observability/docs/integrations/aws_integration_overview/>`"
msgstr ":new-page:`AWSモニタリングとSplunk Observability Cloudの統合 <https://dev.splunk.com/observability/docs/integrations/aws_integration_overview/>`"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:18
msgid ":new-page:`Integrate Azure monitoring with Splunk Observability Cloud <https://dev.splunk.com/observability/docs/integrations/msazure_integration_overview>`"
msgstr ":new-page:`Azure 監視を Splunk Observability Cloud と統合する <https://dev.splunk.com/observability/docs/integrations/msazure_integration_overview>`"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:19
msgid ":new-page:`Integrate GCP monitoring with Splunk Observability Cloud <https://dev.splunk.com/observability/docs/integrations/gcp_integration_overview>`"
msgstr ":new-page:`GCPモニタリングとSplunk Observability Cloudの統合 <https://dev.splunk.com/observability/docs/integrations/gcp_integration_overview>`"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:24
msgid "See the requirements for each cloud services provider:"
msgstr "各クラウドサービスプロバイダーの要件を参照してください："

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:26
msgid ":ref:`AWS prerequisites <aws-integration-prereqs>`"
msgstr ":ref:`AWS prerequisites <aws-integration-prereqs>`"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:27
msgid ":ref:`Azure prerequisites <azure-integration-prereqs>`"
msgstr ":ref:`Azure prerequisites <azure-integration-prereqs>`"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:28
msgid ":ref:`GCP prerequisites <gcp-prerequisites>`"
msgstr ":ref:`GCP prerequisites <gcp-prerequisites>`"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:30
msgid "To use CloudWatch Metric Streams or retrieve logs from AWS services, you need to deploy additional resources on your AWS account using one of the :ref:`CloudFormation templates <aws-cloudformation>` provided by Splunk. Also, review your :ref:`IAM policy <review-aws-iam-policy>` to ensure all the required actions are available to Splunk Observability Cloud."
msgstr "CloudWatch Metric Streams を使用したり、AWS サービスからログを取得したりするには、Splunk が提供する:ref:`CloudFormation templates <aws-cloudformation>` のいずれかを使用して、AWS アカウントに追加のリソースをデプロイする必要があります。また、:ref:`IAM policy <review-aws-iam-policy>` を確認し、必要なすべてのアクションが Splunk Observability Cloud で利用可能であることを確認してください。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:36
msgid "Required tokens"
msgstr "必要なトークン"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:38
msgid "You might need these Splunk tokens to configure Terraform:"
msgstr "Terraform を設定するには、これらの Splunk トークンが必要になるかもしれません："

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:41
msgid "Splunk Observability Cloud user API access token (mandatory)"
msgstr "Splunk Observability Cloud ユーザー API アクセストークン (必須)"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:43
msgid "To obtain your :ref:`user API access token <admin-api-access-tokens>`:"
msgstr ":ref:`user API access token <admin-api-access-tokens>` ："

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:45
msgid "Go to Splunk Observability Cloud and select :guilabel:`Settings`."
msgstr "Splunk Observability Cloud にアクセスし、:guilabel:`Settings` を選択します。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:46
msgid "Select your avatar or name on the top to access your :guilabel:`Personal information`. Your user API access token is available on the right corner."
msgstr ":guilabel:`個人情報`.ユーザーAPIアクセストークンは右隅にあります。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:49
msgid "Splunk Observability Cloud org token"
msgstr "Splunk Observability Cloud orgトークン"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:51
msgid "To obtain your :ref:`org token <admin-org-tokens>`, you have two options:"
msgstr ":ref:`org token <admin-org-tokens>` を取得するには、2つの選択肢がある："

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:53
msgid "Go to Splunk Observability Cloud. In :guilabel:`Settings`, select :guilabel:`Access tokens`."
msgstr "Splunk Observability Cloud に移動します。:guilabel:`設定` で、:guilabel:`アクセス・トークン` を選択する。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:54
msgid "Use the :new-page:`Splunk Observability Cloud API <https://dev.splunk.com/observability/reference/api/org_tokens/latest#endpoint-retrieve-tokens-using-query>` to retrieve the name of the token."
msgstr "トークンの名前を取得するには、:new-page:`Splunk Observability Cloud API<https://dev.splunk.com/observability/reference/api/org_tokens/latest#endpoint-retrieve-tokens-using-query>` を使用します。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:57
msgid "Configure Terraform to connect to your cloud services"
msgstr "クラウドサービスに接続するためにTerraformを設定する"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:59
msgid "Terraform documentation identifies Splunk Observability Cloud as SignalFx. Integrations are therefore called ``signalfx_aws_integration``, ``signalfx_azure_integration``, and ``signalfx_gcp_integration``."
msgstr "Terraform ドキュメントでは、Splunk Observability Cloud は SignalFx とされています。したがって、積分は``signalfx_aws_integration`` 、``signalfx_azure_integration`` 、``signalfx_gcp_integration`` と呼ばれる。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:61
msgid "To configure a connection through Terraform, perform the following steps:"
msgstr "Terraformで接続を設定するには、以下の手順を実行する："

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:63
msgid "Go to :new-page:`Terraform's Registry <https://registry.terraform.io/>` and look for ``signalfx`` in the search box. You'll find ``splunk-terraform``'s ``signalFx`` provider site with docs, the available resources, and the compatible data sources."
msgstr ":new-page:`Terraformのレジストリ<https://registry.terraform.io/>` にアクセスし、検索ボックスで``signalfx`` を探す。``splunk-terraform`` の``signalFx`` プロバイダーサイトには、ドキュメント、利用可能なリソース、互換性のあるデータソースが掲載されています。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:65
msgid "Copy the ``Use provider`` code to add ``SignalFx`` in the ``required_providers`` block of main.tf in your configuration file. It looks similar to:"
msgstr "``Use provider`` のコードをコピーして、設定ファイルの main.tf の``required_providers`` ブロックに``SignalFx`` を追加する。に似ている："

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:87
msgid ":strong:`Required`. Paste you user API access token in the ``auth_token`` field in the provider config file. You can also set it using the ``SFX_AUTH_TOKEN`` environment variable. This is required to authenticate Terraform requests to Splunk Observability Cloud's API."
msgstr ":strong:`必須`.プロバイダ設定ファイルの``auth_token`` フィールドに、ユーザ API アクセストークンを貼り付けます。環境変数``SFX_AUTH_TOKEN`` を使って設定することもできる。これは、Splunk Observability Cloud の API への Terraform リクエストを認証するために必要です。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:89
msgid "Configure the required additional resources, which are Terraform's infrastructure objects."
msgstr "Terraformのインフラストラクチャーオブジェクトである、必要な追加リソースを設定する。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:91
msgid "For AWS, you need the ``signalfx_aws_integration`` resource. You can add your org token in the ``namedToken`` field to see how much traffic is coming from the integration it identifies, if you use different tokens per integration."
msgstr "AWSの場合、``signalfx_aws_integration`` リソースが必要です。統合ごとに異なるトークンを使用している場合は、``namedToken`` フィールドに org トークンを追加して、識別した統合からのトラフィック量を確認できます。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:93
msgid "If you're authenticating using the IAM policy and ARN roles, see ``signalfx_aws_external_integration``. Copy and modify the example syntax provided in the documentation section of Terraform Registry's SignalFx page and use it to :ref:`authenticate in AWS <aws-authentication>`."
msgstr "IAMポリシーとARNロールを使って認証している場合は、``signalfx_aws_external_integration`` を参照してください。Terraform RegistryのSignalFxページのドキュメントセクションにある構文例をコピーして修正し、:ref:`authenticate in AWS <aws-authentication>` 。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:94
msgid "If you're using AWS Security Token authentication, paste your AWS token in the ``signalfx_aws_token_integration`` resource token/key fields."
msgstr "AWS Security Token認証を使用している場合は、``signalfx_aws_token_integration`` リソーストークン/キーの欄にAWSトークンを貼り付けます。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:96
msgid "For Azure, use the ``signalfx_azure_integration`` resource."
msgstr "Azureの場合は、``signalfx_azure_integration`` 。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:98
msgid "For GCP, use the ``signalfx_gcp_integration`` resource."
msgstr "GCPの場合は、``signalfx_gcp_integration`` 。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:100
msgid "Add your cloud service as a data source, as described in: :guilabel:`Data Source: signalfx_aws_services`, :guilabel:`Data Source: signalfx_azure_services`, or :guilabel:`Data Source: signalfx_gcp_services`. Data sources allow Terraform to use information defined outside of Terraform, defined by another separate Terraform configuration, or modified by functions."
msgstr "で説明されているように、クラウドサービスをデータソースとして追加します：:guilabel:`データソース: signalfx_aws_services`,:guilabel:`データソース: signalfx_azure_services`, または:guilabel:`データソース: signalfx_gcp_services`.データソースによって、TerraformはTerraformの外部で定義された情報、別のTerraform設定によって定義された情報、あるいは関数によって変更された情報を利用できるようになる。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:102
msgid "For more Terraform syntax examples, see the blog entry :new-page:`Manage Your Splunk Infrastructure as Code Using Terraform <https://www.splunk.com/en_us/blog/partners/manage-your-splunk-infrastructure-as-code-using-terraform.html>`. For examples of how to configure through the Splunk Observability Cloud API, see :ref:`Connect to AWS using the Splunk Observability Cloud API <get-configapi>`."
msgstr "Terraform 構文の例については、ブログエントリー:new-page:`Manage Your Splunk Infrastructure as Code Using Terraform<https://www.splunk.com/en_us/blog/partners/manage-your-splunk-infrastructure-as-code-using-terraform.html>` を参照してください。Splunk Observability Cloud API による設定方法の例については、:ref:`Connect to AWS using the Splunk Observability Cloud API <get-configapi>` を参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:107
msgid "After you connect Splunk Observability Cloud with your cloud services provider:"
msgstr "Splunk Observability Cloudをクラウドサービスプロバイダーと接続した後："

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:109
msgid "See :ref:`how to leverage data from integration with AWS <aws-post-install>` for more information on how you can use Splunk Observability Cloud to track a series of metrics and analyze your AWS data in real time."
msgstr "Splunk Observability Cloud を使用して一連のメトリクスを追跡し、AWS データをリアルタイムで分析する方法については、:ref:`how to leverage data from integration with AWS <aws-post-install>` を参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:110
msgid "See :ref:`next steps for Azure <next-azure-steps>`."
msgstr ":ref:`next steps for Azure <next-azure-steps>` を参照。"

#: ../../gdi/get-data-in/connect/aws/aws-terraformconfig.rst:111
msgid "See :ref:`next steps for GCP <next-gcp-steps>`."
msgstr ":ref:`next steps for GCP <next-gcp-steps>` を参照。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:-1
msgid "Resolve AWS policy and permissions conflicts in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud の AWS ポリシーと権限の競合を解決する。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:5 ../../gdi/get-data-in/connect/aws/get-awstoc.rst:10
msgid "Troubleshoot your AWS connection"
msgstr "AWS接続のトラブルシューティング"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:11
msgid "If you experience issues when connecting Splunk Observability Cloud to your Amazon Web Services (AWS) account, they might be caused by conflicts between policies and permissions. See :ref:`aws-ts-logs` for specific log troubleshooting and :ref:`aws-ts-metric-streams` for issues specific to Metric Streams."
msgstr "Splunk Observability Cloud を Amazon Web Services (AWS) アカウントに接続する際に問題が発生する場合、ポリシーと権限の競合が原因である可能性があります。具体的なログのトラブルシューティングについては:ref:`aws-ts-logs` を、メトリックストリームに特有の問題については:ref:`aws-ts-metric-streams` を参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:13 ../../gdi/get-data-in/connect/aws/get-awstoc.rst:139 ../../gdi/get-data-in/connect/azure/azure.rst:128 ../../gdi/get-data-in/connect/connect.rst:28 ../../gdi/get-data-in/connect/gcp/gcp.rst:191
msgid "Splunk is not responsible for data availability, and it can take up to several minutes (or longer, depending on your configuration) from the time you connect until you start seeing valid data from your account."
msgstr "Splunk はデータの可用性について責任を負わず、接続してからアカウントから有効なデータが表示されるようになるまで最大数分 (設定によってはそれ以上) かかることがあります。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:18
msgid "Error validating AWS connection"
msgstr "AWS接続の検証エラー"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:20
msgid "The automatic attempt to validate a connection that you just configured fails, so there is no connection between Splunk Observability Cloud and your AWS account."
msgstr "先ほど設定した接続の自動検証の試みは失敗し、Splunk Observability Cloud と AWS アカウント間の接続はありません。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:23 ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:65 ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:111
msgid "Cause"
msgstr "原因"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:25
msgid "The connection might fail due to mismatched Identity Access Management (IAM) policies. To diagnose connection failure, check the permissions or policies you set up and compare them to the permissions that AWS requires."
msgstr "アイデンティティ・アクセス管理（IAM）ポリシーが不一致のため、接続に失敗する可能性があります。接続障害を診断するには、設定した権限やポリシーを確認し、AWSが要求する権限と比較する。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:27
msgid "Verify whether your error message looks similar to this example:"
msgstr "エラーメッセージがこの例と同じように見えるかどうかを確認してください："

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:36
msgid "If you receive a similar error message, then the IAM policy that you created to connect AWS to Splunk Observability Cloud does not match the policy already in your AWS account."
msgstr "同様のエラーメッセージが表示される場合は、AWS を Splunk Observability Cloud に接続するために作成した IAM ポリシーが、AWS アカウントに既にあるポリシーと一致していません。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:38
msgid "Similarly, if your AWS account uses a service control policy (SCP) or administrative features such as ``PermissionsBoundary``, then there might be limits on which calls can be made in your organization, even if those calls are covered by your AWS IAM policy."
msgstr "同様に、AWS アカウントがサービスコントロールポリシー（SCP）または``PermissionsBoundary`` のような管理機能を使用している場合、それらの通話が AWS IAM ポリシーでカバーされていても、組織内で発信できる通話に制限があるかもしれない。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:41 ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:72 ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:94 ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:116
msgid "Solution"
msgstr "ソリューション"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:43
msgid "Splunk Observability Cloud uses the following calls to validate whether it can accept data from the AWS Compute Optimizer tool to support CloudWatch metric streams:"
msgstr "Splunk Observability Cloud は以下のコールを使用して、CloudWatch メトリックストリームをサポートする AWS Compute Optimizer ツールからデータを受け入れられるかどうかを検証します："

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:53
msgid "To ensure that your AWS integration works as expected, revisit your configuration choices in Splunk Observability Cloud to verify that they match the permissions policy in your AWS management console."
msgstr "AWS との統合が期待通りに動作することを確認するには、Splunk Observability Cloud で選択した設定が AWS 管理コンソールの権限ポリシーと一致していることを確認します。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:55
msgid "A match ensures that conflicting permissions do not cause your AWS environment to block integrations. See the \"Amazon CloudWatch permissions reference\" in the Amazon documentation for details about the available permissions."
msgstr "一致させることで、競合するパーミッションがAWS環境で統合がブロックされないようにする。利用可能なパーミッションの詳細については、Amazonドキュメントの \"Amazon CloudWatch permissions reference \"を参照のこと。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:60
msgid "Splunk Observability Cloud doesn't work as expected"
msgstr "Splunk Observability Cloud が期待通りに動作しない"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:62
msgid "Features or tools within Splunk Observability Cloud do not work as expected."
msgstr "Splunk Observability Cloud 内の機能またはツールが期待どおりに動作しない。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:67
msgid "When a feature in Splunk Observability Cloud does not work as expected after connection to AWS, then permissions for that feature in the AWS IAM policy are absent or blocking implementation. For example, ``ec2:DescribeRegions`` is used to detect which AWS regions are active in your account. Without that permission, or if no region is specified, then system settings default to AWS standard regions."
msgstr "AWS に接続しても Splunk Observability Cloud の機能が期待通りに動作しない場合、AWS IAM ポリシーにその機能に対するパーミッションがないか、実装がブロックされています。例えば、``ec2:DescribeRegions`` は、あなたのアカウントでどのAWSリージョンがアクティブかを検出するために使用される。この許可がない場合、またはリージョンが指定されていない場合、システム設定のデフォルトはAWS標準リージョンとなる。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:69
msgid "Metrics collection also depends on the the permissions you set."
msgstr "メトリクスの収集も、設定したパーミッションに依存する。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:74
msgid "Review your :ref:`IAM policy <review-aws-iam-policy>` to ensure it includes the permissions needed for the metrics or other data that you intend to collect."
msgstr ":ref:`IAM policy <review-aws-iam-policy>` を見直し、収集しようとするメトリクスやその他のデータに必要なパーミッションが含まれていることを確認します。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:76
msgid "Once integrated with your Amazon Web Services account, Splunk Observability Cloud can gather CloudWatch metrics, CloudWatch logs, CloudWatch Metric Streams, service logs stored in Amazon S3 buckets, and service tag and property information. But leveraging the full power of the integration requires all included permissions."
msgstr "Amazon Web Services アカウントと統合すると、Splunk Observability Cloud は CloudWatch メトリクス、CloudWatch ログ、CloudWatch メトリクスストリーム、Amazon S3 バケットに保存されたサービスログ、サービスタグとプロパティ情報を収集できます。しかし、統合のパワーをフルに活用するには、含まれているすべての権限が必要です。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:81
msgid "Metrics and tags for a particular namespace are not displayed"
msgstr "特定のネームスペースのメトリクスとタグが表示されない"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:83
msgid "Metrics and tags for a particular namespace are not displayed as expected."
msgstr "特定のネームスペースのメトリクスとタグが期待どおりに表示されない。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:86
msgid "Causes"
msgstr "原因"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:88
msgid "If you use the AWS Organizations' :new-page:`Service control policies <https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html>` or :new-page:`Permission boundaries for IAM entities <https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html>`, they might impact the AWS IAM policy you're using to connect to Splunk Observability Cloud."
msgstr "AWS Organizations':new-page:`Service control policies<https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html>` または:new-page:`Permission boundaries for IAM entities<https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html>` を使用している場合、Splunk Observability Cloud への接続に使用している AWS IAM ポリシーに影響を与える可能性があります。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:91
msgid "If you modified the default IAM policy while setting up an integration between Splunk Observability Cloud and AWS, then your IAM policy does not list namespaces that were removed as not needed for the original integration, and as a result, Splunk Observability Cloud ignores metrics for those namespaces."
msgstr "Splunk Observability Cloud と AWS 間の統合をセットアップする際にデフォルトの IAM ポリシーを変更した場合、IAM ポリシーには元の統合に必要ないとして削除された名前空間がリストされず、結果として Splunk Observability Cloud はそれらの名前空間のメトリクスを無視します。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:96
msgid "Review the AWS Organizations' policies and boundaries you're using."
msgstr "使用しているAWS組織のポリシーと境界を確認する。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:98
msgid "Also, to ensure that you can see the metrics you expect to monitor, perform the following steps:"
msgstr "また、監視するメトリクスを確実に表示するには、以下の手順を実行します："

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:100
msgid "Review the default IAM policy shown in :ref:`Connect to AWS using the Splunk Observability Cloud API <get-configapi>` to find the entry for the namespace you want."
msgstr ":ref:`Connect to AWS using the Splunk Observability Cloud API <get-configapi>` に表示されているデフォルトの IAM ポリシーを確認し、必要なネームスペースのエントリを見つける。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:101
msgid "Add the missing entry to your AWS IAM file. For more information, search for \"Editing IAM policies\" in the AWS Identity and Access Management documentation."
msgstr "不足しているエントリを AWS IAM ファイルに追加する。詳細については、AWS Identity and Access Management のドキュメントで \"Editing IAM policies\" を検索してください。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:106
msgid "Status check metrics are missing"
msgstr "ステータス・チェックのメトリクスが見つからない"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:108
msgid "Metrics related to status check are missing."
msgstr "ステータスチェックに関連する指標が見当たらない。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:113
msgid "By default, status check metrics are not activated to reduce AWS CloudWatch cost and Splunk Observability Cloud system usage."
msgstr "デフォルトでは、AWS CloudWatchのコストとSplunk Observability Cloudのシステム使用量を削減するため、ステータスチェックメトリクスは有効化されていません。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:118
msgid "Activate status metrics for your integration."
msgstr "統合のステータス測定基準をアクティブにします。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:120
msgid "To do so, follow these steps:"
msgstr "そのためには、以下の手順に従ってください："

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:122
msgid "Get the integration object from the API:"
msgstr "API から統合オブジェクトを取得します："

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:130
msgid "You'll get something similar to:"
msgstr "似たようなものが出てくるだろう："

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:191
msgid "Modify the integration file as explained in steps 3 and 4."
msgstr "ステップ 3 と 4 で説明したように、統合ファイルを修正します。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:192
msgid "Remove the fields below from the call, as these will be populated automatically:"
msgstr "以下のフィールドは自動的に入力されるため、呼び出しから削除してください："

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:203
msgid "Include ``ignoreAllStatusMetrics``, set to ``false``, in the integration. It will look like this:"
msgstr "``false`` に設定した``ignoreAllStatusMetrics`` を統合に含める。このようになる："

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:230
msgid "Update the integration object above using the API:"
msgstr "APIを使用して上記の統合オブジェクトを更新する："

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:239
msgid "``StatusCheckFailed`` is always ignored but now you can combine the other two status check metrics, ``StatusCheckFailed_Instance`` and ``StatusCheckFailed_System``, to obtain status information."
msgstr "``StatusCheckFailed`` は常に無視されるが、ステータス情報を得るために、他の2つのステータスチェックメトリクス、``StatusCheckFailed_Instance`` と``StatusCheckFailed_System`` を組み合わせることができるようになった。"

#: ../../gdi/get-data-in/connect/aws/aws-troubleshooting.rst:241
msgid "For more on AWS status check metrics, see the official AWS documentation."
msgstr "AWSのステータスチェックメトリクスの詳細については、AWSの公式ドキュメントを参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:-1
msgid "Troubleshoot log collection from your AWS services in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud での AWS サービスからのログ収集のトラブルシューティング。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:6
msgid "Troubleshoot log collection in AWS"
msgstr "AWSにおけるログ収集のトラブルシューティング"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:11
msgid "See the following topics when experiencing issues collecting logs from AWS."
msgstr "AWSからログを収集する際に問題が発生した場合は、以下のトピックを参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:15
msgid "See also :ref:`aws-troubleshooting` and :ref:`aws-ts-metric-streams`."
msgstr ":ref:`aws-troubleshooting` および:ref:`aws-ts-metric-streams` も参照のこと。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:18
msgid "CloudFormation stack was not created"
msgstr "CloudFormationスタックが作成されない"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:20
msgid "You fully control the process of creating the CloudFormation stack, which is executed with the permissions associated with your user. The template contains a lambda function and a role required to forward logs from Cloudwatch and S3 buckets. If any errors occur, AWS displays a specific error message."
msgstr "CloudFormationスタックを作成するプロセスを完全にコントロールし、ユーザーに関連付けられている権限で実行される。テンプレートには、CloudwatchとS3バケットからログを転送するために必要なラムダ関数とロールが含まれている。エラーが発生した場合、AWSは特定のエラーメッセージを表示する。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:22
msgid "To learn more about supported templates, see the :new-page:`README <https://github.com/signalfx/aws-cloudformation-templates>` on GitHub."
msgstr "サポートされているテンプレートの詳細については、GitHubの:new-page:`README<https://github.com/signalfx/aws-cloudformation-templates>` を参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:25
msgid "I created an integration, but I don't see any logs"
msgstr "インテグレーションを作成しましたが、ログが表示されません。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:27
msgid "If you created the integration recently, it might take some time for the logs to appear in your account. The job that makes your logs notify Splunk AWS Log Collector runs every minute, so it might take a short while to subscribe to a new resource. AWS logs delivery inside AWS (to CloudWatch log groups, or to S3 buckets) and AWS lambda triggering can introduce additional delay. Check AWS documentation for more details."
msgstr "最近統合を作成した場合は、アカウントにログが表示されるまで時間がかかる場合があります。ログを Splunk AWS Log Collector に通知するジョブは 1 分ごとに実行されるため、新しいリソースを購読するのに少し時間がかかる場合があります。AWS内部でのAWSログ配信（CloudWatchロググループ、またはS3バケット）とAWS lambdaトリガーは、追加の遅延を引き起こす可能性があります。詳細はAWSのドキュメントを参照。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:29
msgid "If you still don't see any logs after 15 minutes, check the IAM policy you've used to set up the AWS connection. We recommend using the :ref:`provided IAM policy <aws-iam-policy>`. If you still don't see the logs, please contact :ref:`our support <support>`."
msgstr "15分経ってもログが表示されない場合は、AWS接続の設定に使用したIAMポリシーを確認してください。:ref:`provided IAM policy <aws-iam-policy>` のご利用をお勧めします。それでもログが表示されない場合は、:ref:`our support <support>` までご連絡ください。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:31
msgid "You can activate debug mode on the log forwarding lambda function: Add ``LOG_LEVEL=DEBUG`` in the :guilabel:`Environment variables` section under :guilabel:`Configuration`. If you see log forwarding calls fail due to a 503 HTTP error, you might be exceeding logs limit. To fix this, contact :ref:`our support <support>`."
msgstr "ログ転送ラムダ関数のデバッグモードを有効にすることができます：:guilabel:`環境変数` セクションの:guilabel:`設定` に``LOG_LEVEL=DEBUG`` を追加する。ログ転送の呼び出しが503 HTTPエラーで失敗する場合、ログの上限を超えている可能性があります。この問題を解決するには、:ref:`our support <support>` までご連絡ください。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:34
msgid "CloudFront access logs are not being collected"
msgstr "CloudFrontのアクセスログが収集されない"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:36
msgid "CloudFront is a global service, and its logs can be stored in any of the standard AWS regions. Each CloudFront instance can have an S3 target bucket to access configured logs. Splunk AWS log collection can only grab the logs if the S3 bucket is located in a region Splunk AWS log collection can access. Use the provided IAM policy to ensure the Splunk Observability Cloud back end has the required permissions."
msgstr "CloudFrontはグローバルなサービスであり、そのログは標準的なAWSのどのリージョンにも保存できる。各CloudFrontインスタンスは、設定されたログにアクセスするためのS3ターゲットバケットを持つことができる。Splunk AWS ログコレクションがログを取得できるのは、S3 バケットが Splunk AWS ログコレクションがアクセスできるリージョンにある場合のみです。提供された IAM ポリシーを使用して、Splunk Observability Cloud バックエンドに必要な権限があることを確認します。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:39
msgid "I don't see logs from some instances"
msgstr "いくつかのインスタンスのログが表示されない"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:41
msgid "Make sure your IAM policy allows access to the instances, their regions, or the regions where they send logs. If the service instance was recently created, it might take up to 15 minutes for the Splunk Observability Cloud back end to start gathering logs from it."
msgstr "IAMポリシーがインスタンス、そのリージョン、またはログを送信するリージョンへのアクセスを許可していることを確認する。サービスインスタンスが最近作成された場合、Splunk Observability Cloud バックエンドがそのインスタンスからログの収集を開始するまで最大 15 分かかることがあります。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:43
msgid "AWS allows you to configure only one notification of a given kind when a new log file appears, and S3 event files are created. If the bucket where an instance's logs are stored already notifies another lambda function of a file creation, Splunk Observability Cloud cannot add its subscription on top of that. You can either remove the pre-existing notification configuration, or narrow it by specifying a prefix and a suffix in such a way that the log files won't be triggering your pre-existing lambda function. If that's not possible, :ref:`contact us <support>` for assistance to modify your AWS architecture to work around the limitation."
msgstr "AWSでは、新しいログファイルが表示され、S3のイベントファイルが作成されたときに、指定された種類の通知を1つだけ設定することができる。インスタンスのログが保存されているバケットがすでに別のラムダ関数にファイル作成を通知している場合、Splunk Observability Cloud はそのサブスクリプションを追加できません。既存の通知設定を削除するか、ログファイルが既存のラムダ関数をトリガーしないようにプレフィックスとサフィックスを指定することで通知設定を狭めることができます。それが不可能な場合は、:ref:`contact us <support>` 、制限を回避するためにAWSアーキテクチャを変更するための支援を求めてください。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:46
msgid "I don't see logs from some of my S3 buckets"
msgstr "いくつかのS3バケットからのログが表示されません。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:48
msgid "Some AWS services use S3 buckets to store their logs, and sometimes the S3 bucket is located in a different region from the service that produces those logs. In such cases make sure to deploy the ``splunk-aws-logs-collector`` lambda function using the CloudFormation template in all AWS regions where S3 buckets with logs are located."
msgstr "AWSのサービスによっては、ログを保存するためにS3バケットを使用しており、S3バケットがログを生成するサービスとは異なるリージョンにあることがある。このような場合は、ログが保存されているS3バケットがあるすべてのAWSリージョンに、CloudFormationテンプレートを使用して``splunk-aws-logs-collector`` ラムダ関数をデプロイしてください。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:51
msgid "I have deactivated logs collection, but logs are still gathered by Splunk Observability Cloud"
msgstr "ログの収集を停止しましたが、Splunk Observability Cloud によってログが収集されます。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:53
msgid "It might take up to 15 minutes for the Splunk Observability Cloud back end to cancel log subscriptions. There might be additional delays introduced by the AWS logs delivery process."
msgstr "Splunk Observability Cloud バックエンドがログサブスクリプションをキャンセルするまで、最大 15 分かかる場合があります。AWSのログ配信プロセスにより、さらに遅延が発生する可能性があります。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:55
msgid "The back end needs log related permissions to cancel log subscriptions. If log related permissions are removed from the AWS IAM policy (or the entire policy is removed), the back end cannot run the cleanup procedure. Make sure to deactivate log collection on the Splunk Observability Cloud side first, and clean up on AWS side later."
msgstr "バックエンドがログ購読をキャンセルするには、ログ関連のパーミッションが必要です。ログ関連のパーミッションがAWS IAMポリシーから削除されている（またはポリシー全体が削除されている）場合、バックエンドはクリーンアップ手順を実行できない。最初に Splunk Observability Cloud 側でログ収集を停止し、後で AWS 側でクリーンアップするようにしてください。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:58
msgid "I deactivated the integration or changed its settings, but logs are still being collected!"
msgstr "統合を解除したり、設定を変更したりしましたが、ログは収集されたままです！"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:60
msgid "If you deactivate a part or all the integration, our back end job will attempt to clear all notifications and subscriptions it has previously created, which might take up to 15 minutes. However, if you also remove IAM permissions, the attempt might fail."
msgstr "統合の一部または全部を無効にすると、バックエンドのジョブは以前に作成したすべての通知と購読を消去しようとします。しかし、IAMパーミッションも削除すると、試みは失敗するかもしれない。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:62
msgid "To stop sending any logs to Splunk Observability Cloud, delete the Splunk AWS Logs collector lambda from the region where you wish to stop collecting logs."
msgstr "Splunk Observability Cloud へのログの送信を停止するには、ログの収集を停止したいリージョンから Splunk AWS Logs collector lambda を削除します。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:65
msgid "How does log subscription clean-up work? How can I try to clean up logs again?"
msgstr "ログ購読のクリーンアップはどのように行われますか？ログのクリーンアップをもう一度試したいのですが？"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:67
msgid "When you deactivate log synchronization (or an entire AWS integration), Splunk Observability Cloud attempts to clear all the log-related notifications and subscriptions that had been created. This process might take up to 15 minutes and removes both notifications from S3 buckets and subscriptions from CloudWatch Log Groups."
msgstr "ログ同期 (または AWS 統合全体) を停止すると、Splunk Observability Cloud は作成されていたすべてのログ関連の通知とサブスクリプションを消去しようとします。このプロセスには最大15分かかり、S3バケットからの通知とCloudWatch Log Groupsからのサブスクリプションの両方を削除する。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:69
msgid "The clean-up procedure might fail if you remove IAM permissions or due to throttling, for example if there are too many API calls to update CloudWatch Log Groups subscriptions."
msgstr "IAMパーミッションを削除したり、CloudWatch Log Groupsサブスクリプションを更新するAPIコールが多すぎる場合など、スロットリングが原因でクリーンアップ手順が失敗する可能性がある。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:71 ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:44
msgid "To retry the clean-up process, you have two options:"
msgstr "クリーンアップ・プロセスを再試行するには、2つの選択肢がある："

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:73 ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:46
msgid "Splunk Observability Cloud UI (beta feature - limited availability): Go to the context menu in the integration list and select Cleanup."
msgstr "Splunk Observability Cloud UI (ベータ機能 - 利用制限あり)：統合リストのコンテキストメニューから [クリーンアップ] を選択します。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:74
msgid "API: Set ``logsSyncState`` to the ``CANCELLING`` state."
msgstr "API：``logsSyncState`` を``CANCELLING`` の状態にする。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:77
msgid "Assisted log subscription clean-up failed. How do I clean up log subscriptions manually?"
msgstr "ログサブスクリプションのクリーンアップに失敗しました。手動でログ購読をクリーンアップするにはどうすればよいですか？"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:79
msgid "Log synchronization on your AWS account is handled by the Splunk AWS Logs Collector lambda function, which is deployed using one of the available :ref:`CloudFormation templates <aws-cloudformation>`."
msgstr "AWS アカウントでのログ同期は Splunk AWS Logs Collector lambda 関数によって処理され、利用可能な:ref:`CloudFormation templates <aws-cloudformation>` のいずれかを使用してデプロイされます。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:81
msgid "To manually remove log sync in all your AWS regions, you need to either remove the entire Cloud Formation stack (recommended) or just the lambda function."
msgstr "手動ですべてのAWSリージョンのログ同期を削除するには、Cloud Formationスタック全体を削除するか（推奨）、ラムダ関数だけを削除する必要があります。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:83
msgid "Optionally you might also need to review your S3 buckets notifications settings and CloudWatch Log Groups subscription filters and remove Splunk Log Collector related entries."
msgstr "オプションとして、S3バケットの通知設定とCloudWatch Log Groupsのサブスクリプションフィルタを確認し、Splunk Log Collector関連のエントリを削除する必要もあります。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:85
msgid "For S3 bucket notifications, remove all event notifications with the destination set to the ``splunk-aws-logs-collector`` lambda."
msgstr "S3 バケット通知の場合、宛先が``splunk-aws-logs-collector`` lambda に設定されているイベント通知をすべて削除します。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:-1
msgid "This image shows notifications for S3 buckets."
msgstr "この画像はS3バケットの通知を示している。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:91
msgid "For CloudWatch Log Groups, remove the subscription filter called :strong:`Splunk Log Collector` from all log groups."
msgstr "CloudWatch Log Groups では、すべてのロググループから:strong:`Splunk Log Collector` というサブスクリプションフィルタを削除する。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-logs.rst:-1
msgid "This image shows subscription filters for the Log Collector."
msgstr "この画像は、ログコレクタのサブスクリプションフィルタを示しています。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:-1
msgid "Troubleshoot Metric Streams from your AWS services in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud で AWS サービスからのメトリックストリームのトラブルシューティングを行います。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:5
msgid "Troubleshoot Metric Streams in AWS"
msgstr "AWSのメトリックストリームのトラブルシューティング"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:10
msgid "See the following topics when experiencing Metric Streams issues from AWS."
msgstr "AWSからMetric Streamsの問題が発生した場合は、以下のトピックを参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:14
msgid "See also :ref:`aws-troubleshooting` and :ref:`aws-ts-logs`."
msgstr ":ref:`aws-troubleshooting` および:ref:`aws-ts-logs` も参照のこと。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:17
msgid "I've enabled Metric Streams in my AWS integration but I do not see any metrics streaming in"
msgstr "AWSインテグレーションでMetric Streamsを有効にしたのですが、以下のようなメトリクスが表示されません。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:19
msgid "After all the required IAM permissions are in place, your AWS integration is configured, and one of the :ref:`CloudFormation templates <aws-cloudformation>` has been deployed, Splunk Observability Cloud starts to create CloudWatch Metric Streams objects in your AWS account. It might take up to 15 minutes for metrics to start streaming."
msgstr "必要な IAM パーミッションがすべて配置され、AWS インテグレーションが設定され、:ref:`CloudFormation templates <aws-cloudformation>` のいずれかがデプロイされると、Splunk Observability Cloud は AWS アカウントに CloudWatch Metric Streams オブジェクトを作成し始めます。メトリクスがストリーミングを開始するまで、最大15分かかる場合があります。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:21
msgid "If you're experiencing issues streaming metrics, check the following:"
msgstr "メトリクスのストリーミングに問題がある場合は、以下を確認してください："

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:23
msgid "In the AWS CloudWatch Metric Streams console, verify that Metric Streams (automatically created by Splunk Observability Cloud) match the ``splunk-metric-stream-<integration-id>`` pattern. If Metric Streams are not present, review the Metric Streams set-up procedure."
msgstr "AWS CloudWatch Metric Streams コンソールで、Metric Streams (Splunk Observability Cloud によって自動的に作成される) が``splunk-metric-stream-<integration-id>`` パターンと一致することを確認する。メトリックストリームが存在しない場合は、メトリックストリームのセットアップ手順を確認してください。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:25
msgid "CloudFormation parameter values:"
msgstr "CloudFormationのパラメータ値："

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:27
msgid "Set ``SplunkIngestUrl`` to the value shown in the :guilabel:`Real-time Data Ingest Endpoint` section under :strong:`Organizations` in your profile. For example, https://ingest.signalfx.com."
msgstr "``SplunkIngestUrl`` を、プロファイルの:strong:`Organizations` の:guilabel:`Real-time Data Ingest Endpoint` セクションに表示されている値に設定します。例えば、https://ingest.signalfx.com。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:29
msgid "Note: Don't include the :strong:`/v1/cloudwatch_metric_stream` endpoint path in ``SplunkIngestUrl``."
msgstr "注：:strong:`/v1/cloudwatch_metric_stream` のエンドポイントパスを``SplunkIngestUrl`` に含めないこと。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:31
msgid "``SplunkAccessToken`` needs to be a valid organization access token with ``INGEST`` authorization scope. You can find access tokens in the :strong:`Access Tokens` page in the Splunk Observability Cloud settings."
msgstr "``SplunkAccessToken`` は、``INGEST`` 認証スコープを持つ有効な組織アクセストークンである必要があります。アクセストークンは、Splunk Observability Cloud 設定の:strong:`アクセストークン` ページで確認できます。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:33
msgid "In the AWS Kinesis Streams console, validate that metrics are being delivered to the Kinesis Stream created by the CloudFormation template."
msgstr "AWS Kinesis Streamsコンソールで、CloudFormationテンプレートで作成されたKinesis Streamにメトリクスが配信されていることを確認します。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:35
msgid "In the AWS S3 bucket used by Kinesis Firehose, check if there are any records that could not be delivered to Splunk Observability Cloud."
msgstr "Kinesis Firehose で使用している AWS S3 バケットで、Splunk Observability Cloud に配信できなかったレコードがないか確認します。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:38
msgid "How does Metric Streams clean-up work? How can I try to clean up Metric Streams again?"
msgstr "メトリック・ストリームスのクリーンアップはどのように行われるのですか？メトリックストリームをもう一度クリーンアップするにはどうしたらいいですか？"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:40
msgid "When you deactivate Metric Streams (or an entire AWS integration), Splunk Observability Cloud attempts to remove all CloudWatch Metric Streams that had been created. This process might take up to 15 minutes."
msgstr "メトリックストリーム (または AWS 統合全体) を停止すると、Splunk Observability Cloud は作成されていたすべての CloudWatch メトリックストリームを削除しようとします。この作業には15分ほどかかる。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:42
msgid "The clean-up procedure might fail if you remove IAM permissions or due to throttling, for example if there are too many API calls to delete Metric Streams objects."
msgstr "IAMパーミッションを削除した場合や、Metric Streamsオブジェクトを削除するAPIコールが多すぎる場合など、スロットリングが原因でクリーンアップ手順が失敗する可能性があります。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:47
msgid "API: Set ``metricStreamsSyncState`` to the ``CANCELLING`` state."
msgstr "API：``metricStreamsSyncState`` を``CANCELLING`` の状態にする。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:50
msgid "Assisted Metric Streams clean-up failed. How do I clean up Metric Streams manually?"
msgstr "Assisted Metric Streamsのクリーンアップに失敗した。メトリックストリームを手動でクリーンアップする方法は？"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:52
msgid "To manually remove Metric Streams:"
msgstr "メトリックストリームを手動で削除するには"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:54
msgid "Go to the AWS CloudWatch Metric Streams console in each region where you deployed a CloudFormation template."
msgstr "CloudFormationテンプレートをデプロイした各リージョンでAWS CloudWatch Metric Streamsコンソールにアクセスする。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:55
msgid "Remove all Metric Streams with a name starting with the ``splunk-metric-stream`` prefix followed by a numeric id."
msgstr "``splunk-metric-stream`` のプレフィックスで始まり、数値idが続く名前のメトリックストリームをすべて削除する。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:-1
msgid "This image shows how to manually remove Metric Streams."
msgstr "この画像は、メトリックストリームを手動で削除する方法を示しています。"

#: ../../gdi/get-data-in/connect/aws/aws-ts-metric-streams.rst:61
msgid "Optionally, go to the CloudFormation console and remove the entire Splunk Observability Cloud stack."
msgstr "オプションとして、CloudFormation コンソールに移動し、Splunk Observability Cloud スタック全体を削除します。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:-1
msgid "Use guided setup to connect Splunk Observability Cloud to AWS through CloudWatch."
msgstr "ガイド付きセットアップを使用して、CloudWatch を介して Splunk Observability Cloud を AWS に接続します。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:5
msgid "Connect to AWS using the guided setup in Splunk Observability Cloud"
msgstr "Splunk Observability Cloud のガイド付きセットアップを使用して AWS に接続します。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:10
msgid "If you have Administrator privileges for Splunk Observability Cloud and your Amazon Web Services (AWS) account, you can use the UI guided setup to create an integration to connect to AWS, and configure metrics and logs collection."
msgstr "Splunk Observability Cloud の管理者権限と Amazon Web Services (AWS) アカウントがあれば、UI ガイド付きセットアップを使用して、AWS に接続する統合を作成し、メトリクスとログの収集を設定できます。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:12
msgid "Check :ref:`get-started-aws` for prerequisites, information on ingest methods, and other ways to connect Splunk Observability Cloud to AWS."
msgstr "前提条件、インジェスト方法、Splunk Observability Cloud を AWS に接続するその他の方法については、:ref:`get-started-aws` をご確認ください。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:17
msgid "Use the guided setup to connect to AWS"
msgstr "AWSに接続するには、ガイド付きのセットアップを使用します。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:19 ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:18
msgid "To access the guided setup for AWS integration, perform the following steps:"
msgstr "AWS統合のガイド付きセットアップにアクセスするには、以下の手順を実行します："

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:22
#, python-format
msgid "Open the :new-page:`Amazon Web Services guided setup <https://login.signalfx.com/#/gdi/aws?category=all&gdiState=%7B%22integrationId%22:%22FfhrrZoAYAA%22%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`Amazon Web Services guided setup<https://login.signalfx.com/#/gdi/aws?category=all&gdiState=%7B%22integrationId%22:%22FfhrrZoAYAA%22%7D>` を開く。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:24
msgid "On the navigation menu, select :menuselection:`Data Management`."
msgstr "ナビゲーション・メニューで、:menuselection:`Data Management` を選択する。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:26
msgid "On the Integrate Your Data page, select the tile for :strong:`Amazon Web Services`."
msgstr "Integrate Your Data ページで、:strong:`Amazon Web Services` のタイルを選択します。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:28
msgid "Next, follow the steps provided in the guided setup:"
msgstr "次に、セットアップガイドに記載されている手順に従ってください："

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:30
msgid ":ref:`aws-wizard-define`."
msgstr ":ref:`aws-wizard-define`."

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:31
msgid ":ref:`aws-wizard-prepare`."
msgstr ":ref:`aws-wizard-prepare`."

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:32
msgid ":ref:`aws-wizard-establish`."
msgstr ":ref:`aws-wizard-establish`."

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:37
msgid "Define your connection"
msgstr "コネクションの定義"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:39
msgid "Choose the following connection options:"
msgstr "以下の接続オプションを選択する："

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:41
msgid "The region AWS from which AWS manages your resources. See :ref:`aws-regions` for more informaion."
msgstr "AWSがリソースを管理するリージョン。詳細は:ref:`aws-regions` 。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:42
msgid "Authentication method. Learn more at :ref:`aws-authentication`."
msgstr "認証方法。詳しくは:ref:`aws-authentication` 。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:43
msgid "Data ingest options such as:"
msgstr "以下のようなデータ・インジェスト・オプションがある："

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:45
msgid "Metadata."
msgstr "メタデータ。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:46
msgid "Cost and usage metrics."
msgstr "コストと利用指標。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:47
msgid "Logs."
msgstr "ログ"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:48
msgid "Ingestion method: Polling or streaming. Learn more at :ref:`get-started-aws`."
msgstr "取り込み方法：ポーリングまたはストリーミング。詳しくは:ref:`get-started-aws` 。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:51
msgid "Polling rate"
msgstr "投票率"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:53
msgid "If you poll yourdata from AWS, select the rate at which you want Splunk Observability Cloud to poll CloudWatch for metric data, with 1 minute as the minimum value, and 10 minutes as the maximum value. For example, a value of 300 polls metrics once every 5 minutes."
msgstr "AWSからデータをポーリングする場合、Splunk Observability CloudがCloudWatchにメトリックデータをポーリングするレートを、最小値を1分、最大値を10分として選択します。例えば、300という値は、5分ごとに1回、メトリクスをポーリングします。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:55
msgid "Poll rate is expressed in seconds."
msgstr "ポーリング・レートは秒単位で表される。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:60
msgid "Activating Metric Streams"
msgstr "メトリックストリームの有効化"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:62
msgid "If you activate Metric Streams, take the following considerations into account:"
msgstr "メトリックストリームを有効にする場合は、以下の点を考慮してください："

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:64
msgid "When creating the new AWS IAM policy, :ref:`add these additional permissions <metricstreams_iampolicy>` to the ones already suggested in the guided setup."
msgstr "新しいAWS IAMポリシーを作成する際には、:ref:`add these additional permissions <metricstreams_iampolicy>` 、ガイドされたセットアップで既に提案されているものに従う。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:65
msgid "Follow the instructions to :ref:`activate Metric Streams <activate-cw-metricstreams>`."
msgstr ":ref:`activate Metric Streams <activate-cw-metricstreams>` の指示に従ってください。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:66
msgid "Update your settings and deploy the CloudFormation template following :ref:`these steps <activate-cw-metricstreams>`."
msgstr "設定を更新し、:ref:`these steps <activate-cw-metricstreams>` に従ってCloudFormationテンプレートをデプロイする。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:71
msgid "Prepare your AWS account"
msgstr "AWSアカウントを準備する"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:73
msgid "In this step, switch to your AWS Console to prepare for authentication."
msgstr "このステップでは、AWSコンソールに切り替えて認証の準備をします。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:75
msgid "On this screen, Splunk Observability Cloud gives you the AWS IAM policy JSON snippet, your Splunk Observability Cloud account ID and your External ID, which you'll need to define your authenticaton policies in the console."
msgstr "この画面では、Splunk Observability Cloud が AWS IAM ポリシー JSON スニペット、Splunk Observability Cloud アカウント ID、およびコンソールで認証ポリシーを定義するために必要な外部 ID を提供します。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:77
msgid "See more details in :ref:`aws-authentication`."
msgstr "詳細は:ref:`aws-authentication` を参照。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:82
msgid "Establish the connection"
msgstr "接続を確立する"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:84
msgid "Finally, proceed with the last steps:"
msgstr "最後に、最後のステップに進む："

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:86
msgid "Complete your authentication configuration as prompted."
msgstr "プロンプトに従って認証設定を完了します。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:87
msgid "Select your data sources:"
msgstr "データソースを選択します："

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:89
msgid "AWS Regions"
msgstr "AWSリージョン"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:90
msgid "Built-in and custom services."
msgstr "ビルトインおよびカスタムサービス。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:92
msgid "Select :guilabel:`All built-in services` to import all data from built-in CloudWatch namespaces and ensure that built-in dashboards display automatically."
msgstr ":guilabel:`All built-in services` を選択し、CloudWatch の組み込みネームスペースから全てのデータをインポートし、組み込みダッシュボードが自動的に表示されるようにする。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:95
msgid "Review the default AWS integration settings"
msgstr "デフォルトのAWSインテグレーション設定を確認する"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:97
msgid "After creating an AWS IAM policy and assigning it to a particular role through the guided setup, you can modify your configuration."
msgstr "AWS IAMポリシーを作成し、ガイド付きセットアップで特定のロールに割り当てた後、設定を変更することができる。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:100
msgid "Limit the scope of data collection"
msgstr "データ収集の範囲を限定する"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:102
msgid "By default, Splunk Observability Cloud will bring in data from all supported AWS services associated with your account, with :ref:`certain limitations <aws-data-limits>`."
msgstr ":ref:`certain limitations <aws-data-limits>`デフォルトでは、Splunk Observability Cloud は、アカウントに関連付けられたすべてのサポートされた AWS サービスからデータを取り込みます。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:104
msgid "To manage the amount of data to import, see :ref:`specify-data-metadata`."
msgstr "インポートするデータ量を管理するには、:ref:`specify-data-metadata` を参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:106
msgid "Use the check box options in the guided setup to limit the scope of your data collection. These are the available options:"
msgstr "データ収集の範囲を制限するには、ガイド付きセットアップのチェックボックスオプションを使用します。これらは利用可能なオプションである："

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:108
msgid "Amazon Cost and Usage Metrics"
msgstr "アマゾンのコストと利用指標"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:109
msgid "CloudWatch Metrics polling (you can deactivate it altogether, or deactivate the polling but activate AWS Metric Streams instead)"
msgstr "CloudWatch Metricsのポーリング（完全に無効にすることも、ポーリングを無効にして代わりにAWS Metric Streamsを有効にすることもできます。）"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:110
msgid "CloudWatch Logs"
msgstr "CloudWatchログ"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:111
msgid ":ref:`AWS regions <aws-regions>` to fetch data from"
msgstr ":ref:`AWS regions <aws-regions>` からデータを取得する。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:112
msgid "AWS services to fetch data from"
msgstr "AWSサービスからデータを取得する"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:114
msgid "In the :strong:`Data Management` menu in Splunk Observability Cloud, edit any integration to limit data import."
msgstr "Splunk Observability Cloud の:strong:`データ管理` メニューで、データのインポートを制限する統合を編集します。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:119
msgid "Use the AWS console to revise the contents of the ``Action`` and ``Resource`` fields."
msgstr "AWS コンソールを使用して、``Action`` と``Resource`` フィールドの内容を修正する。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:122
msgid "Select a CloudFormation template"
msgstr "CloudFormationテンプレートを選択する"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:124
msgid "Select a :ref:`CloudFormation template <aws-cloudformation>` to collect logs or Metric Streams for each AWS region that you want to operate in."
msgstr ":ref:`CloudFormation template <aws-cloudformation>` を選択し、運用したい AWS リージョンごとにログまたはメトリックストリームを収集する。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:129
msgid "After you connect Splunk Observability Cloud with AWS, you can use Splunk Observability Cloud to track a series of metrics and analyze your AWS data in real time."
msgstr "Splunk Observability Cloud と AWS を接続すると、Splunk Observability Cloud を使用して一連のメトリクスを追跡し、AWS データをリアルタイムで分析できます。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:131
msgid "See the AWS official documentation for a list of the available AWS resources."
msgstr "利用可能なAWSリソースのリストについては、AWSの公式ドキュメントを参照してください。"

#: ../../gdi/get-data-in/connect/aws/aws-wizardconfig.rst:132
msgid "See :ref:`how to leverage data from integration with AWS <aws-post-install>` for more information."
msgstr "詳しくは:ref:`how to leverage data from integration with AWS <aws-post-install>` 。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:10
msgid "Connect to AWS with the UI guided setup"
msgstr "UIガイド付きセットアップでAWSに接続する"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:10
msgid "Connect to AWS with the API"
msgstr "APIでAWSに接続する"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:10
msgid "Connect to AWS with Terraform"
msgstr "TerraformでAWSに接続する"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:10
msgid "Collect logs from AWS"
msgstr "AWSからログを収集する"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:10
msgid "CloudFormation templates"
msgstr "CloudFormationテンプレート"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:10
msgid "Troubleshoot Metric Streams"
msgstr "メトリックストリームのトラブルシューティング"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:10
msgid "Troubleshoot logs"
msgstr "ログのトラブルシューティング"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:5
msgid "Connect to AWS and send data to Splunk Observability Cloud"
msgstr "AWSに接続し、Splunk Observability Cloudにデータを送信する"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:25
msgid "Splunk Observability Cloud offers you several methods to connect and monitor Amazon Web Services (AWS), from a guided UI wizard to an extense API."
msgstr "Splunk Observability Cloud は、ガイド付き UI ウィザードから拡張 API まで、Amazon Web Services (AWS) に接続して監視するためのいくつかの方法を提供します。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:27
msgid "Before you start, see :ref:`aws-prereqs`, and check the :ref:`list of AWS integrations available in Splunk Observability Cloud <aws-integrations>`."
msgstr "始める前に、:ref:`aws-prereqs` を参照し、:ref:`list of AWS integrations available in Splunk Observability Cloud <aws-integrations>` をチェックしてください。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:29
msgid "Read on to learn about data ingest options and available connection methods."
msgstr "データ・インジェストのオプションと利用可能な接続方法については、こちらをお読みください。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:39
msgid "You have two ways to send AWS data to Splunk Observability Cloud:"
msgstr "AWSのデータをSplunk Observability Cloudに送信するには、2つの方法があります："

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:41
msgid "Through :ref:`API polling <aws-api-polling>` at specified intervals."
msgstr "指定された間隔で:ref:`API polling <aws-api-polling>` 。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:42
msgid "Using :ref:`CloudWatch Metric Streams <aws-metricstreams>`."
msgstr ":ref:`CloudWatch Metric Streams <aws-metricstreams>` を使用する。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:54
msgid "You can poll data from AWS at specified intervals using CloudWatch APIs. Due to the CloudWatch metrics instability, for certain namespaces some metrics might be delayed a few minutes. See more in :ref:`Configure API polling <aws-configure-api-polling>`."
msgstr "CloudWatch APIを使って、指定した間隔でAWSからデータをポーリングできる。CloudWatchのメトリクスが不安定なため、一部のネームスペースではメトリクスが数分遅れることがあります。:ref:`Configure API polling <aws-configure-api-polling>` でもっと見る。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:64
msgid "After you create an AWS integration, if more than 100,000 metrics are retrieved from CloudWatch, Splunk Observability Cloud automatically deactivates the integration and sends you a warning email."
msgstr "AWS 連携を作成した後、CloudWatch から取得したメトリクスが 100,000 を超えると、Splunk Observability Cloud は自動的に連携を停止し、警告メールを送信します。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:66
msgid "This check runs just once per integration. If you activate the integration afterwards, it will work correctly."
msgstr "このチェックは1回の統合につき1回だけ実行される。その後、統合を有効にすれば、正しく機能します。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:68
msgid "You can deactivate this check by setting the ``enableCheckLargeVolume`` field in the AWS integration to ``false`` :new-page:`using the API <https://dev.splunk.com/observability/reference/api/integrations/latest#endpoint-update-single-integration>`."
msgstr "API<https://dev.splunk.com/observability/reference/api/integrations/latest#endpoint-update-single-integration>` を使用して、AWS インテグレーションの``enableCheckLargeVolume`` フィールドを``false`` :new-page:`に設定することで、このチェックを無効にできます。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:78
msgid "If you filter data based on tags, your costs for Amazon CloudWatch and Splunk Infrastructure Monitoring might decrease."
msgstr "タグに基づいてデータをフィルタリングすれば、Amazon CloudWatch と Splunk Infrastructure Monitoring のコストは減るかもしれない。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:80
msgid "Be careful when choosing tag names: Splunk Observability Cloud only allows alphanumeric characters, and the underscore and minus symbols. Unsupported characters include ``.``, ``:``, ``/``, ``=``, ``+``, ``@``, and spaces, which are replaced by the underscore character."
msgstr "タグ名を決めるときは注意してください：Splunk Observability Cloud では、英数字とアンダースコア、マイナス記号しか使用できません。サポートされていない文字には、``.`` 、``:`` 、``/`` 、``=`` 、``+`` 、``@`` 、スペースがあり、これらはアンダースコア文字に置き換えられる。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:90
msgid "Rather than polling for data, Metric Streams continually stream Amazon CloudWatch metrics to Splunk Observability Cloud. You can activate this option in the UI wizard, or through the API."
msgstr "Metric Streams はデータをポーリングするのではなく、Amazon CloudWatch のメトリクスを Splunk Observability Cloud に継続的にストリーミングします。このオプションは、UIウィザードまたはAPIで有効にすることができます。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:92
msgid "Although they're more efficient than API polling, consider the constraints below."
msgstr "APIポーリングよりも効率的ではあるが、以下の制約を考慮してほしい。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:102
msgid "In most cases, metrics are reported every minute. However, some services use a different cadence: For example, selected S3 metrics are reported on a daily basis. Check AWS documentation to verify how often your services' metrics are reported."
msgstr "ほとんどの場合、メトリクスは1分ごとに報告される。ただし、一部のサービスでは、異なる周期を使用しています：例えば、一部のS3メトリクスは日次ベースで報告される。AWSのドキュメントをチェックして、サービスのメトリクスがどのくらいの頻度でレポートされるかを確認してください。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:104
msgid "Collecting Amazon CloudWatch metrics via the polling APIs at the default polling rate of 300 seconds (5 minutes) is generally cheaper than using Metric Streams. On the other hand, if you set polling intervals to one minute, generally you'll see an increase in Amazon CloudWatch usage costs compared to Metric Streams."
msgstr "デフォルトのポーリング・レートである300秒（5分）でポーリングAPIを介してAmazon CloudWatchメトリクスを収集することは、一般的にMetric Streamsを使用するよりも安価です。一方、ポーリング間隔を1分に設定すると、一般的にMetric Streamsに比べてAmazon CloudWatchの使用コストが増加する。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:106
msgid "Learn more at :ref:`Amazon CloudWatch usage costs <aws-costs>`."
msgstr "詳しくは:ref:`Amazon CloudWatch usage costs <aws-costs>` 。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:116
msgid "You can connect Splunk Observability Cloud to AWS in several ways. By default, Splunk Observability Cloud brings in data from all :ref:`supported AWS services <aws-integrations>` associated with your account. To limit the amount of data to import, see :ref:`specify-data-metadata`."
msgstr "Splunk Observability Cloud を AWS に接続するにはいくつかの方法があります。デフォルトでは、Splunk Observability Cloud はアカウントに関連付けられているすべての:ref:`supported AWS services <aws-integrations>` からデータを取り込みます。インポートするデータ量を制限するには、:ref:`specify-data-metadata` を参照してください。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:118
msgid "Choose the connection method that best matches your needs:"
msgstr "お客様のニーズに合った接続方法をお選びください："

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:125
msgid ":strong:`Connection option`"
msgstr ":strong:`接続オプション`"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:126
msgid ":strong:`Why use this?`"
msgstr ":strong:`なぜこれを使うのか？`"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:128
msgid ":ref:`Guided setup <aws-wizardconfig>` in Splunk Observability Cloud"
msgstr ":ref:`Guided setup <aws-wizardconfig>` in Splunk Observability Cloud"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:129
msgid "Guides you step-by-step to set up an AWS connection and default configuration in Splunk Observability Cloud. Guided setup includes links to Amazon CloudFormation templates that you can select to create needed AWS IAM roles."
msgstr "Splunk Observability Cloud で AWS 接続とデフォルト設定を設定する手順をステップバイステップでガイドします。ガイド付きセットアップには、必要なAWS IAMロールを作成するために選択できるAmazon CloudFormationテンプレートへのリンクが含まれている。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:131
msgid ":ref:`Splunk Observability Cloud API <get-configapi>`"
msgstr ":ref:`Splunk Observability Cloud API <get-configapi>`"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:132
msgid "Requires knowledge of POST and PUT call syntax, but includes options and automation that are not part of the guided setup. Choose this method if you want to configure many integrations at once."
msgstr "POSTとPUTの呼び出し構文の知識が必要ですが、ガイドされたセットアップの一部ではないオプションと自動化が含まれています。一度に多くの統合を設定したい場合は、この方法を選択してください。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:134
msgid ":ref:`Splunk Terraform <terraform-config>`"
msgstr ":ref:`Splunk Terraform <terraform-config>`"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:135
msgid "Use this connection method if you already manage your infrastructure as code by deploying through Terraform."
msgstr "すでにTerraformを通してデプロイすることでインフラをコードとして管理している場合は、この接続方法を使う。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:137
msgid "See also the :new-page:`Splunk add-on for Amazon Kinesis Firehose <https://docs.splunk.com/Documentation/AddOns/latest/Firehose/ConfigureFirehose>`."
msgstr ":new-page:`Amazon Kinesis Firehose 用 Splunk アドオン<https://docs.splunk.com/Documentation/AddOns/latest/Firehose/ConfigureFirehose>` も参照してください。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:141
msgid "If you can't connect AWS to Splunk Observability Cloud, see :ref:`Troubleshoot your AWS connection <aws-troubleshooting>`."
msgstr "AWS を Splunk Observability Cloud に接続できない場合は、:ref:`Troubleshoot your AWS connection <aws-troubleshooting>` を参照してください。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:151
msgid "To take advantage of the full benefits of the Splunk Observability Cloud platform, install the :ref:`OpenTelemetry Collector <otel-intro>`, since it offers a higher degree of customization than the AWS integration."
msgstr "Splunk Observability Cloud プラットフォームの利点をフルに活用するには、:ref:`OpenTelemetry Collector <otel-intro>` をインストールしてください。AWS 統合よりも高度なカスタマイズが可能だからです。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:153
msgid "You can track the degree of OpenTelemetry enablement in your AWS integrations by going to :guilabel:`Data Management > AWS`."
msgstr ":guilabel:`Data Management > AWS` にアクセスすることで、AWS インテグレーションの OpenTelemetry 有効化の度合いを追跡できます。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:-1
msgid "Amount of AWS entities with the Collector installed."
msgstr "CollectorがインストールされているAWSエンティティの量。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:159
msgid "Select the :guilabel:`OpenTelemetry Enabled` button to see whether the Collector is installed on each AWS EC2 instance. This will help you identify the instances that still need to be instrumented. For instances that are successfully instrumented, you can see which version of the Collector is deployed."
msgstr ":guilabel:`OpenTelemetry Enabled` ボタンを選択して、Collector が各 AWS EC2 インスタンスにインストールされているかどうかを確認する。これにより、まだインスツルメンテーションが必要なインスタンスを特定することができる。正常にインスツルメンテーションされたインスタンスについては、どのバージョンのCollectorがデプロイされているかを確認できます。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:169
msgid "See :ref:`Leverage data from integration with AWS <aws-post-install>` for an overview of what you can do after you connect Splunk Observability Cloud to AWS."
msgstr "Splunk Observability Cloud を AWS に接続した後にできることの概要については、:ref:`Leverage data from integration with AWS <aws-post-install>` を参照してください。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:170
msgid "Learn about :ref:`our AWS Infrastructure Monitoring options <infrastructure-aws>`. You'll find instructions on how to import AWS metrics and metadata, or AWS tag and log information using namespaces and filters."
msgstr ":ref:`our AWS Infrastructure Monitoring options <infrastructure-aws>` 。名前空間とフィルタを使用して、AWS メトリクスとメタデータ、または AWS タグとログ情報をインポートする方法が説明されています。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:171
msgid "Refer to the AWS official documentation for a list of the available AWS metrics and other data, or read about :ref:`the metadata we provide <aws-infra-metadata>`."
msgstr "利用可能な AWS メトリクスやその他のデータのリストについては、AWS 公式ドキュメントを参照するか、:ref:`the metadata we provide <aws-infra-metadata>` についてお読みください。"

#: ../../gdi/get-data-in/connect/aws/get-awstoc.rst:172
msgid "To collect traces and metrics of your AWS Lambda functions for Splunk APM, see :ref:`splunk-otel-lambda-layer`."
msgstr "Splunk APM で AWS Lambda 関数のトレースとメトリクスを収集するには、:ref:`splunk-otel-lambda-layer` を参照してください。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:10
msgid "Azure metrics"
msgstr "Azure metrics"

#: ../../gdi/get-data-in/connect/azure/azure.rst:10
msgid "Azure logs"
msgstr "Azure logs"

#: ../../gdi/get-data-in/connect/azure/azure.rst:-1
msgid "Connect your Microsoft Azure account to Splunk Observability Cloud."
msgstr "Microsoft Azure アカウントを Splunk Observability Cloud に接続します。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:5
msgid "Connect to Azure and send data to Splunk Observability Cloud"
msgstr "Azureに接続し、Splunk Observability Cloudにデータを送信する"

#: ../../gdi/get-data-in/connect/azure/azure.rst:16
msgid "Splunk Observability Cloud provides an integration with Microsoft Azure, lets you travel through Azure entities, and includes built-in dashboards to help you monitor Azure services."
msgstr "Splunk Observability Cloud は Microsoft Azure との統合を提供し、Azure エンティティを移動でき、Azure サービスを監視するのに役立つダッシュボードが組み込まれています。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:18
msgid "See the list of :ref:`available Azure services <azure-integrations>`."
msgstr ":ref:`available Azure services <azure-integrations>` のリストを参照。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:20
msgid "After you connect your Azure account to Splunk Observability Cloud, you can do the following:"
msgstr "Azure アカウントを Splunk Observability Cloud に接続したら、次の操作を行います："

#: ../../gdi/get-data-in/connect/azure/azure.rst:22
msgid "Import Azure metrics, traces, and metadata."
msgstr "Azureのメトリクス、トレース、メタデータをインポートします。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:23
msgid ":ref:`Send logs <ingest-azure-log-data>` to the Log Observer."
msgstr ":ref:`Send logs <ingest-azure-log-data>` をログ・オブザーバーに送る。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:24
msgid "Use Splunk Observability Cloud tools to monitor your Azure services, such as :ref:`navigators <use-navigators-imm>` and :ref:`dashboards <azure-dashboards>`."
msgstr "Splunk Observability Cloud ツールを使用して、:ref:`navigators <use-navigators-imm>` や:ref:`dashboards <azure-dashboards>` などの Azure サービスを監視します。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:25
msgid "Filter Azure monitoring results using tags or dimensions such as ``region`` and ``host name``. When tagging, Splunk Observability Cloud only allows alphanumeric characters, and the underscore and minus symbols. Unsupported characters include ``.``, ``:``, ``/``, ``=``, ``+``, ``@``, and spaces, which are replaced by the underscore character."
msgstr "タグまたは``region`` や``host name`` などのディメンションを使用して、Azure の監視結果をフィルタリングします。タグ付けを行う場合、Splunk Observability Cloud では英数字とアンダースコア、マイナス記号しか使用できません。サポートされていない文字には、``.`` 、``:`` 、``/`` 、``=`` 、``+`` 、``@`` 、スペースがあり、これらはアンダースコア文字に置き換えられる。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:35
msgid "Successful integration requires administrator privileges for the following:"
msgstr "統合を成功させるには、以下の管理者権限が必要です："

#: ../../gdi/get-data-in/connect/azure/azure.rst:37
msgid "Your organization in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud のあなたの組織。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:38
msgid "Creating a new Azure Active Directory application."
msgstr "新しいAzure Active Directoryアプリケーションを作成する。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:40
msgid "To learn more about these privileges, see the Azure documentation for registering a new app."
msgstr "これらの権限の詳細については、新規アプリの登録に関するAzureドキュメントを参照してください。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:44
msgid "Splunk Observability Cloud supports all Azure regular regions, and Azure Government."
msgstr "Splunk Observability Cloud は、すべての Azure 正規リージョンと Azure Government をサポートしています。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:52
msgid "To prepare Microsoft Azure to connect with Splunk Observability Cloud:"
msgstr "Microsoft Azure を Splunk Observability Cloud と接続するために準備します："

#: ../../gdi/get-data-in/connect/azure/azure.rst:54
msgid "Create an Azure Active Directory application."
msgstr "Azure Active Directoryアプリケーションを作成します。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:55
msgid "Specify subscriptions and set subscription permissions."
msgstr "サブスクリプションを指定し、サブスクリプションの権限を設定します。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:57
msgid "You also have the option of connecting to Azure through the Splunk Observability Cloud API. For details, see :new-page:`Integrate Microsoft Azure Monitoring with Splunk Observability Cloud <https://dev.splunk.com/observability/docs/integrations/msazure_integration_overview/>` in the Splunk developer documentation."
msgstr "また、Splunk Observability Cloud API を通じて Azure に接続するオプションもあります。詳細については、Splunk 開発者向けドキュメントの:new-page:`Integrate Microsoft Azure Monitoring with Splunk Observability Cloud<https://dev.splunk.com/observability/docs/integrations/msazure_integration_overview/>` を参照してください。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:65
msgid "Follow these steps to create a new Azure Active Directory application:"
msgstr "以下の手順に従って、新しいAzure Active Directoryアプリケーションを作成してください："

#: ../../gdi/get-data-in/connect/azure/azure.rst:67
msgid "In your Azure portal, navigate to :menuselection:`Azure Active Directory`, and register your new app. Splunk Observability Cloud does not use this information, but you need to provide it in order to create an app on Azure."
msgstr "Azure ポータルで、:menuselection:`Azure Active Directory` に移動し、新しいアプリを登録する。Splunk Observability Cloud はこの情報を使用しませんが、Azure 上でアプリを作成するにはこの情報を提供する必要があります。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:71
msgid "The Azure portal displays a summary about the application. Save the following information to use when you create your Azure integration in Splunk Observability Cloud:"
msgstr "Azureポータルには、アプリケーションの概要が表示されます。以下の情報を保存して、Splunk Observability Cloud で Azure インテグレーションを作成するときに使用します："

#: ../../gdi/get-data-in/connect/azure/azure.rst:69
msgid ":guilabel:`Display name`"
msgstr ":guilabel:`表示名`"

#: ../../gdi/get-data-in/connect/azure/azure.rst:70
msgid ":guilabel:`Application (client) ID`"
msgstr ":guilabel:`アプリケーション（クライアント）ID`"

#: ../../gdi/get-data-in/connect/azure/azure.rst:71
msgid ":guilabel:`Directory (tenant) ID`"
msgstr ":guilabel:`ディレクトリ（テナント）ID`"

#: ../../gdi/get-data-in/connect/azure/azure.rst:72
msgid ":guilabel:`Object ID`"
msgstr ":guilabel:`オブジェクトID`"

#: ../../gdi/get-data-in/connect/azure/azure.rst:73
msgid "Select :guilabel:`Certificates & secrets`. The Certificate is your public key, and the client secret is your password."
msgstr ":guilabel:`Certificates & secrets` を選択する。証明書はあなたの公開鍵で、クライアント・シークレットはあなたのパスワードです。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:74
msgid "Create a client secret by providing a description and setting the duration to the longest possible interval, and :guilabel:`Save`. Remember the client secret, you'll need it to create your Azure integration in Splunk Observability Cloud."
msgstr "クライアントシークレットを作成するには、説明を記述し、期間を可能な限り長い間隔に設定し、:guilabel:`Save` 。クライアントシークレットは、Splunk Observability Cloud で Azure インテグレーションを作成する際に必要になるので、忘れないようにしてください。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:76 ../../gdi/get-data-in/connect/azure/azure.rst:94
msgid "Repeat these steps for each subscription you want to monitor."
msgstr "監視したいサブスクリプションごとにこの手順を繰り返します。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:84
msgid "Set your subscription permissions:"
msgstr "購読許可を設定します："

#: ../../gdi/get-data-in/connect/azure/azure.rst:86
msgid "In the Azure portal, look for your :guilabel:`Subscriptions`."
msgstr "Azure ポータルで、:guilabel:`Subscriptions` を探します。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:87
msgid "Find a subscription you want to monitor, and select the subscription name."
msgstr "モニターしたいサブスクリプションを探し、サブスクリプション名を選択します。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:88
msgid "Navigate to :menuselection:`Access control (IAM)`, select :menuselection:`Add`, then select :menuselection:`Add role assignment`."
msgstr ":menuselection:`Access control (IAM)` に移動し、:menuselection:`Add` を選択し、:menuselection:`Add role assignment` を選択する。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:92
msgid "On the :guilabel:`Add role assignment page`, perform the following steps:"
msgstr ":guilabel:`役割割り当ての追加ページ` で、以下の手順を実行する："

#: ../../gdi/get-data-in/connect/azure/azure.rst:90
msgid "From the :guilabel:`Role` drop-down list, select :menuselection:`Monitoring Reader`."
msgstr ":guilabel:`Role` ドロップダウンリストから、:menuselection:`Monitoring Reader` を選択します。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:91
msgid "Leave the :guilabel:`Assign access to` drop-down list unchanged."
msgstr ":guilabel:`Assign access to` ドロップダウンリストは変更しない。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:92
msgid "In the :guilabel:`Select` text box, start entering the name of the Azure application you just created. The Azure portal automatically suggests names as you type. Enter the application name, and :guilabel:`Save`."
msgstr ":guilabel:`Select` テキストボックスに、作成した Azure アプリケーションの名前を入力します。Azureポータルは、入力すると自動的に名前を提案する。アプリケーション名を入力し、:guilabel:`Save` 。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:102
msgid "From Splunk Observability Cloud, connect to Azure by following these steps:"
msgstr "Splunk Observability Cloud から、以下の手順で Azure に接続します："

#: ../../gdi/get-data-in/connect/azure/azure.rst:104
msgid "Open the :new-page:`Microsoft Azure guided setup <https://login.signalfx.com/#/integrations/azure>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`Microsoft Azure ガイド付きセットアップ<https://login.signalfx.com/#/integrations/azure>` を開く。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/connect/azure/azure.rst:106
msgid "In the navigation menu, select :menuselection:`Data Management`, and select :guilabel:`Add Integration` to open the Integrate Your Data page."
msgstr "ナビゲーションメニューで、:menuselection:`Data Management` を選択し、:guilabel:`Add Integration` を選択して、Integrate Your Data ページを開きます。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:108
msgid "In the integration filter menu, go to :guilabel:`By Use Case`, and select the :guilabel:`Monitor Infrastructure` use case."
msgstr "統合フィルターメニューで、:guilabel:`By Use Case` に進み、:guilabel:`Monitor Infrastructure` のユースケースを選択します。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:110
msgid "Select the :guilabel:`Microsoft Azure` tile to open the Microsoft Azure guided setup."
msgstr ":guilabel:`Microsoft Azure` タイルを選択し、Microsoft Azure ガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:112
msgid "To start configuring the connection to Azure, select :guilabel:`New Integration`."
msgstr "Azure への接続設定を開始するには、:guilabel:`New Integration` を選択します。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:117
msgid "In the text boxes for Splunk Infrastructure Monitoring setup, enter the following information:"
msgstr "Splunk Infrastructure Monitoring setup のテキストボックスに、以下の情報を入力します："

#: ../../gdi/get-data-in/connect/azure/azure.rst:115
msgid ":guilabel:`Name`: Unique name for this connection to Azure. The name field helps you create multiple connections to Azure, each with its own name."
msgstr ":guilabel:`名前` ：Azureへのこの接続の一意の名前。名前フィールドは、Azureへの複数の接続を、それぞれ独自の名前で作成するのに役立つ。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:116
msgid ":guilabel:`Directory ID`: Azure Directory ID you saved in a previous step."
msgstr ":guilabel:`ディレクトリ ID` ：前のステップで保存した Azure Directory ID。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:117
msgid ":guilabel:`App ID`: The Azure app (client) ID you saved in a previous step."
msgstr ":guilabel:`アプリ ID` ：前のステップで保存した Azure アプリ（クライアント）ID。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:118
msgid ":guilabel:`Client Secret`: The client secret (password) you saved in a previous step."
msgstr ":guilabel:`Client Secret`: 前のステップで保存したクライアントシークレット（パスワード）。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:120
msgid "Select the type of Azure connection you created in the previous steps:"
msgstr "前のステップで作成したAzure接続のタイプを選択します："

#: ../../gdi/get-data-in/connect/azure/azure.rst:120
msgid ":guilabel:`Azure Government` for an Azure Government instance."
msgstr ":guilabel:`Azure Government` Azure Governmentインスタンス。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:121
msgid ":guilabel:`Azure` for all other Azure connections."
msgstr ":guilabel:`その他のすべての Azure 接続については、Azure` 。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:122
msgid "Select the rate at which you want Splunk Observability Cloud to poll Azure for metric data, with 1 minute (default) as the minimum unit, and 10 minutes as the maximum unit. For example, a value of 300 polls metrics once every 5 minutes. Poll rate is expressed in seconds."
msgstr "Splunk Observability Cloud が Azure にメトリックデータをポーリングするレートを、1 分 (デフォルト) を最小単位、10 分を最大単位として選択します。例えば、300という値は、5分ごとに1回、メトリクスをポーリングします。ポーリング・レートは秒単位で表される。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:123
msgid "Optional: Use the :guilabel:`Add Tag` button to create a tag if you want to monitor only tagged data sources, filling out the ``tag name`` and ``tag value`` fields separately to create a tag pair."
msgstr "オプション：タグ付きデータソースのみを監視する場合は、:guilabel:`[Add Tag]` ボタンを使用してタグを作成し、``tag name`` と``tag value`` フィールドに別々に入力してタグのペアを作成します。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:124
msgid ":guilabel:`Save`. Splunk Observability Cloud saves the connection details and attempts to validate the integration. A :ok:`Validated!` message confirms that the integration was successful."
msgstr ":guilabel:`保存`.Splunk Observability Cloud は接続の詳細を保存し、統合の検証を試みます。:ok:`Validated!` メッセージは、統合が成功したことを確認する。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:126
msgid "Splunk Observability Cloud begins receiving metrics from Azure for the subscriptions and services that you specified in the Splunk Observability Cloud settings for your Azure connection."
msgstr "Splunk Observability Cloud は、Azure 接続の Splunk Observability Cloud 設定で指定したサブスクリプションとサービスのメトリックを Azure から受信し始めます。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:142
msgid "You can use the Splunk API to integrate Azure with Splunk Observability Cloud."
msgstr "Splunk API を使用して、Azure と Splunk Observability Cloud を統合できます。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:144
msgid "For instructions on how to connect to Azure through the API, see :new-page:`Integrate Microsoft Azure monitoring with Splunk Observability Cloud <https://dev.splunk.com/observability/docs/integrations/msazure_integration_overview/>` in the Splunk developer documentation."
msgstr "API を通じて Azure に接続する方法については、Splunk 開発者向けドキュメントの:new-page:`Integrate Microsoft Azure monitoring with Splunk Observability Cloud<https://dev.splunk.com/observability/docs/integrations/msazure_integration_overview/>` を参照してください。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:146
msgid "Azure tag filtering configured through the UI applies an ``OR`` operator to the ``name:value`` pairs that you specify in separate fields. Values for ``tag name`` and ``tag value`` are what you anticipate for monitored data sources. To apply more complex rules not governed exclusively by the OR operator, connect to Azure through the Splunk Observability Cloud API and modify the contents of the ``resourceFilterRules`` field there."
msgstr "UI から設定された Azure タグフィルタリングは、``OR`` 演算子を別々のフィールドで指定した``name:value`` ペアに適用します。``tag name`` 、``tag value`` の値は、監視対象のデータソースで想定される値です。OR 演算子のみに支配されない、より複雑なルールを適用するには、Splunk Observability Cloud API を通じて Azure に接続し、``resourceFilterRules`` フィールドの内容を変更する。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:154 ../../gdi/get-data-in/connect/connect.rst:26 ../../gdi/get-data-in/connect/gcp/gcp.rst:215
msgid "To connect using Terraform, see :ref:`terraform-config`."
msgstr "Terraform を使って接続するには、:ref:`terraform-config` を参照のこと。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:162 ../../gdi/get-data-in/connect/gcp/gcp.rst:223
msgid "To take advantage of the full benefits of the Splunk Observability Cloud platform, install the :ref:`OpenTelemetry Collector <otel-intro>`."
msgstr "Splunk Observability Cloud プラットフォームの利点をフルに活用するには、:ref:`OpenTelemetry Collector <otel-intro>` をインストールしてください。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:164
msgid "The Collector offers a higher degree of customization than the Azure integration, and you might prefer it if you want to see metrics at a resolution lower than one minute, or when you need fine-grained control over the filtering of what metrics are sent."
msgstr "Collectorは、Azure統合よりも高度なカスタマイズが可能で、1分未満の解像度でメトリクスを確認したい場合や、送信されるメトリクスのフィルタリングを細かく制御する必要がある場合に適しています。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:174
msgid "To validate your setup, examine the details of your Azure integration as displayed in the list at the end of the setup page."
msgstr "セットアップを確認するには、セットアップページの最後にあるリストに表示されているAzure統合の詳細を調べます。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:176
msgid "For details about the metrics provided by an Azure integration, see :ref:`azure-metrics`."
msgstr "Azure 統合によって提供されるメトリクスの詳細については、:ref:`azure-metrics` を参照してください。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:177
msgid "To send logs from Azure to Splunk Observability Cloud, follow the instructions in :ref:`ingest-azure-log-data`."
msgstr "Azure から Splunk Observability Cloud にログを送信するには、:ref:`ingest-azure-log-data` の手順に従ってください。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:178
msgid "Learn about :ref:`our Azure Infrastructure Monitoring options <infrastructure-azure>`."
msgstr ":ref:`our Azure Infrastructure Monitoring options <infrastructure-azure>` 。"

#: ../../gdi/get-data-in/connect/azure/azure.rst:179 ../../gdi/get-data-in/connect/gcp/gcp.rst:240
msgid "To learn more about Splunk Observability Cloud's data model, refer to :ref:`data-model`."
msgstr "Splunk Observability Cloud のデータモデルの詳細については、:ref:`data-model` を参照してください。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:-1
msgid "Learn how to send logs from your Azure services to Splunk Observability Cloud and Splunk Log Observer using Azure Event Hub."
msgstr "Azure Event Hub を使用して、Azure サービスから Splunk Observability Cloud および Splunk Log Observer にログを送信する方法を説明します。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:6
msgid "Send Azure logs to Splunk Log Observer"
msgstr "Azure ログを Splunk Log Observer に送信する"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:13
msgid "You can send logs from Azure to Splunk Log Observer by deploying a function that prepares and sends log data to the Splunk HTTP Event Collector (HEC) endpoint. To get started, follow these instructions."
msgstr "ログデータを準備して Splunk HTTP Event Collector (HEC) エンドポイントに送信する関数をデプロイすることで、Azure から Splunk Log Observer にログを送信できます。開始するには、以下の手順に従ってください。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:16 ../../gdi/monitors-cloud/heroku.md:16 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:17 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:18 ../../gdi/opentelemetry/deployments/deployments-chef.rst:15 ../../gdi/opentelemetry/deployments/deployments-salt.rst:15 ../../gdi/opentelemetry/install-k8s.rst:45 ../../gdi/opentelemetry/install-windows.rst:28 ../../gdi/opentelemetry/kubernetes-config-advanced.rst:144 ../../gdi/other-ingestion-methods/upstream-collector.rst:89
msgid "Prerequisites"
msgstr "前提条件"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:18
msgid "To send logs from Azure to Splunk Observability Cloud, you need the following:"
msgstr "Azure から Splunk Observability Cloud にログを送信するには、以下が必要です："

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:20
msgid "Access to Log Observer in Splunk Observability Cloud. See :ref:`logs-logs`."
msgstr "Splunk Observability Cloud の Log Observer にアクセスする。:ref:`logs-logs` を参照。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:21
msgid "An ingest token in your organization. See :ref:`admin-org-tokens`."
msgstr "組織内のインジェストトークン。:ref:`admin-org-tokens` を参照。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:22
msgid "An Event Hub namespace in Azure to use for logs forwarding. See Event Hub in the Azure documentation."
msgstr "ログの転送に使用する Azure の Event Hub 名前空間。Azure ドキュメントの Event Hub を参照してください。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:25
msgid "Create an event hub in Azure"
msgstr "Azureでイベントハブを作成する"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:27
msgid "Azure uses diagnostic settings to send data to Event Hubs. Each resource you want to monitor must have a diagnostic setting. Follow these steps to configure an event hub for each use case:"
msgstr "Azureは診断設定を使ってEvent Hubsにデータを送る。監視したい各リソースには、診断設定が必要です。以下の手順に従って、各ユースケースにイベントハブを設定する："

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:29
msgid "In Azure, go to :guilabel:`Event Hubs` and select :guilabel:`Create`."
msgstr "Azure の:guilabel:`Event Hubs` にアクセスし、:guilabel:`Create` を選択する。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:31
msgid "Select your Event Hub namespace."
msgstr "Event Hubネームスペースを選択します。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:33
msgid "Set the name of the event hub to one of the following values depending on which logs you want to forward:"
msgstr "転送するログに応じて、イベントハブの名前を以下の値のいずれかに設定します："

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:37
msgid "Activity logs"
msgstr "活動記録"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:39
msgid "Event Hub name: ``insights-activity-logs``"
msgstr "イベントハブ名： ``insights-activity-logs``"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:41 ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:47 ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:53 ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:59
msgid "If you set a different hub name, update the function application settings to use the right name."
msgstr "異なるハブ名を設定した場合は、正しいハブ名を使用するようにファンクションアプリケーションの設定を更新してください。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:43
msgid "Active Directory logs"
msgstr "Active Directoryログ"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:45
msgid "Event Hub name: ``insights-logs-aad``"
msgstr "イベントハブ名： ``insights-logs-aad``"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:49
msgid "Diagnostics logs"
msgstr "診断ログ"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:51
msgid "Event Hub name: ``insights-logs-diag``"
msgstr "イベントハブ名： ``insights-logs-diag``"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:55
msgid "Metrics data"
msgstr "指標データ"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:57
msgid "Event Hub name: ``insights-metrics-pt1m``"
msgstr "イベントハブ名： ``insights-metrics-pt1m``"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:61
msgid "Set the number of partitions. Use at least 4 partitions."
msgstr "パーティション数を設定する。少なくとも4つのパーティションを使用する。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:63 ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:71
msgid "Select :guilabel:`Create`."
msgstr ":guilabel:`Create` を選択する。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:66
msgid "Configure diagnostic settings to send logs"
msgstr "ログを送信するための診断設定を行う"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:68
msgid "After you've created the event hub, follow these steps to activate diagnostic settings:"
msgstr "イベントハブを作成したら、以下の手順に従って診断設定を有効にします："

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:70
msgid "In Azure, select the resource."
msgstr "Azureで、リソースを選択する。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:72
msgid "Select :guilabel:`Monitoring`, then :guilabel:` Diagnostic settings`."
msgstr ":guilabel:`モニタリング` を選択し、次に:guilabel:` 診断設定` を選択する。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:74
msgid "Create a new setting or edit an existing setting."
msgstr "新しい設定を作成するか、既存の設定を編集します。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:76
msgid "Select the events you want to log."
msgstr "ログに記録したいイベントを選択する。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:78
msgid "Select :guilabel:`Stream to an event hub` and select the event hub you've created."
msgstr ":guilabel:`Stream to an event hub` を選択し、作成したイベントハブを選択します。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:80 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:46
msgid "Select :guilabel:`Save`."
msgstr ":guilabel:`保存` を選択する。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:83
msgid "Set up the forwarding function in Azure"
msgstr "Azureで転送機能を設定する"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:85
msgid "To deploy the Azure function, click the following button:"
msgstr "Azure 関数をデプロイするには、以下のボタンをクリックします："

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:91
msgid "In the :guilabel:`Function App Settings` section, enter the following details:"
msgstr ":guilabel:`Function App Settings` セクションで、以下の詳細を入力します："

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:100
msgid "Event Hub Namespace"
msgstr "イベントハブ名前空間"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:101
msgid "The namespace that contains the event hub you've created."
msgstr "作成したイベント・ハブを含むネームスペース。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:102
msgid "Splunk HEC Endpoint"
msgstr "Splunk HEC エンドポイント"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:103
msgid "``https://ingest.<realm>.signalfx.com/v1/log`` where ``<realm>`` is your Splunk Observability Cloud realm. See :ref:`splunk-hec-exporter` for more information."
msgstr "``https://ingest.<realm>.signalfx.com/v1/log`` ``<realm>`` は Splunk Observability Cloud レルムです。詳しくは:ref:`splunk-hec-exporter` 。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:104
msgid "Splunk HEC Token"
msgstr "Splunk HEC トークン"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:105
msgid "Your Splunk Observability Cloud ingest token. See :ref:`admin-org-tokens`."
msgstr "Splunk Observability Cloud インジェストトークン。:ref:`admin-org-tokens` を参照。"

#: ../../_includes/realm-note.rst:1
msgid "Note about realms"
msgstr "レルムについて"

#: ../../_includes/realm-note.rst:3
msgid "A realm is a self-contained deployment of Splunk Observability Cloud in which your organization is hosted. Different realms have different API endpoints. For example, the endpoint for sending data in the ``us1`` realm is ``https://ingest.us1.signalfx.com``, while the endpoint for sending data in the ``eu0`` realm is ``https://ingest.eu0.signalfx.com``."
msgstr "レルムとは、組織がホストされている Splunk Observability Cloud の自己完結型の展開のことです。異なるレルムには異なるAPIエンドポイントがある。例えば、``us1`` レルムにおけるデータ送信のエンドポイントは``https://ingest.us1.signalfx.com`` であり、``eu0`` レルムにおけるデータ送信のエンドポイントは``https://ingest.eu0.signalfx.com`` である。"

#: ../../_includes/realm-note.rst:6
msgid "When you see a placeholder realm name in the documentation, such as ``<YOUR_REALM>``, replace it with your actual realm name. To find your realm name, open the left navigation menu in Observability Cloud, select :menuselection:`Settings`, and select your username. The realm name appears in the :guilabel:`Organizations` section. If you don't include the realm name when specifying an endpoint, Observability Cloud defaults to the ``us0`` realm."
msgstr "``<YOUR_REALM>`` のようなプレースホルダのレルム名がドキュメントに記載されている場合は、それを実際のレルム名に置き換えてください。レルム名を見つけるには、Observability Cloudの左ナビゲーションメニューを開き、:menuselection:`Settings` を選択し、ユーザー名を選択します。レルム名は:guilabel:`Organizations` セクションに表示される。エンドポイントを指定する際にレルム名を含めなかった場合、Observability Cloudのデフォルトは``us0`` レルムになります。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:110
msgid "Security considerations"
msgstr "セキュリティへの配慮"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:112
msgid "Azure encrypts settings by default. For increased security, you can transfer one or more of settings to a Key Vault. See the Key Vault documentation in the Azure docs for more information."
msgstr "Azureはデフォルトで設定を暗号化する。セキュリティを強化するために、1つまたは複数の設定をKey Vaultに転送することができます。詳細については、AzureドキュメントのKey Vaultドキュメントを参照してください。"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:115
msgid "Additional resources"
msgstr "その他のリソース"

#: ../../gdi/get-data-in/connect/azure/azure-logs-ingestion.rst:117
msgid "For examples and additional information, see :new-page:`https://github.com/splunk/azure-functions-splunk/tree/master/event-hubs-hec <https://github.com/splunk/azure-functions-splunk/tree/master/event-hubs-hec>` on GitHub."
msgstr "例と追加情報については、GitHubの:new-page:`https://github.com/splunk/azure-functions-splunk/tree/master/event-hubs-hec<https://github.com/splunk/azure-functions-splunk/tree/master/event-hubs-hec>` を参照のこと。"

#: ../../gdi/get-data-in/connect/azure/azure-metrics.rst:-1
msgid "These are the metrics available for the Azure integration with Splunk Observability Cloud, grouped according to Azure resource."
msgstr "これらは、Splunk Observability Cloud との Azure 統合で利用可能なメトリクスで、Azure リソースごとにグループ化されています。"

#: ../../gdi/get-data-in/connect/azure/azure-metrics.rst:6
msgid "Azure metrics in Splunk Observability Cloud"
msgstr "Splunk Observability Cloud の Azure メトリクス"

#: ../../gdi/get-data-in/connect/azure/azure-metrics.rst:11
msgid "All available metrics are included by default in any Azure integration with Splunk Observability Cloud."
msgstr "利用可能なすべてのメトリクスは、Splunk Observability Cloud との Azure 統合にデフォルトで含まれます。"

#: ../../gdi/get-data-in/connect/azure/azure-metrics.rst:13
msgid "Metric names and descriptions are generated dynamically from the :strong:`Supported metrics with Azure Monitor` page maintained by Microsoft. See all details in :new-page:`https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/metrics-supported`."
msgstr "メトリック名と説明は、Microsoft が保守している:strong:`Supported metrics with Azure Monitor` ページから動的に生成されます。:new-page:`https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/metrics-supported` のすべての詳細を見る。"

#: ../../gdi/get-data-in/connect/azure/azure-metrics.rst:15
msgid "Every metric can either be a counter or a gauge, depending on what dimension is being looked at. If the MTS contains the dimension ``aggregation_type: total`` or ``aggregation_type: count``, then it is sent as a counter. Otherwise, it is sent as a gauge. To learn more, see :ref:`metric-time-series`."
msgstr "どの指標も、どの次元を見るかによって、カウンターにもゲージにもなる。MTSにディメンジョン``aggregation_type: total`` または``aggregation_type: count`` が含まれる場合、カウンタとして送信される。そうでない場合は、ゲージとして送られる。詳しくは、:ref:`metric-time-series` をご覧ください。"

#: ../../gdi/get-data-in/connect/azure/azure-metrics.rst:18 ../../gdi/get-data-in/connect/gcp/gcp-metrics.rst:29
msgid "Organization metrics"
msgstr "組織指標"

#: ../../gdi/get-data-in/connect/azure/azure-metrics.rst:20
msgid "Splunk Observability Cloud organization metrics monitor data related to your Azure integration, such as the number of metric time series (MTS) your integration has created. The names of organization metrics all start with the string ``sf.org.num.azure``. To learn more about these metrics, see :new-page-ref:`org-metrics`."
msgstr "Splunk Observability Cloud 組織メトリクスは、統合が作成したメトリック時系列 (MTS) の数など、Azure 統合に関連するデータを監視します。組織メ ト リ ッ ク の名前はすべて、 文字列``sf.org.num.azure`` で始まります。これらのメトリクスの詳細については、:new-page-ref:`org-metrics` を参照のこと。"

#: ../../gdi/get-data-in/connect/connect.rst:11
msgid "Connect to AWS"
msgstr "AWSへの接続"

#: ../../gdi/get-data-in/connect/connect.rst:11
msgid "Connect to Azure"
msgstr "Azureへの接続"

#: ../../gdi/get-data-in/connect/connect.rst:11
msgid "Connect to GCP"
msgstr "GCPへの接続"

#: ../../gdi/get-data-in/connect/connect.rst:-1
msgid "Start sending cloud platform data to Splunk Observability Cloud using AWS, Azure, or Google Cloud Platform / GCP."
msgstr "AWS、Azure、Google Cloud Platform / GCP を使用して、クラウドプラットフォームデータを Splunk Observability Cloud に送信します。"

#: ../../gdi/get-data-in/connect/connect.rst:5
msgid "Connect to your cloud service provider"
msgstr "クラウドサービスプロバイダーに接続する"

#: ../../gdi/get-data-in/connect/connect.rst:18
msgid "Connect to your cloud service provider to start sending data to Splunk Observability Cloud."
msgstr "クラウドサービスプロバイダーに接続し、Splunk Observability Cloud へのデータ送信を開始します。"

#: ../../gdi/get-data-in/connect/connect.rst:20
msgid "See the following topics to learn how to connect each of these cloud service providers:"
msgstr "それぞれのクラウドサービスプロバイダーとの接続方法については、以下のトピックを参照してください："

#: ../../gdi/get-data-in/connect/connect.rst:22
msgid ":ref:`AWS <get-started-aws>`"
msgstr ":ref:`AWS <get-started-aws>`"

#: ../../gdi/get-data-in/connect/connect.rst:23
msgid ":ref:`Azure <get-started-azure>`"
msgstr ":ref:`Azure <get-started-azure>`"

#: ../../gdi/get-data-in/connect/connect.rst:24
msgid ":ref:`GCP <get-started-gcp>`"
msgstr ":ref:`GCP <get-started-gcp>`"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:10
msgid "GCP metrics"
msgstr "GCPメトリックス"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:10
msgid "GCP logs"
msgstr "GCPログ"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:-1
msgid "Connect your Google Cloud Platform / GCP account to Splunk Observability Cloud."
msgstr "Google Cloud Platform / GCP アカウントを Splunk Observability Cloud に接続します。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:5
msgid "Connect to Google Cloud Platform"
msgstr "Google Cloud Platformへの接続"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:16
msgid "With a Google Cloud Platform (GCP) integration in Splunk Observability Cloud, you can track your Google Cloud Monitoring metrics and monitor your GCP services in one place. To configure a GCP integration with Splunk Infrastructure Monitoring, check the prerequisites and follow the instructions on this document. You can also :ref:`use the API <gcp-api>` to connect to GCP."
msgstr "Splunk Observability Cloud の Google Cloud Platform (GCP) 統合により、Google Cloud Monitoring のメトリクスを追跡し、GCP サービスを 1 か所で監視できます。Splunk Infrastructure Monitoring との GCP 連携を設定するには、前提条件を確認し、このドキュメントの指示に従ってください。また、:ref:`use the API <gcp-api>` 、GCPに接続することもできる。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:18
msgid "For the list of the GCP services available in Splunk Observability Cloud, see the list of :ref:`supported integrations <gcp-integrations>`."
msgstr "Splunk Observability Cloud で利用可能な GCP サービスのリストについては、:ref:`supported integrations <gcp-integrations>` のリストを参照してください。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:28
msgid "The following pre-requisites apply:"
msgstr "以下の前提条件が適用される："

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:30
msgid "You must be an administrator of your Splunk Observability Cloud organization to create a GCP connection."
msgstr "GCP 接続を作成するには、Splunk Observability Cloud 組織の管理者である必要があります。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:31
msgid "Splunk Observability Cloud supports all GCP regions."
msgstr "Splunk Observability Cloud はすべての GCP リージョンをサポートしています。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:47
msgid "If you want to use the :strong:`Project Viewer` role, skip to :ref:`Configure GCP <gcp-two>`. Choosing this role ensures that any functionality update implemented in Infrastructure Monitoring doesn't require changes to your GCP setup."
msgstr ":strong:`Project Viewer` ロールを使用する場合は、:ref:`Configure GCP <gcp-two>` に進んでください。このロールを選択すると、Infrastructure Monitoringで実装される機能の更新にGCPセットアップの変更が不要になります。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:48
msgid "If you want to use a role with more restrictive permissions than those available to Project Viewer, make sure your selected role has sufficient permissions to connect to Infrastructure Monitoring. If your GCP service account role has insufficient permissions, you'll get an error message when trying to connect to Infrastructure Monitoring. Review and activate any missing permissions, or change the role to Project Viewer."
msgstr "Project Viewerで利用可能な権限よりも制限された権限を持つロールを使用したい場合、選択したロールがInfrastructure Monitoringに接続するのに十分な権限を持っていることを確認してください。GCPサービスアカウントのロールに十分な権限がない場合、Infrastructure Monitoringに接続しようとするとエラーメッセージが表示されます。不足している権限を確認し、有効にするか、ロールをProject Viewerに変更する。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:50
msgid "The following table specifies the permissions required for GCP integrations."
msgstr "次の表は、GCP統合に必要な権限を指定したものです。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:56
msgid ":strong:`Permission`"
msgstr ":strong:`許可`"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:57
msgid ":strong:`Required?`"
msgstr ":strong:`必要ですか？`"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:59 ../../gdi/get-data-in/connect/gcp/gcp.rst:83
msgid "``monitoring.metricDescriptors.list``"
msgstr "``monitoring.metricDescriptors.list``"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:62 ../../gdi/get-data-in/connect/gcp/gcp.rst:86
msgid "``monitoring.timeSeries.list``"
msgstr "``monitoring.timeSeries.list``"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:65
msgid "``compute.instances.list``"
msgstr "``compute.instances.list``"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:66 ../../gdi/get-data-in/connect/gcp/gcp.rst:69
msgid "Yes, if the Compute Engine service is activated"
msgstr "はい、Compute Engineサービスが有効になっている場合"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:68
msgid "``compute.machineTypes.list``"
msgstr "``compute.machineTypes.list``"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:71
msgid "``container.clusters.list``"
msgstr "``container.clusters.list``"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:72 ../../gdi/get-data-in/connect/gcp/gcp.rst:75 ../../gdi/get-data-in/connect/gcp/gcp.rst:78
msgid "Yes, if the Kubernetes (GKE) service is activated"
msgstr "はい、Kubernetes (GKE) サービスが有効化されている場合。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:74
msgid "``container.nodes.list``"
msgstr "``container.nodes.list``"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:77
msgid "``container.pods.list``"
msgstr "``container.pods.list``"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:80
msgid "``monitoring.metricDescriptors.get``"
msgstr "``monitoring.metricDescriptors.get``"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:89
msgid "``resourcemanager.projects.get``"
msgstr "``resourcemanager.projects.get``"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:90
msgid "Yes, if you want to sync project metadata (such as labels), or if you need to obtain metrics from monitored projects of a scoping project"
msgstr "プロジェクトのメタデータ（ラベルなど）を同期したい場合、またはスコープ・プロジェクトのモニター・プロジェクトからメトリクスを取得する必要がある場合。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:92
msgid "``serviceusage.services.use``"
msgstr "``serviceusage.services.use``"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:93
msgid "Yes, if you want to activate the use of a quota from the project where metrics are stored"
msgstr "はい、メトリクスが保存されているプロジェクトからクォータの使用を有効にしたい場合"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:95
msgid "``spanner.instances.list``"
msgstr "``spanner.instances.list``"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:96 ../../gdi/get-data-in/connect/gcp/gcp.rst:99
msgid "Yes, if the Spanner service is activated"
msgstr "はい、スパナーサービスが有効な場合"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:98
msgid "``storage.buckets.list``"
msgstr "``storage.buckets.list``"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:109
msgid "To configure your GCP service, follow these steps:"
msgstr "GCPサービスを設定するには、以下の手順に従ってください："

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:111
msgid "In a new window or tab, go to the Google Cloud Platform website, and log into your GCP account."
msgstr "新しいウィンドウまたはタブでGoogle Cloud Platformのウェブサイトにアクセスし、GCPアカウントにログインします。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:112
msgid "Open the GCP web console, and select a project you want to monitor."
msgstr "GCPのWebコンソールを開き、監視したいプロジェクトを選択します。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:113
msgid "From the sidebar, select :menuselection:`IAM & admin`, then :menuselection:`Service Accounts`."
msgstr "サイドバーから、:menuselection:`IAM & admin` を選択し、次に:menuselection:`Service Accounts` を選択する。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:114
msgid "Go to :guilabel:`Create Service Account` at the top of the screen, and complete the following fields:"
msgstr "画面上部の:guilabel:`Create Service Account` にアクセスし、以下のフィールドに記入する："

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:120
msgid ":strong:`Field`"
msgstr ":strong:`フィールド`"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:121 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:105 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:70 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:29 ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:55
msgid ":strong:`Description`"
msgstr ":strong:`説明`"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:123
msgid "Service account name"
msgstr "サービスアカウント名"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:124
msgid "Enter ``Splunk``."
msgstr "``Splunk`` を入力する。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:126
msgid "Service account ID"
msgstr "サービスアカウントID"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:127
msgid "This field autofills after you enter ``Splunk`` for Service account name."
msgstr "このフィールドは、サービスアカウント名に``Splunk`` を入力した後に自動入力されます。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:129
msgid "Service account description"
msgstr "サービス・アカウントの説明"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:130
msgid "Enter the description for your service account."
msgstr "サービスアカウントの説明を入力します。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:132
msgid "Select :guilabel:`CREATE`."
msgstr ":guilabel:`CREATE` を選択する。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:133
msgid "(Optional) Select a role to grant this Service account access to the selected project, then select :guilabel:`CONTINUE`."
msgstr "(オプション）このサービスアカウントに選択したプロジェクトへのアクセス権を付与するロールを選択し、:guilabel:`CONTINUE` を選択します。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:134
msgid "Activate Key type :guilabel:`JSON`, and select :guilabel:`CREATE`. A new service account key JSON file is then downloaded to your computer."
msgstr "キー・タイプ:guilabel:`JSON` をアクティブにし、:guilabel:`CREATE` を選択する。その後、新しいサービス・アカウント・キーJSONファイルがコンピューターにダウンロードされます。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:135
msgid "In a new window or tab, go to :new-page:`Cloud Resource Manager API <https://console.cloud.google.com/apis/library/cloudresourcemanager.googleapis.com?pli=1>`, and activate the Cloud Resource Manager API. You need to activate this API so Splunk Infrastructure Monitoring can use it to validate permissions on the service account keys."
msgstr "新しいウィンドウまたはタブで、:new-page:`Cloud Resource Manager API<https://console.cloud.google.com/apis/library/cloudresourcemanager.googleapis.com?pli=1>` にアクセスし、Cloud Resource Manager APIを有効にします。Splunk Infrastructure Monitoring がこの API を使用してサービスアカウントキーのパーミッションを検証できるように、この API を有効化する必要があります。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:145
msgid "To monitor multiple GCP projects with the integration you have two options:"
msgstr "統合によって複数のGCPプロジェクトを監視するには、2つのオプションがあります："

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:147
msgid "Repeat the steps described in this section for each one of the projects."
msgstr "各プロジェクトについて、このセクションで説明する手順を繰り返します。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:149
msgid "Follow the instructions in GCP :new-page:`Overview of viewing metrics for multiple projects <https://cloud.google.com/monitoring/settings>` to attach monitored projects to the one you've already configured."
msgstr "GCP:new-page:`Overview of viewing metrics for multiple projects<https://cloud.google.com/monitoring/settings>` の説明に従って、監視対象のプロジェクトを既に構成済みのプロジェクトにアタッチします。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:159
msgid "By default, all available services are monitored, and any new services added later are also monitored. When you set integration parameters, you can choose to import metrics from a subset of the available services."
msgstr "デフォルトでは、利用可能なすべてのサービスが監視され、後から追加された新しいサービスも監視される。統合パラメータを設定すると、利用可能なサービスのサブセットからメトリクスをインポートするように選択できます。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:162
msgid "Open the :new-page:`Google Cloud Platform guided setup <https://login.signalfx.com/#/integrations/gcp>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`Google Cloud Platform guided setup<https://login.signalfx.com/#/integrations/gcp>` を開く。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:166
msgid "In the integration filter menu, select :guilabel:`By Use Case`, and select the :guilabel:`Monitor Infrastructure` use case."
msgstr "統合フィルターメニューで、:guilabel:`By Use Case` を選択し、:guilabel:`Monitor Infrastructure` のユースケースを選択します。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:168
msgid "In the :guilabel:`Cloud Integrations` section, select the :guilabel:`Google Cloud Platform` tile to open the Google Cloud Platform guided setup."
msgstr ":guilabel:`Cloud Integrations` セクションで、:guilabel:`Google Cloud Platform` タイルを選択し、Google Cloud Platform ガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:170
msgid "Go to :guilabel:`New Integration`."
msgstr ":guilabel:`新規統合` にアクセスする。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:172
msgid "Enter a name for the new GCP integration, then :guilabel:`Add Project`."
msgstr "新しいGCP統合の名前を入力し、:guilabel:`Add Project` 。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:173
msgid "Next, select :guilabel:`Import Service Account Key`, and select one or more of the JSON key files that you downloaded from GCP in :ref:`Configure GCP <gcp-two>`."
msgstr "次に、:guilabel:`Import Service Account Key` を選択し、:ref:`Configure GCP <gcp-two>` でGCPからダウンロードしたJSONキーファイルを1つ以上選択します。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:174
msgid "Select :guilabel:`Open`. You can then see the project IDs corresponding to the service account keys you selected."
msgstr ":guilabel:`開く` を選択する。選択したサービス・アカウント・キーに対応するプロジェクトIDが表示されます。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:175
msgid "To import :ref:`metrics <gcp-metrics>` from only some of the available services, follow these steps:"
msgstr "利用可能なサービスの一部のみから:ref:`metrics <gcp-metrics>` をインポートするには、以下の手順に従う："

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:177
msgid "Go to :guilabel:`All Services` to display a list of the services you can monitor."
msgstr ":guilabel:`All Services` にアクセスすると、監視できるサービスのリストが表示されます。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:178
msgid "Select the services you want to monitor, and then :guilabel:`Apply`."
msgstr "監視したいサービスを選択し、:guilabel:`Apply` 。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:180
msgid "Select the rate (in seconds) at which you want Splunk Observability Cloud to poll GCP for metric data, with 1 minute as the minimum unit, and 10 minutes as the maximum unit. For example, a value of 300 polls metrics once every 5 minutes."
msgstr "Splunk Observability Cloud が GCP にメトリックデータをポーリングする速度 (秒単位) を、1 分を最小単位、10 分を最大単位として選択します。例えば、300という値は、5分ごとに1回、メトリクスをポーリングします。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:181
msgid "Optional:"
msgstr "オプションだ："

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:183
msgid "List any additional GCP service domain names that you want to monitor, using commas to separate domain names in the :strong:`Custom Metric Type Domains` field. For examples of custom metric type domain syntax, see :new-page:`Custom metric type domain examples <https://dev.splunk.com/observability/docs/integrations/gcp_integration_overview#Custom-metric-type-domain-examples>` in the Splunk developer documentation."
msgstr ":strong:`Custom Metric Type Domains` ]フィールドに、カンマでドメイン名を区切って、監視する追加のGCPサービス・ドメイン名をリストします。カスタムメトリックタイプドメイン構文の例については、Splunk 開発者ドキュメントの:new-page:`Custom metric type domain examples<https://dev.splunk.com/observability/docs/integrations/gcp_integration_overview#Custom-metric-type-domain-examples>` を参照してください。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:185
msgid "If you select Compute Engine as one of the services to monitor, you can enter a comma-separated list of Compute Engine Instance metadata keys to send as properties. These metadata keys are sent as properties named ``gcp_metadata_<metadata-key>``."
msgstr "監視するサービスの1つとしてCompute Engineを選択した場合、プロパティとして送信するCompute Engine Instanceメタデータキーのコンマ区切りリストを入力できます。これらのメタデータ・キーは、``gcp_metadata_<metadata-key>`` という名前のプロパティとして送信される。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:187
msgid "Select :strong:`Use quota from the project where metrics are stored` to use a quota from the project where metrics are stored. The service account provided for the project needs either the ``serviceusage.services.use`` permission, or the `Service Usage Consumer` role."
msgstr ":strong:`Use quota from project where metrics are stored` を選択して、メトリクスが保存されているプロジェクトのクォータを使用する。プロジェクトに提供されたサービスアカウントは、``serviceusage.services.use`` 権限、または`Service Usage Consumer` ロールのいずれかが必要です。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:189
msgid "Your GCP integration is now complete."
msgstr "これでGCPとの統合は完了です。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:207
msgid "You can also integrate GCP with Splunk Observability Cloud using the GCP API. See :new-page:`Integrate Google Cloud Platform Monitoring with Splunk Observability Cloud <https://dev.splunk.com/observability/docs/integrations/gcp_integration_overview#Specifying-custom-metric-type-domains>` in our developer portal for details."
msgstr "GCP API を使用して、GCP と Splunk Observability Cloud を統合することもできます。詳細は開発者ポータルの:new-page:`Integrate Google Cloud Platform Monitoring with Splunk Observability Cloud<https://dev.splunk.com/observability/docs/integrations/gcp_integration_overview#Specifying-custom-metric-type-domains>` をご覧ください。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:225
msgid "The Collector offers a higher degree of customization than the GCP integration, and you might prefer it if you want to see metrics at a resolution lower than one minute, or when you need fine-grained control over the filtering of what metrics are sent."
msgstr "Collectorは、GCP統合よりも高度なカスタマイズが可能で、1分未満の解像度でメトリクスを確認したい場合や、送信されるメトリクスのフィルタリングを細かく制御する必要がある場合に適しています。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:235
msgid "To validate your setup, examine the details of your GCP integration as displayed in the list at the end of the setup page."
msgstr "セットアップを確認するには、セットアップページの最後にあるリストに表示されているGCP統合の詳細を調べます。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:237
msgid "For details about the metrics provided by an GCP integration, see :ref:`gcp-metrics`."
msgstr "GCP インテグレーションによって提供されるメトリクスの詳細については、:ref:`gcp-metrics` を参照してください。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:238
msgid "To send logs from Azure to Splunk Observability Cloud, follow the instructions in :ref:`gcp-logs`."
msgstr "Azure から Splunk Observability Cloud にログを送信するには、:ref:`gcp-logs` の手順に従ってください。"

#: ../../gdi/get-data-in/connect/gcp/gcp.rst:239
msgid "Learn about Splunk Observability Cloud's :ref:`GCP Infrastructure Monitoring options <infrastructure-gcp>`."
msgstr "Splunk Observability Cloud の:ref:`GCP Infrastructure Monitoring options <infrastructure-gcp>` について学ぶ。"

#: ../../gdi/get-data-in/connect/gcp/gcp-logs.rst:-1
msgid "Send Google Could Platform / GCP logs to Splunk Observability Cloud."
msgstr "Google Could Platform / GCP のログを Splunk Observability Cloud に送信します。"

#: ../../gdi/get-data-in/connect/gcp/gcp-logs.rst:6
msgid "Ingest Google Cloud Platform log data"
msgstr "Google Cloud Platformのログデータを取り込む"

#: ../../gdi/get-data-in/connect/gcp/gcp-logs.rst:16
msgid "To send GCP logging data to Splunk Observability Cloud's Log Observer, create a Pub/Sub subscription and use the :new-page:`Pub/Sub to Splunk Dataflow template <https://cloud.google.com/dataflow/docs/guides/templates/provided-streaming#cloudpubsubtosplunk>` to create a Dataflow job. The Dataflow job takes messages from the Pub/Sub subscription, converts payloads into Splunk HTTP Event Collector (HEC) event format, and forwards them to Splunk Observability Cloud, where the whole event (JSON payload and its information) is ingested."
msgstr "GCP ログデータを Splunk Observability Cloud の Log Observer に送信するには、Pub/Sub サブスクリプションを作成し、:new-page:`Pub/Sub to Splunk Dataflow テンプレート<https://cloud.google.com/dataflow/docs/guides/templates/provided-streaming#cloudpubsubtosplunk>` を使用して Dataflow ジョブを作成します。Dataflow ジョブは Pub/Sub サブスクリプションからメッセージを受け取り、ペイロードを Splunk HTTP Event Collector (HEC) イベントフォーマットに変換して Splunk Observability Cloud に転送し、そこでイベント全体 (JSON ペイロードとその情報) が取り込まれます。"

#: ../../gdi/get-data-in/connect/gcp/gcp-logs.rst:18
msgid "Splunk Observability Cloud only supports push-based GCP log export. To learn more, see :new-page:`Scenarios for exporting Cloud Logging data: Splunk <https://cloud.google.com/architecture/exporting-stackdriver-logging-for-splunk>`."
msgstr "Splunk Observability Cloud はプッシュベースの GCP ログエクスポートのみをサポートしています。詳細については、:new-page:`クラウドロギングデータをエクスポートするためのシナリオ を参照してください：Splunk<https://cloud.google.com/architecture/exporting-stackdriver-logging-for-splunk>` をご覧ください。"

#: ../../gdi/get-data-in/connect/gcp/gcp-logs.rst:21
msgid "Ingest logs from GCP"
msgstr "GCPからログを取り込む"

#: ../../gdi/get-data-in/connect/gcp/gcp-logs.rst:23
msgid "To send GCP logs to Splunk Observability Cloud:"
msgstr "GCP ログを Splunk Observability Cloud に送信する："

#: ../../gdi/get-data-in/connect/gcp/gcp-logs.rst:25
msgid "Use the example ``gcloud`` command provided in :new-page:`Option A: Stream logs using Pub/Sub to Splunk Dataflow <https://cloud.google.com/architecture/exporting-stackdriver-logging-for-splunk#deploy_splunk_dataflow_template>`."
msgstr ":new-page:`オプション A: Pub/Sub を使用してログを Splunk Dataflow にストリームする<https://cloud.google.com/architecture/exporting-stackdriver-logging-for-splunk#deploy_splunk_dataflow_template>` で提供されている``gcloud`` コマンドの例を使用します。"

#: ../../gdi/get-data-in/connect/gcp/gcp-logs.rst:27
msgid "Apply the with the following changes:"
msgstr "以下の変更を加えて適用する："

#: ../../gdi/get-data-in/connect/gcp/gcp-logs.rst:29
msgid "Change the token in the sample syntax (``token=your-splunk-hec-token``) to a Splunk Observability Cloud organization access token with ingest permission. For more information about organization access tokens, see :ref:`admin-org-tokens`."
msgstr "サンプル構文 (``token=your-splunk-hec-token``) のトークンを、インジェスト権限を持つ Splunk Observability Cloud 組織のアクセストークンに変更します。組織アクセストークンの詳細については、:ref:`admin-org-tokens` を参照してください。"

#: ../../gdi/get-data-in/connect/gcp/gcp-logs.rst:31
msgid "Change the URL in the sample syntax (``url=your-splunk-hec-url``) to point to the real-time log data ingest endpoint for Splunk Observability Cloud: ``https://ingest.{REALM}.signalfx.com``. For example, ``https://ingest.{REALM}.signalfx.com:443``."
msgstr "サンプル構文 (``url=your-splunk-hec-url``) の URL を、Splunk Observability Cloud のリアルタイムログデータインジェストエンドポイント``https://ingest.{REALM}.signalfx.com`` を指すように変更します。例えば、``https://ingest.{REALM}.signalfx.com:443`` 。"

#: ../../gdi/get-data-in/connect/gcp/gcp-logs.rst:34
msgid "Manage delivery failures"
msgstr "配送の失敗を管理する"

#: ../../gdi/get-data-in/connect/gcp/gcp-logs.rst:36
msgid "Any response code that is not 2xx, including throttling, indicates a message delivery failure."
msgstr "スロットリングを含め、2xxでない応答コードはメッセージ配送の失敗を示す。"

#: ../../gdi/get-data-in/connect/gcp/gcp-logs.rst:38
msgid "If message delivery fails, see how to handle delivery failures of log exports to Splunk using Dataflow at :new-page:`GCP documentation <https://cloud.google.com/architecture/deploying-production-ready-log-exports-to-splunk-using-dataflow#replay_failed_messages>`."
msgstr "メッセージの配信に失敗した場合は、:new-page:`GCP documentation<https://cloud.google.com/architecture/deploying-production-ready-log-exports-to-splunk-using-dataflow#replay_failed_messages>` の Dataflow を使用した Splunk へのログエクスポートの配信失敗の対処方法を参照してください。"

#: ../../gdi/get-data-in/connect/gcp/gcp-metrics.rst:-1
msgid "Google Cloud Platform / GCP metrics in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud の Google Cloud Platform / GCP メトリクス。"

#: ../../gdi/get-data-in/connect/gcp/gcp-metrics.rst:5
msgid "Google Cloud Monitoring metrics"
msgstr "Googleクラウド監視メトリクス"

#: ../../gdi/get-data-in/connect/gcp/gcp-metrics.rst:13
msgid "After :ref:`connecting to GCP <get-started-gcp>`, metrics from Google Cloud Monitoring sync with Infrastructure Monitoring."
msgstr ":ref:`connecting to GCP <get-started-gcp>` の後、Google Cloud Monitoring からのメトリクスは Infrastructure Monitoring と同期します。"

#: ../../gdi/get-data-in/connect/gcp/gcp-metrics.rst:15
msgid "Metrics from Google Cloud Monitoring (formerly Stackdriver) contain dimensions that correspond to the Labels described in the Google Cloud metrics reference and the :new-page:`Monitored Resource Types <https://cloud.google.com/monitoring/api/resources>` reference. Use the ``monitored_resource`` dimension to determine which metric corresponds to a particular resource."
msgstr "Google Cloud Monitoring (旧 Stackdriver) のメトリクスには、Google Cloud メトリクス リファレンスおよび:new-page:`Monitored Resource Types<https://cloud.google.com/monitoring/api/resources>` リファレンスで説明されている Labels に対応するディメンションが含まれています。``monitored_resource`` ディメンジョンを使用して、特定のリソースに対応するメトリックを決定する。"

#: ../../gdi/get-data-in/connect/gcp/gcp-metrics.rst:17
msgid "Although you can configure :new-page:`Cloud Monitoring <https://cloud.google.com/monitoring/api/metrics_aws>` to monitor AWS metrics, the GCP integration with Splunk Observability Cloud does not ingest them by default. You can enter additional GCP service domains while configuring your integration. Such a configuration does not connect your Splunk Observability Cloud instance to AWS."
msgstr "AWS メトリクスを監視するために:new-page:`Cloud Monitoring<https://cloud.google.com/monitoring/api/metrics_aws>` を設定できますが、Splunk Observability Cloud と GCP の統合はデフォルトではそれらを取り込みません。統合の設定中に、GCPサービスドメインを追加入力できます。このような構成では、Splunk Observability Cloud インスタンスは AWS に接続されません。"

#: ../../gdi/get-data-in/connect/gcp/gcp-metrics.rst:20
msgid "Available GCP metrics"
msgstr "利用可能なGCPメトリクス"

#: ../../gdi/get-data-in/connect/gcp/gcp-metrics.rst:22
msgid "All metrics of supported services are included by default."
msgstr "サポートされているサービスのすべてのメトリクスがデフォルトで含まれています。"

#: ../../gdi/get-data-in/connect/gcp/gcp-metrics.rst:24
msgid "Check the list of supported GCP services in Splunk Observability Cloud at :ref:`gcp-integrations`."
msgstr "Splunk Observability Cloud でサポートされている GCP サービスのリストは:ref:`gcp-integrations` でご確認ください。"

#: ../../gdi/get-data-in/connect/gcp/gcp-metrics.rst:25
msgid "For a detailed list of the available Google Cloud Monitoring metrics, see the official Google documentation at :new-page:`Google Cloud metrics <https://cloud.google.com/monitoring/api/metrics_gcp>`."
msgstr "利用可能な Google Cloud Monitoring メトリクスの詳細なリストについては、Google の公式ドキュメント:new-page:`Google Cloud メトリクス<https://cloud.google.com/monitoring/api/metrics_gcp>` を参照してください。"

#: ../../gdi/get-data-in/connect/gcp/gcp-metrics.rst:26
msgid "To track and understand your consumption, see :ref:`monitor-imm-billing-usage`."
msgstr "消費量を追跡・把握するには、:ref:`monitor-imm-billing-usage` をご覧ください。"

#: ../../gdi/get-data-in/connect/gcp/gcp-metrics.rst:31
msgid "Splunk Observability Cloud organization metrics monitor data related to your GCP integration, such as the number of metric time series (MTS) your integration has created. The names of organization metrics all start with the string ``sf.org.num.gcp``. To learn more about these metrics, see :new-page-ref:`org-metrics`."
msgstr "Splunk Observability Cloud 組織メトリクスは、統合が作成したメトリック時系列 (MTS) の数など、GCP 統合に関連するデータを監視します。組織メ ト リ ッ ク の名前はすべて、 文字列``sf.org.num.gcp`` で始まります。これらのメトリクスの詳細については、:new-page-ref:`org-metrics` を参照のこと。"

#: ../../gdi/get-data-in/get-data-in.rst:-1
msgid "This topic walks you through recommended steps for getting data from each layer of your stack into Splunk Observability Cloud to get meaningful insights about your infrastructure, applications, and real user experiences."
msgstr "このトピックでは、スタックの各レイヤーから Splunk Observability Cloud にデータを取得し、インフラストラクチャ、アプリケーション、実際のユーザーエクスペリエンスに関する有意義な洞察を得るための推奨手順を説明します。"

#: ../../gdi/get-data-in/get-data-in.rst:5
msgid "Get data into Splunk Observability Cloud"
msgstr "Splunk Observability Cloud にデータを取り込む"

#: ../../gdi/get-data-in/get-data-in.rst:10
msgid "Use Splunk Observability Cloud to achieve full-stack observability of all your data sources, including your infrastructure, applications, and user interfaces. Splunk Observability Cloud includes the following products:"
msgstr "Splunk Observability Cloud を使用すると、インフラストラクチャ、アプリケーション、ユーザーインターフェイスなど、すべてのデータソースのフルスタックの観測が可能になります。Splunk Observability Cloud には以下の製品が含まれます："

#: ../../gdi/get-data-in/get-data-in.rst:12
msgid ":ref:`Splunk Infrastructure Monitoring <infrastructure-infrastructure>`"
msgstr ":ref:`Splunk Infrastructure Monitoring <infrastructure-infrastructure>`"

#: ../../gdi/get-data-in/get-data-in.rst:13
msgid ":ref:`Splunk Application Performance Monitoring (APM) <get-started-apm>`"
msgstr ":ref:`Splunk Application Performance Monitoring (APM) <get-started-apm>`"

#: ../../gdi/get-data-in/get-data-in.rst:14
msgid ":ref:`Splunk Real User Monitoring (RUM) <rum-gdi>`"
msgstr ":ref:`Splunk Real User Monitoring (RUM) <rum-gdi>`"

#: ../../gdi/get-data-in/get-data-in.rst:15
msgid ":ref:`Splunk Log Observer <get-started-logs>` and :ref:`Log Observer Connect <logs-intro-logconnect>`"
msgstr ":ref:`Splunk Log Observer <get-started-logs>` そして :ref:`Log Observer Connect <logs-intro-logconnect>`"

#: ../../gdi/get-data-in/get-data-in.rst:17
msgid "Here's a high-level overview of your options for getting data from each layer of your stack into the Splunk Observability Cloud product best suited to provide insights about your system."
msgstr "ここでは、スタックの各レイヤーから、システムに関する洞察を提供するのに最適なSplunk Observability Cloud製品にデータを取り込むためのオプションの概要を説明します。"

#: ../../gdi/get-data-in/get-data-in.rst:24
msgid "For standard environments and workflows, perform all the steps described below to get the most out of Splunk Observability Cloud. However, depending on your observability goals and environment, you can choose to perform only a subset of the steps. For example, if you don't use every Splunk Observability Cloud product, or if you don't want to collect data from every eligible data source."
msgstr "標準的な環境とワークフローでは、以下に説明するすべての手順を実行し、Splunk Observability Cloud を最大限に活用してください。しかし、観測可能性の目標や環境によっては、ステップのサブセットだけを実行することもできる。例えば、すべての Splunk Observability Cloud 製品を使用していない場合や、すべての適格なデータソースからデータを収集したくない場合などです。"

#: ../../gdi/get-data-in/get-data-in.rst:29
msgid "Per product integration recommendations"
msgstr "製品統合に関する推奨事項"

#: ../../gdi/get-data-in/get-data-in.rst:31
msgid "If you're not yet implementing full-stack observability as described in the diagram above, and are using only one or a few products, see the table to learn which steps are recommended, optional, or not applicable (n/a) based on your use case."
msgstr "もし、あなたがまだ上の図で説明されているようなフルスタックのオブザベイラビリティを実装しておらず、1つまたはいくつかの製品しか使用していない場合、あなたのユースケースに基づいて、どのステップが推奨、オプション、または該当しない（n/a）かを知るために表を参照してください。"

#: ../../gdi/get-data-in/get-data-in.rst:37
msgid ":strong:`Step`"
msgstr ":strong:`ステップ`"

#: ../../gdi/get-data-in/get-data-in.rst:38
msgid ":strong:`Infrastructure Monitoring only`"
msgstr ":strong:`インフラ監視のみ`"

#: ../../gdi/get-data-in/get-data-in.rst:39
msgid ":strong:`APM only`"
msgstr ":strong:`APMのみ`"

#: ../../gdi/get-data-in/get-data-in.rst:40
msgid ":strong:`RUM only`"
msgstr ":strong:`RUMのみ`"

#: ../../gdi/get-data-in/get-data-in.rst:41
msgid ":strong:`Sends logs?`"
msgstr ":strong:`ログを送る？`"

#: ../../gdi/get-data-in/get-data-in.rst:43
msgid ":ref:`1. Integrate with cloud services <gdi-1>`"
msgstr ":ref:`1. Integrate with cloud services <gdi-1>`"

#: ../../gdi/get-data-in/get-data-in.rst:44 ../../gdi/get-data-in/get-data-in.rst:50 ../../gdi/get-data-in/get-data-in.rst:51 ../../gdi/get-data-in/get-data-in.rst:63 ../../gdi/get-data-in/get-data-in.rst:69 ../../gdi/get-data-in/get-data-in.rst:76 ../../gdi/get-data-in/get-data-in.rst:80 ../../gdi/get-data-in/get-data-in.rst:81
msgid ":strong:`Recommended`"
msgstr ":strong:`おすすめ`"

#: ../../gdi/get-data-in/get-data-in.rst:45 ../../gdi/get-data-in/get-data-in.rst:46 ../../gdi/get-data-in/get-data-in.rst:52 ../../gdi/get-data-in/get-data-in.rst:58 ../../gdi/get-data-in/get-data-in.rst:64 ../../gdi/get-data-in/get-data-in.rst:70 ../../gdi/get-data-in/get-data-in.rst:74 ../../gdi/get-data-in/get-data-in.rst:75 ../../gdi/get-data-in/get-data-in.rst:82 ../../gdi/get-data-in/get-data-in.rst:88
msgid "n/a"
msgstr "n/a"

#: ../../gdi/get-data-in/get-data-in.rst:49
msgid ":ref:`2. Install the OpenTelemetry Collector for servers and clusters <gdi-2>`"
msgstr ":ref:`2. Install the OpenTelemetry Collector for servers and clusters <gdi-2>`"

#: ../../gdi/get-data-in/get-data-in.rst:55
msgid ":ref:`3. Configure third-party server apps <gdi-3>`"
msgstr ":ref:`3. Configure third-party server apps <gdi-3>`"

#: ../../gdi/get-data-in/get-data-in.rst:61
msgid ":ref:`4. Instrument apps and back-end services <gdi-4>`"
msgstr ":ref:`4. Instrument apps and back-end services <gdi-4>`"

#: ../../gdi/get-data-in/get-data-in.rst:67
msgid ":ref:`5. Instrument serverless functions <gdi-5>`"
msgstr ":ref:`5. Instrument serverless functions <gdi-5>`"

#: ../../gdi/get-data-in/get-data-in.rst:73
msgid ":ref:`6. Configure apps and serverless functions to send custom data <gdi-6>`"
msgstr ":ref:`6. Configure apps and serverless functions to send custom data <gdi-6>`"

#: ../../gdi/get-data-in/get-data-in.rst:79
msgid ":ref:`7. Instrument user interfaces <gdi-7>`"
msgstr ":ref:`7. Instrument user interfaces <gdi-7>`"

#: ../../gdi/get-data-in/get-data-in.rst:85
msgid ":ref:`8. Use the API to send custom data <gdi-8>`"
msgstr ":ref:`8. Use the API to send custom data <gdi-8>`"

#: ../../gdi/get-data-in/get-data-in.rst:94
msgid "1. Integrate with cloud services to send metrics and logs"
msgstr "1.クラウドサービスと統合してメトリクスとログを送信"

#: ../../gdi/get-data-in/get-data-in.rst:96
msgid "If you're using cloud services for your infrastructure, the first step is to integrate these services with Splunk Observability Cloud. Cloud integrations can send metrics and metadata (such as tags, labels and other properties) to Infrastructure Monitoring."
msgstr "インフラにクラウドサービスを使用している場合、最初のステップはこれらのサービスを Splunk Observability Cloud と統合することです。クラウド統合は、メトリクスとメタデータ（タグ、ラベル、その他のプロパティなど）をインフラストラクチャ・モニタリングに送信できます。"

#: ../../gdi/get-data-in/get-data-in.rst:98
msgid "After you've integrated with your cloud services, you can access your data in the following locations:"
msgstr "クラウドサービスとの統合後は、以下の場所でデータにアクセスできます："

#: ../../gdi/get-data-in/get-data-in.rst:100 ../../gdi/get-data-in/get-data-in.rst:156
msgid "View metrics in Infrastructure Monitoring navigators"
msgstr "インフラストラクチャ・モニタリングのナビゲータでメトリクスを表示"

#: ../../gdi/get-data-in/get-data-in.rst:102
msgid "This screenshot shows the EBS navigator in Splunk Infrastructure Monitoring displaying charts and visualizations of data collected from EBS."
msgstr "このスクリーンショットは、Splunk Infrastructure Monitoring の EBS ナビゲータで、EBS から収集したデータのチャートと可視化を表示しています。"

#: ../../gdi/get-data-in/get-data-in.rst:106 ../../gdi/get-data-in/get-data-in.rst:162
msgid "For more information, see:"
msgstr "詳細はこちらを参照："

#: ../../gdi/get-data-in/get-data-in.rst:108
msgid ":ref:`monitor-aws-services`"
msgstr ":ref:`monitor-aws-services`"

#: ../../gdi/get-data-in/get-data-in.rst:109
msgid ":ref:`monitor-gcp-services`"
msgstr ":ref:`monitor-gcp-services`"

#: ../../gdi/get-data-in/get-data-in.rst:110
msgid ":ref:`monitor-azure-services`"
msgstr ":ref:`monitor-azure-services`"

#: ../../gdi/get-data-in/get-data-in.rst:112
msgid "View metrics in :ref:`built-in dashboards <built-in-dashboards>` for AWS, GCP, and Azure services"
msgstr "AWS、GCP、Azureサービスのメトリクスを:ref:`built-in dashboards <built-in-dashboards>` 。"

#: ../../gdi/get-data-in/get-data-in.rst:114
msgid "Search for metrics :ref:`using the Metric Finder <metric-finder>`. For the list of metrics provided by a cloud service, see:"
msgstr "メトリクスの検索:ref:`using the Metric Finder <metric-finder>`.クラウドサービスが提供するメトリクスのリストについては、こちらを参照："

#: ../../gdi/get-data-in/get-data-in.rst:116
msgid ":new-page:`AWS official documentation <https://docs.aws.amazon.com/index.html#general_resourcess>`"
msgstr ":new-page:`AWS公式ドキュメント <https://docs.aws.amazon.com/index.html#general_resourcess>`"

#: ../../gdi/get-data-in/get-data-in.rst:117
msgid ":ref:`GCP metrics <gcp-metrics>`"
msgstr ":ref:`GCP metrics <gcp-metrics>`"

#: ../../gdi/get-data-in/get-data-in.rst:118
msgid ":ref:`Azure metrics <azure-metrics>`"
msgstr ":ref:`Azure metrics <azure-metrics>`"

#: ../../gdi/get-data-in/get-data-in.rst:121 ../../gdi/get-data-in/get-data-in.rst:174 ../../gdi/get-data-in/get-data-in.rst:245 ../../gdi/get-data-in/get-data-in.rst:298 ../../gdi/get-data-in/get-data-in.rst:314 ../../gdi/get-data-in/get-data-in.rst:388
msgid "Steps"
msgstr "ステップ"

#: ../../gdi/get-data-in/get-data-in.rst:123
msgid "To integrate with Amazon Web Services, use the method that better suits your environment:"
msgstr "アマゾン・ウェブ・サービスと統合するには、ご自分の環境に合った方法をお使いください："

#: ../../gdi/get-data-in/get-data-in.rst:125
msgid ":ref:`Connect to AWS using the guided setup <aws-wizardconfig>`"
msgstr ":ref:`Connect to AWS using the guided setup <aws-wizardconfig>`"

#: ../../gdi/get-data-in/get-data-in.rst:126
msgid ":ref:`Connect to AWS using the API <get-configapi>`"
msgstr ":ref:`Connect to AWS using the API <get-configapi>`"

#: ../../gdi/get-data-in/get-data-in.rst:127
msgid ":ref:`Connect to AWS using Terraform <terraform-config>`"
msgstr ":ref:`Connect to AWS using Terraform <terraform-config>`"

#: ../../gdi/get-data-in/get-data-in.rst:129
msgid "To integrate with Google Cloud Platform services, use the method that best suits your environment:"
msgstr "Google Cloud Platformサービスと統合するには、あなたの環境に最も適した方法を使用してください："

#: ../../gdi/get-data-in/get-data-in.rst:131
msgid ":ref:`Connect to GCP using the guided setup in Splunk Observability Cloud <get-started-gcp>`"
msgstr ":ref:`Connect to GCP using the guided setup in Splunk Observability Cloud <get-started-gcp>`"

#: ../../gdi/get-data-in/get-data-in.rst:132
msgid ":new-page:`Connect to GCP using the Splunk Observability Cloud API <https://dev.splunk.com/observability/docs/integrations/gcp_integration_overview>`"
msgstr ":new-page:`Splunk Observability Cloud API を使用して GCP に接続する <https://dev.splunk.com/observability/docs/integrations/gcp_integration_overview>`"

#: ../../gdi/get-data-in/get-data-in.rst:133
msgid ":ref:`Connect to GCP using Terraform <terraform-config>`"
msgstr ":ref:`Connect to GCP using Terraform <terraform-config>`"

#: ../../gdi/get-data-in/get-data-in.rst:135
msgid "To integrate with Microsoft Azure services, use the method that best suits your environment:"
msgstr "Microsoft Azureサービスと統合するには、環境に最も適した方法を使用してください："

#: ../../gdi/get-data-in/get-data-in.rst:137
msgid ":ref:`Connect to Azure using the guided setup in Splunk Observability Cloud <get-started-azure>`"
msgstr ":ref:`Connect to Azure using the guided setup in Splunk Observability Cloud <get-started-azure>`"

#: ../../gdi/get-data-in/get-data-in.rst:138
msgid ":new-page:`Connect to Azure using the Splunk Observability Cloud API <https://dev.splunk.com/observability/docs/integrations/msazure_integration_overview>`"
msgstr ":new-page:`Splunk Observability Cloud API を使用して Azure に接続する <https://dev.splunk.com/observability/docs/integrations/msazure_integration_overview>`"

#: ../../gdi/get-data-in/get-data-in.rst:139
msgid ":ref:`Connect to Azure using Terraform <terraform-config>`"
msgstr ":ref:`Connect to Azure using Terraform <terraform-config>`"

#: ../../gdi/get-data-in/get-data-in.rst:141
msgid "For example, you might want to use the guided setup if you are setting up just a few integrations. However, if you are setting up many integrations, such as for different accounts and regions, use the API or Terraform. Note that if you need all of the latest integration features, you might want to use the API because support might not yet be available using Terraform."
msgstr "例えば、いくつかの統合をセットアップするだけであれば、ガイド付きセットアップを使用するとよいでしょう。しかし、異なるアカウントや地域など、多くの統合をセットアップする場合は、APIまたはTerraformを使用してください。最新の統合機能が必要な場合は、APIを使うことをお勧めします。Terraformではまだサポートされていないかもしれないからです。"

#: ../../gdi/get-data-in/get-data-in.rst:146
msgid "2. Install the OpenTelemetry Collector to send server and cluster data"
msgstr "2.OpenTelemetry Collectorをインストールして、サーバとクラスタのデータを送信する。"

#: ../../gdi/get-data-in/get-data-in.rst:148
msgid "Install the :ref:`Splunk Distribution of OpenTelemetry Collector <otel-intro>` on any hosts or clusters you're using as a part of your infrastructure, such as servers running in your data center or on a virtual machine running in the cloud to:"
msgstr "データセンターで稼働しているサーバーやクラウド上で稼働している仮想マシンなど、インフラストラクチャの一部として使用しているホストやクラスタに、:ref:`Splunk Distribution of OpenTelemetry Collector <otel-intro>` をインストールします："

#: ../../gdi/get-data-in/get-data-in.rst:150
msgid "Send metrics to Infrastructure Monitoring"
msgstr "インフラストラクチャ・モニタリングにメトリクスを送信"

#: ../../gdi/get-data-in/get-data-in.rst:151
msgid "Send logs to Log Observer"
msgstr "ログをログオブザーバーに送信する"

#: ../../gdi/get-data-in/get-data-in.rst:152
msgid "Set up your environment to receive logs and traces from applications instrumented in step :ref:`gdi-4`"
msgstr "ステップでインスツルメンテーションされたアプリケーションからログとトレースを受け取るように環境をセットアップする。 :ref:`gdi-4`"

#: ../../gdi/get-data-in/get-data-in.rst:154
msgid "After you've installed the Collector and configured your servers and clusters, you can access your data in the following locations:"
msgstr "Collectorをインストールし、サーバとクラスタを構成したら、次の場所でデータにアクセスできます："

#: ../../gdi/get-data-in/get-data-in.rst:158
msgid "This screenshot shows the Hosts navigator in Splunk Infrastructure Monitoring displaying charts and visualizations of data collected from hosts."
msgstr "このスクリーンショットは、Splunk Infrastructure Monitoring の Hosts ナビゲータで、ホストから収集したデータのチャートと可視化を表示しています。"

#: ../../gdi/get-data-in/get-data-in.rst:164
msgid ":ref:`monitor-hosts`"
msgstr ":ref:`monitor-hosts`"

#: ../../gdi/get-data-in/get-data-in.rst:165
msgid ":Ref:`use-the-k8s-navigator`"
msgstr ":Ref:`use-the-k8s-navigator`"

#: ../../gdi/get-data-in/get-data-in.rst:167
msgid "View metrics in :ref:`built-in dashboards <built-in-dashboards>` for hosts and Kubernetes"
msgstr "ホストとKubernetesのメトリクスを:ref:`built-in dashboards <built-in-dashboards>` 。"

#: ../../gdi/get-data-in/get-data-in.rst:169 ../../gdi/get-data-in/get-data-in.rst:295 ../../gdi/get-data-in/get-data-in.rst:335
msgid "Search for metrics :ref:`using Metric Finder <metric-finder>`"
msgstr "メトリクスの検索 :ref:`using Metric Finder <metric-finder>`"

#: ../../gdi/get-data-in/get-data-in.rst:171 ../../gdi/get-data-in/get-data-in.rst:212 ../../gdi/get-data-in/get-data-in.rst:242
msgid "Query logs in :ref:`Log Observer <logs-timeline>`, if you chose to ingest logs"
msgstr "ログの取り込みを選択した場合は、:ref:`Log Observer <logs-timeline>` でログを照会する。"

#: ../../gdi/get-data-in/get-data-in.rst:176
msgid "To configure Windows servers, install the Splunk Distribution of OpenTelemetry Collector using the method that best suits your environment:"
msgstr "Windows サーバーを設定するには、お使いの環境に最適な方法で OpenTelemetry Collector の Splunk ディストリビューションをインストールします："

#: ../../gdi/get-data-in/get-data-in.rst:178
msgid ":ref:`Use a wizard to install on Windows <get-started-windows>`"
msgstr ":ref:`Use a wizard to install on Windows <get-started-windows>`"

#: ../../gdi/get-data-in/get-data-in.rst:179
msgid ":ref:`Manually install on Windows <otel-install-windows-manual>`"
msgstr ":ref:`Manually install on Windows <otel-install-windows-manual>`"

#: ../../gdi/get-data-in/get-data-in.rst:181
msgid "To configure Linux servers, install the Splunk Distribution of OpenTelemetry Collector using the method that best suits your environment:"
msgstr "Linux サーバを設定するには、お使いの環境に最適な方法で OpenTelemetry Collector の Splunk ディストリビューションをインストールします："

#: ../../gdi/get-data-in/get-data-in.rst:183
msgid ":ref:`Use a wizard to install on Linux <get-started-linux>`"
msgstr ":ref:`Use a wizard to install on Linux <get-started-linux>`"

#: ../../gdi/get-data-in/get-data-in.rst:184
msgid ":ref:`Manually install on Linux <otel-install-linux-manual>`"
msgstr ":ref:`Manually install on Linux <otel-install-linux-manual>`"

#: ../../gdi/get-data-in/get-data-in.rst:186
msgid "To configure Kubernetes clusters, install the Splunk Distribution of OpenTelemetry Collector using the method that best suits your environment:"
msgstr "Kubernetes クラスターを構成するには、お使いの環境に最適な方法で OpenTelemetry Collector の Splunk Distribution をインストールします："

#: ../../gdi/get-data-in/get-data-in.rst:188
msgid ":ref:`Use a wizard to install in a Kubernetes cluster <get-started-k8s>`"
msgstr ":ref:`Use a wizard to install in a Kubernetes cluster <get-started-k8s>`"

#: ../../gdi/get-data-in/get-data-in.rst:189 ../../gdi/opentelemetry/collector-with-the-uf.rst:23
msgid ":ref:`Manually install in a Kubernetes cluster <otel-install-k8s>`"
msgstr ":ref:`Manually install in a Kubernetes cluster <otel-install-k8s>`"

#: ../../gdi/get-data-in/get-data-in.rst:191
msgid "One of the benefits of using the Splunk Distribution of OpenTelemetry Collector to send your data to Splunk Observability Cloud is that Related Content, a feature that activates users to seamlessly move between key views in Splunk Observability Cloud, is easier to implement. For more information, see :ref:`get-started-relatedcontent`."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを使用してデータを Splunk Observability Cloud に送信する利点の 1 つは、Splunk Observability Cloud の主要なビュー間をシームレスに移動できるようにする機能である Related Content を簡単に実装できることです。詳細は:ref:`get-started-relatedcontent` を参照。"

#: ../../gdi/get-data-in/get-data-in.rst:196
msgid "3. Configure third-party server applications to send metrics, logs, and traces"
msgstr "3.メトリクス、ログ、トレースを送信するためのサードパーティ製サーバー・アプリケーションの構成"

#: ../../gdi/get-data-in/get-data-in.rst:198
msgid "After you've completed step :ref:`gdi-2` and installed the Splunk Distribution of OpenTelemetry Collector on your servers (hosts) or in your clusters, configure the Collector's :ref:`native receivers <collector-components-receivers>` or :ref:`any of these third-party applications <monitor-data-sources>`, such as Apache, Cassandra, Hadoop, Kafka, and NGINX, to monitor your systems."
msgstr "ステップ:ref:`gdi-2` を完了し、Splunk Distribution of OpenTelemetry Collector をサーバー（ホスト）またはクラスタにインストールしたら、Collector の:ref:`native receivers <collector-components-receivers>` または:ref:`any of these third-party applications <monitor-data-sources>` （Apache、Cassandra、Hadoop、Kafka、NGINX など）を設定してシステムを監視します。"

#: ../../gdi/get-data-in/get-data-in.rst:200
msgid "After you've configured the Collector's pipelines for your desired server applications, access your data in the following locations:"
msgstr "希望するサーバアプリケーション用に Collector のパイプラインを設定したら、次の場所でデータにアクセスします："

#: ../../gdi/get-data-in/get-data-in.rst:202
msgid "View metrics using any built-in dashboards available for your server applications. For example, here is the built-in Kafka dashboard:"
msgstr "サーバー・アプリケーションで利用可能な組み込みダッシュボードを使用して、メトリクスを表示します。例えば、こちらは組み込みのKafkaダッシュボードです："

#: ../../gdi/get-data-in/get-data-in.rst:204
msgid "This screenshot shows the Kafka built-in dashboard."
msgstr "このスクリーンショットはKafkaビルトインダッシュボードを示している。"

#: ../../gdi/get-data-in/get-data-in.rst:208
msgid "For more information about dashboards, see :ref:`view-dashboards`."
msgstr "ダッシュボードの詳細については、:ref:`view-dashboards` を参照してください。"

#: ../../gdi/get-data-in/get-data-in.rst:210
msgid "Search for metrics :ref:`using Metric Finder <metric-finder>`. For the list of metrics provided by an application receiver, see the :ref:`documentation for the application receiver <monitor-data-sources>`."
msgstr "メトリクスの検索:ref:`using Metric Finder <metric-finder>`.アプリケーション・レシーバが提供するメトリクスのリストについては、:ref:`documentation for the application receiver <monitor-data-sources>` を参照してください。"

#: ../../gdi/get-data-in/get-data-in.rst:214
msgid "For SignalFx Forwarder only, you can:"
msgstr "SignalFx Forwarderのみで可能です："

#: ../../gdi/get-data-in/get-data-in.rst:216 ../../gdi/get-data-in/get-data-in.rst:232 ../../gdi/get-data-in/get-data-in.rst:281 ../../gdi/get-data-in/get-data-in.rst:333
msgid "View traces on the APM landing page to :ref:`assess the health of your applications <apm-landing-page>`"
msgstr "APMランディングページでトレースを見る :ref:`assess the health of your applications <apm-landing-page>`"

#: ../../gdi/get-data-in/get-data-in.rst:217 ../../gdi/get-data-in/get-data-in.rst:234 ../../gdi/get-data-in/get-data-in.rst:283 ../../gdi/get-data-in/get-data-in.rst:334
msgid "View traces in the APM Explorer view to :ref:`assess dependencies among your applications <apm-service-map>`"
msgstr "APMエクスプローラビューでトレースを見る :ref:`assess dependencies among your applications <apm-service-map>`"

#: ../../gdi/get-data-in/get-data-in.rst:222
msgid "4. Instrument back-end services and applications to send traces, logs, and metrics"
msgstr "4.トレース、ログ、メトリクスを送信するために、バックエンドのサービスやアプリケーションをインストゥルメントする。"

#: ../../gdi/get-data-in/get-data-in.rst:224
msgid "You can choose to instrument applications that you've developed in-house to send data to Splunk Observability Cloud:"
msgstr "Splunk Observability Cloud にデータを送信するために、社内で開発したアプリケーションをインストルメント化することもできます："

#: ../../gdi/get-data-in/get-data-in.rst:226 ../../gdi/get-data-in/get-data-in.rst:276
msgid "Traces to APM"
msgstr "APMへのトレース"

#: ../../gdi/get-data-in/get-data-in.rst:227
msgid "Logs (events) to Log Observer"
msgstr "ログ・オブザーバーへのログ（イベント"

#: ../../gdi/get-data-in/get-data-in.rst:228
msgid "Metrics to Infrastructure Monitoring (Java only)"
msgstr "インフラ監視へのメトリクス（Javaのみ）"

#: ../../gdi/get-data-in/get-data-in.rst:230
msgid "After you've instrumented your application, you can access your data in the following locations:"
msgstr "アプリケーションをインスツルメンテーションした後、以下の場所でデータにアクセスできます："

#: ../../gdi/get-data-in/get-data-in.rst:236
msgid "This screenshot shows an example of the Splunk APM Explore view"
msgstr "このスクリーンショットは、Splunk APM Explore ビューの例を示しています。"

#: ../../gdi/get-data-in/get-data-in.rst:240
msgid "For a Java application, you can search for metrics :ref:`using Metric Finder <metric-finder>`"
msgstr "Javaアプリケーションの場合、メトリクスを検索できます。 :ref:`using Metric Finder <metric-finder>`"

#: ../../gdi/get-data-in/get-data-in.rst:247
msgid "See the instrumentation documentation for your application language:"
msgstr "ご使用のアプリケーション言語のインスツルメンテーション・ドキュメントをご参照ください："

#: ../../gdi/get-data-in/get-data-in.rst:249
msgid ":ref:`Instrument Java applications <get-started-java>`"
msgstr ":ref:`Instrument Java applications <get-started-java>`"

#: ../../gdi/get-data-in/get-data-in.rst:251
msgid ":ref:`Instrument Python applications <get-started-python>`"
msgstr ":ref:`Instrument Python applications <get-started-python>`"

#: ../../gdi/get-data-in/get-data-in.rst:253
msgid ":ref:`Instrument Node.js applications <get-started-nodejs>`"
msgstr ":ref:`Instrument Node.js applications <get-started-nodejs>`"

#: ../../gdi/get-data-in/get-data-in.rst:255
msgid ":ref:`Instrument .NET applications <get-started-dotnet>`"
msgstr ":ref:`Instrument .NET applications <get-started-dotnet>`"

#: ../../gdi/get-data-in/get-data-in.rst:257
msgid ":ref:`Instrument Go applications <get-started-go>`"
msgstr ":ref:`Instrument Go applications <get-started-go>`"

#: ../../gdi/get-data-in/get-data-in.rst:259
msgid ":ref:`Instrument Ruby applications <get-started-ruby>`"
msgstr ":ref:`Instrument Ruby applications <get-started-ruby>`"

#: ../../gdi/get-data-in/get-data-in.rst:261
msgid ":ref:`Instrument PHP applications <get-started-php>`"
msgstr ":ref:`Instrument PHP applications <get-started-php>`"

#: ../../gdi/get-data-in/get-data-in.rst:263
msgid "If you use the Splunk Distribution of OpenTelemetry Collector to send your data to Splunk Observability Cloud, you can benefit from Related Content, a feature that activates users to seamlessly move between key views in Splunk Observability Cloud. For more information, see :ref:`get-started-relatedcontent`."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを使用してデータを Splunk Observability Cloud に送信する場合、Splunk Observability Cloud の主要なビュー間をシームレスに移動できる機能である Related Content を利用できます。詳細は:ref:`get-started-relatedcontent` を参照。"

#: ../../gdi/get-data-in/get-data-in.rst:268
msgid "5. Instrument serverless functions to send traces and metrics"
msgstr "5.サーバーレス関数をインストゥルメントしてトレースとメトリクスを送信する"

#: ../../gdi/get-data-in/get-data-in.rst:270
msgid "You can choose to instrument your serverless functions."
msgstr "サーバーレス関数をインストゥルメント化することもできる。"

#: ../../gdi/get-data-in/get-data-in.rst:272
msgid ":strong:`Note:` This step is about bringing in built-in metrics and traces. Once you have a chance to familiarize yourself with your data coming in, you can use this same instrumentation to bring in custom data. For more information, see step :ref:`gdi-7`."
msgstr ":strong:`注：` このステップは、組み込みのメトリクスとトレースを取り込むためのものです。入ってくるデータに慣れたら、同じインストゥルメンテーションを使ってカスタムデータを取り込むことができる。詳しくは、ステップ:ref:`gdi-7` をご覧ください。"

#: ../../gdi/get-data-in/get-data-in.rst:274
msgid "This integration can send:"
msgstr "この統合は送信することができる："

#: ../../gdi/get-data-in/get-data-in.rst:277
msgid "Metrics to Infrastructure Monitoring"
msgstr "インフラ監視への指標"

#: ../../gdi/get-data-in/get-data-in.rst:279
msgid "After you've instrumented your serverless functions, you can access your data in the following locations:"
msgstr "サーバーレス関数をインストゥルメント化したら、以下の場所でデータにアクセスできる："

#: ../../gdi/get-data-in/get-data-in.rst:285
msgid "View metrics in the Infrastructure Monitoring Lambda Functions navigator"
msgstr "Infrastructure Monitoring Lambda Functions ナビゲーターでメトリクスを表示する"

#: ../../gdi/get-data-in/get-data-in.rst:287
msgid "This screenshot shows the Lambda Functions navigator in Splunk Infrastructure Monitoring displaying charts and visualizations of data collected from serverless functions."
msgstr "このスクリーンショットは、Splunk Infrastructure Monitoring の Lambda Functions ナビゲーターで、サーバーレス関数から収集したデータのチャートと可視化を表示しています。"

#: ../../gdi/get-data-in/get-data-in.rst:291
msgid "For more information, see :ref:`monitor-aws-services`."
msgstr "詳細は:ref:`monitor-aws-services` を参照。"

#: ../../gdi/get-data-in/get-data-in.rst:293
msgid "View metrics in :ref:`built-in dashboards <built-in-dashboards>` for AWS Lambda"
msgstr "AWS Lambdaのメトリクスを:ref:`built-in dashboards <built-in-dashboards>` 。"

#: ../../gdi/get-data-in/get-data-in.rst:300 ../../gdi/get-data-in/get-data-in.rst:364
msgid "To instrument your AWS Lambda serverless functions, see :ref:`instrument-serverless-functions`."
msgstr "AWS Lambdaサーバーレスファンクションを計測するには、:ref:`instrument-serverless-functions` を参照。"

#: ../../gdi/get-data-in/get-data-in.rst:305
msgid "6. Instrument user interfaces to send user sessions"
msgstr "6.ユーザー・セッションを送信するためのユーザー・インターフェースの機器化"

#: ../../gdi/get-data-in/get-data-in.rst:307
msgid "You can instrument browser and mobile user interfaces to monitor front-end application user experiences, sending your user sessions to RUM to review key metrics and vitals, as well as investigate errors in your spans:"
msgstr "ブラウザとモバイルのユーザー・インターフェースを計測して、フロントエンド・アプリケーションのユーザー・エクスペリエンスをモニターし、ユーザー・セッションをRUMに送信して、主要なメトリクスとバイタルをレビューし、スパンのエラーを調査することができます："

#: ../../gdi/get-data-in/get-data-in.rst:-1
msgid "This screenshot shows an example of the Splunk RUM landing page"
msgstr "このスクリーンショットは、Splunk RUM ランディングページの例を示しています。"

#: ../../gdi/get-data-in/get-data-in.rst:316
msgid "To instrument web browsers to send user session data, see :ref:`browser-rum-gdi`."
msgstr "ウェブ・ブラウザにユーザー・セッション・データを送信させるには、:ref:`browser-rum-gdi` を参照のこと。"

#: ../../gdi/get-data-in/get-data-in.rst:317
msgid "To instrument an iOS application to send user session data, see :ref:`rum-mobile-ios`."
msgstr "iOSアプリケーションにユーザー・セッション・データを送信させるには、:ref:`rum-mobile-ios` を参照してください。"

#: ../../gdi/get-data-in/get-data-in.rst:318
msgid "To instrument an Android application to send user session data, see :ref:`rum-mobile-android`."
msgstr "Androidアプリケーションにユーザー・セッション・データを送信させるには、:ref:`rum-mobile-android` を参照してください。"

#: ../../gdi/get-data-in/get-data-in.rst:323
msgid "7. Configure applications and serverless functions to send custom data"
msgstr "7.カスタムデータを送信するためのアプリケーションとサーバーレス関数の構成"

#: ../../gdi/get-data-in/get-data-in.rst:325
msgid "Now that you have built-in data from your full stack flowing into Splunk Observability Cloud, assess whether there are custom data points you need to bring in."
msgstr "フルスタックからの組み込みデータが Splunk Observability Cloud に流れ込むようになったので、取り込む必要のあるカスタムデータポイントがあるかどうかを評価する。"

#: ../../gdi/get-data-in/get-data-in.rst:327
msgid "For many teams, some of the most meaningful data is custom data because you can define these data points to focus on what is most important to you in your specific environment."
msgstr "多くのチームにとって、最も有意義なデータのいくつかはカスタム・データである。なぜなら、これらのデータ・ポイントを定義することで、特定の環境において最も重要なものに焦点を当てることができるからだ。"

#: ../../gdi/get-data-in/get-data-in.rst:329
msgid "For example, if you run an e-commerce site, you might configure your application to send a custom metric about the number of orders placed. You can then create a detector to receive an alert when the number of orders drops significantly. You might also configure your application to send a custom metric about how long payment processing takes. You can then create a detector to issue alerts when the processing time exceeds a threshold."
msgstr "例えば、eコマースサイトを運営している場合、注文数に関するカスタムメトリックを送信するようにアプリケーションを設定するかもしれません。そして、注文数が大幅に減少したときにアラートを受け取る検出器を作成することができます。また、支払い処理にかかる時間に関するカスタムメトリックを送信するようにアプリケーションを設定することもできます。そして、処理時間がしきい値を超えたときにアラートを発するディテクターを作成することができる。"

#: ../../gdi/get-data-in/get-data-in.rst:331
msgid "You can configure applications to send custom metrics and instrument serverless functions to send custom traces. Access your custom data in the following locations:"
msgstr "カスタムメトリクスを送信するようにアプリケーションを設定したり、カスタムトレースを送信するようにサーバーレス関数をインストゥルメントしたりできる。以下の場所でカスタムデータにアクセスできます："

#: ../../gdi/get-data-in/get-data-in.rst:337
msgid "This screenshot shows metric search results in the Metric Finder"
msgstr "このスクリーンショットは、Metric Finderでのメトリクスの検索結果を示しています。"

#: ../../gdi/get-data-in/get-data-in.rst:343
msgid "Configuration steps for back-end applications"
msgstr "バックエンドアプリケーションの設定手順"

#: ../../gdi/get-data-in/get-data-in.rst:345
msgid "Use the library for your application language:"
msgstr "アプリケーション言語用のライブラリを使用する："

#: ../../gdi/get-data-in/get-data-in.rst:347
msgid ":new-page:`Go client library for SignalFx <https://github.com/signalfx/signalfx-go>` on GitHub"
msgstr ":new-page:`SignalFx 用 Go クライアント・ライブラリ<https://github.com/signalfx/signalfx-go>` on GitHub"

#: ../../gdi/get-data-in/get-data-in.rst:349
msgid "For Java, use one of these available integrations:"
msgstr "Javaの場合は、これらの利用可能な統合のいずれかを使用します："

#: ../../gdi/get-data-in/get-data-in.rst:351
msgid ":ref:`Splunk Distribution of OpenTelemetry Java <get-started-java>`"
msgstr ":ref:`Splunk Distribution of OpenTelemetry Java <get-started-java>`"

#: ../../gdi/get-data-in/get-data-in.rst:352
msgid ":new-page:`Java client libraries for SignalFx <https://github.com/signalfx/signalfx-java>` on GitHub"
msgstr ":new-page:`SignalFx 用 Java クライアント・ライブラリ<https://github.com/signalfx/signalfx-java>` on GitHub"

#: ../../gdi/get-data-in/get-data-in.rst:354
msgid ":new-page:`Node.js client library for SignalFx <https://github.com/signalfx/signalfx-nodejs>` on GitHub"
msgstr ":new-page:`SignalFx 用 Node.js クライアント・ライブラリ<https://github.com/signalfx/signalfx-nodejs>` on GitHub"

#: ../../gdi/get-data-in/get-data-in.rst:356
msgid ":new-page:`Python client library for SignalFx <https://github.com/signalfx/signalfx-python>` on GitHub"
msgstr ":new-page:`SignalFx 用 Python クライアント・ライブラリ<https://github.com/signalfx/signalfx-python>` on GitHub"

#: ../../gdi/get-data-in/get-data-in.rst:358
msgid ":new-page:`Ruby client library for SignalFx <https://github.com/signalfx/signalfx-ruby>` on GitHub"
msgstr ":new-page:`SignalFx 用 Ruby クライアント・ライブラリ<https://github.com/signalfx/signalfx-ruby>` on GitHub"

#: ../../gdi/get-data-in/get-data-in.rst:362
msgid "Instrument serverless functions"
msgstr "サーバーレス機能を実装する"

#: ../../gdi/get-data-in/get-data-in.rst:369
msgid "8. Use the Splunk Observability Cloud API to send custom data"
msgstr "8.Splunk Observability Cloud API を使用してカスタムデータを送信する"

#: ../../gdi/get-data-in/get-data-in.rst:371
msgid "Now that you have built-in data from your full stack flowing into Splunk Observability Cloud, assess whether there are custom data points you need to bring in. You can use the Splunk Observability Cloud API to bring in custom data."
msgstr "フルスタックからの組み込みデータが Splunk Observability Cloud に流れ込むようになったので、取り込む必要のあるカスタムデータポイントがあるかどうかを評価する。Splunk Observability Cloud API を使用して、カスタムデータを取り込むことができます。"

#: ../../gdi/get-data-in/get-data-in.rst:373
msgid "You might want to use the API if you want to integrate with:"
msgstr "と統合したい場合は、APIを使用することをお勧めします："

#: ../../gdi/get-data-in/get-data-in.rst:375
msgid "A third-party tool that provides an API/webhook integration only."
msgstr "API/ウェブフック統合のみを提供するサードパーティツール。"

#: ../../gdi/get-data-in/get-data-in.rst:376
msgid "An application written in a language we don't provide a library for."
msgstr "私たちがライブラリを提供していない言語で書かれたアプリケーション。"

#: ../../gdi/get-data-in/get-data-in.rst:378
msgid "This API integration can send all types of data to Splunk Observability Cloud. While you can use the API to send logs to Log Observer, we recommend using other integration types to do so. For details about which integrations can send logs to Log Observer, see :ref:`gdi-per-product`."
msgstr "この API 統合は、あらゆる種類のデータを Splunk Observability Cloud に送信できます。APIを使用してLog Observerにログを送信することはできますが、他の統合タイプを使用することをお勧めします。Log Observer にログを送信できる統合の詳細については、:ref:`gdi-per-product` を参照してください。"

#: ../../gdi/get-data-in/get-data-in.rst:380
msgid "After you've configured your integration to send custom data, you can access your data in the following locations:"
msgstr "カスタムデータを送信するように統合を設定した後、以下の場所でデータにアクセスできます："

#: ../../gdi/get-data-in/get-data-in.rst:382
msgid "View traces on the APM landing page to :ref:`assess the health of your applications <apm-landing-page>`."
msgstr "APM のランディングページでトレースを表示し、:ref:`assess the health of your applications <apm-landing-page>` 。"

#: ../../gdi/get-data-in/get-data-in.rst:383
msgid "View traces in the APM Explorer view to :ref:`assess dependencies among your applications <apm-service-map>`."
msgstr "APM Explorer ビューでトレースを表示し、:ref:`assess dependencies among your applications <apm-service-map>` 。"

#: ../../gdi/get-data-in/get-data-in.rst:384
msgid "Search for metrics at the :ref:`Metric Finder <metric-finder>`, or use the :ref:`metrics pipeline management tool <metrics-pipeline-intro>`."
msgstr ":ref:`Metric Finder <metric-finder>` でメトリックスを検索するか、:ref:`metrics pipeline management tool <metrics-pipeline-intro>` をご利用ください。"

#: ../../gdi/get-data-in/get-data-in.rst:385
msgid "Query logs :ref:`using Log Observer <logs-timeline>`, if you chose to ingest logs."
msgstr "クエリ・ログ:ref:`using Log Observer <logs-timeline>` 、ログを取り込むことを選択した場合。"

#: ../../gdi/get-data-in/get-data-in.rst:390
msgid "For information about using the Splunk Observability Cloud API to send custom data, see :ref:`rest-api-ingest`."
msgstr "Splunk Observability Cloud API を使用してカスタムデータを送信する方法については、:ref:`rest-api-ingest` を参照してください。"

#: ../../gdi/get-data-in/get-data-in.rst:394
msgid "Next: Leverage the full benefits of Splunk Observability Cloud"
msgstr "次へSplunk Observability Cloud のメリットを最大限に活用する"

#: ../../gdi/get-data-in/get-data-in.rst:396
msgid "Now that you have your desired full stack of data coming into Splunk Observability Cloud, consider exploring the following features that can help you monitor, visualize, and coordinate team work around your data:"
msgstr "Splunk Observability Cloud に必要なフルスタックデータを取り込んだら、データの監視、可視化、チーム作業の調整に役立つ以下の機能を検討してみてください："

#: ../../gdi/get-data-in/get-data-in.rst:398
msgid ":ref:`Create detectors <create-detectors>` to receive alerts about conditions in your data that are important you."
msgstr ":ref:`Create detectors <create-detectors>` をクリックすると、重要なデータの状態に関するアラートを受け取ることができます。"

#: ../../gdi/get-data-in/get-data-in.rst:399
msgid ":ref:`Create charts <create-charts>` to visualize your data."
msgstr ":ref:`Create charts <create-charts>` データを視覚化する。"

#: ../../gdi/get-data-in/get-data-in.rst:401
msgid ":ref:`Create and customize dashboards <dashboard-create-customize>` to organize and share your charts."
msgstr ":ref:`Create and customize dashboards <dashboard-create-customize>` あなたのチャートを整理し、共有する。"

#: ../../gdi/get-data-in/get-data-in.rst:402
msgid ":ref:`admin-manage-teams` to coordinate team work around your data."
msgstr ":ref:`admin-manage-teams` あなたのデータに関連するチームワークを調整する。"

#: ../../gdi/get-data-in/get-data-in.rst:403
msgid "Check system critical metrics, access real-time alerts, and view mobile-friendly dashboards on the go using the :ref:`Splunk Observability Cloud mobile app <intro-to-mobile>`."
msgstr ":ref:`Splunk Observability Cloud mobile app <intro-to-mobile>` を使用して、システムの重要なメトリクスをチェックし、リアルタイムのアラートにアクセスし、モバイルフレンドリーなダッシュボードを表示します。"

#: ../../gdi/get-data-in/get-data-in.rst:404
msgid "Learn more about :ref:`the Splunk Observability Cloud data model <data-model>`."
msgstr ":ref:`the Splunk Observability Cloud data model <data-model>` 。"

#: ../../gdi/get-data-in/get-data-in.rst:409
msgid "Learn more about each product in the Splunk Observability Cloud suite:"
msgstr "Splunk Observability Cloud スイートの各製品の詳細については、こちらをご覧ください："

#: ../../gdi/get-data-in/get-data-in.rst:406
msgid ":ref:`get-started-apm`"
msgstr ":ref:`get-started-apm`"

#: ../../gdi/get-data-in/get-data-in.rst:407
msgid ":ref:`get-started-infrastructure`"
msgstr ":ref:`get-started-infrastructure`"

#: ../../gdi/get-data-in/get-data-in.rst:408
msgid ":ref:`get-started-logs`"
msgstr ":ref:`get-started-logs`"

#: ../../gdi/get-data-in/get-data-in.rst:409
msgid ":ref:`get-started-rum`"
msgstr ":ref:`get-started-rum`"

#: ../../gdi/get-data-in/get-data-in.rst:412
msgid "Support"
msgstr "サポート"

#: ../../gdi/get-data-in/get-data-in.rst:414
msgid "If you need assistance setting up or using Splunk Observability Cloud, check the Troubleshooting docs for each feature, or contact :ref:`support`."
msgstr "Splunk Observability Cloud の設定や使用にサポートが必要な場合は、各機能のトラブルシューティング ドキュメントを確認するか、:ref:`support` までお問い合わせください。"

#: ../../gdi/get-data-in/integrations.rst:-1
msgid "This page provides a listing of integrations and services supported by Splunk Observability Cloud."
msgstr "このページでは、Splunk Observability Cloud がサポートする統合とサービスの一覧を提供します。"

#: ../../gdi/get-data-in/integrations.rst:5
msgid "Supported integrations"
msgstr "サポートされている統合"

#: ../../gdi/get-data-in/integrations.rst:10
msgid "This page provides the list of integrations supported by Splunk Observability Cloud."
msgstr "このページでは、Splunk Observability Cloud でサポートされる統合のリストを提供します。"

#: ../../gdi/get-data-in/integrations.rst:16
msgid "Amazon Web Services"
msgstr "Amazon Web Services"

#: ../../gdi/get-data-in/integrations.rst:18
msgid "To learn about AWS and Splunk Observability Cloud, read the following:"
msgstr "AWSとSplunk Observability Cloudについては、以下をお読みください："

#: ../../gdi/get-data-in/integrations.rst:20
msgid ":ref:`get-started-aws`"
msgstr ":ref:`get-started-aws`"

#: ../../gdi/get-data-in/integrations.rst:21
msgid "Refer to the AWS official documentation for a list of the available AWS metrics and other data, or read about :ref:`the metadata Splunk Observability Cloud provides <aws-infra-metadata>`"
msgstr "利用可能なAWSメトリクスのリストやその他のデータについては、AWS公式ドキュメントを参照してください。 :ref:`the metadata Splunk Observability Cloud provides <aws-infra-metadata>`"

#: ../../gdi/get-data-in/integrations.rst:22
msgid ":ref:`aws-logs`"
msgstr ":ref:`aws-logs`"

#: ../../gdi/get-data-in/integrations.rst:23
msgid ":ref:`infrastructure-aws`"
msgstr ":ref:`infrastructure-aws`"

#: ../../gdi/get-data-in/integrations.rst:25
msgid "The following AWS services send data to Infrastructure Monitoring:"
msgstr "以下のAWSサービスは、Infrastructure Monitoringにデータを送信します："

#: ../../gdi/get-data-in/integrations.rst:33
msgid ":strong:`Namespace`"
msgstr ":strong:`名前空間`"

#: ../../gdi/get-data-in/integrations.rst:34
msgid ":strong:`Service`"
msgstr ":strong:`サービス`"

#: ../../_includes/application-receiver-table.rst:8 ../../gdi/get-data-in/integrations.rst:35 ../../gdi/get-data-in/integrations.rst:1041 ../../gdi/get-data-in/integrations.rst:1073
msgid ":strong:`Provides metrics`"
msgstr ":strong:`メトリクスの提供`"

#: ../../_includes/application-receiver-table.rst:9 ../../gdi/get-data-in/integrations.rst:36 ../../gdi/get-data-in/integrations.rst:1042 ../../gdi/get-data-in/integrations.rst:1074
msgid ":strong:`Provides traces`"
msgstr ":strong:`痕跡を提供`"

#: ../../_includes/application-receiver-table.rst:10 ../../gdi/get-data-in/integrations.rst:37 ../../gdi/get-data-in/integrations.rst:1043 ../../gdi/get-data-in/integrations.rst:1075
msgid ":strong:`Provides logs`"
msgstr ":strong:`ログの提供`"

#: ../../gdi/get-data-in/integrations.rst:38
msgid ":strong:`Provides metadata`"
msgstr ":strong:`メタデータを提供する`"

#: ../../gdi/get-data-in/integrations.rst:40
msgid "AWS/ACMPrivateCA"
msgstr "AWS/ACMPrivateCA"

#: ../../gdi/get-data-in/integrations.rst:41
msgid "ACM Private CA"
msgstr "ACMプライベートCA"

#: ../../_includes/application-receiver-table.rst:13 ../../_includes/application-receiver-table.rst:18 ../../_includes/application-receiver-table.rst:23 ../../_includes/application-receiver-table.rst:28 ../../_includes/application-receiver-table.rst:30 ../../_includes/application-receiver-table.rst:33 ../../_includes/application-receiver-table.rst:38 ../../_includes/application-receiver-table.rst:43 ../../_includes/application-receiver-table.rst:48 ../../_includes/application-receiver-table.rst:53 ../../_includes/application-receiver-table.rst:58 ../../_includes/application-receiver-table.rst:63 ../../_includes/application-receiver-table.rst:68
#: ../../_includes/application-receiver-table.rst:70 ../../_includes/application-receiver-table.rst:73 ../../_includes/application-receiver-table.rst:78 ../../_includes/application-receiver-table.rst:83 ../../_includes/application-receiver-table.rst:88 ../../_includes/application-receiver-table.rst:93 ../../_includes/application-receiver-table.rst:98 ../../_includes/application-receiver-table.rst:103 ../../_includes/application-receiver-table.rst:108 ../../_includes/application-receiver-table.rst:113 ../../_includes/application-receiver-table.rst:118 ../../_includes/application-receiver-table.rst:123 ../../_includes/application-receiver-table.rst:128
#: ../../_includes/application-receiver-table.rst:133 ../../_includes/application-receiver-table.rst:138 ../../_includes/application-receiver-table.rst:143 ../../_includes/application-receiver-table.rst:148 ../../_includes/application-receiver-table.rst:150 ../../_includes/application-receiver-table.rst:153 ../../_includes/application-receiver-table.rst:158 ../../_includes/application-receiver-table.rst:163 ../../_includes/application-receiver-table.rst:165 ../../_includes/application-receiver-table.rst:168 ../../_includes/application-receiver-table.rst:170 ../../_includes/application-receiver-table.rst:173 ../../_includes/application-receiver-table.rst:178
#: ../../_includes/application-receiver-table.rst:183 ../../_includes/application-receiver-table.rst:188 ../../_includes/application-receiver-table.rst:193 ../../_includes/application-receiver-table.rst:198 ../../_includes/application-receiver-table.rst:203 ../../_includes/application-receiver-table.rst:208 ../../_includes/application-receiver-table.rst:213 ../../_includes/application-receiver-table.rst:218 ../../_includes/application-receiver-table.rst:223 ../../_includes/application-receiver-table.rst:228 ../../_includes/application-receiver-table.rst:235 ../../_includes/application-receiver-table.rst:238 ../../_includes/application-receiver-table.rst:243
#: ../../_includes/application-receiver-table.rst:248 ../../_includes/application-receiver-table.rst:249 ../../_includes/application-receiver-table.rst:250 ../../_includes/application-receiver-table.rst:253 ../../_includes/application-receiver-table.rst:254 ../../_includes/application-receiver-table.rst:255 ../../_includes/application-receiver-table.rst:258 ../../_includes/application-receiver-table.rst:263 ../../_includes/application-receiver-table.rst:268 ../../_includes/application-receiver-table.rst:273 ../../_includes/application-receiver-table.rst:278 ../../_includes/application-receiver-table.rst:283 ../../_includes/application-receiver-table.rst:288
#: ../../_includes/application-receiver-table.rst:293 ../../_includes/application-receiver-table.rst:295 ../../_includes/application-receiver-table.rst:298 ../../_includes/application-receiver-table.rst:300 ../../_includes/application-receiver-table.rst:303 ../../_includes/application-receiver-table.rst:305 ../../_includes/application-receiver-table.rst:308 ../../_includes/application-receiver-table.rst:313 ../../_includes/application-receiver-table.rst:315 ../../_includes/application-receiver-table.rst:318 ../../_includes/application-receiver-table.rst:323 ../../_includes/application-receiver-table.rst:325 ../../_includes/application-receiver-table.rst:328
#: ../../_includes/application-receiver-table.rst:330 ../../_includes/application-receiver-table.rst:333 ../../_includes/application-receiver-table.rst:340 ../../_includes/application-receiver-table.rst:343 ../../_includes/application-receiver-table.rst:348 ../../_includes/application-receiver-table.rst:353 ../../_includes/application-receiver-table.rst:355 ../../_includes/application-receiver-table.rst:358 ../../_includes/application-receiver-table.rst:362 ../../_includes/application-receiver-table.rst:367 ../../_includes/application-receiver-table.rst:372 ../../_includes/application-receiver-table.rst:377 ../../_includes/application-receiver-table.rst:382
#: ../../_includes/application-receiver-table.rst:387 ../../_includes/application-receiver-table.rst:392 ../../_includes/application-receiver-table.rst:397 ../../_includes/application-receiver-table.rst:402 ../../_includes/application-receiver-table.rst:404 ../../_includes/application-receiver-table.rst:407 ../../_includes/application-receiver-table.rst:412 ../../_includes/application-receiver-table.rst:417 ../../_includes/application-receiver-table.rst:422 ../../_includes/application-receiver-table.rst:424 ../../_includes/application-receiver-table.rst:427 ../../_includes/application-receiver-table.rst:432 ../../_includes/application-receiver-table.rst:437
#: ../../_includes/application-receiver-table.rst:442 ../../_includes/application-receiver-table.rst:447 ../../_includes/application-receiver-table.rst:452 ../../_includes/application-receiver-table.rst:457 ../../_includes/application-receiver-table.rst:462 ../../_includes/application-receiver-table.rst:464 ../../_includes/application-receiver-table.rst:467 ../../_includes/application-receiver-table.rst:472 ../../_includes/application-receiver-table.rst:477 ../../_includes/application-receiver-table.rst:482 ../../_includes/application-receiver-table.rst:487 ../../_includes/application-receiver-table.rst:492 ../../_includes/application-receiver-table.rst:497
#: ../../_includes/application-receiver-table.rst:502 ../../_includes/application-receiver-table.rst:507 ../../_includes/application-receiver-table.rst:509 ../../_includes/application-receiver-table.rst:512 ../../_includes/application-receiver-table.rst:514 ../../_includes/application-receiver-table.rst:517 ../../_includes/application-receiver-table.rst:522 ../../_includes/application-receiver-table.rst:523 ../../_includes/application-receiver-table.rst:527 ../../_includes/application-receiver-table.rst:532 ../../_includes/application-receiver-table.rst:537 ../../_includes/application-receiver-table.rst:542 ../../_includes/application-receiver-table.rst:547
#: ../../_includes/application-receiver-table.rst:552 ../../_includes/application-receiver-table.rst:557 ../../_includes/application-receiver-table.rst:562 ../../_includes/application-receiver-table.rst:567 ../../_includes/application-receiver-table.rst:572 ../../_includes/application-receiver-table.rst:577 ../../gdi/get-data-in/integrations.rst:42 ../../gdi/get-data-in/integrations.rst:49 ../../gdi/get-data-in/integrations.rst:51 ../../gdi/get-data-in/integrations.rst:56 ../../gdi/get-data-in/integrations.rst:59 ../../gdi/get-data-in/integrations.rst:63 ../../gdi/get-data-in/integrations.rst:65 ../../gdi/get-data-in/integrations.rst:66
#: ../../gdi/get-data-in/integrations.rst:70 ../../gdi/get-data-in/integrations.rst:77 ../../gdi/get-data-in/integrations.rst:84 ../../gdi/get-data-in/integrations.rst:87 ../../gdi/get-data-in/integrations.rst:91 ../../gdi/get-data-in/integrations.rst:98 ../../gdi/get-data-in/integrations.rst:105 ../../gdi/get-data-in/integrations.rst:112 ../../gdi/get-data-in/integrations.rst:114 ../../gdi/get-data-in/integrations.rst:115 ../../gdi/get-data-in/integrations.rst:119 ../../gdi/get-data-in/integrations.rst:126 ../../gdi/get-data-in/integrations.rst:133 ../../gdi/get-data-in/integrations.rst:135 ../../gdi/get-data-in/integrations.rst:140
#: ../../gdi/get-data-in/integrations.rst:142 ../../gdi/get-data-in/integrations.rst:147 ../../gdi/get-data-in/integrations.rst:154 ../../gdi/get-data-in/integrations.rst:161 ../../gdi/get-data-in/integrations.rst:168 ../../gdi/get-data-in/integrations.rst:171 ../../gdi/get-data-in/integrations.rst:175 ../../gdi/get-data-in/integrations.rst:178 ../../gdi/get-data-in/integrations.rst:182 ../../gdi/get-data-in/integrations.rst:183 ../../gdi/get-data-in/integrations.rst:185 ../../gdi/get-data-in/integrations.rst:189 ../../gdi/get-data-in/integrations.rst:192 ../../gdi/get-data-in/integrations.rst:196 ../../gdi/get-data-in/integrations.rst:197
#: ../../gdi/get-data-in/integrations.rst:199 ../../gdi/get-data-in/integrations.rst:203 ../../gdi/get-data-in/integrations.rst:210 ../../gdi/get-data-in/integrations.rst:211 ../../gdi/get-data-in/integrations.rst:213 ../../gdi/get-data-in/integrations.rst:217 ../../gdi/get-data-in/integrations.rst:220 ../../gdi/get-data-in/integrations.rst:224 ../../gdi/get-data-in/integrations.rst:225 ../../gdi/get-data-in/integrations.rst:226 ../../gdi/get-data-in/integrations.rst:227 ../../gdi/get-data-in/integrations.rst:231 ../../gdi/get-data-in/integrations.rst:232 ../../gdi/get-data-in/integrations.rst:233 ../../gdi/get-data-in/integrations.rst:234
#: ../../gdi/get-data-in/integrations.rst:238 ../../gdi/get-data-in/integrations.rst:240 ../../gdi/get-data-in/integrations.rst:241 ../../gdi/get-data-in/integrations.rst:245 ../../gdi/get-data-in/integrations.rst:252 ../../gdi/get-data-in/integrations.rst:255 ../../gdi/get-data-in/integrations.rst:259 ../../gdi/get-data-in/integrations.rst:266 ../../gdi/get-data-in/integrations.rst:269 ../../gdi/get-data-in/integrations.rst:273 ../../gdi/get-data-in/integrations.rst:276 ../../gdi/get-data-in/integrations.rst:280 ../../gdi/get-data-in/integrations.rst:282 ../../gdi/get-data-in/integrations.rst:287 ../../gdi/get-data-in/integrations.rst:289
#: ../../gdi/get-data-in/integrations.rst:290 ../../gdi/get-data-in/integrations.rst:294 ../../gdi/get-data-in/integrations.rst:301 ../../gdi/get-data-in/integrations.rst:308 ../../gdi/get-data-in/integrations.rst:315 ../../gdi/get-data-in/integrations.rst:317 ../../gdi/get-data-in/integrations.rst:322 ../../gdi/get-data-in/integrations.rst:329 ../../gdi/get-data-in/integrations.rst:331 ../../gdi/get-data-in/integrations.rst:336 ../../gdi/get-data-in/integrations.rst:337 ../../gdi/get-data-in/integrations.rst:339 ../../gdi/get-data-in/integrations.rst:343 ../../gdi/get-data-in/integrations.rst:344 ../../gdi/get-data-in/integrations.rst:346
#: ../../gdi/get-data-in/integrations.rst:350 ../../gdi/get-data-in/integrations.rst:357 ../../gdi/get-data-in/integrations.rst:364 ../../gdi/get-data-in/integrations.rst:365 ../../gdi/get-data-in/integrations.rst:366 ../../gdi/get-data-in/integrations.rst:367 ../../gdi/get-data-in/integrations.rst:371 ../../gdi/get-data-in/integrations.rst:378 ../../gdi/get-data-in/integrations.rst:385 ../../gdi/get-data-in/integrations.rst:392 ../../gdi/get-data-in/integrations.rst:399 ../../gdi/get-data-in/integrations.rst:406 ../../gdi/get-data-in/integrations.rst:413 ../../gdi/get-data-in/integrations.rst:420 ../../gdi/get-data-in/integrations.rst:423
#: ../../gdi/get-data-in/integrations.rst:427 ../../gdi/get-data-in/integrations.rst:434 ../../gdi/get-data-in/integrations.rst:436 ../../gdi/get-data-in/integrations.rst:437 ../../gdi/get-data-in/integrations.rst:441 ../../gdi/get-data-in/integrations.rst:443 ../../gdi/get-data-in/integrations.rst:448 ../../gdi/get-data-in/integrations.rst:455 ../../gdi/get-data-in/integrations.rst:456 ../../gdi/get-data-in/integrations.rst:458 ../../gdi/get-data-in/integrations.rst:462 ../../gdi/get-data-in/integrations.rst:463 ../../gdi/get-data-in/integrations.rst:465 ../../gdi/get-data-in/integrations.rst:469 ../../gdi/get-data-in/integrations.rst:471
#: ../../gdi/get-data-in/integrations.rst:476 ../../gdi/get-data-in/integrations.rst:479 ../../gdi/get-data-in/integrations.rst:483 ../../gdi/get-data-in/integrations.rst:485 ../../gdi/get-data-in/integrations.rst:486 ../../gdi/get-data-in/integrations.rst:490 ../../gdi/get-data-in/integrations.rst:497 ../../gdi/get-data-in/integrations.rst:499 ../../gdi/get-data-in/integrations.rst:504 ../../gdi/get-data-in/integrations.rst:506 ../../gdi/get-data-in/integrations.rst:511 ../../gdi/get-data-in/integrations.rst:513 ../../gdi/get-data-in/integrations.rst:518 ../../gdi/get-data-in/integrations.rst:520 ../../gdi/get-data-in/integrations.rst:525
#: ../../gdi/get-data-in/integrations.rst:532 ../../gdi/get-data-in/integrations.rst:539 ../../gdi/get-data-in/integrations.rst:540 ../../gdi/get-data-in/integrations.rst:542 ../../gdi/get-data-in/integrations.rst:546 ../../gdi/get-data-in/integrations.rst:547 ../../gdi/get-data-in/integrations.rst:549 ../../gdi/get-data-in/integrations.rst:553 ../../gdi/get-data-in/integrations.rst:556 ../../gdi/get-data-in/integrations.rst:560 ../../gdi/get-data-in/integrations.rst:567 ../../gdi/get-data-in/integrations.rst:574 ../../gdi/get-data-in/integrations.rst:581 ../../gdi/get-data-in/integrations.rst:588 ../../gdi/get-data-in/integrations.rst:595
#: ../../gdi/get-data-in/integrations.rst:602 ../../gdi/get-data-in/integrations.rst:605 ../../gdi/get-data-in/integrations.rst:609 ../../gdi/get-data-in/integrations.rst:616 ../../gdi/get-data-in/integrations.rst:623 ../../gdi/get-data-in/integrations.rst:626 ../../gdi/get-data-in/integrations.rst:630 ../../gdi/get-data-in/integrations.rst:637 ../../gdi/get-data-in/integrations.rst:639 ../../gdi/get-data-in/integrations.rst:644 ../../gdi/get-data-in/integrations.rst:651 ../../gdi/get-data-in/integrations.rst:658 ../../gdi/get-data-in/integrations.rst:1046 ../../gdi/get-data-in/integrations.rst:1047 ../../gdi/get-data-in/integrations.rst:1048
#: ../../gdi/get-data-in/integrations.rst:1051 ../../gdi/get-data-in/integrations.rst:1052 ../../gdi/get-data-in/integrations.rst:1056 ../../gdi/get-data-in/integrations.rst:1057 ../../gdi/get-data-in/integrations.rst:1079 ../../gdi/get-data-in/integrations.rst:1084 ../../gdi/get-data-in/integrations.rst:1088 ../../gdi/get-data-in/integrations.rst:1089 ../../gdi/get-data-in/integrations.rst:1094 ../../gdi/get-data-in/integrations.rst:1099 ../../gdi/get-data-in/integrations.rst:1104 ../../gdi/get-data-in/integrations.rst:1109 ../../gdi/get-data-in/integrations.rst:1114
msgid ":strong:`X`"
msgstr ":strong:`X`"

#: ../../gdi/get-data-in/integrations.rst:47
msgid "AWS/AmazonMQ"
msgstr "AWS/AmazonMQ"

#: ../../gdi/get-data-in/integrations.rst:48
msgid "Amazon Managed Message Broker (MQ)"
msgstr "アマゾン・マネージド・メッセージ・ブローカー（MQ）"

#: ../../gdi/get-data-in/integrations.rst:54
msgid "AWS/ApiGateway"
msgstr "AWS/ApiGateway"

#: ../../gdi/get-data-in/integrations.rst:55
msgid "Amazon API Gateway"
msgstr "アマゾンAPIゲートウェイ"

#: ../../gdi/get-data-in/integrations.rst:61
msgid "AWS/ApplicationELB"
msgstr "AWS/ApplicationELB"

#: ../../gdi/get-data-in/integrations.rst:62
msgid "AWS Elastic Load Balancing (Application Load Balancers)"
msgstr "AWS Elastic Load Balancing（アプリケーションロードバランサー）"

#: ../../gdi/get-data-in/integrations.rst:68
msgid "AWS/AppStream"
msgstr "AWS/AppStream"

#: ../../gdi/get-data-in/integrations.rst:69
msgid "AppStream 2.0"
msgstr "AppStream 2.0"

#: ../../gdi/get-data-in/integrations.rst:75
msgid "AWS/Athena"
msgstr "AWS/Athena"

#: ../../gdi/get-data-in/integrations.rst:76
msgid "Amazon Athena"
msgstr "アマゾン・アテナ"

#: ../../gdi/get-data-in/integrations.rst:82
msgid "AWS/AutoScaling"
msgstr "AWS/AutoScaling"

#: ../../gdi/get-data-in/integrations.rst:83
msgid "AWS Auto Scaling"
msgstr "AWSオートスケーリング"

#: ../../gdi/get-data-in/integrations.rst:86 ../../gdi/get-data-in/integrations.rst:121 ../../gdi/get-data-in/integrations.rst:212 ../../gdi/get-data-in/integrations.rst:373 ../../gdi/get-data-in/integrations.rst:611
msgid ":strong:`X` (1)"
msgstr ":strong:`X` (1)"

#: ../../gdi/get-data-in/integrations.rst:89
msgid "AWS/Backup"
msgstr "AWS/Backup"

#: ../../gdi/get-data-in/integrations.rst:90
msgid "Amazon Backup"
msgstr "アマゾンのバックアップ"

#: ../../gdi/get-data-in/integrations.rst:96
msgid "AWS/Billing"
msgstr "AWS/Billing"

#: ../../gdi/get-data-in/integrations.rst:97
msgid "AWS Billing"
msgstr "AWS Billing"

#: ../../gdi/get-data-in/integrations.rst:103
msgid "AWS/CertificateManager"
msgstr "AWS/CertificateManager"

#: ../../gdi/get-data-in/integrations.rst:104
msgid "AWS Certificate Manager"
msgstr "AWS証明書マネージャ"

#: ../../gdi/get-data-in/integrations.rst:110
msgid "AWS/CloudFront"
msgstr "AWS/CloudFront"

#: ../../gdi/get-data-in/integrations.rst:111
msgid "AWS CloudFront"
msgstr "AWS CloudFront"

#: ../../gdi/get-data-in/integrations.rst:117
msgid "AWS/CloudHSM"
msgstr "AWS/CloudHSM"

#: ../../gdi/get-data-in/integrations.rst:118
msgid "AWS CloudHSM"
msgstr "AWS CloudHSM"

#: ../../gdi/get-data-in/integrations.rst:124
msgid "AWS/CloudSearch"
msgstr "AWS/CloudSearch"

#: ../../gdi/get-data-in/integrations.rst:125
msgid "Amazon CloudSearch"
msgstr "Amazon CloudSearch"

#: ../../gdi/get-data-in/integrations.rst:131
msgid "AWS/CodeBuild"
msgstr "AWS/CodeBuild"

#: ../../gdi/get-data-in/integrations.rst:132
msgid "AWS CodeBuild"
msgstr "AWS CodeBuild"

#: ../../gdi/get-data-in/integrations.rst:138
msgid "AWS/Cognito"
msgstr "AWS/Cognito"

#: ../../gdi/get-data-in/integrations.rst:139
msgid "Amazon Cognito"
msgstr "Amazon Cognito"

#: ../../gdi/get-data-in/integrations.rst:145
msgid "AWS/Connect"
msgstr "AWS/Connect"

#: ../../gdi/get-data-in/integrations.rst:146
msgid "Amazon Connect"
msgstr "アマゾンコネクト"

#: ../../gdi/get-data-in/integrations.rst:152
msgid "AWS/DDoSProtection"
msgstr "AWS/DDoSProtection"

#: ../../gdi/get-data-in/integrations.rst:153
msgid "AWS Shield Advanced"
msgstr "AWSシールド・アドバンス"

#: ../../gdi/get-data-in/integrations.rst:159
msgid "AWS/DMS"
msgstr "AWS/DMS"

#: ../../gdi/get-data-in/integrations.rst:160
msgid "AWS Database Migration Service"
msgstr "AWSデータベース移行サービス"

#: ../../gdi/get-data-in/integrations.rst:166
msgid "AWS/DocDB"
msgstr "AWS/DocDB"

#: ../../gdi/get-data-in/integrations.rst:167
msgid "Amazon DocumentDB"
msgstr "アマゾンDocumentDB"

#: ../../gdi/get-data-in/integrations.rst:173
msgid "AWS/DX"
msgstr "AWS/DX"

#: ../../gdi/get-data-in/integrations.rst:174
msgid "AWS Direct Connect"
msgstr "AWSダイレクトコネクト"

#: ../../gdi/get-data-in/integrations.rst:180
msgid "AWS/DynamoDB"
msgstr "AWS/DynamoDB"

#: ../../gdi/get-data-in/integrations.rst:181
msgid "Amazon DynamoDB"
msgstr "Amazon DynamoDB"

#: ../../gdi/get-data-in/integrations.rst:187
msgid "AWS/EBS"
msgstr "AWS/EBS"

#: ../../gdi/get-data-in/integrations.rst:188
msgid "Amazon Elastic Block Store (EBS)"
msgstr "アマゾン・エラスティック・ブロック・ストア（EBS）"

#: ../../gdi/get-data-in/integrations.rst:194
msgid "AWS/EC2"
msgstr "AWS/EC2"

#: ../../gdi/get-data-in/integrations.rst:195
msgid "Amazon Elastic Compute Cloud (EC2)"
msgstr "Amazon Elastic Compute Cloud (EC2)"

#: ../../gdi/get-data-in/integrations.rst:198 ../../gdi/get-data-in/integrations.rst:205
msgid ":strong:`X` (3)"
msgstr ":strong:`X` (3)"

#: ../../gdi/get-data-in/integrations.rst:201
msgid "AWS/EC2Spot"
msgstr "AWS/EC2Spot"

#: ../../gdi/get-data-in/integrations.rst:202
msgid "Amazon EC2 Spot Instances"
msgstr "Amazon EC2 スポットインスタンス"

#: ../../gdi/get-data-in/integrations.rst:208
msgid "AWS/ECS"
msgstr "AWS/ECS"

#: ../../gdi/get-data-in/integrations.rst:209
msgid "Amazon EC2 Container Service (ECS)"
msgstr "Amazon EC2 Container Service (ECS)"

#: ../../gdi/get-data-in/integrations.rst:215
msgid "AWS/EFS"
msgstr "AWS/EFS"

#: ../../gdi/get-data-in/integrations.rst:216
msgid "Amazon Elastic File System"
msgstr "アマゾンエラスティックファイルシステム"

#: ../../gdi/get-data-in/integrations.rst:222
msgid "AWS/EKS"
msgstr "AWS/EKS"

#: ../../gdi/get-data-in/integrations.rst:223
msgid "Amazon Elastic Kubernetes Service (EKS)"
msgstr "Amazon Elastic Kubernetes Service (EKS)"

#: ../../gdi/get-data-in/integrations.rst:229
msgid "AWS/ElastiCache"
msgstr "AWS/ElastiCache"

#: ../../gdi/get-data-in/integrations.rst:230
msgid "Amazon ElastiCache"
msgstr "Amazon ElastiCache"

#: ../../gdi/get-data-in/integrations.rst:236
msgid "AWS/ElasticBeanstalk"
msgstr "AWS/ElasticBeanstalk"

#: ../../gdi/get-data-in/integrations.rst:237
msgid "AWS Elastic Beanstalk"
msgstr "AWS Elastic Beanstalk"

#: ../../gdi/get-data-in/integrations.rst:243
msgid "AWS/ElasticInterface"
msgstr "AWS/ElasticInterface"

#: ../../gdi/get-data-in/integrations.rst:244
msgid "Amazon Elastic Interface"
msgstr "アマゾン・エラスティック・インターフェイス"

#: ../../gdi/get-data-in/integrations.rst:250
msgid "AWS/ElasticMapReduce"
msgstr "AWS/ElasticMapReduce"

#: ../../gdi/get-data-in/integrations.rst:251
msgid "Amazon Elastic MapReduce (EMR)"
msgstr "Amazon Elastic MapReduce (EMR)"

#: ../../gdi/get-data-in/integrations.rst:257
msgid "AWS/ElasticTranscoder"
msgstr "AWS/ElasticTranscoder"

#: ../../gdi/get-data-in/integrations.rst:258
msgid "Amazon Elastic Transcoder"
msgstr "Amazon Elastic Transcoder"

#: ../../gdi/get-data-in/integrations.rst:264
msgid "AWS/ELB"
msgstr "AWS/ELB"

#: ../../gdi/get-data-in/integrations.rst:265
msgid "AWS Elastic Load Balancing (Classic Load Balancers)"
msgstr "AWS Elastic Load Balancing（クラシック・ロードバランサー）"

#: ../../gdi/get-data-in/integrations.rst:271
msgid "AWS/ES"
msgstr "AWS/ES"

#: ../../gdi/get-data-in/integrations.rst:272
msgid "Amazon Elasticsearch Service"
msgstr "Amazon Elasticsearchサービス"

#: ../../gdi/get-data-in/integrations.rst:278
msgid "AWS/Events"
msgstr "AWS/イベント"

#: ../../gdi/get-data-in/integrations.rst:279
msgid "Amazon CloudWatch Events"
msgstr "Amazon CloudWatchイベント"

#: ../../gdi/get-data-in/integrations.rst:285
msgid "AWS/Firehose"
msgstr "AWS/Firehose"

#: ../../gdi/get-data-in/integrations.rst:286
msgid "Amazon Kinesis Firehose"
msgstr "Amazon Kinesis Firehose"

#: ../../gdi/get-data-in/integrations.rst:292
msgid "AWS/FSx"
msgstr "AWS/FSx"

#: ../../gdi/get-data-in/integrations.rst:293
msgid "Amazon FSx for Lustre or Windows File Server"
msgstr "Amazon FSx for Lustre または Windows ファイルサーバー"

#: ../../gdi/get-data-in/integrations.rst:299
msgid "AWS/GameLift"
msgstr "AWS/GameLift"

#: ../../gdi/get-data-in/integrations.rst:300
msgid "Amazon GameLift"
msgstr "Amazon GameLift"

#: ../../gdi/get-data-in/integrations.rst:306
msgid "AWS/Inspector"
msgstr "AWS/インスペクター"

#: ../../gdi/get-data-in/integrations.rst:307
msgid "Amazon Inspector"
msgstr "アマゾン・インスペクター"

#: ../../gdi/get-data-in/integrations.rst:313
msgid "AWS/IoT"
msgstr "AWS/IoT"

#: ../../gdi/get-data-in/integrations.rst:314
msgid "AWS IoT"
msgstr "AWS IoT"

#: ../../gdi/get-data-in/integrations.rst:320
msgid "AWS/IoTAnalytics"
msgstr "AWS/IoTAnalytics"

#: ../../gdi/get-data-in/integrations.rst:321
msgid "AWS IoT Analytics"
msgstr "AWS IoT Analytics"

#: ../../gdi/get-data-in/integrations.rst:327
msgid "AWS/Kafka"
msgstr "AWS/Kafka"

#: ../../gdi/get-data-in/integrations.rst:328
msgid "Amazon Managed Streaming for Kafka (MSK)"
msgstr "Amazon Managed Streaming for Kafka (MSK)"

#: ../../gdi/get-data-in/integrations.rst:334
msgid "AWS/Kinesis"
msgstr "AWS/キネシス"

#: ../../gdi/get-data-in/integrations.rst:335
msgid "Amazon Kinesis Streams"
msgstr "Amazon Kinesis Streams"

#: ../../gdi/get-data-in/integrations.rst:341
msgid "AWS/KinesisAnalytics"
msgstr "AWS/KinesisAnalytics"

#: ../../gdi/get-data-in/integrations.rst:342
msgid "Amazon Kinesis Analytics"
msgstr "アマゾン・キネシス・アナリティクス"

#: ../../gdi/get-data-in/integrations.rst:348
msgid "AWS/KinesisVideo"
msgstr "AWS/KinesisVideo"

#: ../../gdi/get-data-in/integrations.rst:349
msgid "Amazon Kinesis Video Streams"
msgstr "Amazon Kinesis ビデオストリーム"

#: ../../gdi/get-data-in/integrations.rst:355
msgid "AWS/KMS"
msgstr "AWS/KMS"

#: ../../gdi/get-data-in/integrations.rst:356
msgid "AWS Key Management Service"
msgstr "AWS鍵管理サービス"

#: ../../gdi/get-data-in/integrations.rst:362
msgid "AWS/Lambda"
msgstr "AWS/Lambda"

#: ../../gdi/get-data-in/integrations.rst:363
msgid "AWS Lambda"
msgstr "AWS Lambda"

#: ../../gdi/get-data-in/integrations.rst:369
msgid "AWS/Lex"
msgstr "AWS/Lex"

#: ../../gdi/get-data-in/integrations.rst:370
msgid "Amazon Lex"
msgstr "Amazon Lex"

#: ../../gdi/get-data-in/integrations.rst:376
msgid "AWS/Logs"
msgstr "AWS/Logs"

#: ../../gdi/get-data-in/integrations.rst:377
msgid "Amazon CloudWatch Logs"
msgstr "Amazon CloudWatchログ"

#: ../../gdi/get-data-in/integrations.rst:383
msgid "AWS/MediaConnect"
msgstr "AWS/MediaConnect"

#: ../../gdi/get-data-in/integrations.rst:384
msgid "AWS Elemental MediaConnect"
msgstr "AWS Elemental MediaConnect"

#: ../../gdi/get-data-in/integrations.rst:390
msgid "AWS/MediaConvert"
msgstr "AWS/MediaConvert"

#: ../../gdi/get-data-in/integrations.rst:391
msgid "AWS Elemental MediaConvert"
msgstr "AWS Elemental MediaConvert"

#: ../../gdi/get-data-in/integrations.rst:397
msgid "AWS/MediaPackage"
msgstr "AWS/MediaPackage"

#: ../../gdi/get-data-in/integrations.rst:398
msgid "AWS Elemental MediaPackage"
msgstr "AWS Elemental MediaPackage"

#: ../../gdi/get-data-in/integrations.rst:404
msgid "AWS/MediaTailor"
msgstr "AWS/MediaTailor"

#: ../../gdi/get-data-in/integrations.rst:405
msgid "AWS Elemental MediaTailor"
msgstr "AWS Elemental MediaTailor"

#: ../../gdi/get-data-in/integrations.rst:411
msgid "AWS/ML"
msgstr "AWS/ML"

#: ../../gdi/get-data-in/integrations.rst:412
msgid "Amazon Machine Learning"
msgstr "Amazon Machine Learning"

#: ../../gdi/get-data-in/integrations.rst:418
msgid "AWS/NATGateway"
msgstr "AWS/NATGateway"

#: ../../gdi/get-data-in/integrations.rst:419
msgid "Amazon VPC (NAT gateway)"
msgstr "アマゾンVPC（NATゲートウェイ）"

#: ../../gdi/get-data-in/integrations.rst:425
msgid "AWS/Neptune"
msgstr "AWS/Neptune"

#: ../../gdi/get-data-in/integrations.rst:426
msgid "Amazon Neptune"
msgstr "アマゾン・ネプチューン"

#: ../../gdi/get-data-in/integrations.rst:432
msgid "AWS/NetworkELB"
msgstr "AWS/NetworkELB"

#: ../../gdi/get-data-in/integrations.rst:433
msgid "AWS Elastic Load Balancing (Network Load Balancers)"
msgstr "AWS Elastic Load Balancing（ネットワークロードバランサー）"

#: ../../gdi/get-data-in/integrations.rst:439
msgid "AWS/OpsWorks"
msgstr "AWS/OpsWorks"

#: ../../gdi/get-data-in/integrations.rst:440
msgid "AWS OpsWorks"
msgstr "AWS OpsWorks"

#: ../../gdi/get-data-in/integrations.rst:446
msgid "AWS/Polly"
msgstr "AWS/Polly"

#: ../../gdi/get-data-in/integrations.rst:447
msgid "Amazon Polly"
msgstr "アマゾン・ポリー"

#: ../../gdi/get-data-in/integrations.rst:453
msgid "AWS/RDS"
msgstr "AWS/RDS"

#: ../../gdi/get-data-in/integrations.rst:454
msgid "Amazon Relational Database Service"
msgstr "アマゾン・リレーショナル・データベース・サービス"

#: ../../gdi/get-data-in/integrations.rst:460
msgid "AWS/Redshift"
msgstr "AWS/Redshift"

#: ../../gdi/get-data-in/integrations.rst:461
msgid "Amazon Redshift"
msgstr "Amazon Redshift"

#: ../../gdi/get-data-in/integrations.rst:467
msgid "AWS/Robomaker"
msgstr "AWS/Robomaker"

#: ../../gdi/get-data-in/integrations.rst:468
msgid "AWS RoboMaker"
msgstr "AWS RoboMaker"

#: ../../gdi/get-data-in/integrations.rst:474
msgid "AWS/Route53"
msgstr "AWS/Route53"

#: ../../gdi/get-data-in/integrations.rst:475
msgid "Amazon Route 53"
msgstr "アマゾン・ルート53"

#: ../../gdi/get-data-in/integrations.rst:481
msgid "AWS/S3"
msgstr "AWS/S3"

#: ../../gdi/get-data-in/integrations.rst:482
msgid "Amazon Simple Storage Service"
msgstr "アマゾン・シンプル・ストレージ・サービス"

#: ../../gdi/get-data-in/integrations.rst:488
msgid "AWS/S3/Storage-Lens"
msgstr "AWS/S3/Storage-Lens"

#: ../../gdi/get-data-in/integrations.rst:489
msgid "Amazon S3 Storage Lens"
msgstr "アマゾンS3ストレージレンズ"

#: ../../gdi/get-data-in/integrations.rst:495
msgid "AWS/SageMaker"
msgstr "AWS/SageMaker"

#: ../../gdi/get-data-in/integrations.rst:496
msgid "Amazon SageMaker"
msgstr "Amazon SageMaker"

#: ../../gdi/get-data-in/integrations.rst:502
msgid "AWS/sagemaker/Endpoints"
msgstr "AWS/sagemaker/Endpoints"

#: ../../gdi/get-data-in/integrations.rst:503
msgid "Amazon SageMaker Endpoints"
msgstr "Amazon SageMaker Endpoints"

#: ../../gdi/get-data-in/integrations.rst:509
msgid "AWS/sagemaker/TrainingJobs"
msgstr "AWS/sagemaker/TrainingJobs"

#: ../../gdi/get-data-in/integrations.rst:510
msgid "Amazon SageMaker Training Jobs"
msgstr "Amazon SageMaker Training Jobs"

#: ../../gdi/get-data-in/integrations.rst:516
msgid "AWS/sagemaker/TransformJobs"
msgstr "AWS/sagemaker/TransformJobs"

#: ../../gdi/get-data-in/integrations.rst:517
msgid "Amazon SageMaker Transform Jobs"
msgstr "Amazon SageMaker Transform Jobs"

#: ../../gdi/get-data-in/integrations.rst:523
msgid "AWS/SDKMetrics"
msgstr "AWS/SDKMetrics"

#: ../../gdi/get-data-in/integrations.rst:524
msgid "AWS SDK Metrics for Enterprise Support"
msgstr "企業サポートのためのAWS SDKメトリクス"

#: ../../gdi/get-data-in/integrations.rst:530
msgid "AWS/SES"
msgstr "AWS/SES"

#: ../../gdi/get-data-in/integrations.rst:531
msgid "Amazon Simple Email Service"
msgstr "アマゾン・シンプル・メール・サービス"

#: ../../gdi/get-data-in/integrations.rst:537
msgid "AWS/SNS"
msgstr "AWS/SNS"

#: ../../gdi/get-data-in/integrations.rst:538
msgid "Amazon Simple Notification Service"
msgstr "アマゾン・シンプル・ノーティフィケーション・サービス"

#: ../../gdi/get-data-in/integrations.rst:544
msgid "AWS/SQS"
msgstr "AWS/SQS"

#: ../../gdi/get-data-in/integrations.rst:545
msgid "Amazon Simple Queue Service"
msgstr "Amazon Simple Queue Service"

#: ../../gdi/get-data-in/integrations.rst:551
msgid "AWS/States"
msgstr "AWS/States"

#: ../../gdi/get-data-in/integrations.rst:552
msgid "AWS Step Functions"
msgstr "AWSステップ関数"

#: ../../gdi/get-data-in/integrations.rst:558
msgid "AWS/StorageGateway"
msgstr "AWS/StorageGateway"

#: ../../gdi/get-data-in/integrations.rst:559
msgid "AWS Storage Gateway"
msgstr "AWSストレージゲートウェイ"

#: ../../gdi/get-data-in/integrations.rst:565
msgid "AWS/SWF"
msgstr "AWS/SWF"

#: ../../gdi/get-data-in/integrations.rst:566
msgid "Amazon Simple Workflow Service"
msgstr "アマゾン・シンプル・ワークフロー・サービス"

#: ../../gdi/get-data-in/integrations.rst:572
msgid "AWS/Textract"
msgstr "AWS/Textract"

#: ../../gdi/get-data-in/integrations.rst:573
msgid "Amazon Textract"
msgstr "アマゾン・テキストラクト"

#: ../../gdi/get-data-in/integrations.rst:579
msgid "AWS/ThingsGraph"
msgstr "AWS/ThingsGraph"

#: ../../gdi/get-data-in/integrations.rst:580
msgid "AWS IoT Things Graph"
msgstr "AWS IoT Things Graph"

#: ../../gdi/get-data-in/integrations.rst:586
msgid "AWS/Translate"
msgstr "AWS/Translate"

#: ../../gdi/get-data-in/integrations.rst:587
msgid "Amazon Translate"
msgstr "アマゾン翻訳"

#: ../../gdi/get-data-in/integrations.rst:593
msgid "AWS/TrustedAdvisor"
msgstr "AWS/TrustedAdvisor"

#: ../../gdi/get-data-in/integrations.rst:594
msgid "AWS Trusted Advisor"
msgstr "AWSトラステッド・アドバイザー"

#: ../../gdi/get-data-in/integrations.rst:600
msgid "AWS/VPN"
msgstr "AWS/VPN"

#: ../../gdi/get-data-in/integrations.rst:601
msgid "Amazon VPC VPN"
msgstr "Amazon VPC VPN"

#: ../../gdi/get-data-in/integrations.rst:607
msgid "AWS/WAFV2"
msgstr "AWS/WAFV2"

#: ../../gdi/get-data-in/integrations.rst:608
msgid "AWS Web Application Firewall (WAF) V2"
msgstr "AWSウェブアプリケーションファイアウォール（WAF）V2"

#: ../../gdi/get-data-in/integrations.rst:614
msgid "AWS/WorkMail"
msgstr "AWS/WorkMail"

#: ../../gdi/get-data-in/integrations.rst:615
msgid "Amazon WorkMail"
msgstr "Amazon WorkMail"

#: ../../gdi/get-data-in/integrations.rst:621
msgid "AWS/WorkSpaces"
msgstr "AWS/WorkSpaces"

#: ../../gdi/get-data-in/integrations.rst:622
msgid "Amazon WorkSpaces"
msgstr "アマゾンのワークスペース"

#: ../../gdi/get-data-in/integrations.rst:628
msgid "CWAgent"
msgstr "CWAエージェント"

#: ../../gdi/get-data-in/integrations.rst:629
msgid "Amazon CloudWatch Agent"
msgstr "Amazon CloudWatchエージェント"

#: ../../gdi/get-data-in/integrations.rst:633
msgid ":strong:`X` (2)"
msgstr ":strong:`X` (2)"

#: ../../gdi/get-data-in/integrations.rst:635
msgid "Glue"
msgstr "接着剤"

#: ../../gdi/get-data-in/integrations.rst:636
msgid "AWS Glue"
msgstr "AWS Glue"

#: ../../gdi/get-data-in/integrations.rst:642
msgid "MediaLive"
msgstr "メディア・ライブ"

#: ../../gdi/get-data-in/integrations.rst:643
msgid "Amazon MediaLive"
msgstr "Amazon MediaLive"

#: ../../gdi/get-data-in/integrations.rst:649
msgid "System/Linux"
msgstr "System/Linux"

#: ../../gdi/get-data-in/integrations.rst:650 ../../gdi/opentelemetry/kubernetes-config-advanced.rst:151
msgid "Amazon Linux 2"
msgstr "Amazon Linux 2"

#: ../../gdi/get-data-in/integrations.rst:656
msgid "WAF"
msgstr "WAF"

#: ../../gdi/get-data-in/integrations.rst:657
msgid "AWS WAF Classic"
msgstr "AWS WAFクラシック"

#: ../../gdi/get-data-in/integrations.rst:664
msgid "The following applies to the collected logs and metadata listed in the table:"
msgstr "以下は、表に記載されている収集されたログとメタデータに適用される："

#: ../../gdi/get-data-in/integrations.rst:666
msgid "CloudWatch Logs only"
msgstr "CloudWatchログのみ"

#: ../../gdi/get-data-in/integrations.rst:667
msgid "EC2 tags & properties only"
msgstr "EC2のタグとプロパティのみ"

#: ../../gdi/get-data-in/integrations.rst:668
msgid "Logs collected by the CloudWatch agent stored in CloudWatch Logs"
msgstr "CloudWatch Logsに保存されているCloudWatchエージェントが収集したログ"

#: ../../gdi/get-data-in/integrations.rst:673
msgid "Google Cloud Platform services"
msgstr "Google Cloud Platformサービス"

#: ../../gdi/get-data-in/integrations.rst:675
msgid "To learn about GCP and Splunk Observability Cloud, read the following:"
msgstr "GCPとSplunk Observability Cloudについては、以下をお読みください："

#: ../../gdi/get-data-in/integrations.rst:677
msgid ":ref:`get-started-gcp`"
msgstr ":ref:`get-started-gcp`"

#: ../../gdi/get-data-in/integrations.rst:678
msgid ":ref:`gcp-metrics`"
msgstr ":ref:`gcp-metrics`"

#: ../../gdi/get-data-in/integrations.rst:679
msgid ":ref:`gcp-logs`"
msgstr ":ref:`gcp-logs`"

#: ../../gdi/get-data-in/integrations.rst:680
msgid ":ref:`infrastructure-gcp`"
msgstr ":ref:`infrastructure-gcp`"

#: ../../gdi/get-data-in/integrations.rst:682
msgid "The following GCP services send metrics to Infrastructure Monitoring:"
msgstr "以下のGCPサービスは、Infrastructure Monitoringにメトリクスを送信します："

#: ../../gdi/get-data-in/integrations.rst:689
msgid ":strong:`Service name (to use in the API)`"
msgstr ":strong:`サービス名（APIで使用）`"

#: ../../gdi/get-data-in/integrations.rst:690
msgid ":strong:`Product name (as displayed in the GUI)`"
msgstr ":strong:`製品名（GUIに表示されるもの）`"

#: ../../gdi/get-data-in/integrations.rst:692
msgid "appengine"
msgstr "アプリエンジン"

#: ../../gdi/get-data-in/integrations.rst:693
msgid "App Engine"
msgstr "アプリエンジン"

#: ../../gdi/get-data-in/integrations.rst:695
msgid "bigquery"
msgstr "ビッグクエリー"

#: ../../gdi/get-data-in/integrations.rst:696
msgid "BigQuery"
msgstr "BigQuery"

#: ../../gdi/get-data-in/integrations.rst:698
msgid "bigtable"
msgstr "bigtable"

#: ../../gdi/get-data-in/integrations.rst:699
msgid "Cloud Bigtable"
msgstr "クラウド・ビッグテーブル"

#: ../../gdi/get-data-in/integrations.rst:701
msgid "cloudfunctions"
msgstr "cloudfunctions"

#: ../../gdi/get-data-in/integrations.rst:702
msgid "Cloud Functions"
msgstr "クラウド機能"

#: ../../gdi/get-data-in/integrations.rst:704
msgid "cloudiot"
msgstr "cloudiot"

#: ../../gdi/get-data-in/integrations.rst:705
msgid "Cloud Internet of Things Core"
msgstr "クラウド・インターネット・オブ・シングス・コア"

#: ../../gdi/get-data-in/integrations.rst:707
msgid "cloudsql"
msgstr "cloudsql"

#: ../../gdi/get-data-in/integrations.rst:708
msgid "Cloud SQL"
msgstr "Cloud SQL"

#: ../../gdi/get-data-in/integrations.rst:710
msgid "cloudtasks"
msgstr "cloudtasks"

#: ../../gdi/get-data-in/integrations.rst:711
msgid "Cloud Tasks"
msgstr "クラウドタスク"

#: ../../gdi/get-data-in/integrations.rst:713
msgid "composer"
msgstr "composer"

#: ../../gdi/get-data-in/integrations.rst:714
msgid "Cloud Composer"
msgstr "クラウド・コンポーザー"

#: ../../gdi/get-data-in/integrations.rst:716
msgid "compute"
msgstr "compute"

#: ../../gdi/get-data-in/integrations.rst:717
msgid "Compute Engine"
msgstr "コンピュート・エンジン"

#: ../../gdi/get-data-in/integrations.rst:719
msgid "container"
msgstr "容器"

#: ../../gdi/get-data-in/integrations.rst:720
msgid "Container Engine"
msgstr "コンテナエンジン"

#: ../../gdi/get-data-in/integrations.rst:722
msgid "dataflow"
msgstr "データフロー"

#: ../../gdi/get-data-in/integrations.rst:723
msgid "Cloud Dataflow"
msgstr "クラウドデータフロー"

#: ../../gdi/get-data-in/integrations.rst:725
msgid "dataproc"
msgstr "データプロック"

#: ../../gdi/get-data-in/integrations.rst:726
msgid "Cloud Dataproc"
msgstr "クラウド・データプロック"

#: ../../gdi/get-data-in/integrations.rst:728
msgid "datastore"
msgstr "データストア"

#: ../../gdi/get-data-in/integrations.rst:729
msgid "Cloud Datastore"
msgstr "クラウドデータストア"

#: ../../gdi/get-data-in/integrations.rst:731
msgid "file"
msgstr "ファイル"

#: ../../gdi/get-data-in/integrations.rst:732
msgid "Cloud Filestore"
msgstr "クラウド・ファイルストア"

#: ../../gdi/get-data-in/integrations.rst:734
msgid "firebasedatabase"
msgstr "ファイアベースド・データベース"

#: ../../gdi/get-data-in/integrations.rst:735
msgid "Firebase Database"
msgstr "Firebaseデータベース"

#: ../../gdi/get-data-in/integrations.rst:737
msgid "firebasehosting"
msgstr "firebasehosting"

#: ../../gdi/get-data-in/integrations.rst:738
msgid "Firebase Hosting"
msgstr "Firebaseホスティング"

#: ../../gdi/get-data-in/integrations.rst:740
msgid "interconnect"
msgstr "相互接続"

#: ../../gdi/get-data-in/integrations.rst:741
msgid "Cloud Interconnect Dedicated"
msgstr "クラウド・インターコネクト専用"

#: ../../gdi/get-data-in/integrations.rst:743
msgid "knative"
msgstr "ナティヴ"

#: ../../gdi/get-data-in/integrations.rst:744
msgid "Knative"
msgstr "ナティブ"

#: ../../gdi/get-data-in/integrations.rst:746
msgid "kubernetes"
msgstr "kubernetes"

#: ../../gdi/get-data-in/integrations.rst:747
msgid "Kubernetes (GKE)"
msgstr "Kubernetes (GKE)"

#: ../../gdi/get-data-in/integrations.rst:749
msgid "loadbalancing"
msgstr "ロードバランシング"

#: ../../gdi/get-data-in/integrations.rst:750
msgid "Compute Engine HTTP(S) Load Balancing"
msgstr "Compute Engine HTTP(S) Load Balancing"

#: ../../gdi/get-data-in/integrations.rst:752
msgid "logging"
msgstr "伐採"

#: ../../gdi/get-data-in/integrations.rst:753
msgid "Stackdriver Logging"
msgstr "スタックドライバー・ロギング"

#: ../../gdi/get-data-in/integrations.rst:755
msgid "ml"
msgstr "ml"

#: ../../gdi/get-data-in/integrations.rst:756
msgid "Cloud Machine Learning"
msgstr "クラウド機械学習"

#: ../../gdi/get-data-in/integrations.rst:758
msgid "monitoring"
msgstr "モニタリング"

#: ../../gdi/get-data-in/integrations.rst:759
msgid "Stackdriver Monitoring"
msgstr "スタックドライバー・モニタリング"

#: ../../gdi/get-data-in/integrations.rst:761
msgid "pubsub"
msgstr "pubsub"

#: ../../gdi/get-data-in/integrations.rst:762
msgid "Cloud Pub/Sub"
msgstr "クラウド・パブ/サブ"

#: ../../gdi/get-data-in/integrations.rst:764
msgid "redis"
msgstr "レディス"

#: ../../gdi/get-data-in/integrations.rst:765
msgid "Memorystore for Redis"
msgstr "Redis用メモリストア"

#: ../../gdi/get-data-in/integrations.rst:767
msgid "router"
msgstr "ルーター"

#: ../../gdi/get-data-in/integrations.rst:768
msgid "Cloud Router"
msgstr "クラウド・ルーター"

#: ../../gdi/get-data-in/integrations.rst:770
msgid "run"
msgstr "run"

#: ../../gdi/get-data-in/integrations.rst:771
msgid "Cloud Run"
msgstr "クラウドラン"

#: ../../gdi/get-data-in/integrations.rst:773
msgid "serviceruntime"
msgstr "serviceruntime"

#: ../../gdi/get-data-in/integrations.rst:774
msgid "Google Cloud Endpoints APIs"
msgstr "Google Cloud エンドポイント API"

#: ../../gdi/get-data-in/integrations.rst:776
msgid "spanner"
msgstr "スパナ"

#: ../../gdi/get-data-in/integrations.rst:777
msgid "Cloud Spanner"
msgstr "クラウド・スパナー"

#: ../../gdi/get-data-in/integrations.rst:779
msgid "storage"
msgstr "storage"

#: ../../gdi/get-data-in/integrations.rst:780
msgid "Cloud Storage"
msgstr "クラウドストレージ"

#: ../../gdi/get-data-in/integrations.rst:782
msgid "vpn"
msgstr "vpn"

#: ../../gdi/get-data-in/integrations.rst:783
msgid "Cloud VPN"
msgstr "クラウドVPN"

#: ../../gdi/get-data-in/integrations.rst:790
msgid "Microsoft Azure services"
msgstr "Microsoft Azure services"

#: ../../gdi/get-data-in/integrations.rst:792
msgid "To learn about Azure and Splunk Observability Cloud, read the following:"
msgstr "Azure と Splunk Observability Cloud については、以下をお読みください："

#: ../../gdi/get-data-in/integrations.rst:794
msgid ":ref:`get-started-azure`"
msgstr ":ref:`get-started-azure`"

#: ../../gdi/get-data-in/integrations.rst:795
msgid ":ref:`azure-metrics`"
msgstr ":ref:`azure-metrics`"

#: ../../gdi/get-data-in/integrations.rst:796
msgid ":ref:`ingest-azure-log-data`"
msgstr ":ref:`ingest-azure-log-data`"

#: ../../gdi/get-data-in/integrations.rst:797
msgid ":ref:`infrastructure-azure`"
msgstr ":ref:`infrastructure-azure`"

#: ../../gdi/get-data-in/integrations.rst:799
msgid "The following Azure services send metrics to Infrastructure Monitoring:"
msgstr "以下のAzureサービスは、Infrastructure Monitoringにメトリクスを送信します："

#: ../../gdi/get-data-in/integrations.rst:806
msgid ":strong:`Resource name`"
msgstr ":strong:`リソース名`"

#: ../../gdi/get-data-in/integrations.rst:807
msgid ":strong:`Resource type`"
msgstr ":strong:`リソースタイプ`"

#: ../../gdi/get-data-in/integrations.rst:809
msgid "API Management"
msgstr "API管理"

#: ../../gdi/get-data-in/integrations.rst:810
msgid "microsoft.apimanagement/service"
msgstr "microsoft.apimanagement/service"

#: ../../gdi/get-data-in/integrations.rst:812 ../../gdi/get-data-in/integrations.rst:815 ../../gdi/get-data-in/integrations.rst:818 ../../gdi/get-data-in/integrations.rst:821 ../../gdi/get-data-in/integrations.rst:824
msgid "App Service"
msgstr "アプリサービス"

#: ../../gdi/get-data-in/integrations.rst:813
msgid "microsoft.web/sites"
msgstr "microsoft.web/sites"

#: ../../gdi/get-data-in/integrations.rst:816
msgid "microsoft.web/serverfarms"
msgstr "microsoft.web/serverfarms"

#: ../../gdi/get-data-in/integrations.rst:819
msgid "microsoft.web/sites/slots"
msgstr "microsoft.web/sites/slots"

#: ../../gdi/get-data-in/integrations.rst:822
msgid "microsoft.web/hostingenvironments/multirolepools"
msgstr "microsoft.web/hostingenvironments/multirolepools"

#: ../../gdi/get-data-in/integrations.rst:825
msgid "microsoft.web/hostingenvironments/workerpools"
msgstr "microsoft.web/hostingenvironments/workerpools"

#: ../../gdi/get-data-in/integrations.rst:827
msgid "Application Gateway"
msgstr "アプリケーションゲートウェイ"

#: ../../gdi/get-data-in/integrations.rst:828
msgid "microsoft.network/applicationgateways"
msgstr "microsoft.network/applicationgateways"

#: ../../gdi/get-data-in/integrations.rst:830
msgid "Automation"
msgstr "オートメーション"

#: ../../gdi/get-data-in/integrations.rst:831
msgid "microsoft.automation/automationaccounts"
msgstr "microsoft.automation/automationaccounts"

#: ../../gdi/get-data-in/integrations.rst:833
msgid "Azure Analysis Services"
msgstr "Azure Analysis Services"

#: ../../gdi/get-data-in/integrations.rst:834
msgid "microsoft.analysisservices/servers"
msgstr "microsoft.analysisservices/servers"

#: ../../gdi/get-data-in/integrations.rst:836
msgid "Azure Autoscale"
msgstr "Azure Autoscale"

#: ../../gdi/get-data-in/integrations.rst:837
msgid "microsoft.insights/autoscalesettings"
msgstr "microsoft.insights/autoscalesettings"

#: ../../gdi/get-data-in/integrations.rst:839
msgid "Azure Cosmos DB"
msgstr "Azure Cosmos DB"

#: ../../gdi/get-data-in/integrations.rst:840
msgid "microsoft.documentdb/databaseaccounts"
msgstr "microsoft.documentdb/databaseaccounts"

#: ../../gdi/get-data-in/integrations.rst:842
msgid "Azure Data Explorer"
msgstr "Azure Data Explorer"

#: ../../gdi/get-data-in/integrations.rst:843
msgid "microsoft.kusto/clusters"
msgstr "microsoft.kusto/clusters"

#: ../../gdi/get-data-in/integrations.rst:845
msgid "Azure Database for MariaDB"
msgstr "Azure Database for MariaDB"

#: ../../gdi/get-data-in/integrations.rst:846
msgid "microsoft.dbformariadb/servers"
msgstr "microsoft.dbformariadb/servers"

#: ../../gdi/get-data-in/integrations.rst:848
msgid "Azure Database for MySQL"
msgstr "Azure Database for MySQL"

#: ../../gdi/get-data-in/integrations.rst:849
msgid "microsoft.dbformysql/servers"
msgstr "microsoft.dbformysql/servers"

#: ../../gdi/get-data-in/integrations.rst:851
msgid "Azure Database for PostgreSQL"
msgstr "Azure Database for PostgreSQL"

#: ../../gdi/get-data-in/integrations.rst:852
msgid "microsoft.dbforpostgresql/servers"
msgstr "microsoft.dbforpostgresql/servers"

#: ../../gdi/get-data-in/integrations.rst:854
msgid "Azure DDoS Protection"
msgstr "Azure DDoS Protection"

#: ../../gdi/get-data-in/integrations.rst:855
msgid "microsoft.network/publicipaddresses"
msgstr "microsoft.network/publicipaddresses"

#: ../../gdi/get-data-in/integrations.rst:857
msgid "Azure DNS"
msgstr "Azure DNS"

#: ../../gdi/get-data-in/integrations.rst:858
msgid "microsoft.network/dnszones"
msgstr "microsoft.network/dnszones"

#: ../../gdi/get-data-in/integrations.rst:860
msgid "Azure Firewall"
msgstr "Azure Firewall"

#: ../../gdi/get-data-in/integrations.rst:861
msgid "microsoft.network/azurefirewalls"
msgstr "microsoft.network/azurefirewalls"

#: ../../gdi/get-data-in/integrations.rst:863
msgid "Azure Front Door"
msgstr "Azure Front Door"

#: ../../gdi/get-data-in/integrations.rst:864
msgid "microsoft.network/frontdoors"
msgstr "microsoft.network/frontdoors"

#: ../../gdi/get-data-in/integrations.rst:866
msgid "Azure Kubernetes Service"
msgstr "Azure Kubernetes Service"

#: ../../gdi/get-data-in/integrations.rst:867
msgid "microsoft.containerservice/managedclusters"
msgstr "microsoft.containerservice/managedclusters"

#: ../../gdi/get-data-in/integrations.rst:869
msgid "Azure Location Based Services"
msgstr "Azure Location Based Services"

#: ../../gdi/get-data-in/integrations.rst:870
msgid "microsoft.locationbasedservices/accounts"
msgstr "microsoft.locationbasedservices/accounts"

#: ../../gdi/get-data-in/integrations.rst:872
msgid "Azure Machine Learning"
msgstr "Azure Machine Learning"

#: ../../gdi/get-data-in/integrations.rst:873
msgid "microsoft.machinelearningservices/workspaces"
msgstr "microsoft.machinelearningservices/workspaces"

#: ../../gdi/get-data-in/integrations.rst:875
msgid "Azure Maps"
msgstr "Azure Maps"

#: ../../gdi/get-data-in/integrations.rst:876
msgid "microsoft.maps/accounts"
msgstr "microsoft.maps/accounts"

#: ../../gdi/get-data-in/integrations.rst:878
msgid "Azure SignalR Service"
msgstr "Azure SignalR Service"

#: ../../gdi/get-data-in/integrations.rst:879
msgid "microsoft.signalrservice/signalr"
msgstr "microsoft.signalrservice/signalr"

#: ../../gdi/get-data-in/integrations.rst:881
msgid "Azure SQL Managed Instances"
msgstr "Azure SQL Managed Instances"

#: ../../gdi/get-data-in/integrations.rst:882
msgid "microsoft.sql/managedinstances"
msgstr "microsoft.sql/managedinstances"

#: ../../gdi/get-data-in/integrations.rst:884
msgid "Azure Web PubSub"
msgstr "Azure Web PubSub"

#: ../../gdi/get-data-in/integrations.rst:885
msgid "microsoft.signalrservice/webpubsub"
msgstr "microsoft.signalrservice/webpubsub"

#: ../../gdi/get-data-in/integrations.rst:887
msgid "Batch"
msgstr "バッチ"

#: ../../gdi/get-data-in/integrations.rst:888
msgid "microsoft.batch/batchaccounts"
msgstr "microsoft.batch/batchaccounts"

#: ../../gdi/get-data-in/integrations.rst:890
msgid "Container Instances"
msgstr "コンテナ・インスタンス"

#: ../../gdi/get-data-in/integrations.rst:891
msgid "microsoft.containerinstance/containergroups"
msgstr "microsoft.containerinstance/containergroups"

#: ../../gdi/get-data-in/integrations.rst:893
msgid "Cognitive Services"
msgstr "コグニティブ・サービス"

#: ../../gdi/get-data-in/integrations.rst:894
msgid "microsoft.cognitiveservices/accounts"
msgstr "microsoft.cognitiveservices/accounts"

#: ../../gdi/get-data-in/integrations.rst:896
msgid "Container Registry"
msgstr "コンテナ登録"

#: ../../gdi/get-data-in/integrations.rst:897
msgid "microsoft.containerregistry/registries"
msgstr "microsoft.containerregistry/registries"

#: ../../gdi/get-data-in/integrations.rst:899
msgid "Content Delivery Network (CDN)"
msgstr "コンテンツ・デリバリー・ネットワーク（CDN）"

#: ../../gdi/get-data-in/integrations.rst:900
msgid "microsoft.cdn/cdnwebapplicationfirewallpolicies"
msgstr "microsoft.cdn/cdnwebapplicationfirewallpolicies"

#: ../../gdi/get-data-in/integrations.rst:902
msgid "Customer Insights"
msgstr "顧客インサイト"

#: ../../gdi/get-data-in/integrations.rst:903
msgid "microsoft.customerinsights/hubs"
msgstr "microsoft.customerinsights/hubs"

#: ../../gdi/get-data-in/integrations.rst:905
msgid "Event Grid (domains)"
msgstr "イベントグリッド（ドメイン）"

#: ../../gdi/get-data-in/integrations.rst:906
msgid "microsoft.eventgrid/domains"
msgstr "microsoft.eventgrid/domains"

#: ../../gdi/get-data-in/integrations.rst:908
msgid "Event Grid (Event Subscriptions)"
msgstr "イベントグリッド（イベント購読）"

#: ../../gdi/get-data-in/integrations.rst:909
msgid "microsoft.eventgrid/eventsubscriptions"
msgstr "microsoft.eventgrid/eventsubscriptions"

#: ../../gdi/get-data-in/integrations.rst:911
msgid "Event Grid (Extension Topics)"
msgstr "イベント・グリッド（エクステンション・トピックス）"

#: ../../gdi/get-data-in/integrations.rst:912
msgid "microsoft.eventgrid/extensiontopics"
msgstr "microsoft.eventgrid/extensiontopics"

#: ../../gdi/get-data-in/integrations.rst:914
msgid "Event Grid (System Topics)"
msgstr "イベントグリッド（システムトピックス）"

#: ../../gdi/get-data-in/integrations.rst:915
msgid "microsoft.eventgrid/systemtopics"
msgstr "microsoft.eventgrid/systemtopics"

#: ../../gdi/get-data-in/integrations.rst:917
msgid "Event Grid (Topics)"
msgstr "イベントグリッド（トピックス）"

#: ../../gdi/get-data-in/integrations.rst:918
msgid "microsoft.eventgrid/topics"
msgstr "microsoft.eventgrid/topics"

#: ../../gdi/get-data-in/integrations.rst:920
msgid "Event Hubs"
msgstr "イベント・ハブ"

#: ../../gdi/get-data-in/integrations.rst:921
msgid "microsoft.eventhub/namespaces"
msgstr "microsoft.eventhub/namespaces"

#: ../../gdi/get-data-in/integrations.rst:923 ../../gdi/get-data-in/integrations.rst:926
msgid "Data Factory"
msgstr "データ工場"

#: ../../gdi/get-data-in/integrations.rst:924
msgid "microsoft.datafactory/datafactories"
msgstr "microsoft.datafactory/datafactories"

#: ../../gdi/get-data-in/integrations.rst:927
msgid "microsoft.datafactory/factories"
msgstr "microsoft.datafactory/factories"

#: ../../gdi/get-data-in/integrations.rst:929
msgid "Data Lake Analytics"
msgstr "データレイク分析"

#: ../../gdi/get-data-in/integrations.rst:930
msgid "microsoft.datalakeanalytics/accounts"
msgstr "microsoft.datalakeanalytics/accounts"

#: ../../gdi/get-data-in/integrations.rst:932
msgid "Data Lake Store"
msgstr "データレイク・ストア"

#: ../../gdi/get-data-in/integrations.rst:933
msgid "microsoft.datalakestore/accounts"
msgstr "microsoft.datalakestore/accounts"

#: ../../gdi/get-data-in/integrations.rst:935
msgid "ExpressRoute"
msgstr "ExpressRoute"

#: ../../gdi/get-data-in/integrations.rst:936
msgid "microsoft.network/expressroutecircuits"
msgstr "microsoft.network/expressroutecircuits"

#: ../../gdi/get-data-in/integrations.rst:938
msgid "HDInsight"
msgstr "HDInsight"

#: ../../gdi/get-data-in/integrations.rst:939
msgid "microsoft.hdinsight/clusters"
msgstr "microsoft.hdinsight/clusters"

#: ../../gdi/get-data-in/integrations.rst:941 ../../gdi/get-data-in/integrations.rst:944 ../../gdi/get-data-in/integrations.rst:947 ../../gdi/get-data-in/integrations.rst:950
msgid "Iot Hub"
msgstr "Iotハブ"

#: ../../gdi/get-data-in/integrations.rst:942
msgid "microsoft.devices/iothubs"
msgstr "microsoft.devices/iothubs"

#: ../../gdi/get-data-in/integrations.rst:945
msgid "microsoft.devices/provisioningservices"
msgstr "microsoft.devices/provisioningservices"

#: ../../gdi/get-data-in/integrations.rst:948
msgid "microsoft.devices/elasticpools"
msgstr "microsoft.devices/elasticpools"

#: ../../gdi/get-data-in/integrations.rst:951
msgid "microsoft.devices/elasticpools/iothubtenants"
msgstr "microsoft.devices/elasticpools/iothubtenants"

#: ../../gdi/get-data-in/integrations.rst:953
msgid "Key Vault"
msgstr "キーボールト"

#: ../../gdi/get-data-in/integrations.rst:954
msgid "microsoft.keyvault/vaults"
msgstr "microsoft.keyvault/vaults"

#: ../../gdi/get-data-in/integrations.rst:956
msgid "Load Balancer"
msgstr "ロードバランサー"

#: ../../gdi/get-data-in/integrations.rst:957
msgid "microsoft.network/loadbalancers"
msgstr "microsoft.network/loadbalancers"

#: ../../gdi/get-data-in/integrations.rst:959
msgid "Logic apps"
msgstr "ロジックアプリ"

#: ../../gdi/get-data-in/integrations.rst:960
msgid "microsoft.logic/workflows"
msgstr "microsoft.logic/workflows"

#: ../../gdi/get-data-in/integrations.rst:962
msgid "Network Interfaces"
msgstr "ネットワーク・インターフェイス"

#: ../../gdi/get-data-in/integrations.rst:963
msgid "microsoft.network/networkinterfaces, Network Interfaces"
msgstr "microsoft.network/networkinterfaces, ネットワークインターフェース"

#: ../../gdi/get-data-in/integrations.rst:965
msgid "Notification Hubs"
msgstr "通知ハブ"

#: ../../gdi/get-data-in/integrations.rst:966
msgid "microsoft.notificationhubs/namespaces/notificationhubs"
msgstr "microsoft.notificationhubs/namespaces/notificationhubs"

#: ../../gdi/get-data-in/integrations.rst:968
msgid "Power BI"
msgstr "Power BI"

#: ../../gdi/get-data-in/integrations.rst:969
msgid "microsoft.powerbidedicated/capacities"
msgstr "microsoft.powerbidedicated/capacities"

#: ../../gdi/get-data-in/integrations.rst:971
msgid "Redis Cache"
msgstr "レディスキャッシュ"

#: ../../gdi/get-data-in/integrations.rst:972
msgid "microsoft.cache/redis"
msgstr "microsoft.cache/redis"

#: ../../gdi/get-data-in/integrations.rst:974
msgid "Relays"
msgstr "リレー"

#: ../../gdi/get-data-in/integrations.rst:975
msgid "microsoft.relay/namespaces"
msgstr "microsoft.relay/namespaces"

#: ../../gdi/get-data-in/integrations.rst:977
msgid "Search Services"
msgstr "検索サービス"

#: ../../gdi/get-data-in/integrations.rst:978
msgid "microsoft.search/searchservices"
msgstr "microsoft.search/searchservices"

#: ../../gdi/get-data-in/integrations.rst:980
msgid "Service Bus"
msgstr "サービスバス"

#: ../../gdi/get-data-in/integrations.rst:981
msgid "microsoft.servicebus/namespaces"
msgstr "microsoft.servicebus/namespaces"

#: ../../gdi/get-data-in/integrations.rst:983 ../../gdi/get-data-in/integrations.rst:986 ../../gdi/get-data-in/integrations.rst:989 ../../gdi/get-data-in/integrations.rst:992 ../../gdi/get-data-in/integrations.rst:995
msgid "Storage"
msgstr "ストレージ"

#: ../../gdi/get-data-in/integrations.rst:984
msgid "microsoft.storage/storageaccounts"
msgstr "microsoft.storage/storageaccounts"

#: ../../gdi/get-data-in/integrations.rst:987
msgid "microsoft.storage/storageaccounts/tableservices"
msgstr "microsoft.storage/storageaccounts/tableservices"

#: ../../gdi/get-data-in/integrations.rst:990
msgid "microsoft.storage/storageaccounts/blobservices"
msgstr "microsoft.storage/storageaccounts/blobservices"

#: ../../gdi/get-data-in/integrations.rst:993
msgid "microsoft.storage/storageaccounts/queueservices"
msgstr "microsoft.storage/storageaccounts/queueservices"

#: ../../gdi/get-data-in/integrations.rst:996
msgid "microsoft.storage/storageaccounts/fileservices"
msgstr "microsoft.storage/storageaccounts/fileservices"

#: ../../gdi/get-data-in/integrations.rst:998
msgid "Stream Analytics"
msgstr "ストリーム分析"

#: ../../gdi/get-data-in/integrations.rst:999
msgid "microsoft.streamanalytics/streamingjobs"
msgstr "microsoft.streamanalytics/streamingjobs"

#: ../../gdi/get-data-in/integrations.rst:1001
msgid "SQL Database"
msgstr "SQLデータベース"

#: ../../gdi/get-data-in/integrations.rst:1002
msgid "microsoft.sql/servers/databases"
msgstr "microsoft.sql/servers/databases"

#: ../../gdi/get-data-in/integrations.rst:1004
msgid "SQL Elastic Pools"
msgstr "SQLエラスティック・プール"

#: ../../gdi/get-data-in/integrations.rst:1005
msgid "microsoft.sql/servers/elasticpools"
msgstr "microsoft.sql/servers/elasticpools"

#: ../../gdi/get-data-in/integrations.rst:1007
msgid "SQL Servers"
msgstr "SQL Servers"

#: ../../gdi/get-data-in/integrations.rst:1008
msgid "microsoft.sql/servers"
msgstr "microsoft.sql/servers"

#: ../../gdi/get-data-in/integrations.rst:1010
msgid "Traffic Manager"
msgstr "トラフィック・マネージャー"

#: ../../gdi/get-data-in/integrations.rst:1011
msgid "microsoft.network/trafficmanagerprofiles"
msgstr "microsoft.network/trafficmanagerprofiles"

#: ../../gdi/get-data-in/integrations.rst:1013
msgid "Virtual Machines"
msgstr "仮想マシン"

#: ../../gdi/get-data-in/integrations.rst:1014
msgid "microsoft.compute/virtualmachines"
msgstr "microsoft.compute/virtualmachines"

#: ../../gdi/get-data-in/integrations.rst:1016
msgid "Virtual Machines (Classic)"
msgstr "仮想マシン（クラシック）"

#: ../../gdi/get-data-in/integrations.rst:1017
msgid "microsoft.classiccompute/virtualmachines"
msgstr "microsoft.classiccompute/virtualmachines"

#: ../../gdi/get-data-in/integrations.rst:1019 ../../gdi/get-data-in/integrations.rst:1022
msgid "Virtual Machine Scale Sets"
msgstr "仮想マシンのスケールセット"

#: ../../gdi/get-data-in/integrations.rst:1020
msgid "microsoft.compute/virtualmachinescalesets"
msgstr "microsoft.compute/virtualmachinescalesets"

#: ../../gdi/get-data-in/integrations.rst:1023
msgid "microsoft.compute/virtualmachinescalesets/virtualmachines"
msgstr "microsoft.compute/virtualmachinescalesets/virtualmachines"

#: ../../gdi/get-data-in/integrations.rst:1025
msgid "VPN Gateway"
msgstr "VPNゲートウェイ"

#: ../../gdi/get-data-in/integrations.rst:1026
msgid "microsoft.network/virtualnetworkgateways"
msgstr "microsoft.network/virtualnetworkgateways"

#: ../../gdi/get-data-in/integrations.rst:1030
msgid "Infrastructure"
msgstr "インフラ"

#: ../../gdi/get-data-in/integrations.rst:1032
msgid "Install the Splunk Distribution of OpenTelemetry Collector on your infrastructure to start sending data to Splunk Observability Cloud."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションをインフラストラクチャにインストールして、Splunk Observability Cloud へのデータ送信を開始します。"

#: ../../_includes/application-receiver-table.rst:7 ../../gdi/get-data-in/integrations.rst:1040
msgid ":strong:`Data source`"
msgstr ":strong:`データソース`"

#: ../../gdi/get-data-in/integrations.rst:1045
msgid ":ref:`Kubernetes <get-started-k8s>`"
msgstr ":ref:`Kubernetes <get-started-k8s>`"

#: ../../gdi/get-data-in/integrations.rst:1050
msgid ":ref:`Linux <get-started-linux>`"
msgstr ":ref:`Linux <get-started-linux>`"

#: ../../gdi/get-data-in/integrations.rst:1055
msgid ":ref:`Microsoft Windows <get-started-windows>`"
msgstr ":ref:`Microsoft Windows <get-started-windows>`"

#: ../../gdi/get-data-in/integrations.rst:1062
msgid "APM instrumentation"
msgstr "APM計装"

#: ../../gdi/get-data-in/integrations.rst:1064
msgid "Instrument your applications to send metrics and traces to Splunk Observability Cloud."
msgstr "アプリケーションを計測し、Splunk Observability Cloud にメトリクスとトレースを送信します。"

#: ../../gdi/get-data-in/integrations.rst:1072
msgid ":strong:`Language`"
msgstr ":strong:`言語`"

#: ../../gdi/get-data-in/integrations.rst:1077
msgid ":new-page:`C++ <https://github.com/signalfx/splunk-otel-cpp>`"
msgstr ":new-page:`C++ <https://github.com/signalfx/splunk-otel-cpp>`"

#: ../../_includes/application-receiver-table.rst:366 ../../gdi/get-data-in/integrations.rst:1092
msgid ":ref:`Microsoft .NET <microsoft-dotnet>`"
msgstr ":ref:`Microsoft .NET <microsoft-dotnet>`"

#: ../../gdi/get-data-in/integrations.rst:1119
msgid "Metric instrumentation"
msgstr "メートル原器"

#: ../../gdi/get-data-in/integrations.rst:1121
msgid "Instrument your applications to send metrics to Infrastructure Monitoring."
msgstr "Infrastructure Monitoringにメトリクスを送信するために、アプリケーションを計装化します。"

#: ../../gdi/get-data-in/integrations.rst:1123
msgid ":new-page:`Go <https://github.com/signalfx/signalfx-go>`"
msgstr ":new-page:`行く <https://github.com/signalfx/signalfx-go>`"

#: ../../gdi/get-data-in/integrations.rst:1125
msgid ":new-page:`Java <https://github.com/signalfx/signalfx-java>`"
msgstr ":new-page:`Java <https://github.com/signalfx/signalfx-java>`"

#: ../../gdi/get-data-in/integrations.rst:1127
msgid ":new-page:`Node.js <https://github.com/signalfx/signalfx-nodejs>`"
msgstr ":new-page:`Node.js <https://github.com/signalfx/signalfx-nodejs>`"

#: ../../gdi/get-data-in/integrations.rst:1129
msgid ":new-page:`Python <https://github.com/signalfx/signalfx-python>`"
msgstr ":new-page:`Python <https://github.com/signalfx/signalfx-python>`"

#: ../../gdi/get-data-in/integrations.rst:1131
msgid ":new-page:`Ruby <https://github.com/signalfx/signalfx-ruby>`"
msgstr ":new-page:`ルビー <https://github.com/signalfx/signalfx-ruby>`"

#: ../../gdi/get-data-in/integrations.rst:1135
msgid "RUM instrumentation"
msgstr "RUM 計器"

#: ../../gdi/get-data-in/integrations.rst:1137
msgid "Instrument your web and mobile front-end applications to send metrics, web vitals, errors, and other forms of data to Splunk Real User Monitoring."
msgstr "Web やモバイルのフロントエンドアプリケーションをインスツルメンテーションして、メトリクス、Web バイタル、エラーなどのデータを Splunk Real User Monitoring に送信します。"

#: ../../gdi/get-data-in/integrations.rst:1139
msgid ":ref:`browser-rum-gdi`"
msgstr ":ref:`browser-rum-gdi`"

#: ../../gdi/get-data-in/integrations.rst:1140
msgid ":ref:`rum-mobile-ios`"
msgstr ":ref:`rum-mobile-ios`"

#: ../../gdi/get-data-in/integrations.rst:1141
msgid ":ref:`rum-mobile-android`"
msgstr ":ref:`rum-mobile-android`"

#: ../../gdi/get-data-in/integrations.rst:1143
msgid "For more information, see :ref:`get-started-rum`."
msgstr "詳細は:ref:`get-started-rum` を参照。"

#: ../../gdi/get-data-in/integrations.rst:1147
msgid "Application receivers"
msgstr "アプリケーションレシーバー"

#: ../../gdi/get-data-in/integrations.rst:1149
msgid "An application receiver gathers metrics from its associated application and the host the application is running on and sends them to Infrastructure Monitoring."
msgstr "アプリケーション・レシーバーは、関連するアプリケーションとそのアプリケーションが実行されているホストからメトリクスを収集し、Infrastructure Monitoringに送信します。"

#: ../../_includes/application-receiver-table.rst:12
msgid ":ref:`Amazon ECS Task Metadata <amazon-ecs-metadata>`"
msgstr ":ref:`Amazon ECS Task Metadata <amazon-ecs-metadata>`"

#: ../../_includes/application-receiver-table.rst:17
msgid ":ref:`Apache ActiveMQ <activemq>`"
msgstr ":ref:`Apache ActiveMQ <activemq>`"

#: ../../_includes/application-receiver-table.rst:22
msgid ":ref:`Apache CouchDB <apache-couchdb>`"
msgstr ":ref:`Apache CouchDB <apache-couchdb>`"

#: ../../_includes/application-receiver-table.rst:27
msgid ":ref:`Apache HTTP Server <apache-httpserver>`"
msgstr ":ref:`Apache HTTP Server <apache-httpserver>`"

#: ../../_includes/application-receiver-table.rst:32
msgid ":ref:`Apache Kafka <kafka>`"
msgstr ":ref:`Apache Kafka <kafka>`"

#: ../../_includes/application-receiver-table.rst:37
msgid ":ref:`Apache Spark <spark>`"
msgstr ":ref:`Apache Spark <spark>`"

#: ../../_includes/application-receiver-table.rst:42
msgid ":ref:`Apache Tomcat <apache-tomcat>`"
msgstr ":ref:`Apache Tomcat <apache-tomcat>`"

#: ../../_includes/application-receiver-table.rst:47
msgid ":ref:`Apache Zookeeper <zookeeper>`"
msgstr ":ref:`Apache Zookeeper <zookeeper>`"

#: ../../_includes/application-receiver-table.rst:52
msgid ":ref:`ASP.NET <asp-dot-net>`"
msgstr ":ref:`ASP.NET <asp-dot-net>`"

#: ../../_includes/application-receiver-table.rst:57
msgid ":ref:`AWS AppMesh Envoy Proxy <appmesh>`"
msgstr ":ref:`AWS AppMesh Envoy Proxy <appmesh>`"

#: ../../_includes/application-receiver-table.rst:62
msgid ":ref:`cAdvisor <cadvisor>`"
msgstr ":ref:`cAdvisor <cadvisor>`"

#: ../../_includes/application-receiver-table.rst:67
msgid ":ref:`Cassandra <cassandra>`"
msgstr ":ref:`Cassandra <cassandra>`"

#: ../../_includes/application-receiver-table.rst:72
msgid ":ref:`cgroups <cgroups>`"
msgstr ":ref:`cgroups <cgroups>`"

#: ../../_includes/application-receiver-table.rst:77
msgid ":ref:`Chrony NTP <chrony>`"
msgstr ":ref:`Chrony NTP <chrony>`"

#: ../../_includes/application-receiver-table.rst:82
msgid ":ref:`Cloud Foundry Loggregator Firehose <cloudfoundry-firehose-nozzle>`"
msgstr ":ref:`Cloud Foundry Loggregator Firehose <cloudfoundry-firehose-nozzle>`"

#: ../../_includes/application-receiver-table.rst:87
msgid ":ref:`Collectd plugin <collectd-plugin>`"
msgstr ":ref:`Collectd plugin <collectd-plugin>`"

#: ../../_includes/application-receiver-table.rst:92
msgid ":ref:`Collectd df plugin <collectd-df>`"
msgstr ":ref:`Collectd df plugin <collectd-df>`"

#: ../../_includes/application-receiver-table.rst:97
msgid ":ref:`Collectd uptime <collectd-uptime>`"
msgstr ":ref:`Collectd uptime <collectd-uptime>`"

#: ../../_includes/application-receiver-table.rst:102
msgid ":ref:`Consul datastore <consul>`"
msgstr ":ref:`Consul datastore <consul>`"

#: ../../_includes/application-receiver-table.rst:107
msgid ":ref:`Conviva Real-Time/Live video play <conviva>`"
msgstr ":ref:`Conviva Real-Time/Live video play <conviva>`"

#: ../../_includes/application-receiver-table.rst:112
msgid ":ref:`CoreDNS <coredns>`"
msgstr ":ref:`CoreDNS <coredns>`"

#: ../../_includes/application-receiver-table.rst:117
msgid ":ref:`Couchbase server <couchbase>`"
msgstr ":ref:`Couchbase server <couchbase>`"

#: ../../_includes/application-receiver-table.rst:122
msgid ":ref:`CPU <cpu>`"
msgstr ":ref:`CPU <cpu>`"

#: ../../_includes/application-receiver-table.rst:127
msgid ":ref:`CPUFreq <cpufreq>`"
msgstr ":ref:`CPUFreq <cpufreq>`"

#: ../../_includes/application-receiver-table.rst:132
msgid ":ref:`Databricks Receiver <databricks_receiver>`"
msgstr ":ref:`Databricks Receiver <databricks_receiver>`"

#: ../../_includes/application-receiver-table.rst:137
msgid ":ref:`Disk and partition <disk>`"
msgstr ":ref:`Disk and partition <disk>`"

#: ../../_includes/application-receiver-table.rst:142
msgid ":ref:`DNS Query Input <dns>`"
msgstr ":ref:`DNS Query Input <dns>`"

#: ../../_includes/application-receiver-table.rst:147
msgid ":ref:`Docker Containers <docker>`"
msgstr ":ref:`Docker Containers <docker>`"

#: ../../_includes/application-receiver-table.rst:152
msgid ":ref:`Elasticsearch <elasticsearch>`"
msgstr ":ref:`Elasticsearch <elasticsearch>`"

#: ../../_includes/application-receiver-table.rst:157
msgid ":ref:`Elasticsearch query <elasticsearch-query>`"
msgstr ":ref:`Elasticsearch query <elasticsearch-query>`"

#: ../../_includes/application-receiver-table.rst:162
msgid ":ref:`etcd server <etcd>`"
msgstr ":ref:`etcd server <etcd>`"

#: ../../_includes/application-receiver-table.rst:167
msgid ":ref:`Exec Input <exec-input>`"
msgstr ":ref:`Exec Input <exec-input>`"

#: ../../_includes/application-receiver-table.rst:172
msgid ":ref:`Expvar (Go) <expvar>`"
msgstr ":ref:`Expvar (Go) <expvar>`"

#: ../../_includes/application-receiver-table.rst:177
msgid ":ref:`Free disk space (filesystems) <filesystems>`"
msgstr ":ref:`Free disk space (filesystems) <filesystems>`"

#: ../../_includes/application-receiver-table.rst:182
msgid ":ref:`GenericJMX <genericjmx>`"
msgstr ":ref:`GenericJMX <genericjmx>`"

#: ../../_includes/application-receiver-table.rst:187
msgid ":ref:`GitLab <gitlab>`"
msgstr ":ref:`GitLab <gitlab>`"

#: ../../_includes/application-receiver-table.rst:192
msgid ":ref:`Hadoop <hadoop>`"
msgstr ":ref:`Hadoop <hadoop>`"

#: ../../_includes/application-receiver-table.rst:197
msgid ":ref:`Hadoop JMX <hadoopjmx>`"
msgstr ":ref:`Hadoop JMX <hadoopjmx>`"

#: ../../_includes/application-receiver-table.rst:202
msgid ":ref:`HAProxy <haproxy>`"
msgstr ":ref:`HAProxy <haproxy>`"

#: ../../_includes/application-receiver-table.rst:207
msgid ":ref:`Health Checker <health-checker>`"
msgstr ":ref:`Health Checker <health-checker>`"

#: ../../_includes/application-receiver-table.rst:212
msgid ":ref:`Heroku <heroku>`"
msgstr ":ref:`Heroku <heroku>`"

#: ../../_includes/application-receiver-table.rst:217
msgid ":ref:`Host metadata properties <host-metadata>`"
msgstr ":ref:`Host metadata properties <host-metadata>`"

#: ../../_includes/application-receiver-table.rst:222
msgid ":ref:`Host metrics receiver <host-metrics-receiver>`"
msgstr ":ref:`Host metrics receiver <host-metrics-receiver>`"

#: ../../_includes/application-receiver-table.rst:227
msgid ":ref:`Host process <processes>`"
msgstr ":ref:`Host process <processes>`"

#: ../../_includes/application-receiver-table.rst:232
msgid ":ref:`Host process list <processlist>`"
msgstr ":ref:`Host process list <processlist>`"

#: ../../_includes/application-receiver-table.rst:237
msgid ":ref:`Host process load <load>`"
msgstr ":ref:`Host process load <load>`"

#: ../../_includes/application-receiver-table.rst:242
msgid ":ref:`HTTP <http>`"
msgstr ":ref:`HTTP <http>`"

#: ../../_includes/application-receiver-table.rst:247
msgid ":ref:`Interface traffic <interface>`"
msgstr ":ref:`Interface traffic <interface>`"

#: ../../_includes/application-receiver-table.rst:252 ../../gdi/monitoring.rst:34
msgid ":ref:`Istio <get-started-istio>`"
msgstr ":ref:`Istio <get-started-istio>`"

#: ../../_includes/application-receiver-table.rst:257
msgid ":ref:`Jaeger gRPC <jaeger-grpc>`"
msgstr ":ref:`Jaeger gRPC <jaeger-grpc>`"

#: ../../_includes/application-receiver-table.rst:262
msgid ":ref:`Java metrics receiver <java-monitor>`"
msgstr ":ref:`Java metrics receiver <java-monitor>`"

#: ../../_includes/application-receiver-table.rst:267
msgid ":ref:`Jenkins <jenkins>`"
msgstr ":ref:`Jenkins <jenkins>`"

#: ../../_includes/application-receiver-table.rst:272
msgid ":ref:`JMX <jmx>`"
msgstr ":ref:`JMX <jmx>`"

#: ../../_includes/application-receiver-table.rst:277
msgid ":ref:`Kafka consumer <kafka-consumer>`"
msgstr ":ref:`Kafka consumer <kafka-consumer>`"

#: ../../_includes/application-receiver-table.rst:282
msgid ":ref:`Kafka producer <kafka-producer>`"
msgstr ":ref:`Kafka producer <kafka-producer>`"

#: ../../_includes/application-receiver-table.rst:287
msgid ":ref:`Kong Gateway <kong>`"
msgstr ":ref:`Kong Gateway <kong>`"

#: ../../_includes/application-receiver-table.rst:292
msgid ":ref:`Kubernetes API server <kubernetes-apiserver>`"
msgstr ":ref:`Kubernetes API server <kubernetes-apiserver>`"

#: ../../_includes/application-receiver-table.rst:297
msgid ":ref:`Kubernetes cluster <kubernetes-cluster>`"
msgstr ":ref:`Kubernetes cluster <kubernetes-cluster>`"

#: ../../_includes/application-receiver-table.rst:302
msgid ":ref:`Kubernetes Cluster Receiver <kubernetes-cluster-receiver>`"
msgstr ":ref:`Kubernetes Cluster Receiver <kubernetes-cluster-receiver>`"

#: ../../_includes/application-receiver-table.rst:307
msgid ":ref:`Kubernetes controller manager <kube-controller-manager>`"
msgstr ":ref:`Kubernetes controller manager <kube-controller-manager>`"

#: ../../_includes/application-receiver-table.rst:312
msgid ":ref:`Kubernetes events <kubernetes-events>`"
msgstr ":ref:`Kubernetes events <kubernetes-events>`"

#: ../../_includes/application-receiver-table.rst:317
msgid ":ref:`Kubernetes network stats <kubelet-stats>`"
msgstr ":ref:`Kubernetes network stats <kubelet-stats>`"

#: ../../_includes/application-receiver-table.rst:322
msgid ":ref:`Kubernetes proxy <kubernetes-proxy>`"
msgstr ":ref:`Kubernetes proxy <kubernetes-proxy>`"

#: ../../_includes/application-receiver-table.rst:327
msgid ":ref:`Kubernetes scheduler <kubernetes-scheduler>`"
msgstr ":ref:`Kubernetes scheduler <kubernetes-scheduler>`"

#: ../../_includes/application-receiver-table.rst:332
msgid ":ref:`Kubelet Stats Receiver <kubelet-stats-receiver>`"
msgstr ":ref:`Kubelet Stats Receiver <kubelet-stats-receiver>`"

#: ../../_includes/application-receiver-table.rst:337
msgid ":ref:`Logparser<telegraf-logparser>`"
msgstr ":ref:`Logparser<telegraf-logparser>`"

#: ../../_includes/application-receiver-table.rst:342
msgid ":ref:`Logstash<logstash>`"
msgstr ":ref:`Logstash<logstash>`"

#: ../../_includes/application-receiver-table.rst:347
msgid ":ref:`Logstash TCP <logstash-tcp>`"
msgstr ":ref:`Logstash TCP <logstash-tcp>`"

#: ../../_includes/application-receiver-table.rst:352
msgid ":ref:`Memcached <memcached>`"
msgstr ":ref:`Memcached <memcached>`"

#: ../../_includes/application-receiver-table.rst:357
msgid ":ref:`Memory usage <memory>`"
msgstr ":ref:`Memory usage <memory>`"

#: ../../_includes/application-receiver-table.rst:361
msgid ":ref:`Mesos Marathon <marathon>`"
msgstr ":ref:`Mesos Marathon <marathon>`"

#: ../../_includes/application-receiver-table.rst:371
msgid ":ref:`Microsoft .NET runtime <get-started-dotnet>`"
msgstr ":ref:`Microsoft .NET runtime <get-started-dotnet>`"

#: ../../_includes/application-receiver-table.rst:376
msgid ":ref:`Microsoft SQL Server <microsoft-sql-server>`"
msgstr ":ref:`Microsoft SQL Server <microsoft-sql-server>`"

#: ../../_includes/application-receiver-table.rst:381
msgid ":ref:`Microsoft Windows IIS <windows-iis>`"
msgstr ":ref:`Microsoft Windows IIS <windows-iis>`"

#: ../../_includes/application-receiver-table.rst:386
msgid ":ref:`MongoDB <mongodb>`"
msgstr ":ref:`MongoDB <mongodb>`"

#: ../../_includes/application-receiver-table.rst:391
msgid ":ref:`MongoDB Atlas cluster <mongodb-atlas>`"
msgstr ":ref:`MongoDB Atlas cluster <mongodb-atlas>`"

#: ../../_includes/application-receiver-table.rst:396
msgid ":ref:`MongoDB Atlas receiver <mongodb-atlas-receiver>`"
msgstr ":ref:`MongoDB Atlas receiver <mongodb-atlas-receiver>`"

#: ../../_includes/application-receiver-table.rst:401
msgid ":ref:`MySQL <mysql>`"
msgstr ":ref:`MySQL <mysql>`"

#: ../../_includes/application-receiver-table.rst:406
msgid ":ref:`Nagios <nagios>`"
msgstr ":ref:`Nagios <nagios>`"

#: ../../_includes/application-receiver-table.rst:411
msgid ":ref:`Network interface I/O <net-io>`"
msgstr ":ref:`Network interface I/O <net-io>`"

#: ../../_includes/application-receiver-table.rst:416
msgid ":ref:`Network protocols <protocols>`"
msgstr ":ref:`Network protocols <protocols>`"

#: ../../_includes/application-receiver-table.rst:421
msgid ":ref:`NGINX <nginx>`"
msgstr ":ref:`NGINX <nginx>`"

#: ../../_includes/application-receiver-table.rst:426
msgid ":ref:`NTPQ <telegraf-ntpq>`"
msgstr ":ref:`NTPQ <telegraf-ntpq>`"

#: ../../_includes/application-receiver-table.rst:431
msgid ":ref:`NTP server <ntp>`"
msgstr ":ref:`NTP server <ntp>`"

#: ../../_includes/application-receiver-table.rst:436
msgid ":ref:`OPcache <opcache>`"
msgstr ":ref:`OPcache <opcache>`"

#: ../../_includes/application-receiver-table.rst:441
msgid ":ref:`OpenShift Cluster <openshift-cluster>`"
msgstr ":ref:`OpenShift Cluster <openshift-cluster>`"

#: ../../_includes/application-receiver-table.rst:446
msgid ":ref:`OpenStack <openstack>`"
msgstr ":ref:`OpenStack <openstack>`"

#: ../../_includes/application-receiver-table.rst:451
msgid ":ref:`Oracle Database receiver <oracledb>`"
msgstr ":ref:`Oracle Database receiver <oracledb>`"

#: ../../_includes/application-receiver-table.rst:456
msgid ":ref:`PHP FPM <collectd-php-fpm>`"
msgstr ":ref:`PHP FPM <collectd-php-fpm>`"

#: ../../_includes/application-receiver-table.rst:461
msgid ":ref:`PostgreSQL <postgresql>`"
msgstr ":ref:`PostgreSQL <postgresql>`"

#: ../../_includes/application-receiver-table.rst:466
msgid ":ref:`procstat <procstat>`"
msgstr ":ref:`procstat <procstat>`"

#: ../../_includes/application-receiver-table.rst:471
msgid ":ref:`Prometheus exporter <prometheus-exporter>`"
msgstr ":ref:`Prometheus exporter <prometheus-exporter>`"

#: ../../_includes/application-receiver-table.rst:476
msgid ":ref:`Prometheus Go <prometheus-go>`"
msgstr ":ref:`Prometheus Go <prometheus-go>`"

#: ../../_includes/application-receiver-table.rst:481
msgid ":ref:`Prometheus NGINX Ingress <prometheus-nginx-ingress>`"
msgstr ":ref:`Prometheus NGINX Ingress <prometheus-nginx-ingress>`"

#: ../../_includes/application-receiver-table.rst:486
msgid ":ref:`Prometheus NGINX VTS <prometheus-nginx-vts>`"
msgstr ":ref:`Prometheus NGINX VTS <prometheus-nginx-vts>`"

#: ../../_includes/application-receiver-table.rst:491
msgid ":ref:`Prometheus Node exporter <prometheus-node>`"
msgstr ":ref:`Prometheus Node exporter <prometheus-node>`"

#: ../../_includes/application-receiver-table.rst:496
msgid ":ref:`Prometheus receiver <prometheus-receiver>`"
msgstr ":ref:`Prometheus receiver <prometheus-receiver>`"

#: ../../_includes/application-receiver-table.rst:501
msgid ":ref:`Prometheus Velero <prometheus-velero>`"
msgstr ":ref:`Prometheus Velero <prometheus-velero>`"

#: ../../_includes/application-receiver-table.rst:506
msgid ":ref:`RabbitMQ <rabbitmq>`"
msgstr ":ref:`RabbitMQ <rabbitmq>`"

#: ../../_includes/application-receiver-table.rst:511
msgid ":ref:`Redis <redis>`"
msgstr ":ref:`Redis <redis>`"

#: ../../_includes/application-receiver-table.rst:516
msgid ":ref:`SAP HANA <hana>`"
msgstr ":ref:`SAP HANA <hana>`"

#: ../../_includes/application-receiver-table.rst:521
msgid ":ref:`SignalFx Forwarder <signalfx-forwarder>`"
msgstr ":ref:`SignalFx Forwarder <signalfx-forwarder>`"

#: ../../_includes/application-receiver-table.rst:526
msgid ":ref:`SNMP agent <snmp>`"
msgstr ":ref:`SNMP agent <snmp>`"

#: ../../_includes/application-receiver-table.rst:531
msgid ":ref:`SolrCloud <solr>`"
msgstr ":ref:`SolrCloud <solr>`"

#: ../../_includes/application-receiver-table.rst:536
msgid ":ref:`SQL <sql>`"
msgstr ":ref:`SQL <sql>`"

#: ../../_includes/application-receiver-table.rst:541
msgid ":ref:`Statsd <statsd>`"
msgstr ":ref:`Statsd <statsd>`"

#: ../../_includes/application-receiver-table.rst:546
msgid ":ref:`Supervisor <supervisor>`"
msgstr ":ref:`Supervisor <supervisor>`"

#: ../../_includes/application-receiver-table.rst:551
msgid ":ref:`systemd <collectd-systemd>`"
msgstr ":ref:`systemd <collectd-systemd>`"

#: ../../_includes/application-receiver-table.rst:556
msgid ":ref:`Traefik <traefik>`"
msgstr ":ref:`Traefik <traefik>`"

#: ../../_includes/application-receiver-table.rst:561
msgid ":ref:`Varnish <telegraf-varnish>`"
msgstr ":ref:`Varnish <telegraf-varnish>`"

#: ../../_includes/application-receiver-table.rst:566
msgid ":ref:`VMware vSphere <vsphere>`"
msgstr ":ref:`VMware vSphere <vsphere>`"

#: ../../_includes/application-receiver-table.rst:571
msgid ":ref:`Windows Performance Counters <telegraf-win-perf-counters>`"
msgstr ":ref:`Windows Performance Counters <telegraf-win-perf-counters>`"

#: ../../_includes/application-receiver-table.rst:576
msgid ":ref:`Windows services <telegraf-win-services>`"
msgstr ":ref:`Windows services <telegraf-win-services>`"

#: ../../gdi/get-data-in/integrations.rst:1157
msgid "Community integrations"
msgstr "コミュニティとの統合"

#: ../../gdi/get-data-in/integrations.rst:1159 ../../gdi/monitoring.rst:10 ../../gdi/orchestration.rst:10
msgid "Istio"
msgstr "イスティオ"

#: ../../gdi/get-data-in/integrations.rst:1160
msgid "Jaeger"
msgstr "イェーガー"

#: ../../gdi/get-data-in/integrations.rst:1161
msgid "Linkerd"
msgstr "リンカード"

#: ../../gdi/get-data-in/integrations.rst:1162
msgid "Micrometer"
msgstr "マイクロメーター"

#: ../../gdi/get-data-in/integrations.rst:1163 ../../gdi/opentelemetry/collector-architecture.rst:94
msgid "Prometheus"
msgstr "プロメテウス"

#: ../../gdi/get-data-in/integrations.rst:1164
msgid "Spring Boot"
msgstr "スプリングブート"

#: ../../gdi/get-data-in/integrations.rst:1165
msgid "Telegraf Agent"
msgstr "テレグラフ・エージェント"

#: ../../gdi/get-data-in/integrations.rst:1166
msgid "Zipkin"
msgstr "ジプキン"

#: ../../gdi/get-data-in/integrations.rst:1168
msgid "For information about these integrations:"
msgstr "これらの統合に関する情報については"

#: ../../gdi/get-data-in/integrations.rst:1170
msgid "Log in to Splunk Observability Cloud"
msgstr "Splunk Observability Cloud にログインする"

#: ../../gdi/get-data-in/integrations.rst:1174
msgid "In the :guilabel:`Search` field, search for the name of the community integration."
msgstr ":guilabel:`Search` フィールドで、コミュニティ統合の名前を検索します。"

#: ../../gdi/get-data-in/integrations.rst:1175
msgid "Select the community integration tile to display its details."
msgstr "コミュニティ統合タイルを選択して詳細を表示します。"

#: ../../gdi/get-data-in/integrations.rst:1179
msgid "Notification services"
msgstr "通知サービス"

#: ../../gdi/get-data-in/integrations.rst:1181
msgid "These integrations let you send Splunk Observability Cloud alert notifications to the following third-party notification services:"
msgstr "これらの統合により、Splunk Observability Cloud のアラート通知を以下のサードパーティ通知サービスに送信できます："

#: ../../gdi/get-data-in/integrations.rst:1183
msgid "Amazon EventBridge"
msgstr "Amazon EventBridge"

#: ../../gdi/get-data-in/integrations.rst:1184
msgid "BigPanda"
msgstr "BigPanda"

#: ../../gdi/get-data-in/integrations.rst:1185
msgid "Jira"
msgstr "ジラ"

#: ../../gdi/get-data-in/integrations.rst:1186
msgid "Microsoft Teams"
msgstr "Microsoft Teams"

#: ../../gdi/get-data-in/integrations.rst:1187
msgid "Opsgenie"
msgstr "オプスジェニー"

#: ../../gdi/get-data-in/integrations.rst:1188
msgid "PagerDuty"
msgstr "PagerDuty"

#: ../../gdi/get-data-in/integrations.rst:1189
msgid "ServiceNow"
msgstr "ServiceNow"

#: ../../gdi/get-data-in/integrations.rst:1190
msgid "Slack"
msgstr "スラック"

#: ../../gdi/get-data-in/integrations.rst:1191
msgid "Splunk On-Call"
msgstr "Splunk オンコール"

#: ../../gdi/get-data-in/integrations.rst:1192
msgid "Webhook"
msgstr "Webhook"

#: ../../gdi/get-data-in/integrations.rst:1193
msgid "xMatters"
msgstr "xマターズ"

#: ../../gdi/get-data-in/integrations.rst:1195
msgid "For more information about integrating with notification services, see :ref:`admin-notifs-index`."
msgstr "通知サービスとの統合の詳細については、:ref:`admin-notifs-index` を参照してください。"

#: ../../gdi/get-data-in/integrations.rst:1199
msgid "Login services"
msgstr "ログインサービス"

#: ../../gdi/get-data-in/integrations.rst:1201
msgid "These login service integrations allow your users to single sign-on (SSO) to Splunk Observability Cloud using a third-party identity provider (IdP) that uses SAML SSO or a custom URL that you specify."
msgstr "これらのログインサービス統合により、SAML SSO を使用するサードパーティの ID プロバイダ (IdP) または指定したカスタム URL を使用して、ユーザーが Splunk Observability Cloud にシングルサインオン (SSO) できるようになります。"

#: ../../gdi/get-data-in/integrations.rst:1203
msgid "Active Directory FS"
msgstr "アクティブディレクトリFS"

#: ../../gdi/get-data-in/integrations.rst:1204
msgid "Azure Active Directory"
msgstr "Azure Active Directory"

#: ../../gdi/get-data-in/integrations.rst:1205
msgid "Google Cloud Identity"
msgstr "Google Cloud Identity"

#: ../../gdi/get-data-in/integrations.rst:1206
msgid "Google Sign-In"
msgstr "グーグルサインイン"

#: ../../gdi/get-data-in/integrations.rst:1207
msgid "Okta"
msgstr "オクタ"

#: ../../gdi/get-data-in/integrations.rst:1208
msgid "OneLogin"
msgstr "OneLogin"

#: ../../gdi/get-data-in/integrations.rst:1209
msgid "PingOne"
msgstr "PingOne"

#: ../../gdi/get-data-in/integrations.rst:1210
msgid "SAML"
msgstr "SAML"

#: ../../gdi/get-data-in/integrations.rst:1212
msgid "For more information about configuring an SSO integration, see :ref:`sso-label`."
msgstr "SSO統合の設定については、:ref:`sso-label` を参照してください。"

#: ../../gdi/get-data-in/integrations.rst:1216
msgid "Data link destinations"
msgstr "データリンク先"

#: ../../gdi/get-data-in/integrations.rst:1218
msgid "Data links let you link metadata to the following destinations outside of Splunk Observability Cloud:"
msgstr "データリンクでは、メタデータを Splunk Observability Cloud 以外の以下の宛先にリンクできます："

#: ../../gdi/get-data-in/integrations.rst:1220 ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:69
msgid "Splunk Cloud Platform"
msgstr "Splunk クラウドプラットフォーム"

#: ../../gdi/get-data-in/integrations.rst:1221 ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:72
msgid "Splunk Enterprise"
msgstr "Splunk Enterprise"

#: ../../gdi/get-data-in/integrations.rst:1222
msgid "Kibana"
msgstr "キバナ"

#: ../../gdi/get-data-in/integrations.rst:1224
msgid "For more information about creating data links, see :ref:`link-metadata-to-content`."
msgstr "データリンクの作成については、:ref:`link-metadata-to-content` を参照。"

#: ../../gdi/get-data-in/integrations.rst:1228
msgid "Other integrations"
msgstr "その他の統合"

#: ../../gdi/get-data-in/integrations.rst:1230
msgid ":new-page:`Grafana <https://grafana.com/grafana/plugins/grafana-splunk-monitoring-datasource/>`"
msgstr ":new-page:`グラファナ <https://grafana.com/grafana/plugins/grafana-splunk-monitoring-datasource/>`"

#: ../../gdi/get-data-in/integrations.rst:1232
msgid ":new-page:`LaunchDarkly <https://docs.launchdarkly.com/integrations/signalfx>`"
msgstr ":new-page:`LaunchDarkly <https://docs.launchdarkly.com/integrations/signalfx>`"

#: ../../gdi/get-data-in/integrations.rst:1234
msgid ":new-page:`Pulumi <https://www.pulumi.com/docs/intro/cloud-providers/signalfx/>`"
msgstr ":new-page:`プルミ <https://www.pulumi.com/docs/intro/cloud-providers/signalfx/>`"

#: ../../gdi/get-data-in/integrations.rst:1236
msgid ":new-page:`Terraform <https://registry.terraform.io/providers/splunk-terraform/signalfx/latest/docs>`"
msgstr ":new-page:`テラフォーム <https://registry.terraform.io/providers/splunk-terraform/signalfx/latest/docs>`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:-1
msgid "Configure the Splunk Observability Cloud real user monitoring / RUM instrumentation for your Android applications."
msgstr "Android アプリケーション用に Splunk Observability Cloud リアルユーザーモニタリング / RUM インストルメンテーションを設定します。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:5
msgid "Configure the Splunk Android RUM instrumentation"
msgstr "Splunk Android RUM インストルメンテーションを設定する"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:10
msgid "You can configure the Android RUM agent from the Splunk OpenTelemetry Instrumentation for Android to add custom attributes, adapt the instrumentation to your environment and application, customize sampling, and more."
msgstr "Splunk OpenTelemetry Instrumentation for Android から Android RUM エージェントを設定し、カスタム属性の追加、環境やアプリケーションに合わせた計測、サンプリングのカスタマイズなどを行うことができます。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:12
msgid "To configure the Android RUM agent, pass the settings by preparing a ``Config`` instance using the fluent builder API. The following example shows how to configure the RUM token, Splunk realm, and application name:"
msgstr "Android RUM エージェントを設定するには、fluent builder API を使用して``Config`` インスタンスを準備し、設定を渡します。以下の例では、RUM トークン、Splunk レルム、アプリケーション名を設定する方法を示しています："

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:37
msgid "Use the following settings to configure the Android RUM agent:"
msgstr "以下の設定を使用して、Android RUMエージェントを構成します："

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:43 ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:79 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:250 ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:62 ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:108 ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:40 ../../gdi/monitors-cache/memcached.md:27 ../../gdi/monitors-cache/opcache.md:68 ../../gdi/monitors-cloud/openstack.md:29 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
#: ../../gdi/monitors-conviva/conviva.md:26 ../../gdi/monitors-databases/apache-couchdb.md:33 ../../gdi/monitors-databases/apache-spark.md:30 ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-databases/hadoop.md:30 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/logparser.md:23 ../../gdi/monitors-databases/logstash.md:17 ../../gdi/monitors-databases/microsoft-sql-server.md:40 ../../gdi/monitors-databases/mongodb-atlas.md:7 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/mysql.md:49
#: ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-databases/sap-hana.md:23 ../../gdi/monitors-databases/sql.md:23 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/chrony.md:22 ../../gdi/monitors-hosts/collectd-df.md:23 ../../gdi/monitors-hosts/collectd-plugin.md:23 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/cpu.md:7 ../../gdi/monitors-hosts/disk.md:7 ../../gdi/monitors-hosts/docker.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/filesystems.md:7
#: ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-hosts/host-processes.md:7 ../../gdi/monitors-hosts/host-processload.md:7 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/interface.md:7 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-hosts/microsoft-windows-iis.md:25 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-hosts/ntpq.md:23 ../../gdi/monitors-hosts/php-fpm.md:42 ../../gdi/monitors-hosts/procstat.md:23 ../../gdi/monitors-hosts/solr.md:23 ../../gdi/monitors-hosts/supervisor.md:23
#: ../../gdi/monitors-hosts/systemd.md:34 ../../gdi/monitors-hosts/varnish.md:33 ../../gdi/monitors-hosts/vsphere.md:29 ../../gdi/monitors-hosts/win-services.md:21 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/java-monitor.md:27 ../../gdi/monitors-languages/jmx.md:35 ../../gdi/monitors-languages/microsoft-dotnet.md:41 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-messaging/rabbitmq.md:25 ../../gdi/monitors-monitoring/cadvisor.md:27 ../../gdi/monitors-monitoring/cgroups.md:35 ../../gdi/monitors-monitoring/jaeger-grpc.md:25
#: ../../gdi/monitors-monitoring/nagios.md:64 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-monitoring/signalfx-forwarder.md:23 ../../gdi/monitors-monitoring/win_perf_counters.md:27 ../../gdi/monitors-network/aws-appmesh.md:26 ../../gdi/monitors-network/dns.md:21 ../../gdi/monitors-network/logstash-tcp.md:25 ../../gdi/monitors-network/net-io.md:21
#: ../../gdi/monitors-network/ntp.md:23 ../../gdi/monitors-network/snmp.md:27 ../../gdi/monitors-network/statsd.md:35 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-events.md:63 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7 ../../gdi/monitors-orchestration/mesos-marathon.md:22 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "Option"
msgstr "オプション"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:45
msgid ":code:`setRumAccessToken(String)`"
msgstr ":code:`setRumAccessToken(String)`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:46
msgid "RUM token that authorizes the agent to send telemetry to Splunk Observability Cloud. To generate a RUM access token, see :ref:`rum-access-token`."
msgstr "Splunk Observability Cloud にテレメトリを送信することをエージェントに許可する RUM トークン。RUM アクセストークンを生成するには、:ref:`rum-access-token` を参照してください。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:47
msgid ":code:`setRealm(String)`"
msgstr ":code:`setRealm(String)`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:48
msgid "Realm in Splunk Observability Cloud, used to generate the endpoint URL. For example, ``us0``."
msgstr "エンドポイント URL の生成に使用される Splunk Observability Cloud のレルム。例えば、``us0`` 。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:49
msgid ":code:`setBeaconEndpoint(String)`"
msgstr ":code:`setBeaconEndpoint(String)`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:50
msgid "Use this method instead of :code:`setRealm(String)` to provide the full URL of the RUM ingest endpoint. For example, :code:`https://rum-ingest.<realm>.signalfx.com/v1/rum`."
msgstr ":code:`setRealm(String)` の代わりにこのメソッドを使用して、RUM インジェスト・エンドポイントの完全な URL を指定します。例えば、:code:`https://rum-ingest.<realm>.signalfx.com/v1/rum`."

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:51
msgid ":code:`setApplicationName(String)`"
msgstr ":code:`setApplicationName(String)`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:52
msgid "Sets the name of the application."
msgstr "アプリケーションの名前を設定します。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:53
msgid ":code:`setDeploymentEnvironment(String)`"
msgstr ":code:`setDeploymentEnvironment(String)`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:54
msgid "Sets the environment attribute on the spans that are generated by the instrumentation."
msgstr "インスツルメンテーションによって生成されるスパンの環境属性を設定します。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:55
msgid ":code:`setGlobalAttributes(Attributes)`"
msgstr ":code:`setGlobalAttributes(Attributes)`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:56
msgid "Attributes to append to every span collected. For an example, see :ref:`android-rum-attributes`."
msgstr "収集したすべてのスパンに付加する属性。例については、:ref:`android-rum-attributes` を参照のこと。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:57
msgid ":code:`filterSpans(Consumer<SpanFilterBuilder>)`"
msgstr ":code:`filterSpans(Consumer<SpanFilterBuilder>)`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:58
msgid "Lets you filter or customize spans. For example, you can use ``filterSpans`` to redact personal identifiable information (PII), remove span attributes, or change the span name. See :ref:`android-rum-span-filtering`."
msgstr "スパンのフィルタリングやカスタマイズができます。例えば、``filterSpans`` 、個人を特定できる情報（PII）を編集したり、スパンの属性を削除したり、スパン名を変更したりすることができます。:ref:`android-rum-span-filtering` を参照。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:59
msgid ":code:`enableDiskBuffering()`"
msgstr ":code:`enableDiskBuffering()`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:60
msgid "Activates storage-based buffering of telemetry. This setting is useful when instrumenting applications that might work offline for extended periods of time."
msgstr "テレメトリのストレージベースのバッファリングを有効にします。この設定は、長時間オフラインで動作する可能性のあるアプリケーションを計測する場合に便利です。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:61
msgid ":code:`limitDiskUsageMegabytes(int)`"
msgstr ":code:`limitDiskUsageMegabytes(int)`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:62
msgid "Sets the maximum amount of storage to use for disk buffering. The default value is 25 MB. Requires ``diskBufferingEnabled`` to be ``true``."
msgstr "ディスク・バッファリングに使用するストレージの最大量を設定する。デフォルト値は25MB。``diskBufferingEnabled`` を``true`` にする必要がある。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:63
msgid ":code:`enableSessionBasedSampling(double)`"
msgstr ":code:`enableSessionBasedSampling(double)`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:64
msgid "Activates session ID based sampling and sets a sampling ratio. The sampling ratio is the probability of a session being included between. Values range between ``0.0`` (all dropped) and ``1.0`` (all included)."
msgstr "セッションIDベースのサンプリングを有効にし、サンプリング比率を設定する。サンプリング比率は、セッションがその間に含まれる確率である。値の範囲は``0.0`` （すべて脱落）から``1.0`` （すべて含む）。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:65
msgid ":code:`enableDebug()`"
msgstr ":code:`enableDebug()`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:66
msgid "Activates debug mode. This feature is deactivated by default. Activating debug mode activates the OpenTelemetry logging span exporter, which might be useful when debugging instrumentation issues."
msgstr "デバッグモードを有効にする。この機能はデフォルトでは無効になっている。デバッグモードを有効にすると、OpenTelemetry ロギング・スパン・エクスポーターが有効になります。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:73 ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:102
msgid "Use the following settings to activate or deactivate the collection of specific data:"
msgstr "以下の設定を使用して、特定のデータの収集を有効または無効にします："

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:81
msgid ":code:`disableCrashReporting()`"
msgstr ":code:`disableCrashReporting()`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:82
msgid "Deactivates crash reporting. This feature is activated by default."
msgstr "クラッシュ報告を無効にする。この機能はデフォルトで有効になっている。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:83
msgid ":code:`disableAnrDetection()`"
msgstr ":code:`disableAnrDetection()`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:84
msgid "Deactivates ANR (Application not responding) detection and reporting. This feature is activated by default."
msgstr "ANR（Application not responding）の検出と報告を無効にする。この機能はデフォルトで有効になっている。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:85
msgid ":code:`disableNetworkMonitor()`"
msgstr ":code:`disableNetworkMonitor()`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:86
msgid "Deactivates network monitoring. This feature is activated by default."
msgstr "ネットワーク監視を無効にする。この機能はデフォルトで有効になっている。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:87
msgid ":code:`disableSlowRenderingDetection()`"
msgstr ":code:`disableSlowRenderingDetection()`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:88
msgid "Deactivates the detection of slow frame renders. This feature is activated by default. Splunk RUM defines renders as slow or frozen following the Android Vitals definition of the Android Developers documentation."
msgstr "スローフレームレンダリングの検出を無効にする。この機能はデフォルトで有効になっている。Splunk RUM では、Android Developers ドキュメントの Android Vitals 定義に従って、レンダリングが遅いまたはフリーズしていると定義しています。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:89
msgid ":code:`setSlowRenderingDetectionPollInterval(Duration)`"
msgstr ":code:`setSlowRenderingDetectionPollInterval(Duration)`"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:90
msgid "Sets the default polling interval for slow or frozen render detection. The default value is ``1000`` milliseconds. The value must be positive."
msgstr "レンダリングが遅い、またはフリーズしたことを検出するためのデフォルトのポーリング間隔を設定します。デフォルト値は``1000`` ミリ秒。値は正でなければならない。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:95
msgid "HTTP instrumentation settings"
msgstr "HTTP計装設定"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:97
msgid "The Android RUM agent includes instrumentation for the OkHttp and Volley HTTP clients."
msgstr "Android RUMエージェントには、OkHttpとVolley HTTPクライアントのインスツルメンテーションが含まれています。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:100
msgid "OkHttp"
msgstr "OkHttp"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:102
msgid "Instrument OkHttp using the ``Call.Factory`` wrapper, as in the following example:"
msgstr "次の例のように、``Call.Factory`` ラッパーを使用して OkHttp をインストゥルメントします："

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:111
msgid "Volley HTTP (Experimental)"
msgstr "ボレーHTTP（実験的）"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:113
msgid "To instrument Volley HTTP, add the ``splunk-otel-android-volley`` dependency to the ``build.gradle.kts`` file:"
msgstr "Volley HTTPを計測するには、``splunk-otel-android-volley`` 依存関係を``build.gradle.kts`` ファイルに追加する："

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:123
msgid "Use the ``VolleyTracing`` class to create an instance of ``VolleyTracing``, as in the following example:"
msgstr "次の例のように、``VolleyTracing`` クラスを使って、``VolleyTracing`` のインスタンスを作成する："

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:129
msgid "The following example shows how to retrieve an instance of ``HurlStack`` from your ``volleyTracing`` instance:"
msgstr "次の例は、``volleyTracing`` インスタンスから``HurlStack`` のインスタンスを取得する方法を示しています："

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:135
msgid "You can then use the ``hurlStack`` instance to create your request queue and send requests as usual."
msgstr "その後、``hurlStack`` インスタンスを使ってリクエストキューを作成し、通常通りリクエストを送信することができる。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:138
msgid "Capture additional request and response headers"
msgstr "リクエストとレスポンスの追加ヘッダーをキャプチャする"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:140
msgid "You can capture additional request and response headers using the HTTP instrumentations. Additional headers appear with the ``http.request.header.`` and ``http.response.header.`` prefixes."
msgstr "HTTPインスツルメンテーションを使って、リクエストとレスポンスのヘッダーを追加でキャプチャすることができる。その他のヘッダーは、``http.request.header.`` と``http.response.header.`` のプレフィックスで表示される。"

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:142
msgid "To capture additional headers, provide the builder with a list of headers to catch. For example:"
msgstr "追加のヘッダを捕捉するには、捕捉するヘッダのリストをビルダーに与えます。例えば、こうだ："

#: ../../gdi/get-data-in/rum/android/configure-rum-android-instrumentation.rst:149
msgid "The resulting span contains an ``http.request.header.x_my_custom_header`` attribute with one or more header values."
msgstr "結果のスパンは、一つ以上のヘッダ値を持つ``http.request.header.x_my_custom_header`` 属性を含みます。"

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:10
msgid "Install the Android RUM agent"
msgstr "Android RUMエージェントをインストールする"

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:10 ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:10 ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:10 ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:10
msgid "Manually instrument applications"
msgstr "アプリケーションを手動で計測"

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:10
msgid "Android RUM data model"
msgstr "Android RUMデータモデル"

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:10 ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:10 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:100 ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:10 ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:334 ../../gdi/monitors-cache/memcached.md:72 ../../gdi/monitors-cache/memory.md:67 ../../gdi/monitors-cache/opcache.md:137 ../../gdi/monitors-cloud/heroku.md:97 ../../gdi/monitors-cloud/kong.md:162 ../../gdi/monitors-cloud/openstack.md:79 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:94 ../../gdi/monitors-conviva/conviva.md:82
#: ../../gdi/monitors-databases/apache-couchdb.md:88 ../../gdi/monitors-databases/apache-spark.md:93 ../../gdi/monitors-databases/cassandra.md:98 ../../gdi/monitors-databases/consul.md:98 ../../gdi/monitors-databases/etcd.md:77 ../../gdi/monitors-databases/exec-input.md:113 ../../gdi/monitors-databases/hadoop.md:75 ../../gdi/monitors-databases/hadoopjmx.md:171 ../../gdi/monitors-databases/logparser.md:91 ../../gdi/monitors-databases/logstash.md:61 ../../gdi/monitors-databases/microsoft-sql-server.md:105 ../../gdi/monitors-databases/mongodb-atlas.md:43 ../../gdi/monitors-databases/mongodb.md:111 ../../gdi/monitors-databases/mysql.md:131
#: ../../gdi/monitors-databases/postgresql.md:46 ../../gdi/monitors-databases/redis.md:108 ../../gdi/monitors-databases/sap-hana.md:79 ../../gdi/monitors-databases/sql.md:200 ../../gdi/monitors-gitlab/gitlab.md:164 ../../gdi/monitors-hosts/amazon-ecs-metadata.md:57 ../../gdi/monitors-hosts/apache-httpserver.md:106 ../../gdi/monitors-hosts/apache-tomcat.md:97 ../../gdi/monitors-hosts/apache-zookeeper.md:76 ../../gdi/monitors-hosts/chrony.md:57 ../../gdi/monitors-hosts/collectd-df.md:71 ../../gdi/monitors-hosts/collectd-plugin.md:61 ../../gdi/monitors-hosts/collectd-uptime.md:57 ../../gdi/monitors-hosts/coredns.md:90 ../../gdi/monitors-hosts/couchbase.md:72
#: ../../gdi/monitors-hosts/cpu.md:30 ../../gdi/monitors-hosts/cpufreq.md:57 ../../gdi/monitors-hosts/disk.md:33 ../../gdi/monitors-hosts/docker.md:80 ../../gdi/monitors-hosts/elasticsearch-query.md:247 ../../gdi/monitors-hosts/elasticsearch.md:186 ../../gdi/monitors-hosts/filesystems.md:33 ../../gdi/monitors-hosts/haproxy.md:133 ../../gdi/monitors-hosts/health-checker.md:74 ../../gdi/monitors-hosts/host-metadata.md:27 ../../gdi/monitors-hosts/host-processes.md:35 ../../gdi/monitors-hosts/host-processlist.md:52 ../../gdi/monitors-hosts/host-processload.md:30 ../../gdi/monitors-hosts/http.md:138 ../../gdi/monitors-hosts/jenkins.md:126
#: ../../gdi/monitors-hosts/kafka-consumer.md:99 ../../gdi/monitors-hosts/kafka-producer.md:98 ../../gdi/monitors-hosts/microsoft-windows-iis.md:68 ../../gdi/monitors-hosts/nginx.md:94 ../../gdi/monitors-hosts/ntpq.md:70 ../../gdi/monitors-hosts/php-fpm.md:104 ../../gdi/monitors-hosts/procstat.md:76 ../../gdi/monitors-hosts/solr.md:71 ../../gdi/monitors-hosts/supervisor.md:69 ../../gdi/monitors-hosts/systemd.md:108 ../../gdi/monitors-hosts/varnish.md:78 ../../gdi/monitors-hosts/vsphere.md:109 ../../gdi/monitors-hosts/win-services.md:59 ../../gdi/monitors-languages/asp-dot-net.md:68 ../../gdi/monitors-languages/expvar.md:90 ../../gdi/monitors-languages/genericjmx.md:119
#: ../../gdi/monitors-languages/java-monitor.md:75 ../../gdi/monitors-languages/jmx.md:143 ../../gdi/monitors-languages/microsoft-dotnet.md:84 ../../gdi/monitors-messaging/apache-activemq.md:103 ../../gdi/monitors-messaging/apache-kafka.md:108 ../../gdi/monitors-messaging/rabbitmq.md:89 ../../gdi/monitors-monitoring/cadvisor.md:69 ../../gdi/monitors-monitoring/cgroups.md:90 ../../gdi/monitors-monitoring/jaeger-grpc.md:67 ../../gdi/monitors-monitoring/nagios.md:90 ../../gdi/monitors-monitoring/prometheus-exporter.md:110 ../../gdi/monitors-monitoring/prometheus-go.md:86 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:86
#: ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:80 ../../gdi/monitors-monitoring/prometheus-node.md:78 ../../gdi/monitors-monitoring/prometheus-velero.md:84 ../../gdi/monitors-monitoring/signalfx-forwarder.md:64 ../../gdi/monitors-monitoring/win_perf_counters.md:98 ../../gdi/monitors-network/aws-appmesh.md:92 ../../gdi/monitors-network/dns.md:68 ../../gdi/monitors-network/logstash-tcp.md:137 ../../gdi/monitors-network/net-io.md:65 ../../gdi/monitors-network/network-protocols.md:57 ../../gdi/monitors-network/ntp.md:68 ../../gdi/monitors-network/snmp.md:142 ../../gdi/monitors-network/statsd.md:115 ../../gdi/monitors-network/traefik.md:92
#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:134 ../../gdi/monitors-orchestration/kubernetes-cluster.md:45 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:47 ../../gdi/monitors-orchestration/kubernetes-events.md:137 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:44 ../../gdi/monitors-orchestration/kubernetes-proxy.md:175 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:82 ../../gdi/monitors-orchestration/mesos-marathon.md:71 ../../gdi/monitors-orchestration/openshift-cluster.md:84 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:150
#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:338 ../../gdi/opentelemetry/components/attributes-processor.rst:204 ../../gdi/opentelemetry/components/batch-processor.rst:68 ../../gdi/opentelemetry/components/databricks-receiver.rst:125 ../../gdi/opentelemetry/components/filter-processor.rst:392 ../../gdi/opentelemetry/components/fluentd-receiver.rst:54 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:330 ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:213 ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:344 ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:113
#: ../../gdi/opentelemetry/components/logging-exporter.rst:98 ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:95 ../../gdi/opentelemetry/components/oracledb-receiver.rst:106 ../../gdi/opentelemetry/components/postgresql-receiver.rst:92 ../../gdi/opentelemetry/components/prometheus-receiver.rst:147 ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:153 ../../gdi/opentelemetry/components/resource-processor.rst:102 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:442 ../../gdi/opentelemetry/components/signalfx-exporter.rst:333 ../../gdi/opentelemetry/components/signalfx-receiver.rst:64
#: ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:97 ../../gdi/opentelemetry/components/smartagent-receiver.rst:85 ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:97 ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:301 ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:91 ../../gdi/opentelemetry/components/transform-processor.rst:180 ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:160 ../../gdi/opentelemetry/discovery-mode.rst:189 ../../gdi/opentelemetry/opentelemetry.rst:10 ../../gdi/opentelemetry/resources.rst:59 ../../gdi/other-ingestion-methods/upstream-collector.rst:125
msgid "Troubleshooting"
msgstr "トラブルシューティング"

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:-1
msgid "Learn how to instrument your Android applications in Splunk Observability Cloud real user monitoring / RUM instrumentation, and what data you can collect."
msgstr "Splunk Observability Cloud のリアルユーザーモニタリング / RUM インスツルメンテーションで Android アプリケーションをインスツルメンテーションする方法と、収集できるデータについて説明します。"

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:5
msgid "Instrument Android applications for Splunk RUM"
msgstr "Splunk RUM 用の Android アプリケーションを作成する"

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:19
msgid "Instrument your Android applications to get Real User Monitoring (RUM) data into Splunk Observability Cloud. With Splunk RUM for Mobile, you can gain insight about the performance and health of your mobile apps."
msgstr "Android アプリケーションをインスツルメンテーションして、リアルユーザーモニタリング (RUM) データを Splunk Observability Cloud に取り込みます。Splunk RUM for Mobile を使用すると、モバイルアプリのパフォーマンスと健全性を把握できます。"

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:27
msgid "To generate all the basic installation commands for your environment and application, use the Android Instrumentation guided setup. To access the Android Instrumentation guided setup, follow these steps:"
msgstr "あなたの環境とアプリケーションのための基本的なインストールコマンドをすべて生成するには、Android Instrumentationガイド付きセットアップを使用します。Android Instrumentationガイド付きセットアップにアクセスするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:31
msgid "Open the :new-page:`Android Instrumentation guided setup <https://login.signalfx.com/#/gdi/scripted/android/step-1?category=use-case-user-experience&gdiState=%7B\"integrationId\":\"android\"%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`Android Instrumentation guided setup<https://login.signalfx.com/#/gdi/scripted/android/step-1?category=use-case-user-experience&gdiState=%7B\"integrationId\":\"android\"%7D>` を開いてください。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:37 ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:40 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:60 ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:35 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:46 ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:36 ../../gdi/get-data-in/rum/react/install-rum-react.rst:43
msgid "In the integration filter menu, select :guilabel:`By Use Case`."
msgstr "統合フィルターメニューで、:guilabel:`By Use Case` を選択する。"

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:39 ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:42 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:61 ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:37 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:48 ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:38 ../../gdi/get-data-in/rum/react/install-rum-react.rst:45
msgid "Select the :guilabel:`Monitor user experience` use case."
msgstr ":guilabel:`Monitor user experience` ユースケースを選択してください。"

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:41
msgid "Select the :guilabel:`Android Instrumentation` tile to open the Android Instrumentation guided setup."
msgstr ":guilabel:`Android Instrumentation` タイルを選択し、Android Instrumentation ガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:43
msgid "For detailed installation instructions and requirements, see :ref:`android-rum-install`."
msgstr "詳細なインストール手順と要件については、:ref:`android-rum-install` を参照してください。"

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:51
msgid "Learn about the Splunk Android RUM data model. See :ref:`rum-android-data`."
msgstr "Splunk Android RUM データモデルについて学ぶ。:ref:`rum-android-data` を参照。"

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:52
msgid ":ref:`configure-android-instrumentation`."
msgstr ":ref:`configure-android-instrumentation`."

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:53
msgid ":ref:`manual-android-instrumentation`."
msgstr ":ref:`manual-android-instrumentation`."

#: ../../gdi/get-data-in/rum/android/get-android-data-in.rst:54
msgid ":ref:`common-android-troubleshooting`."
msgstr ":ref:`common-android-troubleshooting`."

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:-1
msgid "Instrument your Android applications in Splunk Observability Cloud real user monitoring / RUM instrumentation using the agent."
msgstr "エージェントを使用して Splunk Observability Cloud リアルユーザーモニタリング / RUM インスツルメンテーションで Android アプリケーションをインスツルメンテーションします。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:5
msgid "Install the Android RUM agent for Splunk RUM"
msgstr "Splunk RUM 用 Android RUM エージェントをインストールする"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:10
msgid "You can instrument your Android applications for Splunk RUM using the Android RUM agent from the Splunk OpenTelemetry Instrumentation for Android."
msgstr "Splunk OpenTelemetry Instrumentation for Android の Android RUM エージェントを使用すると、Android アプリケーションを Splunk RUM 用にインスツルメンテーションできます。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:12
msgid "To instrument your Android application and get data into Splunk RUM, follow the instructions on this page."
msgstr "Android アプリケーションを計測して Splunk RUM にデータを取り込むには、このページの手順に従ってください。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:14
msgid "Splunk APM is not required to instrument Splunk RUM for Android."
msgstr "Splunk RUM for Android の計測に Splunk APM は必要ありません。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:21 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:36 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:16
msgid "Decide which version to run in your environment"
msgstr "あなたの環境で実行するバージョンを決める"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:22 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:37 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:18
msgid "Latest updates automatically whenever Splunk RUM releases a new version. In pre-production, use latest to try out the most recent version of Splunk RUM. In production environments, use the pinned version which was previously tested in pre-production and update the production version on a monthly cycle."
msgstr "Splunk RUM が新バージョンをリリースするたびに、最新のアップデートが自動的に行われます。プリプロダクションでは、最新バージョンの Splunk RUM を試すために latest を使用します。本番環境では、事前に本番環境でテストした固定バージョンを使用し、毎月のサイクルで本番バージョンを更新する。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:28
msgid "Splunk RUM for Mobile supports Java and Kotlin applications for Android API Level 21 and higher. API levels 21 to 25 require core library desugaring activated. See :ref:`enable-desugaring`."
msgstr "Splunk RUM for Mobile は、Android API Level 21 以上の Java および Kotlin アプリケーションをサポートしています。APIレベル21から25は、コアライブラリのデスガリングを有効にする必要がある。:ref:`enable-desugaring` を参照。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:33
msgid "Activate desugaring in your application"
msgstr "アプリケーションでデスガリングを有効にする"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:35
msgid "To instrument applications that run on Android API levels 21 to 25, you must activate desugaring."
msgstr "Android APIレベル21から25で動作するアプリケーションを計測するには、デシュガリングを有効にする必要があります。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:37
msgid "To activate desugaring in your application, open the build.gradle file for your app module and update the ``compileOptions`` and ``dependencies`` sections as in the following examples:"
msgstr "アプリケーションでdesugaringを有効にするには、アプリ・モジュールのbuild.gradleファイルを開き、以下の例のように``compileOptions`` 、``dependencies`` セクションを更新する："

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:77
msgid "Save and sync your project to implement desaguring in your application."
msgstr "プロジェクトを保存して同期し、アプリケーションにデサジャリングを実装します。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:79
msgid "Make sure that your Android Gradle plugin is version 4.0.0 and higher."
msgstr "Android Gradleプラグインのバージョンが4.0.0以上であることを確認してください。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:84
msgid "Install the Android agent as a dependency"
msgstr "依存関係としてAndroidエージェントをインストールする"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:86
msgid "To activate the agent, you must install the Android RUM agent as a code-level dependency in your Android application."
msgstr "エージェントをアクティブにするには、Androidアプリケーションにコードレベルの依存関係としてAndroid RUMエージェントをインストールする必要があります。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:88
msgid "Follow these steps to install the Android RUM agent using Maven Central:"
msgstr "以下の手順に従って、Maven Central を使用して Android RUM エージェントをインストールしてください："

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:90
msgid "Make sure Maven Central is in the repositories section of your main build.gradle file:"
msgstr "メインのbuild.gradleファイルのrepositoriesセクションにMaven Centralがあることを確認してください："

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:102
msgid "Add the latest Android RUM agent release as a dependency in the build.gradle file of your application:"
msgstr "アプリケーションのbuild.gradleファイルに、最新のAndroid RUMエージェントのリリースを依存関係として追加します："

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:126
msgid "Configure and initialize the Android RUM agent by passing a configuration object to the initialization call in ``Application.onCreate()``:"
msgstr "``Application.onCreate()`` の初期化呼び出しに設定オブジェクトを渡して、Android RUM エージェントを設定・初期化する："

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:159
msgid "The value passed to ``.realm()`` is the Splunk Observability Cloud realm, for example, ``us0``. To find the realm name of your account, follow these steps:"
msgstr "``.realm()`` に渡される値は Splunk Observability Cloud レルムで、例えば``us0`` です。アカウントのレルム名を見つけるには、以下の手順に従ってください："

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:167 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:105 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:142 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:184 ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:52 ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:136 ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:160 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:137 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:223
msgid "To generate a RUM access token, see :ref:`rum-access-token`."
msgstr "RUM アクセストークンを生成するには、:ref:`rum-access-token` を参照してください。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:169
msgid "Instrument your HTTP client. For example, the following snippets instruments OkHttp:"
msgstr "HTTPクライアントをインストルメントする。例えば、以下のスニペットは、OkHttp："

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:177
msgid "See :ref:`android-rum-http-client-settings` for more information."
msgstr "詳しくは:ref:`android-rum-http-client-settings` 。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:179
msgid "Release the changes to the Android application."
msgstr "Androidアプリケーションへの変更をリリースする。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:181
msgid "Generate some user activity in your application. After you've interacted with the application, verify that the data is appearing in the RUM dashboard."
msgstr "アプリケーションでユーザーのアクティビティを生成します。アプリケーションと対話した後、データがRUMダッシュボードに表示されていることを確認します。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:183
msgid "You can check whether the Android RUM agent has been initialized by calling the ``SplunkRum.isInitialized()`` method anywhere in your code."
msgstr "Android RUMエージェントが初期化されたかどうかは、コードの任意の場所で``SplunkRum.isInitialized()`` メソッドを呼び出すことで確認できます。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:185
msgid "For a sample application using Android RUM, see :new-page:`the sample application in GitHub <https://github.com/signalfx/splunk-otel-android/tree/main/sample-app>`."
msgstr "Android RUMを使用したサンプルアプリケーションについては、GitHub<https://github.com/signalfx/splunk-otel-android/tree/main/sample-app>` の:new-page:`サンプルアプリケーションをご覧ください。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:190
msgid "Build the Android RUM library locally"
msgstr "Android RUMライブラリをローカルでビルドする"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:192
msgid "To download and build the Android RUM library locally, follow these steps:"
msgstr "Android RUMライブラリをローカルにダウンロードしてビルドするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:194
msgid "Clone the repository to your machine:"
msgstr "リポジトリをあなたのマシンにクローンします："

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:200
msgid "Build locally and publish to your local Maven repository:"
msgstr "ローカルでビルドし、ローカルの Maven リポジトリに公開します："

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:206
msgid "Make sure to set ``mavenLocal()`` as the repository in your build.gradle file:"
msgstr "build.gradleファイルのリポジトリに``mavenLocal()`` ："

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:218
msgid "Add the library you've built as a dependency in the build.gradle file:"
msgstr "ビルドしたライブラリをbuild.gradleファイルに依存関係として追加する："

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:231
msgid "Instrument Android WebViews using the Browser RUM agent"
msgstr "Browser RUMエージェントを使用してAndroid WebViewをインストゥルメントする"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:233
msgid "You can use Mobile RUM instrumentation and Browser RUM instrumentation simultaneously by sharing the ``splunk.rumSessionId`` between both instrumentations to see RUM data combined in one stream."
msgstr "モバイルRUMインスツルメンテーションとブラウザRUMインスツルメンテーションを同時に使用するには、両方のインスツルメンテーション間で``splunk.rumSessionId`` を共有し、RUMデータを1つのストリームにまとめて表示します。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:235
msgid "The following snippet shows how to integrate Android RUM with Splunk Browser RUM:"
msgstr "以下のスニペットは、Android RUM を Splunk Browser RUM と統合する方法を示しています："

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:261 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:240 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:274 ../../gdi/get-data-in/rum/react/install-rum-react.rst:188
msgid "Link RUM with Splunk APM"
msgstr "RUM と Splunk APM をリンクする"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:263 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:242 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:276 ../../gdi/get-data-in/rum/react/install-rum-react.rst:190
msgid "Splunk RUM uses server timing to calculate the response time between the front end and back end of your application, and to join the front-end and back-end traces for end-to-end visibility."
msgstr "Splunk RUM は、サーバータイミングを使用してアプリケーションのフロントエンドとバックエンド間の応答時間を計算し、フロントエンドとバックエンドのトレースを結合してエンドツーエンドを可視化します。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:265 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:244 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:278 ../../gdi/get-data-in/rum/react/install-rum-react.rst:192
msgid "By default, the Splunk Distributions of OpenTelemetry already send the ``Server-Timing`` header. The header links spans from the browser with back-end spans and traces."
msgstr "デフォルトでは、OpenTelemetry の Splunk ディストリビューションはすでに``Server-Timing`` ヘッダを送信しています。ヘッダーは、ブラウザからのスパンとバックエンドのスパンおよびトレースをリンクしている。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:267 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:246
msgid "The APM environment variable for controlling the ``Server-Timing`` header  is ``SPLUNK_TRACE_RESPONSE_HEADER_ENABLED=true``. Set ``SPLUNK_TRACE_RESPONSE_HEADER_ENABLED=true`` to link to Splunk APM."
msgstr "``Server-Timing`` ヘッダーを制御するための APM 環境変数は``SPLUNK_TRACE_RESPONSE_HEADER_ENABLED=true`` 。Splunk APM にリンクするように``SPLUNK_TRACE_RESPONSE_HEADER_ENABLED=true`` を設定する。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:270 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:233 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:307
msgid "Change attributes before they're collected"
msgstr "収集前に属性を変更する"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:272
msgid "To remove or change attributes in your spans, such as personally identifiable information (PII), see :ref:`android-rum-span-filtering`."
msgstr "個人を特定できる情報（PII）など、スパンの属性を削除または変更するには、:ref:`android-rum-span-filtering` を参照してください。"

#: ../../gdi/get-data-in/rum/android/install-rum-android.rst:277
msgid "The Splunk OpenTelemetry Instrumentation for Android is open-source software. You can contribute to its improvement by creating pull requests in GitHub. To learn more, see the :new-page:`contributing guidelines <https://github.com/signalfx/splunk-otel-android/blob/main/CONTRIBUTING.md>` in GitHub."
msgstr "Splunk OpenTelemetry Instrumentation for Android はオープンソースソフトウェアです。GitHubでプルリクエストを作成することで、改良に貢献することができる。詳しくは、GitHub の:new-page:`貢献ガイドライン<https://github.com/signalfx/splunk-otel-android/blob/main/CONTRIBUTING.md>` をご覧ください。"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:-1
msgid "Manually instrument Android applications in Splunk Observability Cloud real user monitoring / RUM instrumentation using the Android RUM agent to collect additional telemetry, sanitize Personal Identifiable Information (PII), add global attributes, and more."
msgstr "Android RUM エージェントを使用して、Splunk Observability Cloud のリアルユーザーモニタリング / RUM インスツルメンテーションで Android アプリケーションを手動でインスツルメンテーションし、テレメトリの追加収集、個人識別情報 (PII) のサニタイズ、グローバル属性の追加などを行います。"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:5
msgid "Manually instrument Android applications"
msgstr "Androidアプリケーションの手動計測"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:10
msgid "You can manually instrument Android applications for Splunk RUM using the Android RUM agent to collect additional telemetry, sanitize Personal Identifiable Information (PII), add global attributes, and more."
msgstr "Android RUM エージェントを使用して、Splunk RUM 用の Android アプリケーションを手動でインストルメンテーションし、追加のテレメトリを収集したり、個人識別情報 (PII) をサニタイズしたり、グローバル属性を追加したりすることができます。"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:15 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:15 ../../gdi/opentelemetry/components/filter-processor.rst:116
msgid "Filter spans"
msgstr "フィルタースパン"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:17
msgid "You can modify or drop spans using the ``filterSpans()`` method. For example, you can drop or redact spans that contain personally identifiable information (PII)."
msgstr "``filterSpans()`` 。例えば、個人を特定できる情報（PII）を含むスパンを削除または編集することができます。"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:19 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:19
msgid "The following example shows how to remove a span:"
msgstr "次の例は、スパンを削除する方法を示しています："

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:28
msgid "The following example shows how to redact the value of an attribute to remove sensitive data:"
msgstr "次の例は、機密データを削除するために属性の値を編集する方法を示しています："

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:43 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:40 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:15
msgid "Manage global attributes"
msgstr "グローバル属性の管理"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:45 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:42 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:17
msgid "Global attributes are key-value pairs added to all reported data. Global attributes are useful for reporting app or user-specific values as tags."
msgstr "グローバル属性は、すべての報告データに追加されるキーと値のペアである。グローバル属性は、アプリやユーザー固有の値をタグとして報告するのに便利です。"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:47
msgid "The following example shows how to define the app version and a key-value pair as global attributes:"
msgstr "次の例は、アプリのバージョンとキーと値のペアをグローバル属性として定義する方法を示しています："

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:58
msgid "To update a set of global attributes after the RUM library is initialized, use the following :code:`SplunkRum` methods:"
msgstr "RUM ライブラリの初期化後にグローバル属性のセットを更新するには、以下の:code:`SplunkRum` メソッドを使用します："

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:60
msgid "``setGlobalAttribute(AttributeKey)`` to set or update a single attribute."
msgstr "``setGlobalAttribute(AttributeKey)`` を使用して、単一の属性を設定または更新します。"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:61
msgid "``updateGlobalAttributes(Consumer<AttributesBuilder> attributesUpdater)`` to update attributes in bulk."
msgstr "``updateGlobalAttributes(Consumer<AttributesBuilder> attributesUpdater)`` 属性を一括更新する。"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:66 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:102 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:83 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:31
msgid "Add user metadata using global attributes"
msgstr "グローバル属性を使用してユーザーメタデータを追加する"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:68
msgid "By default, the Android RUM agent doesn't automatically link traces to users of your site. However, you might need to collect user metadata to filter or debug traces."
msgstr "デフォルトでは、Android RUMエージェントは、トレースをサイトのユーザーに自動的にリンクしません。しかし、トレースのフィルタリングやデバッグのために、ユーザーのメタデータを収集する必要があるかもしれません。"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:70 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:106 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:87 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:35
msgid "You can identify users by adding global attributes from the OpenTelemetry specification, such as ``enduser.id`` and ``enduser.role``, to your spans."
msgstr "OpenTelemetry仕様のグローバル属性（``enduser.id`` や``enduser.role`` など）をスパンに追加することで、ユーザーを特定することができます。"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:72 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:108 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:89 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:37
msgid "The following examples show how to add identification metadata as global attributes when initializing the agent or after you've initialized it, depending on whether user data is accessible at initialization:"
msgstr "以下の例は、初期化時にユーザデータにアクセスできるかどうかに応じて、エージェントの初期化時または初期化後に識別メタデータをグローバル属性として追加する方法を示しています："

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:75 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:111 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:92 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:40
msgid "Add identification metadata during initialization"
msgstr "初期化時に識別メタデータを追加する"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:88 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:131 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:104 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:57
msgid "Add identification metadata after initialization"
msgstr "初期化後に識別メタデータを追加"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:99
msgid "Report custom events and workflows"
msgstr "カスタムイベントとワークフローを報告する"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:101
msgid "You can report custom events and workflows happening in your Android application using the ``addRumEvent`` and ``startWorkflow`` APIs."
msgstr "``addRumEvent`` および``startWorkflow`` API を使用して、Android アプリケーションで発生しているカスタムイベントやワークフローを報告できます。"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:103
msgid "The following example shows how to report when a user closes a help dialog:"
msgstr "次の例は、ユーザーがヘルプダイアログを閉じたときに報告する方法を示しています："

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:119
msgid "The following example shows how to start a workflow for which metrics are recorded by Splunk RUM. To record the workflow you must end the OpenTelemetry span instance:"
msgstr "次の例は、Splunk RUMによって記録されるメトリクスを対象としたワークフローを開始する方法を示しています。ワークフローを記録するには、OpenTelemetry span インスタンスを終了する必要があります："

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:144
msgid "Customize screen names"
msgstr "スクリーン名のカスタマイズ"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:146
msgid "By default, the Android RUM agent uses the simple class name of each ``Fragment`` and ``Activity`` type as the value of the ``screen.name`` attribute. To customize the screen name, use the ``@RumScreenName`` annotation."
msgstr "デフォルトでは、Android RUMエージェントは、``screen.name`` 属性の値として、各``Fragment`` と``Activity`` タイプの単純なクラス名を使用します。スクリーン名をカスタマイズするには、``@RumScreenName`` 注釈を使用します。"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:148
msgid "For example, the following activity appears with the ``screen.name`` attribute set to the value ``Buttercup``:"
msgstr "例えば、``screen.name`` 属性に値``Buttercup`` を設定すると、以下のアクティビティが表示されます："

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:160 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:147 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:90
msgid "Configure error reporting"
msgstr "エラー報告の設定"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:162
msgid "You can report handled errors, exceptions, and messages using the ``addRumException(Throwable)`` method. Exceptions appear as errors in the Splunk RUM UI, and error metrics are recorded."
msgstr "``addRumException(Throwable)`` メソッドを使って、処理されたエラー、例外、メッセージを報告することができます。例外は Splunk RUM UI にエラーとして表示され、エラーメトリクスが記録されます。"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:164
msgid "The following example shows how to report the :code:`Unimplemented Feature: Settings` error in a sample application:"
msgstr "次の例は、:code:`Unimplemented Feature：設定` エラーをサンプル・アプリケーションで報告しています："

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:184 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:148 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:162 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:115
msgid "Add server trace context from Splunk APM"
msgstr "Splunk APM からサーバトレースコンテキストを追加する"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:186
msgid "The Android RUM agent collects server trace context using back-end data provided by APM instrumentation through the ``Server-Timing`` header. In some cases, you might want to generate the header manually."
msgstr "Android RUMエージェントは、APMインスツルメンテーションから``Server-Timing`` ヘッダを通じて提供されるバックエンドデータを使用して、サーバートレースコンテキストを収集する。場合によっては、手動でヘッダーを生成したいかもしれない。"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:188 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:152 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:166 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:119
msgid "To create the ``Server-Timing`` header manually, provide a ``Server-Timing`` header with the name ``traceparent``, where the ``desc`` field holds the version, the trace ID, the parent ID, and the trace flag."
msgstr "``Server-Timing`` ヘッダーを手動で作成するには、``traceparent`` という名前の``Server-Timing`` ヘッダーを用意する。``desc`` フィールドには、バージョン、トレース ID、親 ID、トレースフラグが格納される。"

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:190 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:154 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:168 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:121
msgid "Consider the following HTTP header:"
msgstr "次のHTTPヘッダーを考えてみよう："

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:196 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:160 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:174 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:127
msgid "The example resolves to a context containing the following data:"
msgstr "この例は、以下のデータを含むコンテキストに解決する："

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:203 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:167 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:181 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:134
msgid "When generating a value for the ``traceparent`` header, make sure that it matches the following regular expression:"
msgstr "``traceparent`` ヘッダーの値を生成するときは、それが以下の正規表現にマッチすることを確認する："

#: ../../gdi/get-data-in/rum/android/manual-rum-android-instrumentation.rst:209 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:173 ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:187 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:140
msgid "Server timing headers with values that don't match the pattern are automatically discarded. For more information, see the ``Server-Timing`` and ``traceparent`` documentation on the W3C website."
msgstr "パターンにマッチしない値を持つサーバー・タイミング・ヘッダは自動的に破棄される。詳しくは、W3Cウェブサイトの``Server-Timing`` 、``traceparent`` 。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:-1
msgid "Understand which RUM data you collect from Android applications when using Splunk Observability Cloud Real User Monitoring (RUM)."
msgstr "Splunk Observability Cloud Real User Monitoring (RUM) を使用して Android アプリケーションから収集する RUM データを理解します。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:5
msgid "Android data model"
msgstr "Androidデータモデル"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:10
msgid "The Android agent for Splunk Real User Monitoring (RUM) collects the following types of data about your Android application:"
msgstr "Splunk Real User Monitoring (RUM) 用 Android エージェントは、Android アプリケーションに関する以下の種類のデータを収集します："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:13 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:13 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:13 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:13
msgid "Common data types"
msgstr "一般的なデータ型"

#: ../../_includes/rum-data-model.rst:1
msgid "The Splunk RUM data model represents the following logical entities, following OpenTelemetry conventions:"
msgstr "Splunk RUM データモデルは、OpenTelemetry の規約に従って、以下の論理エンティティを表します："

#: ../../_includes/rum-data-model.rst:6
msgid "Trace"
msgstr "トレース"

#: ../../_includes/rum-data-model.rst:7
msgid "A set of events triggered as a result of a single logical operation, distributed across various components of an application. Traces contain events that cross process, network, and security boundaries. A RUM trace can, for example, initiate when someone taps on a button to start an action on a website. If you use RUM and APM together, traces represent calls made between the downstream services that handle the requests initiated by the user action."
msgstr "アプリケーションのさまざまなコンポーネントに分散された、単一の論理操作の結果としてトリガーされる一連のイベント。トレースには、プロセス、ネットワーク、セキュリティの境界を越えるイベントが含まれる。RUMトレースは、例えば、誰かがウェブサイト上でアクションを開始するためにボタンをタップしたときに開始することができます。RUMとAPMを一緒に使用する場合、トレースは、ユーザーアクションによって開始されたリクエストを処理するダウンストリームサービス間のコールを表します。"

#: ../../_includes/rum-data-model.rst:8
msgid "Span"
msgstr "スパン"

#: ../../_includes/rum-data-model.rst:9
msgid "An operation within a transaction. A single span includes the logical name, the start and end timestamp of the operation, and the events and attributes linked to the captured data. A span might have a reference to its parent span and zero or more causally-related spans. Spans have universal attributes and custom attributes."
msgstr "トランザクション内の操作。一つのスパンには、論理名、操作の開始と終了のタイムスタンプ、キャプチャされたデータにリンクされたイベントと属性が含まれる。スパンは、その親スパンへの参照と、0個以上の因果関係のあるスパンを持つかもしれない。スパンにはユニバーサル属性とカスタム属性があります。"

#: ../../_includes/rum-data-model.rst:10
msgid "Session"
msgstr "セッション"

#: ../../_includes/rum-data-model.rst:11
msgid "A collection of traces that correspond to the actions a single user takes when interacting with an application over a period of time. By default, a session lasts until 15 minutes passed from the last event captured in the session. The maximum session duration is 4 hours."
msgstr "一人のユーザーがある期間にわたってアプリケーションを操作したときにとったアクションに対応するトレースの集まり。デフォルトでは、セッションは、そのセッションで最後にキャプチャされたイベントから15分経過するまで続く。最大セッション時間は4時間。"

#: ../../_includes/rum-data-model.rst:12
msgid "Interaction"
msgstr "交流"

#: ../../_includes/rum-data-model.rst:13
msgid "Reflects the action the user conducts within the user interface. Common interaction types include mouse clicks, taps on a touch screen, and keyboard events."
msgstr "ユーザーがユーザーインターフェイス内で行うアクションを反映します。一般的なインタラクションの種類には、マウスクリック、タッチスクリーンのタップ、キーボードイベントなどがある。"

#: ../../_includes/rum-data-model.rst:14
msgid "User"
msgstr "ユーザー"

#: ../../_includes/rum-data-model.rst:15
msgid "By default, Splunk RUM doesn't collect identity data. Mapping a trace to a specific user requires manual instrumentation. Users can be represented by their username, email addresses, or using a synthetic identifier. Synthetic representation is useful in situations where PII regulations do not allow users to be identified."
msgstr "デフォルトでは、Splunk RUM は ID データを収集しません。トレースを特定のユーザーにマッピングするには、手作業による計測が必要である。ユーザは、ユーザ名、電子メールアドレス、または合成識別子で表すことができます。合成的な表現は、PIIの規制によりユーザーを特定できない状況で有用である。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:20 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:20 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:64 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:20
msgid "Basic properties"
msgstr "基本特性"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:22 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:66 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:22
msgid "The following properties are common to all applications instrumented for Splunk RUM:"
msgstr "以下のプロパティは、Splunk RUM 用のインスツルメンテーションを行うすべてのアプリケーションに共通です："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:33 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:36 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:39 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:45 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:71 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:74 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:77 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:80 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:83 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:86
#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:160 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:163 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:166 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:169 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:172 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:175 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:200 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:203 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:206 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:209
#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:212 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:215 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:218 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:235 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:238 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:241 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:260 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:263 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:306 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:309
#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:312 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:321 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:324 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:327 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:344 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:347 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:350 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:376 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:379 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:406
#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:409 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:432 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:435 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:37 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:40 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:88 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:91 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:112 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:115
#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:118 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:229 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:232 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:235 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:295 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:298 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:301 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:323 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:329
#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:331 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:337 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:339 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:341 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:343 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:366 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:375 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:378 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:394
#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:486 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:490 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:493 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:496 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:47 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:56 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:59 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:62 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:74
#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:195 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:198 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:32 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:35 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:38 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:44 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:139 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:142 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:145 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:148
#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:151 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:154 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:157 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:160 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:163 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:77 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:80 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:83 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:89 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:149 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:152
#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:155 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:158 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:161 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:178 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:181 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:184 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:187 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:190 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:193 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:218 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:221
#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:224 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:227 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:230 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:233 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:256 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:259 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:301 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:304 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:324 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:327 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:330
#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:347 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:350 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:380 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:402 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:405 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:33 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:36 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:39 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:45 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:105 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:108
#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:111 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:128 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:131 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:134 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:137 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:140 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:143 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:146 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:171 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:174 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:177
#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:194 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:197 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:200 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:203 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:206 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:223 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:245 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:248
msgid "String"
msgstr "ストリング"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:34 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:33 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:78 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:34
msgid "Unique 64-bit identifier generated for the span within the trace."
msgstr "トレース内のスパンに対して生成される一意の64ビット識別子。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:35 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:34
msgid "``parentId``"
msgstr "``parentId``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:37 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:36 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:81 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:37
msgid "Parent span ID. Absent if the span is the root span in a trace."
msgstr "親のスパンIDスパンがトレース内のルートスパンである場合は存在しない。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:38 ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:197 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:37 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:82 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:38
msgid "``name``"
msgstr "``name``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:40 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:84 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:40
msgid "Logical operation the span represents."
msgstr "スパンが表す論理演算。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:41 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:368 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:40 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:85 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:41
msgid "``duration``"
msgstr "``duration``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:42 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:48 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:85 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:109 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:154 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:157 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:160 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:163 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:166
#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:169 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:325 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:327 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:333 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:335 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:369 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:397 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:41 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:47
#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:86 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:92 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:42 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:48
msgid "Number"
msgstr "番号"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:43 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:42 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:87 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:43
msgid "Duration in microseconds."
msgstr "持続時間（マイクロ秒）。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:44 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:43 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:88 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:44
msgid "``traceId``"
msgstr "``traceId``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:46 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:45 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:90 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:46
msgid "Unique 128-bit identifier, set on all spans belonging to the trace."
msgstr "トレースに属するすべてのスパンに設定される一意の128ビット識別子。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:47 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:46 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:91 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:47
msgid "``timestamp``"
msgstr "``timestamp``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:49 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:48 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:93 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:49
msgid "Epoch microseconds of the start of the span. Can be absent if incomplete."
msgstr "スパン開始のエポック・マイクロ秒。不完全な場合は欠席もあり得る。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:51 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:65 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:68 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:83 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:50 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:95 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:51
msgid "Object"
msgstr "対象"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:52 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:51 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:96 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:52
msgid "Additional context, allowing to search and analyze spans based on specific tags."
msgstr "特定のタグに基づくスパンの検索と分析を可能にする追加コンテキスト。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:53 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:52
msgid "``annotations``"
msgstr "``annotations``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:54 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:53
msgid "Array"
msgstr "配列"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:55 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:54
msgid "Associates events that explain latency with the time they happened."
msgstr "待ち時間を説明するイベントと、それが起こった時間を関連付ける。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:58 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:136 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:92
msgid "Default attributes"
msgstr "デフォルト属性"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:60
msgid "By default, the Android RUM agent adds the following attributes to all spans:"
msgstr "デフォルトでは、Android RUMエージェントはすべてのスパンに以下の属性を追加します："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:70 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:138 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:148
msgid "``app``"
msgstr "``app``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:72
msgid "Application name, as defined using :code:`applicationName(String)`."
msgstr ":code:`applicationName(String)` を使って定義されたアプリケーション名。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:73 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:147 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:151 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:104
msgid "``splunk.rumSessionId``"
msgstr "``splunk.rumSessionId``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:75 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:153 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:106
msgid "Session identifier, randomly generated by Splunk RUM. It doesn't contain personally identifiable information."
msgstr "セッション識別子。Splunk RUM がランダムに生成する。個人を特定できる情報は含まれていません。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:76 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:154 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:107
msgid "``splunk.rum.previous_session_id``"
msgstr "``splunk.rum.previous_session_id``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:78 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:156 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:109
msgid "Identifier of the session preceding the current session. Set only if there is a change in the ``splunk.rumSessionId`` attribute."
msgstr "現在のセッションの前のセッションの識別子。``splunk.rumSessionId`` 属性に変更があった場合のみ設定。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:79 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:157
msgid "``splunk.rum.version``"
msgstr "``splunk.rum.version``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:81 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:152 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:159 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:112
msgid "Version of the Splunk RUM SDK instrumenting the application."
msgstr "アプリケーションをインスツルメンテーションする Splunk RUM SDK のバージョン。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:82 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:237 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:160 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:258
msgid "``net.host.connection.type``"
msgstr "``net.host.connection.type``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:84 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:162
msgid "Connection type used by the device. Possible values include ``wifi``, ``cell``, ``unavailable``, and ``unknown``."
msgstr "デバイスが使用する接続タイプ。設定可能な値には、``wifi`` 、``cell`` 、``unavailable`` 、``unknown`` がある。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:85 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:240
msgid "``net.host.connection.subtype``"
msgstr "``net.host.connection.subtype``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:87
msgid "Details of the connection. For example, the type of ``cell`` connection, like ``gprs``, ``edge``, or ``umts``."
msgstr "接続の詳細例えば、``gprs`` 、``edge`` 、``umts`` のように、``cell`` 接続のタイプ。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:93 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:59 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:20 ../../gdi/monitors-cache/memcached.md:61 ../../gdi/monitors-cache/memory.md:56 ../../gdi/monitors-cache/opcache.md:128 ../../gdi/monitors-cloud/kong.md:151 ../../gdi/monitors-cloud/openstack.md:68 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:78 ../../gdi/monitors-conviva/conviva.md:71 ../../gdi/monitors-databases/apache-couchdb.md:77 ../../gdi/monitors-databases/apache-spark.md:82 ../../gdi/monitors-databases/cassandra.md:87 ../../gdi/monitors-databases/consul.md:87
#: ../../gdi/monitors-databases/etcd.md:66 ../../gdi/monitors-databases/exec-input.md:104 ../../gdi/monitors-databases/hadoop.md:64 ../../gdi/monitors-databases/hadoopjmx.md:160 ../../gdi/monitors-databases/logparser.md:87 ../../gdi/monitors-databases/logstash.md:50 ../../gdi/monitors-databases/microsoft-sql-server.md:94 ../../gdi/monitors-databases/mongodb-atlas.md:31 ../../gdi/monitors-databases/mongodb.md:100 ../../gdi/monitors-databases/mysql.md:120 ../../gdi/monitors-databases/postgresql.md:29 ../../gdi/monitors-databases/redis.md:97 ../../gdi/monitors-databases/sap-hana.md:68 ../../gdi/monitors-databases/sql.md:196 ../../gdi/monitors-gitlab/gitlab.md:153
#: ../../gdi/monitors-hosts/amazon-ecs-metadata.md:46 ../../gdi/monitors-hosts/apache-httpserver.md:96 ../../gdi/monitors-hosts/apache-tomcat.md:86 ../../gdi/monitors-hosts/apache-zookeeper.md:57 ../../gdi/monitors-hosts/chrony.md:54 ../../gdi/monitors-hosts/collectd-df.md:60 ../../gdi/monitors-hosts/collectd-plugin.md:57 ../../gdi/monitors-hosts/collectd-uptime.md:46 ../../gdi/monitors-hosts/coredns.md:79 ../../gdi/monitors-hosts/couchbase.md:61 ../../gdi/monitors-hosts/cpu.md:19 ../../gdi/monitors-hosts/cpufreq.md:46 ../../gdi/monitors-hosts/disk.md:22 ../../gdi/monitors-hosts/docker.md:69 ../../gdi/monitors-hosts/elasticsearch-query.md:243
#: ../../gdi/monitors-hosts/elasticsearch.md:175 ../../gdi/monitors-hosts/filesystems.md:22 ../../gdi/monitors-hosts/haproxy.md:122 ../../gdi/monitors-hosts/health-checker.md:60 ../../gdi/monitors-hosts/host-metadata.md:10 ../../gdi/monitors-hosts/host-processes.md:22 ../../gdi/monitors-hosts/host-processlist.md:48 ../../gdi/monitors-hosts/host-processload.md:19 ../../gdi/monitors-hosts/http.md:127 ../../gdi/monitors-hosts/interface.md:20 ../../gdi/monitors-hosts/jenkins.md:114 ../../gdi/monitors-hosts/kafka-consumer.md:87 ../../gdi/monitors-hosts/kafka-producer.md:87 ../../gdi/monitors-hosts/microsoft-windows-iis.md:57 ../../gdi/monitors-hosts/nginx.md:83
#: ../../gdi/monitors-hosts/ntpq.md:59 ../../gdi/monitors-hosts/php-fpm.md:93 ../../gdi/monitors-hosts/procstat.md:65 ../../gdi/monitors-hosts/solr.md:60 ../../gdi/monitors-hosts/supervisor.md:58 ../../gdi/monitors-hosts/systemd.md:97 ../../gdi/monitors-hosts/varnish.md:67 ../../gdi/monitors-hosts/vsphere.md:98 ../../gdi/monitors-hosts/win-services.md:48 ../../gdi/monitors-languages/asp-dot-net.md:57 ../../gdi/monitors-languages/expvar.md:79 ../../gdi/monitors-languages/genericjmx.md:110 ../../gdi/monitors-languages/java-monitor.md:64 ../../gdi/monitors-languages/jmx.md:139 ../../gdi/monitors-languages/microsoft-dotnet.md:73
#: ../../gdi/monitors-messaging/apache-activemq.md:92 ../../gdi/monitors-messaging/apache-kafka.md:97 ../../gdi/monitors-messaging/rabbitmq.md:78 ../../gdi/monitors-monitoring/cadvisor.md:58 ../../gdi/monitors-monitoring/cgroups.md:79 ../../gdi/monitors-monitoring/jaeger-grpc.md:63 ../../gdi/monitors-monitoring/nagios.md:79 ../../gdi/monitors-monitoring/prometheus-exporter.md:82 ../../gdi/monitors-monitoring/prometheus-go.md:69 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:75 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:69 ../../gdi/monitors-monitoring/prometheus-node.md:67 ../../gdi/monitors-monitoring/prometheus-velero.md:73
#: ../../gdi/monitors-monitoring/signalfx-forwarder.md:60 ../../gdi/monitors-monitoring/win_perf_counters.md:94 ../../gdi/monitors-network/aws-appmesh.md:81 ../../gdi/monitors-network/dns.md:57 ../../gdi/monitors-network/logstash-tcp.md:133 ../../gdi/monitors-network/net-io.md:54 ../../gdi/monitors-network/network-protocols.md:46 ../../gdi/monitors-network/ntp.md:57 ../../gdi/monitors-network/snmp.md:138 ../../gdi/monitors-network/statsd.md:78 ../../gdi/monitors-network/traefik.md:76 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:123 ../../gdi/monitors-orchestration/kubernetes-cluster.md:34 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:36
#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:33 ../../gdi/monitors-orchestration/kubernetes-proxy.md:158 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:65 ../../gdi/monitors-orchestration/mesos-marathon.md:59 ../../gdi/monitors-orchestration/openshift-cluster.md:73 ../../gdi/opentelemetry/components.rst:76 ../../gdi/opentelemetry/components.rst:79 ../../gdi/opentelemetry/components.rst:82 ../../gdi/opentelemetry/components.rst:85 ../../gdi/opentelemetry/components.rst:97 ../../gdi/opentelemetry/components.rst:106 ../../gdi/opentelemetry/components.rst:115 ../../gdi/opentelemetry/components.rst:121 ../../gdi/opentelemetry/components.rst:124
#: ../../gdi/opentelemetry/components.rst:127 ../../gdi/opentelemetry/components.rst:133 ../../gdi/opentelemetry/components.rst:136 ../../gdi/opentelemetry/components.rst:139 ../../gdi/opentelemetry/components.rst:145 ../../gdi/opentelemetry/components.rst:154 ../../gdi/opentelemetry/components.rst:160 ../../gdi/opentelemetry/components.rst:163 ../../gdi/opentelemetry/components.rst:175 ../../gdi/opentelemetry/components.rst:205 ../../gdi/opentelemetry/components.rst:217 ../../gdi/opentelemetry/components/databricks-receiver.rst:114 ../../gdi/opentelemetry/components/filter-processor.rst:25 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:238
#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:200 ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:318 ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:102 ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:84 ../../gdi/opentelemetry/components/oracledb-receiver.rst:95 ../../gdi/opentelemetry/components/postgresql-receiver.rst:81 ../../gdi/opentelemetry/components/prometheus-receiver.rst:126 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:76 ../../gdi/opentelemetry/components/transform-processor.rst:25 ../../gdi/opentelemetry/security.rst:125
msgid "Metrics"
msgstr "指標"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:94
msgid "The following tables list all of the metrics available in Splunk RUM for Android. All errors in Splunk RUM have the dimension ``sf_error=true``."
msgstr "以下の表は、Splunk RUM for Android で利用可能なすべてのメトリクスの一覧です。Splunk RUM のすべてのエラーはディメンジョン``sf_error=true`` を持っています。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:96
msgid "For more information on app startup metrics as defined by Android, see :new-page:`App startup time <https://developer.android.com/topic/performance/vitals/launch-time>` in the Android Developers documentation."
msgstr "Androidで定義されているアプリ起動メトリクスの詳細については、Android Developersドキュメントの「:new-page:`App startup time<https://developer.android.com/topic/performance/vitals/launch-time>` 」を参照してください。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:103 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:27
msgid ":strong:`Metric name`"
msgstr ":strong:`メトリック名`"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:104 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:68 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:28
msgid ":strong:`UI name`"
msgstr ":strong:`UI名`"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:106 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:71 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:30
msgid "``rum.workflow.count``"
msgstr "``rum.workflow.count``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:107 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:31
msgid "Custom Event Count"
msgstr "カスタム・イベント・カウント"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:108 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:74 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:32
msgid "The total number of spans with the selected custom event in the given time range."
msgstr "指定された時間範囲内で選択されたカスタムイベントを持つスパンの総数。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:109 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:75 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:33
msgid "``rum.workflow.time.ns.p75``"
msgstr "``rum.workflow.time.ns.p75``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:110 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:34
msgid "Custom Event Duration"
msgstr "カスタムイベント期間"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:111 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:78 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:35
msgid "The p75 time in nanoseconds of spans with the selected custom event in the given time range."
msgstr "指定された時間範囲内で、選択されたカスタム・イベントを持つスパンのp75時間（ナノ秒単位）。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:112 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:36
msgid "``rum.crash.count``"
msgstr "``rum.crash.count``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:113 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:37
msgid "Mobile crash"
msgstr "モバイルクラッシュ"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:114
msgid "Total number of crashes in the given time range."
msgstr "指定された時間範囲内のクラッシュの総数。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:115 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:39
msgid "``rum.app_error.count``"
msgstr "``rum.app_error.count``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:116 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:40
msgid "App error"
msgstr "アプリのエラー"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:117
msgid "Total number of ANRs, handled exceptions, and reported errors in the given time range."
msgstr "指定された時間範囲内のANR、処理された例外、および報告されたエラーの総数。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:118 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:48
msgid "``rum.cold_start.time.ns.p75``"
msgstr "``rum.cold_start.time.ns.p75``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:119 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:49
msgid "Cold start time"
msgstr "コールドスタート時間"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:120 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:50
msgid "The p75 time in nanoseconds of cold starts in the given time range."
msgstr "指定された時間範囲内でのコールドスタートのp75時間（ナノ秒）。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:121 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:51
msgid "``rum.cold_start.count``"
msgstr "``rum.cold_start.count``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:122 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:52
msgid "Cold start count"
msgstr "コールドスタート回数"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:123 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:53
msgid "Total number of cold starts in the given time range."
msgstr "指定された時間範囲内のコールドスタートの総数。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:124
msgid "``rum.warm_start.count``"
msgstr "``rum.warm_start.count``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:125
msgid "Warm start count"
msgstr "ウォームスタート回数"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:126
msgid "Total number of warm starts in the given time range."
msgstr "指定された時間範囲内のウォームスタートの総数。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:127
msgid "``rum.warm_start.time.ns.p75``"
msgstr "``rum.warm_start.time.ns.p75``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:128
msgid "Warm start time"
msgstr "ウォームスタート時間"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:129
msgid "The p75 time in nanoseconds for a warm start."
msgstr "ウォームスタートにかかるP75の時間（ナノ秒）。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:130 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:54
msgid "``rum.hot_start.count``"
msgstr "``rum.hot_start.count``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:131 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:55
msgid "Hot start count"
msgstr "ホットスタート回数"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:132 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:56
msgid "Total number of hot starts in the given time range."
msgstr "指定された時間範囲内でのホットスタートの総数。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:133 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:57
msgid "``rum.hot_start.time.ns.p75``"
msgstr "``rum.hot_start.time.ns.p75``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:134 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:58
msgid "Hot start time"
msgstr "ホットスタート時間"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:135 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:59
msgid "The p75 time in nanoseconds for a hot start."
msgstr "ホットスタートのP75の時間（ナノ秒）。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:136 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:111 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:42
msgid "``rum.resource_request.count``"
msgstr "``rum.resource_request.count``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:137 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:43
msgid "Network or back-end requests/errors"
msgstr "ネットワークまたはバックエンドのリクエスト/エラー"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:138 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:44
msgid "The total number of network requests in a given time range."
msgstr "指定された時間範囲内のネットワークリクエストの総数。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:139 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:115 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:45
msgid "``rum.resource_request.time.ns.p75``"
msgstr "``rum.resource_request.time.ns.p75``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:140
msgid "Network or back-end latency"
msgstr "ネットワークまたはバックエンドの待ち時間"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:141
msgid "The p75 time in nanoseconds for back-end latency in the given time range."
msgstr "指定された時間範囲におけるバックエンドの待ち時間のナノ秒単位のp75時間。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:147 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:165 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:115 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:308
msgid "Resource attributes"
msgstr "リソース属性"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:149
msgid "By default, the Android RUM agent adds the following resource attributes to all spans:"
msgstr "デフォルトでは、Android RUMエージェントはすべてのスパンに以下のリソース属性を追加します："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:161
msgid "Name of the deployment environment. For example, ``dev``. Defined using :code:`deploymentEnvironment(String)`."
msgstr "配置環境の名前。例えば、``dev`` 。:code:`deploymentEnvironment(String)` を使用して定義されている。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:162 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:130
msgid "``device.model.identifier``"
msgstr "``device.model.identifier``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:164
msgid "The model identifier for the device. For example, ``SM-G920F``"
msgstr "デバイスのモデル識別子。例えば、こうだ、 ``SM-G920F``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:165 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:180 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:127
msgid "``device.model.name``"
msgstr "``device.model.name``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:167
msgid "The model name for the device. For example, ``Samsung Galaxy S6``."
msgstr "デバイスのモデル名。例えば、``Samsung Galaxy S6`` 。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:168 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:183 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:133
msgid "``os.name``"
msgstr "``os.name``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:170
msgid "Always set to ``Android``."
msgstr "常に``Android`` に設定されている。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:171 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:136 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:298 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:415
msgid "``os.type``"
msgstr "``os.type``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:173
msgid "Always set to ``Linux``."
msgstr "常に``Linux`` に設定されている。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:174 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:186 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:139
msgid "``os.version``"
msgstr "``os.version``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:176
msgid "Version of the operating system, as reported by the value of ``android.os.Build.VERSION.RELEASE``. For example, ``8.1.0``."
msgstr "``android.os.Build.VERSION.RELEASE`` の値で示されるオペレーティング・システムのバージョン。例えば、``8.1.0`` 。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:179 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:197 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:150
msgid "Instrumentation attributes"
msgstr "計装の属性"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:181
msgid "The Android RUM agent collects the following data using its instrumentations. To activate or deactivate specific instrumentations, see :ref:`android-rum-instrumentation-settings`."
msgstr "Android RUMエージェントは、インスツルメンテーションを使って以下のデータを収集する。特定のインストゥルメンテーションをアクティブまたは非アクティブにするには、:ref:`android-rum-instrumentation-settings` を参照。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:184 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:202
msgid "Crash reporting"
msgstr "事故報告"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:186
msgid "The Android RUM agent adds the following crash reporting attributes to spans that represent uncaught exceptions:"
msgstr "Android RUMエージェントは、捕捉されない例外を表すスパンに以下のクラッシュ報告属性を追加します："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:196 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:214
msgid "``thread.id``"
msgstr "``thread.id``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:197 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:287 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:315 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:318 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:330 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:215 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:239 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:282 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:307 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:310
msgid "Integer"
msgstr "整数"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:198 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:216
msgid "ID of the current managed thread, as opposed to the operating system thread ID."
msgstr "オペレーティングシステムのスレッドIDではなく、現在の管理対象スレッドのID。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:199 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:192 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:217
msgid "``thread.name``"
msgstr "``thread.name``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:201 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:219
msgid "Name of the thread."
msgstr "スレッドの名前"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:202 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:220
msgid "``exception.message``"
msgstr "``exception.message``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:204 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:222
msgid "The message of the exception."
msgstr "例外のメッセージ。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:205 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:223
msgid "``exception.type``"
msgstr "``exception.type``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:207 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:225
msgid "The type of the exception."
msgstr "例外のタイプ。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:208 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:259 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:226
msgid "``exception.stacktrace``"
msgstr "``exception.stacktrace``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:210 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:228
msgid "The stack trace for the exception."
msgstr "例外のスタックトレース。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:211
msgid "``exception.escaped``"
msgstr "``exception.escaped``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:213
msgid "Always ``true``, denoting the uncaught exception, such as a crash occurring."
msgstr "常に``true`` 、クラッシュなどの捕捉されない例外を示す。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:214 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:262 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:343 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:375 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:405 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:431 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:294 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:141 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:189 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:229
#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:323 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:379 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:401 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:222 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:244
msgid "``component``"
msgstr "``component``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:216 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:231
msgid "Always ``crash``."
msgstr "いつも``crash`` 。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:217 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:265 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:232
msgid "``status``"
msgstr "``status``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:219 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:234
msgid "Always ``Error``."
msgstr "いつも``Error`` 。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:222 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:243
msgid "Network monitoring"
msgstr "ネットワーク監視"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:224 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:245
msgid "Network monitoring produces spans with the name ``network.change`` and the following attributes:"
msgstr "ネットワーク・モニタリングは、``network.change`` という名前と以下の属性を持つスパンを生成する："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:234 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:255
msgid "``network.status``"
msgstr "``network.status``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:236 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:257
msgid "Network status. Either ``lost`` or ``available``."
msgstr "ネットワークの状態``lost`` もしくは``available`` 。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:239
msgid "Internet connection type. Possible values are: ``unavailable``, ``cell``, ``wifi``, ``unknown``, ``vpn``."
msgstr "インターネット接続タイプ可能な値は以下のとおりです：``unavailable`` ``cell``,``wifi``,``unknown``,``vpn``."

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:242
msgid "Detailed information about the connection type. For example, the type of ``cell`` connection, like ``GSM`` or ``LTE``."
msgstr "接続タイプに関する詳細情報。例えば、``GSM`` や``LTE`` のように、``cell`` の接続タイプ。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:245
msgid "Application Not Responding (ANR)"
msgstr "アプリケーションが応答しない（ANR）"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:247
msgid "Application Not Responding (ANR) event detection generates spans whenever the main application thread is unresponsive for more than 5 seconds."
msgstr "ANR（Application Not Responding）イベント検出は、メインアプリケーションスレッドが5秒以上応答しない場合にスパンを生成する。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:249
msgid "ANR produces spans with the name ``ANR`` and the following attributes:"
msgstr "ANRは、``ANR`` という名前と以下の属性を持つスパンを生成する："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:261
msgid "A stack trace as a string in the natural representation for the language runtime."
msgstr "スタック・トレースは、言語ランタイムの自然な表現で文字列となる。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:264
msgid "Always ``error``."
msgstr "いつも``error`` 。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:267
msgid "Always ``ERROR``."
msgstr "いつも``ERROR`` 。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:270 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:265
msgid "Slow rendering detection"
msgstr "遅いレンダリング検出"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:272 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:267
msgid "Slow rendering detection generates spans whenever it detects a slow or frozen frame render. Frame rendering is slow if its duration exceeds 16 milliseconds, and frozen if it exceeds 700 milliseconds."
msgstr "スローレンダリング検出は、スローレンダリングまたはフリーズフレームレンダリングを検出するたびにスパンを生成します。フレームレンダリングの時間が16ミリ秒を超えるとスローになり、700ミリ秒を超えるとフリーズする。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:274 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:269
msgid "Slow rendering detection generates up to two spans on every interval: a span named ``slowRenders`` which counts slow frames, and a span named ``frozenRenders`` which counts frozen frames."
msgstr "スローレンダリングの検出は、インターバルごとに最大2つのスパンを生成する。``slowRenders`` というスパンはスローフレームをカウントし、``frozenRenders`` というスパンはフリーズフレームをカウントする。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:276 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:271
msgid "Slow rendering detection spans have the following attribute:"
msgstr "低速レンダリング検出スパンには以下の属性がある："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:286 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:281
msgid "``count``"
msgstr "``count``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:288
msgid "Number of observed slow or frozen frames during a single interval. Intervals last 1 second by default. To change the polling interval duration, pass a positive duration, in milliseconds, to the  :code:`slowRenderingDetectionPollInterval(Duration)` setting."
msgstr "1つのインターバル中に観察されたスローまたはフリーズしたフレームの数。インターバルはデフォルトで1秒。ポーリング間隔の期間を変更するには、:code:`slowRenderingDetectionPollInterval(Duration)` の設定に、ミリ秒単位で正の期間を渡します。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:291 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:286
msgid "HTTP clients"
msgstr "HTTPクライアント"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:293
msgid "The Android RUM agent includes instrumentation for the OkHttp and Volley HTTP clients. To activate the instrumentation, see :ref:`android-rum-http-client-settings`."
msgstr "Android RUMエージェントには、OkHttpとVolley HTTPクライアントのインスツルメンテーションが含まれています。インストゥルメンテーションを有効にするには、:ref:`android-rum-http-client-settings` を参照。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:295 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:290
msgid "The HTTP client instrumentation collects the following OpenTelemetry HTTP attributes:"
msgstr "HTTP クライアント・インスツルメンテーションは、以下の OpenTelemetry HTTP 属性を収集します："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:304 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:299 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:221
msgid "Examples"
msgstr "例"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:305 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:135 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:300 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:193
msgid "``http.method``"
msgstr "``http.method``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:307 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:302
msgid "``GET``, ``POST``, ``HEAD``"
msgstr "``GET``, ``POST``, ``HEAD``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:308 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:111 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:142 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:365 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:393 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:303 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:199
msgid "``http.url``"
msgstr "``http.url``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:310 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:305
msgid "``https://foo.bar/address?q=value#hash``"
msgstr "``https://foo.bar/address?q=value#hash``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:311
msgid "``http.flavor``"
msgstr "``http.flavor``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:313 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:256
msgid "``1.0``"
msgstr "``1.0``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:314 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:139 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:306 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:196
msgid "``http.status_code``"
msgstr "``http.status_code``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:316 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:308
msgid "``200``, ``404``, ``418``"
msgstr "``200``, ``404``, ``418``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:317 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:84 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:108 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:136 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:309
msgid "``http.response_content_length``"
msgstr "``http.response_content_length``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:319 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:311
msgid "``3495`` (bytes)"
msgstr "``3495`` (バイト）"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:320 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:141
msgid "``http.user_agent``"
msgstr "``http.user_agent``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:322
msgid "``CERN-LineMode/2.15 libwww/2.17b3``"
msgstr "``CERN-LineMode/2.15 libwww/2.17b3``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:323
msgid "``net.transport``"
msgstr "``net.transport``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:325
msgid "``IP.TCP``"
msgstr "``IP.TCP``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:326
msgid "``net.peer.name``"
msgstr "``net.peer.name``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:328
msgid "``example.com``"
msgstr "``example.com``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:329
msgid "``net.peer.port``"
msgstr "``net.peer.port``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:331
msgid "``80``, ``8080``, ``443``"
msgstr "``80``, ``8080``, ``443``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:333 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:313
msgid "The HTTP instrumentation also collects the following attributes:"
msgstr "HTTPインスツルメンテーションは、以下の属性も収集する："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:345 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:325
msgid "Always ``http``."
msgstr "いつも``http`` 。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:346 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:87 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:114 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:326 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:202
msgid "``link.traceId``"
msgstr "``link.traceId``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:348
msgid "The trace ID of the corresponding backend (APM) span, extracted from the ``Server-Timing`` header. See :ref:`integrate-android-apm-traces` for more information."
msgstr "``Server-Timing`` ヘッダーから抽出された、対応するバックエンド (APM) スパンのトレース ID。詳しくは:ref:`integrate-android-apm-traces` 。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:349 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:90 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:117 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:329 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:205
msgid "``link.spanId``"
msgstr "``link.spanId``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:351
msgid "The span ID of the corresponding backend (APM) span, extracted from the ``Server-Timing`` header. See :ref:`integrate-android-apm-traces` for more information."
msgstr "``Server-Timing`` ヘッダーから抽出された、対応するバックエンド（APM）スパンのスパンID。詳しくは:ref:`integrate-android-apm-traces` 。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:354
msgid "Activity lifecycle monitoring"
msgstr "アクティビティ・ライフサイクル・モニタリング"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:356
msgid "Activity lifecycle monitoring generates spans whenever an activity changes its state. An activity lifecycle span can have one the following names depending on its state:"
msgstr "アクティビティ・ライフサイクル・モニタリングは、アクティビティがその状態を変更するたびにスパンを生成する。アクティビティライフサイクルスパンには、その状態に応じて次のような名前があります："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:358
msgid "``Created``: Activity starts for the first time."
msgstr "``Created``:初めて活動開始。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:359
msgid "``Restarted``:Activity restarts after being stopped."
msgstr "``Restarted``活動停止後、活動を再開する。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:360
msgid "``Resumed``: Activity resumes after a pause."
msgstr "``Resumed``:一時停止後、活動を再開。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:361
msgid "``Paused``: Activity is paused."
msgstr "``Paused``:アクティビティは一時停止しています。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:362
msgid "``Stopped``: Activity stops."
msgstr "``Stopped``:活動停止。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:363
msgid "``Destroyed``: Activity is destroyed."
msgstr "``Destroyed``:アクティビティが破壊される。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:365
msgid "Activity lifecycle spans contain the following attributes:"
msgstr "アクティビティライフサイクルスパンには以下の属性がある："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:377 ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:407
msgid "Always ``ui``."
msgstr "いつも``ui`` 。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:378
msgid "``activityName``"
msgstr "``activityName``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:380
msgid "Name of the activity class."
msgstr "活動クラスの名前。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:383
msgid "Fragment lifecycle monitoring"
msgstr "フラグメントのライフサイクル監視"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:385
msgid "Fragment lifecycle monitoring generates spans whenever a fragment changes its state. A fragment lifecycle span can have one the following names depending on its state:"
msgstr "フラグメントのライフサイクル監視は、フラグメントの状態が変化するたびにスパンを生成する。フラグメントのライフサイクル・スパンは、その状態に応じて、以下のいずれかの名前を持つことができる："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:387
msgid "``Created``: Before the fragment gets attached to the Android context."
msgstr "``Created``:フラグメントがAndroidコンテキストにアタッチされる前。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:388
msgid "``Restored``: Fragment recreates its view."
msgstr "``Restored``:フラグメントがその景色を再現。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:389
msgid "``Resumed``: Fragment is resumed after a pause."
msgstr "``Resumed``:フラグメントは一時停止後に再開される。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:390
msgid "``Paused``: Fragment is paused."
msgstr "``Paused``:フラグメントは一時停止。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:391
msgid "``ViewDestroyed``: The view of the fragment is destroyed"
msgstr "``ViewDestroyed``:フラグメントのビューが破壊される"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:392
msgid "``Destroyed``: Fragment is destroyed."
msgstr "``Destroyed``:フラグメントが破壊される。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:393
msgid "``Detached``: Fragment is detached from the Android context."
msgstr "``Detached``:フラグメントがAndroidコンテキストから切り離される。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:395
msgid "Fragment lifecycle spans contain the following attributes:"
msgstr "フラグメントのライフサイクル・スパンには、以下の属性が含まれる："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:408
msgid "``fragmentName``"
msgstr "``fragmentName``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:410
msgid "Name of the fragment class."
msgstr "フラグメントクラスの名前。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:413 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:384 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:227
msgid "App start monitoring"
msgstr "アプリ起動監視"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:415 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:386
msgid "App start monitoring feature generates spans whenever the app performs a cold, warm, or hot start."
msgstr "アプリの起動監視機能は、アプリがコールド、ウォーム、ホットスタートを行うたびにスパンを生成します。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:417 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:388 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:231
msgid "Cold starts happen when users open the app for the first time since booting the phone, or after the user has terminated the app."
msgstr "コールドスタートは、ユーザーが携帯電話を起動してから初めてアプリを開いたとき、またはユーザーがアプリを終了した後に起こる。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:418 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:389 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:232
msgid "Hot starts happen when the system brings an app to the foreground. Hot starts are faster than cold starts because the app is already loaded."
msgstr "ホットスタートは、システムがアプリをフォアグラウンドにするときに起こる。アプリがすでにロードされているため、ホットスタートはコールドスタートより速い。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:419
msgid "Warm starts happen when some of the operations that take place in a cold start are still happening. Warm starts are faster than cold starts, but slower than hot starts."
msgstr "ウォーム・スタートは、コールド・スタートで行われる操作の一部がまだ行われているときに行われる。ウォームスタートはコールドスタートより速いが、ホットスタートより遅い。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:421 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:391 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:234
msgid "App start monitoring produces spans with the name ``AppStart`` and the following attributes:"
msgstr "App start monitoringは、``AppStart`` という名前と以下の属性を持つスパンを生成する："

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:433 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:403 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:246
msgid "Always ``appstart``."
msgstr "いつも``appstart`` 。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:434 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:404 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:247
msgid "``start.type``"
msgstr "``start.type``"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:436
msgid "The type of start. Can be ``cold``, ``warm``, or ``hot``."
msgstr "スタートのタイプ。``cold`` 、``warm`` 、``hot`` のいずれか。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:440 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:409
msgid "Location data"
msgstr "位置情報"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:442
msgid "If you choose to set the latitude and longitude for location data by using the Splunk RUM for Android APIs, Splunk Observability Cloud uses the information to map the geographical location of the user, such as country, city, and so on."
msgstr "Splunk RUM for Android API を使用して位置情報の緯度と経度を設定した場合、Splunk Observability Cloud はその情報を使用して国や都市などのユーザーの地理的位置をマッピングします。"

#: ../../gdi/get-data-in/rum/android/rum-android-data-model.rst:445
msgid "Splunk Observability Cloud calculates geographical metadata from the latitude and longitude, and drops the latitude and longitude after processing the data."
msgstr "Splunk Observability Cloud は、緯度と経度から地理的メタデータを計算し、データ処理後に緯度と経度を削除します。"

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:-1
msgid "If your instrumented Android application is not sending data to Splunk Observability Cloud, or data is missing, follow these steps to identify and resolve the issue."
msgstr "インスツルメンテッド Android アプリケーションが Splunk Observability Cloud にデータを送信しない、またはデータが欠落している場合は、以下の手順に従って問題を特定し、解決してください。"

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:5
msgid "Troubleshoot Android instrumentation for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用 Android 計測器のトラブルシューティング"

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:10
msgid "When you instrument an Android application using the Splunk OpenTelemetry Instrumentation for Android and you don't see your data in Splunk Observability Cloud, follow these troubleshooting steps."
msgstr "Android 向け Splunk OpenTelemetry Instrumentation を使用して Android アプリケーションを計測したときに、Splunk Observability Cloud にデータが表示されない場合は、以下のトラブルシューティング手順に従ってください。"

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:15
msgid "Steps for troubleshooting Android OpenTelemetry issues"
msgstr "Android OpenTelemetryのトラブルシューティングの手順"

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:17
msgid "The following steps can help you troubleshoot Android RUM agent issues:"
msgstr "以下の手順は、Android RUMエージェントの問題のトラブルシューティングに役立ちます："

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:19
msgid ":ref:`activate-desugaring`"
msgstr ":ref:`activate-desugaring`"

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:20
msgid ":ref:`activate-android-debug-logging`"
msgstr ":ref:`activate-android-debug-logging`"

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:25
msgid "Check that desugaring is activated for your app"
msgstr "あなたのアプリでデスガリングが有効になっていることを確認してください。"

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:27
msgid "If you see runtime errors related to Java 8 interfaces and classes, make sure you have activated ``coreLibraryDesugaring``. See :ref:`enable-desugaring`."
msgstr "Java 8 のインターフェイスやクラスに関するランタイムエラーが表示される場合は、``coreLibraryDesugaring`` を有効にしていることを確認してください。:ref:`enable-desugaring` を参照。"

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:34
msgid "Activating debug logging can help you troubleshoot Android instrumentation issues."
msgstr "デバッグ・ロギングを有効にすると、Androidの計測に関する問題のトラブルシューティングに役立ちます。"

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:36
msgid "To activate logging, add the ``enableDebug()`` method to ``SplunkRum.builder()``. For example:"
msgstr "ロギングを有効にするには、``SplunkRum.builder()`` に``enableDebug()`` メソッドを追加する。例えば、こうだ："

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:53
msgid "Error: Handling gzip compressed request EOF"
msgstr "エラー：gzip 圧縮リクエストの EOF 処理"

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:55
msgid "When including the Splunk RUM agent to your application, Android Studio might show an EOFException related to gzip compression."
msgstr "Splunk RUM エージェントをアプリケーションに含めると、Android Studio で gzip 圧縮に関連する EOFException が表示される場合があります。"

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:57
msgid "Splunk RUM uses gzip encoding to reduce network bandwidth consumption. The Network Inspector in Android Studio attempts to read the body of the HTTP request, breaking the gzip encoding. This results in Splunk Observability Cloud ingest endpoints returning error 400."
msgstr "Splunk RUM はネットワーク帯域幅の消費を抑えるために gzip エンコーディングを使用しています。Android StudioのNetwork InspectorはHTTPリクエストのボディを読み取ろうとし、gzipエンコーディングを破ります。この結果、Splunk Observability Cloud インジェストエンドポイントはエラー 400 を返します。"

#: ../../gdi/get-data-in/rum/android/troubleshooting.rst:59
msgid "As a workaround, deactivate Splunk RUM while profiling your app, or deactivate gzip compression when profiling your app."
msgstr "回避策として、アプリのプロファイリング時に Splunk RUM を無効にするか、アプリのプロファイリング時に gzip 圧縮を無効にします。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:-1
msgid "Use the following methods when creating manual instrumentation for Splunk Observability Cloud real user monitoring / RUM for Browser."
msgstr "Splunk Observability Cloud リアルユーザーモニタリング / RUM for Browser 用の手動インスツルメンテーションを作成する場合は、以下の方法を使用してください。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:6
msgid "API reference for Browser RUM instrumentation"
msgstr "ブラウザRUMインスツルメンテーションのAPIリファレンス"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:11
msgid "Use the following API methods when creating manual instrumentation for Splunk RUM for Browser. For manual instrumentation examples, see :ref:`manual-rum-browser-instrumentation`."
msgstr "Splunk RUM for Browser 用の手動インスツルメンテーションを作成する場合は、以下の API メソッドを使用します。マニュアルの計装例については、:ref:`manual-rum-browser-instrumentation` を参照。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:13
msgid "``try ... catch`` blocks can prevent your app from crashing when using the CDN version of Browser RUM."
msgstr "``try ... catch`` ブロックは、Browser RUMのCDNバージョンを使用しているときにアプリがクラッシュするのを防ぐことができます。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:16
msgid "Methods"
msgstr "方法"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:19
msgid "setGlobalAttributes"
msgstr "setGlobalAttributes"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:21
msgid "The ``setGlobalAttributes`` method adds a list of attributes to every new span. For example, you can use this method to add user metadata to spans. See :ref:`browser-rum-identify-users`."
msgstr "``setGlobalAttributes`` メソッドは、すべての新しいスパンに属性のリストを追加します。たとえば、このメソッドを使用して、スパンにユーザー・メタデータを追加することができます。:ref:`browser-rum-identify-users` を参照。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:32 ../../gdi/opentelemetry/otel-commands.rst:159 ../../gdi/opentelemetry/otel-commands.rst:247 ../../gdi/opentelemetry/otel-commands.rst:279 ../../gdi/opentelemetry/otel-commands.rst:307 ../../gdi/opentelemetry/otel-commands.rst:339 ../../gdi/opentelemetry/otel-commands.rst:384 ../../gdi/opentelemetry/otel-commands.rst:416 ../../gdi/opentelemetry/otel-commands.rst:487 ../../gdi/smart-agent/smart-agent-commands.rst:167 ../../gdi/smart-agent/smart-agent-commands.rst:250 ../../gdi/smart-agent/smart-agent-commands.rst:282 ../../gdi/smart-agent/smart-agent-commands.rst:310
#: ../../gdi/smart-agent/smart-agent-commands.rst:342 ../../gdi/smart-agent/smart-agent-commands.rst:374 ../../gdi/smart-agent/smart-agent-commands.rst:406 ../../gdi/smart-agent/smart-agent-commands.rst:476 ../../gdi/smart-agent/smart-agent-commands.rst:606
msgid "Argument"
msgstr "議論"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:34 ../../gdi/opentelemetry/components/attributes-processor.rst:108
msgid "``attributes``"
msgstr "``attributes``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:35
msgid "Object of attributes added to all spans. If undefined, all current global attributes are deleted and no longer added to new spans."
msgstr "すべてのスパンに追加される属性のオブジェクト。未定義の場合、現在のグローバル属性はすべて削除され、新しいスパンには追加されなくなる。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:37
msgid "The following example sets different attributes to all new spans:"
msgstr "次の例では、すべての新しいスパンに異なる属性を設定しています："

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:55
msgid "getGlobalAttributes"
msgstr "getGlobalAttributes"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:57
msgid "The ``getGlobalAttributes`` method retrieves all current global attributes and returns an ``Attributes`` object with attributes. It doesn't take arguments."
msgstr "``getGlobalAttributes`` メソッドは、現在のすべてのグローバル属性を取得し、属性を持つ``Attributes`` オブジェクトを返す。議論は必要ない。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:63
msgid "The following example shows how to use ``getGlobalAttributes`` after using ``setGlobalAttributes``:"
msgstr "次の例は、``setGlobalAttributes`` を使った後に、``getGlobalAttributes`` を使う方法を示している："

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:83
msgid "getSessionId"
msgstr "getSessionId"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:85
msgid "The ``getSessionId`` method retrieves the current session ID. It doesn't take arguments."
msgstr "``getSessionId`` メソッドは、現在のセッションIDを取得する。議論は必要ない。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:91
msgid "The following example shows how to retrieve the session ID and add it to the application metadata:"
msgstr "次の例は、セッションIDを取得し、アプリケーションのメタデータに追加する方法を示している："

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:100
msgid "addEventListener and removeEventListener"
msgstr "addEventListener と removeEventListener"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:102
msgid "You can register event listeners with ``addEventListener`` and remove them using ``removeEventListener``."
msgstr "イベントリスナーは``addEventListener`` で登録し、``removeEventListener`` で削除することができます。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:104
msgid "Event listeners take an object in the form ``{ payload: { /* Depending on event */ }}`` as the first parameter."
msgstr "イベントリスナーは、``{ payload: { /* Depending on event */ }}`` 形式のオブジェクトを最初のパラメーターとして受け取ります。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:116 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:150
msgid "Event"
msgstr "イベント"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:117
msgid "Payload"
msgstr "ペイロード"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:119
msgid "``'session-changed'``"
msgstr "``'session-changed'``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:120
msgid "``sessionId``: string (New session ID)"
msgstr "``sessionId``: string (新しいセッションID)"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:121
msgid "Emitted when the session ID changes."
msgstr "セッションIDが変更されたときに発せられる。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:122
msgid "``'global-attributes-changed'``"
msgstr "``'global-attributes-changed'``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:123
msgid "``attributes``: object (New global attributes)"
msgstr "``attributes``: オブジェクト (新しいグローバル属性)"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:124
msgid "Emitted when ``setGlobalAttributes`` is called."
msgstr "``setGlobalAttributes`` 。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-api-reference.rst:126
msgid "The following example shows how to add an event listener to track changes of session ID:"
msgstr "次の例は、セッションIDの変更を追跡するイベントリスナーを追加する方法を示している："

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:-1
msgid "Understand which errors are collected by the Browser RUM agent for Splunk Observability Cloud real user monitoring / RUM."
msgstr "Splunk Observability Cloud リアルユーザーモニタリング / RUM の Browser RUM エージェントが収集するエラーを理解する。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:5
msgid "Errors collected by the Browser RUM agent"
msgstr "ブラウザRUMエージェントが収集したエラー"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:10
msgid "The Browser RUM agent collects errors as spans with a duration of zero. Error spans carry a timestamp based on the time when the error occurred."
msgstr "ブラウザRUMエージェントは、エラーを継続時間0のスパンとして収集する。エラー・スパンには、エラーが発生した時間に基づくタイムスタンプが付与される。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:12
msgid "By default, the instrumentations collect errors from the following sources:"
msgstr "デフォルトでは、インストルメンテーションは以下のソースからエラーを収集する："

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:14
msgid "Uncaught and unhandled errors from the ``\"error\"`` event listener on the ``window`` object"
msgstr "``window`` オブジェクトの``\"error\"`` イベントリスナーからの捕捉されなかったエラーと処理されなかったエラー。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:15
msgid "Unhandled promise rejections from the ``unhandledrejection`` event listener on the ``window`` object"
msgstr "``window`` オブジェクトの``unhandledrejection`` イベントリスナーからの未処理のプロミス拒否。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:16
msgid "Error events from failing to load resources from the ``\"error\"`` event listener on the ``document`` object"
msgstr "``document`` オブジェクトの``\"error\"`` イベントリスナーからのリソースのロードに失敗したことによるエラーイベント。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:17
msgid "``console.error`` errors logged to the console"
msgstr "``console.error`` コンソールに記録されるエラー"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:18
msgid "``SplunkRum.error`` errors which can't be logged but are still collected by the agent"
msgstr "``SplunkRum.error`` ログには記録されないが、エージェントによって収集されるエラー"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:20
msgid "To collect JavaScript errors from single-page application (SPA) frameworks, see :ref:`rum-browser-spa-errors`."
msgstr "シングル・ページ・アプリケーション（SPA）フレームワークからJavaScriptエラーを収集するには、:ref:`rum-browser-spa-errors` を参照してください。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:23
msgid "Uncaught or unhandled errors"
msgstr "未捕捉または未処理のエラー"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:25
msgid "The Browser RUM agent registers each uncaught or unhandled error as a span with name ``onerror``. Here are some typical examples of uncaught or unhandled errors:"
msgstr "Browser RUMエージェントは、キャッチされなかったエラーや処理されなかったエラーを、``onerror`` という名前のスパンとして登録します。以下は、捕捉されないエラーや処理されないエラーの典型的な例である："

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:27
msgid "Errors that aren't caught by ``try {}`` and ``catch {}`` blocks"
msgstr "``try {}`` 、``catch {}`` ブロックで捕捉されないエラー"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:28
msgid "Errors thrown again in a ``catch`` block but not caught again"
msgstr "エラーは``catch`` ブロックで再度スローされるが、再度キャッチされることはない。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:29
msgid "Syntax errors in files"
msgstr "ファイルの構文エラー"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:31
msgid "The following examples show how the Browser RUM agent collects uncaught or unhandled errors:"
msgstr "以下の例は、Browser RUMエージェントがどのように捕捉されなかったエラーや処理されなかったエラーを収集するかを示しています："

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:34
msgid "Syntax error example"
msgstr "構文エラーの例"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:36
msgid "Consider the following syntax error:"
msgstr "次のような構文エラーを考えてみよう："

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:42 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:62 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:94 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:117 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:146 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:179 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:203
msgid "The Browser RUM agent collects the error using the following attributes:"
msgstr "Browser RUMエージェントは、以下の属性を使用してエラーを収集します："

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:44 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:64 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:96 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:119 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:148 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:181 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:205
msgid "``component``: ``\"error\"``"
msgstr "``component``: ``\"error\"``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:45 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:65 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:97 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:120 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:149 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:182 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:206
msgid "``\"error\"``: ``true``"
msgstr "``\"error\"``: ``true``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:46
msgid "``error.message``: ``Unexpected token ';'``"
msgstr "``error.message``: ``Unexpected token ';'``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:47
msgid "``error.object``: ``SyntaxError``"
msgstr "``error.object``: ``SyntaxError``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:48
msgid "``error.stack``: ``SyntaxError: Unexpected token ';'``"
msgstr "``error.stack``: ``SyntaxError: Unexpected token ';'``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:50 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:70 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:102 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:125 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:154 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:187 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:211
msgid "``error.message`` and ``error.stack`` messages are browser-specific."
msgstr "``error.message`` および``error.stack`` メッセージはブラウザ固有のものです。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:53
msgid "Null reference example"
msgstr "ヌル・リファレンスの例"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:55
msgid "Consider the following ``null`` reference error:"
msgstr "次の``null`` 参照エラーを考えてみよう："

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:66
msgid "``error.message``: ``Cannot set property 'prop1' of null``"
msgstr "``error.message``: ``Cannot set property 'prop1' of null``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:67 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:122
msgid "``error.object``: ``TypeError``"
msgstr "``error.object``: ``TypeError``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:68
msgid "``error.stack``: ``TypeError: Cannot set property 'prop1' of null at...``"
msgstr "``error.stack``: ``TypeError: Cannot set property 'prop1' of null at...``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:73
msgid "Uncaught promise rejections"
msgstr "約束の不履行"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:75
msgid "The Browser RUM agent registers each uncaught promise rejection as a span with name ``unhandledrejection``. Uncaught promise rejections can happen in the following situations:"
msgstr "Browser RUMエージェントは、捕捉されなかったプロミス拒否を、``unhandledrejection`` という名前のスパンとして登録します。捕捉されない約束の拒否は、以下のような状況で起こりうる："

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:77
msgid "In a promise chain without a final ``.catch`` method"
msgstr "最後の``.catch`` メソッドがないプロミスチェーンでは"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:78
msgid "As an error in promise chain, including rethrowing in a ``catch`` block, without any subsequent ``catch`` block"
msgstr "``catch`` ブロックでの再投了を含む、プロミス連鎖のエラーとして、後続の``catch`` ブロックがない場合。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:79
msgid "As a ``throw`` block in an ``async`` function"
msgstr "``async`` 関数の``throw`` ブロックとして"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:81
msgid "The following examples show how the Browser RUM agent collects uncaught promise rejections:"
msgstr "以下の例は、Browser RUMエージェントがどのように捕捉されなかったプロミス拒否を収集するかを示しています："

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:84
msgid "Standard error example"
msgstr "標準エラー例"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:86 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:107 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:169 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:192
msgid "Consider the following code:"
msgstr "次のコードを考えてみよう："

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:98
msgid "``error.message``: ``broken``"
msgstr "``error.message``: ``broken``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:99
msgid "``error.object``: ``\"error\"``"
msgstr "``error.object``: ``\"error\"``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:100
msgid "``error.stack``: ``Error: broken at...``"
msgstr "``error.stack``: ``Error: broken at...``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:105
msgid "Type error example"
msgstr "タイプエラーの例"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:121
msgid "``error.message``: ``Cannot set property 'prop' of null``"
msgstr "``error.message``: ``Cannot set property 'prop' of null``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:123
msgid "``error.stack``: ``TypeError: Cannot set property 'prop' of null at...``"
msgstr "``error.stack``: ``TypeError: Cannot set property 'prop' of null at...``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:128
msgid "Failing to load resources"
msgstr "リソースの読み込みに失敗"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:130
msgid "The Browser RUM agent registers each failure to load resources as a span with name ``eventListener.error``. Browsers fail to load resources when the server returns 4xx or 5xx status codes when loading images or scripts."
msgstr "ブラウザRUMエージェントは、リソースのロードに失敗するたびに、名前``eventListener.error`` のスパンとして登録します。画像やスクリプトの読み込み時にサーバーが4xxまたは5xxステータスコードを返すと、ブラウザがリソースの読み込みに失敗する。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:132 ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:218
msgid "Consider the following example:"
msgstr "次の例を考えてみよう："

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:150
msgid "``error.message``: ``\"IMG\"``"
msgstr "``error.message``: ``\"IMG\"``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:151
msgid "``error.object``: ``\"https://example.com/missing-image.png\"``"
msgstr "``error.object``: ``\"https://example.com/missing-image.png\"``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:152
msgid "``error.stack``: ``\"\"//html/body/img\"\"``"
msgstr "``error.stack``: ``\"\"//html/body/img\"\"``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:157
msgid "Console errors"
msgstr "コンソールエラー"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:159
msgid "The Browser RUM agent registers each error logged using the console as a span with the name ``console.error``. Browsers typically use console errors to show messages in the developer console. The Browser RUM agent collects console errors from ``try...catch`` blocks where you don't want or can't throw errors further in the stack."
msgstr "Browser RUMエージェントは、コンソールを使ってログに記録された各エラーを、``console.error`` という名前のスパンとして登録します。ブラウザは通常、コンソールエラーを使って開発者コンソールにメッセージを表示する。Browser RUMエージェントは、``try...catch`` ブロックからコンソールエラーを収集し、スタック内でそれ以上エラーを投げたくない、または投げられないようにします。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:162
msgid "Your browser console might misreport console errors as Browser RUM agent errors. Check the stack trace to confirm whether the error is caused by Splunk RUM or by ``console.error`` calls generated by the application you're instrumenting."
msgstr "ブラウザのコンソールが、コンソールエラーをブラウザRUMエージェントのエラーとして誤って報告する可能性があります。スタックトレースを確認し、エラーの原因が Splunk RUM にあるのか、インスツルメンテーション対象のアプリケーションが生成した``console.error`` 呼び出しにあるのかを確認します。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:164
msgid "The following examples show how the Browser RUM agent collects console errors:"
msgstr "以下の例は、Browser RUMエージェントがどのようにコンソールエラーを収集するかを示しています："

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:167
msgid "Setting field value to null example"
msgstr "フィールドの値をnullに設定する例"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:183
msgid "``error.message``: ``failed to update TypeError: Cannot set property 'anyField' of null``"
msgstr "``error.message``: ``failed to update TypeError: Cannot set property 'anyField' of null``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:184
msgid "``error.object``: ``String``"
msgstr "``error.object``: ``String``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:185
msgid "``error.stack``: ``\"TypeError: Cannot set property 'anyField' of null at...``"
msgstr "``error.stack``: ``\"TypeError: Cannot set property 'anyField' of null at...``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:190
msgid "Error 404 example"
msgstr "エラー404の例"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:207
msgid "``error.message``: ``\"error getting users Error: Request failed with status code 404\"``"
msgstr "``error.message``: ``\"error getting users Error: Request failed with status code 404\"``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:208
msgid "``error.object``: ``\"String\"``"
msgstr "``error.object``: ``\"String\"``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:209
msgid "``error.stack``: ``\"Error: Request failed with status code 404 [...] at XMLHttpRequest.l.onreadystatechange  axios.min.js:2:8373)\"``"
msgstr "``error.stack``: ``\"Error: Request failed with status code 404 [...] at XMLHttpRequest.l.onreadystatechange  axios.min.js:2:8373)\"``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:214
msgid "Splunk RUM errors"
msgstr "Splunk RUM エラー"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:216
msgid "The Browser RUM agent registers each error logged by invoking ``SplunkRum.error`` as a span with name: ``SplunkRum.error``. Using ``SplunkRum.error`` doesn't log an error in the developer console of the browser. Errors are sent along with other RUM telemetry and exposed in the Splunk RUM UI."
msgstr "ブラウザRUMエージェントは、``SplunkRum.error`` をスパンとして起動し、``SplunkRum.error`` という名前で、ログに記録された各エラーを登録する。``SplunkRum.error`` を使用しても、ブラウザの開発者コンソールにエラーは記録されない。エラーは他の RUM テレメトリとともに送信され、Splunk RUM UI で公開されます。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-errors.rst:231
msgid "The resulting error has similar attributes to any ``console.error`` collected by the Browser RUM agent."
msgstr "結果として発生するエラーは、Browser RUMエージェントが収集した``console.error`` と同様の属性を持つ。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:-1
msgid "Splunk Observability Cloud real user monitoring / RUM for Browser collects the following data through automatic instrumentations."
msgstr "Splunk Observability Cloud リアルユーザーモニタリング / RUM for Browser は、自動計測によって以下のデータを収集します。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:6
msgid "Instrumentation-specific data for Browser RUM"
msgstr "ブラウザRUMのインストゥルメント固有のデータ"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:11
msgid "Splunk RUM for Browser collects the following data through automatic instrumentations. To activate or deactivate instrumentations, see :ref:`browser-rum-instrumentation-settings`."
msgstr "Splunk RUM for Browser は、自動インスツルメンテーションによって以下のデータを収集します。インストゥルメンテーションをアクティブまたは非アクティブにするには、:ref:`browser-rum-instrumentation-settings` を参照。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:16
msgid "Document load"
msgstr "ドキュメントロード"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:18
msgid "The ``document`` instrumentation produces spans about resources that load by the time the ``Window:load`` event fires. The root span generated is ``documentLoad``. \"The ``parentID`` for the ``documentFetch`` and ``resourceFetch`` spans is ``documentLoad.id``."
msgstr "``document`` インスツルメンテーションは、``Window:load`` イベントが発 生するまでにロードされたリソースに関するスパンを生成する。生成されたルートスパンは``documentLoad`` である。\"``documentFetch`` と``resourceFetch`` のスパンの``parentID`` は``documentLoad.id`` 。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:20
msgid "If the page load request has a ``Server-Timing`` header, RUM uses the data to link the ``documentFetch`` span to the corresponding back-end span. The Browser RUM agent also collects resources such as ``script``, ``link``, ``css - font``, ``iframe``, ``XHR/fetch``, ``img``, ``favicon`` and ``manifest.json``, and links them to APM traces if the ``Server-Timing`` header is present."
msgstr "ページロードリクエストに``Server-Timing`` ヘッダーがある場合、RUMはそのデータを使って``documentFetch`` スパンを対応するバックエンドスパンにリンクします。Browser RUMエージェントはまた、``script`` 、``link`` 、``css - font`` 、``iframe`` 、``XHR/fetch`` 、``img`` 、``favicon`` 、``manifest.json`` などのリソースを収集し、``Server-Timing`` ヘッダーが存在する場合、それらをAPMトレースにリンクする。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:25
msgid "documentLoad"
msgstr "documentLoad"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:27
msgid "The Browser RUM agent collects the following data using the ``documentLoad`` instrumentation:"
msgstr "Browser RUMエージェントは、``documentLoad`` インストルメンテーションを使用して、以下のデータを収集します："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:36
msgid "``document.referrer``"
msgstr "``document.referrer``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:38
msgid "URI of the referral page. For example, ``https://subdomain.example.com``."
msgstr "紹介ページのURI。例えば、``https://subdomain.example.com`` 。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:39
msgid "``screen.xy``"
msgstr "``screen.xy``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:41
msgid "Width and height of the display. For example, ``2560x1440``."
msgstr "ディスプレイの幅と高さ。例えば、``2560x1440`` 。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:43
msgid "The following annotations are collected from the navigation timings, as specified by the W3C specification for the ``PerformanceNavigationTiming`` interface:"
msgstr "以下の注釈は、``PerformanceNavigationTiming`` インターフェースに関する W3C 仕様で指定されているナビゲーションのタイミングから収集されたものである："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:50 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:178
msgid "Timestamp"
msgstr "タイムスタンプ"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:51 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:179
msgid "``fetchStart``"
msgstr "``fetchStart``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:52
msgid "Immediately before the browser starts fetching the resource."
msgstr "ブラウザがリソースのフェッチを開始する直前。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:53
msgid "``unloadEventStart``"
msgstr "``unloadEventStart``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:54
msgid "Immediately before the user agent starts the unload event of the previous document."
msgstr "ユーザーエージェントが前の文書のアンロードイベントを開始する直前。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:55
msgid "``unloadEventEnd``"
msgstr "``unloadEventEnd``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:56
msgid "Immediately after the user agent finishes the unload event of the previous document."
msgstr "ユーザエージェントが前の文書のアンロードイベントを終了した直後。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:57
msgid "``domInteractive``"
msgstr "``domInteractive``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:58
msgid "Immediately before the user agent sets the readiness of the current document to `Interactive`."
msgstr "ユーザーエージェントが現在の文書の準備完了を`インタラクティブ` に設定する直前。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:59
msgid "``domContentLoadedEventStart``"
msgstr "``domContentLoadedEventStart``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:60
msgid "Immediately before the user agent fires the ``DOMContentLoaded`` event at the current document."
msgstr "ユーザーエージェントが現在のドキュメントで``DOMContentLoaded`` イベントを発生させる直前。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:61
msgid "``domContentLoadedEventEnd``"
msgstr "``domContentLoadedEventEnd``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:62
msgid "Immediately after the ``DOMContentLoaded`` event of the current document completes."
msgstr "現在の文書の``DOMContentLoaded`` イベントが完了した直後。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:63
msgid "``domComplete``"
msgstr "``domComplete``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:64
msgid "Immediately before the browser sets the readiness of the current document to `Complete`."
msgstr "ブラウザが現在のドキュメントの準備完了を`に設定する直前` 。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:65
msgid "``loadEventStart``"
msgstr "``loadEventStart``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:66
msgid "Immediately before the load event of the current document is fired."
msgstr "現在のドキュメントのロードイベントが発生する直前。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:67
msgid "``loadEventEnd``"
msgstr "``loadEventEnd``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:68
msgid "When the load event of the current document is completed."
msgstr "現在の文書のロードイベントが完了したとき。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:73
msgid "documentFetch"
msgstr "documentFetch"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:75
msgid "The Browser RUM agent collects the following data using the ``documentFetch`` instrumentation:"
msgstr "Browser RUMエージェントは、``documentFetch`` インストルメンテーションを使用して、以下のデータを収集します："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:86 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:110
msgid "The size of the document received from the payload body."
msgstr "ペイロードボディから受け取ったドキュメントのサイズ。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:89
msgid "Trace identifier, collected from the ``Server-Timing`` response header set by the APM agent."
msgstr "APM エージェントが設定した``Server-Timing`` レスポンスヘッダから収集したトレース識別子。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:92
msgid "Span identifier, collected from the ``Server-Timing`` response header set by the APM agent."
msgstr "APM エージェントが設定した``Server-Timing`` レスポンスヘッダから収集したスパン識別子。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:97
msgid "resourceFetch"
msgstr "resourceFetch"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:99
msgid "The Browser RUM agent collects the following data using the ``resourceFetch`` instrumentation:"
msgstr "Browser RUMエージェントは、``resourceFetch`` インストルメンテーションを使用して、以下のデータを収集します："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:113
msgid "URL of the requested resource."
msgstr "リクエストされたリソースのURL。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:116
msgid "Trace identifier, collected from ``Server-Timing`` response header set by the APM agent."
msgstr "APM エージェントが設定した``Server-Timing`` レスポンスヘッダから収集したトレース識別子。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:119
msgid "Span identifier, collected from ``Server-Timing`` response header set by the APM agent."
msgstr "APM エージェントが設定した``Server-Timing`` レスポンスヘッダから収集したスパン識別子。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:121
msgid "Safari 10.1 doesn't support :code:`resourceFetch` spans."
msgstr "Safari 10.1 は:code:`resourceFetch` のスパンをサポートしていません。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:126
msgid "XHR and Fetch instrumentations"
msgstr "XHRとFetchインストルメンテーション"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:128
msgid "The ``xhr`` and ``fetch`` instrumentations collect XMLHttpRequest events and Fetch API events. Spans differ in the value of the ``component`` tag, which differentiates between ``xml-http-request`` and ``fetch``."
msgstr "``xhr`` および``fetch`` インストルメンテーションは、XMLHttpRequest イベントと Fetch API イベントを収集する。スパンは、``xml-http-request`` と``fetch`` を区別する``component`` タグの値で異なる。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:130
msgid "This instrumentation prepends the HTTP method name to the name of the span. If the instrumentation maps to a back end providing a ``Server-Timing`` header in the response, the link with the back-end trace is also generated."
msgstr "このインストルメンテーションは、スパン名の前にHTTPメソッド名を付加する。インスツルメンテーションが、レスポンスに``Server-Timing`` ヘッダーを提供するバックエンドにマップされる場合、バックエンドトレースとのリンクも生成される。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:133
msgid "The Browser RUM agent collects the following data using the XHR and Fetch instrumentations:"
msgstr "Browser RUMエージェントは、XHRおよびFetchインストルメンテーションを使用して、以下のデータを収集します："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:137
msgid "``http.host``"
msgstr "``http.host``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:138
msgid "``http.scheme``"
msgstr "``http.scheme``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:140
msgid "``http.status_text``"
msgstr "``http.status_text``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:144
msgid "The XHR and Fetch instrumentations annotate the span with timestamps representing when the following events fire:"
msgstr "XHRインストルメンテーションとFetchインストルメンテーションは、以下のイベントがいつ発生するかを示すタイムスタンプでスパンに注釈を付ける："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:153
msgid "``open``"
msgstr "``open``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:155
msgid "Time in UNIX epoch, measured in microseconds when the XHR ``open`` event fires."
msgstr "XHR``open`` イベントが発生する UNIX エポックでの時間。マイクロ秒単位で計測される。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:156
msgid "``send``"
msgstr "``send``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:158
msgid "Time when the XHR ``send`` event fires."
msgstr "XHR``send`` イベントが発生した時刻。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:159 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:96
msgid "``load``"
msgstr "``load``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:161
msgid "Time when the XHR ``load`` event fires."
msgstr "XHR``load`` イベントが発生した時刻。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:162
msgid "``\"error\"``"
msgstr "``\"error\"``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:164
msgid "Time when the XHR ``\"error\"`` event fires."
msgstr "XHR``\"error\"`` イベントが発生した時刻。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:165
msgid "``timeout``"
msgstr "``timeout``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:167
msgid "Time when the XHR ``timeout`` event fires."
msgstr "XHR``timeout`` イベントが発生した時刻。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:168
msgid "``abort``"
msgstr "``abort``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:170
msgid "Time when the XHR ``abort`` event fires."
msgstr "XHR``abort`` イベントが発生した時刻。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:172
msgid "Annotations collected by the XHR and Fetch instrumentations are described in :ref:`browser-rum-timing-annotations`."
msgstr "XHRおよびFetchインストルメンテーションによって収集されたアノテーションは、:ref:`browser-rum-timing-annotations` で説明されています。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:177
msgid "Web Vitals"
msgstr "ウェブ・バイタル"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:179
msgid "The ``webvitals`` instrumentation collects data about Google Web Vitals metrics. The Browser RUM agent collects Web Vitals metrics as spans with zero duration. Every span has a designated ``traceId`` and no parent span."
msgstr "``webvitals`` インストルメンテーションは、Google Web Vitals メトリクスに関するデータを収集する。ブラウザRUMエージェントは、ウェブ・バイタル・メトリクスを持続時間ゼロのスパンとして収集します。すべてのスパンは、指定された``traceId`` 、親スパンを持たない。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:181
msgid "The Browser RUM agent collects the following data using the ``webvitals`` instrumentation:"
msgstr "Browser RUMエージェントは、``webvitals`` インストルメンテーションを使用して、以下のデータを収集します："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:188
msgid "Web Vital"
msgstr "ウェブ・バイタル"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:190
msgid "``lcp``"
msgstr "``lcp``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:191
msgid "Largest Contentful Paint"
msgstr "最大のコンテンツ・ペイント"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:192
msgid "Measures loading performance by capturing the render time of the largest image or text block visible within the viewport."
msgstr "ビューポート内に表示される最大の画像またはテキストブロックのレンダリング時間をキャプチャすることにより、読み込みパフォーマンスを測定します。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:193
msgid "``fid``"
msgstr "``fid``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:194
msgid "First Input Delay"
msgstr "最初の入力遅延"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:195
msgid "Measures interactivity by capturing the timestamp between user interactions to time when the browser can begin processing event handlers in response to that interaction."
msgstr "ユーザーとのインタラクションから、そのインタラクションに反応してブラウザがイベントハンドラの処理を開始するまでのタイムスタンプを取得することで、インタラクティブ性を測定します。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:196
msgid "``cls``"
msgstr "``cls``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:197
msgid "Cumulative Layout Shift"
msgstr "累積レイアウトシフト"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:198
msgid "Measures visual stability by capturing the sum of all individual layout shift scores for every unexpected layout shift that occurs during the entire lifespan of the page. A layout shift occurs any time a visible element changes its position from one rendered frame to the next."
msgstr "ページの全ライフスパンで発生した予期せぬレイアウトシフトについて、個々のレイアウトシフトスコアの合計を取得することで、視覚的安定性を測定する。レイアウトシフトは、可視要素がレンダリングフレームから次のフレームへと位置を変えるたびに発生します。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:199
msgid "``inp``"
msgstr "``inp``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:200
msgid "Interaction to Next Paint"
msgstr "次のペイントへの相互作用"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:201
msgid "Measures responsiveness by observing the latency of all interactions a user has done on the page and reports the slowest value."
msgstr "ユーザーがページ上で行ったすべてのインタラクションのレイテンシーを観察することで応答性を測定し、最も遅い値を報告する。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:206
msgid "Resources after load"
msgstr "ロード後のリソース"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:208
msgid "The ``postload`` instrumentation collects data about resources that load after a page ``load`` event. By default, the instrumentation activates instrumenting ``<script>`` and ``<img>`` resources. Typically, you might use the ``postload`` instrumentation to collect telemetry when loading images on ``scroll`` events."
msgstr "``postload`` インスツルメンテーションは、ページ``load`` イベント後にロードされるリソースに関するデータを収集する。デフォルトでは、``<script>`` と``<img>`` リソースのインスツルメンテーションが有効になっている。通常、``scroll`` イベントで画像をロードする際に、``postload`` インスツルメンテーションを使用してテレメトリーを収集することがあります。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:210
msgid "Spans collected by the ``postload`` instrumentation match the data model described in :ref:`browser-rum-resourcefetch`."
msgstr "``postload`` で収集されたスパンは、:ref:`browser-rum-resourcefetch` で説明されているデータモデルと一致する。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:215 ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:12
msgid "User interactions"
msgstr "ユーザー・インタラクション"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:217
msgid "The ``interactions`` instrumentation collects telemetry data on interactions on elements that have a registered event listener of the type ``Element.addEventListener``. Events collected by the listener generate a span with a name matching the DOM event name."
msgstr "``interactions`` インスツルメンテーションは、``Element.addEventListener`` タイプのイベントリスナーが登録されているエレメント上のインタラクションのテレメトリデータを収集します。リスナーによって収集されたイベントは、DOMイベント名に一致する名前を持つスパンを生成する。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:219
msgid "The Browser RUM agent collects the following data using the ``interactions`` instrumentation:"
msgstr "Browser RUMエージェントは、``interactions`` インストルメンテーションを使用して、以下のデータを収集します："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:228
msgid "``event_type``"
msgstr "``event_type``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:230
msgid "Name of the event. For example, ``click``."
msgstr "イベント名例えば、``click`` 。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:231
msgid "``target_element``"
msgstr "``target_element``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:233
msgid "Name of the target element. For example, ``BUTTON``."
msgstr "対象要素の名前。例えば、``BUTTON`` 。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:234
msgid "``target_xpath``"
msgstr "``target_xpath``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:236
msgid "XPath of the target element."
msgstr "ターゲット要素のXPath。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:241
msgid "Visibility"
msgstr "視認性"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:243
msgid "The ``visibility`` instrumentation collects ``visibilitychange`` events. Visibility changes that happen when a page refreshes aren't recorded, as the browser tab might never go visible."
msgstr "``visibility`` 、``visibilitychange`` イベントを収集する。ブラウザのタブが表示されなくなる可能性があるため、ページが更新されたときに起こる可視性の変化は記録されない。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:245
msgid "The Browser RUM agent collects the following data using the ``visibility`` instrumentation:"
msgstr "Browser RUMエージェントは、``visibility`` インストルメンテーションを使用して、以下のデータを収集します："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:255
msgid "``hidden``"
msgstr "``hidden``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:256 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:277 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:77 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:86 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:168
msgid "Boolean"
msgstr "ブーリアン"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:257
msgid "Whether the page is hidden or not."
msgstr "ページが非表示かどうか。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:262
msgid "Connectivity"
msgstr "コネクティビティ"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:264
msgid "The ``connectivity`` instrumentation collects ``offline`` and ``online`` events. The browser records offline events when the browser goes offline and is cached in memory until the browser goes online. Offline and online events are sent at the same time."
msgstr "``connectivity`` 、``offline`` と``online`` のイベントを収集する。ブラウザはオフラインになるとオフラインイベントを記録し、ブラウザがオンラインになるまでメモリにキャッシュされる。オフラインとオンラインのイベントは同時に送信される。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:266
msgid "The Browser RUM agent collects the following data using the ``connectivity`` instrumentation:"
msgstr "Browser RUMエージェントは、``connectivity`` インストルメンテーションを使用して、以下のデータを収集します："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:276
msgid "``online``"
msgstr "``online``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:278
msgid "Whether the browser went online or offline."
msgstr "ブラウザがオンラインになったかオフラインになったか。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:281
msgid "History API"
msgstr "歴史API"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:283
msgid "The Browser RUM agent also instruments the History API to provide visibility into the session history of the browser. The History API tracks URL changes that don't reload the page and is used in single-page applications."
msgstr "ブラウザRUMエージェントはまた、ブラウザのセッション履歴を可視化するために、History APIを利用している。History APIは、ページを再読み込みしないURLの変更を追跡し、単一ページのアプリケーションで使用されます。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:285
msgid "The instrumentation also tracks URL changes that occur by changing the ``location.hash`` by listening to ``hashchange`` events. Route changes have no duration. The ``routeChange`` span contains the following tags:"
msgstr "インスツルメンテーションはまた、``hashchange`` イベントをリッスンすることによって、``location.hash`` を変更することによって発生する URL の変更も追跡する。ルート変更に期間はない。``routeChange`` spanには以下のタグが含まれている："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:296
msgid "The value is always ``\"user-interaction\"``."
msgstr "値は常に``\"user-interaction\"`` 。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:297
msgid "``prev.href``"
msgstr "``prev.href``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:299
msgid "Page URL prior to the route change."
msgstr "ルート変更前のページURL"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:300 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:144
msgid "``location.href``"
msgstr "``location.href``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:302
msgid "Page URL after the route change."
msgstr "ルート変更後のページURL"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:307
msgid "Long tasks"
msgstr "長いタスク"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:309
msgid "The ``longtask`` instrumentation collects information about long tasks. The Browser RUM agent creates a span for every long task detected."
msgstr "``longtask`` 、長いタスクに関する情報を収集する。ブラウザRUMエージェントは、長いタスクが検出されるたびにスパンを作成する。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:311
msgid "Span attributes include the containers where that task occurred. For tasks that don't occur within the top level page, the ``containerId``, ``containerName``, and ``containerSrc`` fields provide information about the source of the task."
msgstr "スパン属性には、そのタスクが発生したコンテナが含まれる。トップレベルページ内で発生しないタスクについては、``containerId`` 、``containerName`` 、``containerSrc`` フィールドがタスクのソースに関する情報を提供する。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:313
msgid "The Browser RUM agent collects the following data using the ``longtask`` instrumentation:"
msgstr "Browser RUMエージェントは、``longtask`` インストルメンテーションを使用して、以下のデータを収集します："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:322
msgid "``longtask.name``"
msgstr "``longtask.name``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:324
msgid "``longtask.entry_type``"
msgstr "``longtask.entry_type``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:326
msgid "``longtask.duration``"
msgstr "``longtask.duration``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:328
msgid "``attribution.name``"
msgstr "``attribution.name``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:330
msgid "``attribution.entry_type``"
msgstr "``attribution.entry_type``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:332
msgid "``attribution.start_time``"
msgstr "``attribution.start_time``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:334
msgid "``attribution.duration``"
msgstr "``attribution.duration``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:336
msgid "``attribution.container_type``"
msgstr "``attribution.container_type``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:338
msgid "``attribution.container_src``"
msgstr "``attribution.container_src``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:340
msgid "``attribution.container_id``"
msgstr "``attribution.container_id``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:342
msgid "``attribution.container_name``"
msgstr "``attribution.container_name``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:348
msgid "Websockets"
msgstr "ウェブソケット"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:350
msgid "The ``websockets`` instrumentation collects websocket lifecycle events and uses it to populate spans. The instrumentation collects spans from websocket ``connect``, ``send``, and ``onmessage`` events."
msgstr "``websockets`` インスツルメンテーションは、ウェブソケットのライフサイクル・イベントを収集し、それを使ってスパンを生成する。インスツルメンテーションは、ウェブソケット``connect`` 、``send`` 、``onmessage`` イベントからスパンを収集する。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:353
msgid "connect"
msgstr "コネクト"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:355
msgid "The ``websockets`` instrumentation collects the following data from ``connect`` events:"
msgstr "``websockets`` 計測装置は、``connect`` イベントから以下のデータを収集する："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:367 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:395
msgid "The Websocket URL."
msgstr "ウェブソケットのURL。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:370
msgid "Time lapsed between a websocket constructor call and the ``ws.open`` event firing."
msgstr "ウェブソケットのコンストラクタ呼び出しから``ws.open`` イベントが発生するまでの経過時間。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:371
msgid "``protocols``"
msgstr "``protocols``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:372
msgid "String or array"
msgstr "文字列または配列"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:373
msgid "Protocols passed to the websocket constructor."
msgstr "ウェブソケットのコンストラクタに渡されるプロトコル。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:374 ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:377
msgid "``error``"
msgstr "``error``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:376
msgid "The value can be ``true`` or ``false`` depending on whether an error occurred. Errors are collected during websocket construction or when an ``ws.error`` event fires."
msgstr "エラー発生の有無により、値は``true`` または``false`` 。エラーはウェブソケット構築中または``ws.error`` イベントが発生したときに収集される。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:379
msgid "Websocket error event message."
msgstr "Websocket のエラー・イベント・メッセージ。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:382
msgid "send and onmessage"
msgstr "sendとonmessage"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:384
msgid "The ``websockets`` instrumentation collects the following data from ``send`` and ``onmessage`` events:"
msgstr "``websockets`` 計測装置は、``send`` と``onmessage`` イベントから以下のデータを収集する："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:396
msgid "``response_content_length``"
msgstr "``response_content_length``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:398
msgid "Payload size in bytes."
msgstr "バイト単位のペイロードサイズ。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:403
msgid "Socket.io messages"
msgstr "Socket.ioメッセージ"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:405
msgid "The Socket.io instrumentation generates spans from messages sent using the socket.io client library. Spans conform to the OpenTelemetry specifications on messaging systems. This instrumentation is deactivated by default."
msgstr "Socket.ioインスツルメンテーションは、socket.ioクライアント・ライブラリを使用して送信されたメッセージからスパンを生成する。スパンはメッセージングシステムに関するOpenTelemetryの仕様に準拠している。このインストゥルメンテーションはデフォルトでは無効になっている。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:407
msgid "When using the standalone socket.io build, activate the instrumentation by passing ``true`` to the configuration setting, as in the following snippet:"
msgstr "スタンドアロンのsocket.ioビルドを使用する場合は、次のスニペットのように、``true`` をコンフィギュレーション設定に渡してインスツルメンテーションを有効にする："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:422
msgid "When using both the ``@splunk/otel-web`` and the ``socket.io-client`` npm packages in the same bundle, pass the socket.io client to the instrumentation using the ``target`` setting:"
msgstr "``@splunk/otel-web`` と``socket.io-client`` の両方の npm パッケージを同じバンドルで使用する場合は、``target`` の設定を使用して、socket.io クライアントをインストルメンテーションに渡します："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:437
msgid "When using the CDN distribution of Splunk RUM, activate the socket.io instrumentation and expose the ``io`` function as  ``window.io``, as in the following example:"
msgstr "Splunk RUM の CDN ディストリビューションを使用する場合は、以下の例のように socket.io instrumentation を有効にして``io`` 関数を``window.io`` として公開します："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:452
msgid "The content of the ``app.min.js`` file in the previous example is the following:"
msgstr "先ほどの例の``app.min.js`` ファイルの内容は以下の通り："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:461
msgid "You can use a different global variable name by specifying it as the target:"
msgstr "ターゲットにグローバル変数名を指定すれば、別のグローバル変数名を使うことができる："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:476
msgid "Messages sent between socket.io clients and servers produce ``EVENT_NAME send`` spans when the messages go from client to server, and ``EVENT_NAME receive`` spans when the messages go from server to client. Both types of spans contain the following attributes:"
msgstr "socket.ioのクライアントとサーバー間で送信されるメッセージは、クライアントからサーバーへ送信される場合は``EVENT_NAME send`` 、サーバーからクライアントへ送信される場合は``EVENT_NAME receive`` 。どちらのタイプのスパンも、以下の属性を含んでいる："

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:485
msgid "``messaging.system``"
msgstr "``messaging.system``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:487
msgid "The value is always ``socket.io``."
msgstr "値は常に``socket.io`` 。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:488
msgid "``messaging.destination`` ``messaging.socket.io.namespace``"
msgstr "``messaging.destination`` ``messaging.socket.io.namespace``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:491
msgid "The value of the socket.io namespace."
msgstr "socket.io 名前空間の値。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:492
msgid "``messaging.destination_kind``"
msgstr "``messaging.destination_kind``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:494
msgid "The value is always ``topic``."
msgstr "値は常に``topic`` 。"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:495
msgid "``messaging.socket.io.event_name``"
msgstr "``messaging.socket.io.event_name``"

#: ../../gdi/get-data-in/rum/browser/browser-rum-instrumentations.rst:497
msgid "Name of the event, the first argument of the ``emit`` or ``on`` function."
msgstr "``emit`` または``on`` 関数の第一引数。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:-1
msgid "Configure the Splunk Observability Cloud real user monitoring / RUM instrumentation for your browser-based web applications."
msgstr "ブラウザベースの Web アプリケーション用に Splunk Observability Cloud リアルユーザーモニタリング / RUM インストルメンテーションを設定します。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:5
msgid "Configure the Splunk Browser RUM instrumentation"
msgstr "Splunk Browser RUM インストルメンテーションを設定する"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:10
msgid "You can configure the Browser RUM agent from the Splunk Distribution of OpenTelemetry JS for Web to add custom attributes, adapt the instrumentation to your environment and application, customize sampling, and more."
msgstr "OpenTelemetry JS for Web の Splunk ディストリビューションから Browser RUM エージェントを設定することで、カスタム属性の追加、環境やアプリケーションに合わせた計測、サンプリングのカスタマイズなどを行うことができます。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:13
msgid "Configuration method"
msgstr "設定方法"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:15
msgid "To configure the Browser RUM agent, edit the object passed to the ``SplunkRum.init()`` function:"
msgstr "ブラウザRUMエージェントを設定するには、``SplunkRum.init()`` 関数に渡されるオブジェクトを編集します："

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:37
msgid "Use the following settings to configure the Browser RUM agent:"
msgstr "以下の設定を使用して、ブラウザRUMエージェントを構成します："

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:43 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:125
msgid "Property"
msgstr "プロパティ"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:48
msgid "The name of your organization's realm, for example, ``us0``. To find the realm name of your account, open the navigation menu in Splunk Observability Cloud, select :menuselection:`Settings`, and then select your username. The realm name appears in the :guilabel:`Organizations` section."
msgstr "あなたの組織のレルムの名前。例えば、``us0`` 。アカウントのレルム名を確認するには、Splunk Observability Cloud のナビゲーションメニューを開き、:menuselection:`Settings` を選択し、ユーザー名を選択します。レルム名は:guilabel:`Organizations` セクションに表示される。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:49
msgid "``rumAccessToken``"
msgstr "``rumAccessToken``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:50
msgid "String (required)"
msgstr "文字列（必須）"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:51 ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:67 ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:45
msgid "RUM token that authorizes the agent to send telemetry data to Splunk Observability Cloud. To generate a RUM access token, see :ref:`rum-access-token`."
msgstr "遠隔測定データを Splunk Observability Cloud に送信することをエージェントに許可する RUM トークン。RUM アクセストークンを生成するには、:ref:`rum-access-token` を参照してください。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:52
msgid "``beaconEndpoint``"
msgstr "``beaconEndpoint``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:53
msgid "String (required if ``realm`` isn't set)"
msgstr "文字列（``realm`` が設定されていない場合は必須）"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:54
msgid "Ingest URL to which the agent sends collected telemetry. When ``realm`` is set, the URL is in the form ``https://rum-ingest.<realm>.signalfx.com/v1/rum``. When you set an endpoint manually, this overrides the value of ``realm``."
msgstr "エージェントが収集したテレメトリを送信するインジェスト URL。``realm`` が設定されている場合、URLは``https://rum-ingest.<realm>.signalfx.com/v1/rum`` という形式になる。エンドポイントを手動で設定する場合、これは``realm`` の値を上書きします。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:55
msgid "``applicationName``"
msgstr "``applicationName``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:57
msgid "Name of the application. The default value is ``unknown-browser-app``."
msgstr "アプリケーションの名前デフォルト値は``unknown-browser-app`` 。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:58
msgid "``version``"
msgstr "``version``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:60
msgid "Version of the application for all spans. For example, \"1.0.1\" or \"20220820\"."
msgstr "全スパンのアプリケーションのバージョン。例えば、\"1.0.1 \"や \"20220820\"。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:61
msgid "``deploymentEnvironment``"
msgstr "``deploymentEnvironment``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:63 ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:73 ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:49
msgid "Environment for all the spans produced by the application. For example, ``dev``, ``test``, or ``prod``."
msgstr "アプリケーションによって生成されるすべてのスパンの環境。例えば、``dev`` 、``test`` 、``prod`` 。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:64
msgid "``globalAttributes``"
msgstr "``globalAttributes``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:66
msgid "Sets additional attributes added to all spans. For example, ``version`` or ``user_id``."
msgstr "すべてのスパンに追加される属性を設定します。例えば、``version`` や``user_id`` 。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:67
msgid "``instrumentations``"
msgstr "``instrumentations``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:69
msgid "Activates or deactivates specific Browser RUM instrumentations. See :ref:`browser-rum-instrumentation-settings`."
msgstr "特定のブラウザRUMインストゥルメンテーションをアクティブまたは非アクティブにします。:ref:`browser-rum-instrumentation-settings` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:70
msgid "``ignoreUrls``"
msgstr "``ignoreUrls``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:71
msgid "``(string\\|regex)[]``"
msgstr "``(string\\|regex)[]``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:72
msgid "List of URLs that the agent must ignore. Matching URLs don't produce spans. You can provide two different types of rules: strings or regular expressions."
msgstr "エージェントが無視しなければならないURLのリスト。URLの一致はスパンを生み出さない。文字列と正規表現の2種類のルールを指定できる。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:73
msgid "``cookieDomain``"
msgstr "``cookieDomain``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:75
msgid "Domain used for session tracking. For example, if you have sites on both ``foo.example.com`` and ``bar.example.com``, setting ``cookieDomain`` to ``example.com`` allows both sites to use the same session identifier. See :ref:`browser-rum-cookies` for more information."
msgstr "セッショントラッキングに使用されるドメイン。たとえば、``foo.example.com`` と``bar.example.com`` の両方にサイトがある場合、``cookieDomain`` を``example.com`` に設定すると、両方のサイトで同じセッション識別子を使用できるようになります。詳しくは:ref:`browser-rum-cookies` 。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:76
msgid "``context.async``"
msgstr "``context.async``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:78
msgid "Activates the asynchronous context manager. The default value is ``true``. See :ref:`browser-rum-async-traces`."
msgstr "非同期コンテキスト・マネージャーをアクティブにする。デフォルト値は``true`` 。:ref:`browser-rum-async-traces` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:79
msgid "``exporter.onAttributesSerializing``"
msgstr "``exporter.onAttributesSerializing``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:80
msgid "``(a: SpanAttributes, s?: Span) => SpanAttributes``"
msgstr "``(a: SpanAttributes, s?: Span) => SpanAttributes``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:81
msgid "Provides a callback for modifying span attributes before they're exported. The default value is ``(attrs) => attrs``. A sample scenario is :ref:`rum-browser-redact-pii`."
msgstr "エクスポートする前にspan属性を修正するためのコールバックを提供します。デフォルト値は``(attrs) => attrs`` 。シナリオのサンプルは:ref:`rum-browser-redact-pii` 。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:82
msgid "``tracer``"
msgstr "``tracer``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:84
msgid "Tracing configuration passed to ``WebTracerProvider``. You can use it to configure sampling. See :ref:`browser-rum-sampling-configuration`."
msgstr "``WebTracerProvider`` 。サンプリングの設定に使用できる。:ref:`browser-rum-sampling-configuration` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:87
msgid "Activates debug logging in the developer console. The default value is ``false``."
msgstr "開発者コンソールのデバッグログを有効にする。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:94
msgid "To activate or deactivate specific Browser RUM instrumentations, compose and pass an object to the ``instrumentations`` property. The following example of agent initialization changes the settings of several instrumentations:"
msgstr "特定のBrowser RUMインスツルメンテーションをアクティブまたは非アクティブにするには、オブジェクトを構成し、``instrumentations`` プロパティに渡します。以下のエージェント初期化の例は、いくつかのインストルメンテーションの設定を変更します："

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:119
msgid "The following table contains all the properties supported by the ``instrumentations`` option:"
msgstr "``instrumentations`` オプシ ョ ンで対応 し てい る すべてのプ ロパテ ィ を以下の表に示 し ます："

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:126 ../../gdi/monitors-cloud/heroku.md ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:56
msgid "Default"
msgstr "デフォルト"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:128
msgid "``connectivity``"
msgstr "``connectivity``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:129 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:150 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:159 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:162 ../../gdi/opentelemetry/deployments/deployments-chef.rst:146 ../../gdi/opentelemetry/deployments/deployments-chef.rst:167 ../../gdi/opentelemetry/deployments/deployments-chef.rst:170 ../../gdi/opentelemetry/deployments/deployments-chef.rst:173 ../../gdi/opentelemetry/deployments/deployments-chef.rst:176
#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:251 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:129 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:150 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:153 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:156 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:159 ../../gdi/opentelemetry/deployments/deployments-salt.rst:138 ../../gdi/opentelemetry/deployments/deployments-salt.rst:159 ../../gdi/opentelemetry/deployments/deployments-salt.rst:162 ../../gdi/opentelemetry/deployments/deployments-salt.rst:165
#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:168
msgid "``false``"
msgstr "``false``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:130
msgid "Activates the collection of connectivity events. See :ref:`browser-rum-data-connectivity-events`."
msgstr "接続イベントのコレクションをアクティブにします。:ref:`browser-rum-data-connectivity-events` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:131
msgid "``document``"
msgstr "``document``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:132 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:135 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:138 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:141 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:147 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:153 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:165 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:168
#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:117 ../../gdi/opentelemetry/deployments/deployments-chef.rst:164 ../../gdi/opentelemetry/deployments/deployments-chef.rst:242 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:100 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:109 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:147 ../../gdi/opentelemetry/deployments/deployments-salt.rst:106 ../../gdi/opentelemetry/deployments/deployments-salt.rst:156 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:85
msgid "``true``"
msgstr "``true``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:133
msgid "Activates the collection of spans related to document load events. See :ref:`browser-rum-data-doc-load`."
msgstr "ドキュメントのロードイベントに関連するスパンのコレクションをアクティブにします。:ref:`browser-rum-data-doc-load` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:134
msgid "``errors``"
msgstr "``errors``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:136
msgid "Activates the collection of JavaScript errors. See :ref:`browser-rum-data-js-errors`."
msgstr "JavaScriptエラーのコレクションをアクティブにします。:ref:`browser-rum-data-js-errors` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:137
msgid "``fetch``"
msgstr "``fetch``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:139
msgid "Activates the collection of Fetch API requests. See :ref:`browser-rum-data-fetch-requests`."
msgstr "Fetch APIリクエストのコレクションをアクティブにします。:ref:`browser-rum-data-fetch-requests` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:140
msgid "``interactions``"
msgstr "``interactions``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:142
msgid "Activates the collection of user interactions, such as clicks or key presses. See :ref:`browser-rum-data-user-interactions`."
msgstr "クリックやキーの押下などのユーザーインタラクションのコレクションをアクティブにします。:ref:`browser-rum-data-user-interactions` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:143
msgid "``interactions.eventNames``"
msgstr "``interactions.eventNames``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:145
msgid "Array of DOM events that the instrumentation captures as user interactions. You can access the default values by accessing the ``SplunkRum.DEFAULT_AUTO_INSTRUMENTED_EVENT_NAMES`` property."
msgstr "インスツルメンテーションがユーザーインタラクションとして捕捉する DOM イベントの配列。デフォルト値にアクセスするには、``SplunkRum.DEFAULT_AUTO_INSTRUMENTED_EVENT_NAMES`` プロパティにアクセスします。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:146
msgid "``longtask``"
msgstr "``longtask``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:148
msgid "Activates the collection of long tasks. See :ref:`browser-rum-data-long-tasks`."
msgstr "長いタスクのコレクションをアクティブにする。:ref:`browser-rum-data-long-tasks` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:149
msgid "``socketio``"
msgstr "``socketio``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:151
msgid "Activates the collection of socket.io messages. See :ref:`browser-rum-data-socketio`."
msgstr "socket.ioメッセージのコレクションをアクティブにする。:ref:`browser-rum-data-socketio` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:152
msgid "``postload``"
msgstr "``postload``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:154
msgid "Activates the collection of resources loaded after a load event. See :ref:`browser-rum-data-resources-after-load`."
msgstr "ロードイベントの後にロードされたリソースのコレクションをアクティブにします。:ref:`browser-rum-data-resources-after-load` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:155
msgid "``socketio.target``"
msgstr "``socketio.target``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:156
msgid "``'io'``"
msgstr "``'io'``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:157
msgid "The global variable name to which the socket.io client is loaded, or the ``io`` object. See :ref:`browser-rum-data-socketio`."
msgstr "socket.io クライアントをロードするグローバル変数名、または``io`` オブジェクト。:ref:`browser-rum-data-socketio` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:158
msgid "``visibility``"
msgstr "``visibility``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:160
msgid "Activates the collection of visibility events. See :ref:`browser-rum-data-visibility-events`."
msgstr "可視性イベントのコレクションをアクティブにします。:ref:`browser-rum-data-visibility-events` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:161
msgid "``websockets``"
msgstr "``websockets``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:163
msgid "Activates the collection of websocket lifecycle events. See :ref:`browser-rum-data-websockets`."
msgstr "ウェブソケットのライフサイクルイベントのコレクションをアクティブにします。:ref:`browser-rum-data-websockets` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:164
msgid "``webvitals``"
msgstr "``webvitals``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:166
msgid "Activates the collection of Google Web Vitals metrics. See :ref:`browser-rum-data-webvitals`."
msgstr "Google Web Vitals メトリクスの収集を有効にします。:ref:`browser-rum-data-webvitals` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:167
msgid "``xhr``"
msgstr "``xhr``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:169
msgid "Activates the collection of XMLHttpRequest events. See :ref:`browser-rum-data-fetch-requests`."
msgstr "XMLHttpRequest イベントのコレクションをアクティブにします。:ref:`browser-rum-data-fetch-requests` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:174
msgid "Sampling settings"
msgstr "サンプリング設定"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:176
msgid "By default, the Browser RUM agent collects all of the data from all of the users. You can adjust sampling by passing a custom sampler to the ``tracer`` property."
msgstr "デフォルトでは、Browser RUMエージェントは、すべてのユーザーからすべてのデータを収集します。``tracer`` プロパティにカスタムサンプラーを渡すことで、サンプリングを調整できます。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:178
msgid "The following example shows how to restrict sampling to logged in users:"
msgstr "次の例は、サンプリングをログインしているユーザーに制限する方法を示しています："

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:215
msgid "The Splunk Distribution of OpenTelemetry JS for Web includes the following samplers:"
msgstr "OpenTelemetry JS for Web の Splunk ディストリビューションには、以下のサンプラーが含まれています："

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:221
msgid "Sampler"
msgstr "サンプラー"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:223 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:260
msgid "``AlwaysOnSampler``"
msgstr "``AlwaysOnSampler``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:224
msgid "Sampling activated for all requests. This is the default sampler."
msgstr "すべてのリクエストにサンプリングが有効。これはデフォルトのサンプラーである。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:225 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:264
msgid "``AlwaysOffSampler``"
msgstr "``AlwaysOffSampler``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:226
msgid "Sampling deactivated for all requests."
msgstr "全リクエストでサンプリングを停止。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:227
msgid "``ParentBasedSampler``"
msgstr "``ParentBasedSampler``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:228
msgid "Inherits the sampler configuration of the parent trace."
msgstr "親トレースのサンプラー設定を継承します。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:229
msgid "``SessionBasedSampler``"
msgstr "``SessionBasedSampler``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:230
msgid "Session-based sampling. See :ref:`browser-rum-session-based-sampler`."
msgstr "セッションベースのサンプリング。:ref:`browser-rum-session-based-sampler` を参照。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:235
msgid "Session-based sampler"
msgstr "セッションベースのサンプラー"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:237
msgid "The Splunk Distribution of OpenTelemetry JS for Web includes a custom sampler that supports sessions. Session ratios are preferable to trace ratios, as they keep data from each session intact."
msgstr "OpenTelemetry JS for Web の Splunk ディストリビューションには、セッションをサポートするカスタムサンプラーが含まれています。セッション比率は、各セッションのデータをそのまま保持するため、トレース比率よりも望ましい。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:239
msgid "You can access the session-based sampler in the following ways:"
msgstr "セッションベースのサンプラーには、以下の方法でアクセスできる："

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:241
msgid "Use the ``SplunkRum.SessionBasedSampler`` export when using the Splunk CDN build."
msgstr "Splunk CDN ビルドを使用する場合は、``SplunkRum.SessionBasedSampler`` エクスポートを使用してください。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:242
msgid "Use the ``SessionBasedSampler`` export when using the npm package."
msgstr "npmパッケージを使用する場合は、``SessionBasedSampler`` exportを使用する。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:244
msgid "The session-based sampler accepts the following settings:"
msgstr "セッションベースのサンプラーは、以下の設定を受け付ける："

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:252 ../../gdi/monitors-hosts/disk.md:7 ../../gdi/opentelemetry/deployments/deployments-chef.rst:69 ../../gdi/opentelemetry/deployments/deployments-chef.rst:143 ../../gdi/opentelemetry/deployments/deployments-chef.rst:188 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:52 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:126 ../../gdi/opentelemetry/deployments/deployments-salt.rst:61 ../../gdi/opentelemetry/deployments/deployments-salt.rst:135 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:40
msgid "Default value"
msgstr "デフォルト値"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:254
msgid "``ratio``"
msgstr "``ratio``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:255
msgid "``number``"
msgstr "``number``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:257
msgid "Percentage of sessions reported, ranging from ``0.0`` to ``1.0``."
msgstr "報告されたセッションの割合、``0.0`` から``1.0`` まで。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:258
msgid "``sampled``"
msgstr "``sampled``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:259 ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:263
msgid "``Sampler``"
msgstr "``Sampler``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:261
msgid "Sampler to be used when the session is sampled."
msgstr "セッションのサンプリング時に使用するサンプラー。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:262
msgid "``notSampled``"
msgstr "``notSampled``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:265
msgid "Sampler to be used when the session is not to be sampled."
msgstr "セッションをサンプリングしない場合に使用するサンプラー。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:267
msgid "The following example shows how to collect RUM data from half of the sessions:"
msgstr "次の例は、セッションの半分からRUMデータを収集する方法を示している："

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:308
msgid "Asynchronous trace settings"
msgstr "非同期トレース設定"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:310
msgid "Traces that happen asynchronously, such as user interactions that result in a promise chain, might get disconnected from parent activity. To avoid this problem, the Browser RUM agent includes a custom context manager that connects parent traces with traces that happen when using the following properties or patterns:"
msgstr "非同期に起こるトレース、例えばプロミス・チェーンになるユーザーとのインタラクションなどは、親アクティビティから切り離されるかもしれません。この問題を回避するために、Browser RUMエージェントは、以下のプロパティまたはパターンを使用するときに発生するトレースと親トレースを接続するカスタムコンテキストマネージャを含んでいます："

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:312
msgid "``setTimeout`` with less than 34ms timeout"
msgstr "``setTimeout`` 34ms以下のタイムアウト"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:313
msgid "``setImmediate``"
msgstr "``setImmediate``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:314
msgid "``requestAnimationFrame``"
msgstr "``requestAnimationFrame``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:315
msgid "``Promise.then`` / ``catch`` / ``finally``"
msgstr "``Promise.then`` / ``catch`` / ``finally``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:316
msgid "``MutationObserver`` on ``textNode``"
msgstr "``MutationObserver`` オン ``textNode``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:317
msgid "``MessagePort``"
msgstr "``MessagePort``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:318
msgid "Hash-based routers"
msgstr "ハッシュ・ベース・ルーター"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:320
msgid "Asynchronous trace linking is activated by default. In case of compatibility issues you can disable it by setting the ``context.async`` property to ``false``."
msgstr "非同期トレースリンクはデフォルトで有効になっている。互換性の問題がある場合は、``context.async`` プロパティを``false`` に設定することで無効にできます。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:322
msgid "The context manager allows Splunk RUM to link requests executed when a component is first rendered to the user interaction that caused the application to add the component to the page. ``XMLHttpRequest`` events and Fetch API events through promise methods are patched to preserve the parent context, so subsequent requests link to their parents."
msgstr "コンテキストマネージャにより、Splunk RUM はコンポーネントが最初にレンダリングされたときに実行されたリクエストを、アプリケーションがページにコンポーネントを追加する原因となったユーザインタラクションにリンクさせることができます。``XMLHttpRequest`` イベントと Fetch API イベントは、promise メソッドを介して親コンテキストを保持するようにパッチされます。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:327
msgid "The following limitations apply when using asynchronous tracing:"
msgstr "非同期トレースを使用する場合、以下の制限が適用されます："

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:329
msgid "``async/await`` functions aren't supported. Down-compile the code using Babel and targeting older browsers."
msgstr "``async/await`` 関数はサポートされていない。Babelを使用してコードをダウンコンパイルし、古いブラウザをターゲットにする。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:339
msgid "Only code loaded by promise-based implementations is linked to the parent interaction."
msgstr "プロミスベースの実装によってロードされたコードだけが、親インタラクションにリンクされる。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:344
msgid "Context propagation settings"
msgstr "コンテキスト伝播の設定"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:346
msgid "The Browser RUM agent doesn't register any context propagators, as it collects ``traceparent`` data from ``Server-Timing`` headers. If needed, you can register context propagators by using the OpenTelemetry API:"
msgstr "ブラウザRUMエージェントは、``Server-Timing`` ヘッダーから``traceparent`` データを収集するため、コンテキストプロパゲータを登録しない。必要であれば、OpenTelemetry API を使ってコンテキストプロパゲータを登録することができます："

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:355
msgid "When calling the OpenTelemetry API directly, make sure the API version you're using matches the one used by the Browser RUM agent."
msgstr "OpenTelemetry APIを直接呼び出す場合は、使用しているAPIのバージョンが、Browser RUMエージェントで使用されているものと一致していることを確認してください。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:362
msgid "The Browser RUM agent uses the Zipkin exporter to send data to Splunk Observability Cloud. The following example shows how to register a different trace exporter:"
msgstr "Browser RUM エージェントは、Zipkin エクスポーターを使用してデータを Splunk Observability Cloud に送信します。次の例は、別のトレース・エクスポーターを登録する方法を示しています："

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:376
msgid "Cookies used by the Browser RUM agent"
msgstr "ブラウザRUMエージェントが使用するクッキー"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:378
msgid "The Browser RUM agent uses the following cookies to link traces to sessions:"
msgstr "Browser RUMエージェントは、以下のクッキーを使用して、トレースをセッションにリンクします："

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:385
msgid "Purpose"
msgstr "目的"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:386
msgid "Comment"
msgstr "コメント"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:387
msgid "``__splunk_rum_sid``"
msgstr "``__splunk_rum_sid``"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:388
msgid "Stores the session ID."
msgstr "セッションIDを格納します。"

#: ../../gdi/get-data-in/rum/browser/configure-rum-browser-instrumentation.rst:389
msgid "By default, a session lasts for 15 minutes after the last user interaction. The maximum session duration is 4 hours."
msgstr "デフォルトでは、セッションは最後のユーザー・インタラクションから15分間続きます。最大セッション時間は4時間。"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:10
msgid "Install the Browser RUM agent"
msgstr "ブラウザRUMエージェントのインストール"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:10
msgid "Instrument single-page apps"
msgstr "シングルページ・アプリのインストゥルメント"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:10
msgid "Migrate manual instrumentation"
msgstr "手動計装の移行"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:10
msgid "Data collected by Browser RUM"
msgstr "ブラウザRUMが収集したデータ"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:10 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:220
msgid "Instrumentation-specific data"
msgstr "機器固有のデータ"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:10
msgid "Errors collected by Browser RUM"
msgstr "ブラウザRUMが収集したエラー"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:10
msgid "Browser RUM API reference"
msgstr "ブラウザ RUM API リファレンス"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:-1
msgid "Learn how to instrument your browser-based web applications for Splunk Observability Cloud real user monitoring / RUM and what data you can collect."
msgstr "ブラウザベースの Web アプリケーションを Splunk Observability Cloud リアルユーザーモニタリング / RUM で計測する方法と、収集できるデータについて説明します。"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:5
msgid "Instrument browser-based web applications for Splunk RUM"
msgstr "Splunk RUM でブラウザベースの Web アプリケーションを計測する"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:23
msgid "Instrument your browser-based web applications to get Real User Monitoring (RUM) data into Splunk Observability Cloud. With Splunk RUM, you can gain insight about the performance and health of your front-end apps, including single-page applications and mobile WebViews."
msgstr "ブラウザベースの Web アプリケーションをインスツルメンテーションして、リアルユーザーモニタリング (RUM) データを Splunk Observability Cloud に取り込みます。Splunk RUM を使用すると、シングルページアプリケーションやモバイル WebView などのフロントエンドアプリケーションのパフォーマンスと健全性を把握できます。"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:31
msgid "To generate all the basic installation commands for your environment and application, use the Browser Instrumentation guided setup. To access the Browser Instrumentation guided setup, follow these steps:"
msgstr "あなたの環境とアプリケーションのすべての基本的なインストールコマンドを生成するには、Browser Instrumentationガイド付きセットアップを使用します。Browser Instrumentationガイド付きセットアップにアクセスするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:34
msgid "Open the :new-page:`Browser Instrumentation guided setup <https://login.signalfx.com/#/gdi/scripted/browser/step-1?category=use-case-user-experience&gdiState=%7B\"integrationId\":\"browser\"%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`Browser Instrumentation guided setup<https://login.signalfx.com/#/gdi/scripted/browser/step-1?category=use-case-user-experience&gdiState=%7B\"integrationId\":\"browser\"%7D>` を開く。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:44 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:62
msgid "Select the :guilabel:`Browser Instrumentation` tile to open the Browser Instrumentation guided setup."
msgstr ":guilabel:`Browser Instrumentation` タイルを選択して、Browser Instrumentation ガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:46
msgid "For detailed installation instructions and requirements, see :ref:`browser-rum-install`."
msgstr "詳細なインストール手順と要件については、:ref:`browser-rum-install` を参照してください。"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:54
msgid "Learn about the Splunk Browser RUM data model. See :ref:`rum-browser-data`."
msgstr "Splunk Browser RUM データモデルについて学びましょう。:ref:`rum-browser-data` を参照。"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:55
msgid "Learn which errors the Browser RUM agent collects. See :ref:`browser-rum-data-js-errors`"
msgstr "Browser RUMエージェントが収集するエラーについて説明します。参照 :ref:`browser-rum-data-js-errors`"

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:56
msgid ":ref:`configure-browser-instrumentation`."
msgstr ":ref:`configure-browser-instrumentation`."

#: ../../gdi/get-data-in/rum/browser/get-browser-data-in.rst:57
msgid ":ref:`manual-rum-browser-instrumentation`."
msgstr ":ref:`manual-rum-browser-instrumentation`."

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:-1
msgid "The Browser RUM agent from the Splunk Distribution of OpenTelemetry JavaScript for Web provides a Real User Monitoring (RUM) instrumentation framework for your browser-based web applications. Use it to send RUM data from your front end to Splunk RUM."
msgstr "OpenTelemetry JavaScript for Web の Splunk ディストリビューションの Browser RUM エージェントは、ブラウザベースのウェブアプリケーションに Real User Monitoring (RUM) 計測フレームワークを提供します。これを使用して、フロントエンドから Splunk RUM に RUM データを送信します。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:5
msgid "Install the Browser RUM agent for Splunk RUM"
msgstr "Splunk RUM 用の Browser RUM エージェントをインストールする"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:10
msgid "You can instrument the front end of your web applications for Splunk RUM using the Browser RUM agent from the Splunk Distribution of OpenTelemetry JavaScript for Web."
msgstr "OpenTelemetry JavaScript for Web の Splunk ディストリビューションの Browser RUM エージェントを使用して、Web アプリケーションのフロントエンドを Splunk RUM 用に計測できます。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:12
msgid "To instrument your browser application and get data into Splunk RUM, follow the instructions on this page."
msgstr "ブラウザアプリケーションを計測してデータを Splunk RUM に取り込むには、このページの指示に従ってください。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:23
msgid "The Browser RUM agent supports the following browser versions:"
msgstr "ブラウザRUMエージェントは、以下のブラウザのバージョンをサポートしています："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:25
msgid "Chrome and Chrome Android 51 and higher"
msgstr "ChromeおよびChrome Android 51以上"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:26
msgid "Edge 12 and higher"
msgstr "エッジ12以上"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:27
msgid "Firefox 36 and higher"
msgstr "Firefox 36以上"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:28
msgid "Safari and Safari iOS 10.1 and higher"
msgstr "SafariおよびSafari iOS 10.1以上"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:29
msgid "Internet Explorer 11, which requires the ``splunk-otel-web-legacy.js`` version of the Browser RUM agent"
msgstr "ブラウザRUMエージェントの``splunk-otel-web-legacy.js`` バージョンが必要なInternet Explorer 11"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:31
msgid "All your pages, assets, and requests must be securely loaded over the HTTPS protocol."
msgstr "すべてのページ、アセット、リクエストは、HTTPSプロトコルで安全に読み込まれなければなりません。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:33
msgid "Splunk APM is not required to instrument Splunk RUM for Browser."
msgstr "Splunk RUM for Browser の計測に Splunk APM は必要ありません。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:43
msgid "Instrument your web application for Splunk RUM"
msgstr "Web アプリケーションを Splunk RUM にインスツルメンテーションする"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:45
msgid "Before you instrument and configure Splunk RUM for your web application, understand which data RUM collects about your application and determine the scope of what you want to monitor. See :ref:`rum-data-collected`."
msgstr "Web アプリケーションに Splunk RUM をインストールして設定する前に、RUM がアプリケーションについて収集するデータを理解し、監視する範囲を決定してください。:ref:`rum-data-collected` を参照。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:47
msgid "Select one of the following methods to instrument your web application:"
msgstr "ウェブ・アプリケーションの計測には、以下の方法のいずれかを選択してください："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:49
msgid ":ref:`rum-browser-install-cdn`"
msgstr ":ref:`rum-browser-install-cdn`"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:50
msgid ":ref:`rum-browser-install-self-hosted`"
msgstr ":ref:`rum-browser-install-self-hosted`"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:51
msgid ":ref:`rum-browser-install-npm`"
msgstr ":ref:`rum-browser-install-npm`"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:53
msgid "To generate all the installation commands for your environment and application, use the Browser Instrumentation guided setup."
msgstr "あなたの環境とアプリケーションのすべてのインストールコマンドを生成するには、Browser Instrumentationガイド付きセットアップを使用します。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:55
msgid "To access the Browser Instrumentation guided setup, follow these steps:"
msgstr "Browser Instrumentationガイド付きセットアップにアクセスするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:68
msgid "Splunk CDN"
msgstr "Splunk CDN"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:70
msgid "You can use the Splunk Content Delivery Network (CDN) to load the Browser RUM agent synchronously. The CDN link ensures that your application always uses the latest version."
msgstr "Splunk Content Delivery Network (CDN) を使用して、Browser RUM エージェントを同期的にロードできます。CDNリンクは、アプリケーションが常に最新バージョンを使用することを保証します。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:72
msgid "Follow these steps to instrument your application with the CDN:"
msgstr "以下の手順に従って、CDNを使用してアプリケーションをインスツルメンテーションしてください："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:74 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:126
msgid "Customize the following snippet:"
msgstr "次のスニペットをカスタマイズする："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:95
msgid "In the URL of the script, replace ``<version>`` with a version from the :new-page:`Releases page in GitHub <https://github.com/signalfx/splunk-otel-js-web/releases>`."
msgstr "スクリプトのURLで、``<version>`` を GitHub<https://github.com/signalfx/splunk-otel-js-web/releases>` の:new-page:`Releases ページにあるバージョンに置き換える。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:97 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:176 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:129 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:215
msgid "``realm`` is the Splunk Observability Cloud realm, for example, ``us0``. To find the realm name of your account, follow these steps:"
msgstr "``realm`` は Splunk Observability Cloud の領域で、たとえば``us0`` 。アカウントのレルム名を見つけるには、以下の手順に従ってください："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:107 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:144
msgid "Add the snippet to the head section of every page you want to monitor in your application."
msgstr "このスニペットを、アプリケーションで監視したいすべてのページのheadセクションに追加する。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:109 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:146 ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:188
msgid "Deploy the changes to your application. Make sure to test the instrumentation in a pre-production environment before deploying to production."
msgstr "変更をアプリケーションにデプロイする。本番環境にデプロイする前に、必ず事前に本番環境でインスツルメンテーションをテストしてください。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:111
msgid "Don't use the ``latest`` version in production without prior testing."
msgstr "事前のテストなしに``latest`` バージョンを本番で使用しないでください。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:116
msgid "Self-hosted script"
msgstr "セルフホストスクリプト"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:118
msgid "To use your own CDN or comply with your own deployment requirements, instrument your application using a self-hosted script. When you host the script, you need to update to newer versions of the agent manually."
msgstr "独自のCDNを使用したり、独自のデプロイメント要件に準拠するには、セルフホストスクリプトを使用してアプリケーションをインストルメンテーションします。スクリプトをホストする場合、手動でエージェントの新しいバージョンに更新する必要があります。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:120
msgid "Follow these steps to instrument your application using a self-hosted script:"
msgstr "以下の手順に従って、セルフホストスクリプトを使用してアプリケーションを測定します："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:122
msgid "Go to :new-page:`splunk-otel-js-web <https://github.com/signalfx/splunk-otel-js-web/releases>` in GitHub and download the ``splunk-otel-web.js`` file for the release you want to use."
msgstr "GitHub の:new-page:`splunk-otel-js-web<https://github.com/signalfx/splunk-otel-js-web/releases>` にアクセスして、使いたいリリースの``splunk-otel-web.js`` ファイルをダウンロードしてください。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:124
msgid "Deploy the files in a location accessible by the users of your application."
msgstr "アプリケーションのユーザーがアクセスできる場所にファイルを配置します。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:141 ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:51 ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:135 ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:159
msgid "``realm`` is the Splunk Observability Cloud realm, for example, ``us0``. See :new-page:`Realms in endpoints <https://dev.splunk.com/observability/docs/realms_in_endpoints>`."
msgstr "``realm`` は Splunk Observability Cloud の領域で、たとえば``us0`` 。:new-page:`エンドポイントのレルム<https://dev.splunk.com/observability/docs/realms_in_endpoints>` を参照のこと。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:151
msgid "npm package"
msgstr "npmパッケージ"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:153
msgid "To bundle the Browser RUM agent directly with your application, use the ``@splunk/otel-web`` npm package."
msgstr "Browser RUMエージェントをアプリケーションに直接バンドルするには、``@splunk/otel-web`` npmパッケージを使用します。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:155
msgid "Follow these steps to instrument and configure Splunk RUM using npm:"
msgstr "以下の手順に従って、npm を使用して Splunk RUM をインスツルメンテーションおよび設定します："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:157
msgid "Enter the following command to install the Browser RUM agent and add it to your package.json file:"
msgstr "以下のコマンドを入力して、Browser RUMエージェントをインストールし、package.jsonファイルに追加します："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:163
msgid "Create the ``splunk-instrumentation.js`` initialization file next to your bundle root file. The following snippet contains sample content for the initialization file:"
msgstr "バンドルルートファイルの隣に``splunk-instrumentation.js`` 初期化ファイルを作成します。次のスニペットは、初期化ファイルのサンプルです："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:186
msgid "Import or require the ``splunk-instrumentation.js`` file before other files to ensure that the instrumentation runs before the application code."
msgstr "インストルメンテーションがアプリケーション・コードの前に実行されるように、``splunk-instrumentation.js`` ファイルを他のファイルの前にインポートするか、必要にしてください。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:190
msgid "Make sure the Splunk RUM agent doesn't run in Node.js. To instrument Node.js services for Splunk APM, see :ref:`get-started-nodejs`."
msgstr "Splunk RUM エージェントが Node.js で実行されていないことを確認してください。Splunk APM で Node.js サービスを計測するには、:ref:`get-started-nodejs` を参照してください。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:195
msgid "Loading and initializing the Browser RUM agent"
msgstr "ブラウザRUMエージェントのロードと初期化"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:197
msgid "To avoid gaps in your data, load and initialize the Browser RUM agent synchronously and as early as possible. Delayed loading might result in missing data, as the instrumentation cannot collect data before it's initialized."
msgstr "データのギャップを避けるために、できるだけ早い段階で、同期的にブラウザRUMエージェントをロードし、初期化してください。ロードが遅れると、計測器が初期化される前にデータを収集できないため、データが欠落する可能性がある。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:199
msgid "Use one the following methods to load and initialize the Browser RUM agent, in order of effectiveness:"
msgstr "Browser RUMエージェントのロードと初期化には、効果的な順に以下の方法のいずれかを使用します："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:201
msgid "Synchronously load the Browser RUM agent as the first resource, or at least the first JS resource, in the head section. The Browser RUM agent JavaScript file must be loaded before any other JS file. This ensures that the instrumentation collects all user interactions, resources, and errors."
msgstr "ブラウザRUMエージェントを、最初のリソース、または少なくとも最初のJSリソースとして、ヘッドセクションに同期してロードする。ブラウザRUMエージェントのJavaScriptファイルは、他のどのJSファイルよりも先にロードされなければなりません。これにより、インスツルメンテーションは、すべてのユーザー・インタラクション、リソース、エラーを確実に収集する。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:202
msgid "Bundle the Browser RUM agent with other application scripts. Place the Browser RUM agent at the top of the bundle and make sure the bundle loads synchronously."
msgstr "Browser RUMエージェントを他のアプリケーションスクリプトとバンドルする。Browser RUMエージェントをバンドルの先頭に配置し、バンドルが同期してロードされることを確認します。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:204
msgid "If you defer the loading of the Browser RUM agent, make sure other scripts are also deferred to preserve the initialization order. Note that asynchronously loaded scripts are not supported."
msgstr "Browser RUMエージェントのロードを延期する場合は、初期化の順序を維持するために、他のスクリプトも延期するようにしてください。非同期にロードされたスクリプトはサポートされていないことに注意してください。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:209
msgid "Customize your RUM data intake"
msgstr "RUMデータ摂取のカスタマイズ"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:211
msgid "You can customize the data intake for the Browser RUM agent to reduce noise and redact information."
msgstr "Browser RUMエージェントのデータ取り込みをカスタマイズして、ノイズを減らし、情報を再編集することができます。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:214
msgid "Opt out of error.message collection"
msgstr "error.messageコレクションのオプトアウト"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:216
msgid "To avoid collecting ``error.message`` responses, deactivate the errors instrumentation as in the following example:"
msgstr "``error.message`` レスポンスの収集を避けるには、以下の例のように、エラー・インスツルメンテーションを無効にする："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:235
msgid "To remove or change attributes in your spans, see :ref:`rum-browser-redact-pii`."
msgstr "スパンの属性を削除または変更するには、:ref:`rum-browser-redact-pii` を参照してください。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:248
msgid "To create a header manually, see :ref:`browser-server-trace-context`."
msgstr "ヘッダーを手動で作成するには、:ref:`browser-server-trace-context` を参照。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:250
msgid "When linking sessions from Splunk RUM to Splunk APM while using the Safari browser, note that Safari supports linking XHR and fetch requests to Splunk APM, but doesn't support linking page loads or resource loads to Splunk APM."
msgstr "Safari ブラウザを使用して Splunk RUM から Splunk APM にセッションをリンクする場合、Safari は Splunk APM への XHR およびフェッチリクエストのリンクをサポートしていますが、Splunk APM へのページロードまたはリソースロードのリンクはサポートしていないことに注意してください。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:254
msgid "Instrument WebViews in Mobile applications"
msgstr "モバイル・アプリケーションでWebViewを操作する"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:256
msgid "You can instrument WebViews in your iOS and Android applications by sharing the `splunk.rumSessionId` between the mobile instrumentation and the web instrumentation. This lets you see data from both your native app and your web app in a single stream."
msgstr "`splunk.rumSessionId` をモバイルインスツルメンテーションとウェブインスツルメンテーション間で共有することで、iOS および Android アプリケーションの WebView をインスツルメンテーションできます。これにより、ネイティブアプリとウェブアプリの両方のデータを単一のストリームで見ることができます。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:258
msgid "To instrument WebViews, follow the instructions for the app's operating system:"
msgstr "WebViewを使用するには、アプリのオペレーティングシステムの指示に従ってください："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:260
msgid ":ref:`Android WebViews <android-webview-instrumentation>`"
msgstr ":ref:`Android WebViews <android-webview-instrumentation>`"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:261
msgid ":ref:`iOS WebViews <ios-webview-instrumentation>`"
msgstr ":ref:`iOS WebViews <ios-webview-instrumentation>`"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:264
msgid "Considerations for content security policy"
msgstr "コンテンツ・セキュリティ・ポリシーに関する考察"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:266
msgid "If your application uses Content Security Policy (CSP) to mitigate potential impact from cross-site scripting (XSS) and other attacks, make sure the policy allows Splunk RUM to run"
msgstr "クロスサイトスクリプティング (XSS) やその他の攻撃による潜在的な影響を軽減するためにコンテンツセキュリティポリシー (CSP) を使用しているアプリケーションでは、ポリシーによって Splunk RUM の実行が許可されていることを確認してください。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:268
msgid "When using the CDN version of the agent, allow the ``script-src cdn.signalfx.com`` URL."
msgstr "エージェントのCDNバージョンを使用する場合、``script-src cdn.signalfx.com`` URLを許可します。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:269
msgid "When self-hosting or using the npm package, configure your site accordingly."
msgstr "セルフホストまたはnpmパッケージを使用する場合は、それに応じてサイトを設定してください。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:270
msgid "Add the host from the ``beaconEndpoint`` property to the ``connect-src`` property. For example: ``connect-src app.us1.signalfx.com``."
msgstr "``beaconEndpoint`` プロパティからホストを``connect-src`` プロパティに追加する。例：``connect-src app.us1.signalfx.com``."

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:275
msgid "The Splunk Distribution of OpenTelemetry JavaScript for Web is open-source software. You can contribute to its improvement by creating pull requests in GitHub. To learn more, see the :new-page:`contributing guidelines <https://github.com/signalfx/splunk-otel-js-web/blob/main/CONTRIBUTING.md>` in GitHub."
msgstr "OpenTelemetry JavaScript for Web の Splunk ディストリビューションはオープンソースソフトウェアです。GitHubでプルリクエストを作成することで、改良に貢献することができる。詳しくは、GitHub の:new-page:`貢献ガイドライン<https://github.com/signalfx/splunk-otel-js-web/blob/main/CONTRIBUTING.md>` をご覧ください。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:278
msgid "Versioning policy"
msgstr "バージョニング・ポリシー"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:280
msgid "The versioning of the Browser RUM agent follows semantic versioning rules. To have more control over the version you load, see the following versioning policy:"
msgstr "Browser RUMエージェントのバージョニングは、セマンティックバージョニングルールに従います。ロードするバージョンをもっとコントロールするには、以下のバージョニングポリシーを参照してください："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:282
msgid "Use the ``LATEST`` version to use the latest version of the Browser RUM agent. Don't use in production environments without prior testing. This version might not be suitable for manual instrumentation, as breaking API changes might occur between major version changes."
msgstr "ブラウザRUMエージェントの最新バージョンを使用するには、``LATEST`` 。事前のテストなしに本番環境で使用しないでください。このバージョンは、メジャーバージョンアップの間にAPIが変更される可能性があるため、手動での計測には適さないかもしれない。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:283
msgid "Use ``MAJOR`` versions, for example ``v1``, if you want to receive new features automatically while keeping backward compatibility with the API. This is the default for all production deployments, as well as for npm installations."
msgstr "APIとの後方互換性を保ちながら新機能を自動的に受け取りたい場合は、``v1`` など、``MAJOR`` のバージョンを使用する。これは、npmのインストールと同様に、すべてのプロダクション・デプロイメントのデフォルトである。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:284
msgid "Use ``MINOR`` versions, for example ``v1.1``, to receive bug fixes while not receiving new features automatically."
msgstr "``v1.1`` のように、``MINOR`` のバージョンを使用すると、新機能を自動的に受け取らずに、バグ修正を受け取ることができます。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:285
msgid "Use ``PATCH`` versions, for example, ``v1.2.1``, to pin a specific version of the agent for your application."
msgstr "``v1.2.1`` のように、``PATCH`` のバージョンを使用して、アプリケーションの特定のバージョンのエージェントを固定します。"

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:287
msgid "The versions of the agent are included in URLs as a designated token:"
msgstr "エージェントのバージョンは、指定されたトークンとしてURLに含まれる："

#: ../../gdi/get-data-in/rum/browser/install-rum-browser.rst:289
msgid "``https://cdn.signalfx.com/o11y-gdi-rum/v<MAJOR.MINOR.PATCH>/splunk-otel-web.js``"
msgstr "``https://cdn.signalfx.com/o11y-gdi-rum/v<MAJOR.MINOR.PATCH>/splunk-otel-web.js``"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:-1
msgid "Learn how to instrument your single-page applications (SPAs) for Splunk Observability Cloud real user monitoring / RUM."
msgstr "シングルページアプリケーション (SPA) を Splunk Observability Cloud リアルユーザーモニタリング / RUM で計測する方法をご紹介します。"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:5
msgid "Instrument single-page applications for Splunk RUM"
msgstr "Splunk RUM 用のシングルページアプリケーションを作成する"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:10
msgid "With the Browser RUM agent from the Splunk Distribution of OpenTelemetry JavaScript for Web you can instrument your single-page applications (SPA) to capture client-side telemetry, including:"
msgstr "OpenTelemetry JavaScript for Web の Splunk ディストリビューションの Browser RUM エージェントを使用すると、シングルページアプリケーション (SPA) をインスツルメンテーションして、以下を含むクライアントサイドのテレメトリをキャプチャすることができます："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:13
msgid "Changes to URLs"
msgstr "URLの変更"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:14
msgid "Fetch and XHR requests"
msgstr "FetchリクエストとXHRリクエスト"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:15
msgid "Long tasks and delays"
msgstr "長いタスクと遅延"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:16 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:88
msgid "JavaScript errors"
msgstr "JavaScriptエラー"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:18
msgid "The Browser RUM agent supports SPAs built on React, AngularJS, Ember.js, and Vue.js."
msgstr "Browser RUMエージェントは、React、AngularJS、Ember.js、Vue.jsで構築されたSPAをサポートしています。"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:21
msgid "Considerations on server-side rendering"
msgstr "サーバーサイド・レンダリングに関する考察"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:23
msgid "When instrumenting single-page applications with server-side rendering (SSR) support, don't include RUM in the server side. Instead, apply Splunk APM instrumentation to the server that generates pre-rendered responses. See :ref:`get-started-application` for more information."
msgstr "サーバー・サイド・レンダリング（SSR）をサポートするシングル・ページ・アプリケーションをインストゥルメント化する場合、サーバー・サイドにRUMを含めないでください。代わりに、プリレンダリングされたレスポンスを生成するサーバーに Splunk APM インストルメンテーションを適用します。詳しくは:ref:`get-started-application` 。"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:26
msgid "Get single-page applications data in"
msgstr "単一ページのアプリケーションデータを"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:28
msgid "The following sections describe how to activate the instrumentation for several different SPA frameworks."
msgstr "以下のセクションでは、いくつかの異なるSPAフレームワークのインスツルメンテーションを有効にする方法を説明します。"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:31
msgid "Next.js"
msgstr "Next.js"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:33
msgid "To instrument a Next.js SPA using the Browser RUM agent, follow these steps:"
msgstr "Browser RUMエージェントを使用してNext.js SPAの計測を行うには、次の手順に従います："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:35 ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:113 ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:143 ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:181
msgid "Install the npm package version of the Browser RUM agent. See :ref:`rum-browser-install-npm`."
msgstr "ブラウザRUMエージェントのnpmパッケージバージョンをインストールします。:ref:`rum-browser-install-npm` を参照。"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:37
msgid "Create a ``src/splunk-rum.js`` file that imports the ``@splunk/otel-web`` package and calls the ``SplunkRum.init()`` function:"
msgstr "``@splunk/otel-web`` パッケージをインポートし、``SplunkRum.init()`` 関数を呼び出す``src/splunk-rum.js`` ファイルを作成する："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:54
msgid "Add the following code to the ``next.config.js`` file:"
msgstr "``next.config.js`` ファイルに以下のコードを追加する："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:109
msgid "Gatsby"
msgstr "ギャツビー"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:111
msgid "To instrument a Gatsby SPA using the Browser RUM agent, follow these steps:"
msgstr "ブラウザRUMエージェントを使用してギャツビーSPAをインスツルメンテーションするには、以下の手順に従います："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:115
msgid "Import the ``@splunk/otel-web`` package and call the ``SplunkRum.init()`` function in the ``gatsby-browser.js`` file. For example:"
msgstr "``@splunk/otel-web`` パッケージをインポートし、``gatsby-browser.js`` ファイル内の``SplunkRum.init()`` 関数を呼び出す。例えば、こうだ："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:139
msgid "Nuxt.js v2 and v3"
msgstr "Nuxt.js v2およびv3"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:141
msgid "To instrument a Nuxt.js v2 SPA using the Browser RUM agent, follow these steps:"
msgstr "Browser RUMエージェントを使用してNuxt.js v2 SPAのインストルメンテーションを行うには、次の手順に従います："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:145
msgid "Create a plugin file, for example ``plugins/splunk-rum.client.js``, that imports the ``@splunk/otel-web`` package and calls the ``SplunkRum.init()`` function:"
msgstr "``@splunk/otel-web`` パッケージをインポートし、``SplunkRum.init()`` 関数を呼び出すプラグイン・ファイル、例えば``plugins/splunk-rum.client.js`` を作成する："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:162
msgid "The ``.client.js`` suffix in the file name instructs Nuxt to load the plugin only in the client side."
msgstr "ファイル名に``.client.js`` というサフィックスを付けると、Nuxt はクライアント側でのみプラグインをロードするようになります。"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:164
msgid "Edit the ``nuxt.config.js`` file to include the ``plugins/splunk-rum.client.js`` plugin:"
msgstr "``nuxt.config.js`` ファイルを編集して、``plugins/splunk-rum.client.js`` プラグインを含めます："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:174
msgid "This step is not required when using Nuxt.js v3, as it registers plugins automatically."
msgstr "Nuxt.js v3を使用する場合は、プラグインが自動的に登録されるため、この手順は必要ありません。"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:177
msgid "Angular Universal"
msgstr "アングラー・ユニバーサル"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:179
msgid "To instrument an Angular Universal SPA using the Browser RUM agent, follow these steps:"
msgstr "Browser RUMエージェントを使用してAngularユニバーサルSPAを計測するには、以下の手順に従います："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:183
msgid "Create a ``src/splunk-rum.ts`` file that imports the ``@splunk/otel-web`` package and calls the ``SplunkRum.init()`` function:"
msgstr "``@splunk/otel-web`` パッケージをインポートし、``SplunkRum.init()`` 関数を呼び出す``src/splunk-rum.ts`` ファイルを作成する："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:197
msgid "Edit the ``src/main.ts`` file to import the ``splunk-rum`` file you've created:"
msgstr "``src/main.ts`` ファイルを編集して、作成した``splunk-rum`` ファイルをインポートする："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:207
msgid "If ``Zone`` errors appears, you might need to ignore type checking of older libraries using ``skipLibCheck``. For example:"
msgstr "``Zone`` のエラーが表示される場合は、``skipLibCheck`` を使用している古いライブラリの型チェックを無視する必要があるかもしれない。例えば、こうだ："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:222
msgid "Create custom spans for single-page applications"
msgstr "単一ページ・アプリケーション用にカスタム・スパンを作成する"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:224
msgid "You can use the OpenTelemetry API to create custom spans that are specific to the structure of your application. For example, you can generate spans when a user clicks a specific button, or to instrument a custom communication protocol."
msgstr "OpenTelemetry API を使って、アプリケーションの構造に特化したカスタムスパンを作成することができます。例えば、ユーザーが特定のボタンをクリックしたときにスパンを生成したり、カスタム通信プロトコルを計測したりすることができます。"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:227
msgid "Set up the OpenTelemetry API"
msgstr "OpenTelemetry API をセットアップする"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:229
msgid "Add the current version of the OpenTelemetry API package using npm:"
msgstr "npmを使って、現在のバージョンのOpenTelemetry APIパッケージを追加する："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:235
msgid "Make sure that the version of the OpenTelemetry API matches the major version of the API used by the ``@splunk/otel-web`` package. Version information is available in the :new-page:`release notes <https://github.com/signalfx/splunk-otel-js-web/releases>`."
msgstr "OpenTelemetry API のバージョンが、``@splunk/otel-web`` パッケージで使用されている API のメジャーバージョンと一致していることを確認してください。バージョン情報は:new-page:`リリースノート<https://github.com/signalfx/splunk-otel-js-web/releases>` でご覧いただけます。"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:238
msgid "Create custom spans"
msgstr "カスタムスパンの作成"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:240
msgid "You can create custom spans by including a tracer. For example:"
msgstr "トレーサーを含めることで、カスタムスパンを作ることができる。例えば、こうだ："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:284
msgid "To add child spans to the generated spans, use the Context API. For example:"
msgstr "生成されたスパンに子スパンを追加するには、Context APIを使用します。例えば、こうだ："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:303
msgid "Context might not propagate to child spans that aren't called directly, for example inside a ``Promise.then, setTimeout, ...`` block. To mitigate this issue, activate asynchronous tracing. See :ref:`browser-rum-async-traces`."
msgstr "コンテキストは、例えば``Promise.then, setTimeout, ...`` ブロックの中など、直接呼び出されていない子スパンには伝搬しないかもしれない。この問題を軽減するには、非同期トレースを有効にする。:ref:`browser-rum-async-traces` を参照。"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:308
msgid "Collect errors with single-page application frameworks"
msgstr "シングルページのアプリケーションフレームワークでエラーを収集する"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:310
msgid "To activate the collection of JavaScript errors from single-page application (SPA) frameworks using their own error interceptors or handlers, you need to integrate the Browser RUM agent with the framework."
msgstr "独自のエラーインターセプターまたはハンドラーを使用するシングルページアプリケーション（SPA）フレームワークからのJavaScriptエラーの収集を有効にするには、Browser RUMエージェントをフレームワークと統合する必要があります。"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:312
msgid "The following framework-specific examples show how to integrate the Browser RUM agent with the supported frameworks. All the examples assume that you installed the Browser RUM agent using npm. See :ref:`rum-browser-install-npm`."
msgstr "以下のフレームワーク固有の例は、Browser RUMエージェントをサポートされているフレームワークと統合する方法を示しています。すべての例は、npmを使用してBrowser RUMエージェントをインストールしたことを前提としています。:ref:`rum-browser-install-npm` を参照。"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:315
msgid "React"
msgstr "反応"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:317
msgid "Use the Splunk RUM agent API in your error boundary component:"
msgstr "エラー境界コンポーネントで Splunk RUM エージェント API を使用する："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:340
msgid "Vue.js"
msgstr "Vue.js"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:342
msgid "Add the collect function to your Vue ``errorHandler``."
msgstr "Vue``errorHandler`` にcollect関数を追加します。"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:344
msgid "For Vue.js version 3.x, use the following code:"
msgstr "Vue.jsバージョン3.xの場合は、以下のコードを使用します："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:362
msgid "For Vue.js version 2.x, use the following code:"
msgstr "Vue.jsバージョン2.xの場合は、以下のコードを使用します："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:378
msgid "Angular"
msgstr "アンギュラー"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:380
msgid "For Angular version 2.x, create an error handler module:"
msgstr "Angularバージョン2.xの場合は、エラーハンドラーモジュールを作成します："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:407
msgid "For Angular version 1.x, create an ``exceptionHandler``:"
msgstr "Angular バージョン 1.x の場合は、``exceptionHandler`` を作成します："

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:425
msgid "Ember.js"
msgstr "Ember.js"

#: ../../gdi/get-data-in/rum/browser/instrument-single-page-applications.rst:427
msgid "Configure an ``Ember.onerror`` hook as in the following example:"
msgstr "以下の例のように、``Ember.onerror`` フックを設定する："

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:-1
msgid "Manually instrument front-end applications for Splunk Observability Cloud real user monitoring / RUM to collect additional telemetry, sanitize Personal Identifiable Information (PII), identify users, and more."
msgstr "Splunk Observability Cloud リアルユーザーモニタリング / RUM のフロントエンドアプリケーションに手動でインストゥルメントを追加し、テレメトリの追加収集、個人識別情報 (PII) のサニタイズ、ユーザーの識別などを行います。"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:5
msgid "Manually instrument browser-based web applications"
msgstr "ブラウザベースのウェブアプリケーションを手動で計測"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:10
msgid "You can manually instrument front-end applications for Splunk RUM using the Browser RUM agent to collect additional telemetry, sanitize Personal Identifiable Information (PII), identify users, and more. The following API examples show several manual instrumentations for Splunk RUM."
msgstr "Browser RUM エージェントを使用して、Splunk RUM 用のフロントエンドアプリケーションを手動でインストルメンテーションし、追加のテレメトリを収集したり、個人識別情報 (PII) をサニタイズしたり、ユーザーを識別したりすることができます。以下の API の例では、Splunk RUM 用の手動インスツルメンテーションをいくつか紹介しています。"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:12
msgid "To migrate manual instrumentation created for another vendor, see :ref:`browser-rum-migrate-instrumentation`. For the API reference of Browser RUM, see :ref:`browser-rum-api-reference`."
msgstr "別のベンダー用に作成された手動計装を移行するには、:ref:`browser-rum-migrate-instrumentation` を参照してください。ブラウザRUMのAPIリファレンスについては、:ref:`browser-rum-api-reference` を参照してください。"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:15
msgid "Instrument your application using the OpenTelemetry API"
msgstr "OpenTelemetry API を使ってアプリケーションを計測する"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:17
msgid "To instrument your front-end application manually, use the OpenTelemetry API. The Browser RUM agent automatically registers its TraceProvider using ``@opentelemetry/api``, so that your own instrumentations can access it."
msgstr "フロントエンド・アプリケーションを手動で計測するには、OpenTelemetry API を使います。Browser RUMエージェントは、``@opentelemetry/api`` を使用して、TraceProviderを自動的に登録します。"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:20
msgid "Check the version of the OpenTelemetry API"
msgstr "OpenTelemetry APIのバージョンを確認する"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:22
msgid "To manually instrument your application, the version of ``@opentelemetry/api`` you use must match the same major version of ``@opentelemetry/api`` used by the Browser RUM agent."
msgstr "アプリケーションを手動で計測するには、使用する``@opentelemetry/api`` のバージョンが、Browser RUM エージェントが使用する``@opentelemetry/api`` のメジャーバージョンと同じでなければなりません。"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:24
msgid "To verify this, run ``window[Symbol.for('opentelemetry.js.api.1')].version`` in the browser's console from any page that you've instrumented. The command returns the full version of the OpenTelemetry API."
msgstr "これを確認するには、インスツルメンテーションしたページからブラウザのコンソールで``window[Symbol.for('opentelemetry.js.api.1')].version`` 。コマンドは OpenTelemetry API のフルバージョンを返します。"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:27
msgid "Create a span"
msgstr "スパンの作成"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:29
msgid "The following example shows how to create a span with an attribute:"
msgstr "次の例は、属性を持つスパンを作成する方法を示しています："

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:44
msgid "Set the user ID on all spans"
msgstr "すべてのスパンにユーザーIDを設定する"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:46
msgid "The following example shows how to set the user ID globally:"
msgstr "次の例は、ユーザーIDをグローバルに設定する方法を示している："

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:55
msgid "Create a custom event"
msgstr "カスタムイベントの作成"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:57
msgid "The following example shows how to create a custom event:"
msgstr "次の例は、カスタム・イベントの作成方法を示しています："

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:72
msgid "To avoid load problems due to content blockers when using the CDN version of the Browser RUM agent, add ``if (window.SplunkRum)`` checks around ``SplunkRum`` API calls."
msgstr "Browser RUMエージェントのCDNバージョンを使用する際に、コンテンツブロッカーによるロードの問題を回避するために、``SplunkRum`` APIコールの周りに``if (window.SplunkRum)`` チェックを追加します。"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:77
msgid "Sanitize Personally Identifiable Information (PII)"
msgstr "個人を特定できる情報（PII）のサニタイズ"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:79
msgid "The metadata collected by the Browser RUM agent might include Personally Identifiable Information (PII) if your front-end application injects such data in its code. For example, UI components might include PII in their IDs."
msgstr "Browser RUMエージェントによって収集されたメタデータは、フロントエンドアプリケーションがそのコードにそのようなデータを注入した場合、個人を特定できる情報（PII）を含む可能性があります。例えば、UIコンポーネントはIDにPIIを含むかもしれない。"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:81
msgid "To redact PII in the data collected for Splunk RUM, use the ``exporter.onAttributesSerializing`` setting when initializing the Browser RUM instrumentation, as in the following example:"
msgstr "Splunk RUM 用に収集したデータ内の PII を再編集するには、以下の例のように Browser RUM インストルメンテーションを初期化する際に``exporter.onAttributesSerializing`` 設定を使用します："

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:97
msgid "The Browser RUM automatic instrumentations do not collect or report any data from request payloads or POST bodies other than their size."
msgstr "Browser RUMの自動インスツルメンテーションは、リクエストのペイロードや POSTボディのサイズ以外のデータを収集したり報告したりしない。"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:104
msgid "By default, the Browser RUM agent doesn't automatically link traces to users of your site. However, you might need to collect user metadata to filter or debug traces."
msgstr "デフォルトでは、Browser RUMエージェントは、トレースをサイトのユーザーに自動的にリンクしません。しかし、トレースのフィルタリングやデバッグのために、ユーザーのメタデータを収集する必要があるかもしれません。"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:150
msgid "The Browser RUM agent collects server trace context using back-end data provided by APM instrumentation through the ``Server-Timing`` header. In some cases, you might want to generate the header manually."
msgstr "Browser RUMエージェントは、APMインスツルメンテーションから``Server-Timing`` ヘッダを通じて提供されるバックエンドデータを使用して、サーバートレースコンテキストを収集します。場合によっては、手動でヘッダーを生成したいかもしれない。"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:175
msgid "If you're using cross-origin resource sharing (CORS) headers, such as ``Access-Control-*``, you might need to grant permission to read the ``Server-Timing`` header. For example: ``Access-Control-Expose-Headers: Server-Timing``."
msgstr "``Access-Control-*`` のような、クロスオリジンリソース共有(CORS)ヘッダーを使用している場合、``Server-Timing`` ヘッダーを読む許可を与える必要があるかもしれない。例：``Access-Control-Expose-Headers: Server-Timing``."

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:180
msgid "Create workflow spans"
msgstr "ワークフロー・スパンの作成"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:182
msgid "With workflow spans you can add metadata to your spans to track the steps happening in your application workflows, such as filling out a form or checking a shopping cart."
msgstr "ワークフロースパンでは、スパンにメタデータを追加して、フォームへの入力やショッピングカートのチェックなど、アプリケーションのワークフローで発生するステップを追跡することができます。"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:184
msgid "Workflow spans have the following attributes:"
msgstr "ワークフロースパンには以下の属性がある："

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:196
msgid "Unique ID for the workflow instance."
msgstr "ワークフローインスタンスの固有ID。"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:199
msgid "Semantic name for the current workflow."
msgstr "現在のワークフローの意味上の名前。"

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:201
msgid "The following snippet shows how to create a workflow span:"
msgstr "以下のスニペットは、ワークフロー・スパンの作成方法を示している："

#: ../../gdi/get-data-in/rum/browser/manual-rum-browser-instrumentation.rst:218
msgid "To activate error collection for workflow spans, add the ``error`` and ``error.message`` attributes:"
msgstr "ワークフロー・スパンのエラー収集を有効にするには、``error`` および``error.message`` 属性を追加します："

#: ../../gdi/get-data-in/rum/browser/migrate-manual-instrumentation.rst:-1
msgid "You can migrate manual instrumentation that you added for another vendor to send telemetry data to Splunk Observability Cloud real user monitoring / RUM. To migrate the instrumentation, you must edit the instrumentation code to use OpenTelemetry conventions."
msgstr "テレメトリデータを Splunk Observability Cloud リアルユーザーモニタリング / RUM に送信するために、別のベンダー用に追加した手動インスツルメンテーションを移行できます。インスツルメンテーションを移行するには、OpenTelemetry の規約を使うようにインスツルメンテーションのコードを編集する必要があります。"

#: ../../gdi/get-data-in/rum/browser/migrate-manual-instrumentation.rst:6
msgid "Migrate existing manual instrumentation"
msgstr "既存の手動計測器の移行"

#: ../../gdi/get-data-in/rum/browser/migrate-manual-instrumentation.rst:11
msgid "You can migrate manual instrumentation that you added for another vendor to send telemetry data to Splunk RUM. To migrate the instrumentation, you must edit the instrumentation code to use OpenTelemetry conventions."
msgstr "テレメトリデータを Splunk RUM に送信するために、別のベンダー用に追加した手動インスツルメンテーションを移行できます。インスツルメンテーションを移行するには、OpenTelemetry の規約を使うようにインスツルメンテーションのコードを編集する必要があります。"

#: ../../gdi/get-data-in/rum/browser/migrate-manual-instrumentation.rst:13
msgid "The following examples shows how you can instrument different data sources for Splunk RUM:"
msgstr "以下の例では、Splunk RUM でさまざまなデータソースを計測する方法を示しています："

#: ../../gdi/get-data-in/rum/browser/migrate-manual-instrumentation.rst:16
msgid "Migrate actions or events instrumentation"
msgstr "アクションやイベントのインストルメンテーションを移行する"

#: ../../gdi/get-data-in/rum/browser/migrate-manual-instrumentation.rst:18
msgid "You might have instrumentation that collects custom timestamps or time ranges for activity within your app. For example, you might have manually instrumented a CPU-intensive ``calculateEstateTax`` function to know how its performance is affecting users."
msgstr "アプリ内のアクティビティのカスタム・タイムスタンプや時間範囲を収集するインスツルメンテーションがあるかもしれない。例えば、CPU負荷の高い``calculateEstateTax`` 関数を手動でインスツルメンテーションし、そのパフォーマンスがユーザーにどのような影響を与えているかを知ることができる。"

#: ../../gdi/get-data-in/rum/browser/migrate-manual-instrumentation.rst:20
msgid "When instrumenting the same function using OpenTelemetry, in addition to capturing start and end time in a span, you can include additional details using attributes:"
msgstr "OpenTelemetry を使って同じ関数をインスツルメンテーションする場合、スパン内の開始時刻と終了時刻をキャプチャするだけでなく、アトリビュートを使ってさらに詳細を含めることができます："

#: ../../gdi/get-data-in/rum/browser/migrate-manual-instrumentation.rst:38
msgid "Migrate custom properties, tags, or attributes instrumentation"
msgstr "カスタムプロパティ、タグ、属性のインスツルメンテーションの移行"

#: ../../gdi/get-data-in/rum/browser/migrate-manual-instrumentation.rst:40
msgid "You might have a feature where you collect additional tags or properties about the page and include that information in your RUM data stream. For example, you might be capturing details about A/B tests, account categorization, the release version of the app, or UI modes."
msgstr "ページに関する追加のタグやプロパティを収集し、その情報をRUMデータストリームに含める機能があるかもしれません。例えば、A/Bテスト、アカウント分類、アプリのリリースバージョン、UIモードなどの詳細をキャプチャすることが考えられます。"

#: ../../gdi/get-data-in/rum/browser/migrate-manual-instrumentation.rst:42
msgid "You can store this kind of information using OpenTelemetry attributes, which are key-value pairs. If the relevant properties are available at the time the page is loaded, use the ``globalAttributes`` setting:"
msgstr "この種の情報は、OpenTelemetry 属性（キーと値のペア）を使って保存することができます。ページが読み込まれた時点で関連するプロパティが利用可能な場合は、``globalAttributes`` 設定を使用します："

#: ../../gdi/get-data-in/rum/browser/migrate-manual-instrumentation.rst:55
msgid "If the properties are not available until later or can change over the lifetime of the page, update or add them dynamically like in the following example:"
msgstr "もしプロパティが後で利用可能になったり、ページの存続期間中に変更される可能性がある場合は、次の例のように動的に更新または追加してください："

#: ../../gdi/get-data-in/rum/browser/migrate-manual-instrumentation.rst:66
msgid "Migrate errors instrumentation"
msgstr "エラー計装の移行"

#: ../../gdi/get-data-in/rum/browser/migrate-manual-instrumentation.rst:68
msgid "You might have manual instrumentation that reports errors that are collected or handled in your code. To collect and report errors to Splunk RUM, use the ``SplunkRum.error`` function:"
msgstr "コード内で収集または処理されたエラーを報告する手動インスツルメンテーションがあるかもしれない。エラーを収集して Splunk RUM に報告するには、``SplunkRum.error`` 関数を使用します："

#: ../../gdi/get-data-in/rum/browser/migrate-manual-instrumentation.rst:79
msgid "The ``SplunkRum.error`` function accepts strings and arrays of strings, as well as ``Error`` and ``ErrorEvent`` objects. See :ref:`browser-rum-data-js-errors` for more information."
msgstr "``SplunkRum.error`` 関数は、文字列と文字列の配列、``Error`` と``ErrorEvent`` オブジェクトを受け付ける。詳しくは:ref:`browser-rum-data-js-errors` 。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:-1
msgid "Understand which data you collect from browser-based web applications when using Splunk Observability Cloud Real User Monitoring (RUM)."
msgstr "Splunk Observability Cloud Real User Monitoring (RUM) を使用して、ブラウザベースの Web アプリケーションから収集するデータを理解します。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:5
msgid "RUM Browser data model"
msgstr "RUMブラウザのデータモデル"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:10
msgid "The Browser RUM agent collects general RUM telemetry data about your front-end web application, as well as data from several instrumentations."
msgstr "Browser RUM エージェントは、フロントエンドのウェブアプリケーションに関する一般的な RUM テレメトリーデータと、いくつかのインスツルメンテーションからのデータを収集します。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:22
msgid "The following properties are common to all web applications instrumented for Splunk RUM:"
msgstr "以下のプロパティは、Splunk RUM で計測されるすべての Web アプリケーションに共通です："

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:39
msgid "Logical operation the span represents. For example, ``/pay`` or ``/customers/{1}/details``."
msgstr "スパンが表す論理演算。例えば、``/pay`` や``/customers/{1}/details`` 。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:60
msgid "The following tables list all of the metrics available in Splunk RUM for Browser. All errors in Splunk RUM have the dimension ``sf_error=true``. Metrics with the prefix ``rum.node.`` are page level metrics, whereas metrics with the prefix ``rum.`` are aggregations of multiple pages. Page level metrics also have a dimension ``sf_node_name``, which you can use to filter on specific pages."
msgstr "以下の表は、Splunk RUM for Browser で利用可能なすべてのメトリクスの一覧です。Splunk RUM のすべてのエラーはディメンジョン``sf_error=true`` を持っています。接頭辞``rum.node.`` を持つメトリクスはページ・レベルのメトリクスであり、接頭辞``rum.`` を持つメトリクスは複数ページの集約である。ページ・レベルのメトリクスにもディメンジョンがあり、``sf_node_name`` 、特定のページでフィルタリングできます。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:67
msgid ":strong:`App level metric name`"
msgstr ":strong:`アプリレベルのメトリック名`"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:69
msgid ":strong:`Page level metric`"
msgstr ":strong:`ページレベルの指標`"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:72
msgid "Custom event count"
msgstr "カスタム・イベント・カウント"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:73
msgid "``rum.node.workflow.count``"
msgstr "``rum.node.workflow.count``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:76
msgid "Custom event duration"
msgstr "カスタム・イベント期間"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:77
msgid "``rum.node.workflow.time.ns.p75``"
msgstr "``rum.node.workflow.time.ns.p75``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:79
msgid "``rum.page_view.count``"
msgstr "``rum.page_view.count``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:80
msgid "Page views and route changes"
msgstr "ページビューとルート変更"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:81
msgid "``rum.node.page_view.count``"
msgstr "``rum.node.page_view.count``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:82
msgid "The total number of page views and route changes sorted by page for the given time range."
msgstr "指定された時間範囲のページビューとルート変更の総数をページ別に並べ替えたもの。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:83
msgid "``rum.page_view.time.ns.p75``"
msgstr "``rum.page_view.time.ns.p75``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:84
msgid "Page views and route change duration"
msgstr "ページビューとルート変更時間"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:85
msgid "``rum.node.rum.page_view.time.ns.p75``"
msgstr "``rum.node.rum.page_view.time.ns.p75``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:86
msgid "The p75 time in nanoseconds of the document load and, or, the route change time for the given time range. Route changes in Splunk RUM are events with zero second durations. For more, see :ref:`browser-rum-data-doc-load`."
msgstr "ドキュメントロードのp75時間（ナノ秒）、または、指定された時間範囲のルート変更時間。Splunk RUM のルート変更は、継続時間が 0 秒のイベントです。詳しくは:ref:`browser-rum-data-doc-load` を参照。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:87
msgid "``rum.client_error.count``"
msgstr "``rum.client_error.count``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:89
msgid "``rum.node.client_error.count``"
msgstr "``rum.node.client_error.count``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:90
msgid "The total number of spans with JavaScript errors in the given time range."
msgstr "指定した時間範囲内でJavaScriptエラーが発生したスパンの総数。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:91
msgid "``rum.webvitals_lcp.time.ns.p75``"
msgstr "``rum.webvitals_lcp.time.ns.p75``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:92
msgid "Largest contentful paint (LCP) Time"
msgstr "最大内容物（LCP）時間"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:93
msgid "``rum.node.webvitals_lcp.time.ns.p75``"
msgstr "``rum.node.webvitals_lcp.time.ns.p75``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:94
msgid "The p75 time of the LCP in nanoseconds for the given time range."
msgstr "指定された時間範囲におけるLCPのp75時間（ナノ秒単位）。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:95
msgid "``rum.webvitals_fid.time.ns.p75``"
msgstr "``rum.webvitals_fid.time.ns.p75``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:96
msgid "First input delay time (FID)"
msgstr "第1入力遅延時間（FID）"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:97
msgid "``rum.node.rum.webvitals_fid.time.ns.p75``"
msgstr "``rum.node.rum.webvitals_fid.time.ns.p75``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:98
msgid "The p75 time of the FID in nanoseconds for the given time range."
msgstr "指定された時間範囲におけるFIDのp75時間（ナノ秒）。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:99
msgid "``rum.webvitals_cls.score.p75``"
msgstr "``rum.webvitals_cls.score.p75``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:100
msgid "Cumulative layout shift (CLS)"
msgstr "累積レイアウトシフト（CLS）"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:101
msgid "``rum.node.rum.webvitals_cls.score.p75``"
msgstr "``rum.node.rum.webvitals_cls.score.p75``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:102
msgid "The p75 time of the CLS in nanoseconds for the given time range."
msgstr "与えられた時間範囲におけるCLSのp75時間（ナノ秒単位）。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:103
msgid "``rum.long_task.count``"
msgstr "``rum.long_task.count``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:104
msgid "Long task count"
msgstr "長いタスク数"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:105
msgid "``rum.node.long_task.count``"
msgstr "``rum.node.long_task.count``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:106
msgid "The total number of long tasks in the given time range."
msgstr "指定された時間範囲内の長いタスクの総数。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:107
msgid "``rum.long_task.time.ns.p75``"
msgstr "``rum.long_task.time.ns.p75``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:108
msgid "Long task duration"
msgstr "長いタスク時間"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:109
msgid "``rum.node.long_task.time.ns.p75``"
msgstr "``rum.node.long_task.time.ns.p75``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:110
msgid "The p75 time for long task duration in nanoseconds."
msgstr "ナノ秒単位の長時間タスクのp75時間。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:112
msgid "Network requests (HTTPS, XHR, AJAX)"
msgstr "ネットワークリクエスト（HTTPS、XHR、AJAX）"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:113
msgid "``rum.node.resource_request.count``"
msgstr "``rum.node.resource_request.count``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:114
msgid "The total number of network requests such as https, XHR, AJAX, and retrieve events in a given time range."
msgstr "https、XHR、AJAX、retrieveイベントなど、指定した時間範囲内のネットワークリクエストの総数。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:116
msgid "Back-end and Resource request Duration"
msgstr "バックエンドとリソース要求期間"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:117 ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:121
msgid "``rum.node.resource_request.time.ns.p75``"
msgstr "``rum.node.resource_request.time.ns.p75``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:118
msgid "The p75 time in nanoseconds for AJAX and back-end latency in the given time range."
msgstr "指定された時間範囲におけるAJAXとバックエンドの待ち時間のナノ秒単位のp75。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:119
msgid "``rum.resource_request.ttfb.time.ns.p75``"
msgstr "``rum.resource_request.ttfb.time.ns.p75``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:120
msgid "Time to first byte (TTFB)"
msgstr "最初のバイトまでの時間（TTFB）"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:122
msgid "The p75 time in nanoseconds for TTFB for the given time range."
msgstr "指定された時間範囲におけるTTFBのp75時間（ナノ秒）。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:127
msgid "Default tags"
msgstr "デフォルトタグ"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:129
msgid "By default, the Browser RUM agent adds the following tags to all spans:"
msgstr "デフォルトでは、Browser RUMエージェントは、すべてのスパンに以下のタグを追加します："

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:140
msgid "Application name, as set in the configuration."
msgstr "コンフィギュレーションで設定されたアプリケーション名。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:143
msgid "Instrumentation name that produced the span. For example, ``document-load``."
msgstr "スパンを生成した装置名。例えば、``document-load`` 。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:146
msgid "Location URL at the moment of creating the span."
msgstr "スパン作成時のロケーションURL。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:149
msgid "Session ID, collected from the ``_splunk_rum_sid`` cookie. See :ref:`browser-rum-cookies`."
msgstr "``_splunk_rum_sid`` Cookieから収集されたセッションID。:ref:`browser-rum-cookies` を参照。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:150 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:110
msgid "``splunk.rumVersion``"
msgstr "``splunk.rumVersion``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:153
msgid "``splunk.scriptInstance``"
msgstr "``splunk.scriptInstance``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:155
msgid "The 64-bit ID of the ``splunk-otel-web.js`` instance. The ID is renewed every time the page is reloaded. This is useful, for example, when distinguishing between different open tabs within the same browser window which share the same session."
msgstr "``splunk-otel-web.js`` インスタンスの64ビットID。IDはページがリロードされるたびに更新される。これは例えば、同じブラウザウィンドウ内で同じセッションを共有している異なるオープンタブを区別する場合に便利です。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:156
msgid "``otel.status_code``"
msgstr "``otel.status_code``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:158
msgid "If set, the value can be either ``OK`` or ``ERROR``."
msgstr "設定されている場合、値は``OK`` または``ERROR`` のいずれかとなる。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:159
msgid "``telemetry.sdk.language``"
msgstr "``telemetry.sdk.language``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:161
msgid "Always ``webjs``."
msgstr "いつも``webjs`` 。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:162
msgid "``telemetry.sdk.name``"
msgstr "``telemetry.sdk.name``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:164
msgid "Always ``@splunk/otel-web``."
msgstr "いつも``@splunk/otel-web`` 。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:169
msgid "Request timing annotations"
msgstr "タイミング注釈のリクエスト"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:171
msgid "All spans produced by the Browser RUM agent are annotated with performance timings, as specified by the W3C specification for the ``PerformanceNavigationTiming`` interface:"
msgstr "Browser RUMエージェントによって生成されたすべてのスパンは、``PerformanceNavigationTiming`` インターフェイスのためのW3C仕様によって指定されたように、パフォーマンス タイミングで注釈されています："

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:180
msgid "Immediately before the browser starts to fetch the resource."
msgstr "ブラウザがリソースの取得を開始する直前。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:181
msgid "``domainLookupStart``"
msgstr "``domainLookupStart``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:182
msgid "Immediately before the browser starts the domain name lookup for the resource."
msgstr "ブラウザがリソースのドメイン名検索を開始する直前。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:183
msgid "``domainLookupEnd``"
msgstr "``domainLookupEnd``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:184
msgid "Immediately after the browser finishes the domain name lookup for the resource."
msgstr "ブラウザがリソースのドメイン名検索を終了した直後。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:185
msgid "``connectStart``"
msgstr "``connectStart``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:186
msgid "Immediately before the browser starts to establish the connection to the server to retrieve the resource."
msgstr "ブラウザがリソースを取得するためにサーバーとの接続を確立し始める直前。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:187
msgid "``secureConnectionStart``"
msgstr "``secureConnectionStart``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:188
msgid "Immediately before the browser starts the handshake process to secure the current connection."
msgstr "ブラウザが現在の接続を保護するためにハンドシェイクプロセスを開始する直前。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:189
msgid "``connectEnd``"
msgstr "``connectEnd``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:190
msgid "Immediately after the browser finishes establishing the connection to the server to retrieve the resource."
msgstr "ブラウザがリソースを取得するためにサーバーとの接続を確立し終わった直後。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:191
msgid "``requestStart``"
msgstr "``requestStart``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:192
msgid "Immediately before the browser starts requesting the resource from the server."
msgstr "ブラウザがサーバーにリソースのリクエストを開始する直前。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:193
msgid "``responseStart``"
msgstr "``responseStart``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:194
msgid "Immediately after the browser receives the first byte of the response from the server."
msgstr "ブラウザがサーバーからレスポンスの最初のバイトを受信した直後。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:195
msgid "``responseEnd``"
msgstr "``responseEnd``"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:196
msgid "Immediately after the browser receives the last byte of the resource or immediately before the transport connection is closed."
msgstr "ブラウザがリソースの最後のバイトを受信した直後、またはトランスポート接続が閉じられる直前。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:201
msgid "Data forwarding limits"
msgstr "データ転送の制限"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:203
msgid "The Browser RUM agent has the following built-in limits:"
msgstr "Browser RUMエージェントには、以下の制限が組み込まれています："

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:205
msgid "The forwarding frequency for data batches is 5 seconds."
msgstr "データ・バッチの転送頻度は5秒である。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:206
msgid "The agent can send 100 spans in 30 seconds per component. Spans produced beyond the limit are dropped."
msgstr "エージェントは1コンポーネントあたり30秒で100スパンを送信できる。限界を超えたスパンは削除される。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:207
msgid "Tag values can be up to 4,096 characters long. The agent truncates longer values."
msgstr "タグの値の長さは4,096文字まで。エージェントは長い値を切り捨てる。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:208
msgid "The batch size, as determined by the number of spans, is 20 spans."
msgstr "スパン数で決まるバッチサイズは20スパン。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:213
msgid "Collection and retention of geographical data"
msgstr "地理的データの収集と保持"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:215
msgid "The browser agent sends the IP addresses of all beacon connections to Splunk Observability Cloud, which uses them to map the geographical location of the user, such as country, city, and so on."
msgstr "ブラウザエージェントは、すべてのビーコン接続のIPアドレスをSplunk Observability Cloudに送信し、Splunk Observability Cloudはそれらを使用して、国や都市などのユーザーの地理的位置をマッピングします。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:217
msgid "Splunk Observability Cloud calculates only geographical metadata from the IPs, and drops IP addresses within 6 hours."
msgstr "Splunk Observability Cloud は IP から地理的なメタデータのみを計算し、6 時間以内に IP アドレスを削除します。"

#: ../../gdi/get-data-in/rum/browser/rum-browser-data-model.rst:222
msgid "See :ref:`browser-rum-instrumentation-data` for more information on Browser RUM instrumentations and the data they collect."
msgstr "ブラウザRUMの計測器とそれらが収集するデータの詳細については、:ref:`browser-rum-instrumentation-data` を参照。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:-1
msgid "Configure the Splunk Observability Cloud real user monitoring / RUM instrumentation for your iOS applications."
msgstr "iOS アプリケーションの Splunk Observability Cloud リアルユーザーモニタリング / RUM インストルメンテーションを設定します。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:5
msgid "Configure the Splunk iOS RUM instrumentation"
msgstr "Splunk iOS RUM インストルメンテーションを設定する"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:10
msgid "You can configure the iOS RUM library from the Splunk OpenTelemetry Instrumentation for iOS to add custom attributes, adapt the instrumentation to your environment and application, customize sampling, and more."
msgstr "Splunk OpenTelemetry Instrumentation for iOS の iOS RUM ライブラリを設定することで、カスタム属性の追加、環境やアプリケーションに合わせた計測、サンプリングのカスタマイズなどを行うことができます。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:12
msgid "To configure the iOS RUM library, pass the settings as methods when initializating the ``SplunkRum`` module. The Splunk Observability Cloud realm and RUM token are passed as arguments to the ``SplunkRumBuilder`` function."
msgstr "iOS RUMライブラリを設定するには、``SplunkRum`` モジュールを初期化する際に、メソッドとして設定を渡します。Splunk Observability Cloud レルムと RUM トークンは、``SplunkRumBuilder`` 関数の引数として渡されます。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:14
msgid "The following example shows how to configure the RUM token, realm, environment name, app name, and other settings:"
msgstr "次の例は、RUMトークン、レルム、環境名、アプリ名、およびその他の設定を構成する方法を示しています："

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:56
msgid "Use the following settings to configure the iOS RUM library:"
msgstr "iOS RUMライブラリを構成するには、以下の設定を使用します："

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:64
msgid ":code:`realm`"
msgstr ":code:`realm`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:65
msgid "The name of your organization's realm, for example, ``us0``. To find the realm name of your account, open the left navigation menu in Splunk Observability Cloud, select :menuselection:`Settings`, and then select your username. The realm name appears in the :guilabel:`Organizations` section."
msgstr "あなたの組織のレルムの名前。例えば、``us0`` 。アカウントのレルム名を確認するには、Splunk Observability Cloud の左ナビゲーションメニューを開き、:menuselection:`Settings` を選択し、ユーザー名を選択します。レルム名は:guilabel:`Organizations` セクションに表示される。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:66
msgid ":code:`rumAuth`"
msgstr ":code:`rumAuth`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:68
msgid ":code:`beaconUrl`"
msgstr ":code:`beaconUrl`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:69
msgid "Ingest URL to which the agent sends collected telemetry. The URL must contain your realm in Splunk Observability Cloud. For example, ``https://rum-ingest.us0.signalfx.com/v1/rum`` is the ingest URL for the ``us0`` realm. When defined, it overrides the value in ``realm``."
msgstr "エージェントが収集したテレメトリを送信するインジェスト URL。URL には Splunk Observability Cloud のレルムを含める必要があります。例えば、``https://rum-ingest.us0.signalfx.com/v1/rum`` は、``us0`` レルムのインジェストURLである。定義されると、``realm`` の値を上書きする。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:70 ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:46
msgid ":code:`globalAttributes`"
msgstr ":code:`globalAttributes`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:71
msgid "Sets additional attributes added to all spans. Attributes are defined as an array of comma-separated key-value pairs. For example: ``[\"key1\":\"value1\",\"key2\":3]``. See :ref:`ios-rum-globalattributes`."
msgstr "すべてのスパンに追加される属性を設定します。属性は、カンマで区切られたキーと値のペアの配列として定義されます。例：``[\"key1\":\"value1\",\"key2\":3]``.:ref:`ios-rum-globalattributes` を参照。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:72 ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:48
msgid ":code:`environment`"
msgstr ":code:`environment`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:74
msgid ":code:`appName`"
msgstr ":code:`appName`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:75
msgid "Sets the application name. If not set, the library uses the bundle name instead. Default value is nil."
msgstr "アプリケーション名を設定します。設定されていない場合、ライブラリは代わりにバンドル名を使用する。デフォルト値はnil。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:76
msgid ":code:`ignoreURLs`"
msgstr ":code:`ignoreURLs`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:77 ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:51
msgid "Regular expression pattern that matches URLs you want to ignore when reporting HTTP activity."
msgstr "HTTPアクティビティを報告する際に無視したいURLにマッチする正規表現パターン。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:78
msgid ":code:`spanFilter`"
msgstr ":code:`spanFilter`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:79
msgid "Closure of type ``((SpanData) -> SpanData?)?`` to modify or ignore spans. See :ref:`ios-rum-span-filtering`."
msgstr "スパンを修正または無視する``((SpanData) -> SpanData?)?`` 型のクロージャ。:ref:`ios-rum-span-filtering` を参照。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:80
msgid ":code:`sessionSamplingRatio`"
msgstr ":code:`sessionSamplingRatio`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:81
msgid "Percentage of sessions to sample. Expressed as a proportion in the range ``0.0`` to ``1.0``. The default value is ``1.0``."
msgstr "サンプルに対するセッションの割合。``0.0`` から``1.0`` の範囲の比率で表される。デフォルト値は``1.0`` 。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:82
msgid ":code:`allowInsecureBeacon`"
msgstr ":code:`allowInsecureBeacon`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:83
msgid "If set to ``true``, this setting allows beacon URLs that use the HTTP protocol. The default value is ``false``."
msgstr "``true`` に設定すると、HTTPプロトコルを使用するビーコンURLを許可する。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:84
msgid ":code:`enableDiskCache`"
msgstr ":code:`enableDiskCache`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:85
msgid "Activates caching of exported spans. All spans are written to local storage and deleted after a successful export. The default value is ``false``."
msgstr "エクスポートされたスパンのキャッシュを有効にします。すべてのスパンはローカル・ストレージに書き込まれ、エクスポートが成功すると削除される。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:86
msgid ":code:`spanDiskCacheMaxSize`"
msgstr ":code:`spanDiskCacheMaxSize`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:87
msgid "Threshold, in megabytes, from which spans start to be dropped from the disk cache. The oldest spans are dropped first. Only applicable when disk caching is activated. The default value is ``25`` megabytes."
msgstr "ディスクキャッシュからスパンが削除され始める閾値（メガバイト単位）。古いスパンから順に落とされる。ディスクキャッシングが有効な場合のみ適用される。デフォルト値は``25`` メガバイト。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:88
msgid ":code:`slowRenderingDetectionEnabled`"
msgstr ":code:`slowRenderingDetectionEnabled`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:89
msgid "Activates the slow rendering detection feature. The default value is ``false``. See :ref:`ios-slow-rendering-data`."
msgstr "低速レンダリング検出機能を有効にする。デフォルト値は``false`` 。:ref:`ios-slow-rendering-data` を参照。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:90
msgid ":code:`slowFrameDetectionThresholdMs`"
msgstr ":code:`slowFrameDetectionThresholdMs`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:91
msgid "Optional setting that tags as slow all frames that took more than the specified time, in milliseconds. The default value is ``16.7`` milliseconds."
msgstr "ミリ秒単位で指定された時間以上かかったフレームをすべて遅いとしてタグ付けするオプション設定。デフォルト値は``16.7`` ミリ秒。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:92
msgid ":code:`frozenFrameDetectionThresholdMs`"
msgstr ":code:`frozenFrameDetectionThresholdMs`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:93
msgid "Optional setting that tags as frozen all frames that took more than the specified time, in milliseconds. The default value is ``700`` milliseconds."
msgstr "ミリ秒単位で指定された時間以上かかったすべてのフレームを凍結としてタグ付けするオプション設定。デフォルト値は``700`` ミリ秒。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:94 ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:52
msgid ":code:`debug`"
msgstr ":code:`debug`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:95 ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:53
msgid "Activates debug logging. The default value is ``false``."
msgstr "デバッグ・ロギングを有効にする。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:110
msgid ":code:`showVCInstrumentation`"
msgstr ":code:`showVCInstrumentation`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:111
msgid "Activates the creation of spans for ``ViewController Show`` events. The default value is ``true``."
msgstr "``ViewController Show`` イベント用のスパンの作成を有効にする。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:112
msgid ":code:`screenNameSpans`"
msgstr ":code:`screenNameSpans`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:113
msgid "Activates the creation of spans for changes to the screen name. The default value is ``true``."
msgstr "スクリーンネームの変更のためのスパンの作成を有効にする。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:114
msgid ":code:`networkInstrumentation`"
msgstr ":code:`networkInstrumentation`"

#: ../../gdi/get-data-in/rum/ios/configure-rum-ios-instrumentation.rst:115
msgid "Activates the creation of spans for network activities. The default value is ``true``."
msgstr "ネットワーク活動のためのスパンの作成を有効にする。デフォルト値は``true`` 。"

#: ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:10
msgid "Install the iOS RUM library"
msgstr "iOS RUMライブラリをインストールする"

#: ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:10 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:5
msgid "iOS RUM data model"
msgstr "iOS RUMデータモデル"

#: ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:-1
msgid "Learn how to instrument your iOS applications for Splunk Observability Cloud real user monitoring / RUM and what data you can collect."
msgstr "Splunk Observability Cloud リアルユーザーモニタリング / RUM で iOS アプリケーションを計測する方法と、収集できるデータについて説明します。"

#: ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:5
msgid "Instrument iOS applications for Splunk RUM"
msgstr "Splunk RUM 用 iOS アプリケーションのインストゥルメント"

#: ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:19
msgid "Instrument your iOS applications to get Real User Monitoring (RUM) data into Splunk Observability Cloud. With Splunk RUM for Mobile, you can gain insight about the performance and health of your mobile apps."
msgstr "iOS アプリケーションをインスツルメンテーションして、リアルユーザーモニタリング (RUM) データを Splunk Observability Cloud に取り込みます。Splunk RUM for Mobile を使用すると、モバイルアプリのパフォーマンスと健全性を把握できます。"

#: ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:27
msgid "To generate all the basic installation commands for your environment and application, use the iOS Instrumentation guided setup. To access the iOS Instrumentation guided setup, follow these steps:"
msgstr "あなたの環境とアプリケーションのためのすべての基本的なインストールコマンドを生成するには、iOS Instrumentationガイド付きセットアップを使用します。iOS Instrumentationガイド付きセットアップにアクセスするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:31
msgid "Open the :new-page:`iOS Instrumentation guided setup <https://login.signalfx.com/#/gdi/scripted/ios/step-1?category=use-case-user-experience&gdiState=%7B\"integrationId\":\"ios\"%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`iOS Instrumentation guided setup<https://login.signalfx.com/#/gdi/scripted/ios/step-1?category=use-case-user-experience&gdiState=%7B\"integrationId\":\"ios\"%7D>` を開く。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:39
msgid "Click the :guilabel:`iOS Instrumentation` tile to open the iOS Instrumentation guided setup."
msgstr ":guilabel:`iOS Instrumentation` タイルをクリックして、iOS Instrumentation ガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:41
msgid "For detailed installation instructions and requirements, see :ref:`ios-rum-install`."
msgstr "詳細なインストール手順と要件については、:ref:`ios-rum-install` を参照してください。"

#: ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:49
msgid "Learn about the Splunk iOS RUM data model. See :ref:`rum-ios-data`."
msgstr "Splunk iOS RUM データモデルについて学びましょう。:ref:`rum-ios-data` を参照。"

#: ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:50
msgid ":ref:`configure-ios-instrumentation`."
msgstr ":ref:`configure-ios-instrumentation`."

#: ../../gdi/get-data-in/rum/ios/get-ios-data-in.rst:51
msgid ":ref:`manual-rum-ios-instrumentation`."
msgstr ":ref:`manual-rum-ios-instrumentation`."

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:-1
msgid "Instrument your iOS applications for Splunk Observability Cloud real user monitoring / RUM using the iOS RUM library from the Splunk OpenTelemetry Instrumentation for iOS."
msgstr "Splunk OpenTelemetry Instrumentation for iOS の iOS RUM ライブラリを使用して、Splunk Observability Cloud リアルユーザーモニタリング / RUM 用に iOS アプリケーションをインスツルメンテーションできます。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:5
msgid "Install the iOS RUM library for Splunk RUM"
msgstr "Splunk RUM 用 iOS RUM ライブラリをインストールする"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:10
msgid "To instrument your iOS application using the iOS RUM library and get data into Splunk RUM, follow the instructions on this page. You can install the library using Swift Package Manager, CocoaPods, or by building an XCFramework."
msgstr "iOS RUM ライブラリを使用して iOS アプリケーションを計測し、Splunk RUM にデータを取り込むには、このページの手順に従ってください。Swiftパッケージマネージャ、CocoaPods、またはXCFrameworkをビルドすることでライブラリをインストールできます。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:12
msgid "Splunk APM is not required to instrument Splunk RUM for iOS."
msgstr "Splunk RUM for iOS の計測に Splunk APM は必要ありません。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:26
msgid "Splunk RUM for Mobile supports the following versions:"
msgstr "Splunk RUM for Mobile は以下のバージョンをサポートしています："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:28
msgid "iOS 11 and higher"
msgstr "iOS 11以上"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:29
msgid "iPadOS 13 and higher"
msgstr "iPadOS 13以上"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:31
msgid "Splunk RUM supports Apple Silicon."
msgstr "Splunk RUM は Apple Silicon をサポートしています。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:38
msgid "Before you instrument and configure Splunk RUM for your iOS application, understand which data RUM collects about your application and determine the scope of what you want to monitor. See :ref:`rum-data-collected`."
msgstr "iOS アプリケーションに Splunk RUM をインストールして設定する前に、RUM がアプリケーションについてどのようなデータを収集するかを理解し、監視する範囲を決定してください。:ref:`rum-data-collected` を参照。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:40
msgid ":strong:`Tip:` To generate all the basic installation commands for your environment and application, use the iOS Instrumentation guided setup. To access the iOS Instrumentation guided setup, follow these steps:"
msgstr ":strong:`ヒント:` あなたの環境とアプリケーションのためのすべての基本的なインストールコマンドを生成するには、iOS Instrumentationガイド付きセットアップを使用します。iOS Instrumentationガイド付きセットアップにアクセスするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:50
msgid "Select the :guilabel:`iOS Instrumentation` tile to open the iOS Instrumentation guided setup."
msgstr ":guilabel:`iOS Instrumentation` タイルを選択し、iOS Instrumentation ガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:56
msgid "Install the iOS RUM library manually"
msgstr "iOS RUMライブラリを手動でインストールする"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:58
msgid "To install the iOS RUM library manually, follow these steps:"
msgstr "iOS RUMライブラリを手動でインストールするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:60
msgid ":ref:`ios-rum-add-package`"
msgstr ":ref:`ios-rum-add-package`"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:61
msgid ":ref:`rum-ios-initialize`"
msgstr ":ref:`rum-ios-initialize`"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:62
msgid ":ref:`rum-ios-crash-reporting`"
msgstr ":ref:`rum-ios-crash-reporting`"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:67
msgid "Add the dependency in Xcode"
msgstr "Xcodeで依存関係を追加する"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:69
msgid "To add the iOS RUM package to your project, follow the steps for your dependency manager. To build an XCFramework, see :ref:`xcframeork-ios-rum`."
msgstr "iOS RUMパッケージをプロジェクトに追加するには、依存関係マネージャの手順に従ってください。XCFrameworkをビルドするには、:ref:`xcframeork-ios-rum` を参照。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:73 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:159
msgid "Swift package manager (SPM)"
msgstr "Swift パッケージマネージャ (SPM)"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:75 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:161
msgid "To install the iOS RUM library using the Swift Package Manager (SPM) follow these steps:"
msgstr "Swift Package Manager (SPM) を使って iOS RUM ライブラリをインストールするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:77 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:163
msgid "In Xcode, select :strong:`File`, then :strong:`Add Packages...` or :strong:`File`, then :strong:`Swift Packages`, then :strong:`Add Package Dependency`, and enter the following URL in the search bar:"
msgstr "Xcode で、:strong:`File` を選択し、:strong:`Add Packages...` または:strong:`File` を選択し、:strong:`Swift Packages` を選択し、:strong:`Add Package Dependency` を選択し、検索バーに以下の URL を入力します："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:79
msgid "``https://github.com/signalfx/splunk-otel-ios``"
msgstr "``https://github.com/signalfx/splunk-otel-ios``"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:81 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:167
msgid "Select :guilabel:`Add Package` to install the package."
msgstr ":guilabel:`Add Package` を選択してパッケージをインストールする。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:83
msgid "If you are also using CocoaPods, add the SPM package to the app's project, not to the Pods project in your workspace."
msgstr "CocoaPodsも使用している場合は、ワークスペースのPodsプロジェクトではなく、アプリのプロジェクトにSPMパッケージを追加します。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:86 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:170
msgid "CocoaPods"
msgstr "CocoaPods"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:88
msgid "To install the iOS RUM library using CocoaPods follow these steps:"
msgstr "CocoaPodsを使用してiOS RUMライブラリをインストールするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:90 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:174
msgid "Make sure your project is using CocoaPods."
msgstr "プロジェクトがCocoaPodsを使用していることを確認してください。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:92
msgid "Add ``pod 'SplunkOtel`` to your Podfile."
msgstr "Podfileに``pod 'SplunkOtel`` 。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:94 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:178
msgid "Run ``pod install --repo-update`` in the directory where the Podfile is located."
msgstr "Podファイルがあるディレクトリで``pod install --repo-update`` 。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:96 ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:180
msgid "After installing the pod, make sure to open the .xcworkspace file instead of the .xcodeproj file."
msgstr "ポッドをインストールしたら、.xcodeprojファイルではなく、.xcworkspaceファイルを開くようにしてください。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:102
msgid "Initialize the iOS RUM package"
msgstr "iOS RUMパッケージを初期化する"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:104
msgid "Follow these steps to initialize the iOS RUM package."
msgstr "以下の手順に従って、iOS RUMパッケージを初期化してください。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:106
msgid "Initialize the iOS RUM library with your configuration parameters:"
msgstr "iOS RUMライブラリを設定パラメータで初期化します："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:139
msgid "Deploy the changes to your application."
msgstr "変更をアプリケーションにデプロイする。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:144
msgid "Activate crash reporting"
msgstr "クラッシュレポートの有効化"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:146
msgid "The Splunk iOS Crash Reporting module adds crash reporting to the iOS RUM library using PLCrashReporter."
msgstr "Splunk iOS クラッシュレポートモジュールは、PLCrashReporter を使用して iOS RUM ライブラリにクラッシュレポートを追加します。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:148
msgid "Before activating crash reporting in the iOS RUM library, deactivate any other crash reporting package or library in your application. Existing crash reporting functionality might produce unexpected results, including build failures."
msgstr "iOS RUMライブラリでクラッシュレポートを有効にする前に、アプリケーション内の他のクラッシュレポートパッケージまたはライブラリを無効にしてください。既存のクラッシュ報告機能では、ビルドの失敗など、予期せぬ結果が生じる可能性がある。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:150
msgid "To activate crash reporting in the iOS RUM library, follow these steps."
msgstr "iOS RUMライブラリでクラッシュレポートを有効にするには、以下の手順に従ってください。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:153
msgid "Add the dependency"
msgstr "依存関係の追加"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:155
msgid "To add the iOS Crash Reporting package to your project, follow the steps for your package manager."
msgstr "iOS Crash Reportingパッケージをプロジェクトに追加するには、パッケージマネージャの手順に従ってください。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:165
msgid "``https://github.com/signalfx/splunk-otel-ios-crashreporting``"
msgstr "``https://github.com/signalfx/splunk-otel-ios-crashreporting``"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:172
msgid "To install the iOS Crash Reporting package using CocoaPods follow these steps:"
msgstr "CocoaPodsを使用してiOS Crash Reportingパッケージをインストールするには、以下の手順に従います："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:176
msgid "Add ``pod 'SplunkOtelCrashReporting`` to your Podfile."
msgstr "Podfileに``pod 'SplunkOtelCrashReporting`` 。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:183
msgid "Initialize Crash Reporting"
msgstr "クラッシュ報告の初期化"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:185
msgid "Initialize the crash reporting module with your configuration parameters:"
msgstr "設定パラメータでクラッシュレポートモジュールを初期化します："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:225
msgid "Symbolication is not supported."
msgstr "シンボリケーションには対応していない。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:230
msgid "Build an XCFramework"
msgstr "XCFrameworkの構築"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:232
msgid "If you want to import the iOS RUM Agent as a framework into your project, follow these steps:"
msgstr "iOS RUM Agentをフレームワークとしてプロジェクトにインポートしたい場合は、以下の手順に従ってください："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:234
msgid "Check the build settings"
msgstr "ビルド設定を確認する"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:236
msgid "Clone the :new-page:`splunk-otel-ios <https://github.com/signalfx/splunk-otel-ios>` repository and open the SplunkRumWorkspace.xcworkspace file in Xcode."
msgstr ":new-page:`splunk-otel-ios<https://github.com/signalfx/splunk-otel-ios>` リポジトリをクローンし、Xcode で SplunkRumWorkspace.xcworkspace ファイルを開きます。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:238
msgid "Navigate to the :guilabel:`Build Settings` tab on the ``SplunkOtel`` target and make sure the following settings are present:"
msgstr "``SplunkOtel`` ターゲットの:guilabel:`Build Settings` タブに移動し、以下の設定があることを確認する："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:240
msgid ":strong:`Skip Install`: No"
msgstr ":strong:`インストールをスキップ` ：いいえ"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:241
msgid ":strong:`Build Libraries for Distribution`: Yes"
msgstr ":strong:`配布用ライブラリのビルド` ：はい"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:243
msgid "Create a new archives directory"
msgstr "新しいアーカイブディレクトリを作成する"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:245
msgid "Open a terminal and navigate to the directory where the SplunkRum.xcodeproj file is located, for example ``SplunkRumWorkspace/SplunkRum``."
msgstr "ターミナルを開き、SplunkRum.xcodeproj ファイルがあるディレクトリに移動します。たとえば、``SplunkRumWorkspace/SplunkRum``."

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:247
msgid "Run the following command to create a new archives directory containing the ``SplunkRum-iOS.xcarchive`` file:"
msgstr "以下のコマンドを実行して、``SplunkRum-iOS.xcarchive`` ファイルを含む新しいアーカイブ ディレクトリを作成します："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:253
msgid "Repeat the process for the simulator platform:"
msgstr "シミュレーターのプラットフォームでもこのプロセスを繰り返します："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:259
msgid "Create the new XCFramework"
msgstr "新しいXCFrameworkを作成する。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:261
msgid "Run the following command to create the XCFramework:"
msgstr "以下のコマンドを実行し、XCFrameworkを作成する："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:267
msgid "Import the XCFramework into your project"
msgstr "プロジェクトにXCFrameworkをインポートする。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:269
msgid "Open your project in Xcode and drag the SplunkOtel.xcframework file into the project navigator. This automatically imports the framework."
msgstr "Xcode でプロジェクトを開き、SplunkOtel.xcframework ファイルをプロジェクトナビゲータにドラッグします。これで自動的にフレームワークがインポートされる。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:280 ../../gdi/get-data-in/rum/react/install-rum-react.rst:194
msgid "The APM environment variable for controlling the ``Server-Timing`` header  is ``SPLUNK_TRACE_RESPONSE_HEADER_ENABLED``. Set ``SPLUNK_TRACE_RESPONSE_HEADER_ENABLED=true`` to link to Splunk APM."
msgstr "``Server-Timing`` ヘッダーを制御するための APM 環境変数は``SPLUNK_TRACE_RESPONSE_HEADER_ENABLED`` 。Splunk APM にリンクするように``SPLUNK_TRACE_RESPONSE_HEADER_ENABLED=true`` を設定する。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:285
msgid "Instrument iOS WebViews using the Browser RUM library"
msgstr "Browser RUMライブラリを使用したiOS WebViewのインストゥルメント"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:287
msgid "You can use Mobile RUM instrumentation and Browser RUM instrumentation simultaneously to see RUM data combined in one stream. You can do this by sharing the ``splunk.rumSessionId`` between both instrumentations."
msgstr "モバイルRUM計測とブラウザRUM計測を同時に使用して、RUMデータを1つのストリームにまとめて見ることができます。両方のインストゥルメント間で``splunk.rumSessionId`` を共有することで実現できます。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:289
msgid "The following Swift snippet shows how to integrate iOS RUM with Splunk Browser RUM:"
msgstr "次の Swift のスニペットは、iOS RUM を Splunk Browser RUM と統合する方法を示しています："

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:309
msgid "To remove or change attributes in your spans, such as personally identifiable information (PII), see :ref:`ios-rum-span-filtering`."
msgstr "個人を特定できる情報（PII）など、スパンの属性を削除または変更するには、:ref:`ios-rum-span-filtering` を参照してください。"

#: ../../gdi/get-data-in/rum/ios/install-rum-ios.rst:314
msgid "The Splunk OpenTelemetry Instrumentation for iOS is open-source software. You can contribute to its improvement by creating pull requests in GitHub. To learn more, see the :new-page:`contributing guidelines <https://github.com/signalfx/splunk-otel-ios/blob/main/CONTRIBUTING.md>` in GitHub."
msgstr "Splunk OpenTelemetry Instrumentation for iOS はオープンソースソフトウェアです。GitHubでプルリクエストを作成することで、改良に貢献することができる。詳しくは、GitHub の:new-page:`貢献ガイドライン<https://github.com/signalfx/splunk-otel-ios/blob/main/CONTRIBUTING.md>` をご覧ください。"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:-1
msgid "Manually instrument iOS applications for Splunk Observability Cloud real user monitoring / RUM using the iOS RUM library to collect additional telemetry, sanitize Personal Identifiable Information (PII), add global attributes, and more."
msgstr "iOS RUM ライブラリを使用して、Splunk Observability Cloud リアルユーザーモニタリング / RUM 用に iOS アプリケーションを手動でインストルメントし、追加のテレメトリを収集したり、個人識別情報 (PII) をサニタイズしたり、グローバル属性を追加したりできます。"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:5
msgid "Manually instrument iOS applications"
msgstr "iOSアプリケーションを手動で計測する"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:10
msgid "You can manually instrument iOS applications for Splunk RUM using the iOS RUM library to collect additional telemetry, sanitize Personal Identifiable Information (PII), add global attributes, and more."
msgstr "iOS RUM ライブラリを使用して、Splunk RUM 用に iOS アプリケーションを手動でインストルメンテーションし、追加のテレメトリを収集したり、個人識別情報 (PII) をサニタイズしたり、グローバル属性を追加したりすることができます。"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:17
msgid "You can modify or drop spans using the ``spanFilter`` function. For example, you can drop or redact spans that contain personally identifiable information (PII)."
msgstr "``spanFilter`` 。例えば、個人を特定できる情報（PII）を含むスパンを削除または編集することができます。"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:35
msgid "Span filtering doesn't work in Objective-C."
msgstr "スパンフィルタリングはObjective-Cでは機能しない。"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:44 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:19
msgid "The following example shows how to define global attributes in your code:"
msgstr "次の例は、コード内でグローバル属性を定義する方法を示しています："

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:66
msgid "Manually change screen names"
msgstr "手動でスクリーン名を変更する"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:68
msgid "By default, the iOS RUM library collects the name set in the :code:`ViewController`. You can customize the screen names for your application by using the ``setScreenName`` function. The custom name persists until your next call to :code:`setScreenName`."
msgstr "デフォルトでは、iOS RUM ライブラリは:code:`ViewController` で設定された名前を収集します。``setScreenName`` 機能を使用することで、アプリケーション用に画面名をカスタマイズすることができます。カスタム名は、次に:code:`setScreenName` を呼び出すまで保持されます。"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:70
msgid "The following example shows how to customize the name of an account settings screen:"
msgstr "次の例は、アカウント設定画面の名前をカスタマイズする方法を示している："

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:76
msgid "When calling the :code:`setScreenName` function, automatic screen name instrumentation is deactivated to avoid overwriting custom names."
msgstr ":code:`setScreenName` 関数を呼び出すと、カスタム名の上書きを避けるため、スクリーン名の自動インストゥルメンテーションが解除される。"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:78
msgid "Use ``setScreenName`` in all the views of your application to avoid inconsistent names in your data."
msgstr "アプリケーションのすべてのビューで``setScreenName`` を使用し、データの名前の不統一を避ける。"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:85
msgid "By default, the iOS RUM library doesn't automatically link traces to users of your site. However, you might need to collect user metadata to filter or debug traces."
msgstr "デフォルトでは、iOSのRUMライブラリは、あなたのサイトのユーザーにトレースを自動的にリンクしません。しかし、トレースのフィルタリングやデバッグのために、ユーザーのメタデータを収集する必要があるかもしれません。"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:115 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:69
msgid "Report custom events"
msgstr "カスタムイベントの報告"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:117
msgid "You can use the OpenTelemetry Swift APIs to report custom events happening in your iOS application."
msgstr "OpenTelemetry Swift API を使って、iOS アプリケーションで起こっているカスタムイベントをレポートすることができます。"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:119 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:73
msgid "The following example shows how to use the OTel Swift API to report on a function you want to time:"
msgstr "次の例では、OTel Swift API を使用して、時間を設定したい関数をレポートする方法を示します："

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:133
msgid "This other example shows how to record an event with no duration, that is, which happens in an instant:"
msgstr "この他の例では、持続時間のないイベント、つまり一瞬に起こるイベントを記録する方法を示している："

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:149 ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:92
msgid "You can report handled errors, exceptions, and messages using the ``reportError`` function."
msgstr "``reportError`` 関数を使用して、処理されたエラー、例外、メッセージを報告することができます。"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:151
msgid "The following example shows how to report the :code:`example_error`:"
msgstr "次の例は、:code:`example_error` を報告する方法を示している："

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:157
msgid "``reportError`` overloads are available for ``String``, ``Error``, and ``NSException``."
msgstr "``reportError`` オーバーロードは、``String`` 、``Error`` 、``NSException`` で利用できる。"

#: ../../gdi/get-data-in/rum/ios/manual-rum-ios-instrumentation.rst:164
msgid "The iOS RUM library collects server trace context using back-end data provided by APM instrumentation through the ``Server-Timing`` header. In some cases, you might want to generate the header manually."
msgstr "iOS RUMライブラリは、``Server-Timing`` ヘッダを通じてAPMインスツルメンテーションから提供されるバックエンドデータを使用して、サーバートレースコンテキストを収集する。場合によっては、手動でヘッダーを生成したいかもしれない。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:-1
msgid "Understand which RUM data you collect from iOS applications when using Splunk Real User Monitoring (RUM)."
msgstr "Splunk Real User Monitoring (RUM) を使用して iOS アプリケーションから収集する RUM データを理解します。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:10
msgid "The iOS RUM library includes a package that collects the following types of data about your iOS application."
msgstr "iOS RUMライブラリには、iOSアプリケーションに関する以下のタイプのデータを収集するパッケージが含まれています。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:21
msgid "The following tables list all of the metrics available in Splunk RUM for iOS."
msgstr "以下の表は、Splunk RUM for iOS で利用可能なすべてのメトリクスの一覧です。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:38
msgid "A crash happens when a user encounters an error and has to exit the app."
msgstr "クラッシュは、ユーザーがエラーに遭遇し、アプリを終了しなければならないときに起こる。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:41
msgid "Total number of reported errors in the given time range."
msgstr "指定された時間範囲内で報告されたエラーの総数。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:46
msgid "Network back-end latency"
msgstr "ネットワーク・バックエンドの待ち時間"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:47
msgid "The p75 time in nanoseconds for the network request latency in the given time range."
msgstr "指定された時間範囲内のネットワーク要求待ち時間のp75時間（ナノ秒）。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:76 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:32
msgid "``SpanId``"
msgstr "``SpanId``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:79 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:35
msgid "``ParentSpanId``"
msgstr "``ParentSpanId``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:97 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:53
msgid "``TraceFlags``"
msgstr "``TraceFlags``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:98 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:101 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:54 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:57
msgid "Struct"
msgstr "構造"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:99 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:55
msgid "Represents global trace options. Options are propagated to all child spans and determine features such as whether a span is traced."
msgstr "グローバルトレースオプションを表す。オプションはすべての子スパンに伝搬され、スパンがトレースされるかどうかなどの機能を決定する。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:100 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:56
msgid "``TraceState``"
msgstr "``TraceState``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:102 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:58
msgid "Carries tracing-system specific context in a list of key-value pairs."
msgstr "トレースシステム固有のコンテキストをキーと値のペアのリストで運ぶ。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:103 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:59
msgid "``SpanKind``"
msgstr "``SpanKind``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:104 ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:356 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:60
msgid "Enum"
msgstr "列挙"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:105 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:61
msgid "Type of span. Use it to set additional relationships between spans. The default value is ``Internal``."
msgstr "スパンの種類これを使用して、スパン間の関係をさらに設定する。デフォルト値は``Internal`` 。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:107 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:63
msgid "Supported values are:"
msgstr "サポートされる値は以下の通り："

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:109 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:65
msgid "Internal"
msgstr "内部"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:110 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:66
msgid "Server"
msgstr "サーバー"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:111 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:67
msgid "Client"
msgstr "クライアント"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:112 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:68
msgid "Producer"
msgstr "プロデューサー"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:113 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:69
msgid "consumer"
msgstr "消費者"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:115 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:71
msgid "The following table describes each value of ``SpanKind``:"
msgstr "次の表では、``SpanKind`` の各値について説明する："

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:124 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:80
msgid "``Internal``"
msgstr "``Internal``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:125 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:81
msgid "Default value. Indicates that the span is used internally."
msgstr "デフォルト値。スパンが内部的に使用されていることを示す。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:126 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:82
msgid "``Server``"
msgstr "``Server``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:127 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:83
msgid "Indicates that the span covers server-side handling of an RPC or other remote request."
msgstr "このスパンが、RPCやその他のリモートリクエストのサーバーサイドでの処理をカバーしていることを示す。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:128 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:84
msgid "``Client``"
msgstr "``Client``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:129 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:85
msgid "Indicates that the span covers the client-side wrapper around an RPC or other remote request."
msgstr "スパンがRPCや他のリモートリクエストのクライアント側ラッパーをカバーしていることを示す。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:130 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:86
msgid "``Producer``"
msgstr "``Producer``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:131 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:87
msgid "Indicates that the span describes producer sending a message to a broker."
msgstr "スパンが、プロデューサーがブローカーにメッセージを送信することを示す。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:132 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:88
msgid "``Consumer``"
msgstr "``Consumer``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:133 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:89
msgid "Indicates that the span describes consumer receiving a message from a broker."
msgstr "スパンが、ブローカーからメッセージを受信するコンシューマーを記述していることを示す。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:138
msgid "By default, the iOS RUM library adds the following attributes to all spans:"
msgstr "デフォルトでは、iOSのRUMライブラリはすべてのスパンに以下の属性を追加します："

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:150
msgid "Application name, as defined by :code:`using(Bundle.main.infoDictionary)`."
msgstr "アプリケーション名。:code:`using(Bundle.main.infoDictionary)` で定義されている。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:167
msgid "By default, the iOS RUM library adds the following resource attributes to all spans:"
msgstr "デフォルトでは、iOS RUMライブラリはすべてのスパンに以下のリソース属性を追加します："

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:177
msgid "``environment``"
msgstr "``environment``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:179
msgid "Name of the deployment environment. For example, ``dev``. Defined using :code:`deploymentEnvironment(environment: <string>)`."
msgstr "配置環境の名前。例えば、``dev`` 。:code:`deploymentEnvironment(environment: <string>)` を使って定義されている。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:182 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:129
msgid "The model name for the device."
msgstr "デバイスのモデル名。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:185
msgid "Always set to ``iOS``."
msgstr "常に``iOS`` に設定されている。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:188 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:141
msgid "Version of the operating system."
msgstr "オペレーティングシステムのバージョン。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:191
msgid "Components of the span. For example, ``appstart``."
msgstr "スパンの構成要素。例えば、``appstart`` 。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:194
msgid "Name of the thread. ``SplunkRum.initialize`` only applies to the main thread."
msgstr "スレッド名。``SplunkRum.initialize`` はメインスレッドにのみ適用される。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:199
msgid "The iOS RUM library collects the following data using its instrumentations. To activate or deactivate specific instrumentations, see :ref:`ios-rum-instrumentation-settings`."
msgstr "iOSのRUMライブラリは、インスツルメンテーションを使って以下のデータを収集する。特定のインストゥルメンテーションをアクティブまたは非アクティブにするには、:ref:`ios-rum-instrumentation-settings` を参照。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:204
msgid "The iOS RUM library adds the following crash reporting attributes to spans that represent uncaught exceptions:"
msgstr "iOS RUMライブラリは、捕捉されない例外を表すスパンに以下のクラッシュ報告属性を追加します："

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:235
msgid "``crash.timestamp``"
msgstr "``crash.timestamp``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:236
msgid "NSDate"
msgstr "エヌエスデー"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:237
msgid "Date and time when the crash report is generated."
msgstr "クラッシュレポートが作成された日時。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:238
msgid "``crash.address``"
msgstr "``crash.address``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:240
msgid "Address of the faulty instruction."
msgstr "不良命令のアドレス。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:260
msgid "Connection type. Possible values are: ``unavailable``, ``cell``, ``wifi``, ``unknown``, ``vpn``."
msgstr "接続タイプ。可能な値は以下のとおりです：``unavailable`` ``cell``,``wifi``,``unknown``,``vpn``."

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:283
msgid "Number of observed slow or frozen frames during a single interval. Intervals last 1 second by default. To change the polling interval duration, pass a positive duration, in milliseconds, to the ``slowFrameDetectionThresholdMs`` and ``frozenFrameDetectionThresholdMs`` settings."
msgstr "1つのインターバル中に観察されたスローまたはフリーズしたフレームの数。インターバルはデフォルトで1秒。ポーリング間隔の期間を変更するには、``slowFrameDetectionThresholdMs`` と``frozenFrameDetectionThresholdMs`` の設定に、ミリ秒単位で正の期間を渡す。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:288
msgid "The iOS RUM library includes instrumentation for the NSURLConnection clients. To activate the instrumentation, see :ref:`ios-rum-instrumentation-settings`."
msgstr "iOS RUM ライブラリには、NSURLConnection クライアントのインスツルメンテーションが含まれています。インストゥルメンテーションを有効にするには、:ref:`ios-rum-instrumentation-settings` を参照。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:328
msgid "The trace ID of the corresponding backend (APM) span, extracted from the ``Server-Timing`` header. See :ref:`integrate-ios-apm-traces` for more information."
msgstr "``Server-Timing`` ヘッダーから抽出された、対応するバックエンド (APM) スパンのトレース ID。詳しくは:ref:`integrate-ios-apm-traces` 。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:331
msgid "The span ID of the corresponding backend (APM) span, extracted from the ``Server-Timing`` header. See :ref:`integrate-ios-apm-traces` for more information."
msgstr "``Server-Timing`` ヘッダーから抽出された、対応するバックエンド（APM）スパンのスパンID。詳しくは:ref:`integrate-ios-apm-traces` 。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:334
msgid "UI actions monitoring"
msgstr "UIアクションのモニタリング"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:336
msgid "UIAction monitoring collects the following attributes:"
msgstr "UIActionモニタリングは以下の属性を収集する："

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:346
msgid "``action.name``"
msgstr "``action.name``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:348
msgid "Name of the UI element as defined by the end user."
msgstr "エンドユーザーが定義したUI要素の名前。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:349
msgid "``target.type``"
msgstr "``target.type``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:351
msgid "Name of screen on which the event happens."
msgstr "イベントが発生した画面の名前。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:352
msgid "``sender.type``"
msgstr "``sender.type``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:354
msgid "UI element that calls the method."
msgstr "メソッドを呼び出すUI要素。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:355
msgid "``event.type``"
msgstr "``event.type``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:357
msgid "The type of the event."
msgstr "イベントの種類。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:360
msgid "Screen transitions monitoring"
msgstr "画面遷移の監視"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:362
msgid "Screen transitions monitoring generates spans whenever a screen changes its state. A screen transition span can have one the following names depending on its state:"
msgstr "画面遷移の監視は、画面の状態が変わるたびにスパンを生成する。画面遷移スパンは、その状態に応じて次のいずれかの名前を持つことができる："

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:364
msgid "``ResignActive``: Tells the delegate that the app is about to become inactive."
msgstr "``ResignActive``:アプリが非アクティブになることをデリゲートに伝える。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:365
msgid "``EnterForeground``: Tells the delegate that the app is about to enter the foreground."
msgstr "``EnterForeground``:アプリがフォアグラウンドに入ろうとしていることをデリゲートに伝える。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:366
msgid "``AppTerminating``: Tells the delegate when the app is about to terminate."
msgstr "``AppTerminating``:アプリの終了をデリゲートに伝える。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:367
msgid "``PresentationTransition``: Tells the delegate that the app has become active for the first time only."
msgstr "``PresentationTransition``:アプリが初めてアクティブになったことをデリゲートに伝える。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:369
msgid "Screen transition spans contain the following attribute:"
msgstr "画面遷移スパンには以下の属性が含まれる："

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:381
msgid "Always ``app-lifecycle``."
msgstr "いつも``app-lifecycle`` 。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:406 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:249
msgid "The type of start. Can be ``cold``, or ``hot``."
msgstr "スタートのタイプ。``cold`` または``hot`` 。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:411
msgid "If you choose to set the latitude and longitude for location data by using the Splunk RUM for iOS APIs, Splunk Observability Cloud uses the information to map the geographical location of the user, such as country, city, and so on."
msgstr "Splunk RUM for iOS API を使用して位置情報の緯度と経度を設定した場合、Splunk Observability Cloud はその情報を使用して、国や都市などのユーザーの地理的位置をマッピングします。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:418
msgid "Optional method"
msgstr "オプション"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:421
msgid "``setLocation``"
msgstr "``setLocation``"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:422
msgid "Double"
msgstr "ダブル"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:423
msgid "Latitude and longitude are appended to every span and event."
msgstr "緯度と経度は、すべてのスパンとイベントに付加される。"

#: ../../gdi/get-data-in/rum/ios/rum-ios-data-model.rst:426
msgid "Splunk Observability Cloud calculates geographical metadata from the latitude and longitude, and then drops the latitude and longitude after processing the data."
msgstr "Splunk Observability Cloud は緯度と経度から地理的メタデータを計算し、データ処理後に緯度と経度を削除します。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:-1
msgid "If your instrumented iOS application is not sending data to Splunk Observability Cloud, or data is missing, follow these steps to identify and resolve the issue."
msgstr "インスツルメンテーションされた iOS アプリケーションが Splunk Observability Cloud にデータを送信しない、またはデータが欠落している場合は、以下の手順に従って問題を特定し、解決してください。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:5
msgid "Troubleshoot iOS instrumentation for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud の iOS インストルメンテーションのトラブルシューティング"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:10
msgid "When you instrument an iOS application using the Splunk OpenTelemetry Instrumentation for iOS and you don't see your data in Splunk Observability Cloud, follow these troubleshooting steps."
msgstr "Splunk OpenTelemetry Instrumentation for iOS を使用して iOS アプリケーションを計測し、Splunk Observability Cloud にデータが表示されない場合は、以下のトラブルシューティング手順に従ってください。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:15
msgid "Steps for troubleshooting iOS OpenTelemetry issues"
msgstr "iOSのOpenTelemetry問題のトラブルシューティングの手順"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:17
msgid "The following steps can help you troubleshoot iOS RUM library issues:"
msgstr "以下の手順は、iOS RUMライブラリの問題のトラブルシューティングに役立ちます："

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:19
msgid ":ref:`ios-check-requirements`"
msgstr ":ref:`ios-check-requirements`"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:20
msgid ":ref:`multiple-ios-tools`"
msgstr ":ref:`multiple-ios-tools`"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:21
msgid ":ref:`activate-ios-debug-logging`"
msgstr ":ref:`activate-ios-debug-logging`"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:28
msgid "See :ref:`ios-rum-requirements` for a complete list of compatible versions and requirements."
msgstr "互換性のあるバージョンと要件の完全なリストについては、:ref:`ios-rum-requirements` を参照してください。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:34
msgid "Make sure you're not using multiple tools"
msgstr "複数のツールを使っていないか確認する"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:36
msgid "Some development and observability tools include functionality similar to Splunk RUM. Using multiple tools for the same purpose, for example crash reporting, might result in undefined behavior. Use only one tool for each purpose."
msgstr "開発・観測ツールの中には、Splunk RUM と同様の機能を持つものもある。例えばクラッシュ報告など、同じ目的のために複数のツールを使用すると、動作が未定義になる可能性がある。1つの目的には1つの道具しか使わない。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:44
msgid "Activating debug logging can help you troubleshoot iOS instrumentation issues."
msgstr "デバッグロギングを有効にすると、iOSインストルメンテーションの問題のトラブルシューティングに役立ちます。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:46
msgid "To activate logging, add the ``debug(enabled: true)`` method to ``SplunkRumBuilder``. For example:"
msgstr "ロギングを有効にするには、``SplunkRumBuilder`` に``debug(enabled: true)`` メソッドを追加する。例えば、こうだ："

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:63
msgid "iOS metrics don't appear in Splunk RUM"
msgstr "iOS のメトリクスが Splunk RUM に表示されない"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:65
msgid "If you can't find telemetry for your iOS app in Splunk RUM, try the following:"
msgstr "Splunk RUM で iOS アプリのテレメトリが見つからない場合は、以下をお試しください："

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:67
msgid "Activate debug logging to search for simulator debug logs. See :ref:`activate-ios-debug-logging`."
msgstr "シミュレータのデバッグログを検索するには、デバッグログを有効にします。:ref:`activate-ios-debug-logging` を参照。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:70
msgid "Make sure that the values of ``rumAuth`` and ``realm`` are defined and correct."
msgstr "``rumAuth`` 、``realm`` の値が正しく定義されていることを確認する。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:69
msgid "The RUM token must be active and part of the org you are trying to send data to."
msgstr "RUMトークンはアクティブでなければならず、データを送信しようとしている組織の一部でなければならない。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:70
msgid "The realm must be the same as your organization's realm."
msgstr "レルムは、あなたの組織のレルムと同じでなければならない。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:72 ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:22
msgid "To find the realm name of your account, follow these steps:"
msgstr "アカウントのレルム名を見つけるには、以下の手順に従ってください："

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:80
msgid "If you've defined a custom ``beaconUrl``, make sure the value is correct."
msgstr "カスタム``beaconUrl`` を定義している場合は、その値が正しいことを確認してください。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:85
msgid "HTTP requests don't appear in Splunk RUM"
msgstr "HTTP リクエストが Splunk RUM に表示されない"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:87
msgid "If HTTP requests don't appear in Splunk RUM, try the following:"
msgstr "HTTP リクエストが Splunk RUM に表示されない場合は、以下をお試しください："

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:89
msgid "Check which library you're using. Splunk RUM doesn't support the deprecated Apple NSURLConnection API. Splunk RUM for iOS supports libraries based on Apple URLSession, which includes other libraries like AFNetworking and AlamoFire."
msgstr "どのライブラリを使用しているか確認してください。Splunk RUM は、非推奨の Apple NSURLConnection API をサポートしていません。Splunk RUM for iOS は Apple URLSession ベースのライブラリをサポートしており、これには AFNetworking や AlamoFire などのライブラリも含まれています。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:90
msgid "Use the ``ignoreUrls`` setting if you already have another telemetry library or SDK configured. See :ref:`ios-rum-settings`."
msgstr "他のテレメトリー・ライブラリーまたはSDKがすでに構成されている場合は、``ignoreUrls`` 設定を使用します。:ref:`ios-rum-settings` を参照。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:91
msgid "Consider using Splunk RUM only for capturing network calls. More than one library or tool capturing network calls might cause issues and undefined behavior."
msgstr "ネットワークコールのキャプチャにのみ Splunk RUM を使用することを検討してください。ネットワーク呼び出しをキャプチャするライブラリやツールが複数あると、問題や未定義の動作が発生する可能性がある。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:96
msgid "Crashes don't appear in Splunk RUM"
msgstr "Splunk RUM にクラッシュが表示されない"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:98
msgid "If crash information doesn't appear in Splunk RUM, try the following:"
msgstr "クラッシュ情報が Splunk RUM に表示されない場合は、以下をお試しください："

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:100
msgid "Make sure that the crash reporting feature of Splunk RUM is the only active crash reporter. For example, if you're also using Crashlytics, deactivate it and try again."
msgstr "Splunk RUM のクラッシュレポート機能が唯一のアクティブなクラッシュレポーターであることを確認してください。たとえば、Crashlyticsも使用している場合は、その機能を停止してからもう一度試してみてください。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:101
msgid "Make sure that you're opening the application after a crash, so that the RUM library can send the report."
msgstr "RUMライブラリーがレポートを送信できるように、クラッシュ後にアプリケーションを開いていることを確認してください。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:106
msgid "Avoid naming collisions"
msgstr "名前の衝突を避ける"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:108
msgid "If your code causes a naming collision, add the module that contains the symbol you want to use. For example, if you declare a type that SplunkOtel also declares, you can add its module name as a prefix."
msgstr "あなたのコードが名前の衝突を引き起こす場合は、使用したいシンボルを含むモジュールを追加してください。たとえば、SplunkOtel も宣言している型を宣言する場合は、そのモジュール名をプレフィックスとして追加します。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:119
msgid "Xcode can't resolve package dependencies"
msgstr "Xcodeがパッケージの依存関係を解決できない"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:121
msgid "If you use any of the dependencies that Splunk RUM already uses, check whether their versions can be resolved to their versioning rules. See the :new-page:`dependencies.txt file <https://github.com/signalfx/splunk-otel-ios/blob/main/dependencies.txt>` in the GitHub repository."
msgstr "Splunk RUM がすでに使用している依存関係のいずれかを使用する場合は、そのバージョンがバージョン管理ルールに解決できるかどうかを確認します。GitHubリポジトリの:new-page:`dependencies.txtファイル<https://github.com/signalfx/splunk-otel-ios/blob/main/dependencies.txt>` 。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:123
msgid "Xcode might inform you that a dependency failed to resolve. If you don't see any versioning rule issue, close and reopen Xcode and try adding the package again."
msgstr "Xcodeは、依存関係の解決に失敗したことを通知するかもしれません。バージョニングルールの問題が表示されない場合は、Xcodeを閉じて開き直し、パッケージを再度追加してみてください。"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:128
msgid "Avoid SQLite redefinition errors"
msgstr "SQLiteの再定義エラーを避ける"

#: ../../gdi/get-data-in/rum/ios/troubleshooting.rst:130
msgid "If you're using another tool that uses SQLite, like WCDB, try replacing the ``use_frameworks!`` line in your Podfile with ``use_modular_headers!``."
msgstr "WCDBのようにSQLiteを使う他のツールを使っている場合は、Podfileの``use_frameworks!`` 行を``use_modular_headers!``."

#: ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:-1
msgid "Configure the Splunk Observability Cloud real user monitoring / RUM instrumentation for your React Native applications."
msgstr "Splunk Observability Cloud リアルユーザーモニタリング / RUM インストルメンテーションを React Native アプリケーション用に設定します。"

#: ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:5
msgid "Configure the Splunk React Native RUM instrumentation"
msgstr "Splunk React Native RUM インストルメンテーションを設定する"

#: ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:10
msgid "You can configure the Splunk Distribution of OpenTelemetry for React Native to add custom attributes, adapt the instrumentation to your environment and application, and more."
msgstr "OpenTelemetry for React Native の Splunk ディストリビューションを設定することで、カスタム属性を追加したり、インスツルメンテーションを環境やアプリケーションに適応させたりすることができます。"

#: ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:12
msgid "To configure the React Native RUM agent, add the key-value pairs to a ``ReactNativeConfiguration`` object. For example:"
msgstr "React Native RUMエージェントを設定するには、``ReactNativeConfiguration`` オブジェクトにキーと値のペアを追加します。例えば、こうだ："

#: ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:34
msgid "Use the following settings to configure the React Native RUM agent:"
msgstr "以下の設定を使用して、React Native RUMエージェントを構成します："

#: ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:42
msgid ":code:`beaconEndpoint`"
msgstr ":code:`beaconEndpoint`"

#: ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:43
msgid "Ingest URL to which the agent sends collected telemetry. The URL must contain your realm in Splunk Observability Cloud. For example, ``https://rum-ingest.us0.signalfx.com/v1/rum`` is the ingest URL for the ``us0`` realm."
msgstr "エージェントが収集したテレメトリを送信するインジェスト URL。URL には Splunk Observability Cloud のレルムを含める必要があります。例えば、``https://rum-ingest.us0.signalfx.com/v1/rum`` は、``us0`` レルムのインジェストURLである。"

#: ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:44
msgid ":code:`rumAccessToken`"
msgstr ":code:`rumAccessToken`"

#: ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:47
msgid "Sets additional attributes added to all spans. Attributes are defined as an array of comma-separated key-value pairs. For example: ``[\"key1\":\"value1\",\"key2\":3]``. See :ref:`react-rum-globalattributes`."
msgstr "すべてのスパンに追加される属性を設定します。属性は、カンマで区切られたキーと値のペアの配列として定義されます。例：``[\"key1\":\"value1\",\"key2\":3]``.:ref:`react-rum-globalattributes` を参照。"

#: ../../gdi/get-data-in/rum/react/configure-rum-react-instrumentation.rst:50
msgid ":code:`ignoreUrls`"
msgstr ":code:`ignoreUrls`"

#: ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:10
msgid "Install the React Native RUM agent"
msgstr "React Native RUMエージェントをインストールする"

#: ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:10 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:5
msgid "React Native RUM data model"
msgstr "React Native RUMデータモデル"

#: ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:-1
msgid "Learn how to instrument your React Native applications for Splunk Observability Cloud real user monitoring / RUM and what data you can collect."
msgstr "Splunk Observability Cloud リアルユーザーモニタリング / RUM で React Native アプリケーションを計測する方法と、収集できるデータについて説明します。"

#: ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:5
msgid "Instrument React Native applications for Splunk RUM"
msgstr "Splunk RUM 向けに React Native アプリケーションをインストゥルメントする"

#: ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:18
msgid "Instrument your React Native applications to get Real User Monitoring (RUM) data into Splunk Observability Cloud. With Splunk RUM for Mobile, you can gain insight about the performance and health of your mobile apps."
msgstr "Real User Monitoring (RUM) データを Splunk Observability Cloud に取り込むために、React Native アプリケーションをインスツルメンテーションします。Splunk RUM for Mobile を使用すると、モバイルアプリのパフォーマンスと健全性を把握できます。"

#: ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:20 ../../gdi/get-data-in/rum/react/install-rum-react.rst:14
msgid "This distribution is currently in beta. Don't use it in production environments without extensive prior testing. Some features might not be supported or might have constrained capabilities."
msgstr "このディストリビューションは現在ベータ版である。事前の十分なテストなしに本番環境で使用しないでください。機能によってはサポートされていないものや、機能に制約があるものもあります。"

#: ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:28
msgid "To generate all the basic installation commands for your environment and application, use the React Native guided setup. To access the React Native guided setup, follow these steps:"
msgstr "環境とアプリケーションの基本的なインストールコマンドをすべて生成するには、React Nativeガイド付きセットアップを使用します。React Nativeのガイド付きセットアップにアクセスするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:32
msgid "Open the :new-page:`React Native guided setup <https://login.signalfx.com/#/gdi/scripted/react-native/>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`React Native guided setup<https://login.signalfx.com/#/gdi/scripted/react-native/>` を開く。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:40
msgid "Click the :guilabel:`React Native Instrumentation` tile to open the React Native guided setup."
msgstr ":guilabel:`React Native Instrumentation` タイルをクリックし、React Native ガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:42
msgid "For detailed installation instructions and requirements, see :ref:`react-rum-install`."
msgstr "詳細なインストール手順と要件については、:ref:`react-rum-install` を参照してください。"

#: ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:50
msgid "Learn about the Splunk React Native RUM data model. See :ref:`rum-react-data`."
msgstr "Splunk React Native RUM データモデルについて学びましょう。:ref:`rum-react-data` を参照。"

#: ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:51
msgid ":ref:`configure-react-instrumentation`."
msgstr ":ref:`configure-react-instrumentation`."

#: ../../gdi/get-data-in/rum/react/get-react-native-data-in.rst:52
msgid ":ref:`manual-rum-react-instrumentation`."
msgstr ":ref:`manual-rum-react-instrumentation`."

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:-1
msgid "Instrument your React Native applications for Splunk Observability Cloud real user monitoring / RUM using the React Native RUM agent from the Splunk Distribution of OpenTelemetry for React Native."
msgstr "OpenTelemetry for React Native の Splunk ディストリビューションから React Native RUM エージェントを使用して、React Native アプリケーションを Splunk Observability Cloud リアルユーザーモニタリング / RUM にインスツルメンテーションします。"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:5
msgid "Install the React Native RUM agent for Splunk RUM"
msgstr "Splunk RUM 用 React Native RUM エージェントをインストールする"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:10
msgid "You can instrument your React Native and Expo applications using the Splunk Distribution of OpenTelemetry for React Native. Splunk APM is not required to instrument Splunk RUM for React Native."
msgstr "OpenTelemetry for React Native の Splunk ディストリビューションを使用して、React Native および Expo アプリケーションを計測できます。Splunk RUM for React Native の計測に Splunk APM は必要ありません。"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:12
msgid "To instrument your React Native or Expo application and get data into Splunk RUM, follow the instructions on this page."
msgstr "React Native または Expo アプリケーションを計測して Splunk RUM にデータを取り込むには、このページの指示に従ってください。"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:21
msgid "Splunk RUM for Mobile supports React Native 0.68 and higher."
msgstr "Splunk RUM for Mobile は React Native 0.68 以降をサポートしています。"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:23
msgid "The library is also compatible with the following frameworks and libraries:"
msgstr "このライブラリーは以下のフレームワークやライブラリーとも互換性がある："

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:25
msgid "Expo framework"
msgstr "万博の枠組み"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:26
msgid "React Navigation 5 and 6"
msgstr "リアクト・ナビゲーション5と6"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:28
msgid "To instrument applications using React Native 0.67 and lower, see :ref:`rn-lower-versions`."
msgstr "React Native 0.67以下を使用しているアプリケーションを計測するには、:ref:`rn-lower-versions` を参照してください。"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:33
msgid "Instrument your React Native application for Splunk RUM"
msgstr "Splunk RUM 用に React Native アプリケーションをインストゥルメントする"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:35
msgid "Before you instrument and configure Splunk RUM for your React Native application, understand which data RUM collects about your application and determine the scope of what you want to monitor. See :ref:`rum-data-collected`."
msgstr "React Native アプリケーションに Splunk RUM をインストールして設定する前に、RUM がアプリケーションについて収集するデータを理解し、監視する範囲を決定します。:ref:`rum-data-collected` を参照。"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:37
msgid ":strong:`Tip:` To generate all the basic installation commands for your environment and application, use the React Native Instrumentation guided setup. To access the React Native Instrumentation guided setup, follow these steps:"
msgstr ":strong:`ヒント:` 環境とアプリケーションの基本的なインストールコマンドをすべて生成するには、React Native Instrumentationガイド付きセットアップを使用します。React Native Instrumentationのガイド付きセットアップにアクセスするには、以下の手順に従います："

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:47
msgid "Select the :guilabel:`React Native Instrumentation` tile to open the React Native Instrumentation guided setup."
msgstr ":guilabel:`React Native Instrumentation` タイルを選択し、React Native Instrumentation ガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:52
msgid "Import and initialize the React Native RUM package"
msgstr "React Native RUMパッケージのインポートと初期化"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:54
msgid "Follow these steps to import and initialize the React Native RUM package."
msgstr "以下の手順に従って、React Native RUMパッケージをインポートして初期化します。"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:56
msgid "Install the React Native RUM library using npm or yarn:"
msgstr "npmまたはyarnを使用してReact Native RUMライブラリをインストールします："

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:66
msgid "For iOS, also install the pod:"
msgstr "iOSの場合は、ポッドもインストールする："

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:72
msgid "Edit the initialization parameters to set the Splunk Observability Cloud realm, RUM access token, and basic attributes:"
msgstr "初期化パラメーターを編集して、Splunk Observability Cloud レルム、RUM アクセストークン、および基本属性を設定します："

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:83
msgid "Wrap your entire App component using the ``OtelWrapper`` component:"
msgstr "``OtelWrapper`` コンポーネントを使用して、App コンポーネント全体をラップします："

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:98
msgid "Alternatively, you can initialize the library early in your code. See :ref:`react-alternative-init`."
msgstr "あるいは、コードの早い段階でライブラリを初期化することもできる。:ref:`react-alternative-init` を参照。"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:100
msgid "(Optional) To instrument React Navigation, adapt your code as in the following example:"
msgstr "(オプション）React Navigationをインストゥルメントするには、次の例のようにコードを変更してください："

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:122
msgid "For more information, see :new-page:`React Navigation <https://github.com/react-navigation/react-navigation>` on GitHub."
msgstr "詳細については、GitHub の:new-page:`React Navigation<https://github.com/react-navigation/react-navigation>` を参照してください。"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:127
msgid "Additional step for apps using React Native 0.67 and lower"
msgstr "React Native 0.67以下を使用しているアプリのための追加ステップ"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:129
msgid "To instrument applications running on React Native version 0.67 and lower, edit your metro.config.js file to force Metro to use browser specific packages. For example:"
msgstr "React Nativeバージョン0.67以下で動作するアプリケーションを計測するには、metro.config.jsファイルを編集して、Metroがブラウザ固有のパッケージを使用するようにします。例えば、こうだ："

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:171
msgid "Alternative initialization method"
msgstr "別の初期化方法"

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:173
msgid "As an alternative to wrapping the App component, you can initialize the React Native RUM library as early in your app lifecycle as possible. For example:"
msgstr "Appコンポーネントをラップする代わりに、アプリのライフサイクルのできるだけ早い段階でReact Native RUMライブラリを初期化することができます。例えば、こうだ："

#: ../../gdi/get-data-in/rum/react/install-rum-react.rst:199
msgid "The Splunk Distribution of OpenTelemetry for React Native is open-source software. You can contribute to its improvement by creating pull requests in GitHub. To learn more, see the :new-page:`contributing guidelines <https://github.com/signalfx/splunk-otel-react-native/blob/main/CONTRIBUTING.md>` in GitHub."
msgstr "OpenTelemetry for React Native の Splunk ディストリビューションはオープンソースソフトウェアです。GitHubでプルリクエストを作成することで、改良に貢献することができる。詳しくは、GitHub の:new-page:`貢献ガイドライン<https://github.com/signalfx/splunk-otel-react-native/blob/main/CONTRIBUTING.md>` をご覧ください。"

#: ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:-1
msgid "Manually instrument React Native applications for Splunk Observability Cloud real user monitoring / RUM using the React Native RUM agent to collect additional telemetry, sanitize Personal Identifiable Information (PII), add global attributes, and more."
msgstr "React Native RUM エージェントを使用して、Splunk Observability Cloud リアルユーザーモニタリング / RUM 用に React Native アプリケーションを手動でインスツルメンテーションし、追加のテレメトリを収集したり、個人識別情報 (PII) をサニタイズしたり、グローバル属性を追加したりできます。"

#: ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:5
msgid "Manually instrument React Native applications"
msgstr "React Nativeアプリケーションを手動でインストルメントする"

#: ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:10
msgid "You can manually instrument React Native applications for Splunk RUM to collect additional telemetry, sanitize Personal Identifiable Information (PII), add global attributes, and more."
msgstr "Splunk RUM 用の React Native アプリケーションを手動でインストルメンテーションして、追加の遠隔測定を収集したり、個人識別情報 (PII) をサニタイズしたり、グローバル属性を追加したりすることができます。"

#: ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:33
msgid "By default, the React Native RUM agent doesn't automatically link traces to users of your site. However, you might need to collect user metadata to filter or debug traces."
msgstr "デフォルトでは、React Native RUMエージェントは、トレースをサイトのユーザーに自動的にリンクしません。しかし、トレースのフィルタリングやデバッグのために、ユーザーのメタデータを収集する必要があるかもしれません。"

#: ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:71
msgid "You can use the OpenTelemetry Swift APIs to report custom events happening in your React Native application."
msgstr "OpenTelemetry Swift API を使って、React Native アプリケーションで起こっているカスタムイベントをレポートすることができます。"

#: ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:94
msgid "The following example shows how to report a custom error:"
msgstr "次の例は、カスタム・エラーを報告する方法を示している："

#: ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:103
msgid "Update location data"
msgstr "位置情報の更新"

#: ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:105
msgid "The RUM library includes a method for setting latitude ang longitde as global attributes. For example:"
msgstr "RUMライブラリには、緯度経度をグローバル属性として設定するメソッドが含まれています。例えば、こうだ："

#: ../../gdi/get-data-in/rum/react/manual-rum-react-instrumentation.rst:117
msgid "The React Native RUM agent collects server trace context using back-end data provided by APM instrumentation through the ``Server-Timing`` header. In some cases, you might want to generate the header manually."
msgstr "React Native RUMエージェントは、APMインスツルメンテーションから``Server-Timing`` ヘッダーを通じて提供されるバックエンドデータを使用して、サーバートレースコンテキストを収集する。場合によっては、手動でヘッダーを生成したいかもしれない。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:-1
msgid "Understand which RUM data you collect from React Native applications when using Splunk Real User Monitoring (RUM)."
msgstr "Splunk Real User Monitoring (RUM) を使用して React Native アプリケーションから収集する RUM データを理解します。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:10
msgid "The React Native RUM agent includes a package that collects the following types of data about your React Native application."
msgstr "React Native RUMエージェントには、React Nativeアプリケーションに関する以下の種類のデータを収集するパッケージが含まれています。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:94
msgid "By default, the React Native RUM agent adds the following attributes to all spans:"
msgstr "デフォルトでは、React Native RUMエージェントは、すべてのスパンに以下の属性を追加します："

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:117
msgid "By default, the React Native RUM agent adds the following resource attributes to all spans:"
msgstr "デフォルトでは、React Native RUMエージェントは、すべてのスパンに以下のリソース属性を追加します："

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:132
msgid "The identifier or name for the device."
msgstr "デバイスの識別子または名前。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:135
msgid "Name of the operating system. Possible values are ``iOS`` and ``Android``."
msgstr "オペレーティングシステムの名前。設定可能な値は``iOS`` と``Android`` 。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:138
msgid "Always set to ``linux``. Only available in Android."
msgstr "常に``linux`` に設定されている。アンドロイドのみ。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:142
msgid "``screen.name``"
msgstr "``screen.name``"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:144
msgid "If the React Navigation instrumentation is activated, contains the name of the screen."
msgstr "React Navigationインストルメンテーションが有効になっている場合は、画面の名前が含まれます。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:145
msgid "``last.screen.name``"
msgstr "``last.screen.name``"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:147
msgid "If the React Navigation instrumentation is activated, contains the name of the last screen."
msgstr "React Navigationインスツルメンテーションが有効な場合、最後の画面の名前が含まれます。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:152
msgid "The React Native RUM agent collects the following data using its instrumentations."
msgstr "React Native RUMエージェントは、インスツルメンテーションを使用して以下のデータを収集する。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:155
msgid "Errors"
msgstr "エラー"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:157
msgid "The React Native RUM agent adds the following attributes to spans that represent errors:"
msgstr "React Native RUMエージェントは、エラーを表すスパンに以下の属性を追加します："

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:167
msgid "``error.isFatal``"
msgstr "``error.isFatal``"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:169
msgid "Whether the exception is fatal."
msgstr "致命的な例外かどうか。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:170
msgid "``error.message``"
msgstr "``error.message``"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:172
msgid "Message that describes the exception."
msgstr "例外を説明するメッセージ。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:173
msgid "``error.object``"
msgstr "``error.object``"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:175
msgid "Error object."
msgstr "エラーオブジェクト。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:176
msgid "``error.stack``"
msgstr "``error.stack``"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:178
msgid "Stack trace for the exception."
msgstr "例外のスタックトレース。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:181
msgid "XHR/FETCH"
msgstr "XHR/FETCH"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:183
msgid "XHR/FETCH monitoring produces spans with the name ``HTTP <http-method>`` and the following attributes:"
msgstr "XHR/FETCHモニタリングは、``HTTP <http-method>`` という名前と以下の属性を持つスパンを生成する："

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:195
msgid "HTTP method of the request."
msgstr "リクエストの HTTP メソッド。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:198
msgid "Status code returned by the request."
msgstr "リクエストが返すステータスコード。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:201
msgid "URL of the request."
msgstr "リクエストのURL。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:204 ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:207
msgid "Associated trace identifier. See :ref:`integrate-react-apm-traces`."
msgstr "関連するトレース識別子。:ref:`integrate-react-apm-traces` を参照。"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:210
msgid "React Navigation"
msgstr "リアクト・ナビゲーション"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:212
msgid "Navigation monitoring produces spans with the name ``Created`` and the following attributes:"
msgstr "ナビゲーション・モニタリングは、``Created`` という名前と以下の属性を持つスパンを生成します："

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:224
msgid "``ui``"
msgstr "``ui``"

#: ../../gdi/get-data-in/rum/react/rum-react-data-model.rst:229
msgid "App start monitoring feature generates spans whenever the app performs a cold or warm start."
msgstr "アプリの起動監視機能は、アプリがコールドスタートまたはウォームスタートを行うたびにスパンを生成します。"

#: ../../gdi/get-data-in/rum/rum-instrumentation.rst:10
msgid "Instrument browser-based web applications TOGGLE"
msgstr "ブラウザベースのウェブ・アプリケーションTOGGLE"

#: ../../gdi/get-data-in/rum/rum-instrumentation.rst:10
msgid "Instrument iOS applications TOGGLE"
msgstr "楽器iOSアプリケーションTOGGLE"

#: ../../gdi/get-data-in/rum/rum-instrumentation.rst:10
msgid "Instrument Android applications TOGGLE"
msgstr "楽器AndroidアプリケーションTOGGLE"

#: ../../gdi/get-data-in/rum/rum-instrumentation.rst:10
msgid "Instrument React Native applications TOGGLE"
msgstr "Reactネイティブ・アプリケーションのインストゥルメントTOGGLE"

#: ../../gdi/get-data-in/rum/rum-instrumentation.rst:-1
msgid "Instrument your mobile or web application to send front-end application data to Splunk Observability Cloud real user monitoring / RUM."
msgstr "モバイルまたはウェブアプリケーションをインスツルメンテーションして、フロントエンドのアプリケーションデータを Splunk Observability Cloud リアルユーザーモニタリング / RUM に送信します。"

#: ../../gdi/get-data-in/rum/rum-instrumentation.rst:5
msgid "Instrument mobile and web applications for Splunk RUM"
msgstr "モバイルおよび Web アプリケーションを Splunk RUM で計測する"

#: ../../gdi/get-data-in/rum/rum-instrumentation.rst:18
msgid "Instrument your mobile and web applications to send data to Splunk Real User Monitoring (RUM). Splunk RUM provides visibility into the user behaviors in mobile and web applications. To learn more about Splunk RUM, see :ref:`get-started-rum`."
msgstr "モバイルおよび Web アプリケーションをインスツルメンテーションして、Splunk Real User Monitoring (RUM) にデータを送信します。Splunk RUM は、モバイルおよび Web アプリケーションのユーザー行動を可視化します。Splunk RUM の詳細については、:ref:`get-started-rum` を参照してください。"

#: ../../gdi/get-data-in/rum/rum-instrumentation.rst:20
msgid "You can instrument the following types of application:"
msgstr "以下のようなアプリケーションを使用することができます："

#: ../../gdi/get-data-in/rum/rum-instrumentation.rst:22
msgid ":ref:`Browser-based web applications <browser-rum-gdi>`"
msgstr ":ref:`Browser-based web applications <browser-rum-gdi>`"

#: ../../gdi/get-data-in/rum/rum-instrumentation.rst:23
msgid ":ref:`iOS applications <rum-mobile-ios>`"
msgstr ":ref:`iOS applications <rum-mobile-ios>`"

#: ../../gdi/get-data-in/rum/rum-instrumentation.rst:24
msgid ":ref:`Android applications <rum-mobile-android>`"
msgstr ":ref:`Android applications <rum-mobile-android>`"

#: ../../gdi/get-data-in/rum/rum-instrumentation.rst:25
msgid ":ref:`React Native applications <rum-mobile-react>`"
msgstr ":ref:`React Native applications <rum-mobile-react>`"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:-1
msgid "Configure the agent of the Splunk OpenTelemetry Lambda Layer through environment variables to suit most of your instrumentation needs for AWS Lambda functions."
msgstr "環境変数を通じて Splunk OpenTelemetry Lambda Layer のエージェントを設定することで、AWS Lambda 関数のインスツルメンテーションのほとんどのニーズに対応できます。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:5 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:93
msgid "Configure the Splunk OpenTelemetry Lambda Layer"
msgstr "Splunk OpenTelemetry Lambda Layer を設定する"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:10
msgid "You can configure the Splunk OpenTelemetry Lambda Layer to suit most of your instrumentation needs. In most cases, modifying the basic configuration is enough to get started. See :ref:`set-env-vars-otel-lambda`."
msgstr "Splunk OpenTelemetry Lambda Layer は、ほとんどの計測ニーズに合わせて設定できます。たいていの場合、基本的なコンフィギュレーションを変更するだけで始められる。:ref:`set-env-vars-otel-lambda` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:12
msgid "You can modify the following settings to fully configure the Lambda layer, including options for activating new features that are unique to the Splunk OpenTelemetry Lambda Layer."
msgstr "以下の設定を変更することで、Splunk OpenTelemetry Lambda Layer 固有の新機能を有効にするオプションを含め、Lambda Layer を完全に構成することができます。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:19
msgid "The following settings activate the Lambda layer to send data to Splunk Observability Cloud:"
msgstr "以下の設定は、Splunk Observability Cloud にデータを送信する Lambda レイヤーを有効にします："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:27
msgid "The name of your organization's realm. If you don't indicate a realm, you must define custom endpoints for trace data and metric data. See :ref:`trace-exporters-settings-lambda` and :ref:`metrics-configuration-lambda`."
msgstr "あなたの組織の領域名。レルムを指定しない場合は、トレース・データとメトリック・データ用にカスタム・エンドポイントを定義する必要があります。:ref:`trace-exporters-settings-lambda` および:ref:`metrics-configuration-lambda` を参照のこと。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:29
msgid "A Splunk authentication token that lets exporters send data directly to Splunk Observability Cloud. Required when the ``SPLUNK_REALM`` environment variable is present. See :ref:`admin-tokens`."
msgstr "Splunk Observability Cloud に直接データを送信するための Splunk 認証トークン。環境変数``SPLUNK_REALM`` が存在する場合に必要。:ref:`admin-tokens` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:44
msgid "Name of the service or application you're instrumenting. Takes precedence over the service name defined in ``OTEL_RESOURCE_ATTRIBUTES``."
msgstr "インスツルメンテーションするサービスまたはアプリケーションの名前。``OTEL_RESOURCE_ATTRIBUTES`` で定義されたサービス名より優先される。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:46
msgid "Comma-separated list of resource attributes added to every reported span. For example, you can define the name of the deployment environment of your function by setting the variable to ``deployment.environment=<name-of-your-environment>``."
msgstr "報告されたスパンごとに追加されるリソース属性のカンマ区切りリスト。例えば、この変数を``deployment.environment=<name-of-your-environment>`` に設定することで、関数のデプロイ環境の名前を定義することができます。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:48
msgid "Maximum number of attributes per span. Default is unlimited."
msgstr "スパンあたりの最大属性数。デフォルトは無制限。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:50
msgid "Maximum number of events per span. Default is unlimited."
msgstr "1スパンあたりの最大イベント数。デフォルトは無制限。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:52
msgid "Maximum number of links per span. Default is ``1000``."
msgstr "スパンあたりの最大リンク数。デフォルトは``1000`` 。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:54
msgid "Maximum length of strings for attribute values. Values larger than the limit are truncated. Default is ``1200``."
msgstr "属性値の文字列の最大長。制限値より大きな値は切り捨てられる。デフォルトは``1200`` 。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:69
msgid "Trace exporter to use. You can set multiple comma-separated values. Possible values are ``otlp`` and ``jaeger-thrift-splunk``."
msgstr "使用するトレースエクスポーター。カンマ区切りの値を複数設定することができます。設定可能な値は``otlp`` と``jaeger-thrift-splunk`` 。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:71
msgid "The OTLP endpoint. This defaults to the collector running on localhost, ``http://localhost:4318``."
msgstr "OTLPのエンドポイント。デフォルトでは、コレクタは localhost,``http://localhost:4318`` で実行されます。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:73
msgid "The endpoint for the Jaeger exporter. When you set a value for the ``SPLUNK_REALM`` environment variable, the default endpoint is in the form ``https://ingest.<realm>.signalfx.com/v2/trace``."
msgstr "Jaeger エクスポーターのエンドポイント。環境変数``SPLUNK_REALM`` に値を設定すると、デフォルトのエンドポイントは``https://ingest.<realm>.signalfx.com/v2/trace`` という形式になる。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:75
msgid "Setting the exporter and the endpoint URL isn't required in most cases. By default, the layer sends telemetry directly to a Collector run in the Lambda layer which sends the data to Splunk Observability Cloud ingest endpoints."
msgstr "エクスポーターとエンドポイントURLの設定は、ほとんどの場合必要ありません。デフォルトでは、このレイヤーはテレメトリを Lambda レイヤーで実行されるコレクターに直接送信し、コレクターはデータを Splunk Observability Cloud インジェストエンドポイントに送信します。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:90
msgid "Comma-separated list of propagators you want to use. Default is ``tracecontext,baggage``. You can find the list of supported propagators in the official OpenTelemetry documentation."
msgstr "使用したいプロパゲータのカンマ区切りリスト。デフォルトは``tracecontext,baggage`` 。サポートされているプロパゲータのリストは、OpenTelemetryの公式ドキュメントにあります。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:97
msgid "The following settings control the sending of AWS Lambda metric data to Splunk Observability Cloud:"
msgstr "以下の設定は、AWS Lambda のメトリックデータの Splunk Observability Cloud への送信を制御します："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:105
msgid "Endpoint for metric data ingestion. When you set a value for the ``SPLUNK_REALM`` environment variable, the default endpoint is in the form ``https://ingest.<realm>.signalfx.com``."
msgstr "メトリック・データ・インジェスト用のエンドポイント。環境変数``SPLUNK_REALM`` に値を設定すると、デフォルトのエンドポイントは``https://ingest.<realm>.signalfx.com`` という形式になる。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:106
msgid "``FAST_INGEST``"
msgstr "``FAST_INGEST``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:107
msgid "Specifies the strategy used to send data points. Use ``false`` to buffer metric data and send it to Splunk Observability Cloud on intervals defined by the ``REPORTING_RATE`` variable. Default is ``true``."
msgstr "データポイントの送信に使用するストラテジーを指定します。``false`` を使用してメトリックデータをバッファリングし、``REPORTING_RATE`` 変数で定義された間隔で Splunk Observability Cloud に送信します。デフォルトは``true`` 。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:108
msgid "``REPORTING_RATE``"
msgstr "``REPORTING_RATE``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:109
msgid "Specifies how often the layer sends data points to Splunk Observability Cloud, in seconds. Default value is ``15``. Minimum value is ``1``."
msgstr "レイヤーが Splunk Observability Cloud にデータポイントを送信する頻度を秒単位で指定します。デフォルト値は``15`` 。最小値は``1`` 。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:110
msgid "``REPORTING_TIMEOUT``"
msgstr "``REPORTING_TIMEOUT``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:111
msgid "Timeout for sending data points to Splunk Observability Cloud, in seconds. Default value is ``5``. Minimum value is ``1``."
msgstr "データポイントを Splunk Observability Cloud に送信するタイムアウト。デフォルト値は``5`` 。最小値は``1`` 。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:112
msgid "``VERBOSE``"
msgstr "``VERBOSE``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:113
msgid "Activates verbose logging for metric data collection. AWS CloudWatch stores the logs as log groups associated with the Lambda function. Default is ``false``."
msgstr "メトリックデータ収集のための冗長ロギングを有効にする。AWS CloudWatchは、Lambda関数に関連付けられたロググループとしてログを保存する。デフォルトは``false`` 。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:114
msgid "``HTTP_TRACING``"
msgstr "``HTTP_TRACING``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:115
msgid "Activates detailed logs of HTTP calls to Splunk Observability Cloud. Default is ``false``."
msgstr "Splunk Observability Cloud への HTTP 呼び出しの詳細ログを有効にします。デフォルトは``false`` 。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:117
msgid "For more information, see :ref:`splunk-otel-lambda-metrics`."
msgstr "詳細は:ref:`splunk-otel-lambda-metrics` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:124
msgid "To connect Real User Monitoring (RUM) requests from mobile and web applications with serverless trace data, the Splunk OpenTelemetry Lambda Layer adds the following response headers to HTTP responses:"
msgstr "モバイルおよび Web アプリケーションからの Real User Monitoring (RUM) リクエストをサーバーレスのトレースデータに接続するために、Splunk OpenTelemetry Lambda Layer は HTTP レスポンスに以下のレスポンスヘッダを追加します："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:143
msgid "``OTEL_INSTRUMENTATION_AWS_LAMBDA_FLUSH_TIMEOUT``"
msgstr "``OTEL_INSTRUMENTATION_AWS_LAMBDA_FLUSH_TIMEOUT``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:144
msgid "Timeout for buffering spans, in milliseconds. The default value is ``30000`` milliseconds."
msgstr "バッファリングスパンのタイムアウト（ミリ秒単位）。デフォルト値は``30000`` ミリ秒。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:146
msgid "Level for debug logging. Default is ``WARN``. When set to ``DEBUG``, the layer sends additional logs to AWS CloudWatch."
msgstr "デバッグ・ロギングのレベル。デフォルトは``WARN`` 。``DEBUG`` に設定すると、レイヤーは追加のログを AWS CloudWatch に送信する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:147
msgid "``SPLUNK_LAMBDA_SLS_ZIP``"
msgstr "``SPLUNK_LAMBDA_SLS_ZIP``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:148
msgid "Set to ``true`` to instrument Python libraries compressed using the Serverless Framework. The default value is ``false``."
msgstr "Serverless Frameworkを使用して圧縮されたPythonライブラリを計測するために``true`` 。デフォルト値は``false`` 。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:149
msgid "``OTEL_PYTHON_DISABLED_INSTRUMENTATIONS``"
msgstr "``OTEL_PYTHON_DISABLED_INSTRUMENTATIONS``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:150
msgid "Comma-separated list of Python instrumentations you want to deactivate. For a list of automatically loaded instrumentations, see the requirements list in the OpenTelemetry repository on GitHub: https://github.com/open-telemetry/opentelemetry-lambda/blob/main/python/src/otel/otel_sdk/requirements-nodeps.txt"
msgstr "停止したい Python のインストルメンテーションをカンマ区切りで列挙する。自動的にロードされる計測器のリストについては、GitHubのOpenTelemetryリポジトリの要件リストを参照： https://github.com/open-telemetry/opentelemetry-lambda/blob/main/python/src/otel/otel_sdk/requirements-nodeps.txt"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/advanced-configuration.rst:152
msgid "Activating ``DEBUG`` logging might increase AWS CloudWatch costs."
msgstr "``DEBUG`` ロギングを有効にすると、AWS CloudWatch のコストが増加する可能性がある。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:-1
msgid "The Splunk OpenTelemetry Lambda Layer automatically instruments your AWS Lambda functions for many programming languages. Follow these steps to get started."
msgstr "Splunk OpenTelemetry Lambda Layer は、多くのプログラミング言語に対応した AWS Lambda 関数を自動的に計測します。以下の手順で始めましょう。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:5
msgid "Instrument your AWS Lambda function for Splunk Observability Cloud"
msgstr "AWS Lambda関数をSplunk Observability Cloudにインストゥルメントする"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:10
msgid "Use the Splunk OpenTelemetry Lambda Layer to automatically instrument your AWS Lambda functions for many programming languages. To get started, use the guided setup or follow the instructions manually."
msgstr "Splunk OpenTelemetry Lambda Layer を使用すると、多くのプログラミング言語用の AWS Lambda 関数を自動的に計測できます。開始するには、ガイド付きセットアップを使用するか、手動で指示に従ってください。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:15
msgid "To generate a template that instruments your Lambda function using the Splunk OpenTelemetry Lambda Layer, use the AWS Lambda guided setup. To access the AWS Lambda guided setup, follow these steps:"
msgstr "Splunk OpenTelemetry Lambda Layer を使用して Lambda 関数を計測するテンプレートを生成するには、AWS Lambda ガイド付きセットアップを使用します。AWS Lambdaのガイド付きセットアップにアクセスするには、以下の手順に従ってください："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:19
msgid "Open the :new-page:`AWS Lambda guided setup <https://login.signalfx.com/#/gdi/scripted/awslambda/step-1?category=product-apm&gdiState=%7B\"integrationId\":\"awslambda\"%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`AWS Lambda guided setup<https://login.signalfx.com/#/gdi/scripted/awslambda/step-1?category=product-apm&gdiState=%7B\"integrationId\":\"awslambda\"%7D>` を開く。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:25
msgid "In the :guilabel:`Search` field, search for :guilabel:`AWS Lambda`."
msgstr ":guilabel:`Search` フィールドで、:guilabel:`AWS Lambda` を検索する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:27
msgid "Select the :guilabel:`AWS Lambda` tile to open the AWS Lambda guided setup."
msgstr ":guilabel:`AWS Lambda` タイルを選択し、AWS Lambda ガイド付きセットアップを開きます。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:30
msgid "Install the Splunk OpenTelemetry Lambda Layer manually"
msgstr "Splunk OpenTelemetry Lambda Layer を手動でインストールする"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:32
msgid "Follow these instructions to install the Splunk OpenTelemetry Lambda Layer:"
msgstr "以下の手順に従って Splunk OpenTelemetry Lambda Layer をインストールしてください："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:34
msgid ":ref:`otel-lambda-layer-requirements`"
msgstr ":ref:`otel-lambda-layer-requirements`"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:35
msgid ":ref:`install-otel-lambda-layer`"
msgstr ":ref:`install-otel-lambda-layer`"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:36
msgid ":ref:`set-env-vars-otel-lambda`"
msgstr ":ref:`set-env-vars-otel-lambda`"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:38
msgid "To instrument Go functions, also follow the steps in :ref:`go-serverless-instrumentation`."
msgstr "囲碁の機能を測定するには、:ref:`go-serverless-instrumentation` のステップにも従ってください。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:40
msgid "For Python functions using the Serverless Framework, see :ref:`serverless-framework-support-aws`."
msgstr "サーバーレス・フレームワークを使ったPython関数については、:ref:`serverless-framework-support-aws` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:47
msgid "The Splunk OpenTelemetry Lambda Layer supports the following runtimes in AWS Lambda:"
msgstr "Splunk OpenTelemetry Lambda Layer は AWS Lambda の以下のランタイムをサポートしています："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:49
msgid "Java 8 and 11"
msgstr "Java 8および11"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:50
msgid "Python 3.8 and 3.9"
msgstr "Python 3.8および3.9"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:51
msgid "Node.js 14 and higher"
msgstr "Node.js 14以上"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:52
msgid "Ruby 2.7"
msgstr "Ruby 2.7"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:53
msgid "Go 1.18"
msgstr "Go 1.18"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:55
msgid "The Lambda Layer requires 49 MB on-disk in standard x86_64 systems."
msgstr "ラムダ・レイヤーは、標準的なx86_64システムで49MBのオンディスクを必要とする。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:57
msgid "For more information, search for Lambda runtimes and other system requirements on the AWS documentation website."
msgstr "詳細については、AWSのドキュメントサイトでLambdaのランタイムやその他のシステム要件を検索してください。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:62
msgid "Install the AWS Lambda layer"
msgstr "AWS Lambdaレイヤーをインストールする"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:64
msgid "Follow these steps to instrument your function using the Splunk OpenTelemetry Lambda Layer:"
msgstr "以下の手順に従って、Splunk OpenTelemetry Lambda Layer を使用して関数を計測します："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:66
msgid "In the AWS Lambda console, select the function that you want to instrument."
msgstr "AWS Lambdaコンソールで、計測したい関数を選択します。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:68
msgid "In the :guilabel:`Layers` section, select :guilabel:`Add a layer`, then select :guilabel:`Specify an ARN`."
msgstr ":guilabel:`Layers` セクションで、:guilabel:`Add a layer` を選択し、:guilabel:`Specify an ARN` を選択する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:70
msgid "Copy the Amazon Resource Name (ARN) for the region of your Lambda function from the list matching your architecture:"
msgstr "Lambda 関数のリージョンの Amazon Resource Name (ARN) を、あなたのアーキテクチャに一致するリストからコピーします："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:74
msgid "Standard x86_64"
msgstr "Standard x86_64"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:79
msgid "Graviton2 ARM64"
msgstr "Graviton2 ARM64"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:84
msgid "Paste the selected ARN in the :guilabel:`Specify an ARN` field and select :guilabel:`Add`."
msgstr "選択したARNを:guilabel:`Specify an ARN` フィールドに貼り付け、:guilabel:`Add` を選択する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:86
msgid "Check that the Splunk layer appears in the :guilabel:`Layers` table."
msgstr "Splunk レイヤーが:guilabel:`Layers` テーブルに表示されていることを確認する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:88
msgid "You can automate the update of the Lambda layer using the AWS CLI or other automation tools."
msgstr "AWS CLIやその他の自動化ツールを使って、Lambdaレイヤーの更新を自動化できます。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:95
msgid "Follow these steps to add the required configuration for the Splunk OpenTelemetry Lambda Layer:"
msgstr "以下の手順に従って、Splunk OpenTelemetry Lambda Layer に必要な設定を追加します："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:97 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:38
msgid "In the AWS Lambda console, open the function that you are instrumenting."
msgstr "AWS Lambdaコンソールで、インスツルメンテーション対象の関数を開きます。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:99
msgid "Navigate to :guilabel:`Configuration`, then :guilabel:`Environment variables`."
msgstr ":guilabel:`Configuration` に移動し、次に:guilabel:`Environment variables` に移動する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:101 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:42
msgid "Select :guilabel:`Edit`."
msgstr ":guilabel:`Edit` を選択する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:103
msgid "Add each of the following environment variables by selecting :guilabel:`Add environment variable`:"
msgstr ":guilabel:`環境変数の追加` を選択して、以下の各環境変数を追加する："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:114
msgid "To find the realm of your Splunk Observability Cloud account, open the navigation menu in Splunk Observability Cloud, select :menuselection:`Settings`, and select your username. The realm name appears in the :guilabel:`Organizations` section."
msgstr "Splunk Observability Cloud アカウントの領域を見つけるには、Splunk Observability Cloud のナビゲーションメニューを開き、:menuselection:`Settings` を選択し、ユーザー名を選択します。レルム名は:guilabel:`Organizations` セクションに表示される。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:117
msgid "A Splunk authentication token that lets exporters send data directly to Splunk Observability Cloud. See :ref:`Authentication token <admin-tokens>`. To send data to a Splunk OTel Collector in EC2, see :ref:`ec2-otel-collector-serverless`."
msgstr "Splunk Observability Cloud に直接データを送信するための Splunk 認証トークン。:ref:`Authentication token <admin-tokens>` を参照。EC2 の Splunk OTel Collector にデータを送信するには、:ref:`ec2-otel-collector-serverless` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:119
msgid "``AWS_LAMBDA_EXEC_WRAPPER``"
msgstr "``AWS_LAMBDA_EXEC_WRAPPER``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:120
msgid "Set the value for the ``AWS_LAMBDA_EXEC_WRAPPER`` environment variable:"
msgstr "環境変数``AWS_LAMBDA_EXEC_WRAPPER`` の値を設定する："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:124 ../../gdi/opentelemetry/zero-config.rst:12
msgid "Java"
msgstr "Java"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:140
msgid "Only AWS SDK v2 instrumentation is activated by default. To instrument other libraries, modify your code to include the corresponding library instrumentation from the OpenTelemetry Java SDK."
msgstr "デフォルトではAWS SDK v2のインスツルメンテーションのみが有効になっている。他のライブラリをインスツルメンテーションするには、OpenTelemetry Java SDKから対応するライブラリのインスツルメンテーションをインクルードするようにコードを修正してください。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:156 ../../gdi/opentelemetry/collector-architecture.rst:101
msgid "Go"
msgstr "Go"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:158
msgid "Don't set the ``AWS_LAMBDA_EXEC_WRAPPER`` environment variable. See :ref:`go-serverless-instrumentation`."
msgstr "環境変数``AWS_LAMBDA_EXEC_WRAPPER`` を設定しない。:ref:`go-serverless-instrumentation` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:161
msgid "The name of your service."
msgstr "サービス名"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:163
msgid "(Optional) ``OTEL_RESOURCE_ATTRIBUTES``"
msgstr "(オプション） ``OTEL_RESOURCE_ATTRIBUTES``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:164
msgid "Define the name of the deployment environment of your function by setting this environment variable to ``deployment.environment=<name-of-your-environment>``."
msgstr "この環境変数を``deployment.environment=<name-of-your-environment>`` に設定することで、関数のデプロイ環境の名前を定義します。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:166
msgid "Click :guilabel:`Save` and check that the environment variables appear in the table."
msgstr ":guilabel:`Save` をクリックし、環境変数が表に表示されていることを確認する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:168
msgid "To configure the mode of metric ingest, see :ref:`metrics-configuration-lambda`."
msgstr "メトリック・インジェストのモードを設定するには、:ref:`metrics-configuration-lambda` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:170
msgid "By default, the layer sends telemetry to a Collector instance on `localhost`."
msgstr "デフォルトでは、レイヤは`localhost` の Collector インスタンスにテレメトリを送信します。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:175
msgid "Instrument Go functions in AWS Lambda"
msgstr "AWS LambdaでGo関数を実装する"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:177
msgid "To instrument a Go function in AWS Lambda for Splunk APM, follow these additional steps:"
msgstr "AWS Lambda for Splunk APM で Go 関数を計測するには、以下の追加手順を実行します："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:179
msgid "Run the following commands to install the ``otellambda`` and the Splunk OTel Go distribution:"
msgstr "以下のコマンドを実行して、``otellambda`` と Splunk OTel Go ディストリビューションをインストールします："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:186
msgid "Set environment variable ``OTEL_EXPORTER_OTLP_ENDPOINT`` with the value ``http://localhost:4318`` and ``OTEL_EXPORTER_OTLP_TRACES_PROTOCOL`` with the value ``http/protobuf``."
msgstr "環境変数``OTEL_EXPORTER_OTLP_ENDPOINT`` に値``http://localhost:4318`` を、``OTEL_EXPORTER_OTLP_TRACES_PROTOCOL`` に値``http/protobuf`` を設定する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:188
msgid "Create a wrapper for the OpenTelemetry instrumentation in your function's code. For example:"
msgstr "OpenTelemetry インスツルメンテーションのラッパーを、あなたの関数のコードに作成します。例えば、こうだ："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:218
msgid "For a full example, see :new-page:`https://github.com/signalfx/tracing-examples/blob/main/opentelemetry-tracing/opentelemetry-lambda/go/example.go <https://github.com/signalfx/tracing-examples/blob/main/opentelemetry-tracing/opentelemetry-lambda/go/example.go>` on GitHub."
msgstr "完全な例については、GitHubの:new-page:`https://github.com/signalfx/tracing-examples/blob/main/opentelemetry-tracing/opentelemetry-lambda/go/example.go<https://github.com/signalfx/tracing-examples/blob/main/opentelemetry-tracing/opentelemetry-lambda/go/example.go>` を参照のこと。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:223
msgid "Serverless Framework support"
msgstr "サーバーレス・フレームワークのサポート"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:225
msgid "Some features of the Serverless Framework might impact OpenTelemetry tracing of Python Lambda functions."
msgstr "Serverless Frameworkのいくつかの機能は、Python Lambda関数のOpenTelemetryトレースに影響を与えるかもしれません。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:228
msgid "Python libraries compression"
msgstr "Pythonライブラリの圧縮"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:230
msgid "The ``zip`` feature of ``pythonRequirements`` allows packing and deploying Lambda dependencies as compressed files. To instrument packages compressed using the Serverless Framework, set the ``SPLUNK_LAMBDA_SLS_ZIP`` environment variable to ``true``. For more information, see https://github.com/serverless/serverless-python-requirements#dealing-with-lambdas-size-limitations on GitHub."
msgstr "``pythonRequirements`` の``zip`` 機能を使えば、Lambda の依存関係を圧縮ファイルとしてパッキングしてデプロイできる。サーバーレス・フレームワークを使って圧縮されたパッケージを計測するには、``SPLUNK_LAMBDA_SLS_ZIP`` 環境変数を``true`` に設定する。詳細はGitHubのhttps://github.com/serverless/serverless-python-requirements#dealing-with-lambdas-size-limitations。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:233
msgid "Slim feature"
msgstr "スリム機能"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:235
msgid "The Slim feature reduces the size of Lambda packages by removing some files, including ``dist-info`` folders. Some of the files removed by the Slim feature are required by the OpenTelemetry Python autoinstrumentation. Deactivate the ``slim`` option in your serverless.yml file or define custom ``slimPatterns``. For more information, see https://github.com/serverless/serverless-python-requirements#slim-package on GitHub."
msgstr "スリム機能は、``dist-info`` フォルダーを含むいくつかのファイルを削除することで、ラムダパッケージのサイズを縮小します。スリム機能によって削除されるファイルの一部は、OpenTelemetry Python 自動計測に必要なものです。serverless.yml ファイルで``slim`` オプションを無効にするか、カスタム``slimPatterns`` を定義する。詳細はGitHubのhttps://github.com/serverless/serverless-python-requirements#slim-package。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:240
msgid "Check that data appears in Splunk Observability Cloud"
msgstr "Splunk Observability Cloud にデータが表示されることを確認する"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:242
msgid "Each time the AWS Lambda function runs, trace and metric data appears in Splunk Observability Cloud. If no data appears, see :ref:`troubleshooting-lambda-layer`."
msgstr "AWS Lambda 関数が実行されるたびに、トレースとメトリックデータが Splunk Observability Cloud に表示されます。データが表示されない場合は、:ref:`troubleshooting-lambda-layer` を参照してください。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:247
msgid "Send serverless spans directly to Splunk Observability Cloud"
msgstr "サーバーレスのスパンを Splunk Observability Cloud に直接送信する"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:249
msgid "By default, the Splunk OpenTelemetry Lambda Layer sends telemetry to a Collector running alongside the Lambda."
msgstr "デフォルトでは、Splunk OpenTelemetry Lambda Layer は Lambda と並行して動作する Collector にテレメトリを送信します。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:251
msgid "To send spans directly to Splunk Observability Cloud from an AWS Lambda function instrumented using the Splunk Lambda layer add the following environment variables:"
msgstr "Splunk Lambda レイヤーを使用してインスツルメンテーションされた AWS Lambda 関数から Splunk Observability Cloud に直接スパンを送信するには、次の環境変数を追加します："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:253
msgid "``OTEL_EXPORTER_OTLP_TRACES_PROTOCOL`` with the value ``http/protobuf``"
msgstr "``OTEL_EXPORTER_OTLP_TRACES_PROTOCOL`` を持つ。 ``http/protobuf``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/instrument-lambda-functions.rst:254
msgid "``OTEL_EXPORTER_OTLP_TRACES_ENDPOINT`` with the value ``https://ingest.<realm>.signalfx.com/v2/trace/otlp``, substituting ``<realm>`` with the name of your organization's realm."
msgstr "``OTEL_EXPORTER_OTLP_TRACES_ENDPOINT`` を``https://ingest.<realm>.signalfx.com/v2/trace/otlp`` の値で置き換え、``<realm>`` を組織のレルム名とする。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:-1
msgid "The Splunk Lambda Extension of the Splunk OpenTelemetry Lambda Layer collects high-resolution, low-latency metrics on AWS Lambda function execution. Read on to browse the metrics that the layer collects."
msgstr "Splunk OpenTelemetry Lambda Layer の Splunk Lambda Extension は、AWS Lambda 関数の実行時に高解像度で低レイテンシーのメトリクスを収集します。レイヤーが収集するメトリクスの詳細については、こちらをご覧ください。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:5
msgid "AWS Lambda metrics and dimensions for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud の AWS Lambda メトリクスとディメンション"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:10
msgid "The Splunk Lambda Extension of the Splunk OpenTelemetry Lambda Layer collects high-resolution, low-latency metrics each time the AWS Lambda function runs, including cold start, invocation count, function lifetime, and termination condition."
msgstr "Splunk OpenTelemetry Lambda Layer の Splunk Lambda Extension は、AWS Lambda 関数が実行されるたびに、コールドスタート、呼び出し回数、関数のライフタイム、終了条件など、高解像度で低レイテンシーのメトリクスを収集します。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:13
msgid "AWS Lambda metrics"
msgstr "AWSラムダのメトリクス"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:15
msgid "The following table contains all the metrics reported by the Splunk Lambda Extension:"
msgstr "次の表には、Splunk Lambda Extension が報告するすべてのメトリクスが含まれています："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:20 ../../gdi/monitors-languages/expvar.md:24
msgid "Metric name"
msgstr "メトリック名"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:23
msgid "``lambda.function.invocation``"
msgstr "``lambda.function.invocation``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:25
msgid "Number of Lambda function calls."
msgstr "ラムダ関数の呼び出し回数。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:26
msgid "``lambda.function.initialization``"
msgstr "``lambda.function.initialization``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:28
msgid "Number of function cold starts."
msgstr "コールドスタートの回数。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:29
msgid "``lambda.function.initialization.latency``"
msgstr "``lambda.function.initialization.latency``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:31
msgid "Time spent between the start of the extension and the first Lambda invocation, in milliseconds."
msgstr "拡張機能の開始から最初のラムダ呼び出しまでにかかった時間（ミリ秒単位）。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:32
msgid "``lambda.function.shutdown``"
msgstr "``lambda.function.shutdown``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:34
msgid "Number of function shutdowns."
msgstr "機能停止回数。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:35
msgid "``lambda.function.lifetime``"
msgstr "``lambda.function.lifetime``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:37
msgid "Lifetime of the function, in milliseconds. The lifetime of the function might span multiple Lambda invocations."
msgstr "ミリ秒単位の関数寿命。関数のライフタイムは、複数のラムダ呼び出しにまたがるかもしれない。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:39
msgid "To track the execution time of a function, consider using alternative indicators, such the ``lambda.function.lifetime`` metric for functions that are called rarely. Another indication of longer execution time might be an increased function concurrency."
msgstr "関数の実行時間を追跡するには、別の指標、例えば、めったに呼び出されない関数のための``lambda.function.lifetime`` メトリクスの使用を検討する。実行時間が長くなるもう一つの兆候は、関数の同時実行が増えることかもしれない。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:42
msgid "AWS Lambda dimensions"
msgstr "AWSラムダの寸法"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:44
msgid "The following table contains all the dimensions reported by the Splunk Lambda Extension:"
msgstr "次の表には、Splunk Lambda Extension によってレポートされるすべてのディメンションが含まれています："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:49 ../../gdi/monitors-languages/expvar.md:24
msgid "Dimension name"
msgstr "寸法名称"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:51
msgid "``AWSUniqueId``"
msgstr "``AWSUniqueId``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:52
msgid "AWS unique ID. Used to correlate metrics with AWS tags."
msgstr "AWS固有のID。メトリクスとAWSタグの関連付けに使用します。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:53
msgid "``aws_arn``"
msgstr "``aws_arn``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:54
msgid "Amazon Resource Name (ARN) of the Lambda function instance."
msgstr "LambdaファンクションインスタンスのAmazon Resource Name (ARN)。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:55
msgid "``aws_region``"
msgstr "``aws_region``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:56
msgid "The AWS Region."
msgstr "AWSリージョン"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:57
msgid "``aws_account_id``"
msgstr "``aws_account_id``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:58
msgid "The AWS Account ID."
msgstr "AWSアカウントID。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:59
msgid "``aws_function_name``"
msgstr "``aws_function_name``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:60
msgid "The name of the Lambda function."
msgstr "ラムダ関数の名前。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:61
msgid "``aws_function_version``"
msgstr "``aws_function_version``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:62
msgid "The version of the Lambda function."
msgstr "ラムダ関数のバージョン。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:63
msgid "``aws_function_qualifier``"
msgstr "``aws_function_qualifier``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:64
msgid "AWS function version qualifier. Can be version or version alias. Available only for invocations."
msgstr "AWS関数のバージョン修飾子。バージョンまたはバージョンエイリアス。招集時のみ利用可能。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:65
msgid "``aws_function_runtime``"
msgstr "``aws_function_runtime``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:66
msgid "The AWS Lambda execution environment."
msgstr "AWS Lambdaの実行環境。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:67
msgid "``aws_function_shutdown_cause``"
msgstr "``aws_function_shutdown_cause``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:68
msgid "Reason for the shutdown. Available only for the ``lambda.function.shutdown`` metrics."
msgstr "シャットダウンの理由``lambda.function.shutdown`` 。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:73
msgid "Ingest modes for metrics"
msgstr "メトリクスのインジェスト・モード"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:75
msgid "The Splunk Extension for AWS Lambda sends metrics in real time with minimal impact on monitored functions. The following ingest modes are available. Choose the ingest mode that best suits your case. For information on how to configure the ingest modes, see :ref:`metrics-configuration-lambda`."
msgstr "Splunk Extension for AWS Lambda は、監視機能への影響を最小限に抑えながらリアルタイムでメトリクスを送信します。以下のインジェストモードが利用できる。あなたのケースに最も適したインジェスト・モードを選んでください。インジェスト・モードの設定方法については、:ref:`metrics-configuration-lambda` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:78
msgid "Fast ingest mode"
msgstr "高速インジェスト・モード"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:80
msgid "The fast ingest mode is similar to real-time monitoring in that it sends a metric update every time a monitored function is invoked. Use this mode when your functions are rarely called, accept increased concurrency, or require real-time metrics."
msgstr "ファスト・インジェスト・モードはリアルタイム・モニタリングに似ており、モニタリング関数が呼び出されるたびにメトリック・アップデートを送信する。このモードは、関数がめったに呼び出されない場合、並行性が高い場合、リアルタイム・メトリクスが必要な場合に使用します。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:82
msgid "Fast ingest might have significant impact on the duration of a function. To mitigate the increased duration due to fast ingest, you can activate Fast Invoke Response in AWS Lambda, although this might increase concurrenty and costs in turn."
msgstr "高速インジェストは、ファンクションの持続時間に大きな影響を与えるかもしれない。高速インジェストによる所要時間の増加を緩和するために、AWS LambdaでFast Invoke Responseを有効にすることができますが、これは並行処理とコストを増加させる可能性があります。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:85
msgid "Buffering mode"
msgstr "バッファリング・モード"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:87
msgid "Buffering mode minimizes the impact on monitored functions by buffering data points internally and send them at an interval specified using the ``REPORTING_RATE`` and ``REPORTING_TIMEOUT`` settings."
msgstr "バッファリング・モードは、データ・ポイントを内部的にバッファリングし、``REPORTING_RATE`` と``REPORTING_TIMEOUT`` の設定で指定した間隔で送信することで、モニター機能への影響を最小限に抑えます。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:89
msgid "Use buffering mode when you don't need near real-time feedback and don't want to increase function latency. Don't use buffering mode with functions that are invoked less frequently than the reporting interval, as this might cause delays in data reporting."
msgstr "リアルタイムに近いフィードバックを必要とせず、ファンクションのレイテンシーを増やしたくない場合は、バッファリングモードを使用する。報告間隔よりも低い頻度で呼び出される関数でバッファリング・モードを使用しないでください。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:91
msgid "Due to AWS Lambda limitations, instrumented functions that use buffering mode send the last batch of data points with significant delay. This happens when each process in the execution environment is complete and there are no pending events."
msgstr "AWS Lambdaの制限により、バッファリングモードを使用するインスツルメンテッド関数は、データポイントの最後のバッチを大幅に遅延して送信します。これは、実行環境の各プロセスが完了し、保留中のイベントがないときに起こる。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:94
msgid "Tags and properties"
msgstr "タグとプロパティ"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:96
msgid "By default, metrics reported by the Splunk Lambda Extension don't have tag or properties attached to them. To activate this feature, you must configure an AWS data source in Splunk Observability Cloud. See :ref:`specify-data-metadata`."
msgstr "デフォルトでは、Splunk Lambda Extension からレポートされるメトリクスにはタグやプロパティが付加されていません。この機能を有効にするには、Splunk Observability Cloud で AWS データソースを設定する必要があります。:ref:`specify-data-metadata` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/lambda-metrics.rst:102
msgid "To troubleshoot AWS Lambda metrics, see :ref:`aws-lambda-troubleshooting`."
msgstr "AWS Lambda メトリクスのトラブルシューティングについては、:ref:`aws-lambda-troubleshooting` を参照してください。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:-1
msgid "The Splunk OpenTelemetry Lambda Layer replaces the deprecated SignalFx Lambda wrappers for all supported languages. To migrate to the Splunk OTel Lambda layer, follow these instructions."
msgstr "Splunk OpenTelemetry Lambda Layer は、非推奨の SignalFx Lambda ラッパーをすべてのサポート言語で置き換えます。Splunk OTel Lambda レイヤーに移行するには、以下の手順に従ってください。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:5
msgid "Migrate from SignalFx Lambda wrappers to Splunk OpenTelemetry Lambda Layer"
msgstr "SignalFx Lambda ラッパーから Splunk OpenTelemetry Lambda Layer への移行"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:10
msgid "The SignalFx Lambda wrappers are deprecated. Follow these steps to migrate from the SignalFx Lambda wrappers to the Splunk OpenTelemetry Lambda Layer. For more information, see :ref:`splunk-otel-lambda-layer`."
msgstr "SignalFx Lambdaラッパーは非推奨です。SignalFx Lambda ラッパーから Splunk OpenTelemetry Lambda Layer に移行するには、以下の手順に従ってください。詳細は:ref:`splunk-otel-lambda-layer` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:12
msgid ":ref:`remove-old-wrapper`"
msgstr ":ref:`remove-old-wrapper`"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:13
msgid ":ref:`switch-handler`"
msgstr ":ref:`switch-handler`"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:14
msgid ":ref:`install-new-layer`"
msgstr ":ref:`install-new-layer`"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:15
msgid ":ref:`convert-env-vars`"
msgstr ":ref:`convert-env-vars`"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:20
msgid "Remove the SignalFx Lambda wrapper from your function"
msgstr "関数からSignalFx Lambdaラッパーを取り除く"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:22
msgid "Before installing the Splunk OpenTelemetry Lambda Layer, remove any previous instrumentation, including the SignalFx Lambda wrapper."
msgstr "Splunk OpenTelemetry Lambda Layer をインストールする前に、SignalFx Lambda ラッパーを含む以前のインスツルメンテーションをすべて削除してください。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:24
msgid "If you installed the SignalFx wrapper as a layer, remove it from the console."
msgstr "SignalFxラッパーをレイヤーとしてインストールした場合は、コンソールから削除してください。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:25
msgid "If you referenced the wrapper directly, remove the wrapper from the build."
msgstr "ラッパーを直接参照した場合は、ビルドからラッパーを削除する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:27
msgid "For more information on Lambda layers, see the official AWS documentation at https://docs.aws.amazon.com/lambda/latest/dg/invocation-layers.html."
msgstr "Lambdaレイヤーの詳細については、https://docs.aws.amazon.com/lambda/latest/dg/invocation-layers.html のAWS公式ドキュメントを参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:32
msgid "Replace the handler for your function"
msgstr "関数のハンドラーを置き換える"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:34
msgid "The Splunk OpenTelemetry Lambda Layer does not require setting a custom handler in :guilabel:`Runtime settings`."
msgstr "Splunk OpenTelemetry Lambda Layer では、:guilabel:`ランタイム設定` でカスタムハンドラを設定する必要はありません。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:36
msgid "To replace the SignalFx handler with your function handler, follow these steps:"
msgstr "SignalFxハンドラーをあなたの関数ハンドラーに置き換えるには、以下の手順に従ってください："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:40
msgid "Navigate to :guilabel:`Code`, then :guilabel:`Runtime settings`."
msgstr ":guilabel:`コード` に移動し、次に:guilabel:`ランタイム設定` に移動する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:44
msgid "Replace the SignalFx handler with the handler of your function."
msgstr "SignalFxハンドラをあなたの関数のハンドラに置き換える。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:51
msgid "Install the Splunk OpenTelemetry Lambda Layer"
msgstr "Splunk OpenTelemetry Lambda Layer をインストールする"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:53
msgid "Once you've removed the SignalFx Lambda wrapper from your function, install the new Splunk OpenTelemetry Lambda Layer. See :ref:`install-otel-lambda-layer`."
msgstr "関数から SignalFx Lambda ラッパーを削除したら、新しい Splunk OpenTelemetry Lambda Layer をインストールします。:ref:`install-otel-lambda-layer` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:58
msgid "Update the environment variables"
msgstr "環境変数の更新"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:60
msgid "The following table shows SignalFx Lambda wrapper environment variables and their Splunk OpenTelemetry Lambda Layer equivalents:"
msgstr "次の表は、SignalFx Lambda ラッパー環境変数と、それに相当する Splunk OpenTelemetry Lambda Layer を示しています："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:67
msgid "``SIGNALFX_ACCESS_TOKEN`` and ``SIGNALFX_AUTH_TOKEN``"
msgstr "``SIGNALFX_ACCESS_TOKEN`` そして ``SIGNALFX_AUTH_TOKEN``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:69
msgid "``SIGNALFX_TRACING_URL`` and ``SIGNALFX_API_HOSTNAME``"
msgstr "``SIGNALFX_TRACING_URL`` そして ``SIGNALFX_API_HOSTNAME``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:70
msgid "You can set either the ``SPLUNK_REALM`` environment variable or the endpoint using the ``OTEL_EXPORTER_OTLP_ENDPOINT`` or ``OTEL_EXPORTER_JAEGER_ENDPOINT`` environment variables."
msgstr "``SPLUNK_REALM`` 環境変数か、``OTEL_EXPORTER_OTLP_ENDPOINT`` または``OTEL_EXPORTER_JAEGER_ENDPOINT`` 環境変数を使ってエンドポイントを設定することができる。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:71
msgid "``SIGNALFX_METRICS_URL``"
msgstr "``SIGNALFX_METRICS_URL``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:72
msgid "You can set either the ``SPLUNK_REALM`` or the ``SPLUNK_METRICS_ENDPOINT`` environment variables."
msgstr "環境変数は``SPLUNK_REALM`` または``SPLUNK_METRICS_ENDPOINT`` のどちらかを設定する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:73
msgid "``SIGNALFX_SEND_TIMEOUT``"
msgstr "``SIGNALFX_SEND_TIMEOUT``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:74
msgid "``OTEL_INSTRUMENTATION_AWS_LAMBDA_FLUSH_TIMEOUT``. See :ref:`other-lambda-settings`."
msgstr "``OTEL_INSTRUMENTATION_AWS_LAMBDA_FLUSH_TIMEOUT``.:ref:`other-lambda-settings` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:75
msgid "``SIGNALFX_LAMBDA_HANDLER``"
msgstr "``SIGNALFX_LAMBDA_HANDLER``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:76
msgid "``AWS_LAMBDA_EXEC_WRAPPER``. You must select one of the supported handlers. See :ref:`set-env-vars-otel-lambda`."
msgstr "``AWS_LAMBDA_EXEC_WRAPPER``.サポートされているハンドラのいずれかを選択する必要があります。:ref:`set-env-vars-otel-lambda` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:78
msgid "``OTEL_SERVICE_NAME=<name_of_the_service>``"
msgstr "``OTEL_SERVICE_NAME=<name_of_the_service>``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/migrate-signalfx-lambda-wrappers.rst:80
msgid "``OTEL_RESOURCE_ATTRIBUTES=deployment.environment=<name_of_the_environment>``"
msgstr "``OTEL_RESOURCE_ATTRIBUTES=deployment.environment=<name_of_the_environment>``"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:-1 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:10
msgid "If your instrumented AWS Lambda function is not sending data to Splunk Observability Cloud, or data is missing, follow these steps to identify and resolve the issue."
msgstr "インスツルメンテーションされた AWS Lambda 関数が Splunk Observability Cloud にデータを送信しない、またはデータが欠落している場合は、以下の手順に従って問題を特定し、解決してください。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:5
msgid "Troubleshoot the Splunk OpenTelemetry Lambda Layer"
msgstr "Splunk OpenTelemetry ラムダレイヤーのトラブルシューティング"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:13
msgid "No data appears in Splunk Observability Cloud"
msgstr "Splunk Observability Cloud にデータが表示されない"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:15
msgid "If no data from your instrumented AWS Lambda function appears in Splunk Observability Cloud, try the following steps:"
msgstr "インスツルメンテーションされた AWS Lambda 関数からのデータが Splunk Observability Cloud に表示されない場合は、以下の手順をお試しください："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:17 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:32
msgid "Check the CloudWatch metrics of your AWS Lambda Function. Make sure the Lambda function is responding to invocations. You can also check for errors."
msgstr "AWS Lambda FunctionのCloudWatchメトリクスを確認します。ラムダ関数が呼び出しに応答していることを確認する。エラーをチェックすることもできる。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:19 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:34
msgid "Make sure that you specified the ``SPLUNK_REALM`` and ``SPLUNK_ACCESS_TOKEN`` environment variables. See :ref:`set-env-vars-otel-lambda`."
msgstr "``SPLUNK_REALM`` 、``SPLUNK_ACCESS_TOKEN`` 環境変数を指定したことを確認してください。:ref:`set-env-vars-otel-lambda` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:21
msgid "Try increasing the value of the ``OTEL_INSTRUMENTATION_AWS_LAMBDA_FLUSH_TIMEOUT`` environment variable if the back end or network is slow."
msgstr "バックエンドやネットワークが遅い場合は、``OTEL_INSTRUMENTATION_AWS_LAMBDA_FLUSH_TIMEOUT`` 環境変数の値を増やしてみてください。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:23 ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:38
msgid "Activate verbose logging of the extension. See :ref:`aws-lambda-debug-logging`."
msgstr "拡張機能の冗長ロギングを有効にする。:ref:`aws-lambda-debug-logging` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:28
msgid "No data points or metrics in Splunk Observability Cloud"
msgstr "Splunk Observability Cloud にデータポイントやメトリクスがない"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:30
msgid "If no metric data from your instrumented AWS Lambda function appears in Splunk Observability Cloud, try the following steps:"
msgstr "インスツルメンテーションされた AWS Lambda 関数からのメトリックデータが Splunk Observability Cloud に表示されない場合は、次の手順をお試しください："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:36
msgid "The extension might be sending data points with significant delay due to buffering mode. See :ref:`metrics-configuration-lambda`."
msgstr "バッファリング・モードにより、エクステンションがデータ・ポイントを送信する際に大幅な遅延が発生している可能性がある。:ref:`metrics-configuration-lambda` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:41
msgid "Error about SPLUNK_ACCESS_TOKEN and SPLUNK_REALM"
msgstr "SPLUNK_ACCESS_TOKENとSPLUNK_REALMに関するエラー"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:43
msgid "If the following error appears, you must set the value of the ``SPLUNK_ACCESS_TOKEN`` environment variable:"
msgstr "以下のエラーが表示される場合は、``SPLUNK_ACCESS_TOKEN`` 環境変数の値を設定する必要があります："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:49
msgid "For more information, see :ref:`main-lambda-agent-settings`."
msgstr "詳細は:ref:`main-lambda-agent-settings` を参照。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:52
msgid "Error about exporter endpoint and SPLUNK_REALM"
msgstr "エクスポータ・エンドポイントとSPLUNK_REALMに関するエラー"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:54
msgid "If the following error appears, you must either set the value of the ``SPLUNK_REALM`` and ``SPLUNK_ACCESS_TOKEN``  environment variables, or define an exporter endpoint:"
msgstr "以下のエラーが表示される場合は、``SPLUNK_REALM`` と``SPLUNK_ACCESS_TOKEN`` 環境変数の値を設定するか、エクスポータ・エンドポイントを定義する必要があります："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:60
msgid "For instructions on how to define a custom exporter endpoint, see :ref:`trace-exporters-settings-lambda`."
msgstr "カスタムエクスポーターエンドポイントを定義する方法については、:ref:`trace-exporters-settings-lambda` を参照してください。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:63
msgid "Deactivate instrumentations that load automatically"
msgstr "自動的にロードされるインストゥルメンテーションを無効にする"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:65
msgid "Some of the wrappers included in the Splunk OpenTelemetry Lambda Layer load instrumentations for popular libraries or frameworks automatically. To deactivate instrumentations that load automatically, follow these steps:"
msgstr "Splunk OpenTelemetry Lambda Layer に含まれるラッパーの中には、一般的なライブラリやフレームワークのインスツルメンテーションを自動的にロードするものがあります。自動的にロードされるインストゥルメンテーションを無効にするには、以下の手順に従います："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:69
msgid "Python"
msgstr "Python"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:71
msgid "Enter the instrumentations you want to deactivate as comma-separated values for the ``OTEL_PYTHON_DISABLED_INSTRUMENTATIONS`` environment variable. For a list of automatically loaded instrumentations, see the requirements list in the OpenTelemetry repository on GitHub: https://github.com/open-telemetry/opentelemetry-lambda/blob/main/python/src/otel/otel_sdk/requirements-nodeps.txt"
msgstr "停止したいインストゥルメンテーションを、``OTEL_PYTHON_DISABLED_INSTRUMENTATIONS`` 環境変数にカンマ区切りで入力します。自動的にロードされる計測器のリストについては、GitHubのOpenTelemetryリポジトリの要件リストを参照： https://github.com/open-telemetry/opentelemetry-lambda/blob/main/python/src/otel/otel_sdk/requirements-nodeps.txt"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:78
msgid "If trace data for your function still doesn't appear in Splunk Observability Cloud, activate logging to collect debugging information:"
msgstr "関数のトレースデータが Splunk Observability Cloud に表示されない場合は、ロギングを有効にしてデバッグ情報を収集します："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:80
msgid "Set the ``OTEL_LAMBDA_LOG_LEVEL`` environment variable to ``DEBUG`` for your instrumented function."
msgstr "環境変数``OTEL_LAMBDA_LOG_LEVEL`` に、インスツルメンテッド・ファンクションの``DEBUG`` を設定する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:81
msgid "Check AWS CloudWatch for spans."
msgstr "AWS CloudWatchでスパンを確認する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:82
msgid "Search for specific spans in the back end."
msgstr "バックエンドで特定のスパンを検索する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:84
msgid "For metric data, follow these steps:"
msgstr "メトリックデータについては、以下の手順に従ってください："

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:86
msgid "Set the ``VERBOSE`` environment variable to ``true``."
msgstr "環境変数``VERBOSE`` を``true`` に設定する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:87
msgid "Set the ``HTTP_TRACING`` environment variable to ``true``."
msgstr "環境変数``HTTP_TRACING`` を``true`` に設定する。"

#: ../../gdi/get-data-in/serverless/aws/otel-lambda-layer/troubleshooting-lambda-layer.rst:88
msgid "Search for relevant log messages in AWS CloudWatch."
msgstr "AWS CloudWatchで関連するログメッセージを検索する。"

#: ../../gdi/get-data-in/serverless/aws/signalfx-lambda-wrappers.rst:-1
msgid "Follow these instructions to instrument your AWS Lambda functions using the SignalFx Lambda wrappers in Splunk Observability Cloud. Note that the SignalFx Lambda wrappers are being deprecated."
msgstr "以下の手順に従って、Splunk Observability Cloud で SignalFx Lambda ラッパーを使用して AWS Lambda 関数を計測してください。SignalFx Lambdaラッパーは非推奨であることに注意してください。"

#: ../../gdi/get-data-in/serverless/aws/signalfx-lambda-wrappers.rst:5
msgid "Instrument functions using the SignalFx Lambda wrappers"
msgstr "SignalFx Lambdaラッパーを使用したインストゥルメント関数"

#: ../../gdi/get-data-in/serverless/aws/signalfx-lambda-wrappers.rst:12
msgid "The SignalFx Lambda wrappers are deprecated. Use the :ref:`Splunk OpenTelemetry Lambda Layer <splunk-otel-lambda-layer>` to instrument your lambdas on AWS to send traces and metrics to Splunk Observability Cloud. To learn how to migrate to the Splunk OpenTelemetry Lambda Layer, see :ref:`migrate-signalfx-lambda-wrappers`."
msgstr "SignalFx Lambdaラッパーは非推奨です。:ref:`Splunk OpenTelemetry Lambda Layer <splunk-otel-lambda-layer>` を使用して AWS 上のラムダを計測し、トレースとメトリクスを Splunk Observability Cloud に送信します。Splunk OpenTelemetry Lambda Layer への移行方法については、:ref:`migrate-signalfx-lambda-wrappers` を参照してください。"

#: ../../gdi/get-data-in/serverless/aws/signalfx-lambda-wrappers.rst:14
msgid "The SignalFx Lambda wrappers instrument your AWS Lambda functions to send metrics and traces to Splunk Observability Cloud. Lambda wrappers are available for the following programming languages:"
msgstr "SignalFx Lambda ラッパーは、AWS Lambda 関数をインストルメント化し、メトリクスとトレースを Splunk Observability Cloud に送信します。ラムダ・ラッパーは以下のプログラミング言語で利用できる："

#: ../../gdi/get-data-in/serverless/aws/signalfx-lambda-wrappers.rst:16
msgid "Java. See :new-page:`SignalFx Java Wrapper <https://github.com/signalfx/lambda-java>` on GitHub."
msgstr "Java.GitHub の:new-page:`SignalFx Java Wrapper<https://github.com/signalfx/lambda-java>` をご覧ください。"

#: ../../gdi/get-data-in/serverless/aws/signalfx-lambda-wrappers.rst:17
msgid "Python. See :new-page:`SignalFx Python Wrapper <https://github.com/signalfx/lambda-python>` on GitHub."
msgstr "Python.GitHub の:new-page:`SignalFx Python Wrapper<https://github.com/signalfx/lambda-python>` を参照してください。"

#: ../../gdi/get-data-in/serverless/aws/signalfx-lambda-wrappers.rst:18
msgid "Node.js. See :new-page:`SignalFx Node Wrapper <https://github.com/signalfx/lambda-nodejs>` on GitHub."
msgstr "Node.js.GitHub の:new-page:`SignalFx Node Wrapper<https://github.com/signalfx/lambda-nodejs>` をご覧ください。"

#: ../../gdi/get-data-in/serverless/aws/signalfx-lambda-wrappers.rst:19
msgid "Ruby. See :new-page:`SignalFx Ruby Wrapper <https://github.com/signalfx/lambda-ruby>` on GitHub."
msgstr "ルビーGitHub の:new-page:`SignalFx Ruby Wrapper<https://github.com/signalfx/lambda-ruby>` を参照してください。"

#: ../../gdi/get-data-in/serverless/aws/signalfx-lambda-wrappers.rst:20
msgid "C#. See :new-page:`SignalFx C# Wrapper <https://github.com/signalfx/lambda-csharp>` on GitHub."
msgstr "C#.GitHub の:new-page:`SignalFx C# Wrapper<https://github.com/signalfx/lambda-csharp>` をご覧ください。"

#: ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:10
msgid "Instrument your Lambda function"
msgstr "ラムダ関数をインストゥルメント化する"

#: ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:10 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:228
msgid "Advanced configuration"
msgstr "高度な設定"

#: ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:10
msgid "Metrics and dimensions"
msgstr "指標と寸法"

#: ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:10
msgid "SignalFx Lambda wrappers"
msgstr "SignalFx ラムダ・ラッパー"

#: ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:10
msgid "Migrate from Lambda wrappers"
msgstr "ラムダ・ラッパーからの移行"

#: ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:-1
msgid "Learn how to instrument your AWS Lambda functions to export spans and metrics to Splunk Observability Cloud. The layer supports numerous programming languages through integrated wrappers, and includes a metrics extension that collects high-resolution, low-latency metrics on function execution."
msgstr "スパンとメトリクスを Splunk Observability Cloud にエクスポートするための AWS Lambda 関数のインスツルメンテーション方法について説明します。このレイヤーは、統合されたラッパーによって多くのプログラミング言語をサポートし、関数実行に関する高解像度で低レイテンシーのメトリクスを収集するメトリクス拡張機能を含む。"

#: ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:5
msgid "Instrument AWS Lambda functions for Splunk Observability Cloud"
msgstr "AWSのLambda関数をSplunk Observability Cloudにインストルメントする"

#: ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:20
msgid "Use the Splunk OpenTelemetry Lambda Layer to automatically instrument AWS Lambda functions to send application metrics and traces to Splunk APM. The layer supports numerous programming languages through integrated wrappers, and includes a metrics extension that collects high-resolution, low-latency metrics every time the function runs."
msgstr "Splunk OpenTelemetry Lambda Layer を使用して、アプリケーションのメトリクスとトレースを Splunk APM に送信する AWS Lambda 関数を自動的に計測します。このレイヤーは、統合されたラッパーによって多くのプログラミング言語をサポートし、関数が実行されるたびに高解像度で低遅延のメトリクスを収集するメトリクス拡張機能を含んでいる。"

#: ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:22
msgid "To instrument your AWS Lambda function using the Splunk OpenTelemetry Lambda Layer, follow these steps:"
msgstr "Splunk OpenTelemetry Lambda Layer を使用して AWS Lambda 関数を計測するには、以下の手順に従います："

#: ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:24
msgid ":ref:`otel-lambda-layer-requirements`."
msgstr ":ref:`otel-lambda-layer-requirements`."

#: ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:25
msgid ":ref:`install-otel-lambda-layer`."
msgstr ":ref:`install-otel-lambda-layer`."

#: ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:26
msgid ":ref:`set-env-vars-otel-lambda`."
msgstr ":ref:`set-env-vars-otel-lambda`."

#: ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:28
msgid "Splunk Observability Cloud can also collect AWS Lambda metrics and logs from AWS CloudWatch. See :ref:`get-started-aws` for more information on how to connect Splunk Observability Cloud to your AWS services."
msgstr "Splunk Observability Cloud は AWS CloudWatch から AWS Lambda のメトリクスとログを収集することもできます。Splunk Observability Cloud を AWS サービスに接続する方法については、:ref:`get-started-aws` を参照してください。"

#: ../../gdi/get-data-in/serverless/aws/splunk-otel-lambda-layer.rst:30
msgid "The :ref:`SignalFx Lambda wrappers <signalfx-lambda-wrappers>` are deprecated. To migrate to the Splunk OpenTelemetry Lambda Layer, see :ref:`migrate-signalfx-lambda-wrappers`."
msgstr ":ref:`SignalFx Lambda wrappers <signalfx-lambda-wrappers>` は非推奨。Splunk OpenTelemetry Lambda Layer に移行するには、:ref:`migrate-signalfx-lambda-wrappers` を参照してください。"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:-1
msgid "Learn how to instrument your Azure functions to export spans to Splunk Observability Cloud. Both in-process and isolated functions are supported."
msgstr "スパンを Splunk Observability Cloud にエクスポートするために Azure 関数をインストルメント化する方法をご紹介します。インプロセスおよびアイソレーテッド・ファンクションの両方がサポートされている。"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:5
msgid "Instrument Azure functions for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用に Azure 関数をインストゥルメントする"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:10
msgid "By instrumenting .NET Azure functions you can send spans to Splunk Observability Cloud every time your functions run. You can instrument both isolated worker process and in-process functions."
msgstr ".NET Azure 関数をインスツルメンテーションすることで、関数が実行されるたびに Splunk Observability Cloud にスパンを送信できます。孤立したワーカー・プロセスとプロセス内関数の両方を計測することができる。"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:12
msgid "To instrument your .NET Azure function with OpenTelemetry to send telemetry to Splunk Observability Cloud, follow these high-level steps:"
msgstr "テレメトリを Splunk Observability Cloud に送信するために、.NET Azure 関数を OpenTelemetry で計測するには、以下のハイレベルなステップに従います："

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:14
msgid ":ref:`azure-functions-step-1`"
msgstr ":ref:`azure-functions-step-1`"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:15
msgid ":ref:`azure-functions-step-2`"
msgstr ":ref:`azure-functions-step-2`"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:16
msgid ":ref:`azure-functions-step-3`"
msgstr ":ref:`azure-functions-step-3`"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:17
msgid ":ref:`azure-functions-step-4`"
msgstr ":ref:`azure-functions-step-4`"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:18
msgid ":ref:`azure-functions-step-5`"
msgstr ":ref:`azure-functions-step-5`"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:20
msgid "The SignalFx C# Azure Function wrapper is deprecated. Use the following method instrument your Azure functions."
msgstr "SignalFx C# Azure Function ラッパーは非推奨です。Azure関数のインストルメントには、以下の方法を使用してください。"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:25
msgid "Define the environment variables"
msgstr "環境変数の定義"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:27
msgid "Set the required environment variables in your function's settings:"
msgstr "関数の設定で必要な環境変数を設定します："

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:29
msgid "Select your function in Function App."
msgstr "ファンクションアプリでファンクションを選択します。"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:45
msgid "Your Splunk Observability Cloud realm, for example ``us0``. To find the realm name of your account, open the navigation menu in Splunk Observability Cloud, select :menuselection:`Settings`, and select your username. The realm name appears in the :guilabel:`Organizations` section."
msgstr "Splunk Observability Cloud レルム、例えば``us0`` 。アカウントのレルム名を確認するには、Splunk Observability Cloud のナビゲーションメニューを開き、:menuselection:`Settings` を選択し、ユーザー名を選択します。レルム名は:guilabel:`Organizations` セクションに表示される。"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:47
msgid "Add any other settings you might need."
msgstr "その他必要な設定を追加する。"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:52
msgid "Add the required libraries using NuGet"
msgstr "NuGetを使って必要なライブラリを追加する"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:54
msgid "Add the following libraries using NuGet in Visual Studio:"
msgstr "Visual StudioのNuGetを使って以下のライブラリを追加する："

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:57 ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:89 ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:229 ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:318
msgid "Isolated worker process function"
msgstr "分離されたワーカープロセス機能"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:59 ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:70
msgid "Activate the :strong:`Include prerelease` setting."
msgstr ":strong:`Include prerelease` 設定を有効にする。"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:60
msgid "Install the latest version of the following libraries:"
msgstr "以下のライブラリの最新版をインストールする："

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:62
msgid "OpenTelemetry"
msgstr "OpenTelemetry"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:63
msgid "OpenTelemetry.Exporter.OpenTelemetryProtocol"
msgstr "OpenTelemetry.Exporter.OpenTelemetryProtocol"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:64
msgid "OpenTelemetry.Instrumentation.Http"
msgstr "OpenTelemetry.Instrumentation.Http"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:65
msgid "OpenTelemetry.Instrumentation.AspNetCore"
msgstr "OpenTelemetry.Instrumentation.AspNetCore"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:68 ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:150 ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:286 ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:326
msgid "In-process function"
msgstr "インプロセス機能"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:71
msgid "Install the specified version of the following libraries:"
msgstr "以下のライブラリの指定されたバージョンをインストールする："

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:73
msgid "OpenTelemetry version 1.3.2"
msgstr "OpenTelemetryバージョン1.3.2"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:74
msgid "OpenTelemetry.Exporter.OpenTelemetryProtocol version1.3.2"
msgstr "OpenTelemetry.Exporter.OpenTelemetryProtocol version1.3.2"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:75
msgid "OpenTelemetry.Instrumentation.Http version 1.0.0-rc9.4"
msgstr "OpenTelemetry.Instrumentation.Http version 1.0.0-rc9.4"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:76
msgid "OpenTelemetry.Instrumentation.AspNetCore version 1.0.0-rc9.4"
msgstr "OpenTelemetry.Instrumentation.AspNetCore version 1.0.0-rc9.4"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:77
msgid "Microsoft.Azure.Functions.Extensions version 1.1.0"
msgstr "Microsoft.Azure.Functions.Extensions バージョン 1.1.0"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:79
msgid "Due to runtime dependencies, only the indicated versions are guaranteed to work when instrumenting in-process functions."
msgstr "実行時の依存関係があるため、プロセス内関数のインスツルメンテーションでは、指定されたバージョンのみが動作することが保証されています。"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:84
msgid "Initialize OpenTelemetry in the code"
msgstr "コード内でOpenTelemetryを初期化する"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:86
msgid "After adding the dependencies, initialize OpenTelemetry in your function:"
msgstr "依存関係を追加したら、関数内で OpenTelemetry を初期化します："

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:91
msgid "Add startup initialization in the Program.cs file:"
msgstr "Program.csファイルにスタートアップ初期化を追加する："

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:147
msgid "When instrumenting isolated worker process functions, you can encapsulate startup initialization and parameters into other functions."
msgstr "分離されたワーカープロセス関数をインスツルメンテーションする場合、起動時の初期化やパラメータを他の関数にカプセル化することができます。"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:152
msgid "Define a startup function and decorate the assembly with it. The startup function uses the Azure.Functions.Extensions package to collect useful metadata."
msgstr "スタートアップ関数を定義し、その関数でアセンブリを飾る。スタートアップ関数は、Azure.Functions.Extensions パッケージを使用して有用なメタデータを収集します。"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:224
msgid "Instrument the code to send spans"
msgstr "スパンを送信するコードを作成する"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:226
msgid "Next, instrument your code using OpenTelemetry. Use the following examples as a starting point to instrument your code."
msgstr "次に、OpenTelemetryを使ってコードを計測する。以下の例を出発点として、コードを計測してください。"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:231
msgid "The following example shows how to instrument a function using start and stop helper functions:"
msgstr "次の例では、startヘルパー関数とstopヘルパー関数を使ったインスツルメンテーションの方法を示しています："

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:288
msgid "The following example shows how to retrieve ``faas`` attributes:"
msgstr "次の例は、``faas`` 属性を取得する方法を示している："

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:313
msgid "Check that data is coming in"
msgstr "データが入力されていることを確認する"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:315
msgid "Run your function and search for its spans in Splunk APM. See :ref:`span-search` for more information."
msgstr "関数を実行し、Splunk APM でスパンを検索します。詳しくは:ref:`span-search` 。"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:320
msgid "The following image shows a span sent by an isolated worker process function. Notice the ``faas`` tags:"
msgstr "次の画像は、孤立したワーカー・プロセス機能によって送信されたスパンを示している。``faas`` ："

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:-1
msgid "Span details from an isolated worker process function"
msgstr "孤立したワーカープロセス関数からのスパン詳細"

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:328
msgid "The following image shows a span sent by an in-process function. Notice the ``faas`` tags:"
msgstr "次の図は、インプロセス機能によって送信されたスパンを示している。``faas`` ："

#: ../../gdi/get-data-in/serverless/azure/instrument-azure-functions.rst:-1
msgid "Span details from an in-process function"
msgstr "インプロセス関数からのスパンの詳細"

#: ../../gdi/get-data-in/serverless/gcp/instrument-cloud-functions.rst:7
msgid "Instrument GCP Cloud Functions for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用の GCP クラウド関数を実装する"

#: ../../gdi/get-data-in/serverless/instrument-serverless-functions.rst:10
msgid "Instrument AWS Lambda functions"
msgstr "AWS Lambda関数を実装する"

#: ../../gdi/get-data-in/serverless/instrument-serverless-functions.rst:10
msgid "Instrument Azure functions"
msgstr "インストゥルメント・アズールの機能"

#: ../../gdi/get-data-in/serverless/instrument-serverless-functions.rst:-1
msgid "Start sending serverless functions metrics and spans to Splunk Observability Cloud."
msgstr "サーバーレス関数のメトリクスとスパンを Splunk Observability Cloud に送信します。"

#: ../../gdi/get-data-in/serverless/instrument-serverless-functions.rst:5
msgid "Instrument serverless functions for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用のサーバーレス関数を実装する"

#: ../../gdi/get-data-in/serverless/instrument-serverless-functions.rst:16
msgid "Instrument your serverless functions to send metrics and traces to Splunk Observability Cloud, so that you can explore your function data using dashboards, set up alerts, and more."
msgstr "サーバーレス関数をインスツルメンテーションしてメトリクスとトレースを Splunk Observability Cloud に送信すると、ダッシュボードを使用して関数データを調査したり、アラートを設定したりできます。"

#: ../../gdi/get-data-in/serverless/instrument-serverless-functions.rst:18
msgid "You can instrument functions on each of the following cloud platforms:"
msgstr "以下の各クラウドプラットフォーム上で機能を計測することができる："

#: ../../gdi/get-data-in/serverless/instrument-serverless-functions.rst:20
msgid ":ref:`AWS <splunk-otel-lambda-layer>`"
msgstr ":ref:`AWS <splunk-otel-lambda-layer>`"

#: ../../gdi/get-data-in/serverless/instrument-serverless-functions.rst:21
msgid ":ref:`Azure <splunk-otel-azure>`"
msgstr ":ref:`Azure <splunk-otel-azure>`"

#: ../../gdi/gitlab-monitors.rst:-1
msgid "Landing for application receivers for GitLab applications in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud で GitLab アプリケーションのアプリケーションレシーバーをランディングする。"

#: ../../gdi/gitlab-monitors.rst:5
msgid "Configure application receivers for GitLab"
msgstr "GitLabのアプリケーションレシーバーを設定する"

#: ../../gdi/gitlab-monitors.rst:16
msgid "These application receivers gather performance metrics from GitLab."
msgstr "これらのアプリケーション・レシーバーはGitLabからパフォーマンス・メトリクスを収集します。"

#: ../../gdi/gitlab-monitors.rst:18
msgid ":ref:`gitlab`"
msgstr ":ref:`gitlab`"

#: ../../gdi/hosts-servers.rst:-1
msgid "Landing for application receivers for host and server applications in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud のホストおよびサーバーアプリケーションのアプリケーションレシーバーのランディング。"

#: ../../gdi/hosts-servers.rst:5
msgid "Configure application receivers for hosts and servers"
msgstr "ホストとサーバーのアプリケーション・レシーバーの設定"

#: ../../gdi/hosts-servers.rst:55
msgid "These application receivers gather metrics from their associated host- and server-related applications and the hosts the applications are running on."
msgstr "これらのアプリケーション・レシーバは、関連するホストおよびサーバ関連のアプリケーションと、そのアプリケーションが実行されているホストからメトリクスを収集します。"

#: ../../gdi/hosts-servers.rst:57
msgid ":ref:`amazon-ecs-metadata`"
msgstr ":ref:`amazon-ecs-metadata`"

#: ../../gdi/hosts-servers.rst:58
msgid ":ref:`apache-httpserver`"
msgstr ":ref:`apache-httpserver`"

#: ../../gdi/hosts-servers.rst:59
msgid ":ref:`apache-tomcat`"
msgstr ":ref:`apache-tomcat`"

#: ../../gdi/hosts-servers.rst:60
msgid ":ref:`zookeeper`"
msgstr ":ref:`zookeeper`"

#: ../../gdi/hosts-servers.rst:61
msgid ":ref:`chrony`"
msgstr ":ref:`chrony`"

#: ../../gdi/hosts-servers.rst:62
msgid ":ref:`collectd-plugin`"
msgstr ":ref:`collectd-plugin`"

#: ../../gdi/hosts-servers.rst:63
msgid ":ref:`collectd-df`"
msgstr ":ref:`collectd-df`"

#: ../../gdi/hosts-servers.rst:64
msgid ":ref:`collectd-uptime`"
msgstr ":ref:`collectd-uptime`"

#: ../../gdi/hosts-servers.rst:65
msgid ":ref:`coredns`"
msgstr ":ref:`coredns`"

#: ../../gdi/hosts-servers.rst:66
msgid ":ref:`couchbase`"
msgstr ":ref:`couchbase`"

#: ../../gdi/hosts-servers.rst:67
msgid ":ref:`cpu`"
msgstr ":ref:`cpu`"

#: ../../gdi/hosts-servers.rst:68
msgid ":ref:`cpufreq`"
msgstr ":ref:`cpufreq`"

#: ../../gdi/hosts-servers.rst:69
msgid ":ref:`disk`"
msgstr ":ref:`disk`"

#: ../../gdi/hosts-servers.rst:70
msgid ":ref:`docker`"
msgstr ":ref:`docker`"

#: ../../gdi/hosts-servers.rst:71
msgid ":ref:`elasticsearch`"
msgstr ":ref:`elasticsearch`"

#: ../../gdi/hosts-servers.rst:72
msgid ":ref:`elasticsearch-query`"
msgstr ":ref:`elasticsearch-query`"

#: ../../gdi/hosts-servers.rst:73
msgid ":ref:`filesystems`"
msgstr ":ref:`filesystems`"

#: ../../gdi/hosts-servers.rst:74
msgid ":ref:`haproxy`"
msgstr ":ref:`haproxy`"

#: ../../gdi/hosts-servers.rst:75
msgid ":ref:`health-checker`"
msgstr ":ref:`health-checker`"

#: ../../gdi/hosts-servers.rst:76
msgid ":ref:`host-metadata`"
msgstr ":ref:`host-metadata`"

#: ../../gdi/hosts-servers.rst:77 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:72
msgid ":ref:`host-metrics-receiver`"
msgstr ":ref:`host-metrics-receiver`"

#: ../../gdi/hosts-servers.rst:78
msgid ":ref:`processes`"
msgstr ":ref:`processes`"

#: ../../gdi/hosts-servers.rst:79 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:48
msgid ":ref:`processlist`"
msgstr ":ref:`processlist`"

#: ../../gdi/hosts-servers.rst:80
msgid ":ref:`load`"
msgstr ":ref:`load`"

#: ../../gdi/hosts-servers.rst:81
msgid ":ref:`http`"
msgstr ":ref:`http`"

#: ../../gdi/hosts-servers.rst:82
msgid ":ref:`interface`"
msgstr ":ref:`interface`"

#: ../../gdi/hosts-servers.rst:83
msgid ":ref:`jenkins`"
msgstr ":ref:`jenkins`"

#: ../../gdi/hosts-servers.rst:84
msgid ":ref:`kafka-consumer`"
msgstr ":ref:`kafka-consumer`"

#: ../../gdi/hosts-servers.rst:85
msgid ":ref:`kafka-producer`"
msgstr ":ref:`kafka-producer`"

#: ../../gdi/hosts-servers.rst:86
msgid ":ref:`windows-iis`"
msgstr ":ref:`windows-iis`"

#: ../../gdi/hosts-servers.rst:87
msgid ":ref:`nginx`"
msgstr ":ref:`nginx`"

#: ../../gdi/hosts-servers.rst:88
msgid ":ref:`telegraf-ntpq`"
msgstr ":ref:`telegraf-ntpq`"

#: ../../gdi/hosts-servers.rst:89
msgid ":ref:`collectd-php-fpm`"
msgstr ":ref:`collectd-php-fpm`"

#: ../../gdi/hosts-servers.rst:90
msgid ":ref:`procstat`"
msgstr ":ref:`procstat`"

#: ../../gdi/hosts-servers.rst:91
msgid ":ref:`solr`"
msgstr ":ref:`solr`"

#: ../../gdi/hosts-servers.rst:92
msgid ":ref:`supervisor`"
msgstr ":ref:`supervisor`"

#: ../../gdi/hosts-servers.rst:93
msgid ":ref:`collectd-systemd`"
msgstr ":ref:`collectd-systemd`"

#: ../../gdi/hosts-servers.rst:94
msgid ":ref:`telegraf-varnish`"
msgstr ":ref:`telegraf-varnish`"

#: ../../gdi/hosts-servers.rst:95
msgid ":ref:`vsphere`"
msgstr ":ref:`vsphere`"

#: ../../gdi/hosts-servers.rst:96
msgid ":ref:`telegraf-win-services`"
msgstr ":ref:`telegraf-win-services`"

#: ../../gdi/index.rst:10
msgid "Caches and memory TOGGLE"
msgstr "キャッシュとメモリのトグル"

#: ../../gdi/index.rst:10
msgid "Cloud platforms TOGGLE"
msgstr "クラウドプラットフォームTOGGLE"

#: ../../gdi/index.rst:10
msgid "Databases TOGGLE"
msgstr "データベースTOGGLE"

#: ../../gdi/index.rst:10
msgid "GitLab TOGGLE"
msgstr "GitLab TOGGLE"

#: ../../gdi/index.rst:10
msgid "Hosts and servers TOGGLE"
msgstr "ホストとサーバーのTOGGLE"

#: ../../gdi/index.rst:10
msgid "Languages TOGGLE"
msgstr "言語 トグル"

#: ../../gdi/index.rst:10
msgid "Messaging TOGGLE"
msgstr "メッセージングTOGGLE"

#: ../../gdi/index.rst:10
msgid "Monitoring TOGGLE"
msgstr "トグル監視"

#: ../../gdi/index.rst:10
msgid "Networks TOGGLE"
msgstr "ネットワーク・トグル"

#: ../../gdi/index.rst:10
msgid "Orchestration TOGGLE"
msgstr "オーケストレーション・トグル"

#: ../../gdi/index.rst:-1
msgid "This page provides a listing of all host and application receivers in Splunk Observability Cloud."
msgstr "このページでは、Splunk Observability Cloud のすべてのホストおよびアプリケーションレシーバーのリストを提供します。"

#: ../../gdi/index.rst:5
msgid "Available host and application monitors"
msgstr "利用可能なホストモニターとアプリケーションモニター"

#: ../../gdi/index.rst:27 ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:21 ../../gdi/smart-agent/smart-agent-commands.rst:12 ../../gdi/smart-agent/smart-agent-intro.rst:16 ../../gdi/smart-agent/smart-agent-resources.rst:10
msgid "The SignalFx Smart Agent has reached End of Support. While the agent can capture and export telemetry to Splunk Observability Cloud, Splunk no longer provides any support, feature updates, security, or bug fixes. Such requests are not bound by any SLAs."
msgstr "SignalFx Smart Agentのサポートが終了しました。エージェントはテレメトリをキャプチャして Splunk Observability Cloud にエクスポートできますが、Splunk はサポート、機能アップデート、セキュリティ、バグ修正を提供しなくなりました。このようなリクエストは、いかなるSLAにも拘束されない。"

#: ../../gdi/index.rst:29
msgid "Note that this only affects the agent; Smart Agent application receivers are available and supported through the Splunk Distribution of OpenTelemetry Collector. Native OTel receivers are supported as well."
msgstr "スマートエージェントのアプリケーションレシーバーは、OpenTelemetry Collector の Splunk ディストリビューションで利用でき、サポートされています。ネイティブのOTelレシーバーもサポートされている。"

#: ../../gdi/index.rst:31
msgid "To find a receiver for your application, see the alphabetical listing of receivers on this page, or use the menu to browse for receivers by application category."
msgstr "アプリケーションに合ったレシーバーを見つけるには、このページのレシーバーのアルファベット順リストを参照するか、メニューを使用してアプリケーションカテゴリー別にレシーバーをブラウズしてください。"

#: ../../gdi/index.rst:33
msgid "If available, using native components instead of Smart Agent application receivers is the best practice. To see native OpenTelemetry receivers, refer to :ref:`otel-components`."
msgstr "もし可能であれば、スマートエージェントのアプリケーションレシーバーの代わりにネイティブコンポーネントを使用するのがベストプラクティスです。ネイティブの OpenTelemetry 受信機については、:ref:`otel-components` を参照してください。"

#: ../../gdi/index.rst:35
msgid "For Smart Agent application receivers and monitors, you can use the :ref:`Splunk Distribution of OpenTelemetry Collector <otel-intro>` with the :ref:`Smart Agent receiver <smartagent-receiver>`, a native OTel component, to send data to Splunk Observability Cloud."
msgstr "Smart Agent アプリケーションのレシーバーとモニターでは、:ref:`Splunk Distribution of OpenTelemetry Collector <otel-intro>` を OTel ネイティブコンポーネントである:ref:`Smart Agent receiver <smartagent-receiver>` と一緒に使用することで、Splunk Observability Cloud にデータを送信することができます。"

#: ../../gdi/languages.rst:-1
msgid "Landing for application receivers for language applications in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud の言語アプリケーション用アプリケーションレシーバーのランディング。"

#: ../../gdi/languages.rst:5
msgid "Configure application receivers for languages"
msgstr "アプリケーションレシーバーの言語設定"

#: ../../gdi/languages.rst:21
msgid "These application receivers gather metrics from their associated language-related applications and the hosts the applications are running on."
msgstr "これらのアプリケーション・レシーバーは、関連する言語関連アプリケーションと、そのアプリケーションが実行されているホストからメトリクスを収集します。"

#: ../../gdi/languages.rst:23
msgid ":ref:`asp-dot-net`"
msgstr ":ref:`asp-dot-net`"

#: ../../gdi/languages.rst:24
msgid ":ref:`expvar`"
msgstr ":ref:`expvar`"

#: ../../gdi/languages.rst:25
msgid ":ref:`genericjmx`"
msgstr ":ref:`genericjmx`"

#: ../../gdi/languages.rst:26
msgid ":ref:`java-monitor`"
msgstr ":ref:`java-monitor`"

#: ../../gdi/languages.rst:27
msgid ":ref:`jmx`"
msgstr ":ref:`jmx`"

#: ../../gdi/languages.rst:28
msgid ":ref:`microsoft-dotnet`"
msgstr ":ref:`microsoft-dotnet`"

#: ../../gdi/messaging.rst:-1
msgid "Landing for application receivers for messaging applications in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud のメッセージングアプリケーション用アプリケーションレシーバーのランディング。"

#: ../../gdi/messaging.rst:5
msgid "Configure application receivers for messaging"
msgstr "メッセージング用のアプリケーション・レシーバーを設定する"

#: ../../gdi/messaging.rst:18
msgid "These application receivers gather metrics from their associated messaging-related applications and the hosts the applications are running on."
msgstr "これらのアプリケーション・レシーバーは、関連するメッセージング関連アプリケーションと、そのアプリケーションが実行されているホストからメトリクスを収集します。"

#: ../../gdi/messaging.rst:20
msgid ":ref:`activemq`"
msgstr ":ref:`activemq`"

#: ../../gdi/messaging.rst:21
msgid ":ref:`kafka`"
msgstr ":ref:`kafka`"

#: ../../gdi/messaging.rst:22
msgid ":ref:`rabbitmq`"
msgstr ":ref:`rabbitmq`"

#: ../../gdi/monitoring.rst:-1
msgid "Landing for application receivers for monitoring applications in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud でアプリケーションを監視するためのアプリケーションレシーバーのランディング。"

#: ../../gdi/monitoring.rst:5
msgid "Configure application exporters and receivers for monitoring"
msgstr "モニタリングのためのアプリケーション・エクスポーターとレシーバーの設定"

#: ../../gdi/monitoring.rst:30
msgid "These application receivers gather metrics from their associated monitoring applications and the hosts the applications are running on."
msgstr "これらのアプリケーション・レシーバーは、関連するモニタリング・アプリケーションおよびアプリケーションが実行されているホストからメトリクスを収集します。"

#: ../../gdi/monitoring.rst:32
msgid ":ref:`cadvisor`"
msgstr ":ref:`cadvisor`"

#: ../../gdi/monitoring.rst:33
msgid ":ref:`cgroups`"
msgstr ":ref:`cgroups`"

#: ../../gdi/monitoring.rst:35 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:96
msgid ":ref:`jaeger-grpc`"
msgstr ":ref:`jaeger-grpc`"

#: ../../gdi/monitoring.rst:36
msgid ":ref:`nagios`"
msgstr ":ref:`nagios`"

#: ../../gdi/monitoring.rst:37
msgid ":ref:`prometheus-exporter`"
msgstr ":ref:`prometheus-exporter`"

#: ../../gdi/monitoring.rst:38
msgid ":ref:`prometheus-go`"
msgstr ":ref:`prometheus-go`"

#: ../../gdi/monitoring.rst:39
msgid ":ref:`prometheus-nginx-ingress`"
msgstr ":ref:`prometheus-nginx-ingress`"

#: ../../gdi/monitoring.rst:40
msgid ":ref:`prometheus-nginx-vts`"
msgstr ":ref:`prometheus-nginx-vts`"

#: ../../gdi/monitoring.rst:41
msgid ":ref:`prometheus-node`"
msgstr ":ref:`prometheus-node`"

#: ../../gdi/monitoring.rst:42 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:75
msgid ":ref:`prometheus-receiver`"
msgstr ":ref:`prometheus-receiver`"

#: ../../gdi/monitoring.rst:43
msgid ":ref:`prometheus-velero`"
msgstr ":ref:`prometheus-velero`"

#: ../../gdi/monitoring.rst:44 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:74 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:97
msgid ":ref:`signalfx-forwarder`"
msgstr ":ref:`signalfx-forwarder`"

#: ../../gdi/monitoring.rst:45
msgid ":ref:`telegraf-win-perf-counters`"
msgstr ":ref:`telegraf-win-perf-counters`"

#: ../../gdi/monitoring.rst:47
msgid "These exporters determine where to send the received data."
msgstr "これらのエクスポータは、受信したデータの送信先を決定する。"

#: ../../gdi/monitoring.rst:49 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:106
msgid ":ref:`splunk-apm-exporter`"
msgstr ":ref:`splunk-apm-exporter`"

#: ../../gdi/monitors-cache/memcached.md:6
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Memcached monitor type to collect the following information from Memcached nodes:"
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と Memcached モニタタイプを使用して、Memcached ノードから以下の情報を収集します："

#: ../../gdi/monitors-cache/memcached.md:8
msgid "Request information (including hits, misses & evictions)"
msgstr "リクエスト情報（ヒット、ミス、退去を含む）"

#: ../../gdi/monitors-cache/memcached.md:9
msgid "Current connections"
msgstr "現在の接続"

#: ../../gdi/monitors-cache/memcached.md:10
msgid "Net input/output bytes"
msgstr "正味入出力バイト数"

#: ../../gdi/monitors-cache/memcached.md:11
msgid "Number of items cached"
msgstr "キャッシュされたアイテム数"

#: ../../gdi/monitors-cache/memcached.md:13 ../../gdi/monitors-cache/memory.md:19 ../../gdi/monitors-databases/apache-couchdb.md:9 ../../gdi/monitors-databases/apache-spark.md:16 ../../gdi/monitors-databases/cassandra.md:8 ../../gdi/monitors-databases/consul.md:19 ../../gdi/monitors-databases/hadoop.md:16 ../../gdi/monitors-databases/hadoopjmx.md:18 ../../gdi/monitors-databases/mongodb.md:21 ../../gdi/monitors-databases/mysql.md:16 ../../gdi/monitors-hosts/amazon-ecs-metadata.md:9 ../../gdi/monitors-hosts/apache-httpserver.md:24 ../../gdi/monitors-hosts/apache-tomcat.md:9 ../../gdi/monitors-hosts/apache-zookeeper.md:8 ../../gdi/monitors-hosts/chrony.md:8
#: ../../gdi/monitors-hosts/collectd-plugin.md:9 ../../gdi/monitors-hosts/collectd-uptime.md:9 ../../gdi/monitors-hosts/couchbase.md:9 ../../gdi/monitors-hosts/cpufreq.md:10 ../../gdi/monitors-hosts/jenkins.md:13 ../../gdi/monitors-hosts/php-fpm.md:9 ../../gdi/monitors-languages/genericjmx.md:9 ../../gdi/monitors-messaging/apache-activemq.md:13 ../../gdi/monitors-messaging/apache-kafka.md:9 ../../gdi/monitors-orchestration/mesos-marathon.md:8
msgid "This integration is only available on Kubernetes and Linux."
msgstr "この統合はKubernetesとLinuxでのみ利用可能だ。"

#: ../../gdi/monitors-cache/memcached.md:15 ../../gdi/monitors-cache/memory.md:21 ../../gdi/monitors-cache/opcache.md:11 ../../gdi/monitors-cloud/kong.md:28 ../../gdi/monitors-cloud/openstack.md:17 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:13 ../../gdi/monitors-conviva/conviva.md:14 ../../gdi/monitors-databases/apache-couchdb.md:11 ../../gdi/monitors-databases/apache-spark.md:18 ../../gdi/monitors-databases/cassandra.md:10 ../../gdi/monitors-databases/consul.md:23 ../../gdi/monitors-databases/etcd.md:10 ../../gdi/monitors-databases/exec-input.md:9 ../../gdi/monitors-databases/hadoop.md:18 ../../gdi/monitors-databases/hadoopjmx.md:20
#: ../../gdi/monitors-databases/logparser.md:11 ../../gdi/monitors-databases/microsoft-sql-server.md:9 ../../gdi/monitors-databases/mongodb.md:25 ../../gdi/monitors-databases/mysql.md:18 ../../gdi/monitors-databases/redis.md:22 ../../gdi/monitors-databases/sap-hana.md:11 ../../gdi/monitors-databases/sql.md:11 ../../gdi/monitors-gitlab/gitlab.md:21 ../../gdi/monitors-hosts/amazon-ecs-metadata.md:11 ../../gdi/monitors-hosts/apache-httpserver.md:26 ../../gdi/monitors-hosts/apache-tomcat.md:11 ../../gdi/monitors-hosts/apache-zookeeper.md:12 ../../gdi/monitors-hosts/chrony.md:10 ../../gdi/monitors-hosts/collectd-df.md:11 ../../gdi/monitors-hosts/collectd-plugin.md:11
#: ../../gdi/monitors-hosts/collectd-uptime.md:11 ../../gdi/monitors-hosts/coredns.md:11 ../../gdi/monitors-hosts/couchbase.md:11 ../../gdi/monitors-hosts/cpufreq.md:12 ../../gdi/monitors-hosts/docker.md:11 ../../gdi/monitors-hosts/elasticsearch-query.md:11 ../../gdi/monitors-hosts/elasticsearch.md:11 ../../gdi/monitors-hosts/haproxy.md:9 ../../gdi/monitors-hosts/health-checker.md:9 ../../gdi/monitors-hosts/host-processlist.md:11 ../../gdi/monitors-hosts/http.md:11 ../../gdi/monitors-hosts/jenkins.md:19 ../../gdi/monitors-hosts/kafka-consumer.md:11 ../../gdi/monitors-hosts/kafka-producer.md:11 ../../gdi/monitors-hosts/microsoft-windows-iis.md:13
#: ../../gdi/monitors-hosts/nginx.md:11 ../../gdi/monitors-hosts/ntpq.md:11 ../../gdi/monitors-hosts/php-fpm.md:11 ../../gdi/monitors-hosts/procstat.md:11 ../../gdi/monitors-hosts/solr.md:11 ../../gdi/monitors-hosts/supervisor.md:11 ../../gdi/monitors-hosts/systemd.md:11 ../../gdi/monitors-hosts/varnish.md:11 ../../gdi/monitors-hosts/vsphere.md:17 ../../gdi/monitors-hosts/win-services.md:9 ../../gdi/monitors-languages/asp-dot-net.md:13 ../../gdi/monitors-languages/expvar.md:12 ../../gdi/monitors-languages/genericjmx.md:11 ../../gdi/monitors-languages/java-monitor.md:15 ../../gdi/monitors-languages/jmx.md:24 ../../gdi/monitors-languages/microsoft-dotnet.md:29
#: ../../gdi/monitors-messaging/apache-activemq.md:17 ../../gdi/monitors-messaging/apache-kafka.md:18 ../../gdi/monitors-messaging/rabbitmq.md:13 ../../gdi/monitors-monitoring/cadvisor.md:15 ../../gdi/monitors-monitoring/cgroups.md:23 ../../gdi/monitors-monitoring/jaeger-grpc.md:13 ../../gdi/monitors-monitoring/nagios.md:24 ../../gdi/monitors-monitoring/prometheus-exporter.md:13 ../../gdi/monitors-monitoring/prometheus-go.md:11 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:13 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:13 ../../gdi/monitors-monitoring/prometheus-node.md:11 ../../gdi/monitors-monitoring/prometheus-velero.md:11
#: ../../gdi/monitors-monitoring/signalfx-forwarder.md:11 ../../gdi/monitors-monitoring/win_perf_counters.md:15 ../../gdi/monitors-network/aws-appmesh.md:14 ../../gdi/monitors-network/dns.md:9 ../../gdi/monitors-network/logstash-tcp.md:13 ../../gdi/monitors-network/net-io.md:9 ../../gdi/monitors-network/network-protocols.md:11 ../../gdi/monitors-network/ntp.md:11 ../../gdi/monitors-network/snmp.md:15 ../../gdi/monitors-network/statsd.md:13 ../../gdi/monitors-network/traefik.md:11 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:13 ../../gdi/monitors-orchestration/kubernetes-events.md:13 ../../gdi/monitors-orchestration/kubernetes-proxy.md:13
#: ../../gdi/monitors-orchestration/kubernetes-scheduler.md:11 ../../gdi/monitors-orchestration/mesos-marathon.md:10 ../../gdi/monitors-orchestration/openshift-cluster.md:17 ../../gdi/opentelemetry/collector-with-the-uf.rst:26 ../../gdi/opentelemetry/components/databricks-receiver.rst:13 ../../gdi/opentelemetry/components/prometheus-receiver.rst:15 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:15 ../../gdi/opentelemetry/components/smartagent-receiver.rst:17
msgid "Benefits"
msgstr "メリット"

#: ../../_includes/benefits.md:2
msgid "After you configure the integration, you can access these features:"
msgstr "統合を設定すると、これらの機能にアクセスできるようになります："

#: ../../_includes/benefits.md:4
msgid "View metrics. You can create your own custom dashboards, and most monitors provide built-in dashboards as well. For information about dashboards, see [View dashboards in Observability Cloud](https://docs.splunk.com/Observability/data-visualization/dashboards/view-dashboards.html#nav-View-dashboards)."
msgstr "メトリックスを見る独自のカスタム・ダッシュボードを作成することもできるし、ほとんどのモニターはビルトイン・ダッシュボードも提供している。ダッシュボードについては、[Observability Cloud](https://docs.splunk.com/Observability/data-visualization/dashboards/view-dashboards.html#nav-View-dashboards) の View dashboards を参照してください。"

#: ../../_includes/benefits-events.md:5 ../../_includes/benefits.md:5
msgid "View a data-driven visualization of the physical servers, virtual machines, AWS instances, and other resources in your environment that are visible to Infrastructure Monitoring. For information about navigators, see [Splunk Infrastructure Monitoring navigators](https://docs.splunk.com/Observability/infrastructure/navigators/navigators.html#nav-Splunk-Infrastructure-Monitoring-navigators)."
msgstr "物理サーバー、仮想マシン、AWSインスタンス、およびInfrastructure Monitoringに表示される環境内のその他のリソースを、データに基づいて視覚化します。ナビゲータについては、[Splunk Infrastructure Monitoring navigators](https://docs.splunk.com/Observability/infrastructure/navigators/navigators.html#nav-Splunk-Infrastructure-Monitoring-navigators) を参照してください。"

#: ../../_includes/benefits.md:6
msgid "Access the Metric Finder and search for metrics sent by the monitor. For information, see [Use the Metric Finder](https://docs.splunk.com/Observability/metrics-and-metadata/metrics-finder-metadata-catalog.html#use-the-metric-finder)."
msgstr "メトリック・ファインダーにアクセスして、モニターから送信されたメトリックを検索します。詳しくは、[メトリックファインダーの使用](https://docs.splunk.com/Observability/metrics-and-metadata/metrics-finder-metadata-catalog.html#use-the-metric-finder) をご覧ください。"

#: ../../gdi/monitors-cache/memcached.md:20 ../../gdi/monitors-cache/memory.md:26 ../../gdi/monitors-cache/opcache.md:16 ../../gdi/monitors-cloud/heroku.md:14 ../../gdi/monitors-cloud/kong.md:33 ../../gdi/monitors-cloud/openstack.md:22 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:18 ../../gdi/monitors-conviva/conviva.md:19 ../../gdi/monitors-databases/apache-couchdb.md:16 ../../gdi/monitors-databases/apache-spark.md:23 ../../gdi/monitors-databases/cassandra.md:15 ../../gdi/monitors-databases/consul.md:28 ../../gdi/monitors-databases/etcd.md:15 ../../gdi/monitors-databases/exec-input.md:14 ../../gdi/monitors-databases/hadoop.md:23
#: ../../gdi/monitors-databases/hadoopjmx.md:41 ../../gdi/monitors-databases/logparser.md:16 ../../gdi/monitors-databases/logstash.md:10 ../../gdi/monitors-databases/microsoft-sql-server.md:14 ../../gdi/monitors-databases/mongodb.md:30 ../../gdi/monitors-databases/mysql.md:23 ../../gdi/monitors-databases/redis.md:27 ../../gdi/monitors-databases/sap-hana.md:16 ../../gdi/monitors-databases/sql.md:16 ../../gdi/monitors-gitlab/gitlab.md:26 ../../gdi/monitors-hosts/amazon-ecs-metadata.md:16 ../../gdi/monitors-hosts/apache-httpserver.md:31 ../../gdi/monitors-hosts/apache-tomcat.md:16 ../../gdi/monitors-hosts/apache-zookeeper.md:16 ../../gdi/monitors-hosts/chrony.md:15
#: ../../gdi/monitors-hosts/collectd-df.md:16 ../../gdi/monitors-hosts/collectd-plugin.md:16 ../../gdi/monitors-hosts/collectd-uptime.md:16 ../../gdi/monitors-hosts/coredns.md:16 ../../gdi/monitors-hosts/couchbase.md:16 ../../gdi/monitors-hosts/cpufreq.md:17 ../../gdi/monitors-hosts/docker.md:16 ../../gdi/monitors-hosts/elasticsearch-query.md:185 ../../gdi/monitors-hosts/elasticsearch.md:16 ../../gdi/monitors-hosts/haproxy.md:79 ../../gdi/monitors-hosts/health-checker.md:14 ../../gdi/monitors-hosts/host-processlist.md:16 ../../gdi/monitors-hosts/http.md:47 ../../gdi/monitors-hosts/jenkins.md:24 ../../gdi/monitors-hosts/kafka-consumer.md:16
#: ../../gdi/monitors-hosts/kafka-producer.md:16 ../../gdi/monitors-hosts/microsoft-windows-iis.md:18 ../../gdi/monitors-hosts/nginx.md:16 ../../gdi/monitors-hosts/ntpq.md:16 ../../gdi/monitors-hosts/php-fpm.md:16 ../../gdi/monitors-hosts/procstat.md:16 ../../gdi/monitors-hosts/solr.md:16 ../../gdi/monitors-hosts/supervisor.md:16 ../../gdi/monitors-hosts/systemd.md:27 ../../gdi/monitors-hosts/varnish.md:26 ../../gdi/monitors-hosts/vsphere.md:22 ../../gdi/monitors-hosts/win-services.md:14 ../../gdi/monitors-languages/asp-dot-net.md:18 ../../gdi/monitors-languages/expvar.md:17 ../../gdi/monitors-languages/genericjmx.md:16 ../../gdi/monitors-languages/java-monitor.md:20
#: ../../gdi/monitors-languages/jmx.md:29 ../../gdi/monitors-languages/microsoft-dotnet.md:34 ../../gdi/monitors-messaging/apache-activemq.md:22 ../../gdi/monitors-messaging/apache-kafka.md:23 ../../gdi/monitors-messaging/rabbitmq.md:18 ../../gdi/monitors-monitoring/cadvisor.md:20 ../../gdi/monitors-monitoring/cgroups.md:28 ../../gdi/monitors-monitoring/jaeger-grpc.md:18 ../../gdi/monitors-monitoring/nagios.md:29 ../../gdi/monitors-monitoring/prometheus-exporter.md:18 ../../gdi/monitors-monitoring/prometheus-go.md:16 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:18 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:18
#: ../../gdi/monitors-monitoring/prometheus-node.md:16 ../../gdi/monitors-monitoring/prometheus-velero.md:16 ../../gdi/monitors-monitoring/signalfx-forwarder.md:16 ../../gdi/monitors-monitoring/win_perf_counters.md:20 ../../gdi/monitors-network/aws-appmesh.md:19 ../../gdi/monitors-network/dns.md:14 ../../gdi/monitors-network/logstash-tcp.md:18 ../../gdi/monitors-network/net-io.md:14 ../../gdi/monitors-network/network-protocols.md:16 ../../gdi/monitors-network/ntp.md:16 ../../gdi/monitors-network/snmp.md:20 ../../gdi/monitors-network/statsd.md:18 ../../gdi/monitors-network/traefik.md:16 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:18
#: ../../gdi/monitors-orchestration/kubernetes-events.md:17 ../../gdi/monitors-orchestration/kubernetes-proxy.md:17 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:16 ../../gdi/monitors-orchestration/mesos-marathon.md:15 ../../gdi/monitors-orchestration/openshift-cluster.md:21
msgid "Installation"
msgstr "インストール"

#: ../../_includes/collector-installation-linux-only.md:2 ../../_includes/collector-installation-linux.md:2 ../../_includes/collector-installation-windows.md:2 ../../_includes/collector-installation.md:2 ../../gdi/monitors-orchestration/openshift-cluster.md:23
msgid "Follow these steps to deploy this integration:"
msgstr "この統合を導入するには、以下の手順に従ってください："

#: ../../_includes/collector-installation-linux-only.md:4 ../../_includes/collector-installation-linux.md:4 ../../_includes/collector-installation.md:4 ../../gdi/opentelemetry/components/databricks-receiver.rst:26 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:32 ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:19 ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:22 ../../gdi/opentelemetry/components/oracledb-receiver.rst:18 ../../gdi/opentelemetry/components/postgresql-receiver.rst:26 ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:26 ../../gdi/opentelemetry/components/resource-processor.rst:45
#: ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:24 ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:21 ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:23
msgid "Deploy the Splunk Distribution of OpenTelemetry Collector to your host or container platform:"
msgstr "OpenTelemetry Collector の Splunk ディストリビューションをホストまたはコンテナプラットフォームにデプロイします："

#: ../../_includes/collector-installation-linux.md:5 ../../_includes/collector-installation.md:5 ../../gdi/monitors-databases/apache-couchdb.md:19
msgid "{ref}`Install on Kubernetes <otel-install-k8s>`"
msgstr "{参考}`Kubernetesへのインストール <otel-install-k8s>`"

#: ../../_includes/collector-installation-linux-only.md:5 ../../_includes/collector-installation-linux.md:6 ../../_includes/collector-installation.md:6 ../../gdi/monitors-databases/apache-couchdb.md:20 ../../gdi/monitors-orchestration/openshift-cluster.md:38
msgid "{ref}`Install on Linux <otel-install-linux>`"
msgstr "{参考}`Linuxへのインストール <otel-install-linux>`"

#: ../../_includes/collector-installation-linux-only.md:6 ../../_includes/collector-installation-linux.md:7 ../../_includes/collector-installation-windows.md:6 ../../_includes/collector-installation.md:8 ../../gdi/monitors-orchestration/openshift-cluster.md:42
msgid "Configure the monitor, as described in the Configuration section."
msgstr "設定のセクションで説明するように、モニターを設定する。"

#: ../../_includes/collector-installation-linux-only.md:7 ../../_includes/collector-installation-linux.md:8 ../../_includes/collector-installation-windows.md:7 ../../_includes/collector-installation.md:9 ../../gdi/monitors-orchestration/openshift-cluster.md:44
msgid "Restart the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを再起動する。"

#: ../../gdi/monitors-cache/memcached.md:25 ../../gdi/monitors-cache/memory.md:31 ../../gdi/monitors-cache/opcache.md:66 ../../gdi/monitors-cloud/heroku.md:81 ../../gdi/monitors-cloud/kong.md:67 ../../gdi/monitors-cloud/openstack.md:27 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:23 ../../gdi/monitors-conviva/conviva.md:24 ../../gdi/monitors-databases/apache-couchdb.md:31 ../../gdi/monitors-databases/apache-spark.md:28 ../../gdi/monitors-databases/cassandra.md:20 ../../gdi/monitors-databases/consul.md:33 ../../gdi/monitors-databases/etcd.md:20 ../../gdi/monitors-databases/exec-input.md:19 ../../gdi/monitors-databases/hadoop.md:28
#: ../../gdi/monitors-databases/hadoopjmx.md:46 ../../gdi/monitors-databases/logparser.md:21 ../../gdi/monitors-databases/logstash.md:15 ../../gdi/monitors-databases/microsoft-sql-server.md:38 ../../gdi/monitors-databases/mongodb.md:51 ../../gdi/monitors-databases/mysql.md:47 ../../gdi/monitors-databases/redis.md:32 ../../gdi/monitors-databases/sap-hana.md:21 ../../gdi/monitors-databases/sql.md:21 ../../gdi/monitors-gitlab/gitlab.md:92 ../../gdi/monitors-hosts/amazon-ecs-metadata.md:21 ../../gdi/monitors-hosts/apache-httpserver.md:36 ../../gdi/monitors-hosts/apache-tomcat.md:21 ../../gdi/monitors-hosts/apache-zookeeper.md:21 ../../gdi/monitors-hosts/chrony.md:20
#: ../../gdi/monitors-hosts/collectd-df.md:21 ../../gdi/monitors-hosts/collectd-plugin.md:21 ../../gdi/monitors-hosts/collectd-uptime.md:21 ../../gdi/monitors-hosts/coredns.md:21 ../../gdi/monitors-hosts/couchbase.md:21 ../../gdi/monitors-hosts/cpufreq.md:22 ../../gdi/monitors-hosts/docker.md:21 ../../gdi/monitors-hosts/elasticsearch-query.md:190 ../../gdi/monitors-hosts/elasticsearch.md:21 ../../gdi/monitors-hosts/haproxy.md:84 ../../gdi/monitors-hosts/health-checker.md:19 ../../gdi/monitors-hosts/host-processlist.md:21 ../../gdi/monitors-hosts/http.md:52 ../../gdi/monitors-hosts/jenkins.md:29 ../../gdi/monitors-hosts/kafka-consumer.md:21
#: ../../gdi/monitors-hosts/kafka-producer.md:21 ../../gdi/monitors-hosts/microsoft-windows-iis.md:23 ../../gdi/monitors-hosts/nginx.md:21 ../../gdi/monitors-hosts/ntpq.md:21 ../../gdi/monitors-hosts/php-fpm.md:40 ../../gdi/monitors-hosts/procstat.md:21 ../../gdi/monitors-hosts/solr.md:21 ../../gdi/monitors-hosts/supervisor.md:21 ../../gdi/monitors-hosts/systemd.md:32 ../../gdi/monitors-hosts/varnish.md:31 ../../gdi/monitors-hosts/vsphere.md:27 ../../gdi/monitors-hosts/win-services.md:19 ../../gdi/monitors-languages/asp-dot-net.md:23 ../../gdi/monitors-languages/expvar.md:22 ../../gdi/monitors-languages/genericjmx.md:21 ../../gdi/monitors-languages/java-monitor.md:25
#: ../../gdi/monitors-languages/jmx.md:33 ../../gdi/monitors-languages/microsoft-dotnet.md:39 ../../gdi/monitors-messaging/apache-activemq.md:27 ../../gdi/monitors-messaging/apache-kafka.md:28 ../../gdi/monitors-messaging/rabbitmq.md:23 ../../gdi/monitors-monitoring/cadvisor.md:25 ../../gdi/monitors-monitoring/cgroups.md:33 ../../gdi/monitors-monitoring/jaeger-grpc.md:23 ../../gdi/monitors-monitoring/nagios.md:34 ../../gdi/monitors-monitoring/prometheus-exporter.md:23 ../../gdi/monitors-monitoring/prometheus-go.md:21 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:23
#: ../../gdi/monitors-monitoring/prometheus-node.md:21 ../../gdi/monitors-monitoring/prometheus-velero.md:21 ../../gdi/monitors-monitoring/signalfx-forwarder.md:21 ../../gdi/monitors-monitoring/win_perf_counters.md:25 ../../gdi/monitors-network/aws-appmesh.md:24 ../../gdi/monitors-network/dns.md:19 ../../gdi/monitors-network/logstash-tcp.md:23 ../../gdi/monitors-network/net-io.md:19 ../../gdi/monitors-network/network-protocols.md:21 ../../gdi/monitors-network/ntp.md:21 ../../gdi/monitors-network/snmp.md:25 ../../gdi/monitors-network/statsd.md:33 ../../gdi/monitors-network/traefik.md:21 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:23
#: ../../gdi/monitors-orchestration/kubernetes-events.md:61 ../../gdi/monitors-orchestration/kubernetes-proxy.md:22 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:21 ../../gdi/monitors-orchestration/mesos-marathon.md:20 ../../gdi/monitors-orchestration/openshift-cluster.md:47 ../../gdi/opentelemetry/configure-the-collector.rst:88
msgid "Configuration"
msgstr "構成"

#: ../../_includes/configuration.md:2
msgid "To use this integration of a Smart Agent monitor with the Collector:"
msgstr "スマートエージェントモニタとコレクタの統合を使用するには、以下の手順に従います："

#: ../../_includes/configuration.md:4
msgid "Include the Smart Agent receiver in your configuration file."
msgstr "スマートエージェントレシーバーを設定ファイルに含めます。"

#: ../../_includes/configuration.md:5
msgid "Add the monitor type to the Collector configuration, both in the receiver and pipelines sections."
msgstr "レシーバセクションおよびパイプラインセクションの両方で、Collector 構成にモニタタイプを追加します。"

#: ../../_includes/configuration.md:7
msgid "Read more on how to [Use Smart Agent monitors with the Collector](https://docs.splunk.com/Observability/gdi/opentelemetry/smart-agent-migration-monitors.html)."
msgstr "[コレクターでスマートエージェントモニタを使用する方法については、](https://docs.splunk.com/Observability/gdi/opentelemetry/smart-agent-migration-monitors.html) を参照してください。"

#: ../../_includes/configuration.md:8
msgid "See how to set up the [Smart Agent receiver](https://docs.splunk.com/observability/gdi/opentelemetry/components/smartagent-receiver.html)."
msgstr "[Smart Agent受信機の設定方法](https://docs.splunk.com/observability/gdi/opentelemetry/components/smartagent-receiver.html) を参照してください。"

#: ../../_includes/configuration.md:9
msgid "Learn about config options in [Collector default configuration](https://docs.splunk.com/Observability/gdi/opentelemetry/configure-the-collector-ootb.html#nav-Collector-default-configuration)."
msgstr "設定オプションについては、[Collector デフォルト設定](https://docs.splunk.com/Observability/gdi/opentelemetry/configure-the-collector-ootb.html#nav-Collector-default-configuration) を参照してください。"

#: ../../gdi/monitors-cache/memcached.md:32 ../../gdi/monitors-cache/memory.md:38 ../../gdi/monitors-cache/opcache.md:73 ../../gdi/monitors-cloud/kong.md:74 ../../gdi/monitors-cloud/openstack.md:34 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:30 ../../gdi/monitors-conviva/conviva.md:31 ../../gdi/monitors-databases/apache-couchdb.md:38 ../../gdi/monitors-databases/cassandra.md:27 ../../gdi/monitors-databases/consul.md:40 ../../gdi/monitors-databases/etcd.md:27 ../../gdi/monitors-databases/exec-input.md:26 ../../gdi/monitors-databases/hadoop.md:35 ../../gdi/monitors-databases/hadoopjmx.md:53 ../../gdi/monitors-databases/logparser.md:28
#: ../../gdi/monitors-databases/microsoft-sql-server.md:45 ../../gdi/monitors-databases/mongodb.md:58 ../../gdi/monitors-databases/mysql.md:54 ../../gdi/monitors-databases/redis.md:39 ../../gdi/monitors-databases/sap-hana.md:28 ../../gdi/monitors-databases/sql.md:28 ../../gdi/monitors-gitlab/gitlab.md:99 ../../gdi/monitors-hosts/amazon-ecs-metadata.md:28 ../../gdi/monitors-hosts/apache-httpserver.md:42 ../../gdi/monitors-hosts/apache-tomcat.md:28 ../../gdi/monitors-hosts/apache-zookeeper.md:28 ../../gdi/monitors-hosts/chrony.md:27 ../../gdi/monitors-hosts/collectd-df.md:28 ../../gdi/monitors-hosts/collectd-plugin.md:27 ../../gdi/monitors-hosts/collectd-uptime.md:28
#: ../../gdi/monitors-hosts/coredns.md:28 ../../gdi/monitors-hosts/couchbase.md:43 ../../gdi/monitors-hosts/cpufreq.md:28 ../../gdi/monitors-hosts/docker.md:34 ../../gdi/monitors-hosts/elasticsearch-query.md:197 ../../gdi/monitors-hosts/elasticsearch.md:28 ../../gdi/monitors-hosts/haproxy.md:91 ../../gdi/monitors-hosts/health-checker.md:25 ../../gdi/monitors-hosts/host-processlist.md:28 ../../gdi/monitors-hosts/http.md:59 ../../gdi/monitors-hosts/jenkins.md:36 ../../gdi/monitors-hosts/kafka-consumer.md:28 ../../gdi/monitors-hosts/kafka-producer.md:28 ../../gdi/monitors-hosts/microsoft-windows-iis.md:30 ../../gdi/monitors-hosts/nginx.md:28
#: ../../gdi/monitors-hosts/ntpq.md:28 ../../gdi/monitors-hosts/php-fpm.md:47 ../../gdi/monitors-hosts/procstat.md:28 ../../gdi/monitors-hosts/solr.md:28 ../../gdi/monitors-hosts/supervisor.md:28 ../../gdi/monitors-hosts/systemd.md:39 ../../gdi/monitors-hosts/varnish.md:38 ../../gdi/monitors-hosts/vsphere.md:34 ../../gdi/monitors-hosts/win-services.md:26 ../../gdi/monitors-languages/asp-dot-net.md:30 ../../gdi/monitors-languages/expvar.md:29 ../../gdi/monitors-languages/genericjmx.md:28 ../../gdi/monitors-languages/java-monitor.md:32 ../../gdi/monitors-languages/jmx.md:39 ../../gdi/monitors-languages/microsoft-dotnet.md:46 ../../gdi/monitors-messaging/apache-activemq.md:34
#: ../../gdi/monitors-messaging/apache-kafka.md:34 ../../gdi/monitors-messaging/rabbitmq.md:30 ../../gdi/monitors-monitoring/cadvisor.md:32 ../../gdi/monitors-monitoring/cgroups.md:40 ../../gdi/monitors-monitoring/jaeger-grpc.md:29 ../../gdi/monitors-monitoring/nagios.md:41 ../../gdi/monitors-monitoring/prometheus-exporter.md:30 ../../gdi/monitors-monitoring/prometheus-go.md:28 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:30 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:30 ../../gdi/monitors-monitoring/prometheus-node.md:28 ../../gdi/monitors-monitoring/prometheus-velero.md:28 ../../gdi/monitors-monitoring/signalfx-forwarder.md:28
#: ../../gdi/monitors-monitoring/win_perf_counters.md:32 ../../gdi/monitors-network/aws-appmesh.md:31 ../../gdi/monitors-network/dns.md:26 ../../gdi/monitors-network/logstash-tcp.md:29 ../../gdi/monitors-network/net-io.md:26 ../../gdi/monitors-network/network-protocols.md:28 ../../gdi/monitors-network/ntp.md:28 ../../gdi/monitors-network/snmp.md:32 ../../gdi/monitors-network/statsd.md:40 ../../gdi/monitors-network/traefik.md:28 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:30 ../../gdi/monitors-orchestration/kubernetes-events.md:68 ../../gdi/monitors-orchestration/kubernetes-proxy.md:29 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:27
#: ../../gdi/monitors-orchestration/mesos-marathon.md:27
msgid "To activate this integration, add the following to your Collector configuration:"
msgstr "この統合を有効にするには、Collector構成に以下を追加します："

#: ../../gdi/monitors-cache/memcached.md:41 ../../gdi/monitors-cache/memory.md:47 ../../gdi/monitors-cache/opcache.md:82 ../../gdi/monitors-cloud/kong.md:90 ../../gdi/monitors-cloud/openstack.md:43 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:39 ../../gdi/monitors-conviva/conviva.md:40 ../../gdi/monitors-databases/apache-couchdb.md:47 ../../gdi/monitors-databases/apache-spark.md:50 ../../gdi/monitors-databases/cassandra.md:36 ../../gdi/monitors-databases/consul.md:49 ../../gdi/monitors-databases/etcd.md:36 ../../gdi/monitors-databases/hadoop.md:44 ../../gdi/monitors-databases/hadoopjmx.md:62 ../../gdi/monitors-databases/logstash.md:30
#: ../../gdi/monitors-databases/microsoft-sql-server.md:54 ../../gdi/monitors-databases/mongodb.md:67 ../../gdi/monitors-databases/mysql.md:87 ../../gdi/monitors-databases/redis.md:48 ../../gdi/monitors-databases/sap-hana.md:49 ../../gdi/monitors-databases/sql.md:37 ../../gdi/monitors-hosts/amazon-ecs-metadata.md:37 ../../gdi/monitors-hosts/apache-httpserver.md:60 ../../gdi/monitors-hosts/apache-tomcat.md:37 ../../gdi/monitors-hosts/apache-zookeeper.md:37 ../../gdi/monitors-hosts/chrony.md:36 ../../gdi/monitors-hosts/collectd-df.md:37 ../../gdi/monitors-hosts/collectd-plugin.md:36 ../../gdi/monitors-hosts/collectd-uptime.md:37 ../../gdi/monitors-hosts/coredns.md:37
#: ../../gdi/monitors-hosts/couchbase.md:52 ../../gdi/monitors-hosts/cpufreq.md:37 ../../gdi/monitors-hosts/docker.md:43 ../../gdi/monitors-hosts/elasticsearch-query.md:206 ../../gdi/monitors-hosts/elasticsearch.md:46 ../../gdi/monitors-hosts/haproxy.md:100 ../../gdi/monitors-hosts/health-checker.md:34 ../../gdi/monitors-hosts/http.md:68 ../../gdi/monitors-hosts/http.md:91 ../../gdi/monitors-hosts/jenkins.md:45 ../../gdi/monitors-hosts/kafka-consumer.md:37 ../../gdi/monitors-hosts/kafka-producer.md:37 ../../gdi/monitors-hosts/microsoft-windows-iis.md:39 ../../gdi/monitors-hosts/nginx.md:37 ../../gdi/monitors-hosts/ntpq.md:37 ../../gdi/monitors-hosts/php-fpm.md:56
#: ../../gdi/monitors-hosts/procstat.md:37 ../../gdi/monitors-hosts/solr.md:37 ../../gdi/monitors-hosts/supervisor.md:37 ../../gdi/monitors-hosts/systemd.md:48 ../../gdi/monitors-hosts/varnish.md:47 ../../gdi/monitors-hosts/vsphere.md:43 ../../gdi/monitors-languages/asp-dot-net.md:39 ../../gdi/monitors-languages/expvar.md:38 ../../gdi/monitors-languages/genericjmx.md:37 ../../gdi/monitors-languages/java-monitor.md:41 ../../gdi/monitors-languages/jmx.md:48 ../../gdi/monitors-languages/microsoft-dotnet.md:55 ../../gdi/monitors-messaging/apache-activemq.md:43 ../../gdi/monitors-messaging/apache-kafka.md:43 ../../gdi/monitors-messaging/rabbitmq.md:39
#: ../../gdi/monitors-monitoring/cadvisor.md:41 ../../gdi/monitors-monitoring/cgroups.md:49 ../../gdi/monitors-monitoring/jaeger-grpc.md:38 ../../gdi/monitors-monitoring/nagios.md:53 ../../gdi/monitors-monitoring/prometheus-exporter.md:42 ../../gdi/monitors-monitoring/prometheus-go.md:39 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:41 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:39 ../../gdi/monitors-monitoring/prometheus-node.md:37 ../../gdi/monitors-monitoring/prometheus-velero.md:39 ../../gdi/monitors-monitoring/signalfx-forwarder.md:37 ../../gdi/monitors-monitoring/win_perf_counters.md:61 ../../gdi/monitors-network/aws-appmesh.md:40
#: ../../gdi/monitors-network/dns.md:35 ../../gdi/monitors-network/logstash-tcp.md:37 ../../gdi/monitors-network/net-io.md:35 ../../gdi/monitors-network/network-protocols.md:37 ../../gdi/monitors-network/ntp.md:37 ../../gdi/monitors-network/snmp.md:41 ../../gdi/monitors-network/statsd.md:49 ../../gdi/monitors-network/traefik.md:37 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:39 ../../gdi/monitors-orchestration/kubernetes-events.md:77 ../../gdi/monitors-orchestration/kubernetes-proxy.md:38 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:36 ../../gdi/monitors-orchestration/mesos-marathon.md:36
msgid "Next, add the monitor to the `service.pipelines.metrics.receivers` section of your configuration file:"
msgstr "次に、設定ファイルの`service.pipelines.metrics.receivers` セクションにモニターを追加する："

#: ../../gdi/monitors-cache/memcached.md:50 ../../gdi/monitors-cache/opcache.md:115 ../../gdi/monitors-cloud/openstack.md:52 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:48 ../../gdi/monitors-conviva/conviva.md:49 ../../gdi/monitors-databases/apache-couchdb.md:56 ../../gdi/monitors-databases/apache-spark.md:68 ../../gdi/monitors-databases/cassandra.md:45 ../../gdi/monitors-databases/consul.md:67 ../../gdi/monitors-databases/etcd.md:45 ../../gdi/monitors-databases/exec-input.md:49 ../../gdi/monitors-databases/logstash.md:39 ../../gdi/monitors-databases/microsoft-sql-server.md:78 ../../gdi/monitors-databases/mongodb-atlas.md:17
#: ../../gdi/monitors-databases/mongodb.md:76 ../../gdi/monitors-databases/mysql.md:98 ../../gdi/monitors-databases/postgresql.md:13 ../../gdi/monitors-databases/redis.md:57 ../../gdi/monitors-databases/sap-hana.md:58 ../../gdi/monitors-databases/sql.md:46 ../../gdi/monitors-hosts/apache-tomcat.md:46 ../../gdi/monitors-hosts/apache-zookeeper.md:46 ../../gdi/monitors-hosts/collectd-df.md:46 ../../gdi/monitors-hosts/collectd-plugin.md:44 ../../gdi/monitors-hosts/cpu.md:11 ../../gdi/monitors-hosts/disk.md:11 ../../gdi/monitors-hosts/docker.md:52 ../../gdi/monitors-hosts/elasticsearch-query.md:223 ../../gdi/monitors-hosts/elasticsearch.md:55
#: ../../gdi/monitors-hosts/filesystems.md:11 ../../gdi/monitors-hosts/health-checker.md:43 ../../gdi/monitors-hosts/host-processes.md:11 ../../gdi/monitors-hosts/interface.md:11 ../../gdi/monitors-hosts/jenkins.md:93 ../../gdi/monitors-hosts/kafka-consumer.md:46 ../../gdi/monitors-hosts/kafka-producer.md:46 ../../gdi/monitors-hosts/microsoft-windows-iis.md:48 ../../gdi/monitors-hosts/nginx.md:48 ../../gdi/monitors-hosts/ntpq.md:51 ../../gdi/monitors-hosts/php-fpm.md:80 ../../gdi/monitors-hosts/procstat.md:46 ../../gdi/monitors-hosts/solr.md:46 ../../gdi/monitors-hosts/supervisor.md:46 ../../gdi/monitors-hosts/systemd.md:84 ../../gdi/monitors-hosts/varnish.md:56
#: ../../gdi/monitors-hosts/vsphere.md:75 ../../gdi/monitors-hosts/win-services.md:40 ../../gdi/monitors-languages/asp-dot-net.md:48 ../../gdi/monitors-languages/expvar.md:47 ../../gdi/monitors-languages/genericjmx.md:66 ../../gdi/monitors-languages/java-monitor.md:50 ../../gdi/monitors-languages/jmx.md:57 ../../gdi/monitors-languages/microsoft-dotnet.md:64 ../../gdi/monitors-messaging/apache-kafka.md:54 ../../gdi/monitors-messaging/rabbitmq.md:48 ../../gdi/monitors-monitoring/cadvisor.md:50 ../../gdi/monitors-monitoring/cgroups.md:71 ../../gdi/monitors-monitoring/jaeger-grpc.md:47 ../../gdi/monitors-monitoring/nagios.md:67 ../../gdi/monitors-monitoring/prometheus-go.md:48
#: ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:54 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:48 ../../gdi/monitors-monitoring/prometheus-node.md:46 ../../gdi/monitors-monitoring/prometheus-velero.md:52 ../../gdi/monitors-monitoring/signalfx-forwarder.md:50 ../../gdi/monitors-monitoring/win_perf_counters.md:70 ../../gdi/monitors-network/dns.md:44 ../../gdi/monitors-network/logstash-tcp.md:120 ../../gdi/monitors-network/net-io.md:44 ../../gdi/monitors-network/ntp.md:46 ../../gdi/monitors-network/snmp.md:80 ../../gdi/monitors-network/statsd.md:58 ../../gdi/monitors-network/traefik.md:46 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:102
#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:13 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:15 ../../gdi/monitors-orchestration/kubernetes-events.md:99 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:11 ../../gdi/monitors-orchestration/kubernetes-proxy.md:138 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:45 ../../gdi/monitors-orchestration/mesos-marathon.md:45
msgid "Configuration settings"
msgstr "コンフィギュレーション設定"

#: ../../gdi/monitors-cache/memcached.md:52
msgid "The following table shows the configuration options for the Memcached monitor:"
msgstr "次の表は、Memcachedモニターの設定オプションを示します："

#: ../../gdi/monitors-cache/memcached.md:27 ../../gdi/monitors-cache/opcache.md:68 ../../gdi/monitors-cloud/heroku.md ../../gdi/monitors-cloud/openstack.md:29 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25 ../../gdi/monitors-conviva/conviva.md:26 ../../gdi/monitors-databases/apache-spark.md:30 ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-databases/hadoop.md:30 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/logparser.md:23 ../../gdi/monitors-databases/logstash.md:17
#: ../../gdi/monitors-databases/microsoft-sql-server.md:40 ../../gdi/monitors-databases/mongodb-atlas.md:7 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/mysql.md:49 ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-databases/sap-hana.md:23 ../../gdi/monitors-databases/sql.md:23 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/apache-httpserver.md:38 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/chrony.md:22 ../../gdi/monitors-hosts/collectd-df.md:23 ../../gdi/monitors-hosts/collectd-plugin.md:23 ../../gdi/monitors-hosts/coredns.md:23
#: ../../gdi/monitors-hosts/couchbase.md:23 ../../gdi/monitors-hosts/cpu.md:7 ../../gdi/monitors-hosts/docker.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/filesystems.md:7 ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-hosts/host-processes.md:7 ../../gdi/monitors-hosts/host-processload.md:7 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/interface.md:7 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
#: ../../gdi/monitors-hosts/microsoft-windows-iis.md:25 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-hosts/ntpq.md:23 ../../gdi/monitors-hosts/php-fpm.md:42 ../../gdi/monitors-hosts/procstat.md:23 ../../gdi/monitors-hosts/solr.md:23 ../../gdi/monitors-hosts/supervisor.md:23 ../../gdi/monitors-hosts/systemd.md:34 ../../gdi/monitors-hosts/varnish.md:33 ../../gdi/monitors-hosts/vsphere.md:29 ../../gdi/monitors-hosts/win-services.md:21 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/java-monitor.md:27 ../../gdi/monitors-languages/jmx.md:35 ../../gdi/monitors-languages/microsoft-dotnet.md:41
#: ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-messaging/rabbitmq.md:25 ../../gdi/monitors-monitoring/cadvisor.md:27 ../../gdi/monitors-monitoring/cgroups.md:35 ../../gdi/monitors-monitoring/jaeger-grpc.md:25 ../../gdi/monitors-monitoring/nagios.md:64 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23
#: ../../gdi/monitors-monitoring/signalfx-forwarder.md:23 ../../gdi/monitors-monitoring/win_perf_counters.md:27 ../../gdi/monitors-network/aws-appmesh.md:26 ../../gdi/monitors-network/dns.md:21 ../../gdi/monitors-network/logstash-tcp.md:25 ../../gdi/monitors-network/net-io.md:21 ../../gdi/monitors-network/ntp.md:23 ../../gdi/monitors-network/snmp.md:27 ../../gdi/monitors-network/statsd.md:35 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-events.md:63
#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23 ../../gdi/monitors-orchestration/mesos-marathon.md:22 ../../gdi/monitors-orchestration/openshift-cluster.md:49 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:197 ../../gdi/opentelemetry/components/databricks-receiver.rst:87
msgid "Required"
msgstr "必須"

#: ../../gdi/monitors-cache/memcached.md:27 ../../gdi/monitors-cache/opcache.md:68 ../../gdi/monitors-databases/apache-spark.md:30 ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/hadoop.md:30 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/logstash.md:17 ../../gdi/monitors-databases/microsoft-sql-server.md:40 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/mysql.md:49 ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-databases/sql.md:23
#: ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/apache-httpserver.md:38 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/apache-zookeeper.md:23 ../../gdi/monitors-hosts/chrony.md:22 ../../gdi/monitors-hosts/collectd-plugin.md:23 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/couchbase.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/kafka-consumer.md:23
#: ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-hosts/php-fpm.md:42 ../../gdi/monitors-hosts/solr.md:23 ../../gdi/monitors-hosts/supervisor.md:23 ../../gdi/monitors-hosts/vsphere.md:29 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/java-monitor.md:27 ../../gdi/monitors-languages/jmx.md:35 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-messaging/rabbitmq.md:25 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23
#: ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/logstash-tcp.md:25 ../../gdi/monitors-network/ntp.md:23 ../../gdi/monitors-network/snmp.md:27 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
#: ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "`host`"
msgstr "`host`"

#: ../../gdi/monitors-cache/memcached.md:27 ../../gdi/monitors-conviva/conviva.md:26 ../../gdi/monitors-databases/apache-spark.md:30 ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/hadoop.md:30 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/logparser.md:23 ../../gdi/monitors-databases/microsoft-sql-server.md:40 ../../gdi/monitors-databases/mongodb-atlas.md:7 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/apache-httpserver.md:38 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/apache-zookeeper.md:23
#: ../../gdi/monitors-hosts/chrony.md:22 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/couchbase.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/jmx.md:35 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
#: ../../gdi/monitors-monitoring/nagios.md:64 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-network/dns.md:21 ../../gdi/monitors-network/logstash-tcp.md:25 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23 ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "**yes**"
msgstr "**はい"

#: ../../gdi/monitors-cache/memcached.md:27 ../../gdi/monitors-cache/opcache.md:68 ../../gdi/monitors-cloud/openstack.md:29 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25 ../../gdi/monitors-conviva/conviva.md:26 ../../gdi/monitors-databases/apache-spark.md:30 ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-databases/hadoop.md:30 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/logparser.md:23 ../../gdi/monitors-databases/logstash.md:17
#: ../../gdi/monitors-databases/microsoft-sql-server.md:40 ../../gdi/monitors-databases/mongodb-atlas.md:7 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/mysql.md:49 ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-databases/sap-hana.md:23 ../../gdi/monitors-databases/sql.md:23 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/apache-httpserver.md:38 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/apache-zookeeper.md:23 ../../gdi/monitors-hosts/chrony.md:22 ../../gdi/monitors-hosts/collectd-df.md:23 ../../gdi/monitors-hosts/collectd-plugin.md:23
#: ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/couchbase.md:23 ../../gdi/monitors-hosts/docker.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/filesystems.md:7 ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-hosts/host-processes.md:7 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-hosts/php-fpm.md:42 ../../gdi/monitors-hosts/procstat.md:23
#: ../../gdi/monitors-hosts/solr.md:23 ../../gdi/monitors-hosts/supervisor.md:23 ../../gdi/monitors-hosts/varnish.md:33 ../../gdi/monitors-hosts/vsphere.md:29 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/java-monitor.md:27 ../../gdi/monitors-languages/jmx.md:35 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-messaging/rabbitmq.md:25 ../../gdi/monitors-monitoring/cadvisor.md:27 ../../gdi/monitors-monitoring/jaeger-grpc.md:25 ../../gdi/monitors-monitoring/nagios.md:64 ../../gdi/monitors-monitoring/prometheus-exporter.md:25
#: ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-monitoring/signalfx-forwarder.md:23 ../../gdi/monitors-monitoring/win_perf_counters.md:27 ../../gdi/monitors-network/aws-appmesh.md:26 ../../gdi/monitors-network/dns.md:21 ../../gdi/monitors-network/logstash-tcp.md:25 ../../gdi/monitors-network/ntp.md:23 ../../gdi/monitors-network/snmp.md:27 ../../gdi/monitors-network/statsd.md:35 ../../gdi/monitors-network/traefik.md:23
#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-events.md:63 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23 ../../gdi/monitors-orchestration/mesos-marathon.md:22 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "`string`"
msgstr "`string`"

#: ../../gdi/monitors-cache/memcached.md:27 ../../gdi/monitors-cache/opcache.md:68 ../../gdi/monitors-databases/apache-spark.md:30 ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/hadoop.md:30 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/logstash.md:17 ../../gdi/monitors-databases/microsoft-sql-server.md:40 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/mysql.md:49 ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-databases/sql.md:23
#: ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/apache-httpserver.md:38 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/apache-zookeeper.md:23 ../../gdi/monitors-hosts/chrony.md:22 ../../gdi/monitors-hosts/collectd-plugin.md:23 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/couchbase.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/kafka-consumer.md:23
#: ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-hosts/php-fpm.md:42 ../../gdi/monitors-hosts/solr.md:23 ../../gdi/monitors-hosts/supervisor.md:23 ../../gdi/monitors-hosts/vsphere.md:29 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/java-monitor.md:27 ../../gdi/monitors-languages/jmx.md:35 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-messaging/rabbitmq.md:25 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23
#: ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/dns.md:21 ../../gdi/monitors-network/logstash-tcp.md:25 ../../gdi/monitors-network/ntp.md:23 ../../gdi/monitors-network/snmp.md:27 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
#: ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "`port`"
msgstr "`port`"

#: ../../gdi/monitors-cache/memcached.md:27 ../../gdi/monitors-cache/opcache.md:68 ../../gdi/monitors-conviva/conviva.md:26 ../../gdi/monitors-databases/apache-spark.md:30 ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-databases/hadoop.md:30 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/logstash.md:17 ../../gdi/monitors-databases/microsoft-sql-server.md:40 ../../gdi/monitors-databases/mongodb-atlas.md:7 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/mysql.md:49
#: ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-databases/sql.md:23 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/apache-httpserver.md:38 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/apache-zookeeper.md:23 ../../gdi/monitors-hosts/chrony.md:22 ../../gdi/monitors-hosts/collectd-plugin.md:23 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/couchbase.md:23 ../../gdi/monitors-hosts/docker.md:23 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-hosts/http.md:54
#: ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-hosts/php-fpm.md:42 ../../gdi/monitors-hosts/solr.md:23 ../../gdi/monitors-hosts/supervisor.md:23 ../../gdi/monitors-hosts/vsphere.md:29 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/java-monitor.md:27 ../../gdi/monitors-languages/jmx.md:35 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-messaging/rabbitmq.md:25
#: ../../gdi/monitors-monitoring/nagios.md:64 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/aws-appmesh.md:26 ../../gdi/monitors-network/dns.md:21 ../../gdi/monitors-network/logstash-tcp.md:25 ../../gdi/monitors-network/ntp.md:23 ../../gdi/monitors-network/snmp.md:27 ../../gdi/monitors-network/statsd.md:35 ../../gdi/monitors-network/traefik.md:23
#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23 ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "`integer`"
msgstr "`integer`"

#: ../../gdi/monitors-cache/memcached.md:27 ../../gdi/monitors-cache/opcache.md:68 ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/mysql.md:49 ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-hosts/apache-httpserver.md:38 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/apache-zookeeper.md:23 ../../gdi/monitors-hosts/collectd-plugin.md:23 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-hosts/php-fpm.md:42
#: ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-network/snmp.md:27
msgid "`name`"
msgstr "`name`"

#: ../../gdi/monitors-cache/memcached.md:27 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25 ../../gdi/monitors-conviva/conviva.md:26 ../../gdi/monitors-databases/apache-spark.md:30 ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-databases/hadoop.md:30 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/logparser.md:23 ../../gdi/monitors-databases/logstash.md:17 ../../gdi/monitors-databases/microsoft-sql-server.md:40 ../../gdi/monitors-databases/mongodb-atlas.md:7
#: ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-databases/sap-hana.md:23 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/apache-httpserver.md:38 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/apache-zookeeper.md:23 ../../gdi/monitors-hosts/chrony.md:22 ../../gdi/monitors-hosts/collectd-df.md:23 ../../gdi/monitors-hosts/collectd-plugin.md:23 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/couchbase.md:23 ../../gdi/monitors-hosts/cpu.md:7 ../../gdi/monitors-hosts/docker.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23
#: ../../gdi/monitors-hosts/filesystems.md:7 ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-hosts/host-processes.md:7 ../../gdi/monitors-hosts/host-processload.md:7 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/interface.md:7 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-hosts/microsoft-windows-iis.md:25 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-hosts/php-fpm.md:42 ../../gdi/monitors-languages/asp-dot-net.md:25 ../../gdi/monitors-languages/expvar.md:24
#: ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/java-monitor.md:27 ../../gdi/monitors-languages/jmx.md:35 ../../gdi/monitors-languages/microsoft-dotnet.md:41 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-monitoring/cadvisor.md:27 ../../gdi/monitors-monitoring/cgroups.md:35 ../../gdi/monitors-monitoring/jaeger-grpc.md:25 ../../gdi/monitors-monitoring/nagios.md:64 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25
#: ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-monitoring/signalfx-forwarder.md:23 ../../gdi/monitors-network/aws-appmesh.md:26 ../../gdi/monitors-network/dns.md:21 ../../gdi/monitors-network/logstash-tcp.md:25 ../../gdi/monitors-network/net-io.md:21 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-events.md:63 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24
#: ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23 ../../gdi/monitors-orchestration/mesos-marathon.md:22 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "no"
msgstr "いいえ"

#: ../../gdi/monitors-cache/memcached.md:27 ../../gdi/monitors-databases/mysql.md:49
msgid "`reportHost`"
msgstr "`reportHost`"

#: ../../gdi/monitors-cache/memcached.md:27 ../../gdi/monitors-cache/opcache.md:68 ../../gdi/monitors-cloud/openstack.md:29 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25 ../../gdi/monitors-databases/apache-spark.md:30 ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-databases/hadoop.md:30 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/logparser.md:23 ../../gdi/monitors-databases/logstash.md:17 ../../gdi/monitors-databases/microsoft-sql-server.md:40
#: ../../gdi/monitors-databases/mongodb-atlas.md:7 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/mysql.md:49 ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-databases/sap-hana.md:23 ../../gdi/monitors-databases/sql.md:23 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/collectd-df.md:23 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/cpu.md:7 ../../gdi/monitors-hosts/docker.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/filesystems.md:7
#: ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-hosts/host-processes.md:7 ../../gdi/monitors-hosts/host-processload.md:7 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-hosts/microsoft-windows-iis.md:25 ../../gdi/monitors-hosts/ntpq.md:23 ../../gdi/monitors-hosts/php-fpm.md:42 ../../gdi/monitors-hosts/procstat.md:23 ../../gdi/monitors-hosts/solr.md:23 ../../gdi/monitors-hosts/supervisor.md:23 ../../gdi/monitors-hosts/systemd.md:34 ../../gdi/monitors-hosts/varnish.md:33
#: ../../gdi/monitors-hosts/vsphere.md:29 ../../gdi/monitors-languages/asp-dot-net.md:25 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/microsoft-dotnet.md:41 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-messaging/rabbitmq.md:25 ../../gdi/monitors-monitoring/nagios.md:64 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25
#: ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-monitoring/signalfx-forwarder.md:23 ../../gdi/monitors-monitoring/win_perf_counters.md:27 ../../gdi/monitors-network/logstash-tcp.md:25 ../../gdi/monitors-network/snmp.md:27 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-events.md:63 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7
#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "`bool`"
msgstr "`bool`"

#: ../../gdi/monitors-cache/memcached.md:27 ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-hosts/haproxy.md:86
msgid "(**default:** `false`)"
msgstr "(**default:**`false`)"

#: ../../gdi/monitors-cache/memcached.md:63 ../../gdi/monitors-cache/memory.md:58 ../../gdi/monitors-cloud/openstack.md:70 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:86 ../../gdi/monitors-conviva/conviva.md:73 ../../gdi/monitors-databases/apache-couchdb.md:79 ../../gdi/monitors-databases/cassandra.md:89 ../../gdi/monitors-databases/etcd.md:68 ../../gdi/monitors-databases/hadoop.md:66 ../../gdi/monitors-databases/hadoopjmx.md:162 ../../gdi/monitors-databases/logstash.md:52 ../../gdi/monitors-databases/microsoft-sql-server.md:96 ../../gdi/monitors-databases/mongodb-atlas.md:33 ../../gdi/monitors-databases/mongodb.md:102
#: ../../gdi/monitors-databases/mysql.md:122 ../../gdi/monitors-databases/postgresql.md:31 ../../gdi/monitors-databases/redis.md:99 ../../gdi/monitors-hosts/amazon-ecs-metadata.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:88 ../../gdi/monitors-hosts/apache-zookeeper.md:59 ../../gdi/monitors-hosts/collectd-df.md:62 ../../gdi/monitors-hosts/coredns.md:81 ../../gdi/monitors-hosts/couchbase.md:63 ../../gdi/monitors-hosts/cpu.md:21 ../../gdi/monitors-hosts/cpufreq.md:48 ../../gdi/monitors-hosts/disk.md:24 ../../gdi/monitors-hosts/docker.md:71 ../../gdi/monitors-hosts/elasticsearch.md:177 ../../gdi/monitors-hosts/filesystems.md:24 ../../gdi/monitors-hosts/haproxy.md:124
#: ../../gdi/monitors-hosts/health-checker.md:62 ../../gdi/monitors-hosts/host-metadata.md:12 ../../gdi/monitors-hosts/host-processes.md:26 ../../gdi/monitors-hosts/host-processload.md:21 ../../gdi/monitors-hosts/interface.md:22 ../../gdi/monitors-hosts/jenkins.md:116 ../../gdi/monitors-hosts/kafka-consumer.md:89 ../../gdi/monitors-hosts/kafka-producer.md:89 ../../gdi/monitors-hosts/microsoft-windows-iis.md:59 ../../gdi/monitors-hosts/nginx.md:85 ../../gdi/monitors-hosts/ntpq.md:61 ../../gdi/monitors-hosts/php-fpm.md:95 ../../gdi/monitors-hosts/procstat.md:67 ../../gdi/monitors-hosts/supervisor.md:60 ../../gdi/monitors-hosts/systemd.md:99
#: ../../gdi/monitors-hosts/varnish.md:69 ../../gdi/monitors-hosts/vsphere.md:100 ../../gdi/monitors-hosts/win-services.md:50 ../../gdi/monitors-languages/asp-dot-net.md:59 ../../gdi/monitors-languages/java-monitor.md:66 ../../gdi/monitors-messaging/apache-activemq.md:94 ../../gdi/monitors-messaging/apache-kafka.md:99 ../../gdi/monitors-messaging/rabbitmq.md:80 ../../gdi/monitors-monitoring/cadvisor.md:60 ../../gdi/monitors-monitoring/cgroups.md:81 ../../gdi/monitors-monitoring/nagios.md:81 ../../gdi/monitors-monitoring/prometheus-node.md:69 ../../gdi/monitors-monitoring/prometheus-velero.md:75 ../../gdi/monitors-network/aws-appmesh.md:83
#: ../../gdi/monitors-network/dns.md:59 ../../gdi/monitors-network/net-io.md:56 ../../gdi/monitors-network/network-protocols.md:48 ../../gdi/monitors-network/ntp.md:59 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:125 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:35 ../../gdi/monitors-orchestration/kubernetes-proxy.md:160 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:67 ../../gdi/monitors-orchestration/mesos-marathon.md:61 ../../gdi/monitors-orchestration/openshift-cluster.md:75
msgid "The following metrics are available for this integration:"
msgstr "この統合では、以下のメトリクスを使用できます："

#: ../../gdi/monitors-cache/memcached.md:67 ../../gdi/monitors-cache/memory.md:62 ../../gdi/monitors-cache/opcache.md:132 ../../gdi/monitors-cloud/kong.md:157 ../../gdi/monitors-cloud/openstack.md:74 ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:90 ../../gdi/monitors-conviva/conviva.md:77 ../../gdi/monitors-databases/apache-couchdb.md:83 ../../gdi/monitors-databases/apache-spark.md:88 ../../gdi/monitors-databases/cassandra.md:93 ../../gdi/monitors-databases/consul.md:93 ../../gdi/monitors-databases/etcd.md:72 ../../gdi/monitors-databases/hadoop.md:70 ../../gdi/monitors-databases/hadoopjmx.md:166 ../../gdi/monitors-databases/logstash.md:56
#: ../../gdi/monitors-databases/microsoft-sql-server.md:100 ../../gdi/monitors-databases/mongodb-atlas.md:38 ../../gdi/monitors-databases/mongodb.md:106 ../../gdi/monitors-databases/mysql.md:126 ../../gdi/monitors-databases/postgresql.md:35 ../../gdi/monitors-databases/redis.md:103 ../../gdi/monitors-databases/sap-hana.md:74 ../../gdi/monitors-gitlab/gitlab.md:159 ../../gdi/monitors-hosts/amazon-ecs-metadata.md:52 ../../gdi/monitors-hosts/apache-httpserver.md:102 ../../gdi/monitors-hosts/apache-tomcat.md:92 ../../gdi/monitors-hosts/apache-zookeeper.md:63 ../../gdi/monitors-hosts/collectd-df.md:66 ../../gdi/monitors-hosts/collectd-uptime.md:52
#: ../../gdi/monitors-hosts/coredns.md:85 ../../gdi/monitors-hosts/couchbase.md:67 ../../gdi/monitors-hosts/cpu.md:25 ../../gdi/monitors-hosts/cpufreq.md:52 ../../gdi/monitors-hosts/disk.md:28 ../../gdi/monitors-hosts/docker.md:75 ../../gdi/monitors-hosts/elasticsearch.md:181 ../../gdi/monitors-hosts/filesystems.md:28 ../../gdi/monitors-hosts/haproxy.md:128 ../../gdi/monitors-hosts/health-checker.md:69 ../../gdi/monitors-hosts/host-metadata.md:16 ../../gdi/monitors-hosts/host-processes.md:30 ../../gdi/monitors-hosts/host-processload.md:25 ../../gdi/monitors-hosts/http.md:133 ../../gdi/monitors-hosts/interface.md:26 ../../gdi/monitors-hosts/jenkins.md:121
#: ../../gdi/monitors-hosts/kafka-consumer.md:94 ../../gdi/monitors-hosts/kafka-producer.md:93 ../../gdi/monitors-hosts/microsoft-windows-iis.md:63 ../../gdi/monitors-hosts/nginx.md:89 ../../gdi/monitors-hosts/ntpq.md:65 ../../gdi/monitors-hosts/php-fpm.md:99 ../../gdi/monitors-hosts/procstat.md:71 ../../gdi/monitors-hosts/solr.md:66 ../../gdi/monitors-hosts/supervisor.md:64 ../../gdi/monitors-hosts/systemd.md:103 ../../gdi/monitors-hosts/varnish.md:73 ../../gdi/monitors-hosts/vsphere.md:104 ../../gdi/monitors-hosts/win-services.md:54 ../../gdi/monitors-languages/asp-dot-net.md:63 ../../gdi/monitors-languages/expvar.md:85 ../../gdi/monitors-languages/genericjmx.md:114
#: ../../gdi/monitors-languages/java-monitor.md:70 ../../gdi/monitors-languages/microsoft-dotnet.md:79 ../../gdi/monitors-messaging/apache-activemq.md:98 ../../gdi/monitors-messaging/apache-kafka.md:103 ../../gdi/monitors-messaging/rabbitmq.md:84 ../../gdi/monitors-monitoring/cadvisor.md:64 ../../gdi/monitors-monitoring/cgroups.md:85 ../../gdi/monitors-monitoring/nagios.md:85 ../../gdi/monitors-monitoring/prometheus-go.md:75 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:81 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:75 ../../gdi/monitors-monitoring/prometheus-node.md:73 ../../gdi/monitors-monitoring/prometheus-velero.md:79
#: ../../gdi/monitors-network/aws-appmesh.md:87 ../../gdi/monitors-network/dns.md:63 ../../gdi/monitors-network/net-io.md:60 ../../gdi/monitors-network/network-protocols.md:52 ../../gdi/monitors-network/ntp.md:63 ../../gdi/monitors-network/traefik.md:87 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:129 ../../gdi/monitors-orchestration/kubernetes-cluster.md:40 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:42 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:39 ../../gdi/monitors-orchestration/kubernetes-proxy.md:164 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:71 ../../gdi/monitors-orchestration/mesos-marathon.md:66
#: ../../gdi/monitors-orchestration/openshift-cluster.md:79
msgid "Notes"
msgstr "備考"

#: ../../_includes/metric-defs.md:2
msgid "Learn more about the available [metric types](https://docs.splunk.com/Observability/metrics-and-metadata/metric-types.html#nav-Metric-types) in Observability Cloud."
msgstr "Observability Cloudで利用可能な[メトリックタイプ](https://docs.splunk.com/Observability/metrics-and-metadata/metric-types.html#nav-Metric-types) 。"

#: ../../_includes/metric-defs.md:3
msgid "In host-based subscription plans, default metrics are those metrics included in host-based subscriptions in Observability Cloud, such as host, container, or bundled metrics. Custom metrics are not provided by default and might be subject to charges. See more about [metric categories](https://docs.splunk.com/Observability/metrics-and-metadata/metric-categories.html#nav-Metric-categories)."
msgstr "ホスト・ベースのサブスクリプション・プランでは、デフォルトのメトリクスは、ホスト、コンテナ、バンドル・メトリクスなど、Observability Cloudのホスト・ベースのサブスクリプションに含まれるメトリクスです。カスタム・メトリクスはデフォルトでは提供されず、有償となる場合があります。[メートル カテゴリー](https://docs.splunk.com/Observability/metrics-and-metadata/metric-categories.html#nav-Metric-categories) についてもっと見る。"

#: ../../_includes/metric-defs.md:4
msgid "In MTS-based subscription plans, all metrics are custom."
msgstr "MTSベースのサブスクリプションプランでは、すべてのメトリクスがカスタムです。"

#: ../../_includes/metric-defs.md:5
msgid "To add additional metrics, see how to configure `extraMetrics` [using the Collector](https://docs.splunk.com/Observability/gdi/opentelemetry/components/smartagent-receiver.html#add-additional-metrics)."
msgstr "追加のメトリクスを追加するには、コレクター](https://docs.splunk.com/Observability/gdi/opentelemetry/components/smartagent-receiver.html#add-additional-metrics) を使用して`extraMetrics` [を構成する方法を参照してください。"

#: ../../_includes/troubleshooting.md:4
msgid "If you are not able to see your data in Splunk Observability Cloud, try these tips:"
msgstr "Splunk Observability Cloud でデータが表示されない場合は、以下のヒントをお試しください："

#: ../../_includes/troubleshooting.md:6
msgid "Submit a case in the [Splunk Support Portal](https://splunkcommunities.force.com/customers/home/home.jsp)"
msgstr "[Splunk サポートポータルでケースを送信する](https://splunkcommunities.force.com/customers/home/home.jsp)"

#: ../../_includes/troubleshooting.md:9
msgid "Call [Splunk Customer Support](https://www.splunk.com/en_us/about-splunk/contact-us.html#customer-support)"
msgstr "電話[Splunk カスタマーサポート](https://www.splunk.com/en_us/about-splunk/contact-us.html#customer-support)"

#: ../../_includes/troubleshooting.md:12
msgid "Ask a question and get answers through community support at [Splunk Answers](https://community.splunk.com/t5/Splunk-Observability-Cloud/bd-p/it-signalfx)"
msgstr "[Splunk Answers のコミュニティサポートで質問し、回答を得る。](https://community.splunk.com/t5/Splunk-Observability-Cloud/bd-p/it-signalfx)"

#: ../../_includes/troubleshooting.md:13 ../../_includes/troubleshooting.md:16
msgid "Available to Splunk Observability Cloud customers and free trial users"
msgstr "Splunk Observability Cloudの顧客および無料トライアルユーザーが利用可能"

#: ../../_includes/troubleshooting.md:15
msgid "Join the Splunk [#observability](https://splunk-usergroups.slack.com/archives/C01AK4CCWR4) user group Slack channel to communicate with customers, partners, and Splunk employees worldwide"
msgstr "Splunk[#observability](https://splunk-usergroups.slack.com/archives/C01AK4CCWR4) ユーザーグループの Slack チャンネルに参加して、世界中の顧客、パートナー、Splunk 社員とのコミュニケーションを図りましょう。"

#: ../../_includes/troubleshooting.md:17
msgid "To learn how to join, see [Get Started with Splunk Community - Chat groups](https://docs.splunk.com/Documentation/Community/current/community/Chat)"
msgstr "参加方法については、[Splunk コミュニティを始める - チャットグループを参照してください。](https://docs.splunk.com/Documentation/Community/current/community/Chat)"

#: ../../_includes/troubleshooting.md:19
msgid "To learn about even more support options, see [Splunk Customer Success](https://www.splunk.com/en_us/customer-success.html)."
msgstr "その他のサポートオプションについては、[Splunk Customer Success](https://www.splunk.com/en_us/customer-success.html) をご覧ください。"

#: ../../gdi/monitors-cache/memory.md:3
msgid "Memory usage"
msgstr "メモリ使用量"

#: ../../gdi/monitors-cache/memory.md:8
msgid "To collect memory utilization metrics only, use the native OTel component {ref}`host-metrics-receiver`."
msgstr "メモリ利用メトリクスのみを収集するには、ネイティブの OTel コンポーネント {ref}`host-metrics-receiver` を使用します。"

#: ../../gdi/monitors-cache/memory.md:11
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Memory monitor type to send memory usage stats for the underlying host."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` を Memory monitor タイプで使用して、基礎となるホストのメモリ使用量の統計情報を送信します。"

#: ../../gdi/monitors-cache/memory.md:13
msgid "On Linux hosts, this monitor type relies on the `/proc` file system. If the underlying host's `/proc` file system is mounted somewhere other than `/proc`, set the path using the top-level configuration `procPath`, as shown in the following example:"
msgstr "Linuxホストでは、このモニター・タイプは`/proc` ファイル・システムに依存する。基盤となるホストの`/proc` ファイル・システムが`/proc` 以外の場所にマウントされている場合は、次の例に示すように、トップレベル構成`procPath` を使用してパスを設定します："

#: ../../gdi/monitors-cache/opcache.md:3
msgid "OPcache"
msgstr "オペキャッシュ"

#: ../../gdi/monitors-cache/opcache.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `collectd/opcache` monitor type to retrieve metrics from OPcache using the `opcache_get_status()` function, which improves PHP performance by storing precompiled script bytecode in shared memory."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`collectd/opcache` モニタタイプを使用して、`opcache_get_status()` 関数を使用して OPcache からメトリクスを取得します。これは、コンパイル済みのスクリプト バイトコードを共有メモリに格納することで PHP のパフォーマンスを向上させます。"

#: ../../gdi/monitors-cache/opcache.md:9 ../../gdi/monitors-hosts/systemd.md:9 ../../gdi/monitors-hosts/varnish.md:9 ../../gdi/monitors-network/network-protocols.md:9
msgid "This integration is available on Kubernetes and Linux."
msgstr "この統合はKubernetesとLinuxで利用できる。"

#: ../../gdi/monitors-cache/opcache.md:21
msgid "PHP setup"
msgstr "PHPセットアップ"

#: ../../gdi/monitors-cache/opcache.md:23
msgid "Install the following PHP script on your PHP web server:"
msgstr "以下のPHPスクリプトをPHPウェブサーバーにインストールしてください："

#: ../../gdi/monitors-cache/opcache.md:32
msgid "The following is an example using NGINX:"
msgstr "以下はNGINXを使用した例です："

#: ../../gdi/monitors-cache/opcache.md:48
msgid "Put the `opcache_stat.php` script in `/srv/http/monitoring` and run the following command:"
msgstr "`opcache_stat.php` スクリプトを`/srv/http/monitoring` に置き、以下のコマンドを実行する："

#: ../../gdi/monitors-cache/opcache.md:91
msgid "Example: Configure an endpoint"
msgstr "例エンドポイントを設定する"

#: ../../gdi/monitors-cache/opcache.md:93
msgid "If the status script results in an endpoint other than `/opcache_stat.php`, use the `path` configuration option as in the following example:"
msgstr "ステータス・スクリプトの結果が`/opcache_stat.php` 以外のエンドポイントになる場合は、次の例のように`パス` 構成オプションを使用します："

#: ../../gdi/monitors-cache/opcache.md:103
msgid "You can also define the full URL using the `url` configuration option, as shown in the following example:"
msgstr "次の例に示すように、`url` 設定オプションを使って完全なURLを定義することもできます："

#: ../../gdi/monitors-cache/opcache.md:117 ../../gdi/monitors-databases/apache-couchdb.md:58 ../../gdi/monitors-databases/etcd.md:47 ../../gdi/monitors-databases/mysql.md:100 ../../gdi/monitors-gitlab/gitlab.md:134 ../../gdi/monitors-hosts/coredns.md:60 ../../gdi/monitors-hosts/disk.md:15 ../../gdi/monitors-hosts/elasticsearch.md:57 ../../gdi/monitors-hosts/haproxy.md:111 ../../gdi/monitors-hosts/http.md:102 ../../gdi/monitors-hosts/interface.md:13 ../../gdi/monitors-hosts/jenkins.md:95 ../../gdi/monitors-hosts/nginx.md:50 ../../gdi/monitors-hosts/ntpq.md:53 ../../gdi/monitors-hosts/solr.md:48 ../../gdi/monitors-hosts/supervisor.md:48 ../../gdi/monitors-hosts/systemd.md:86
#: ../../gdi/monitors-hosts/varnish.md:58 ../../gdi/monitors-hosts/win-services.md:42 ../../gdi/monitors-languages/asp-dot-net.md:50 ../../gdi/monitors-languages/genericjmx.md:68 ../../gdi/monitors-messaging/apache-kafka.md:56 ../../gdi/monitors-monitoring/jaeger-grpc.md:49 ../../gdi/monitors-monitoring/nagios.md:69 ../../gdi/monitors-monitoring/prometheus-velero.md:54 ../../gdi/monitors-network/aws-appmesh.md:73 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:104 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:17 ../../gdi/monitors-orchestration/openshift-cluster.md:54
msgid "The following table shows the configuration options for this monitor:"
msgstr "次の表に、このモニターの設定オプションを示します："

#: ../../gdi/monitors-cache/opcache.md:68
msgid "Host name of the web server. For example, `127.0.0.1`."
msgstr "ウェブサーバーのホスト名。例えば、`127.0.0.1` 。"

#: ../../gdi/monitors-cache/opcache.md:68
msgid "Port number of the web server. For example, `80`. The default value is `0`."
msgstr "ウェブサーバーのポート番号。例えば、`80` 。デフォルト値は`0` 。"

#: ../../gdi/monitors-cache/opcache.md:68 ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/logstash.md:17 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/php-fpm.md:42 ../../gdi/monitors-hosts/supervisor.md:23 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-messaging/rabbitmq.md:25
#: ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "`useHTTPS`"
msgstr "`useHTTPS`"

#: ../../gdi/monitors-cache/opcache.md:68
msgid "If true, the monitor uses an HTTPS connection. The default value is `false`."
msgstr "trueの場合、モニターはHTTPS接続を使用します。デフォルト値は`false` 。"

#: ../../gdi/monitors-cache/opcache.md:68 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/php-fpm.md:42 ../../gdi/monitors-hosts/supervisor.md:23 ../../gdi/monitors-languages/expvar.md:24
msgid "`path`"
msgstr "`path`"

#: ../../gdi/monitors-cache/opcache.md:68
msgid "Path of the scrape URL for the OPcache script. The default value is `/opcache_stat.php`."
msgstr "OPcacheスクリプトのスクレイプURLのパス。デフォルト値は`/opcache_stat.php` 。"

#: ../../gdi/monitors-cache/opcache.md:68 ../../gdi/monitors-hosts/apache-httpserver.md:38 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-hosts/php-fpm.md:42 ../../gdi/monitors-hosts/supervisor.md:23 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7
msgid "`url`"
msgstr "`url`"

#: ../../gdi/monitors-cache/opcache.md:68
msgid "Either a final URL or a Go template populated with the `host`, `port`, and `path` values."
msgstr "最終URLか、`host` 、`port` 、`path` の値を入力したGoテンプレート。"

#: ../../gdi/monitors-cache/opcache.md:68
msgid "Name of the monitor. Sent as the `plugin_instance` dimension."
msgstr "モニター名`plugin_instance` ディメンジョンとして送信されます。"

#: ../../gdi/monitors-cloud/heroku.md:3 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:22 ../../gdi/opentelemetry/install-linux.rst:214
msgid "Heroku"
msgstr "ヘロク"

#: ../../gdi/monitors-cloud/heroku.md:7
msgid "The Splunk OpenTelemetry Connector for Heroku is a buildpack for the Splunk Distribution of OpenTelemetry Collector. The buildpack installs and runs the Splunk OpenTelemetry Connector on a Dyno to receive, process and export metric and trace data for Splunk Observability Cloud:"
msgstr "Splunk OpenTelemetry Connector for Heroku は、OpenTelemetry Collector の Splunk ディストリビューション用のビルドパックです。この buildpack は、Dyno に Splunk OpenTelemetry Connector をインストールして実行し、Splunk Observability Cloud のメトリックデータとトレースデータを受信、処理、エクスポートします："

#: ../../gdi/monitors-cloud/heroku.md:9
msgid "Splunk APM through the `sapm` exporter. The `otlphttp` exporter can be used with a custom configuration."
msgstr "Splunk APM は`sapm` エクスポーターを経由する。`otlphttp` エクスポーターは、カスタム設定で使用できます。"

#: ../../gdi/monitors-cloud/heroku.md:10
msgid "Splunk Infrastructure Monitoring through the `signalfx` exporter."
msgstr "`signalfx` エクスポーターによる Splunk Infrastructure Monitoring。"

#: ../../gdi/monitors-cloud/heroku.md:12
msgid "To learn more about the Splunk Distribution of OpenTelemetry Collector, see [Install and configure the Splunk Distribution of OpenTelemetry Collector](../opentelemetry/opentelemetry.rst)"
msgstr "OpenTelemetry Collector の Splunk Distribution の詳細については、[OpenTelemetry Collector の Splunk Distribution のインストールと設定を参照してください。](../opentelemetry/opentelemetry.rst)"

#: ../../gdi/monitors-cloud/heroku.md:18
msgid "Before you can install the Heroku buildpack to collect metrics, you need to have a Heroku app. To learn how to install the Heroku CLI and create an app, see the Heroku documentation for developers."
msgstr "メトリクスを収集するためにHeroku buildpackをインストールする前に、Herokuアプリが必要です。Heroku CLIのインストールとアプリの作成方法については、開発者向けのHerokuドキュメントを参照してください。"

#: ../../gdi/monitors-cloud/heroku.md:20
msgid "Installation steps"
msgstr "インストール手順"

#: ../../gdi/monitors-cloud/heroku.md:22
msgid "Follow these steps to collect metrics with the Heroku buildpack for the Splunk Distribution of OpenTelemetry Collector:"
msgstr "以下の手順に従って、OpenTelemetry Collector の Splunk ディストリビューション用 Heroku buildpack を使用してメトリクスを収集します："

#: ../../gdi/monitors-cloud/heroku.md:24
msgid "In the command-line interface, navigate to the Heroku project directory."
msgstr "コマンドラインインターフェイスで、Herokuプロジェクトディレクトリに移動します。"

#: ../../gdi/monitors-cloud/heroku.md:30
msgid "**_Note:_** Running `heroku` command outside of project directories results in unexpected behavior."
msgstr "**_Note:_** プロジェクト・ディレクトリの外で`heroku` コマンドを実行すると、予期しない動作が発生します。"

#: ../../gdi/monitors-cloud/heroku.md:32
msgid "Configure the Heroku app to expose Dyno metadata, which is required by Splunk OpenTelemetry Connector to set global dimensions such as `app_name`, `app_id` and `dyno_id`. See [here](https://devcenter.heroku.com/articles/dyno-metadata) for more information."
msgstr "これは、Splunk OpenTelemetry Connector が`app_name` 、`app_id` 、`dyno_id` などのグローバルディメンションを設定するために必要です。詳しくはこちら[](https://devcenter.heroku.com/articles/dyno-metadata) 。"

#: ../../gdi/monitors-cloud/heroku.md:38
msgid "Run both of the following commands together to add the Heroku buildpack."
msgstr "以下の2つのコマンドを一緒に実行して、Heroku buildpackを追加します。"

#: ../../gdi/monitors-cloud/heroku.md:45
msgid "**_Note:_** If you want to use an explict version number for production environment, replace the first command with the following command:"
msgstr "**注：***本番環境で明確なバージョン番号を使用したい場合は、最初のコマンドを以下のコマンドに置き換えてください："

#: ../../gdi/monitors-cloud/heroku.md:51
msgid "Set the required environment variables."
msgstr "必要な環境変数を設定する。"

#: ../../gdi/monitors-cloud/heroku.md:58
msgid "(Optional) Define custom configuration file in your Heroku project directory."
msgstr "(オプション）Herokuプロジェクトディレクトリにカスタム設定ファイルを定義します。"

#: ../../gdi/monitors-cloud/heroku.md:64
msgid "To add the buildpack to an existing project, you must create an empty commit before deploying the app."
msgstr "既存のプロジェクトにbuildpackを追加するには、アプリをデプロイする前に空のコミットを作成する必要があります。"

#: ../../gdi/monitors-cloud/heroku.md:69
msgid "Run the following command to deploy the app."
msgstr "以下のコマンドを実行してアプリをデプロイする。"

#: ../../gdi/monitors-cloud/heroku.md:75
msgid "Run the following command to check the logs."
msgstr "以下のコマンドを実行してログを確認する。"

#: ../../gdi/monitors-cloud/heroku.md:83
msgid "Use the following environment variables to configure the Heroku buildpack."
msgstr "以下の環境変数を使用して、Heroku buildpackを設定します。"

#: ../../gdi/monitors-cloud/heroku.md
msgid "Environment Variable"
msgstr "環境変数"

#: ../../gdi/monitors-cloud/heroku.md
msgid "`SPLUNK_ACCESS_TOKEN`"
msgstr "`SPLUNK_ACCESS_TOKEN`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "[Splunk access token](https://docs.splunk.com/Observability/admin/authentication-tokens/org-tokens.html#admin-org-tokens)."
msgstr "[Splunk アクセストークン](https://docs.splunk.com/Observability/admin/authentication-tokens/org-tokens.html#admin-org-tokens)."

#: ../../gdi/monitors-cloud/heroku.md
msgid "`SPLUNK_REALM`"
msgstr "`SPLUNK_REALM`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "[Splunk realm](https://dev.splunk.com/observability/docs/realms_in_endpoints/)."
msgstr "[Splunk realm](https://dev.splunk.com/observability/docs/realms_in_endpoints/)."

#: ../../gdi/monitors-cloud/heroku.md
msgid "`SPLUNK_API_URL`"
msgstr "`SPLUNK_API_URL`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "`https://api.SPLUNK_REALM.signalfx.com`"
msgstr "`https://api.SPLUNK_REALM.signalfx.com`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "The Splunk API base URL."
msgstr "Splunk API のベース URL。"

#: ../../gdi/monitors-cloud/heroku.md
msgid "`SPLUNK_CONFIG`"
msgstr "`SPLUNK_CONFIG`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "`/app/config.yaml`"
msgstr "`/app/config.yaml`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "The configuration to use. `/app/.splunk/config.yaml` used if default not found."
msgstr "使用する設定。`/app/.splunk/config.yaml` デフォルトが見つからない場合に使用します。"

#: ../../gdi/monitors-cloud/heroku.md
msgid "`SPLUNK_INGEST_URL`"
msgstr "`SPLUNK_INGEST_URL`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "`https://ingest.SPLUNK_REALM.signalfx.com`"
msgstr "`https://ingest.SPLUNK_REALM.signalfx.com`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "The Splunk Infrastructure Monitoring base URL."
msgstr "Splunk Infrastructure Monitoring のベース URL。"

#: ../../gdi/monitors-cloud/heroku.md
msgid "`SPLUNK_LOG_FILE`"
msgstr "`SPLUNK_LOG_FILE`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "`/dev/stdout`"
msgstr "`/dev/stdout`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "Specify location of agent logs. If not specified, logs will go to stdout."
msgstr "エージェント・ログの場所を指定する。指定しない場合、ログは標準出力に送られる。"

#: ../../gdi/monitors-cloud/heroku.md
msgid "`SPLUNK_MEMORY_TOTAL_MIB`"
msgstr "`SPLUNK_MEMORY_TOTAL_MIB`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "`512`"
msgstr "`512`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "Total available memory to agent."
msgstr "エージェントが使用可能なメモリの合計。"

#: ../../gdi/monitors-cloud/heroku.md
msgid "`SPLUNK_OTEL_VERSION`"
msgstr "`SPLUNK_OTEL_VERSION`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "`latest`"
msgstr "`latest`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "Version of Splunk OTel Connector to use. Defaults to latest."
msgstr "使用する Splunk OTel Connector のバージョン。デフォルトは最新。"

#: ../../gdi/monitors-cloud/heroku.md
msgid "`SPLUNK_TRACE_URL`"
msgstr "`SPLUNK_TRACE_URL`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "`https://ingest.SPLUNK_REALM.signalfx.com/v2/trace`"
msgstr "`https://ingest.SPLUNK_REALM.signalfx.com/v2/trace`"

#: ../../gdi/monitors-cloud/heroku.md
msgid "The Splunk APM base URL."
msgstr "Splunk APM のベース URL。"

#: ../../gdi/monitors-cloud/kong.md:3
msgid "Kong Gateway"
msgstr "香港ゲートウェイ"

#: ../../gdi/monitors-cloud/kong.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `kong` monitor type to provide service traffic metrics using `kong-plugin-signalfx`, which emits metrics for configurable request and response lifecycle groups, including:"
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を`kong` モニタタイプと共に使用し、`kong-plugin-signalfx` を使用してサービストラフィックメトリクスを提供する："

#: ../../gdi/monitors-cloud/kong.md:9
msgid "Counters for response counts"
msgstr "応答カウント用カウンタ"

#: ../../gdi/monitors-cloud/kong.md:10
msgid "Counters for cumulative response and request sizes"
msgstr "累積レスポンス・サイズと累積リクエスト・サイズのカウンタ"

#: ../../gdi/monitors-cloud/kong.md:11
msgid "Counters for cumulative request, upstream, and Kong latencies"
msgstr "累積リクエスト、アップストリーム、コングのレイテンシーのカウンタ"

#: ../../gdi/monitors-cloud/kong.md:13
msgid "You can partition request and response lifecycle groups by:"
msgstr "リクエスト・ライフサイクル・グループとレスポンス・ライフサイクル・グループは、次のようにして分割することができる："

#: ../../gdi/monitors-cloud/kong.md:15
msgid "API or Service Name/ID"
msgstr "APIまたはサービス名/ID"

#: ../../gdi/monitors-cloud/kong.md:16
msgid "Route ID"
msgstr "ルートID"

#: ../../gdi/monitors-cloud/kong.md:17
msgid "Request HTTP Method"
msgstr "リクエストHTTPメソッド"

#: ../../gdi/monitors-cloud/kong.md:18
msgid "Response HTTP Status Code"
msgstr "レスポンス HTTPステータスコード"

#: ../../gdi/monitors-cloud/kong.md:20
msgid "In addition, the integration provides system-wide connection statistics, including:"
msgstr "さらにこの統合は、以下のようなシステム全体の接続統計を提供する："

#: ../../gdi/monitors-cloud/kong.md:22
msgid "A counter for total fielded requests"
msgstr "総リクエスト数カウンタ"

#: ../../gdi/monitors-cloud/kong.md:23
msgid "Gauges for active connections and their various states"
msgstr "アクティブな接続とそのさまざまな状態のゲージ"

#: ../../gdi/monitors-cloud/kong.md:24
msgid "A gauge for database connectivity"
msgstr "データベース接続のゲージ"

#: ../../gdi/monitors-cloud/kong.md:26
msgid "This integration is only available on Kubernetes and Linux, and requires version 0.11.2 or higher of Kong and version 0.0.1 or higher of `kong-plugin-signalfx`. This integration is only supported for Kong Gateway Community Edition (CE)."
msgstr "この統合はKubernetesとLinuxでのみ利用可能で、Kongのバージョン0.11.2以上と`kong-plugin-signalfx` のバージョン0.0.1以上が必要です。この統合は、Kong Gateway Community Edition（CE）のみでサポートされています。"

#: ../../gdi/monitors-cloud/kong.md:38
msgid "Kong installation"
msgstr "コング設置"

#: ../../gdi/monitors-cloud/kong.md:40
msgid "In addition to the Collector, you also need both the `kong-plugin-signalfx` Kong plugin and the `kong` SignalFx monitor to activate this integration."
msgstr "この統合を有効にするには、Collectorに加えて、`kong-plugin-signalfx` Kongプラグインと`kong` SignalFxモニターの両方が必要です。"

#: ../../gdi/monitors-cloud/kong.md:42
msgid "Follow these steps to deploy the integration:"
msgstr "以下の手順に従って、統合を展開してください："

#: ../../gdi/monitors-cloud/kong.md:44
msgid "Run the following commands on each Kong server with a configured `LUA_PATH`:"
msgstr "`LUA_PATH` を設定した各Kongサーバーで、以下のコマンドを実行します："

#: ../../gdi/monitors-cloud/kong.md:54
msgid "Add the following `lua_shared_dict` memory declarations to the NGINX configuration file of Kong, or add them directly to `/usr/local/share/lua/5.1/kong/templates/nginx_kong.lua` if you are using Kong default setup:"
msgstr "以下の`lua_shared_dict` メモリ宣言をKongのNGINX設定ファイルに追加するか、Kongのデフォルト設定を使用している場合は、`/usr/local/share/lua/5.1/kong/templates/nginx_kong.lua` に直接追加してください："

#: ../../gdi/monitors-cloud/kong.md:59
msgid "Reload Kong to make the plugin available and install it globally:"
msgstr "Kongをリロードしてプラグインを利用可能にし、グローバルにインストールします："

#: ../../gdi/monitors-cloud/kong.md:64 ../../gdi/monitors-databases/apache-couchdb.md:18 ../../gdi/monitors-orchestration/openshift-cluster.md:25
msgid "Deploy the Splunk Distribution of OpenTelemetry Collector to your host or container platform."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションをホストまたはコンテナプラットフォームにデプロイします。"

#: ../../gdi/monitors-cloud/kong.md:65
msgid "Configure the monitor, as described in the next section."
msgstr "次のセクションで説明するように、モニターを設定する。"

#: ../../gdi/monitors-cloud/kong.md:99
msgid "Filter example"
msgstr "フィルターの例"

#: ../../gdi/monitors-cloud/kong.md:101
msgid "The following is a sample configuration with custom `/signalfx` route and filter lists:"
msgstr "以下は、カスタム`/signalfx` ルートとフィルターリストを使用した設定例です："

#: ../../gdi/monitors-cloud/kong.md:127
msgid "Kong configuration"
msgstr "コング構成"

#: ../../gdi/monitors-cloud/kong.md:129
msgid "Like most Kong plugins, you can configure the SignalFx `kong` integration globally or by specific service, route, API, or consumer object contexts by making `POST` requests to each `plugins` endpoint. For example:"
msgstr "多くのKongプラグインと同様に、SignalFx`kong` の統合をグローバルに、または特定のサービス、ルート、API、コンシューマーオブジェクトのコンテキストごとに設定するには、`POST` リクエストを各`プラグイン` エンドポイントに送信します。例えば、こうだ："

#: ../../gdi/monitors-cloud/kong.md:137
msgid "For each request made to the respective registered object context, the `kong` integration obtains metric content  and aggregates it for automated retrieval at the `/signalfx` endpoint of the Admin API. Although you can activate request  contexts for specific Consumer objects, consumer IDs or unique visitor metrics are not calculated."
msgstr "それぞれの登録されたオブジェクトコンテキストになされた各リクエストに対して、`kong` 統合はメトリックコンテンツを取得し、Admin APIの`/signalfx` エンドポイントで自動検索のためにそれを集約する。特定のコンシューマ・オブジェクトに対してリクエスト・コンテキストをアクティブにできますが、コンシューマ ID や一意の訪問者メトリクスは計算されません。"

#: ../../gdi/monitors-cloud/kong.md:141
msgid "By default, the `kong` integration aggregates metrics by a context determined by the HTTP method of the request and by  the status code of the response. If you're monitoring a large infrastructure with hundreds of routes, grouping by HTTP  method might be too granular. You can deactivate context grouping by setting `aggregate_by_http_method` to `false`:"
msgstr "デフォルトでは、`kong` integrationは、リクエストのHTTPメソッドとレスポンスのステータス・コードによって決定されるコンテキストによって、メトリクスを集約する。何百ものルートを持つ大規模なインフラを監視している場合、HTTPメソッドでグループ化するのは細かすぎるかもしれない。`aggregate_by_http_method` を`false` に設定することで、コンテキストのグループ化を解除できます："

#: ../../gdi/monitors-cloud/kong.md:153 ../../gdi/monitors-hosts/solr.md:62
msgid "These metrics are available for this integration:"
msgstr "これらのメトリクスは、この統合で利用可能です："

#: ../../gdi/monitors-cloud/openstack.md:3 ../../gdi/opentelemetry/collector-architecture.rst:197
msgid "OpenStack"
msgstr "OpenStack"

#: ../../gdi/monitors-cloud/openstack.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the OpenStack monitor type to gather metrics from OpenStack instances."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、OpenStack インスタンスからメトリクスを収集するために、OpenStack モニタタイプで {参照}`Smart Agent レシーバ<smartagent-receiver>` を使用する。"

#: ../../gdi/monitors-cloud/openstack.md:9
msgid "This integration covers the following OpenStack components:"
msgstr "この統合は、以下のOpenStackコンポーネントを対象としている："

#: ../../gdi/monitors-cloud/openstack.md:11
msgid "Nova (Compute)"
msgstr "ノヴァ（コンピュート）"

#: ../../gdi/monitors-cloud/openstack.md:12
msgid "Cinder (Block Storage)"
msgstr "シンダー（ブロック・ストレージ）"

#: ../../gdi/monitors-cloud/openstack.md:13
msgid "Neutron (Network)"
msgstr "ニュートロン（ネットワーク）"

#: ../../gdi/monitors-cloud/openstack.md:15
msgid "This integration is available on Linux and Kubernetes."
msgstr "この統合はLinuxとKubernetesで利用できる。"

#: ../../gdi/monitors-cloud/openstack.md:54
msgid "The following table shows the configuration options for the OpenStack monitor:"
msgstr "次の表に、OpenStack モニターの設定オプションを示します："

#: ../../gdi/monitors-cloud/openstack.md:29 ../../gdi/monitors-databases/apache-spark.md:30 ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-databases/hadoop.md:30 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-hosts/apache-zookeeper.md:23 ../../gdi/monitors-hosts/couchbase.md:23 ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/solr.md:23 ../../gdi/monitors-messaging/rabbitmq.md:25 ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "`pythonBinary`"
msgstr "`pythonBinary`"

#: ../../gdi/monitors-cloud/openstack.md:29 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "Path to the Python binary. If not set, a built-in runtime is used. This setting can include arguments to the binary."
msgstr "Pythonバイナリへのパス。設定されていない場合は、組み込みのランタイムが使用される。この設定には、バイナリへの引数を含めることができる。"

#: ../../gdi/monitors-cloud/openstack.md:29
msgid "`authURL`"
msgstr "`authURL`"

#: ../../gdi/monitors-cloud/openstack.md:29
msgid "Keystone authentication URL or endpoint for the OpenStack cloud."
msgstr "OpenStack クラウドの Keystone 認証 URL またはエンドポイント。"

#: ../../gdi/monitors-cloud/openstack.md:29 ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/mysql.md:49 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/apache-httpserver.md:38 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/couchbase.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/jenkins.md:31
#: ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-hosts/vsphere.md:29 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/jmx.md:35 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-messaging/rabbitmq.md:25 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23
#: ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23 ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "`username`"
msgstr "`username`"

#: ../../gdi/monitors-cloud/openstack.md:29
msgid "Username to authenticate with keystone identity."
msgstr "keystone identityで認証するユーザー名。"

#: ../../gdi/monitors-cloud/openstack.md:29 ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/microsoft-sql-server.md:40 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/mysql.md:49 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/apache-httpserver.md:38 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/couchbase.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/http.md:54
#: ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-hosts/vsphere.md:29 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/jmx.md:35 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-messaging/rabbitmq.md:25 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23
#: ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23 ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "`password`"
msgstr "`password`"

#: ../../gdi/monitors-cloud/openstack.md:29
msgid "Password to authenticate with keystone identity."
msgstr "keystone identityで認証するためのパスワード。"

#: ../../gdi/monitors-cloud/openstack.md:29
msgid "`projectName`"
msgstr "`projectName`"

#: ../../gdi/monitors-cloud/openstack.md:29
msgid "Specify the name of the project to be monitored. The default value is `demo`."
msgstr "監視するプロジェクト名を指定する。デフォルト値は`デモ` 。"

#: ../../gdi/monitors-cloud/openstack.md:29
msgid "`projectDomainID`"
msgstr "`projectDomainID`"

#: ../../gdi/monitors-cloud/openstack.md:29
msgid "The project domain. The default value is `default`."
msgstr "プロジェクトのドメイン。デフォルト値は`デフォルト` 。"

#: ../../gdi/monitors-cloud/openstack.md:29
msgid "`regionName`"
msgstr "`regionName`"

#: ../../gdi/monitors-cloud/openstack.md:29
msgid "The region name for URL discovery. The region name defaults to the first region if multiple regions are available."
msgstr "URLディスカバリーのリージョン名。複数のリージョンが利用可能な場合、リージョン名のデフォルトは最初のリージョンになる。"

#: ../../gdi/monitors-cloud/openstack.md:29
msgid "`userDomainID`"
msgstr "`userDomainID`"

#: ../../gdi/monitors-cloud/openstack.md:29
msgid "The user domain ID. The default value is `default`."
msgstr "ユーザーのドメインID。デフォルト値は`デフォルト` 。"

#: ../../gdi/monitors-cloud/openstack.md:29 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23
#: ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-events.md:63 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "`skipVerify`"
msgstr "`skipVerify`"

#: ../../gdi/monitors-cloud/openstack.md:29
msgid "Skips SSL certificate validation. The default value is `false`."
msgstr "SSL証明書の検証をスキップする。デフォルト値は`false` 。"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:3
msgid "Cloud Foundry Loggregator Firehose"
msgstr "Cloud Foundry Loggregator Firehose"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Cloud Foundry Loggregator Firehose monitor type to create a Cloud Foundry Firehose nozzle. The integration connects to the Cloud Foundry Reverse Log Proxy (RLP) Gateway that feeds metrics from the Loggregator. It supports gauge and counter metrics."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と Cloud Foundry Loggregator Firehose モニタータイプを使用して Cloud Foundry Firehose ノズルを作成します。この統合は、LoggregatorからメトリクスをフィードするCloud Foundry Reverse Log Proxy (RLP) Gatewayに接続します。ゲージとカウンターのメトリクスをサポート。"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:9
msgid "This integration is available on Linux."
msgstr "この統合はLinuxで利用できる。"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:11
msgid "This integration uses the new RLP Gateway model that was introduced in Pivotal Cloud Foundry (PCF) 2.4, so it doesn't work with older releases."
msgstr "この統合は、Pivotal Cloud Foundry (PCF) 2.4で導入された新しいRLP Gatewayモデルを使用するため、古いリリースでは動作しません。"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:50 ../../gdi/monitors-conviva/conviva.md:51 ../../gdi/monitors-databases/apache-spark.md:70 ../../gdi/monitors-databases/cassandra.md:47 ../../gdi/monitors-databases/consul.md:69 ../../gdi/monitors-databases/hadoop.md:55 ../../gdi/monitors-databases/sap-hana.md:60 ../../gdi/monitors-hosts/chrony.md:46 ../../gdi/monitors-hosts/collectd-plugin.md:46 ../../gdi/monitors-hosts/docker.md:54 ../../gdi/monitors-hosts/elasticsearch-query.md:225 ../../gdi/monitors-languages/jmx.md:59 ../../gdi/monitors-languages/microsoft-dotnet.md:66 ../../gdi/monitors-messaging/apache-activemq.md:54
#: ../../gdi/monitors-network/dns.md:46
msgid "The following table shows the configuration options for this integration:"
msgstr "次の表に、この統合の設定オプションを示します："

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
msgid "`rlpGatewayUrl`"
msgstr "`rlpGatewayUrl`"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
msgid "The base URL to the RLP Gateway server. This is quite often of the form ``https://log-stream.<CLOUD CONTROLLER SYSTEM DOMAIN>`` if using PCF 2.4+."
msgstr "RLP GatewayサーバへのベースURL。PCF2.4+を使用している場合は、``https://log-stream.<CLOUD CONTROLLER SYSTEM DOMAIN>`` 。"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
msgid "`rlpGatewaySkipVerify`"
msgstr "`rlpGatewaySkipVerify`"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
msgid "Whether to skip SSL/TLS verification when using HTTPS to connect to the RLP Gateway (**default:** `false`)"
msgstr "HTTPS を使用して RLP ゲートウェイに接続するときに SSL/TLS 検証 をスキップするかどうか (**default:**`false`)"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
msgid "`uaaUser`"
msgstr "`uaaUser`"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
msgid "The UAA username for a user that has the appropriate authority to fetch logs from the Firehose (usually the `logs.admin` authority)"
msgstr "Firehose からログを取得する適切な権限を持つユーザの UAA ユーザ名（通常は`logs.admin` 権限）。"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
msgid "`uaaPassword`"
msgstr "`uaaPassword`"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
msgid "The password for the above UAA user"
msgstr "上記UAAユーザーのパスワード"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
msgid "`uaaUrl`"
msgstr "`uaaUrl`"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
msgid "The URL to the UAA server. This monitor obtains an access token from this server that it uses to authenticate with the RLP Gateway."
msgstr "UAAサーバーへのURL。このモニターは、RLPゲートウェイとの認証に使用するアクセストークンをこのサーバーから取得します。"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
msgid "`uaaSkipVerify`"
msgstr "`uaaSkipVerify`"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
msgid "Whether to skip SSL/TLS verification when using HTTPS to connect to the UAA server (**default:** `false`)"
msgstr "HTTPSを使用してUAAサーバーに接続する際に、SSL/TLS検証をスキップするかどうか (**default:**`false`)"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
msgid "`shardId`"
msgstr "`shardId`"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:25
msgid "The nozzle's shard ID.  All nozzle instances with the same ID receive an exclusive subset of the data from the Firehose. The default should suffice in the vast majority of use cases. (**default:** `signalfx_nozzle`)"
msgstr "ノズルの破片ID。 同じIDを持つすべてのノズルインスタンスは、Firehoseからデータの排他的なサブセットを受信します。ほとんどの場合、デフォルトで十分です。(**default:**`signalfx_nozzle`)"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:62
msgid "PCF configuration"
msgstr "PCFコンフィギュレーション"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:64
msgid "Most of PCF Key Performance Indicators (KPIs) come through the Firehose. Refer to PCF documentation for more information on KPIs to determine when to scale up or down your cluster."
msgstr "PCFの主要業績評価指標(KPI)のほとんどは、ファイヤーホースを通じて提供される。クラスタをスケールアップまたはスケールダウンするタイミングを決定するKPIの詳細については、PCFのドキュメントを参照してください。"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:66
msgid "To create Cloud Foundry User Account and Authentication (UAA) user with the proper permissions to access the RLP Gateway, run the following command:"
msgstr "RLP Gatewayにアクセスするための適切な権限を持つCloud Foundry User Account and Authentication（UAA）ユーザーを作成するには、次のコマンドを実行します："

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:76
msgid "Set the ``uaaUsername`` config value to ``signalfx-nozzle`` and the ``uaaPassword`` field to the ``<signalfx-nozzle client secret>`` that you select."
msgstr "``uaaUsername`` コンフィグ値を``signalfx-nozzle`` に、``uaaPassword`` フィールドを選択した``<signalfx-nozzle client secret>`` に設定する。"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:80
msgid "The gauge and counter metrics are collected from PCF Platform apps and platform components in the following way:"
msgstr "ゲージとカウンターのメトリクスは、以下の方法でPCFプラットフォームアプリとプラットフォームコンポーネントから収集されます："

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:82
msgid "Firehose gauge metrics are converted to Splunk Infrastructure Monitoring gauges."
msgstr "Firehose ゲージのメトリクスは Splunk Infrastructure Monitoring ゲージに変換されます。"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:83
msgid "Firehose counter metrics are converted to Infrastructure Monitoring cumulative counters metrics."
msgstr "Firehose カウンター・メトリクスは、Infrastructure Monitoring 累積カウンター・メトリクスに変換されます。"

#: ../../gdi/monitors-cloudfoundry/cloudfoundry-firehose-nozzle.md:84
msgid "All of the tags in the Firehose envelopes are converted to dimensions when sending to Infrastructure Monitoring."
msgstr "Firehose エンベロープのタグはすべて、Infrastructure Monitoring に送信する際にディメンションに変換されます。"

#: ../../gdi/monitors-conviva/conviva.md:3
msgid "Conviva Real-Time/Live video play"
msgstr "Conviva リアルタイム/ライブビデオ再生"

#: ../../gdi/monitors-conviva/conviva.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Conviva monitor type to pull `Real-Time/Live` video playing experience metrics from Conviva."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と Conviva モニタータイプを使用して、Conviva から`リアルタイム/ライブ` ビデオ再生エクスペリエンスメトリクスを取得します。"

#: ../../gdi/monitors-conviva/conviva.md:9
msgid "This integration uses version 2.4 of the Conviva Experience Insights REST APIs."
msgstr "この統合では、Conviva Experience Insights REST APIs のバージョン 2.4 を使用します。"

#: ../../gdi/monitors-conviva/conviva.md:11
msgid ""
"Only `Live` conviva metrics listed on the [Conviva Developer Community](https://community.conviva.com/site/global/apis_data/experience_insights_api/index.gsp#metrics) page are supported. All metrics are gauges. The Conviva metrics are converted to Splunk Observability Cloud metrics with dimensions named account and filter. The account dimension is the name of the Conviva account and the filter dimension is the name of the Conviva filter applied to the metric. In the case of MetricLenses, the constituent MetricLens metrics and MetricLens dimensions are included. The values of the MetricLens dimensions are derived from the values of the associated MetricLens dimension "
"entities."
msgstr "[Conviva Developer Community](https://community.conviva.com/site/global/apis_data/experience_insights_api/index.gsp#metrics) ページに掲載されている`Live` conviva メトリクスのみがサポートされています。すべての指標はゲージである。Conviva メトリクスは、account と filter という名前のディメンションを持つ Splunk Observability Cloud メトリクスに変換されます。account ディメンジョンは Conviva のアカウント名で、filter ディメンジョンはメトリックに適用される Conviva フィルタの名前です。MetricLens の場合、構成要素である MetricLens メトリックと MetricLens ディメンジョンが含まれます。MetricLens 次元の値は、関連する MetricLens 次元エンティティの値から派生します。"

#: ../../_includes/collector-installation-windows.md:5 ../../_includes/collector-installation.md:7 ../../gdi/monitors-orchestration/openshift-cluster.md:40
msgid "{ref}`Install on Windows <otel-install-windows>`"
msgstr "{参考}`Windowsへのインストール <otel-install-windows>`"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "`pulseUsername`"
msgstr "`pulseUsername`"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "Conviva Pulse username required with each API request."
msgstr "各APIリクエストで必要なConviva Pulseユーザー名。"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "`pulsePassword`"
msgstr "`pulsePassword`"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "Conviva Pulse password required with each API request."
msgstr "各APIリクエストでConviva Pulseパスワードが必要です。"

#: ../../gdi/monitors-conviva/conviva.md:26 ../../gdi/monitors-databases/logstash.md:17 ../../gdi/monitors-hosts/docker.md:23
msgid "`timeoutSeconds`"
msgstr "`timeoutSeconds`"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "(**default:** `10`)"
msgstr "(**default:**`10`)"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "`metricConfigs`"
msgstr "`metricConfigs`"

#: ../../gdi/monitors-conviva/conviva.md:26 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-databases/sql.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-monitoring/win_perf_counters.md:27 ../../gdi/monitors-network/snmp.md:27 ../../gdi/monitors-network/statsd.md:35 ../../gdi/monitors-orchestration/kubernetes-events.md:63
msgid "`list of objects (see below)`"
msgstr "`オブジェクトのリスト（下記参照）`"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "Conviva metrics to fetch. The default is quality_metriclens metric with the \"All Traffic\" filter applied and all quality_metriclens dimensions."
msgstr "フェッチするコンビーバ・メトリクス。デフォルトは、quality_metriclens メトリックで、\"All Traffic\" フィルタが適用され、すべての quality_metriclens ディメンジョンが設定されています。"

#: ../../gdi/monitors-conviva/conviva.md:60
msgid "The **nested** `metricConfigs` configuration object has the following fields:"
msgstr "`metricConfigs` コンフィギュレーション・オブジェクトは以下のフィールドを持つ："

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "`account`"
msgstr "`account`"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "Conviva customer account name. The default account is fetched used if not specified."
msgstr "Convivaの顧客アカウント名。指定がない場合は、デフォルトのアカウントが使用されます。"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "`metricParameter`"
msgstr "`metricParameter`"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "(**default:** `quality_metriclens`)"
msgstr "(**default:**`quality_metriclens`)"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "`filters`"
msgstr "`filters`"

#: ../../gdi/monitors-conviva/conviva.md:26 ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/logparser.md:23 ../../gdi/monitors-databases/microsoft-sql-server.md:40 ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-databases/sap-hana.md:23 ../../gdi/monitors-databases/sql.md:23 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/collectd-df.md:23 ../../gdi/monitors-hosts/collectd-plugin.md:23 ../../gdi/monitors-hosts/docker.md:23 ../../gdi/monitors-hosts/elasticsearch.md:23
#: ../../gdi/monitors-hosts/filesystems.md:7 ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/host-processes.md:7 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/interface.md:7 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-hosts/solr.md:23 ../../gdi/monitors-hosts/systemd.md:34 ../../gdi/monitors-hosts/varnish.md:33 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/java-monitor.md:27 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
#: ../../gdi/monitors-monitoring/cgroups.md:35 ../../gdi/monitors-monitoring/win_perf_counters.md:27 ../../gdi/monitors-network/dns.md:21 ../../gdi/monitors-network/logstash-tcp.md:25 ../../gdi/monitors-network/net-io.md:21 ../../gdi/monitors-network/snmp.md:27 ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "`list of strings`"
msgstr "`文字列リスト`"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "Filter names. The default is `All Traffic` filter."
msgstr "フィルター名。デフォルトは`All Traffic` フィルタ。"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "`metricLensDimensions`"
msgstr "`metricLensDimensions`"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "MetricLens dimension names. The default is names of all MetricLens dimensions of the account"
msgstr "MetricLensの寸法名。デフォルトは、アカウントのすべての MetricLens ディメンジョンの名前です。"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "`excludeMetricLensDimensions`"
msgstr "`excludeMetricLensDimensions`"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "MetricLens dimension names to exclude."
msgstr "除外する MetricLens ディメンジョン名。"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "`maxFiltersPerRequest`"
msgstr "`maxFiltersPerRequest`"

#: ../../gdi/monitors-conviva/conviva.md:26
msgid "Max number of filters per request. The default is the number of filters. Multiple requests are made if the number of filters is more than maxFiltersPerRequest (**default:** `0`)"
msgstr "1リクエストあたりの最大フィルター数。デフォルトはフィルター数。フィルター数がmaxFiltersPerRequest (**default:**`0`) 以上の場合、複数のリクエストが行われる。"

#: ../../gdi/monitors-databases/apache-couchdb.md:3
msgid "Apache CouchDB"
msgstr "Apache CouchDB"

#: ../../gdi/monitors-databases/apache-couchdb.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Apache CouchDB monitor type to monitor metrics from CouchDB instances by calling the `_stats` endpoint for instances."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を Apache CouchDB モニタータイプで使用し、`_stats` エンドポイントをインスタンスに対して呼び出すことで、CouchDB インスタンスからのメトリクスを監視します。"

#: ../../gdi/monitors-databases/apache-couchdb.md:21
msgid "Download [collectd-couchdb](https://github.com/signalfx/collectd-couchdb) in GitHub."
msgstr "GitHub で[collectd-couchdb](https://github.com/signalfx/collectd-couchdb) をダウンロードする。"

#: ../../gdi/monitors-databases/apache-couchdb.md:22
msgid "Move the `couchdb_plugin.py` file to `/usr/share/collectd/collectd-couchdb`."
msgstr "`couchdb_plugin.py` ファイルを`/usr/share/collectd/collectd-couchdb` に移動します。"

#: ../../gdi/monitors-databases/apache-couchdb.md:23
msgid "Modify the [sample configuration file](https://github.com/signalfx/integrations/blob/master/collectd-couchdb/10-couchdb.conf) for the plugin in `/etc/collectd/managed_config` according to the [Configuration](#configuration) section."
msgstr "`/etc/collectd/managed_config` にあるプラグインの[サンプル設定ファイル](https://github.com/signalfx/integrations/blob/master/collectd-couchdb/10-couchdb.conf) を[設定](#configuration) セクションに従って変更します。"

#: ../../gdi/monitors-databases/apache-couchdb.md:24
msgid "Install the Python requirements:"
msgstr "Pythonの要件をインストールします："

#: ../../gdi/monitors-databases/apache-couchdb.md:29
msgid "Restart the OpenTelemetry collector."
msgstr "OpenTelemetry コレクタを再起動します。"

#: ../../gdi/monitors-databases/apache-couchdb.md:33 ../../gdi/monitors-hosts/disk.md:7
msgid "Definition"
msgstr "定義"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Example value"
msgstr "値の例"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "ModulePath"
msgstr "ModulePath"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Path on disk where collectd can find this module."
msgstr "collectd がこのモジュールを見つけられるディスク上のパス。"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "\"/usr/share/collectd/collectd-couchdb/\""
msgstr "\"/usr/share/collectd/collectd-couchdb/\""

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Host"
msgstr "ホスト"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Host name of the CouchDB member"
msgstr "CouchDBメンバーのホスト名"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "\"localhost\""
msgstr "\"localhost\""

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Port"
msgstr "ポート"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Port at which the member can be reached"
msgstr "会員の連絡先ポート"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "\"5984\""
msgstr "\"5984\""

#: ../../gdi/monitors-databases/apache-couchdb.md:33 ../../gdi/opentelemetry/collector-architecture.rst:107
msgid "Node"
msgstr "ノード"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Name of the CouchDB node in the cluster"
msgstr "クラスタ内のCouchDBノードの名前"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "\"couchdb@test\\_node\""
msgstr "\"couchdb@test\\_node\""

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "EnhancedMetrics"
msgstr "EnhancedMetrics"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Boolean; `true` to indicate if the uncommented enhanced metrics in couchdb_metrics.py are needed."
msgstr "Boolean;`true` couchdb_metrics.py でコメントアウトされていない拡張メトリクスが必要かどうかを示します。"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "\"false\""
msgstr "\"偽\""

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Username"
msgstr "ユーザー名"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Username required for authentication of CouchDB"
msgstr "CouchDBの認証に必要なユーザー名"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "\"admin\""
msgstr "\"admin\""

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Password"
msgstr "パスワード"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Password required for authentication of CouchDB"
msgstr "CouchDBの認証に必要なパスワード"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "IncludeMetric"
msgstr "IncludeMetric"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Metric emitted by `_stats` api to be activated."
msgstr "`_stats` api がアクティブにするメトリック。"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "\"metric listed in docs\""
msgstr "\"ドキュメントに記載されているメトリック\""

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "ExcludeMetric"
msgstr "ExcludeMetric"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Metric emitted by `_stats` api to be deactivated."
msgstr "`_stats` api から出力されるメトリックが無効化される。"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Space-separated key-value pair for a user-defined dimension"
msgstr "ユーザ定義次元のスペースで区切られたキーと値のペア。"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "dimension\\_name dimension\\_value"
msgstr "dimension\\_name dimension\\_value"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Interval"
msgstr "インターバル"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "Number of seconds between calls to CouchDB API."
msgstr "CouchDB APIを呼び出す間の秒数。"

#: ../../gdi/monitors-databases/apache-couchdb.md:33 ../../gdi/opentelemetry/kubernetes-config-logs.rst:166
msgid "10"
msgstr "10"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "ssl\\_keyfile"
msgstr "ssl\\_keyfile"

#: ../../gdi/monitors-databases/apache-couchdb.md:33 ../../gdi/monitors-hosts/jenkins.md:31
msgid "Path to the keyfile"
msgstr "キーファイルへのパス"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "\"path/to/file\""
msgstr "\"パス/to/ファイル\""

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "ssl\\_certificate"
msgstr "ssl\\_certificate"

#: ../../gdi/monitors-databases/apache-couchdb.md:33 ../../gdi/monitors-hosts/jenkins.md:31
msgid "Path to the certificate"
msgstr "証明書へのパス"

#: ../../gdi/monitors-databases/apache-couchdb.md:33
msgid "ssl\\_ca\\_certs"
msgstr "ssl\\_ca\\_certs"

#: ../../gdi/monitors-databases/apache-couchdb.md:33 ../../gdi/monitors-hosts/jenkins.md:31
msgid "Path to the ca file"
msgstr "caファイルへのパス"

#: ../../gdi/monitors-databases/apache-spark.md:3
msgid "Apache Spark"
msgstr "Apache Spark"

#: ../../gdi/monitors-databases/apache-spark.md:6
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Apache Spark monitor type to monitor Apache Spark clusters. It does not support fetching metrics from Spark Structured Streaming."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と Apache Spark monitor type を使用して Apache Spark クラスタを監視する。Spark Structured Streamingからのメトリクス・フェッチはサポートしていません。"

#: ../../gdi/monitors-databases/apache-spark.md:8
msgid "For the following cluster modes, the integration only supports HTTP endpoints:"
msgstr "以下のクラスタ・モードでは、統合はHTTPエンドポイントのみをサポートします："

#: ../../gdi/monitors-databases/apache-spark.md:10 ../../gdi/opentelemetry/collector-architecture.rst:53
msgid "Standalone"
msgstr "スタンドアロン"

#: ../../gdi/monitors-databases/apache-spark.md:11
msgid "Mesos"
msgstr "メゾス"

#: ../../gdi/monitors-databases/apache-spark.md:12
msgid "Hadoop YARN"
msgstr "Hadoop YARN"

#: ../../gdi/monitors-databases/apache-spark.md:14
msgid "You need to select distinct monitor configurations and discovery rules for master and worker processes. For the master configuration, set `isMaster` to `true`. When you run Apache Spark on Hadoop YARN, this integration can only report application metrics from the master node."
msgstr "マスタープロセスとワーカープロセスに対して、個別のモニター設定とディスカバリールールを選択する必要がある。マスター・コンフィギュレーションでは、`isMaster` を`true` に設定する。Hadoop YARN上でApache Sparkを実行する場合、この統合はマスター・ノードからのアプリケーション・メトリクスのみをレポートできます。"

#: ../../gdi/monitors-databases/apache-spark.md:35
msgid "To activate this integration, add one of the following to your Collector configuration:"
msgstr "この統合を有効にするには、Collector の構成に次のいずれかを追加します："

#: ../../gdi/monitors-databases/apache-spark.md:66
msgid "**Note:** The names `collectd_spark_master` and `collectd_spark_worker` are for identification purposes only and don't affect functionality. You can use either name in your configuration, but you need to select distinct monitor configurations and discovery rules for master and worker processes. For the master configuration, see the `isMaster` field in the [Configuration settings](#configuration-settings) section."
msgstr "**Note:**`collectd_spark_master` および`collectd_spark_worker` という名前は、識別のためのものであり、機能には影響しません。コンフィギュレーションではどちらの名前を使ってもよいが、マスタプロセスとワーカープロセスで別々のモニタ・コンフィギュレーションとディスカバリ・ルールを選択する必要がある。マスター・コンフィギュレーションについては、[コンフィギュレーション設定](#configuration-settings) セクションの`isMaster` フィールドを参照のこと。"

#: ../../gdi/monitors-databases/apache-spark.md:30
msgid "This option specifies the path to a Python binary that executes the Python code. If you don't set this option, the system uses a built-in runtime. You can also include arguments to the binary."
msgstr "このオプションは、Pythonコードを実行するPythonバイナリへのパスを指定する。このオプションを設定しないと、システムは組み込みのランタイムを使用する。バイナリに引数を含めることもできる。"

#: ../../gdi/monitors-databases/apache-spark.md:30
msgid "`isMaster`"
msgstr "`isMaster`"

#: ../../gdi/monitors-databases/apache-spark.md:30
msgid "Set this option to `true` when you want to monitor a master Spark node. The default is `false`."
msgstr "マスターSparkノードを監視する場合は、このオプションを`true` に設定する。デフォルトは`false` 。"

#: ../../gdi/monitors-databases/apache-spark.md:30
msgid "`clusterType`"
msgstr "`clusterType`"

#: ../../gdi/monitors-databases/apache-spark.md:30
msgid "Set this option to the type of cluster you're monitoring. The allowed values are `Standalone`, `Mesos` or `Yarn`. The system doesn't collect cluster metrics for Yarn. Use the collectd/hadoop monitor to gain insights to your cluster's health."
msgstr "このオプションを監視するクラスタのタイプに設定します。許される値は`Standalone`,`Mesos` または`Yarn` 。システムはYarnのクラスタ・メトリクスを収集しない。collectd/hadoop monitorを使用して、クラスタの健全性を把握する。"

#: ../../gdi/monitors-databases/apache-spark.md:30
msgid "`collectApplicationMetrics`"
msgstr "`collectApplicationMetrics`"

#: ../../gdi/monitors-databases/apache-spark.md:30
msgid "The default is `false`."
msgstr "デフォルトは`false` 。"

#: ../../gdi/monitors-databases/apache-spark.md:30 ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/solr.md:23 ../../gdi/monitors-languages/expvar.md:24
msgid "`enhancedMetrics`"
msgstr "`enhancedMetrics`"

#: ../../gdi/monitors-databases/apache-spark.md:84 ../../gdi/monitors-hosts/http.md:129
msgid "These are the metrics available for this integration:"
msgstr "これらは、この統合で利用可能なメトリクスです："

#: ../../gdi/monitors-databases/cassandra.md:3 ../../gdi/opentelemetry/collector-architecture.rst:176
msgid "Cassandra"
msgstr "カサンドラ"

#: ../../gdi/monitors-databases/cassandra.md:6
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Cassandra monitor type to monitor Cassandra."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と Cassandra monitor type を使って Cassandra を監視する。"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "Use this string to specify the host to connect to."
msgstr "この文字列を使用して、接続先のホストを指定する。"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "Use this number to specify the JMX connection port (not the RMI port) for the application.  This value corresponds to the `com.sun.management.jmxremote.port` Java property that you need to set for the JVM when you run the application."
msgstr "この番号を使用して、アプリケーションのJMX接続ポート（RMIポートではない）を指定します。 この値は、アプリケーションの実行時に JVM に設定する必要がある`com.sun.management.jmxremote.port` Java プロパティに対応します。"

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`serviceName`"
msgstr "`serviceName`"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "This value appears as the service type in the Splunk Observability Cloud UI, which lets you retrieve built-in content for the service. For custom JMX integrations, you can set it to any value."
msgstr "この値は Splunk Observability Cloud UI のサービスタイプとして表示され、サービスの組み込みコンテンツを取得できます。カスタム JMX インテグレーションの場合は、任意の値を設定できます。"

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-languages/jmx.md:35 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`serviceURL`"
msgstr "`serviceURL`"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "Use this value to define the JMX connection string.  The system interprets it as a Go template, so you can specify the value using replaceable variables that map to your configuration options. Note: Avoid setting this string directly. Instead, set the `host` and `port` options. (**default:** `service:jmx:rmi:///jndi/rmi://{{.Host}}:{{.Port}}/jmxrmi`)"
msgstr "この値を使用して、JMX 接続文字列を定義します。 システムはこれを囲碁テンプレートとして解釈するので、設定オプションに対応する置換可能な変数を使って値を指定することができる。注：この文字列を直接設定することは避けてください。代わりに、`host` 、`port` オプションを設定します。(**default:**`service:jmx:rmi:///jndi/rmi://{.Host}}:{{.Port}}/jmxrmi`)"

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`instancePrefix`"
msgstr "`instancePrefix`"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "The system adds this value as a prefix to the generated plugin instance name. If you specify a second `instancePrefix` in a referenced MBean block, the prefix specified in the Connection block will appear at the beginning of the plugin instance, and the prefix specified in the MBean block will be appended to it."
msgstr "システムはこの値を、生成されたプラグインインスタンス名のプレフィックスとして追加します。参照されるMBeanブロックで2番目の`instancePrefix` を指定すると、Connectionブロックで指定された接頭辞がプラグインインスタンスの先頭に表示され、MBeanブロックで指定された接頭辞がそれに追加される。"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "Use this value to specify the user name you want to send to the server for authentication."
msgstr "この値を使用して、認証のためにサーバーに送信するユーザー名を指定します。"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "Use this value to specify the password for the user name."
msgstr "この値を使用して、ユーザー名のパスワードを指定する。"

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`customDimensions`"
msgstr "`customDimensions`"

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-databases/sql.md:23 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/docker.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/host-processes.md:7 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/kafka-consumer.md:23
#: ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25
#: ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "`map of strings`"
msgstr "`文字列のマップ`"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "This object specifies custom dimensions to add at the connection level."
msgstr "このオブジェクトは、接続レベルで追加するカスタム・ディメンジョンを指定します。"

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`mBeansToCollect`"
msgstr "`mBeansToCollect`"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "This array specifies a list of the MBeans defined in `mBeanDefinitions` that you want to collect. If you don't provide the array, the monitor collects all defined MBeans."
msgstr "この配列は、`mBeanDefinitions` で定義されている、収集したい MBeans のリストを指定します。配列を提供しない場合、モニターは定義されたすべてのMBeansを収集する。"

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`mBeansToOmit`"
msgstr "`mBeansToOmit`"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "This array specifies a list of the MBeans defined in `mBeanDefinitions` that you want to omit. Use this list when you want to omit only a few MBeans from the default list."
msgstr "この配列は、`mBeanDefinitions` で定義されているMBeansのうち、省略したいもののリストを指定します。このリストは、デフォルトのリストから数MBeansだけを省きたい場合に使用する。"

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`mBeanDefinitions`"
msgstr "`mBeanDefinitions`"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "`map of objects` (see the following table for details)"
msgstr "`オブジェクトのマップ` (詳細は以下の表を参照)"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "This object specifies how to map JMX MBean values to metrics.  Cassandra comes pre-loaded with a set of mappings. Any mappings that you add in this option are merged with the pre-loaded ones. To learn more, see [https://collectd.org/documentation/manpages/collectd-java.5.shtml#genericjmx_plugin](https://collectd.org/documentation/manpages/collectd-java.5.shtml#genericjmx_plugin)."
msgstr "このオブジェクトは、JMX MBean 値をメトリクスにマッピングする方法を指定します。 Cassandraには、マッピングのセットがあらかじめロードされています。このオプションで追加したマッピングは、あらかじめロードされているものとマージされる。詳しくは、[https://collectd.org/documentation/manpages/collectd-java.5.shtml#genericjmx_plugin](https://collectd.org/documentation/manpages/collectd-java.5.shtml#genericjmx_plugin) をご覧ください。"

#: ../../gdi/monitors-databases/cassandra.md:65
msgid "The `mBeanDefinitions` configuration option has the following fields:"
msgstr "`mBeanDefinitions` 構成オプションには以下のフィールドがあります："

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30 ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "`objectName`"
msgstr "`objectName`"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "This name sets a pattern that the monitor uses to retrieve MBeans from the MBeanServer. If the server returns more than one MBean, use the `instanceFrom` option to make the MBean identifiers unique."
msgstr "この名前は、モニターがMBeanServerからMBeansを取得するために使用するパターンを設定する。サーバーが複数のMBeanを返す場合、`instanceFrom` オプションを使用してMBean識別子を一意にします。"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "This value prefixes the generated plugin instance."
msgstr "この値は生成されたプラグインインスタンスのプレフィックスとなります。"

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`instanceFrom`"
msgstr "`instanceFrom`"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "This array specifies a list of object names used by JMX to identify MBeans, including properties that are key-value pairs. If the given object name is not unique and the server returns multiple MBeans, the values of these properties usually differ. Use the `instanceFrom` option to build the plugin instance from the appropriate property values. You can have multiple values of this option in your configuration, so you can generate the plugin instance from multiple property values."
msgstr "この配列は、JMX が MBeans を識別するために使用するオブジェクト名のリストを指定します。与えられたオブジェクト名が一意でなく、サーバーが複数のMBeansを返す場合、これらのプロパティの値は通常異なる。`instanceFrom` オプションを使用して、適切なプロパティ値からプラグイン・インスタンスを構築します。このオプションには複数の値を設定できるので、複数のプロパティ値からプラグインインスタンスを生成することができます。"

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`values`"
msgstr "`values`"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "`list of objects` (see the following table for details)"
msgstr "`オブジェクトのリスト` (詳細は以下の表を参照)"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "This array specifies a list of objects corresponding to blocks in the `values` option. Each block maps the attributes of an MBean to a value list in `collectd`. You need to specify at least one `value` object for each MBean."
msgstr "この配列は、`values` オプションのブロックに対応するオブジェクトのリストを指定する。各ブロックはMBeanの属性を`collectd` の値リストにマッピングする。各MBeanに対して少なくとも1つの`値` オブジェクトを指定する必要があります。"

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`dimensions`"
msgstr "`dimensions`"

#: ../../gdi/monitors-databases/cassandra.md:75
msgid "The `values` configuration option has the following fields:"
msgstr "`values` コンフィギュレーション・オプションには以下のフィールドがある："

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/expvar.md:24 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`type`"
msgstr "`type`"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "Use this value to set the data set used within `collectd` to handle the values of the MBean attribute"
msgstr "MBean 属性の値を処理するために`collectd` 内で使用されるデータセットを設定するには、この値を使用します。"

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`table`"
msgstr "`table`"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "Set this flag to `true` if the returned attribute is a composite type. If you set it to `true`, the server appends keys within the composite type to the type instance. (**default:** `false`)"
msgstr "返された属性が複合型の場合、このフラグを`true` に設定する。これを`true` に設定すると、サーバは複合型内のキーを型インスタンスに追加します。(**default:**`false`)"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "See the definition of `instancePrefix` in the description of `mBeanDefinitions`. This option is similar, but it sets the type instance instead."
msgstr "`mBeanDefinitions` の説明の`instancePrefix` の定義を参照。このオプションも似ているが、代わりにタイプ・インスタンスを設定する。"

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`attribute`"
msgstr "`attribute`"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "Use this value to set the name of the attribute from which to read the value. You can access the keys of composite types by using a dot to concatenate the key name to the attribute name. For example, `attrib0.key42` specifies the `key42` attribute in the `attrib0` object. If you set the `table` option to `true`, the path must point to a composite type, otherwise it must point to a numeric type."
msgstr "この値を使用して、値を読み取る属性名を設定する。ドットを使ってキー名と属性名を連結すれば、複合型のキーにアクセスできる。例えば、`attrib0.key42` は、`attrib0` オブジェクトの`key42` 属性を指定します。`table` オプションを`true` に設定した場合、パスは複合型を指さなければならず、そうでない場合は数値型を指さなければならない。"

#: ../../gdi/monitors-databases/cassandra.md:22 ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`attributes`"
msgstr "`属性`"

#: ../../gdi/monitors-databases/cassandra.md:22
msgid "Use this option to derive multiple metrics from a single MBean."
msgstr "単一の MBean から複数のメトリクスを導出するには、このオプションを使用します。"

#: ../../gdi/monitors-databases/consul.md:3
msgid "Consul datastore"
msgstr "データストア"

#: ../../gdi/monitors-databases/consul.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Consul datastore monitor type to monitor Consul datastores and collect metrics from the following endpoints:"
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と Consul データストア監視タイプを使用して、Consul データストアを監視し、以下のエンドポイントからメトリックを収集します："

#: ../../gdi/monitors-databases/consul.md:9
msgid "[/agent/self](https://www.consul.io/api/agent.html#read-configuration)"
msgstr "[/agent/self](https://www.consul.io/api/agent.html#read-configuration)"

#: ../../gdi/monitors-databases/consul.md:10
msgid "[/agent/metrics](https://www.consul.io/api/agent.html#view-metrics)"
msgstr "[/agent/metrics](https://www.consul.io/api/agent.html#view-metrics)"

#: ../../gdi/monitors-databases/consul.md:11
msgid "[/catalog/nodes](https://www.consul.io/api/catalog.html#list-nodes)"
msgstr "[/catalog/nodes](https://www.consul.io/api/catalog.html#list-nodes)"

#: ../../gdi/monitors-databases/consul.md:12
msgid "[/catalog/node/:node](https://www.consul.io/api/catalog.html#list-services-for-node)"
msgstr "[/catalog/node/:node](https://www.consul.io/api/catalog.html#list-services-for-node)"

#: ../../gdi/monitors-databases/consul.md:13
msgid "[/status/leader](https://www.consul.io/api/status.html#get-raft-leader)"
msgstr "[/status/leader](https://www.consul.io/api/status.html#get-raft-leader)"

#: ../../gdi/monitors-databases/consul.md:14
msgid "[/status/peers](https://www.consul.io/api/status.html#list-raft-peers)"
msgstr "[/status/peers](https://www.consul.io/api/status.html#list-raft-peers)"

#: ../../gdi/monitors-databases/consul.md:15
msgid "[/coordinate/datacenters](https://www.consul.io/api/coordinate.html#read-wan-coordinates)"
msgstr "[/coordinate/datacenters](https://www.consul.io/api/coordinate.html#read-wan-coordinates)"

#: ../../gdi/monitors-databases/consul.md:16
msgid "[/coordinate/nodes](https://www.consul.io/api/coordinate#read-lan-coordinates-for-all-nodes)"
msgstr "[/coordinate/nodes](https://www.consul.io/api/coordinate#read-lan-coordinates-for-all-nodes)"

#: ../../gdi/monitors-databases/consul.md:17
msgid "[/health/state/any](https://www.consul.io/api/health.html#list-checks-in-state)"
msgstr "[/health/state/any](https://www.consul.io/api/health.html#list-checks-in-state)"

#: ../../gdi/monitors-databases/consul.md:21
msgid "This integration works with Consul 0.7.0 and higher."
msgstr "この統合はConsul 0.7.0以上で動作します。"

#: ../../gdi/monitors-databases/consul.md:58 ../../gdi/monitors-databases/hadoop.md:53 ../../gdi/monitors-databases/hadoopjmx.md:119 ../../gdi/monitors-databases/logparser.md:71 ../../gdi/monitors-gitlab/gitlab.md:132 ../../gdi/monitors-hosts/apache-httpserver.md:69 ../../gdi/monitors-hosts/chrony.md:44 ../../gdi/monitors-hosts/coredns.md:58 ../../gdi/monitors-hosts/couchbase.md:25 ../../gdi/monitors-hosts/haproxy.md:109 ../../gdi/monitors-hosts/host-processload.md:11 ../../gdi/monitors-hosts/http.md:100 ../../gdi/monitors-messaging/apache-activemq.md:52 ../../gdi/monitors-monitoring/prometheus-exporter.md:55 ../../gdi/monitors-orchestration/openshift-cluster.md:52
msgid "Configuration options"
msgstr "設定オプション"

#: ../../gdi/monitors-databases/consul.md:60
msgid "If you are running a version of Consul earlier than 0.9.1, configure each Consul agent you want to monitor to send metrics to the OpenTelemetry Collector. To do so, add the following configuration to each Consul agent configuration file:"
msgstr "0.9.1より前のバージョンのConsulを使用している場合は、OpenTelemetry Collectorにメトリクスを送信するように、監視したい各Consulエージェントを設定してください。そのためには、各Consulエージェント設定ファイルに以下の設定を追加します："

#: ../../gdi/monitors-databases/consul.md:35 ../../gdi/monitors-databases/hadoop.md:30 ../../gdi/monitors-hosts/haproxy.md:86 ../../gdi/monitors-hosts/health-checker.md:21 ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "Path to a python binary that should be used to execute the Python code. If not set, a built-in runtime will be used.  Can include arguments to the binary as well."
msgstr "Pythonコードの実行に使用するPythonバイナリへのパス。設定されていない場合は、組み込みのランタイムが使用される。 バイナリへの引数も含めることができる。"

#: ../../gdi/monitors-databases/consul.md:35
msgid "`aclToken`"
msgstr "`aclToken`"

#: ../../gdi/monitors-databases/consul.md:35
msgid "Consul ACL token"
msgstr "コンシュルACLトークン"

#: ../../gdi/monitors-databases/consul.md:35
msgid "Set to `true` to connect to Consul using HTTPS. You can figure the certificate for the server with the `caCertificate` config option. (**default:** `false`)"
msgstr "`true` に設定すると、HTTPSを使ってConsulに接続する。サーバの証明書は、`caCertificate` コンフィグ・オプションで設定できます。(**default:**`false`)"

#: ../../gdi/monitors-databases/consul.md:35
msgid "`telemetryServer`"
msgstr "`telemetryServer`"

#: ../../gdi/monitors-databases/consul.md:35
msgid "`telemetryHost`"
msgstr "`telemetryHost`"

#: ../../gdi/monitors-databases/consul.md:35
msgid "IP address or DNS to which Consul is configured to send telemetry UDP packets. Relevant only if `telemetryServer` is set to `true`. (**default:** `0.0.0.0`)"
msgstr "ConsulがテレメトリUDPパケットを送信するように設定されているIPアドレスまたはDNS。`telemetryServer` が`true` に設定されている場合のみ関連する。 (**default:**`0.0.0.0`)"

#: ../../gdi/monitors-databases/consul.md:35
msgid "`telemetryPort`"
msgstr "`telemetryPort`"

#: ../../gdi/monitors-databases/consul.md:35
msgid "Port to which Consul is configured to send telemetry UDP packets. Relevant only if `telemetryServer` is set to `true`. (**default:** `8125`)"
msgstr "ConsulがテレメトリUDPパケットを送信するように設定されているポート。`telemetryServer` が`true` に設定されている場合のみ関連する。 (**default:**`8125`)"

#: ../../gdi/monitors-databases/consul.md:35
msgid "Set to `true` to activate the collection all metrics from Consul runtime telemetry send using UDP or from the `/agent/metrics` endpoint. (**default:** `false`)"
msgstr "`true` に設定すると、UDP を使用して送信された Consul ランタイムテレメトリ、または`/agent/metrics` エンドポイントからのすべてのメトリクスの収集が有効になります。(**default:**`false`)"

#: ../../gdi/monitors-databases/consul.md:35
msgid "`caCertificate`"
msgstr "`caCertificate`"

#: ../../gdi/monitors-databases/consul.md:35
msgid "If Consul server has HTTPS activated for the API, specifies the path to the CA Certificate."
msgstr "ConsulサーバがAPIに対してHTTPSを有効にしている場合、CA証明書へのパスを指定します。"

#: ../../gdi/monitors-databases/consul.md:35
msgid "`clientCertificate`"
msgstr "`clientCertificate`"

#: ../../gdi/monitors-databases/consul.md:35
msgid "If client-side authentication is activated, specifies the path to the certificate file."
msgstr "クライアント側認証が有効になっている場合は、証明書ファイルへのパスを指定します。"

#: ../../gdi/monitors-databases/consul.md:35
msgid "`clientKey`"
msgstr "`clientKey`"

#: ../../gdi/monitors-databases/consul.md:35
msgid "If client-side authentication is activated, specifies the path to the key file."
msgstr "クライアント側認証が有効になっている場合は、鍵ファイルへのパスを指定します。"

#: ../../gdi/monitors-databases/consul.md:35
msgid "`signalFxAccessToken`"
msgstr "`signalFxAccessToken`"

#: ../../gdi/monitors-databases/consul.md:89 ../../gdi/monitors-hosts/apache-httpserver.md:98
msgid "These metrics are available for this integration."
msgstr "これらのメトリクスは、この統合で利用可能です。"

#: ../../gdi/monitors-databases/etcd.md:4
msgid "etcd server"
msgstr "etcd サーバー"

#: ../../gdi/monitors-databases/etcd.md:8
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the etcd monitor type to report etcd server metrics under the `/metrics` path on its client port. Optionally, you can ediy location using `--listen-metrics-urls`. This integration only collects metrics from the Prometheus endpoint."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を etcd モニタータイプで使用し、クライアントポートの`/metrics` パスの下で etcd サーバーメトリクスをレポートします。オプションとして、`--listen-metrics-urls` を使って場所を編集することもできる。この統合は、Prometheus エンドポイントからのメトリクスのみを収集します。"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-messaging/rabbitmq.md:25 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23
#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "`httpTimeout`"
msgstr "`httpTimeout`"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-hosts/microsoft-windows-iis.md:25 ../../gdi/monitors-languages/asp-dot-net.md:25 ../../gdi/monitors-languages/microsoft-dotnet.md:41 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25
#: ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-monitoring/signalfx-forwarder.md:23 ../../gdi/monitors-monitoring/win_perf_counters.md:27 ../../gdi/monitors-network/dns.md:21 ../../gdi/monitors-network/ntp.md:23 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "`int64`"
msgstr "`int64`"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8
msgid "HTTP timeout duration for both read and writes. This should be a duration string that is accepted by https://golang.org/pkg/time/#ParseDuration (**default:** `10s`)"
msgstr "読み込みと書き込みの両方のHTTPタイムアウト時間。これは、https://golang.org/pkg/time/#ParseDuration（**デフォルト：**`10s` ）が受け付ける持続時間文字列でなければならない。"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24
msgid "Basic Auth username to use on each request, if any."
msgstr "各リクエストで使用される Basic Auth ユーザー名 (もしあれば)。"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24
msgid "Basic Auth password to use on each request, if any."
msgstr "各リクエストで使用するBasic Authパスワード(もしあれば)。"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8
msgid "If `true`, the agent will connect to the server using HTTPS instead of plain HTTP. (**default:** `false`)"
msgstr "`true` の場合、エージェントはプレーン HTTP ではなく HTTPS を使用してサーバに接続します。(**default:**`false`)"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23
#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "`httpHeaders`"
msgstr "`httpHeaders`"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "A map of HTTP header names to values. Comma separated multiple values for the same message-header is supported."
msgstr "HTTPヘッダー名と値のマップ。カンマ区切りの同じメッセージヘッダーの複数の値がサポートされている。"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-monitoring/prometheus-exporter.md:25
msgid "If useHTTPS is `true` and this option is also `true`, the exporter TLS cert will not be verified. (**default:** `false`)"
msgstr "useHTTPSが`true` であり、このオプションも`true` である場合、エクスポータTLS証明書は検証されない。(**default:**`false`)"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23
#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-events.md:63 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "`caCertPath`"
msgstr "`caCertPath`"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8
msgid "Path to the CA cert that has signed the TLS cert, unnecessary if `skipVerify` is set to `false`."
msgstr "TLS 証明書に署名した CA 証明書へのパス。`skipVerify` が`false` に設定されている場合は不要。"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23
#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-events.md:63 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "`clientCertPath`"
msgstr "`clientCertPath`"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8
msgid "Path to the client TLS cert to use for TLS required connections"
msgstr "TLSが必要な接続に使用するクライアントTLS証明書へのパス。"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23
#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-events.md:63 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "`clientKeyPath`"
msgstr "`clientKeyPath`"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8
msgid "Path to the client TLS key to use for TLS required connections"
msgstr "TLS接続に必要なクライアントTLSキーへのパス。"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "Host of the exporter"
msgstr "輸出業者のホスト"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "Port of the exporter"
msgstr "輸出者の港"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24
#: ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "`useServiceAccount`"
msgstr "`useServiceAccount`"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8
msgid "Use pod service account to authenticate. (**default:** `false`)"
msgstr "認証にポッドサービスアカウントを使用します。(**default:**`false`)"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24
#: ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "`metricPath`"
msgstr "`metricPath`"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8
msgid "Path to the metrics endpoint on the exporter server, usually `/metrics` (the default). (**default:** `/metrics`)"
msgstr "通常は`/metrics` （デフォルト）。(**デフォルト:**`/metrics`)"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-gitlab/gitlab.md:94 ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24
#: ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "`sendAllMetrics`"
msgstr "`sendAllMetrics`"

#: ../../gdi/monitors-databases/etcd.md:22 ../../gdi/monitors-monitoring/prometheus-exporter.md:25 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25
msgid "Send all the metrics that come out of the Prometheus exporter without any filtering.  This option has no effect when using the prometheus exporter monitor directly since there is no built-in filtering, only when embedding it in other monitors. (**default:** `false`)"
msgstr "Prometheus エクスポーターから出力されるすべてのメトリクスをフィルタリングなしで送信します。 このオプションは、プロメテウス・エクスポーター・モニターを直接使用する場合には、ビルトイン・フィルタリングがないため効果がありません。(**default:**`false`)"

#: ../../gdi/monitors-databases/exec-input.md:3
msgid "Exec Input"
msgstr "実行入力"

#: ../../gdi/monitors-databases/exec-input.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Exec Input monitor type, an embedded form of the Telegraf Exec plugin, to receive metrics or logs from exec files."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を Telegraf Exec プラグインの組み込み型である Exec Input モニタータイプとともに使用して、exec ファイルからメトリクスやログを受信します。"

#: ../../gdi/monitors-databases/exec-input.md:35
msgid "Next, include the monitor in a `logs` pipeline that utilizes an exporter that makes the event submission requests. Use a Resource Detection processor to ensure that host identity and other useful information is made available as event dimensions. For example:"
msgstr "次に、イベント提出要求を行うエクスポータを利用する`ログ` パイプラインにモニターを含める。リソース検出プロセッサを使用して、ホストのIDやその他の有用な情報がイベントディメンジョンとして利用できるようにする。例えば、こうだ："

#: ../../gdi/monitors-databases/exec-input.md:51 ../../gdi/monitors-orchestration/kubernetes-cluster.md:15
msgid "The following tables show the configuration options for this monitor type:"
msgstr "以下の表に、このモニタータイプの設定オプションを示す："

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`commands`"
msgstr "`commands`"

#: ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-monitoring/nagios.md:64
msgid "`command`"
msgstr "`command`"

#: ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-databases/mongodb-atlas.md:7 ../../gdi/monitors-hosts/chrony.md:22 ../../gdi/monitors-hosts/nginx.md:23 ../../gdi/monitors-monitoring/nagios.md:64 ../../gdi/monitors-network/dns.md:21 ../../gdi/monitors-network/ntp.md:23
msgid "`timeout`"
msgstr "`timeout`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "The default value is `0`."
msgstr "デフォルト値は`0` 。"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`telegrafParser`"
msgstr "`telegrafParser`"

#: ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-monitoring/jaeger-grpc.md:25 ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-events.md:63
msgid "`object (see below)`"
msgstr "`オブジェクト`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`telegrafParser` is a nested object that defines configurations for a Telegraf parser. Refer to the Telegraf documentation for more information on Telegraf parsers."
msgstr "`telegrafParser` は、Telegrafパーサーの設定を定義するネストされたオブジェクトです。Telegraf パーサーの詳細については、Telegraf ドキュメントを参照してください。"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`signalFxCumulativeMetrics`"
msgstr "`signalFxCumulativeMetrics`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "A list of metric names typed as \"cumulative counters\" in Splunk Observability Cloud. The Telegraf Exec plugin only emits `untyped` metrics, which are sent as gauges by default."
msgstr "Splunk Observability Cloud で「累積カウンタ」として入力されたメトリック名のリスト。Telegraf Exec プラグインは、`型付けされていない` メトリックのみを出力します。これはデフォルトでゲージとして送信されます。"

#: ../../gdi/monitors-databases/exec-input.md:61
msgid "The **nested** `telegrafParser` configuration object has the following fields:"
msgstr "nested**`telegrafParser` コンフィギュレーションオブジェクトは以下のフィールドを持つ："

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`dataFormat`"
msgstr "`dataFormat`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "dataFormat specifies a data format to parse: `json`, `value`, `influx`, `graphite`, `value`, `nagios`, `collectd`, `dropwizard`, `wavefront`, `grok`, `csv`, or `logfmt`. The default value is `influx`."
msgstr "`json`,`value`,`influx`,`graphite`,`value`,`nagios`,`collectd`,`dropwizard`,`wavefront`,`grok`,`csv`, または`logfmt` 。デフォルト値は`influx` 。"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`defaultTags`"
msgstr "`defaultTags`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "defaultTags are tags added to all metrics. (`json`, `value`, `graphite`, `collectd`, `dropwizard`, `wavefront`, `grok`, `csv` and `logfmt` only)"
msgstr "defaultTags は、すべてのメトリクスに追加されるタグです。(`json`,`value`,`graphite`,`collectd`,`dropwizard`,`wavefront`,`grok`,`csv` and`logfmt` only)"

#: ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-databases/sql.md:23 ../../gdi/monitors-network/statsd.md:35
msgid "`metricName`"
msgstr "`metricName`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "metricName applies to (`json` and `value`). This is the name of the measurement."
msgstr "metricName は (`json` と`value`) に適用されます。これは測定の名前である。"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`dataType`"
msgstr "`dataType`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "dataType specifies the value type to parse the value to: `integer`, `float`, `long`, `string`, or `boolean`. (`value` only)"
msgstr "`integer`,`float`,`long`,`string`, または`boolean`. （`value` のみ）。"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`JSONTagKeys`"
msgstr "`JSONTagKeys`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "A list of tag names to fetch from JSON data. (`json` only)"
msgstr "JSONデータから取得するタグ名のリスト。(`json` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`JSONStringFields`"
msgstr "`JSONStringFields`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "A list of fields in JSON to extract and use as string fields. (json only)"
msgstr "抽出し、文字列フィールドとして使用するJSONのフィールドのリスト。(jsonのみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`JSONNameKey`"
msgstr "`JSONNameKey`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "A path used to extract the metric name in JSON data.  (`json` only)"
msgstr "JSONデータのメトリック名を抽出するためのパス。  (`json` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`JSONQuery`"
msgstr "`JSONQuery`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "A gjson path for json parser. (`json` only)"
msgstr "jsonパーサ用のgjsonパス。(`json` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`JSONTimeKey`"
msgstr "`JSONTimeKey`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "The name of the timestamp key. (`json` only)"
msgstr "タイムスタンプキーの名前。(`json` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`JSONTimeFormat`"
msgstr "`JSONTimeFormat`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "Specifies the timestamp format. (`json` only)"
msgstr "タイムスタンプのフォーマットを指定します。(`json` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`separator`"
msgstr "`separator`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "Separator for Graphite data. (`graphite` only)."
msgstr "グラファイトデータ用セパレータ。(`グラファイト` のみ)。"

#: ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-hosts/collectd-plugin.md:23
msgid "`templates`"
msgstr "`templates`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "A list of templates for Graphite data. (`graphite` only)."
msgstr "Graphiteデータのテンプレート一覧。(`グラファイト` のみ）。"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`collectdAuthFile`"
msgstr "`collectdAuthFile`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "The path to the collectd authentication file (`collectd` only)"
msgstr "collectd 認証ファイルへのパス (`collectd` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`collectdSecurityLevel`"
msgstr "`collectdSecurityLevel`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "Specifies the security level: `none` (default), `sign`, or `encrypt`. (`collectd only`)"
msgstr "セキュリティレベルを指定する：`none` （デフォルト）、`sign` 、または`encrypt` 。(`コレクトのみ`)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`collectdTypesDB`"
msgstr "`collectdTypesDB`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "A list of paths to collectd TypesDB files. (`collectd` only)"
msgstr "collectd TypesDB ファイルのパスのリスト。(`collectd` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`collectdSplit`"
msgstr "`collectdSplit`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "Indicates whether to separate or join multivalue metrics. (`collectd` only)"
msgstr "多値メトリクスを分離するか結合するかを示します。(`collectd` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`dropwizardMetricRegistryPath`"
msgstr "`dropwizardMetricRegistryPath`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "An optional gjson path used to locate a metric registry inside of JSON data. The default behavior is to consider the entire JSON document. (`dropwizard` only)"
msgstr "JSONデータ内のメトリック・レジストリを見つけるために使用されるオプションのgjsonパス。デフォルトの動作は、JSONドキュメント全体を考慮します。(`ドロップウィザード` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`dropwizardTimePath`"
msgstr "`dropwizardTimePath`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "An optional gjson path used to identify the drop wizard metric timestamp. (`dropwizard` only)"
msgstr "ドロップウィザードのメトリックタイムスタンプを識別するために使用されるオプションのgjsonパス。(`ドロップウィザード` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`dropwizardTimeFormat`"
msgstr "`dropwizardTimeFormat`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "The format used for parsing the drop wizard metric timestamp. The default format is `time.RFC3339`. (`dropwizard` only)"
msgstr "ドロップウィザードのメトリックタイムスタンプの解析に使用されるフォーマット。デフォルトの書式は`time.RFC3339` です。(`ドロップウィザード` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`dropwizardTagsPath`"
msgstr "`dropwizardTagsPath`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "An optional gjson path used to locate drop wizard tags. (`dropwizard` only)"
msgstr "ドロップウィザードタグを見つけるためのオプションのgjsonパス。(`ドロップウィザード` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`dropwizardTagPathsMap`"
msgstr "`dropwizardTagPathsMap`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "A map of gjson tag names and gjson paths used to extract tag values from the JSON document. This is only used if `dropwizardTagsPath` is not specified. (`dropwizard` only)"
msgstr "JSONドキュメントからタグ値を抽出するために使用されるgjsonタグ名とgjsonパスのマップ。`dropwizardTagsPath` が指定されていない場合のみ使用される。(`dropwizard` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`grokPatterns`"
msgstr "`grokPatterns`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "A list of patterns to match. (`grok` only)"
msgstr "マッチするパターンのリスト。(`grok` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`grokNamedPatterns`"
msgstr "`grokNamedPatterns`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "A list of named grok patterns to match.  (`grok` only)"
msgstr "マッチする名前付き grok パターンのリスト。  (`grok` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`grokCustomPatterns`"
msgstr "`grokCustomPatterns`"

#: ../../gdi/monitors-databases/exec-input.md:21 ../../gdi/monitors-databases/logparser.md:23
msgid "Custom grok patterns. (`grok` only)"
msgstr "カスタムグロックパターン。(`Grok` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`grokCustomPatternFiles`"
msgstr "`grokCustomPatternFiles`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "List of paths to custom grok pattern files. (`grok` only)"
msgstr "カスタム grok パターンファイルへのパスのリスト。(`grok` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`grokTimezone`"
msgstr "`grokTimezone`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "Specifies the timezone. The default is UTC time.  Other options are `Local` for the local time on the machine, `UTC`, and `Canada/Eastern` (unix style timezones).  (`grok` only)"
msgstr "タイムゾーンを指定する。デフォルトはUTC時間。 その他のオプションは、`Local` for the local time on the machine,`UTC`, and`Canada/Eastern` (unix style timezones)。  (`Grok` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`CSVDelimiter`"
msgstr "`CSVDelimiter`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "The delimiter used between fields in the csv. (`csv` only)"
msgstr "csvのフィールド間で使用される区切り文字。(`csv` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`CSVComment`"
msgstr "`CSVComment`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "The character used to mark rows as comments. (`csv` only)"
msgstr "行をコメントとしてマークするために使用される文字。(`csv` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`CSVTrimSpace`"
msgstr "`CSVTrimSpace`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "Indicates whether to trim leading white from fields. (`csv` only) The default value is `false`."
msgstr "フ ィ ール ド か ら 先頭の白を除去するかど う かを示す。(`csv` のみ) デフォルト値は`false` 。"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`CSVColumnNames`"
msgstr "`CSVColumnNames`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "List of custom column names. All columns must have names. Unnamed columns are ignored. This configuration must be set when `CSVHeaderRowCount` is 0. (`csv` only)"
msgstr "カスタムカラム名のリスト。すべてのカラムには名前が必要です。名前のない列は無視される。この設定は、`CSVHeaderRowCount` が 0 のときに設定する必要があります (`csv` のみ)。"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`CSVColumnTypes`"
msgstr "`CSVColumnTypes`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "List of types to assign to columns. Acceptable values are `int`, `float`, `bool`, or `string` (`csv` only)."
msgstr "カラムに割り当てるタイプのリスト。使用可能な値は`int`,`float`,`bool`, または`string` (`csv` のみ)。"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`CSVTagColumns`"
msgstr "`CSVTagColumns`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "List of columns added as tags. Unspecified columns are added as fields. (`csv` only)"
msgstr "タグとして追加された列のリスト。未指定のカラムがフィールドとして追加される。(`csv` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`CSVMeasurementColumn`"
msgstr "`CSVMeasurementColumn`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "The name of the column to extract the metric name from (`csv` only)"
msgstr "メトリック名を抽出するカラム名 (`csv` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`CSVTimestampColumn`"
msgstr "`CSVTimestampColumn`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "The name of the column to extract the metric timestamp from. `CSVTimestampFormat` must be set when using this option.  (`csv` only)"
msgstr "メトリックのタイムスタンプを抽出するカラムの名前。`このオプションを使用するときは、CSVTimestampFormat` を設定しなければならない。  (`csv` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`CSVTimestampFormat`"
msgstr "`CSVTimestampFormat`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "The format to use for extracting timestamps. (`csv` only)"
msgstr "タイムスタンプの抽出に使用するフォーマット。(`csv` のみ)"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`CSVHeaderRowCount`"
msgstr "`CSVHeaderRowCount`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "The number of rows that are headers. By default, no rows are treated as headers. (`csv` only) The default value is `0`."
msgstr "ヘッダーの行数。デフォルトでは、行はヘッダとして扱われません。(`csv` のみ) デフォルト値は`0` 。"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`CSVSkipRows`"
msgstr "`CSVSkipRows`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "The number of rows to ignore before looking for headers. (`csv` only) The default value is `0`."
msgstr "ヘッダを探す前に無視する行数。(`csv` のみ) デフォルト値は`0` 。"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "`CSVSkipColumns`"
msgstr "`CSVSkipColumns`"

#: ../../gdi/monitors-databases/exec-input.md:21
msgid "The number of columns to ignore before parsing data on a given row. (`csv` only) The default value is `0`."
msgstr "与えられた行のデータを解析する前に無視する列の数。(`csv` のみ) デフォルト値は`0` 。"

#: ../../gdi/monitors-databases/exec-input.md:106 ../../gdi/monitors-network/statsd.md:80
msgid "The agent does not do any built-in filtering of metrics coming out of this monitor."
msgstr "エージェントは、このモニタから出力されるメトリクスの組み込みフィルタリングを行いません。"

#: ../../gdi/monitors-databases/exec-input.md:108
msgid "By default, all metrics are emitted as gauges. If you have cumulative counter metrics that you want properly typed in Splunk Observability Cloud, use one of the following options:"
msgstr "デフォルトでは、すべてのメトリクスはゲージとして出力されます。Splunk Observability Cloud で適切に入力したい累積カウンターメトリクスがある場合は、次のいずれかのオプションを使用します："

#: ../../gdi/monitors-databases/exec-input.md:110
msgid "Set the configuration option `signalFxCumulativeCounters` to the list of metric names to be considered as counters. Note that these names are the full names that are sent to Splunk Observability Cloud (for example, `<metric>.<field>`)."
msgstr "設定オプション`signalFxCumulativeCounters` を、カウンタとみなすメトリック名のリストに設定する。これらの名前は Splunk Observability Cloud に送信されるフルネームであることに注意してください (たとえば、`<metric>.<field>`)。"

#: ../../gdi/monitors-databases/exec-input.md:111
msgid "Set a tag named `signalfx_type` on the metric emitted by the exec script to `cumulative`. All other values are ignored. Note that you **must allow this tag value through in your parser configuration** if the parser ignores certain fields. For example, the JSON parser requires adding `signalfx_type` to the `JSONTagKeys` configuration option."
msgstr "`signalfx_type` というタグを、`累積` に設定する。それ以外の値は無視される。パーサーが特定のフィールドを無視する場合は、**パーサーの設定でこのタグ値を許可**しなければならないことに注意してください。例えば、JSONパーサーは、`JSONTagKeys` コンフィギュレーション・オプションに、`signalfx_type` を追加する必要がある。"

#: ../../gdi/monitors-databases/hadoop.md:2 ../../gdi/opentelemetry/collector-architecture.rst:191
msgid "Hadoop"
msgstr "ハドープ"

#: ../../gdi/monitors-databases/hadoop.md:6
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Hadoop monitor type to collect metrics from the following components of a Hadoop 2.0 or higher cluster:"
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と Hadoop monitor type を使用して、Hadoop 2.0 以上のクラスタの以下のコンポーネントからメトリクスを収集します："

#: ../../gdi/monitors-databases/hadoop.md:8
msgid "Cluster Metrics"
msgstr "クラスター指標"

#: ../../gdi/monitors-databases/hadoop.md:9
msgid "Cluster Scheduler"
msgstr "クラスター・スケジューラー"

#: ../../gdi/monitors-databases/hadoop.md:10
msgid "Cluster Applications"
msgstr "クラスターアプリケーション"

#: ../../gdi/monitors-databases/hadoop.md:11
msgid "Cluster Nodes"
msgstr "クラスターノード"

#: ../../gdi/monitors-databases/hadoop.md:12
msgid "MapReduce Jobs"
msgstr "MapReduceジョブ"

#: ../../gdi/monitors-databases/hadoop.md:14
msgid "This integration uses the REST API. If a remote JMX port is exposed in the Hadoop cluster, then you can also configure the `hadoopjmx` monitor to collect additional metrics about the Hadoop cluster."
msgstr "この統合はREST APIを使用します。Hadoop クラスターでリモート JMX ポートが公開されている場合は、`hadoopjmx` モニターを構成して、Hadoop クラスターに関する追加のメトリクスを収集することもできます。"

#: ../../gdi/monitors-databases/hadoop.md:30
msgid "Resource Manager Hostname"
msgstr "リソースマネージャーホスト名"

#: ../../gdi/monitors-databases/hadoop.md:30
msgid "Resource Manager Port"
msgstr "リソース・マネージャー・ポート"

#: ../../gdi/monitors-databases/hadoop.md:30 ../../gdi/monitors-databases/redis.md:34
msgid "`verbose`"
msgstr "`verbose`"

#: ../../gdi/monitors-databases/hadoop.md:30
msgid "Log verbose information about the plugin (**default:** `false`)"
msgstr "プラグインに関する冗長情報をログに記録する (**default:**`false`)"

#: ../../gdi/monitors-databases/hadoopjmx.md:3 ../../gdi/opentelemetry/collector-architecture.rst:177
msgid "Hadoop JMX"
msgstr "Hadoop JMX"

#: ../../gdi/monitors-databases/hadoopjmx.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Hadoop JMX monitor type to collect metrics from Hadoop 2.0 or higher clusters."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と Hadoop JMX モニタータイプを使用して、Hadoop 2.0 以上のクラスタからメトリクスを収集します。"

#: ../../gdi/monitors-databases/hadoopjmx.md:9
msgid "This integration produces metrics from a set of built-in MBeans available for the respective `nodeTypes`:"
msgstr "この統合は、それぞれの`nodeTypes` で利用可能な組み込み MBeans のセットからメトリクスを生成します："

#: ../../gdi/monitors-databases/hadoopjmx.md:11
msgid "Name Nodes (`nameNode`)"
msgstr "ネーム・ノード (`nameNode`)"

#: ../../gdi/monitors-databases/hadoopjmx.md:12
msgid "Resource Manager (`resourceManager`)"
msgstr "リソース・マネージャー (`resourceManager`)"

#: ../../gdi/monitors-databases/hadoopjmx.md:13
msgid "Node Manager (`nodeManager`)"
msgstr "ノード・マネージャー (`nodeManager`)"

#: ../../gdi/monitors-databases/hadoopjmx.md:14
msgid "Data Nodes (`dataNode`)"
msgstr "データ・ノード (`dataNode`)"

#: ../../gdi/monitors-databases/hadoopjmx.md:16
msgid "This integration uses the collectd GenericJMX plugin. You can also configure the `hadoop` monitor to collect additional metrics about the Hadoop cluster using the REST API."
msgstr "この統合は collectd GenericJMX プラグインを使用します。`hadoop` monitor を設定して、REST API を使用して Hadoop クラスタに関する追加のメトリクスを収集することもできます。"

#: ../../gdi/monitors-databases/hadoopjmx.md:27
msgid "To activate JMX in Hadoop, add the following Java Virtual Machine (JVM) options to hadoop-env.sh and yarn-env.sh:"
msgstr "HadoopでJMXを有効にするには、hadoop-env.shとyarn-env.shに以下のJava仮想マシン（JVM）オプションを追加する："

#: ../../gdi/monitors-databases/hadoopjmx.md:29
msgid "**hadoop-env.sh:**"
msgstr "**hadoop-env.sh:**"

#: ../../gdi/monitors-databases/hadoopjmx.md:35
msgid "**yarn-env.sh:**"
msgstr "**yarn-env.sh:**"

#: ../../gdi/monitors-databases/hadoopjmx.md:71
msgid "Sample configuration for nodeTypes"
msgstr "nodeTypesのサンプル設定"

#: ../../gdi/monitors-databases/hadoopjmx.md:73
msgid "The following sample configurations show how to configure the monitor for different nodeTypes."
msgstr "以下のサンプル構成は、異なる nodeTypes に対してモニターを構成する方法を示しています。"

#: ../../gdi/monitors-databases/hadoopjmx.md:75
msgid "**Name Node:**"
msgstr "**名前ノード：***"

#: ../../gdi/monitors-databases/hadoopjmx.md:86
msgid "**Resource Manager:**"
msgstr "**リソース・マネージャー"

#: ../../gdi/monitors-databases/hadoopjmx.md:97
msgid "**Node Manager:**"
msgstr "**ノード・マネージャー"

#: ../../gdi/monitors-databases/hadoopjmx.md:108
msgid "**Data Node:**"
msgstr "**データ・ノード"

#: ../../gdi/monitors-databases/hadoopjmx.md:121
msgid "The following table shows the configuration options for the collectd/hadoopjmx receiver:"
msgstr "次の表に、collectd/hadoopjmx レシーバーの設定オプションを示します："

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "Host to connect to. JMX must be configured for remote access and be accessible from the agent."
msgstr "接続先のホスト。JMXはリモートアクセス用に設定され、エージェントからアクセスできなければならない。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "JMX connection port on the application. Not the RMI port. This correponds to the `com.sun.management.jmxremote.port` Java property set on the JVM when running the application."
msgstr "アプリケーションのJMX接続ポート。RMIポートではない。これは、アプリケーションの実行時に JVM に設定される`com.sun.management.jmxremote.port` Java プロパティに対応します。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "How the service type is identified in Splunk Observability Cloud so that you can get built-in content for it.  For custom JMX integrations, set it to an arbitrary value."
msgstr "Splunk Observability Cloud でサービスタイプがどのように識別され、そのサービス用の組み込みコンテンツを取得できるようになるか。 カスタムJMX統合の場合は、任意の値を設定する。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "The JMX connection string. Rendered as a Go template. Has access to the other values in this configuration. Under normal circumstances, don't set this string directly and use the host and port settings instead. The default value is `service:jmx:rmi:///jndi/rmi://{{.Host}}:{{.Port}}/jmxrmi`."
msgstr "JMX 接続文字列。囲碁テンプレートとしてレンダリング。このコンフィギュレーションの他の値にアクセスできる。通常の状況では、この文字列を直接設定せず、代わりにホストとポートの設定を使用する。デフォルト値は`service:jmx:rmi:///jndi/rmi://{.Host}}:{{.Port}}/jmxrmi` です。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "Prefixes the generated plugin instance with a prefix. If a second `instancePrefix` is specified in a referenced MBean block, the prefix specified in the Connection block appears at the beginning of the plugin instance, and the prefix specified in the MBean block is appended to it."
msgstr "生成されたプラグインインスタンスにプレフィックスをつけます。参照されるMBeanブロックで2番目の`instancePrefix` が指定された場合、Connectionブロックで指定された接頭辞がプラグインインスタンスの先頭に現れ、MBeanブロックで指定された接頭辞がそれに追加される。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "Username to authenticate to the server."
msgstr "サーバーを認証するためのユーザー名。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "User password to authenticate to the server."
msgstr "サーバーを認証するためのユーザーパスワード。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "Takes in key-values pairs of custom dimensions at the connection level."
msgstr "接続レベルのカスタム・ディメンジョンのキーと値のペアを取り込みます。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "A list of the MBeans to be collected, as defined in `mBeanDefinitions`. If not provided, all defined MBeans are collected."
msgstr "`mBeanDefinitions` で定義されている、収集される MBeans のリスト。提供されない場合、定義されたすべてのMBeansが収集される。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "A list of the MBeans to omit. This can be useful when only a few MBeans need to omitted from the default list."
msgstr "省略するMBeansのリスト。これは、デフォルト・リストから数MBeansだけを省く必要がある場合に便利である。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`map of objects (see below)`"
msgstr "`オブジェクトマップ（下記参照）`"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "Specifies how to map JMX MBean values to metrics. Specific service monitors such as Cassandra, Kafka, or Activemq, are configured with a set of mappings: additional mappings are merged with those. See the official collectd GenericJMX documentation for more details."
msgstr "JMX MBean の値をメトリックにマッピングする方法を指定します。Cassandra、Kafka、Activemqなどの特定のサービス・モニターは、マッピングのセットで構成される。詳細については、collectd GenericJMXの公式ドキュメントを参照してください。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "`nodeType`"
msgstr "`nodeType`"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "Hadoop nodeType."
msgstr "Hadoop nodeType。"

#: ../../gdi/monitors-databases/hadoopjmx.md:139 ../../gdi/monitors-hosts/kafka-consumer.md:66 ../../gdi/monitors-hosts/kafka-producer.md:66
msgid "The nested `mBeanDefinitions` configuration object has the following fields:"
msgstr "ネストされた`mBeanDefinitions` コンフィギュレーション・オブジェクトには以下のフィールドがあります："

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "Sets the pattern used to retrieve MBeans from the MBeanServer. If more than one MBean is returned, use the `instanceFrom` option to make the identifiers unique."
msgstr "MBeanServerからMBeansを取得するために使用されるパターンを設定します。複数のMBeanが返される場合、`instanceFrom` オプションを使用して識別子を一意にします。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "Prefixes the generated plugin instance with a prefix."
msgstr "生成されたプラグインインスタンスにプレフィックスをつけます。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "The object names used by JMX to identify MBeans include properties, which are in the form of key-value-pairs. If the given object name is not unique and multiple MBeans are returned, the values of those properties might differ. Use this option to build the plugin instance from the appropriate property values. To generate the plugin instance from multiple property values, use multiple instances of this setting."
msgstr "JMXがMBeansを識別するために使用するオブジェクト名には、キーと値のペアの形式であるプロパティが含まれます。与えられたオブジェクト名が一意でなく、複数のMBeansが返される場合、それらのプロパティの値は異なるかもしれません。このオプションを使用して、適切なプロパティ値からプラグイン・インスタンスを構築します。複数のプロパティ値からプラグイン・インスタンスを生成するには、この設定の複数のインスタンスを使用します。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "The `value` blocks map one or more attributes of an MBean to a value list in collectd. There must be at least one `value` block within each MBean block."
msgstr "`値` ブロックはMBeanの1つ以上の属性をcollectdの値リストにマップする。各MBeanブロック内に少なくとも1つの`値` ブロックがなければならない。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "A list of strings for the dimensions."
msgstr "寸法を表す文字列のリスト。"

#: ../../gdi/monitors-databases/hadoopjmx.md:149 ../../gdi/monitors-hosts/kafka-consumer.md:76 ../../gdi/monitors-hosts/kafka-producer.md:76
msgid "The nested `values` config object has the following fields:"
msgstr "ネストされた`values` configオブジェクトには以下のフィールドがある："

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "Sets the dataset used within collectd to handle the values of the MBean attribute."
msgstr "MBean属性の値を扱うためにcollectd内で使用されるデータセットを設定します。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "Whether the returned attribute is a composite type. If set to `true`, the keys within the composite type are appended to the type instance. The default value is `false`."
msgstr "返された属性が複合型であるかどうか。`true` に設定すると、複合型内のキーが型インスタンスに追加される。デフォルト値は`false` 。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "Similar to the `instancePrefix` option under the MBean block, but sets the type instance instead."
msgstr "MBeanブロックの`instancePrefix` オプションと似ているが、代わりにタイプインスタンスを設定する。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "The name of the attribute from which the value is read. You can access the keys of composite types by using a dot to concatenate the key name to the attribute name. For example, `attrib0.key42`. If `table` is set to `true`, the path must point to a composite type, otherwise it must point to a numeric type."
msgstr "値が読み込まれる属性の名前。ドットを使ってキー名と属性名を連結すれば、複合型のキーにアクセスできる。例えば、`attrib0.key42` 。`テーブル` が`真の` に設定されている場合、パスは複合型を指し示す必要があり、そうでない場合は数値型を指し示す必要がある。"

#: ../../gdi/monitors-databases/hadoopjmx.md:48 ../../gdi/monitors-hosts/kafka-consumer.md:23 ../../gdi/monitors-hosts/kafka-producer.md:23
msgid "The plural form of the `attribute` setting. Used to derive multiple metrics from a single MBean."
msgstr "`属性の複数形` 設定。単一の MBean から複数のメトリクスを導出するために使用されます。"

#: ../../gdi/monitors-databases/logparser.md:3 ../../gdi/opentelemetry/collector-architecture.rst:128
msgid "Logparser"
msgstr "ログパーサー"

#: ../../gdi/monitors-databases/logparser.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `telegraf/logparser` monitor type to tail log files."
msgstr "Ref}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent receiver<smartagent-receiver>` と`telegraf/logparser` monitor type を使用してログファイルの尾行を行う。"

#: ../../gdi/monitors-databases/logparser.md:9
msgid "This integration is based on the Telegraf logparser plugin, and all emitted metrics have the plugin dimension set to `telegraf-logparser`."
msgstr "この統合は、Telegraf logparserプラグインに基づいており、すべての放出されたメトリクスは、プラグインディメンションが`telegraf-logparser` に設定されています。"

#: ../../gdi/monitors-databases/logparser.md:37
msgid "To complete the integration, include this monitor type as a member of a `logs` pipeline. Use the SignalFx exporter to make event submission requests. Use the Resource Detection processor to ensure that host identity and other useful information is made available as event dimensions. For example:"
msgstr "統合を完了するには、このモニタータイプを`logs` pipelineのメンバーとして含める。SignalFx エクスポーターを使用して、イベント送信リクエストを行います。リソース検出プロセッサを使用して、ホストのIDやその他の有用な情報がイベントディメンジョンとして利用できるようにする。例えば、こうだ："

#: ../../gdi/monitors-databases/logparser.md:51
msgid "The following example shows a sample YAML configuration:"
msgstr "次の例はYAML設定のサンプルです："

#: ../../gdi/monitors-databases/logparser.md:73 ../../gdi/monitors-databases/logstash.md:41 ../../gdi/monitors-hosts/host-processload.md:13 ../../gdi/monitors-network/logstash-tcp.md:122
msgid "The following table shows the configuration options for this monitor type:"
msgstr "次の表に、このモニタータイプの設定オプションを示す："

#: ../../gdi/monitors-databases/logparser.md:23
msgid "`files`"
msgstr "`ファイル`"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "Paths to files to be tailed"
msgstr "尾行するファイルへのパス"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "`watchMethod`"
msgstr "`watchMethod`"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "Method for watching changes to files (\"ionotify\" or \"poll\"). The default value is `poll`."
msgstr "ファイルの変更を監視する方法（\"ionotify \"または \"poll\"）。デフォルト値は`poll` 。"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "`fromBeginning`"
msgstr "`fromBeginning`"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "Whether to start tailing from the beginning of the file. The default value is `false`."
msgstr "ファイルの先頭からテーリングを開始するかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "`measurementName`"
msgstr "`measurementName`"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "Name of the measurement"
msgstr "測定名"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "`patterns`"
msgstr "`patterns`"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "A list of patterns to match."
msgstr "マッチするパターンのリスト。"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "`namedPatterns`"
msgstr "`namedPatterns`"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "A list of named grok patterns to match."
msgstr "マッチする名前付きgrokパターンのリスト。"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "`customPatterns`"
msgstr "`customPatterns`"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "`customPatternFiles`"
msgstr "`customPatternFiles`"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "List of paths to custom grok pattern files."
msgstr "カスタムgrokパターンファイルへのパスのリスト。"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "`timezone`"
msgstr "`timezone`"

#: ../../gdi/monitors-databases/logparser.md:23
msgid "Specifies the timezone. The default is UTC time. Other options are `Local` for the local time on the machine, `UTC`, and `Canada/Eastern` (unix style timezones)."
msgstr "タイムゾーンを指定する。デフォルトはUTC時間。その他のオプションは、`Local` （マシンのローカル時間）、`UTC` （UTC）、`Canada/Eastern` （unixスタイルのタイムゾーン）。"

#: ../../gdi/monitors-databases/logparser.md:89
msgid "The Splunk Distribution of OpenTelemetry Collector does not do any built-in filtering of metrics coming out of this monitor type."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションでは、このモニタータイプから出力されるメトリクスに対する組み込みのフィルタリングは行われません。"

#: ../../gdi/monitors-databases/logstash.md:3 ../../gdi/opentelemetry/collector-architecture.rst:80
msgid "Logstash"
msgstr "ログスタッシュ"

#: ../../gdi/monitors-databases/logstash.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `logstash` monitor type to monitor the health and performance of Logstash deployments through Logstash [Monitoring APIs](https://www.elastic.co/guide/en/logstash/current/monitoring-logstash.html)."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`logstash` モニタタイプを使用し、Logstash[Monitoring API](https://www.elastic.co/guide/en/logstash/current/monitoring-logstash.html) を通じて Logstash デプロイの健全性とパフォーマンスを監視します。"

#: ../../gdi/monitors-databases/logstash.md:22
msgid "To activate this monitor in the Splunk Distribution of OpenTelemetry Collector, add the following to your agent configuration:"
msgstr "OpenTelemetry Collector の Splunk ディストリビューションでこのモニターを有効にするには、エージェント設定に以下を追加します："

#: ../../gdi/monitors-databases/logstash.md:17
msgid "The host name of the Logstash monitoring API. The default value is `127.0.0.1`."
msgstr "Logstash モニタリング API のホスト名。デフォルト値は`127.0.0.1` 。"

#: ../../gdi/monitors-databases/logstash.md:17
msgid "The port number of Logstash monitoring API. The default value is `9600`."
msgstr "Logstash モニタリング API のポート番号。デフォルト値は`9600` です。"

#: ../../gdi/monitors-databases/logstash.md:17
msgid "If true, the agent connects to the host using HTTPS instead of HTTP. The default value is `false`."
msgstr "trueの場合、エージェントはHTTPの代わりにHTTPSを使ってホストに接続します。デフォルト値は`false` 。"

#: ../../gdi/monitors-databases/logstash.md:17
msgid "The maximum amount of time to wait for API requests, in seconds. The default value is `5`."
msgstr "APIリクエストの最大待機時間（秒）。デフォルト値は`5` 。"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:3 ../../gdi/opentelemetry/collector-architecture.rst:129
msgid "Microsoft SQL Server"
msgstr "Microsoft SQL Server"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Microsoft SQL Server monitor type to send metrics from Microsoft SQL Server instances."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を Microsoft SQL Server モニタータイプで使用し、Microsoft SQL Server インスタンスからメトリクスを送信します。"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:19
msgid "Microsoft SQL installation"
msgstr "マイクロソフトSQLのインストール"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:21
msgid "To use the integration, you need to create login credentials in the Microsoft SQL Server host. To create this login, follow these steps:"
msgstr "統合を使用するには、Microsoft SQL Server ホストにログイン認証情報を作成する必要があります。このログインを作成するには、以下の手順に従ってください："

#: ../../gdi/monitors-databases/microsoft-sql-server.md:23
msgid "Log in as an administrator."
msgstr "管理者としてログインする。"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:24
msgid "Start an SQL client."
msgstr "SQLクライアントを起動します。"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:25
msgid "Enter the following commands:"
msgstr "以下のコマンドを入力する："

#: ../../gdi/monitors-databases/microsoft-sql-server.md:63
msgid "Example: Microsoft SQL Server receiver"
msgstr "例Microsoft SQL Server レシーバー"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:65
msgid "The following is an example of a Microsoft SQL Server receiver configuration:"
msgstr "以下は、Microsoft SQL Server レシーバーの構成例である："

#: ../../gdi/monitors-databases/microsoft-sql-server.md:80
msgid "The following table shows the configuration options for the Microsoft SQL Server monitor:"
msgstr "次の表は、Microsoft SQL Server モニターの設定オプションを示しています："

#: ../../gdi/monitors-databases/microsoft-sql-server.md:40
msgid "`userID`"
msgstr "`userID`"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:40
msgid "UserID used to access the SQL Server instance."
msgstr "SQL Server インスタンスへのアクセスに使用される UserID。"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:40
msgid "Password used to access the SQL Server instance."
msgstr "SQL Serverインスタンスへのアクセスに使用するパスワード。"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:40
msgid "`appName`"
msgstr "`appName`"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:40
msgid "The app name used by the monitor when connecting to the SQLServer. (**default:** `signalfxagent`)"
msgstr "SQLServer に接続する際にモニターが使用するアプリ名。(**default:**`signalfxagent`)"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:40
msgid "`queryVersion`"
msgstr "`queryVersion`"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:40
msgid "The version of queries to use when accessing the cluster. See the documentation for the Microsoft SQL Server Telegraf Plugin, provided by Influxdata. (**default:** `2`)"
msgstr "クラスタにアクセスする際に使用するクエリのバージョン。Influxdata が提供する Microsoft SQL Server Telegraf Plugin のドキュメントを参照してください。(**default:**`2`)"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:40
msgid "`azureDB`"
msgstr "`azureDB`"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:40
msgid "Whether the database is a Microsoft Azure database. (**default:** `false`)"
msgstr "データベースが Microsoft Azure データベースであるかどうか。(**default:**`false`)"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:40
msgid "`excludedQueries`"
msgstr "`excludedQueries`"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:40
msgid "Queries to exclude. Possible values are `PerformanceCounters`, `WaitStatsCategorized`, `DatabaseIO`, `DatabaseProperties`, `CPUHistory`, `DatabaseSize`, `DatabaseStats`, `MemoryClerk` `VolumeSpace`, and `PerformanceMetrics`."
msgstr "除外するクエリー設定可能な値は、`PerformanceCounters`,`WaitStatsCategorized`,`DatabaseIO`,`DatabaseProperties`,`CPUHistory`,`DatabaseSize`,`DatabaseStats`,`MemoryClerk` `VolumeSpace`, および`PerformanceMetrics` です。"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:40
msgid "`log`"
msgstr "`log`"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:40 ../../gdi/monitors-hosts/chrony.md:22
msgid "`unsigned integer`"
msgstr "`符号なし整数`"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:40
msgid "Log level to use when accessing the database (**default:** `1`)"
msgstr "データベースへのアクセス時に使用するログ・レベル (**default:**`1`)"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:110
msgid "TCP/IP is deactivated"
msgstr "TCP/IPを停止する"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:112
msgid "In some Windows-based SQL Server instances, TCP/IP has been deactivated by default. You might encounter this in a Microsoft Azure service instance. If you see error messages similar to `Cannot read handshake packet: read tcp: wsarecv: An existing connection was forcibly closed by the remote host.`, you need to explicitly activate TCP/IP for the instance."
msgstr "一部のWindowsベースのSQL Serverインスタンスでは、TCP/IPがデフォルトで無効になっています。Microsoft Azureのサービスインスタンスでこの現象が発生する可能性がある。`ハンドシェイク・パケットを読み取れません: read tcp: wsarecv.既存の接続がリモート・ホストによって強制的に閉じられました：既存の接続がリモート・ホストによって強制的に閉じられました。` 、インスタンスのTCP/IPを明示的に有効にする必要があります。"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:114
msgid "Verify agent configurations are correct."
msgstr "エージェントの設定が正しいことを確認する。"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:116
msgid "In your SQL Server instance, activate TCP/IP. To do this, select **Start**, then **Administrative Tools**, then **Computer Management**."
msgstr "SQL Serverインスタンスで、TCP/IPを有効にする。これを行うには、**スタート**、**管理ツール**、*コンピュータ管理**の順に選択します。"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:118
msgid "In the `Computer Management` sidebar, select **Services and Applications**, then **SQL Server Configuration Manager**, then **SQL Server Network Configuration**."
msgstr "`Computer Management` サイドバーで、**Services and Applications** → **SQL Server Configuration Manager** → **SQL Server Network Configuration** の順に選択します。"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:120
msgid "Select **Protocols for `<YOUR SQL SERVER NAME>`**."
msgstr "`<YOUR SQL SERVER NAME>`** のプロトコル」を選択します。"

#: ../../gdi/monitors-databases/microsoft-sql-server.md:122
msgid "In the protocol list, right-click the **TCP/IP** protocol and select **Enable**."
msgstr "プロトコル・リストで、**TCP/IP**プロトコルを右クリックし、**Enable**を選択します。"

#: ../../gdi/monitors-databases/mongodb.md:6
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the MongoDB monitor type to capture the following metrics about MongoDB:"
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を MongoDB モニタータイプで使用し、MongoDB に関する以下のメトリクスをキャプチャします："

#: ../../gdi/monitors-databases/mongodb.md:8 ../../gdi/opentelemetry/collector-architecture.rst:82
msgid "Memory"
msgstr "メモリー"

#: ../../gdi/monitors-databases/mongodb.md:9
msgid "Network input/output bytes count"
msgstr "ネットワーク入出力バイト数"

#: ../../gdi/monitors-databases/mongodb.md:10
msgid "Heap usage"
msgstr "ヒープ使用量"

#: ../../gdi/monitors-databases/mongodb.md:11
msgid "DB connections"
msgstr "DB接続"

#: ../../gdi/monitors-databases/mongodb.md:12
msgid "Operations count"
msgstr "オペレーション数"

#: ../../gdi/monitors-databases/mongodb.md:13
msgid "Active client connections"
msgstr "アクティブなクライアント接続"

#: ../../gdi/monitors-databases/mongodb.md:14
msgid "Queued operations"
msgstr "キュー・オペレーション"

#: ../../gdi/monitors-databases/mongodb.md:16
msgid "The plugin also captures the following DB-specific metrics:"
msgstr "このプラグインは、以下のDB固有のメトリクスもキャプチャします："

#: ../../gdi/monitors-databases/mongodb.md:18
msgid "DB size"
msgstr "DBサイズ"

#: ../../gdi/monitors-databases/mongodb.md:19
msgid "DB counters"
msgstr "DBカウンター"

#: ../../gdi/monitors-databases/mongodb.md:23
msgid "This integration requires MongoDB 2.6 or higher."
msgstr "この統合にはMongoDB 2.6以上が必要です。"

#: ../../gdi/monitors-databases/mongodb.md:35 ../../gdi/monitors-databases/redis.md:34 ../../gdi/monitors-monitoring/prometheus-exporter.md:76
msgid "Authentication"
msgstr "認証"

#: ../../gdi/monitors-databases/mongodb.md:37
msgid "If you're monitoring a secured MongoDB deployment, create a MongoDB user with minimal read-only roles, as follows:"
msgstr "セキュリティで保護された MongoDB デプロイメントを監視している場合は、次のように最小限の読み取り専用ロールを持つ MongoDB ユーザーを作成します："

#: ../../gdi/monitors-databases/mongodb.md:48
msgid "Only SCRAM-SHA-1 authentication is supported."
msgstr "SCRAM-SHA-1認証のみがサポートされている。"

#: ../../gdi/monitors-databases/mongodb.md:78
msgid "The following table shows the configuration options for the MongoDB monitor:"
msgstr "次の表に MongoDB モニタの設定オプションを示します："

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "Hostname or IP address of the MongoDB instance."
msgstr "MongoDB インスタンスのホスト名または IP アドレス。"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "Port of the MongoDB instance. The default value is `27017`."
msgstr "MongoDB インスタンスのポート。デフォルト値は`27017` 。"

#: ../../gdi/monitors-databases/mongodb.md:53 ../../gdi/monitors-databases/mysql.md:49 ../../gdi/monitors-databases/postgresql.md:7
msgid "`databases`"
msgstr "`データベース`"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "Name of the databases you want to monitor. The first database in this list must be `admin`, as it's used to perform a `serverStatus()` call."
msgstr "監視したいデータベースの名前。このリストの最初のデータベースは、`admin` でなければならない。`serverStatus()` の呼び出しに使用されるからである。"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "MongoDB user."
msgstr "MongoDBユーザー。"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "Password of the user defined in `username`."
msgstr "`ユーザー名` で定義されたユーザーのパスワード。"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "`useTLS`"
msgstr "`useTLS`"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "If `true`, the monitor connects to MongoDB using TLS. The default value is `false`."
msgstr "`true` の場合、モニターはTLSを使ってMongoDBに接続する。デフォルト値は`false` 。"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "`caCerts`"
msgstr "`caCerts`"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "Path to a CA cert used to verify the certificate that MongoDB presents. Not needed if not using TLS or if MongoDB certificate is signed by a globally trusted issuer already installed in the default location on your system."
msgstr "MongoDB が提示する証明書の検証に使う CA 証明書へのパス。TLS を使っていない場合や、MongoDB 証明書がグローバルに信頼されている発行元によって署名されていて、 システムのデフォルトの場所にすでにインストールされている場合は不要です。"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "`tlsClientCert`"
msgstr "`tlsClientCert`"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "Path to a client certificate. Not needed unless your MongoDB instance requires x509 client verification."
msgstr "クライアント証明書へのパス。MongoDB インスタンスで x509 クライアント認証が必要でなければ不要です。"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "`tlsClientKey`"
msgstr "`tlsClientKey`"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "Path to a client certificate key. Not needed unless your MongoDB instance requires x509 client verification, or if your client certificate defined in `tlsClientCert` includes the key."
msgstr "クライアント証明書キーへのパス。MongoDB インスタンスで x509 クライアント認証が必要な場合や、`tlsClientCert` で定義したクライアント証明書にキーが含まれている場合は不要です。"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "`tlsClientKeyPassPhrase`"
msgstr "`tlsClientKeyPassPhrase`"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "Passphrase for the TLS client key defined in `tlsClientKey`."
msgstr "`tlsClientKey` で定義されているTLSクライアント・キーのパスフレーズ。"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "`sendCollectionMetrics`"
msgstr "`sendCollectionMetrics`"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "Whether to send collection level metrics or not. The default value is `false`."
msgstr "コレクション・レベルのメトリクスを送信するかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "`sendCollectionTopMetrics`"
msgstr "`sendCollectionTopMetrics`"

#: ../../gdi/monitors-databases/mongodb.md:53
msgid "Whether to send collection level top timing metrics or not. The default value is `false`."
msgstr "コレクション・レベルのトップ・タイミング・メトリクスを送信するかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-databases/mongodb.md:97
msgid "When using TLS authentication, SCRAM-SHA-256 is not supported. Use SCRAM-SHA-1 authentication."
msgstr "TLS認証を使用する場合、SCRAM-SHA-256はサポートされません。SCRAM-SHA-1認証を使用する。"

#: ../../gdi/monitors-databases/mongodb-atlas.md:3
msgid "MongoDB Atlas (deprecated)"
msgstr "MongoDB アトラス (非推奨)"

#: ../../gdi/monitors-databases/mongodb-atlas.md:8
msgid "This monitor is deprecated in favor of the Otel native component `mongodbatlas` receiver. See {ref}`MongoDB Atlas Receiver <mongodb-atlas-receiver>` for more information."
msgstr "このモニターは、Otelネイティブ・コンポーネント`mongodbatlas` レシーバーに取って代わられ、非推奨となっています。詳しくは {ref}`MongoDB Atlas Receiver<mongodb-atlas-receiver>` を参照してください。"

#: ../../gdi/monitors-databases/mongodb-atlas.md:11
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the MongoDB Atlas monitor type to provide MongoDB as an on-demand fully managed service. Atlas exposes MongoDB cluster monitoring and logging data through its [monitoring and logs](https://docs.atlas.mongodb.com/reference/api/monitoring-and-logs/) REST API endpoints. These Atlas monitoring API resources are grouped into measurements for MongoDB processes, host disks, and MongoDB databases."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と MongoDB Atlas モニタタイプを使用し、オンデマンドのフルマネージドサービスとして MongoDB を提供する。Atlas は MongoDB クラスタの監視とログのデータを[monitoring と logs](https://docs.atlas.mongodb.com/reference/api/monitoring-and-logs/) REST API エンドポイントを通して公開します。これらの Atlas モニタリング API リソースは、MongoDB プロセス、ホストディスク、MongoDB データベースの測定にグループ化されています。"

#: ../../gdi/monitors-databases/mongodb-atlas.md:13
msgid "This integration repeatedly scrapes MongoDB monitoring data from Atlas at the configured time interval. It scrapes the process and disk measurements into metric groups called mongodb and hardware. The original measurement names are included in the metric descriptions."
msgstr "この統合は、設定した時間間隔でAtlasからMongoDBモニタリングデータを繰り返しスクレイピングする。これは、プロセスとディスクの計測値をmongodbとhardwareというメトリックグループにスクレイピングする。元の測定名はメートル法の説明に含まれている。"

#: ../../gdi/monitors-databases/mongodb-atlas.md:15
msgid "A set of data points are fetched at the configured granularity and period for each measurement. Metric values are set to the latest non-empty data point value in the set. The finest granularity supported by Atlas is 1 minute. The configured period for the monitor type needs to be wider than the interval at which Atlas provides values for measurements, otherwise some of the sets of fetched data points will contain only empty values. The default configured period is 20 minutes, which works across all measurements and gives a reasonable response payload size."
msgstr "各測定について、設定された粒度と周期でデータポイントのセットがフェッチされる。メトリック値は、セット内の最新の空でないデータポイント値に設定される。アトラスがサポートする最も細かい粒度は1分である。モニタータイプに設定する期間は、アトラスが測定値を提供する間隔よりも広くする必要があります。そうしないと、フェッチされたデータポイントのセットの中には空の値しか含まれないものがあります。デフォルトの設定期間は20分で、これはすべての測定で機能し、妥当な応答ペイロードサイズを与える。"

#: ../../gdi/monitors-databases/mongodb-atlas.md:19
msgid "The following table shows the configuration options for the `mongodb-atlas` monitor type:"
msgstr "次の表は、`mongodb-atlas` モニタタイプの設定オプションを示しています："

#: ../../gdi/monitors-databases/mongodb-atlas.md:7
msgid "`projectID`"
msgstr "`projectID`"

#: ../../gdi/monitors-databases/mongodb-atlas.md:7
msgid "ProjectID is the Atlas project ID"
msgstr "ProjectIDはアトラスのプロジェクトID"

#: ../../gdi/monitors-databases/mongodb-atlas.md:7
msgid "`publicKey`"
msgstr "`publicKey`"

#: ../../gdi/monitors-databases/mongodb-atlas.md:7
msgid "PublicKey is the Atlas public API key"
msgstr "PublicKey はアトラスのパブリック API キーです。"

#: ../../gdi/monitors-databases/mongodb-atlas.md:7
msgid "`privateKey`"
msgstr "`privateKey`"

#: ../../gdi/monitors-databases/mongodb-atlas.md:7
msgid "PrivateKey is the Atlas private API key"
msgstr "PrivateKey はアトラスのプライベート API キーです。"

#: ../../gdi/monitors-databases/mongodb-atlas.md:7
msgid "Timeout for HTTP requests to get MongoDB process measurements from Atlas. This should be a duration string that is accepted by [`func ParseDuration`](https://golang.org/pkg/time/#ParseDuration) (**default:** `5s`)"
msgstr "Atlas から MongoDB プロセスの計測値を取得するための HTTP リクエストのタイムアウト。これは、[`func ParseDuration`](https://golang.org/pkg/time/#ParseDuration) (**default:**`5s`) が受け付ける継続時間文字列でなければならない。"

#: ../../gdi/monitors-databases/mongodb-atlas.md:7
msgid "`enableCache`"
msgstr "`enableCache`"

#: ../../gdi/monitors-databases/mongodb-atlas.md:7
msgid "Activates  locally cached Atlas metric measurements to be used when true. The metric measurements that were supposed to be fetched are in fact always fetched asynchronously and cached. (**default:** `true`)"
msgstr "ローカルにキャッシュされたAtlasの測定値を有効にする。フェッチされるはずだったメトリクス測定値は、実際には常に非同期でフェッチされ、キャッシュされる。(**default:**`true`)"

#: ../../gdi/monitors-databases/mongodb-atlas.md:7
msgid "`granularity`"
msgstr "`granularity`"

#: ../../gdi/monitors-databases/mongodb-atlas.md:7
msgid "Granularity is the duration in ISO 8601 notation that specifies the interval between measurement data points from Atlas over the configured period. The default is shortest duration supported by Atlas of 1 minute. (**default:** `PT1M`)"
msgstr "粒度とは、ISO 8601の表記で、設定された期間におけるAtlasの測定データポイントの間隔を指定する期間である。``デフォルトはアトラスがサポートする最短時間1分。"

#: ../../gdi/monitors-databases/mongodb-atlas.md:7
msgid "`period`"
msgstr "`period`"

#: ../../gdi/monitors-databases/mongodb-atlas.md:7
msgid "Period the duration in ISO 8601 notation that specifies how far back in the past to retrieve measurements from Atlas. (**default:** `PT20M`)"
msgstr "期間 ISO 8601 表記で、Atlas からどれだけ過去に遡って測定値を取得するかを指定する期間。(**default:**`PT20M`)"

#: ../../gdi/monitors-databases/mysql.md:2 ../../gdi/opentelemetry/collector-architecture.rst:163 ../../gdi/opentelemetry/discovery-mode.rst:46
msgid "MySQL"
msgstr "MySQL"

#: ../../gdi/monitors-databases/mysql.md:6
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the MySQL monitor type to retrieve metrics and logs from MySQL."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、MySQL からメトリクスとログを取得するために、MySQL モニタタイプで {参照}`Smart Agent レシーバ<smartagent-receiver>` を使用する。"

#: ../../gdi/monitors-databases/mysql.md:8
msgid "This monitor connects to a MySQL instance and reports on the values returned by a `SHOW STATUS` command, which include the following:"
msgstr "このモニタは MySQL インスタンスに接続し、`SHOW STATUS` コマンドで返される値についてレポートする："

#: ../../gdi/monitors-databases/mysql.md:10
msgid "Number of commands processed"
msgstr "処理されたコマンド数"

#: ../../gdi/monitors-databases/mysql.md:11
msgid "Table and row operations (handlers)"
msgstr "テーブルと行の操作（ハンドラ）"

#: ../../gdi/monitors-databases/mysql.md:12
msgid "State of the query cache"
msgstr "クエリ・キャッシュの状態"

#: ../../gdi/monitors-databases/mysql.md:13
msgid "Status of MySQL threads"
msgstr "MySQLスレッドのステータス"

#: ../../gdi/monitors-databases/mysql.md:14
msgid "Network traffic"
msgstr "ネットワーク・トラフィック"

#: ../../gdi/monitors-databases/mysql.md:28
msgid "Creating a MySQL user for this monitor"
msgstr "このモニター用にMySQLユーザーを作成する"

#: ../../gdi/monitors-databases/mysql.md:30
msgid "To create a MySQL user for this monitor, run the following commands:"
msgstr "このモニター用にMySQLユーザーを作成するには、以下のコマンドを実行する："

#: ../../gdi/monitors-databases/mysql.md:41
msgid "The new user only has enough privileges to connect to the database. Additional privileges are not required."
msgstr "新しいユーザーには、データベースに接続するのに十分な権限しかない。追加特典は必要ない。"

#: ../../gdi/monitors-databases/mysql.md:43
msgid "Considerations on localhost"
msgstr "ローカルホストでの考察"

#: ../../gdi/monitors-databases/mysql.md:45
msgid "For connections to `localhost`, MySQL programs attempt to connect to the local server by using a Unix socket file. To ensure that the client makes a TCP/IP connection to the local server specify a host name value of `127.0.0.1`, or the IP address or name of the local server."
msgstr "`localhost` への接続では、MySQL プログラムは Unix ソケット ファイルを使用してローカル サーバへの接続を試みます。クライアントがローカル・サーバーにTCP/IP接続を行うようにするには、ホスト名値として`127.0.0.1` 、またはローカル・サーバーのIPアドレスまたは名前を指定します。"

#: ../../gdi/monitors-databases/mysql.md:70
msgid "The following is a sample YAML configuration that shows how to connect multiple MySQL databases:"
msgstr "以下は、複数の MySQL データベースに接続する方法を示すサンプル YAML 設定です："

#: ../../gdi/monitors-databases/mysql.md:49
msgid "Hostname or IP address of the MySQL instance. For example, `127.0.0.1`."
msgstr "MySQL インスタンスのホスト名または IP アドレス。例えば、`127.0.0.1` 。"

#: ../../gdi/monitors-databases/mysql.md:49
msgid "The port of the MySQL instance. For example, `3306`."
msgstr "MySQL インスタンスのポート。例えば、`3306` 。"

#: ../../gdi/monitors-databases/mysql.md:49
msgid "`list of objects`"
msgstr "`オブジェクトのリスト`"

#: ../../gdi/monitors-databases/mysql.md:49
msgid "A list of databases along with optional authentication credentials."
msgstr "データベースのリストと、オプションの認証情報。"

#: ../../gdi/monitors-databases/mysql.md:49
msgid "Username for all databases. You can override it by defining each username in the `databases` object."
msgstr "すべてのデータベースのユーザー名。各ユーザー名を`databases` オブジェクトで定義することで、オーバーライドすることができます。"

#: ../../gdi/monitors-databases/mysql.md:49
msgid "Password for all databases. You can override it by defining each username in the `databases` object."
msgstr "全データベースのパスワード。各ユーザー名を`databases` オブジェクトで定義することで、オーバーライドすることができます。"

#: ../../gdi/monitors-databases/mysql.md:49
msgid "When set to `true`, the `host` dimension is set to the name of the MySQL database host. When `false`, the monitor uses the global `hostname` configuration instead. The default value is `false`. When `disableHostDimensions` is set to `true`, the host name in which the agent or monitor is running is not used for the `host` metric dimension value."
msgstr "`true` に設定すると、`host` ディメンジョンに MySQL データベース・ホスト名が設定される。`false` の場合、モニターは代わりにグローバル`ホスト名` 設定を使用します。デフォルト値は`false` 。`disableHostDimensions` が`true` に設定されている場合、エージェントまたはモニタが実行されているホスト名は、`ホスト` メトリック・ディメンジョン値に使用されません。"

#: ../../gdi/monitors-databases/mysql.md:49
msgid "`innodbStats`"
msgstr "`innodbStats`"

#: ../../gdi/monitors-databases/mysql.md:49
msgid "Collects InnoDB statistics. Before activating InnoDB metrics make sure that you granted the `PROCESS` privilege to your user. The default value is `false`."
msgstr "InnoDB 統計を収集する。InnoDB メトリクスを有効にする前に、`PROCESS` 権限をユーザに付与していることを確認してください。デフォルト値は`false` 。"

#: ../../gdi/monitors-databases/mysql.md:112
msgid "The nested `databases` configuration object has the following fields:"
msgstr "ネストされた`databases` コンフィギュレーション・オブジェクトには以下のフィールドがある："

#: ../../gdi/monitors-databases/mysql.md:49
msgid "Name of the database."
msgstr "データベースの名前。"

#: ../../gdi/monitors-databases/mysql.md:49
msgid "Username of the database."
msgstr "データベースのユーザー名。"

#: ../../gdi/monitors-databases/mysql.md:49
msgid "Password of the database."
msgstr "データベースのパスワード。"

#: ../../gdi/monitors-databases/postgresql.md:3 ../../gdi/opentelemetry/collector-architecture.rst:86 ../../gdi/opentelemetry/discovery-mode.rst:49
msgid "PostgreSQL"
msgstr "PostgreSQL"

#: ../../gdi/monitors-databases/postgresql.md:8
msgid "You can replace this monitor with the OTel native component `postgresql` receiver. See {ref}`postgresql-receiver` for more information."
msgstr "このモニターは、OTel ネイティブ・コンポーネント`postgresql` レシーバーで置き換えることができます。詳細は{ref}`postgresql-receiver` を参照のこと。"

#: ../../gdi/monitors-databases/postgresql.md:11
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the  `postgresql` monitor type to pull metrics from all PostgreSQL databases from a specific Postgres server instance using SQL queries."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と`postgresql` monitor type を使用して、SQL クエリを使用して特定の Postgres サーバーインスタンスからすべての PostgreSQL データベースからメトリクスを取得します。"

#: ../../gdi/monitors-databases/postgresql.md:15
msgid "The following table shows the configuration options for the `postgresql` integration:"
msgstr "次の表は、`postgresql` 統合用の設定オプションを示したものです："

#: ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-hosts/haproxy.md:86
msgid "(**default:** `0`)"
msgstr "(**default:**`0`)"

#: ../../gdi/monitors-databases/postgresql.md:7
msgid "`masterDBName`"
msgstr "`masterDBName`"

#: ../../gdi/monitors-databases/postgresql.md:7
msgid "The \"master\" database to which the agent first connects to query the list of databases available in the server.  This database should be accessible to the user specified with `connectionString` and `params` below, and that user should have permission to query `pg_database`.  If you want to filter which databases are monitored, use the `databases` option below. (**default:** `postgres`)"
msgstr "エージェントが最初に接続する \"マスター \"データベース。 このデータベースは、以下の`connectionString` と`params` で指定されたユーザがアクセスでき、そのユーザが`pg_database` にクエリする権限を持っている必要があります。 監視するデータベースを絞り込みたい場合は、以下の`databases` オプションを使用します。(**default:**`postgres`)"

#: ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-databases/sql.md:23
msgid "`connectionString`"
msgstr "`connectionString`"

#: ../../gdi/monitors-databases/postgresql.md:7
msgid "See [Connection String Parameters](https://godoc.org/github.com/lib/pq#hdr-Connection_String_Parameters)."
msgstr "[接続文字列パラメータ](https://godoc.org/github.com/lib/pq#hdr-Connection_String_Parameters) を参照のこと。"

#: ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-databases/sql.md:23
msgid "`params`"
msgstr "`params`"

#: ../../gdi/monitors-databases/postgresql.md:7
msgid "Parameters to the connection string that can be templated into the connection string with the syntax `{{.key}}`."
msgstr "`{{.key}}` の構文で接続文字列にテンプレート化できる接続文字列のパラメータ。"

#: ../../gdi/monitors-databases/postgresql.md:7
msgid "List of databases to send database-specific metrics about. If omitted, metrics about all databases will be sent.  This is an [overridable set](https://docs.splunk.com/Observability/gdi/smart-agent/smart-agent-resources.html#filtering-data-using-the-smart-agent). (**default:** `[*]`)"
msgstr "データベース固有のメトリクスを送信するデータベースのリスト。省略すると、すべてのデータベースに関するメトリクスが送信されます。 これは[オーバーライド可能なセット](https://docs.splunk.com/Observability/gdi/smart-agent/smart-agent-resources.html#filtering-data-using-the-smart-agent) です。(**default:**`[*]`)"

#: ../../gdi/monitors-databases/postgresql.md:7
msgid "`databasePollIntervalSeconds`"
msgstr "`databasePollIntervalSeconds`"

#: ../../gdi/monitors-databases/postgresql.md:7
msgid "How frequently to poll for new/deleted databases in the DB server. Defaults to the same as `intervalSeconds` if not set. (**default:** `0`)"
msgstr "DBサーバーで新規/削除されたデータベースをポーリングする頻度。設定されていない場合、デフォルトは`intervalSeconds` と同じ。(**default:**`0`)"

#: ../../gdi/monitors-databases/postgresql.md:7 ../../gdi/monitors-databases/sql.md:23
msgid "`logQueries`"
msgstr "`logQueries`"

#: ../../gdi/monitors-databases/postgresql.md:7
msgid "If `true,` queries will be logged at the info level. (**default:** `false`)"
msgstr "`trueの場合、` クエリはinfoレベルで記録される。(**default:**`false`)"

#: ../../gdi/monitors-databases/postgresql.md:7
msgid "`topQueryLimit`"
msgstr "`topQueryLimit`"

#: ../../gdi/monitors-databases/postgresql.md:7
msgid "The number of top queries to consider when publishing query-related metrics (**default:** `10`)"
msgstr "クエリ関連のメトリクスを公開する際に考慮する上位クエリの数 (**default:**`10`)"

#: ../../gdi/monitors-databases/postgresql.md:40
msgid "Metrics about replication"
msgstr "レプリケーションに関する指標"

#: ../../gdi/monitors-databases/postgresql.md:42
msgid "Replication metrics aren't available on some PostgreSQL servers. For now, this monitor automatically deactivates the `replication` metrics group if the monitor detects Aurora. This helps avoid following the error: `Function pg_last_xlog_receive_location() is currently not supported for Aurora`"
msgstr "一部のPostgreSQLサーバではレプリケーション・メトリクスが利用できません。今のところ、このモニターは、モニターがオーロラを検出すると、`レプリケーション` メトリクス・グループを自動的に非アクティブにします。これはエラーの後追いを避けるのに役立ちます：`関数pg_last_xlog_receive_location()は現在Auroraではサポートされていません。`"

#: ../../gdi/monitors-databases/postgresql.md:44
msgid "The metric `postgres_replication_state` will be reported only for `master` and for `postgres_replication_lag` for the `standby` role (replica)."
msgstr "メトリック`postgres_replication_state` は、`マスター` と、`postgres_replication_lag` ` スタンバイ` 役割（レプリカ）についてのみ報告されます。"

#: ../../gdi/monitors-databases/redis.md:3 ../../gdi/opentelemetry/collector-architecture.rst:109
msgid "Redis"
msgstr "レディス"

#: ../../gdi/monitors-databases/redis.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `redis` monitor type to  capture the following metrics:"
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`redis` モニタタイプを使用して、以下のメトリクスをキャプチャします："

#: ../../gdi/monitors-databases/redis.md:9
msgid "Memory used"
msgstr "使用メモリ"

#: ../../gdi/monitors-databases/redis.md:10
msgid "Commands processed per second"
msgstr "毎秒処理されるコマンド"

#: ../../gdi/monitors-databases/redis.md:11
msgid "Number of connected clients and followers"
msgstr "接続顧客数とフォロワー数"

#: ../../gdi/monitors-databases/redis.md:12
msgid "Number of blocked clients"
msgstr "ブロックされたクライアント数"

#: ../../gdi/monitors-databases/redis.md:13
msgid "Number of keys stored per database"
msgstr "データベースごとに保存されるキーの数"

#: ../../gdi/monitors-databases/redis.md:14 ../../gdi/opentelemetry/collector-architecture.rst:168
msgid "Uptime"
msgstr "アップタイム"

#: ../../gdi/monitors-databases/redis.md:15
msgid "Changes since last save"
msgstr "前回保存時からの変更点"

#: ../../gdi/monitors-databases/redis.md:16
msgid "Replication delay per follower"
msgstr "フォロワーあたりのレプリケーション遅延"

#: ../../gdi/monitors-databases/redis.md:18
msgid "It accepts endpoints and allows multiple instances."
msgstr "エンドポイントを受け入れ、複数のインスタンスを許可する。"

#: ../../gdi/monitors-databases/redis.md:20
msgid "This integration is available on Kubernetes and Linux, and supports Redis 2.8 and higher."
msgstr "この統合はKubernetesとLinuxで利用可能で、Redis 2.8以降をサポートしている。"

#: ../../gdi/monitors-databases/redis.md:59
msgid "The following table shows the configuration options for the Redis integration:"
msgstr "次の表に、Redis統合の設定オプションを示します："

#: ../../gdi/monitors-databases/redis.md:34
msgid "Path to the Python binary. If you don't provide a path, the monitor uses its built-in runtime. The string can include arguments to the binary."
msgstr "Pythonバイナリへのパス。パスを指定しない場合、モニターは内蔵のランタイムを使用する。文字列にはバイナリーの引数を含めることができる。"

#: ../../gdi/monitors-databases/redis.md:34
msgid "Name for the Redis instance. The maximum length is 64 characters. The default value is \"{host}:{port}\"."
msgstr "Redisインスタンスの名前。最大文字数は64文字。デフォルト値は「{host}:{port}」である。"

#: ../../gdi/monitors-databases/redis.md:34
msgid "`auth`"
msgstr "`オーサー`"

#: ../../gdi/monitors-databases/redis.md:34
msgid "`sendListLengths`"
msgstr "`sendListLengths`"

#: ../../gdi/monitors-databases/redis.md:34
msgid "List of keys that you want to monitor for length. To learn more, see the section **Monitor the length of Redis lists**."
msgstr "長さを監視したいキーのリスト。詳しくは、**Redisリストの長さを監視する**のセクションを参照してください。"

#: ../../gdi/monitors-databases/redis.md:34
msgid "Flag that controls verbose logging for the plugin. If `true`, verbose logging is activated. The default value is`false`."
msgstr "プラグインの冗長ロギングを制御するフラグ。`true` の場合、冗長ロギングが有効になる。デフォルト値は`false` 。"

#: ../../gdi/monitors-databases/redis.md:71
msgid "The following table shows you the configuration options for the `sendListLengths` configuration object:"
msgstr "次の表は、`sendListLengths` コンフィギュレーション・オブジェクトのコンフィギュレーション・オプションを示しています："

#: ../../gdi/monitors-databases/redis.md:34
msgid "`databaseIndex`"
msgstr "`databaseIndex`"

#: ../../gdi/monitors-databases/redis.md:34
msgid "The database index"
msgstr "データベースのインデックス"

#: ../../gdi/monitors-databases/redis.md:34
msgid "`keyPattern`"
msgstr "`keyPattern`"

#: ../../gdi/monitors-databases/redis.md:34
msgid "A string or pattern to use for selecting keys. A string selects a single key. A pattern that uses `*` as a `glob` style wildcard processes all keys that match the pattern. Surround a pattern with single quotes ('), for example `'mylist*'`"
msgstr "キーの選択に使用する文字列またはパターン。文字列は1つのキーを選択する。`*` を`glob` スタイルのワイルドカードとして使用するパターンは、パターンにマッチするすべてのキーを処理する。たとえば、`'mylist*' のように、パターンをシングルクォート（'）で囲みます。`"

#: ../../gdi/monitors-databases/redis.md:78
msgid "Monitor the length of Redis lists"
msgstr "Redisのリストの長さを監視する"

#: ../../gdi/monitors-databases/redis.md:80
msgid "To monitor the length of list keys, you must specify the key and database index in the configuration using the following syntax:"
msgstr "リスト・キーの長さを監視するには、次の構文を使用して、キーとデータベース・インデックスをコンフィギュレーションで指定する必要があります："

#: ../../gdi/monitors-databases/redis.md:86
msgid "You can specify `$key_name` as a glob-style pattern. The only supported wildcard is `*` . When you use a pattern, the configuration processes all keys that match the pattern."
msgstr "`$key_name` をグロブスタイル・パターンとして指定できる。サポートされるワイルドカードは`*` だけである。パターンを使用すると、コンフィギュレーションはパターンにマッチするすべてのキーを処理する。"

#: ../../gdi/monitors-databases/redis.md:88
msgid "To ensure that the `*` is interpreted correctly, surround the pattern with double quotes (`\"\"`). When a nonlist key matches the pattern, the Redis monitor writes an error to the agent logs."
msgstr "`*` が正しく解釈されるように、パターンを二重引用符で囲む (`\"\"`)。非リスト・キーがパターンにマッチすると、Redisモニターはエージェントのログにエラーを書き込みます。"

#: ../../gdi/monitors-databases/redis.md:90
msgid "in Splunk Observability Cloud, `gauge.key_llen` is the metric name for Redis list key lengths. Splunk Observability Cloud creates a separate MTS for each Redis list."
msgstr "Splunk Observability Cloud では、`gauge.key_llen` が Redis のリストキーの長さのメトリック名です。Splunk Observability Cloud は、Redis リストごとに個別の MTS を作成します。"

#: ../../gdi/monitors-databases/redis.md:92
msgid "**Notes**:"
msgstr "**注**："

#: ../../gdi/monitors-databases/redis.md:94
msgid "The Redis monitor uses the `KEYS` command to match patterns. Because this command isn't optimized, you need to keep your match patterns small. Otherwise, the command can block other commands from executing."
msgstr "Redisモニターは、`KEYS` コマンドを使ってパターンをマッチさせる。このコマンドは最適化されていないので、マッチパターンは小さくしておく必要がある。そうでない場合、そのコマンドは他のコマンドの実行を妨害する可能性がある。"

#: ../../gdi/monitors-databases/redis.md:95
msgid "To avoid duplicate reporting, choose a single node in which to monitor list lengths. You can use the main node configuration or a follower node configuration."
msgstr "重複報告を避けるため、リストの長さを監視するノードを1つ選ぶ。メイン・ノード構成またはフォロワー・ノード構成を使用することができます。"

#: ../../gdi/monitors-databases/redis.md:113
msgid "Database Query Performance"
msgstr "データベースクエリのパフォーマンス"

#: ../../gdi/monitors-databases/redis.md:115
msgid "You can troubleshoot Redis command performance issues using Database Query Performance in Splunk APM."
msgstr "Redis コマンドのパフォーマンスに関する問題は、Splunk APM の Database Query Performance を使ってトラブルシューティングできます。"

#: ../../gdi/monitors-databases/redis.md:117
msgid "For a sample scenario, see {ref}`redis-scenario`."
msgstr "サンプルシナリオについては、{ref}`redis-scenario` を参照。"

#: ../../gdi/monitors-databases/redis.md:118
msgid "For more information on Database Query Performance support for Redis, see {ref}`redis-db-query-performance`."
msgstr "Redisのデータベース・クエリー・パフォーマンス・サポートの詳細については、{ref}`redis-db-query-performance` を参照のこと。"

#: ../../gdi/monitors-databases/sap-hana.md:3
msgid "SAP HANA"
msgstr "SAP HANA"

#: ../../gdi/monitors-databases/sap-hana.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `hana` monitor type to get metrics from an SAP Hana database."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と`hana` monitor type を使用して、SAP Hana データベースからメトリクスを取得します。"

#: ../../gdi/monitors-databases/sap-hana.md:9 ../../gdi/monitors-monitoring/cadvisor.md:13 ../../gdi/monitors-monitoring/nagios.md:22 ../../gdi/monitors-monitoring/prometheus-velero.md:9 ../../gdi/monitors-network/aws-appmesh.md:12 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:9
msgid "This integration is available on Kubernetes, Linux, and Windows."
msgstr "この統合はKubernetes、Linux、Windowsで利用できる。"

#: ../../gdi/monitors-databases/sap-hana.md:37
msgid "See additional configuration options:"
msgstr "その他の設定オプションを参照してください："

#: ../../gdi/monitors-databases/sap-hana.md:23
msgid "`tlsServerName`"
msgstr "`tlsServerName`"

#: ../../gdi/monitors-databases/sap-hana.md:23
msgid "`ServerName` to verify the host name. This option defaults to `Host` if not specified."
msgstr "`ServerName` ホスト名を確認する。このオプションは、指定されなければデフォルトで`Host` 。"

#: ../../gdi/monitors-databases/sap-hana.md:23 ../../gdi/monitors-hosts/vsphere.md:29
msgid "`insecureSkipVerify`"
msgstr "`insecureSkipVerify`"

#: ../../gdi/monitors-databases/sap-hana.md:23 ../../gdi/monitors-hosts/vsphere.md:29
msgid "Controls whether a client verifies the server's certificate chain and host name. The default value is `false`."
msgstr "クライアントがサーバの証明書チェーンとホスト名を検証するかどうかを制御する。デフォルト値は`false` 。"

#: ../../gdi/monitors-databases/sap-hana.md:23
msgid "`rootCAFiles`"
msgstr "`rootCAFiles`"

#: ../../gdi/monitors-databases/sap-hana.md:23
msgid "Path to root certificate(s) (optional)"
msgstr "ルート証明書へのパス（オプション"

#: ../../gdi/monitors-databases/sap-hana.md:70
msgid "These are the metrics and dimensions available for this integration:"
msgstr "これらは、この統合で利用可能なメトリクスとディメンジョンです："

#: ../../gdi/monitors-databases/sql.md:3 ../../gdi/opentelemetry/collector-architecture.rst:88
msgid "SQL"
msgstr "SQL"

#: ../../gdi/monitors-databases/sql.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the SQL monitor type to gather database usage metrics from SQL queries on your databases."
msgstr "Ref}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent receiver<smartagent-receiver>` と SQL monitor type を使用して、データベース上の SQL クエリからデータベース使用状況メトリクスを収集します。"

#: ../../gdi/monitors-databases/sql.md:9 ../../gdi/monitors-hosts/supervisor.md:9 ../../gdi/monitors-network/snmp.md:9
msgid "This integration is available for Kubernetes, Windows, and Linux."
msgstr "この統合はKubernetes、Windows、Linuxで利用できる。"

#: ../../gdi/monitors-databases/sql.md:48 ../../gdi/monitors-languages/expvar.md:49 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:13
msgid "The following tables show the configuration options for this monitor:"
msgstr "以下の表は、このモニターの設定オプションを示しています："

#: ../../gdi/monitors-databases/sql.md:23
msgid "`queries`"
msgstr "`クエリ`"

#: ../../gdi/monitors-databases/sql.md:23
msgid "A list of queries that generate data points."
msgstr "データポイントを生成するクエリのリスト。"

#: ../../gdi/monitors-databases/sql.md:23
msgid "Host or address of the SQL instance."
msgstr "SQLインスタンスのホストまたはアドレス。"

#: ../../gdi/monitors-databases/sql.md:23
msgid "Port of the SQL instance. The default value is `0`."
msgstr "SQL インスタンスのポート。デフォルト値は`0` 。"

#: ../../gdi/monitors-databases/sql.md:23
msgid "Replaceable parameters, in the form of key-value pairs. The system inserts the values into `connectionString` for a specified key, using Go template syntax. For example, `{{.key}}`."
msgstr "キーと値のペアの形式で、置き換え可能なパラメータ。システムは、Go テンプレート構文を使用して、指定されたキーの値を`connectionString` に挿入します。例えば、`{{.key}}` 。"

#: ../../gdi/monitors-databases/sql.md:23
msgid "`dbDriver`"
msgstr "`dbDriver`"

#: ../../gdi/monitors-databases/sql.md:23
msgid "The database driver to use. Valid values are `postgres`, `mysql`, `sqlserver`, and `snowflake`."
msgstr "使用するデータベースドライバ。有効な値は、`postgres` 、`mysql` 、`sqlserver` 、`snowflake` 。"

#: ../../gdi/monitors-databases/sql.md:23
msgid "Connection string and replaceable parameters used to connect to the database. To learn more, see the list of connection string parameters for the Go `pq` package."
msgstr "データベースへの接続に使用される接続文字列と置換可能なパラメータ。詳しくは、Go`pq` パッケージの接続文字列パラメータのリストを参照してください。"

#: ../../gdi/monitors-databases/sql.md:23
msgid "(default: `false`) If true, log query results infolevel."
msgstr "(デフォルト:`false`) true の場合、クエリ結果の infolevel を記録する。"

#: ../../gdi/monitors-databases/sql.md:60
msgid "The nested `queries` configuration object has the following fields:"
msgstr "ネストされた`クエリー` コンフィギュレーション・オブジェクトには以下のフィールドがある："

#: ../../gdi/monitors-databases/sql.md:23
msgid "`query`"
msgstr "`クエリー`"

#: ../../gdi/monitors-databases/sql.md:23
msgid "An SQL query text that selects one or more rows from a database."
msgstr "データベースから1つ以上の行を選択するSQLクエリ・テキスト。"

#: ../../gdi/monitors-databases/sql.md:23
msgid "`list of values`"
msgstr "`値リスト`"

#: ../../gdi/monitors-databases/sql.md:23
msgid "Optional parameters that replace placeholders in the query string."
msgstr "クエリ文字列のプレースホルダを置き換えるオプションのパラメータ。"

#: ../../gdi/monitors-databases/sql.md:23 ../../gdi/monitors-languages/expvar.md:24
msgid "`metrics`"
msgstr "`metrics`"

#: ../../gdi/monitors-databases/sql.md:23
msgid "Metrics generated from the query."
msgstr "クエリから生成されたメトリクス。"

#: ../../gdi/monitors-databases/sql.md:23
msgid "`datapointExpressions`"
msgstr "`datapointExpressions`"

#: ../../gdi/monitors-databases/sql.md:23
msgid "A set of expressions that convert each row to a set of metrics. Each of these run for each row in the query result set, allowing you to generate multiple data points per row. Each expression must evaluate to a single data point or nil."
msgstr "各行をメトリクスのセットに変換する式のセット。これらはそれぞれ、クエリ結果セットの各行に対して実行され、行ごとに複数のデータポイントを生成することができます。各式は、1つのデータ・ポイントまたはnilに評価されなければならない。"

#: ../../gdi/monitors-databases/sql.md:69
msgid "The nested `metrics` configuration object has the following fields:"
msgstr "ネストされた`メトリクス` 構成オブジェクトには以下のフィールドがある："

#: ../../gdi/monitors-databases/sql.md:23
msgid "The name of the metric as it appears in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud に表示されるメトリック名。"

#: ../../gdi/monitors-databases/sql.md:23
msgid "`valueColumn`"
msgstr "`valueColumn`"

#: ../../gdi/monitors-databases/sql.md:23
msgid "The column name that holds the data point value."
msgstr "データポイントの値を保持するカラム名。"

#: ../../gdi/monitors-databases/sql.md:23
msgid "`dimensionColumns`"
msgstr "`dimensionColumns`"

#: ../../gdi/monitors-databases/sql.md:23
msgid "The names of the columns that make up the dimensions of the data point."
msgstr "データ・ポイントの次元を構成する列の名前。"

#: ../../gdi/monitors-databases/sql.md:23
msgid "`isCumulative`"
msgstr "`isCumulative`"

#: ../../gdi/monitors-databases/sql.md:23
msgid "Whether the value is a cumulative counters (true) or gauge (false). If you set this to the wrong value and send in your first data point for the metric name with the wrong type, you have to manually change the type, as it is set in the system based on the first type seen. The default value is `false`."
msgstr "値が累積カウンタ（true）かゲージ（false）か。これを間違った値に設定し、メトリック名の最初のデータポイントを間違ったタイプで送信した場合、最初に見たタイプに基づいてシステムで設定されるため、手動でタイプを変更する必要があります。デフォルト値は`false` 。"

#: ../../gdi/monitors-databases/sql.md:23
msgid "`dimensionPropertyColumns`"
msgstr "`dimensionPropertyColumns`"

#: ../../gdi/monitors-databases/sql.md:23
msgid "`map of lists`"
msgstr "`リストマップ`"

#: ../../gdi/monitors-databases/sql.md:23
msgid "Mapping between dimensions and the columns to be used to attach corresponding properties."
msgstr "ディメンジョンと、対応するプロパティをアタッチするために使用する列との間のマッピング。"

#: ../../gdi/monitors-databases/sql.md:79
msgid "Supported drivers"
msgstr "対応ドライバー"

#: ../../gdi/monitors-databases/sql.md:81
msgid "You must specify the `dbDriver` option that contains the name of the database driver to use. These names are the same as the name of the Golang SQL driver used in the agent. The monitor formats the `connectionString` according to the driver you specify."
msgstr "`dbDriver` オプションに、使用するデータベース・ドライバ名を指定する必要があります。これらの名前は、エージェントで使用されている Golang SQL ドライバの名前と同じです。モニターは、指定されたドライバーに従って`connectionString` をフォーマットする。"

#: ../../gdi/monitors-databases/sql.md:84
msgid "Please be sure to use the correct connection string syntax based on the driver you're using. For example, if you use the `mysql` driver, you must use the connection string syntax for the `mysql` driver."
msgstr "使用するドライバに応じて、正しい接続文字列構文を使用してください。例えば、`mysql` ドライバを使用する場合、`mysql` ドライバの接続文字列構文を使用する必要があります。"

#: ../../gdi/monitors-databases/sql.md:87
msgid "This is the list of the drivers currently supported:"
msgstr "これは現在サポートされているドライバーのリストです："

#: ../../gdi/monitors-databases/sql.md:89
msgid "[`hana`](https://github.com/SAP/go-hdb)"
msgstr "[`hana`](https://github.com/SAP/go-hdb)"

#: ../../gdi/monitors-databases/sql.md:90
msgid "[`sqlserver`](https://pkg.go.dev/github.com/denisenkom/go-mssqldb)"
msgstr "[`sqlserver`](https://pkg.go.dev/github.com/denisenkom/go-mssqldb)"

#: ../../gdi/monitors-databases/sql.md:91
msgid "[`mysql`](https://pkg.go.dev/github.com/go-sql-driver/mysql)"
msgstr "[`mysql`](https://pkg.go.dev/github.com/go-sql-driver/mysql)"

#: ../../gdi/monitors-databases/sql.md:92
msgid "[`postgres`](https://pkg.go.dev/github.com/jackc/pgx)"
msgstr "[`postgres`](https://pkg.go.dev/github.com/jackc/pgx)"

#: ../../gdi/monitors-databases/sql.md:93
msgid "[`pq`](https://pkg.go.dev/github.com/lib/pq)"
msgstr "[`pq`](https://pkg.go.dev/github.com/lib/pq)"

#: ../../gdi/monitors-databases/sql.md:94
msgid "[`snowflake`](https://pkg.go.dev/github.com/snowflakedb/gosnowflake)"
msgstr "[`snowflake`](https://pkg.go.dev/github.com/snowflakedb/gosnowflake)"

#: ../../gdi/monitors-databases/sql.md:96
msgid "Parameterized connection string"
msgstr "パラメータ化された接続文字列"

#: ../../gdi/monitors-databases/sql.md:98
msgid "The integration treats the value of `connectionString` as a Golang template with a context consisting of the variables `host` and `port` and all the parameters from the `params` option. To add a variable to the template, use the Golang `{{.varname}}` template syntax."
msgstr "統合は、`connectionString` の値を、`host` と`port` の変数と、`params` オプションのすべてのパラメータからなるコンテキストを持つGolangテンプレートとして扱います。テンプレートに変数を追加するには、Golang`{{.varname}}` テンプレート構文を使います。"

#: ../../gdi/monitors-databases/sql.md:100 ../../gdi/monitors-languages/genericjmx.md:48
msgid "See the following example:"
msgstr "次の例をご覧ください："

#: ../../gdi/monitors-databases/sql.md:116
msgid "Collect Snowflake performance and usage metrics"
msgstr "Snowflakeのパフォーマンスと使用状況のメトリクスを収集する"

#: ../../gdi/monitors-databases/sql.md:118
msgid "To configure the agents to collect Snowflake performance and usage metrics, do the following:"
msgstr "Snowflakeのパフォーマンスと使用状況のメトリクスを収集するようにエージェントを構成するには、以下の手順を実行します："

#: ../../gdi/monitors-databases/sql.md:120
msgid "Copy the `pkg/sql/snowflake-metrics.yaml` file from the `sql` monitor repo into the same location as your `agent.yaml` file. For example, `/etc/splunk`. Find the latest version of `snowflake-metrics.yaml` [in our GitHub repo](https://github.com/splunk/observability-content-contrib/blob/main/dashboards-and-dashboard-groups/snowflakedb/Configuration/snowflake-metrics.yaml)."
msgstr "`pkg/sql/snowflake-metrics.yaml` ファイルを`sql` monitor repo から`agent.yaml` ファイルと同じ場所にコピーします。例えば、`/etc/splunk`.最新版の`snowflake-metrics.yaml` [は、GitHubのリポジトリ](https://github.com/splunk/observability-content-contrib/blob/main/dashboards-and-dashboard-groups/snowflakedb/Configuration/snowflake-metrics.yaml) にあります。"

#: ../../gdi/monitors-databases/sql.md:121
msgid "Configure the SQL monitor as follows:"
msgstr "SQLモニターを以下のように設定する："

#: ../../gdi/monitors-databases/sql.md:141
msgid "You can also copy the contents of `snowflake-metrics.yaml` into `agent.yaml` under `queries`. Edit `snowflake-metrics.yaml` to only include the metrics you want to monitor."
msgstr "また、`snowflake-metrics.yaml` の内容を`agent.yaml` ` queries` の下にコピーすることもできます。`snowflake-metrics.yaml` を編集し、監視したいメトリクスのみを含める。"

#: ../../gdi/monitors-databases/sql.md:143
msgid "Using the monitor"
msgstr "モニターの使用"

#: ../../gdi/monitors-databases/sql.md:145
msgid "Consider the following `customers` database table:"
msgstr "次の`customers` データベーステーブルを考えてみよう："

#: ../../gdi/monitors-databases/sql.md:83
msgid "id"
msgstr "アイドル"

#: ../../gdi/monitors-databases/sql.md:83
msgid "name"
msgstr "名称"

#: ../../gdi/monitors-databases/sql.md:83
msgid "country"
msgstr "country"

#: ../../gdi/monitors-databases/sql.md:83 ../../gdi/opentelemetry/otel-commands.rst:541 ../../gdi/smart-agent/smart-agent-commands.rst:532
msgid "status"
msgstr "ステータス"

#: ../../gdi/monitors-databases/sql.md:83 ../../gdi/opentelemetry/kubernetes-config-logs.rst:141 ../../gdi/opentelemetry/kubernetes-config-logs.rst:146 ../../gdi/opentelemetry/kubernetes-config-logs.rst:151
msgid "1"
msgstr "1"

#: ../../gdi/monitors-databases/sql.md:83
msgid "Bill"
msgstr "ビル"

#: ../../gdi/monitors-databases/sql.md:83
msgid "USA"
msgstr "USA"

#: ../../gdi/monitors-databases/sql.md:83
msgid "active"
msgstr "アクティブ"

#: ../../gdi/monitors-databases/sql.md:83
msgid "2"
msgstr "2"

#: ../../gdi/monitors-databases/sql.md:83
msgid "Mary"
msgstr "メアリー"

#: ../../gdi/monitors-databases/sql.md:83
msgid "inactive"
msgstr "不活発"

#: ../../gdi/monitors-databases/sql.md:83 ../../gdi/opentelemetry/kubernetes-config-logs.rst:163
msgid "3"
msgstr "3"

#: ../../gdi/monitors-databases/sql.md:83
msgid "Joe"
msgstr "ジョー"

#: ../../gdi/monitors-databases/sql.md:83
msgid "4"
msgstr "4"

#: ../../gdi/monitors-databases/sql.md:83
msgid "Elizabeth"
msgstr "エリザベス"

#: ../../gdi/monitors-databases/sql.md:83
msgid "Germany"
msgstr "ドイツ"

#: ../../gdi/monitors-databases/sql.md:154
msgid "Use the following monitor configuration to generate metrics about active users and customer counts by country:"
msgstr "以下のモニター設定を使用して、国別のアクティブ・ユーザー数と顧客数のメトリクスを生成します："

#: ../../gdi/monitors-databases/sql.md:179
msgid "When you use this configuration, you get series of MTS, all with the metric name `customers`. Each MTS has a `county` and `status` dimension. The dimension value is the number of customers that belong to that combination of `country` and `status`. You can also specify multiple `metrics` items to generate more than one metric from a single query."
msgstr "このコンフィギュレーションを使用すると、メトリック名`customers` を持つ一連のMTSが得られる。各 MTS には、`郡` および`状態` ディメンジョンがある。ディメンジョン値は、`country` および`status` の組み合わせに属する顧客数である。また、`メトリクス` 項目を複数指定して、1 つのクエリから複数のメトリクスを生成することもできます。"

#: ../../gdi/monitors-databases/sql.md:181
msgid "Using metric expressions"
msgstr "メトリック表現の使用"

#: ../../gdi/monitors-databases/sql.md:183
msgid "If you need to do more complex logic than mapping columns to metric values and dimensions, use the `datapointExpressions` option that's available for individual metric configurations. Create more sophisticated logic to derive data points from individual rows by using the `expr` expression language. These expressions must evaluate to data points created by the `GAUGE` or `CUMULATIVE` helper functions available in the expression's context. You can also have the expression evaluate to `nil` if you don't need to generate a data point for a particular row."
msgstr "列をメトリック値や寸法にマッピングするよりも複雑なロジックを実行する必要がある場合は、個々のメトリック構成で利用可能な`datapointExpressions` オプションを使用してください。`expr` 式言語を使用して、個々の行からデータポイントを導き出す、より洗練されたロジックを作成します。これらの式は、式のコンテキストで利用可能な`GAUGE` または`CUMULATIVE` ヘルパー関数によって作成されたデータポイントに対して評価されなければなりません。特定の行のデータ・ポイントを生成する必要がない場合は、式を`nil` と評価させることもできる。"

#: ../../gdi/monitors-databases/sql.md:185
msgid "Both the `GAUGE` and `CUMULATIVE` functions have the following signature:"
msgstr "`GAUGE` と`CUMULATIVE` の両関数は以下のシグネチャーを持つ："

#: ../../gdi/monitors-databases/sql.md:187
msgid "(`metricName`, `dimensions`, `value`)"
msgstr "(`metricName`,`dimensions`,`value`)"

#: ../../gdi/monitors-databases/sql.md:189
msgid "`metricName`: Must be a string"
msgstr "`metricName` ：文字列でなければならない"

#: ../../gdi/monitors-databases/sql.md:190
msgid "`dimensions`: Must be a map of string keys and values, and"
msgstr "`dimensions` ：文字列のキーと値のマップでなければならない。"

#: ../../gdi/monitors-databases/sql.md:191
msgid "`value`: Must be a numeric value."
msgstr "`値` ：数値でなければならない。"

#: ../../gdi/monitors-databases/sql.md:193
msgid "Each of the columns in the row maps to a variable in the context of the expression with the same name. For example, if you have a column called `name` in your SQL query result, you can use a variable called `name` in the expression. In your expression, surround string values with single quotes (`''`)."
msgstr "行の各列は、同じ名前の式のコンテキストの変数にマッピングされる。例えば、SQLクエリの結果に`name` というカラムがある場合、`name` という変数を式の中で使うことができます。式の中では、文字列の値をシングルクォート (`''`) で囲みます。"

#: ../../gdi/monitors-databases/sql.md:198 ../../gdi/monitors-network/snmp.md:140
msgid "This integration doesn't produce any metrics."
msgstr "この統合はメトリックスを生成しない。"

#: ../../gdi/monitors-gitlab/gitlab.md:3 ../../gdi/opentelemetry/collector-architecture.rst:100
msgid "GitLab"
msgstr "GitLab"

#: ../../gdi/monitors-gitlab/gitlab.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the GitLab monitor type to monitor GitLab."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` を GitLab モニタタイプで使用して GitLab を監視する。"

#: ../../gdi/monitors-gitlab/gitlab.md:9
msgid "GitLab is bundled with [Prometheus exporters](https://docs.gitlab.com/ee/administration/monitoring/prometheus/index.html), which can be configured to export performance metrics of itself and of the bundled software that GitLab depends on. These exporters publish Prometheus metrics at endpoints that are scraped by this monitor type."
msgstr "GitLabには[Prometheus exporters](https://docs.gitlab.com/ee/administration/monitoring/prometheus/index.html) がバンドルされており、GitLab自身とGitLabが依存するバンドル・ソフトウェアのパフォーマンス・メトリクスをエクスポートするように設定することができます。これらのエクスポータは、このモニタ・タイプによってスクレイピングされるエンドポイントで Prometheus メトリクスを公開します。"

#: ../../gdi/monitors-gitlab/gitlab.md:11
msgid "This integration allows you to monitor the following:"
msgstr "この統合により、以下をモニターすることができる："

#: ../../gdi/monitors-gitlab/gitlab.md:13
msgid "Gitaly and Gitaly Cluster: Gitaly is a git remote procedure call (RPC) service for handling all git calls made by GitLab. This monitor scrapes the Gitlab Gitaly git RPC server."
msgstr "GitalyとGitaly Cluster：Gitalyは、GitLabで行われるすべてのgitコールを処理するためのgitリモートプロシージャコール(RPC)サービスです。このモニターは Gitlab Gitaly git RPC サーバーをスクレイピングします。"

#: ../../gdi/monitors-gitlab/gitlab.md:14
msgid "GitLab Runner: GitLab Runner can be monitored using Prometheus. See the GitLab Runner documentation on [GitLab Docs](https://docs.gitlab.com/) for more information."
msgstr "GitLab Runner：GitLab RunnerはPrometheusを使って監視することができます。詳しくは[GitLab Docs](https://docs.gitlab.com/) の GitLab Runner ドキュメントをご覧ください。"

#: ../../gdi/monitors-gitlab/gitlab.md:15
msgid "GitLab Sidekiq: It scrapes the Gitlab Sidekiq Prometheus Exporter."
msgstr "GitLab Sidekiq：Gitlab Sidekiq Prometheus Exporterをスクレイピングします。"

#: ../../gdi/monitors-gitlab/gitlab.md:16
msgid "GitLab Unicorn server: It comes with a Prometheus exporter. The IP address of the container or host needs to be allowed for the collector to access the endpoint. See the `IP allowlist` documentation on [GitLab Docs](https://docs.gitlab.com/) for more information."
msgstr "GitLab Unicornサーバー：Prometheus エクスポーターが付属しています。コレクタがエンドポイントにアクセスするには、コンテナまたはホストの IP アドレスを許可する必要がある。詳細は`IP allowlist` documentation on[GitLab Docs](https://docs.gitlab.com/) を参照。"

#: ../../gdi/monitors-gitlab/gitlab.md:17
msgid "GitLab Workhorse: The GitLab service that handles slow HTTP requests. Workhorse includes a built-in Prometheus exporter that this monitor hits to gather metrics."
msgstr "GitLab Workhorse: 低速なHTTPリクエストを処理するGitLabサービス。Workhorseには、このモニターがメトリクスを収集するために使用するPrometheusエクスポーターが組み込まれています。"

#: ../../gdi/monitors-gitlab/gitlab.md:19
msgid "This monitor type is available on Kubernetes, Linux, and Windows using GitLab version 9.3 or higher."
msgstr "このモニタータイプは、GitLabバージョン9.3以降を使用するKubernetes、Linux、Windowsで利用可能です。"

#: ../../gdi/monitors-gitlab/gitlab.md:31
msgid "GitLab configuration"
msgstr "GitLabの設定"

#: ../../gdi/monitors-gitlab/gitlab.md:33
msgid "Follow the instructions on [Monitoring GitLab with Prometheus](https://docs.gitlab.com/ee/administration/monitoring/prometheus/index.html) to configure the GitLab Prometheus exporters to expose metric endpoint targets. For the GitLab Runner monitoring configuration, see [GitLab Runner monitoring](https://docs.gitlab.com/runner/monitoring/)."
msgstr "[Monitoring GitLab with Prometheus](https://docs.gitlab.com/ee/administration/monitoring/prometheus/index.html) の指示に従って、GitLab Prometheus エクスポーターを設定し、メトリックエンドポイントターゲットを公開する。GitLab Runnerのモニタリング設定については、[GitLab Runner monitoring](https://docs.gitlab.com/runner/monitoring/) を参照。"

#: ../../gdi/monitors-gitlab/gitlab.md:35
msgid "If you configue GitLab by editing `/etc/gitlab/gitlab.rb`, you need to run the command `gitlab-ctl reconfigure` for the changes to take effect."
msgstr "`/etc/gitlab/gitlab.rb` を編集してGitLabを設定した場合、変更を有効にするには`gitlab-ctl reconfigure` コマンドを実行する必要があります。"

#: ../../gdi/monitors-gitlab/gitlab.md:37
msgid "If you configue nginx by editing the file `/var/opt/gitlab/nginx/conf/nginx-status.conf`, you need to run the command `gitlab-ctl restart`. Note that changes to the configuration file `/var/opt/gitlab/nginx/conf/nginx-status.conf` in particular are erased by subsequent runs of `gitlab-ctl reconfigure` because `gitlab-ctl reconfigure` restores the original configuration file."
msgstr "`/var/opt/gitlab/nginx/conf/nginx-status.conf` を編集して nginx を設定した場合は、`gitlab-ctl restart` を実行する必要があります。特に設定ファイル`/var/opt/gitlab/nginx/conf/nginx-status.conf` の変更は、`gitlab-ctl reconfigure` の実行によって消去されることに注意してください。これは`gitlab-ctl reconfigure` が元の設定ファイルを復元するからです。"

#: ../../gdi/monitors-gitlab/gitlab.md:39
msgid "The following table shows some of the Prometheus endpoint targets with links to their respective configuration pages."
msgstr "次の表は、Prometheus のエンドポイントターゲットの一部と、それぞれの設定ページへのリンクを示しています。"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "Monitor type"
msgstr "モニタータイプ"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "Reference"
msgstr "参考"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "Default port"
msgstr "デフォルトポート"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "Standard path"
msgstr "標準パス"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "`gitlab-exporter`"
msgstr "`gitlab-exporter`"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "[GitLab exporter](https://docs.gitlab.com/ee/administration/monitoring/prometheus/gitlab_exporter.html)"
msgstr "[GitLab エクスポーター](https://docs.gitlab.com/ee/administration/monitoring/prometheus/gitlab_exporter.html)"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "9168"
msgstr "9168"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "/metrics"
msgstr "/メトリックス"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "`gitlab-gitaly`"
msgstr "`gitlab-gitaly`"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "Gitaly and Gitaly Cluster"
msgstr "ジタリーおよびジタリー・クラスター"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "9236"
msgstr "9236"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "`gitlab-runner`"
msgstr "`gitlab-runner`"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "GitLab Runner"
msgstr "GitLab Runner"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "9252"
msgstr "9252"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "`gitlab-sidekiq`"
msgstr "`gitlab-sidekiq`"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "GitLab SideKiq"
msgstr "GitLab SideKiq"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "8082"
msgstr "8082"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "`gitlab-unicorn`"
msgstr "`gitlab-unicorn`"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "GitLab Unicorn"
msgstr "GitLab Unicorn"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "8080"
msgstr "8080"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "/-/metrics"
msgstr "/-/metrics"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "`gitlab-workhorse`"
msgstr "`gitlab-workhorse`"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "GitLab Workhorse"
msgstr "GitLab Workhorse"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "9229"
msgstr "9229"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "`prometheus/nginx-vts`"
msgstr "`prometheus/nginx-vts`"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "[Monitoring GitLab with Prometheus](https://docs.gitlab.com/ee/administration/monitoring/prometheus/index.html)"
msgstr "[PrometheusでGitLabを監視する](https://docs.gitlab.com/ee/administration/monitoring/prometheus/index.html)"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "8060"
msgstr "8060"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "`prometheus/node`"
msgstr "`prometheus/node`"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "[Node exporter](https://docs.gitlab.com/ee/administration/monitoring/prometheus/node_exporter.html)"
msgstr "[ノードエクスポーター](https://docs.gitlab.com/ee/administration/monitoring/prometheus/node_exporter.html)"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "9100"
msgstr "9100"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "`prometheus/postgres`"
msgstr "`prometheus/postgres`"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "[PostgreSQL Server Exporter](https://docs.gitlab.com/ee/administration/monitoring/prometheus/postgres_exporter.html)"
msgstr "[PostgreSQL Server Exporter](https://docs.gitlab.com/ee/administration/monitoring/prometheus/postgres_exporter.html)"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "9187"
msgstr "9187"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "`prometheus/prometheus`"
msgstr "`prometheus/prometheus`"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "9090"
msgstr "9090"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "`prometheus/redis`"
msgstr "`プロメテウス／レディス`"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "[Redis exporter](https://docs.gitlab.com/ee/administration/monitoring/prometheus/redis_exporter.html)"
msgstr "[Redisエクスポーター](https://docs.gitlab.com/ee/administration/monitoring/prometheus/redis_exporter.html)"

#: ../../gdi/monitors-gitlab/gitlab.md:28
msgid "9121"
msgstr "9121"

#: ../../gdi/monitors-gitlab/gitlab.md:57
msgid "GitLab Prometheus exporters, nginx, and GitLab Runner must be configured to accept requests from the host or Docker container of the OpenTelemetry Collector. For example, the following configuration in `/etc/gitlab/gitlab.rb` configures the GitLab Postgres Prometheus exporter to allow network connections on port `9187` from any IP address:"
msgstr "GitLab Prometheus エクスポーター、nginx、GitLab Runner は、OpenTelemetry Collector のホストまたは Docker コンテナからのリクエストを受け付けるように設定する必要があります。例えば、`/etc/gitlab/gitlab.rb` にある以下の設定は、GitLab Postgres Prometheus エクスポーターがどのIPアドレスからでもポート`9187` でのネットワーク接続を許可するように設定するものです："

#: ../../gdi/monitors-gitlab/gitlab.md:64
msgid "Or"
msgstr "あるいは"

#: ../../gdi/monitors-gitlab/gitlab.md:70
msgid "The following excerpt from the file `/var/opt/gitlab/nginx/conf/nginx-status.conf` shows the `location /metrics` block for metric related configuration. This file configures nginx. The statement `allow 172.17.0.0/16;` allows network connection in the `172.17.0.0/16` IP range. The assumption is that the IP address associated with the OpenTelemetry Collector is in that IP range."
msgstr "`/var/opt/gitlab/nginx/conf/nginx-status.confからの抜粋です。` は、`/metrics` 、メトリック関連の設定を行うブロックを示しています。このファイルはnginxを設定する。`allow 172.17.0.0/16;` は、`172.17.0.0/16` IP範囲でのネットワーク接続を許可する。OpenTelemetry Collector に関連付けられた IP アドレスがその IP 範囲内にあることが前提です。"

#: ../../gdi/monitors-gitlab/gitlab.md:84
msgid "The following line is part of the global section of the file `/etc/gitlab-runner/config.toml`. This file configures GitLab Runner. The following statement configures GitLab Runner's Prometheus metrics HTTP server to allows network connection on port `9252` from any IP address:"
msgstr "次の行は、ファイル`/etc/gitlab-runner/config.toml` のグローバルセクションの一部です。このファイルはGitLab Runnerを設定します。以下のステートメントは、GitLab RunnerのPrometheusメトリクスHTTPサーバーが、どのIPアドレスからでもポート`9252` でのネットワーク接続を許可するように設定します："

#: ../../gdi/monitors-gitlab/gitlab.md:108
msgid "Next, add the services you want to monitor to the `service.pipelines.metrics.receivers` section of your configuration file:"
msgstr "次に、監視したいサービスを、設定ファイルの`service.pipelines.metrics.receivers` セクションに追加する："

#: ../../gdi/monitors-gitlab/gitlab.md:94
msgid "HTTP timeout duration for both read and writes. This should be a duration string that is accepted by [ParseDuration](https://golang.org/pkg/time/#ParseDuration). The default value is `10s`."
msgstr "読み込みと書き込みの両方のHTTPタイムアウト時間。これは、[ParseDuration](https://golang.org/pkg/time/#ParseDuration) が受け付ける期間文字列でなければならない。デフォルト値は`10s` 。"

#: ../../gdi/monitors-gitlab/gitlab.md:94
msgid "If `true`, the collector will connect to the server using HTTPS instead of plain HTTP. The default value is `false`."
msgstr "`true` の場合、コレクタはプレーン HTTP の代わりに HTTPS を使用してサーバーに接続します。デフォルト値は`false` 。"

#: ../../gdi/monitors-gitlab/gitlab.md:94
msgid "A map of HTTP header names to values. Comma-separated multiple values for the same message-header is supported."
msgstr "HTTPヘッダー名と値のマップ。カンマで区切られた、同じメッセージ・ヘッダーに対する複数の値がサポートされている。"

#: ../../gdi/monitors-gitlab/gitlab.md:94
msgid "If `useHTTPS` is `true` and this option is also `true`, the exporter's TLS cert will not be verified. The default value is `false`."
msgstr "`useHTTPS` が`true` であり、このオプションも`true` である場合、エクスポーターのTLS証明書は検証されない。デフォルト値は`false` 。"

#: ../../gdi/monitors-gitlab/gitlab.md:94
msgid "Use pod service account to authenticate. The default value is `false`."
msgstr "認証にはポッドサービスアカウントを使用します。デフォルト値は`false` 。"

#: ../../gdi/monitors-gitlab/gitlab.md:94
msgid "Path to the metrics endpoint on the exporter server, usually `/metrics`, which is the default value."
msgstr "エクスポーター・サーバー上のメトリクス・エンドポイントへのパス。通常は`/metrics` がデフォルト値です。"

#: ../../gdi/monitors-gitlab/gitlab.md:94
msgid "Send all the metrics that come out of the Prometheus exporter without any filtering. This option has no effect when using the Prometheus exporter monitor directly since there is no built-in filtering, only when embedding it in other monitors. The default value is `false`."
msgstr "Prometheus エクスポーターから出力されるすべてのメトリクスをフィルタリングなしで送信します。このオプションは、プロメテウス・エクスポーター・モニターを直接使用する場合には、ビルトイン・フィルタリングがないため効果がありません。デフォルト値は`false` 。"

#: ../../gdi/monitors-gitlab/gitlab.md:155 ../../gdi/monitors-hosts/collectd-uptime.md:48 ../../gdi/monitors-monitoring/prometheus-go.md:71 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:77 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:71
msgid "The following metrics are available for this integration."
msgstr "この統合では、以下のメトリクスを使用できます。"

#: ../../gdi/monitors-hosts/amazon-ecs-metadata.md:3
msgid "Amazon ECS Task Metadata endpoint"
msgstr "Amazon ECSタスク・メタデータ・エンドポイント"

#: ../../gdi/monitors-hosts/amazon-ecs-metadata.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `ecs-metadata` monitor type to read metadata and Docker stats from Amazon ECS Task Metadata Endpoint version 2. This integration does not currently support CPU share and quota metrics."
msgstr "参考}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参考}`Smart Agent receiver<smartagent-receiver>` と`ecs-metadata` monitor type を使用して、Amazon ECS Task Metadata Endpoint version 2 からメタデータと Docker stats を読み込む。この統合は現在、CPUシェアとクォータ・メトリクスをサポートしていません。"

#: ../../gdi/monitors-hosts/apache-httpserver.md:3
msgid "Apache HTTP Server"
msgstr "Apache HTTP Server"

#: ../../gdi/monitors-hosts/apache-httpserver.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Apache HTTP Server monitor type to monitor Apache web servers using information `mod_status` provides."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と Apache HTTP Server モニタータイプを使用して、`mod_status` が提供する情報を使用して Apache ウェブサーバーを監視する。"

#: ../../gdi/monitors-hosts/apache-httpserver.md:9
msgid "Apache worker threads can be in one of the following states:"
msgstr "Apache のワーカースレッドは、以下のいずれかの状態になります："

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "State"
msgstr "州"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Remark"
msgstr "備考"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Open"
msgstr "オープン"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Open (unused) slot - no process"
msgstr "オープン（未使用）スロット - プロセスなし"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Waiting"
msgstr "待機中"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Idle and waiting for request"
msgstr "アイドル状態でリクエスト待ち"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Sending"
msgstr "送信"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Serving response"
msgstr "サービス・レスポンス"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "KeepAlive"
msgstr "KeepAlive"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Kept alive for possible next request"
msgstr "次のリクエストのために生かしておく"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Idle_cleanup"
msgstr "Idle_cleanup"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Idle and marked for cleanup"
msgstr "アイドル、クリーンアップのためマーク"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Closing"
msgstr "クロージング"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Closing connection"
msgstr "クロージング・コネクション"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Logging"
msgstr "ロギング"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Writing to log file"
msgstr "ログファイルへの書き込み"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Reading"
msgstr "読書"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Reading request"
msgstr "閲覧希望"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Finishing"
msgstr "仕上げ"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Finishing as part of graceful shutdown"
msgstr "グレースフル・シャットダウンの一環としての終了"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Starting"
msgstr "スタート"

#: ../../gdi/monitors-hosts/apache-httpserver.md
msgid "Starting up to serve"
msgstr "サービス開始"

#: ../../gdi/monitors-hosts/apache-httpserver.md:51
msgid "Additional configuration options include host or port, as shown below. If `mod_status` is exposed on an endpoint other than `/mod_status`, you can use the url config option to specify the path:"
msgstr "その他の設定オプションには、以下に示すように、ホストまたはポートがある。`mod_status` が`/mod_status` 以外のエンドポイントで公開されている場合は、 url config オプションを使ってパスを指定することができる："

#: ../../gdi/monitors-hosts/apache-httpserver.md:71 ../../gdi/monitors-hosts/couchbase.md:27
msgid "The following configuration options are available for this integration:"
msgstr "この統合では、以下の設定オプションが使用できます："

#: ../../gdi/monitors-hosts/apache-httpserver.md:38
msgid "Options"
msgstr "オプション"

#: ../../gdi/monitors-hosts/apache-httpserver.md:38
msgid "The hostname of the Apache server"
msgstr "Apacheサーバのホスト名"

#: ../../gdi/monitors-hosts/apache-httpserver.md:38
msgid "The port number of the Apache server"
msgstr "Apacheサーバーのポート番号"

#: ../../gdi/monitors-hosts/apache-httpserver.md:38
msgid "This will be sent as the `plugin_instance` dimension and can be any name you like."
msgstr "これは、`plugin_instance` ディメンジョンとして送信され、好きな名前を付けることができる。"

#: ../../gdi/monitors-hosts/apache-httpserver.md:38
msgid "The URL, either a final URL or a Go template that will be populated with the host and port values. (**default:** `http://{{.Host}}:{{.Port}}/mod_status?auto`)"
msgstr "最終的なURLか、ホストとポートの値が入力されるGoテンプレートです。(**default:**`http://{.Host}}:{{.Port}}/mod_status?auto`)"

#: ../../gdi/monitors-hosts/apache-httpserver.md:84
msgid "After you've set up the Collector, follow these steps to configure the Apache web server to expose status metrics:"
msgstr "コレクタのセットアップが完了したら、以下の手順に従って、ステータス メトリックを公開するように Apache Web サーバを構成します："

#: ../../gdi/monitors-hosts/apache-httpserver.md:86
msgid "Activate the `mod_status` module in your Apache server. Make sure that the URL you provide for your `mod_status` module ends in `?auto`. This returns the status page as `text/plain`, which the monitor requires."
msgstr "Apache サーバで`mod_status` モジュールを有効にする。`mod_status` モジュールに提供する URL が`?auto` で終わっていることを確認してください。これはステータス・ページを`text/plain` として返す。"

#: ../../gdi/monitors-hosts/apache-httpserver.md:87
msgid "Add the following configuration to your Apache server:"
msgstr "以下の設定をApacheサーバーに追加する："

#: ../../gdi/monitors-hosts/apache-httpserver.md:94
msgid "Restart the Apache web server."
msgstr "Apacheウェブサーバーを再起動する。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:3
msgid "Apache Tomcat"
msgstr "Apache Tomcat"

#: ../../gdi/monitors-hosts/apache-tomcat.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Collectd Tomcat monitor type to monitor Tomcat. You must activate JMX Remote to monitor Tomcat remotely. See [GenericJMX](https://docs.splunk.com/Observability/gdi/monitors-languages/genericjmx.html) for more information."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と Collectd Tomcat monitor type を使用して Tomcat を監視する。Tomcatをリモートで監視するには、JMX Remoteを有効にする必要があります。詳しくは[GenericJMX](https://docs.splunk.com/Observability/gdi/monitors-languages/genericjmx.html) を参照。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:48
msgid "The following tables show the configuration options for this integration:"
msgstr "次の表は、この統合の設定オプションを示したものです："

#: ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-languages/genericjmx.md:23
msgid "The host to connect to. JMX must be configured for remote access and accessible from the agent."
msgstr "接続先のホスト。JMXはリモートアクセス用に設定され、エージェントからアクセスできなければならない。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "The JMX connection port. This is not the same as the remote method invocation (RMI) port on the application. This corresponds to the `com.sun.management.jmxremote.port` Java property to set on the JVM when running the application."
msgstr "JMX 接続ポート。これは、アプリケーションのリモート・メソッド呼び出し（RMI）ポートとは異なる。これは、アプリケーションの実行時に JVM に設定する`com.sun.management.jmxremote.port` Java プロパティに対応します。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "This is how the service type is identified in the UI so that you can get built-in content for it. For custom JMX integrations, it can be set to whatever you like."
msgstr "このようにしてUIでサービスタイプが識別され、そのサービス用の組み込みコンテンツを取得できるようになる。カスタムJMX統合の場合は、好きなように設定できる。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "The JMX connection string. This is rendered as a Go template and has access to the other values in this configuration. Note that under normal circumstances, it is not advised to set this string directly. Setting the host and port as specified above is preferred. The default value is `service:jmx:rmi:///jndi/rmi://{{.Host}}:{{.Port}}/jmxrmi`)."
msgstr "JMX 接続文字列。これはGoテンプレートとしてレンダリングされ、このコンフィギュレーションの他の値にアクセスできる。通常、この文字列を直接設定することは推奨されない。上記のようにホストとポートを設定するのが望ましい。デフォルト値は`service:jmx:rmi:///jndi/rmi://{.Host}}:{{.Port}}/jmxrmi`)。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "Prefixes the generated plugin instance with prefix. If a second `instancePrefix` is specified in a referenced MBean block, the prefix specified in the Connection block appears at the beginning of the plugin instance, and the prefix specified in the MBean block is appended to it."
msgstr "生成されたプラグインインスタンスにプレフィックスをつけます。参照されるMBeanブロックで2番目の`instancePrefix` が指定された場合、Connectionブロックで指定された接頭辞がプラグインインスタンスの先頭に現れ、MBeanブロックで指定された接頭辞がそれに追加される。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "The username to authenticate to the server."
msgstr "サーバーを認証するためのユーザー名。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "The user password to authenticate to the server."
msgstr "サーバーを認証するためのユーザー・パスワード。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "A list of the MBeans defined in `mBeanDefinitions` to actually collect. If not provided, then all defined MBeans are collected."
msgstr "実際に収集する`mBeanDefinitions` で定義された MBeans のリスト。提供されない場合、定義されたすべてのMBeansが収集される。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "A list of the MBeans to omit. This is useful in cases where only a few MBeans need to be omitted from the default list."
msgstr "省略するMBeansのリスト。これは、いくつかのMBeansだけをデフォルト・リストから除外する必要がある場合に便利である。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "`map of objects` (see below)"
msgstr "`オブジェクトのマップ` (下記参照)"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "Specifies how to map JMX MBean values to metrics. If using a specific service monitor such as Cassandra, Kafka, or ActiveMQ, they come pre-loaded with a set of mappings, and any that you add in this option are merged with those."
msgstr "JMX MBean の値をメトリックにマッピングする方法を指定します。Cassandra、Kafka、ActiveMQなど、特定のサービス・モニターを使用する場合、これらのサービスにはマッピングのセットがあらかじめ用意されており、このオプションで追加したマッピングは、それらのマッピングにマージされます。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:65 ../../gdi/monitors-languages/genericjmx.md:87 ../../gdi/monitors-messaging/apache-activemq.md:71 ../../gdi/monitors-messaging/apache-kafka.md:75
msgid "The **nested** `mBeanDefinitions` configuration object has the following fields:"
msgstr "nested**`mBeanDefinitions` 構成オブジェクトには以下のフィールドがあります："

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "Sets the pattern, which is used to retrieve MBeans from the MBeanServer. If more than one MBean is returned, use the `instanceFrom` option to make the identifiers unique."
msgstr "MBeanServerからMBeansを取得するために使われるパターンを設定する。複数のMBeanが返される場合、`instanceFrom` オプションを使用して識別子を一意にします。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29
msgid "Prefixes the generated plugin instance with prefix."
msgstr "生成されたプラグインインスタンスにプレフィックスをつけます。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "The object names used by JMX to identify MBeans include so called \"properties\", which are basically key-value-pairs. If the given object name is not unique and multiple MBeans are returned, the values of those properties usually differ. Use this option to build the plugin instance from the appropriate property values. This is optional and can be repeated to generate the plugin instance from multiple property values."
msgstr "JMXがMBeansを識別するために使用するオブジェクト名には、いわゆる \"プロパティ \"があり、これは基本的にキーと値のペアである。与えられたオブジェクト名が一意でなく、複数のMBeansが返される場合、それらのプロパティの値は通常異なる。このオプションを使用して、適切なプロパティ値からプラグイン・インスタンスを構築します。これはオプションで、複数のプロパティ値からプラグインインスタンスを生成するために繰り返すことができます。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "`list of objects` (see below)"
msgstr "`オブジェクトのリスト` (下記参照)"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "&nbsp;"
msgstr "&nbsp;"

#: ../../gdi/monitors-hosts/apache-tomcat.md:75 ../../gdi/monitors-languages/genericjmx.md:99 ../../gdi/monitors-messaging/apache-activemq.md:81 ../../gdi/monitors-messaging/apache-kafka.md:86
msgid "The **nested** `values` configuration object has the following fields:"
msgstr "nested**`values` コンフィギュレーション・オブジェクトには以下のフィールドがある："

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "Sets the data set used within collectd to handle the values of the MBean attribute."
msgstr "MBean属性の値を扱うためにcollectd内で使用されるデータセットを設定します。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-languages/genericjmx.md:23
msgid "Set to `true` if the returned attribute is a composite type. If set to `true`, the keys within the composite type are appended to the type instance. The default value is `false`."
msgstr "返された属性が複合型の場合、`true` に設定する。`true` に設定すると、複合型内のキーが型インスタンスに追加される。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23 ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29
msgid "Works like the option of the same name directly beneath the MBean block, but sets the type instance instead."
msgstr "MBeanブロックの真下にある同名のオプションのように働くが、代わりに型インスタンスを設定する。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "Sets the name of the attribute from which to read the value. You can access the keys of composite types by using a dot to concatenate the key name to the attribute name. For example, “attrib0.key42”. If `table` is set to `true`, then the path must point to a composite type, otherwise, it must point to a numeric type."
msgstr "値を読み込む属性名を設定します。ドットを使ってキー名と属性名を連結すれば、複合型のキーにアクセスできる。例えば、\"attrib0.key42\"。`テーブル` が`真の` に設定されている場合、パスは複合型を指し示す必要があり、そうでない場合は数値型を指し示す必要がある。"

#: ../../gdi/monitors-hosts/apache-tomcat.md:23
msgid "The plural form of the `attribute` configuration above. Used to derive multiple metrics from a single MBean."
msgstr "上記の`属性` 構成の複数形。単一の MBean から複数のメトリクスを導出するために使用されます。"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:3
msgid "Apache Zookeeper"
msgstr "Apache Zookeeper"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:6
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Apache Zookeeper monitor type to keep track of an Apache Zookeeper instance using the Zookeeper plugin."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と Apache Zookeeper monitor type を使用して、Zookeeper プラグインを使用して Apache Zookeeper インスタンスを追跡します。"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:10
msgid "The plugin supports Zookeeper 3.4.0 and higher."
msgstr "このプラグインは Zookeeper 3.4.0 以降をサポートしています。"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:48
msgid "The following table shows the configuration options for the Apache Zookeeper monitor:"
msgstr "Apache Zookeeper モニタの設定オプションを次の表に示します："

#: ../../gdi/monitors-hosts/apache-zookeeper.md:23 ../../gdi/monitors-languages/asp-dot-net.md:25
msgid "**Option**"
msgstr "**オプション"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:23 ../../gdi/monitors-languages/asp-dot-net.md:25
msgid "**Required**"
msgstr "**必須"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:23 ../../gdi/monitors-languages/asp-dot-net.md:25
msgid "**Type**"
msgstr "**タイプ"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:23 ../../gdi/monitors-languages/asp-dot-net.md:25
msgid "**Description**"
msgstr "**説明"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:23
msgid "This string contains a path to a python binary that you want to use to execute the Python code. If you don't set it, the system uses a built-in runtime will be used. The string can include arguments to the binary."
msgstr "この文字列には、Pythonコードの実行に使用するPythonバイナリへのパスを指定します。設定しなければ、システムは組み込みのランタイムを使用する。文字列にはバイナリーの引数を含めることができる。"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:23
msgid "This string specifies the host or IP address of the Apache Zookeeper node."
msgstr "この文字列は Apache Zookeeper ノードのホストまたは IP アドレスを指定します。"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:23
msgid "This value specifies the main port of the Zookeeper node."
msgstr "Zookeeper ノードのメインポートを指定します。"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:23
msgid "If you provide this string, the system inserts it as the value of the `plugin_instance` dimension for emitted"
msgstr "この文字列を指定すると、`plugin_instance` ディメンジョンの値として挿入されます。"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:68
msgid "Group leader metrics"
msgstr "グループリーダー指標"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:70
msgid "All of the following metrics are part of the `leader` metric group. To activate them, add `leader` to the `extraGroups` setting:"
msgstr "以下のメトリクスはすべて、`leader` メトリクス・グループの一部です。これらを有効にするには、`extraGroups` の設定に、`leader` を追加する："

#: ../../gdi/monitors-hosts/apache-zookeeper.md:72
msgid "`gauge.zk_followers`"
msgstr "`gauge.zk_followers`"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:73
msgid "`gauge.zk_pending_syncs`"
msgstr "`gauge.zk_pending_syncs`"

#: ../../gdi/monitors-hosts/apache-zookeeper.md:74
msgid "`gauge.zk_synced_followers`"
msgstr "`gauge.zk_synced_followers`"

#: ../../gdi/monitors-hosts/chrony.md:3
msgid "Chrony NTP"
msgstr "Chrony NTP"

#: ../../gdi/monitors-hosts/chrony.md:6
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Chrony NTP monitor type to monitor NTP data from a chrony server, such as clock skew and per-peer stratum. To talk to chronyd, this integration mimics what the chronyc control program does on the wire."
msgstr "Ref}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent receiver<smartagent-receiver>` と Chrony NTP monitor type を使用して、クロックスキューやピアごとのストラタムなど、chrony サーバーからの NTP データを監視します。chronydと会話するために、この統合はchronyc制御プログラムがワイヤー上で行うことを模倣している。"

#: ../../gdi/monitors-hosts/chrony.md:22
msgid "The hostname of the chronyd instance."
msgstr "chronydインスタンスのホスト名。"

#: ../../gdi/monitors-hosts/chrony.md:22
msgid "The UDP port number of the chronyd instance.  Defaults to 323 in collectd if unspecified."
msgstr "chronydインスタンスのUDPポート番号。 未指定の場合は collectd の 323 がデフォルトとなる。"

#: ../../gdi/monitors-hosts/chrony.md:22
msgid "How long to wait for a response from chronyd before considering it down. Defaults to 2 seconds in the collectd plugin if not specified."
msgstr "chronydからの返答を待って、どの程度で結論を出すか。指定がない場合、collectdプラグインのデフォルトは2秒である。"

#: ../../gdi/monitors-hosts/chrony.md:56 ../../gdi/monitors-hosts/collectd-plugin.md:59
msgid "The Splunk Distribution of OpenTelemetry Collector does not do any built-in filtering of metrics coming out of this integration."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションは、この統合から出力されるメトリクスに対して、組み込みのフィルタリングを行いません。"

#: ../../gdi/monitors-hosts/collectd-df.md:3
msgid "Collectd df"
msgstr "コレクテッドdf"

#: ../../gdi/monitors-hosts/collectd-df.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Collectd df monitor type to track free disk space on the host using the collectd df plugin."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` を Collectd df モニタタイプで使用し、collectd df プラグインを使用してホスト上のディスク空き容量を追跡します。"

#: ../../gdi/monitors-hosts/collectd-df.md:9
msgid "This integration is only available on Linux. Note a file system must be mounted in the same file system namespace that the agent is running in for this monitor to be able to collect statistics about that file system. This might be an issue when running the agent in a container."
msgstr "この統合はLinuxでのみ利用できる。このモニターがファイルシステムに関する統計情報を収集できるようにするには、エージェントが実行されているのと同じファイルシステムネームスペースにファイルシステムがマウントされていなければならないことに注意。これは、コンテナ内でエージェントを実行する際に問題となる可能性がある。"

#: ../../gdi/monitors-hosts/collectd-df.md:48
msgid "The following table shows the configuration options for the collectd/df monitor:"
msgstr "次の表に、collectd/df モニタの設定オプションを示します："

#: ../../gdi/monitors-hosts/collectd-df.md:23 ../../gdi/monitors-hosts/filesystems.md:7
msgid "`hostFSPath`"
msgstr "`hostFSPath`"

#: ../../gdi/monitors-hosts/collectd-df.md:23
msgid "Path to the root of the host file system.  Useful when running in a container and the host filesystem is mounted in some subdirectory under `/.`"
msgstr "ホスト・ファイルシステムのルートへのパス。 コンテナ内で実行していて、ホストのファイルシステムが`/ 以下のサブディレクトリにマウントされている場合に役立つ。`"

#: ../../gdi/monitors-hosts/collectd-df.md:23
msgid "`ignoreSelected`"
msgstr "`ignoreSelected`"

#: ../../gdi/monitors-hosts/collectd-df.md:23
msgid "If true, the file systems selected by `fsTypes` and `mountPoints` are excluded, and all others are included. The default value is `true`."
msgstr "trueの場合、`fsTypes` と`mountPoints` で選択されたファイルシステムは除外され、それ以外はすべて含まれる。デフォルト値は`true` 。"

#: ../../gdi/monitors-hosts/collectd-df.md:23 ../../gdi/monitors-hosts/filesystems.md:7
msgid "`fsTypes`"
msgstr "`fsTypes`"

#: ../../gdi/monitors-hosts/collectd-df.md:23
msgid "The file system types to include or exclude. The default values is `[aufs overlay tmpfs proc sysfs nsfs cgroup devpts selinuxfs devtmpfs debugfs mqueue hugetlbfs securityfs pstore binfmt_misc autofs]`."
msgstr "包含または除外するファイル・システム・タイプ。デフォルト値は`[aufs overlay tmpfs proc sysfs nsfs cgroup devpts selinuxfs devtmpfs debugfs mqueue hugetlbfs securityfs pstore binfmt_misc autofs]` 。"

#: ../../gdi/monitors-hosts/collectd-df.md:23 ../../gdi/monitors-hosts/filesystems.md:7
msgid "`mountPoints`"
msgstr "`mountPoints`"

#: ../../gdi/monitors-hosts/collectd-df.md:23
msgid "The mount paths to include or exclude, interpreted as a regular expression if surrounded by `/`.  Note that you need to include the full path as the agent sees it, irrespective of the hostFSPath option. The default value is `[/^/var/lib/docker/ /^/var/lib/rkt/pods/ /^/net// /^/smb//]`."
msgstr "`/` で囲まれた場合、正規表現として解釈されます。 hostFSPathオプションに関係なく、エージェントが認識するフルパスを含める必要があることに注意してください。デフォルト値は`[/^/var/lib/docker/ /^/var/lib/rkt/pods/ /^/net// /^/smb//]` 。"

#: ../../gdi/monitors-hosts/collectd-df.md:23
msgid "`reportByDevice`"
msgstr "`reportByDevice`"

#: ../../gdi/monitors-hosts/collectd-df.md:23 ../../gdi/monitors-hosts/host-processload.md:7
msgid "The default value is `false`."
msgstr "デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/collectd-df.md:23
msgid "`reportInodes`"
msgstr "`reportInodes`"

#: ../../gdi/monitors-hosts/collectd-df.md:23
msgid "`valuesPercentage`"
msgstr "`valuesPercentage`"

#: ../../gdi/monitors-hosts/collectd-df.md:23
msgid "Whether true percent based metrics are reported. The default value is `false`."
msgstr "真のパーセンテージベースの指標が報告されているかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/collectd-plugin.md:3
msgid "Collectd custom plugin"
msgstr "Collectd カスタムプラグイン"

#: ../../gdi/monitors-hosts/collectd-plugin.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `collectd/custom` monitor type to customize the collectd configuration of your managed collectd instances."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`collectd/custom` モニタタイプを使用して、管理している collectd インスタンスの collectd 設定をカスタマイズします。"

#: ../../gdi/monitors-hosts/collectd-plugin.md:23
msgid "This option is filled in by the agent if using service discovery. It can be accessed in the provided configuration template with `{{.Host}}`. This option is set to the hostname or IP address of the discovered service. If you aren't using service discovery, you can hard code the host/port in the configuration template and ignore these fields."
msgstr "サービスディスカバリーを使用する場合、このオプションはエージェントによって入力される。`{{.Host}}` で提供されるコンフィギュレーション・テンプレートでアクセスできる。このオプションには、検出されたサービスのホスト名またはIPアドレスが設定される。サービス・ディスカバリーを使用しない場合は、コンフィギュレーション・テンプレートでホスト/ポートをハードコードし、これらのフィールドを無視することができる。"

#: ../../gdi/monitors-hosts/collectd-plugin.md:23
msgid "This option is filled in by the agent if using service discovery. It can be accessed in the provided configuration template with `{{.Port}}`. This option is set to the port of the discovered service, if it is a TCP/UDP endpoint. (**default:** `0`)"
msgstr "サービスディスカバリーを使用する場合、このオプションはエージェントによって入力される。`{{.Port}}` を使って、提供されたコンフィギュレーション・テンプレートでアクセスできる。このオプションは、発見されたサービスがTCP/UDPエンドポイントである場合、そのポートに設定される。(**default:**`0`)"

#: ../../gdi/monitors-hosts/collectd-plugin.md:23
msgid "This option is filled in by the agent if using service discovery. It can be accessed in the provided configuration template with `{{.Name}}`. This option is set to the name that the observer creates for the endpoint upon discovery. You can generally ignore this field."
msgstr "サービスディスカバリーを使用する場合、このオプションはエージェントによって入力される。提供されたコンフィギュレーション・テンプレートで、`{{.Name}}` でアクセスできる。このオプションは、オブザーバーが発見時にエンドポイント用に作成する名前に設定されます。このフィールドは通常無視してよい。"

#: ../../gdi/monitors-hosts/collectd-plugin.md:23
msgid "`template`"
msgstr "`template`"

#: ../../gdi/monitors-hosts/collectd-plugin.md:23
msgid "A configuration template for collectd. You can include as many plugin blocks as you want in this value.  It is rendered as a standard Go template, so be mindful of the delimiters `{{` and `}}`."
msgstr "collectd の設定テンプレート。この値には好きなだけプラグインブロックを含めることができる。 標準的な囲碁テンプレートとしてレンダリングされるので、区切り文字`{{` and`}}` に注意してください。"

#: ../../gdi/monitors-hosts/collectd-plugin.md:23
msgid "A list of templates, but otherwise equivalent to the above `template` option. This lets you have a single directory with collectd configuration files and load them all by using a globbed remote configuration value."
msgstr "テンプレートのリストだが、それ以外は上記の`template` オプションと同じ。これにより、collectd設定ファイルのある単一のディレクトリを持ち、 globbedリモート設定値を使ってそれらをすべてロードすることができる。"

#: ../../gdi/monitors-hosts/collectd-plugin.md:23
msgid "`collectdReadThreads`"
msgstr "`collectdReadThreads`"

#: ../../gdi/monitors-hosts/collectd-plugin.md:23
msgid "The number of read threads to use in collectd. This option defaults to the number of templates provided, capped at 10, but if you manually specify it, there is no limit. (**default:** `0`)"
msgstr "collectd で使用する読み込みスレッドの数。このオプションのデフォルトは提供されたテンプレートの数で、上限は10ですが、手動で指定した場合は上限はありません。(**default:**`0`)"

#: ../../gdi/monitors-hosts/collectd-uptime.md:3
msgid "Collectd uptime"
msgstr "コレクテッド・アップタイム"

#: ../../gdi/monitors-hosts/collectd-uptime.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `collectd/uptime` monitor type to send a single metric of the total number of seconds the host has been up, using the collectd uptime plugin."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`collectd/uptime` モニタタイプを使用して、collectd uptime プラグインを使用して、ホストが稼働している合計秒数の単一メトリックを送信します。"

#: ../../gdi/monitors-hosts/coredns.md:3 ../../gdi/opentelemetry/collector-architecture.rst:98
msgid "CoreDNS"
msgstr "CoreDNS"

#: ../../gdi/monitors-hosts/coredns.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the CoreDNS monitor type to scrape Prometheus metrics exposed by CoreDNS."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を CoreDNS モニタータイプで使用し、CoreDNS が公開する Prometheus メトリクスをスクレイピングします。"

#: ../../gdi/monitors-hosts/coredns.md:9
msgid "The default port for these metrics are exposed on port 9153, at the `/metrics` path."
msgstr "これらのメトリクスのデフォルト・ポートは、`/metrics` パスのポート 9153 で公開されます。"

#: ../../gdi/monitors-hosts/coredns.md:46
msgid "Configure a Kubernetes environment"
msgstr "Kubernetes環境を構成する"

#: ../../gdi/monitors-hosts/coredns.md:48
msgid "Here is an example configuration for a Kubernetes environment:"
msgstr "以下はKubernetes環境の設定例である："

#: ../../gdi/monitors-hosts/coredns.md:23
msgid "HTTP timeout duration for both read and writes. Use a duration string that is accepted by https://golang.org/pkg/time/#ParseDuration (**default:** `10s`)"
msgstr "読み込みと書き込みの両方のHTTPタイムアウト時間。https://golang.org/pkg/time/#ParseDuration (**default:**`10s`) が受け付ける持続時間文字列を使用する。"

#: ../../gdi/monitors-hosts/coredns.md:23
msgid "If true, the agent connects to the server using HTTPS instead of plain HTTP. (**default:** `false`)"
msgstr "true の場合、エージェントはプレーン HTTP ではなく HTTPS を使用してサーバに接続します。(**default:**`false`)"

#: ../../gdi/monitors-hosts/coredns.md:23
msgid "If `useHTTPS` is `true` and this option is also `true`, the exporter TLS cert is not verified. (**default:** `false`)"
msgstr "`useHTTPS` が`true` であり、このオプションも`true` である場合、エクスポータTLS証明書は検証されない。(**default:**`false`)"

#: ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-hosts/elasticsearch-query.md:192 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "Path to the CA cert that has signed the TLS cert, unnecessary if `skipVerify` is set to false."
msgstr "TLS 証明書に署名した CA 証明書へのパス。`skipVerify` が false に設定されている場合は不要。"

#: ../../gdi/monitors-hosts/coredns.md:23 ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8
msgid "Send all the metrics that come out of the Prometheus exporter without any filtering. This option has no effect when using the Prometheus exporter monitor directly since there is no built-in filtering, only when embedding it in other monitors. (**default:** `false`)"
msgstr "Prometheus エクスポーターから出力されるすべてのメトリクスをフィルタリングなしで送信します。このオプションは、Prometheusエクスポータモニタを直接使用する場合には、組み込みのフィルタリングがないため効果がありません。(**default:**`false`)"

#: ../../gdi/monitors-hosts/couchbase.md:3
msgid "Couchbase server"
msgstr "Couchbaseサーバー"

#: ../../gdi/monitors-hosts/couchbase.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Couchbase server monitor type to collect metrics from Couchbase servers."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と Couchbase サーバーモニタータイプを使用して、Couchbase サーバーからメトリクスを収集します。"

#: ../../gdi/monitors-hosts/couchbase.md:23 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "Config option"
msgstr "設定オプション"

#: ../../gdi/monitors-hosts/couchbase.md:23
msgid "Path to a Python binary that should be used to execute the Python code. If not set, a built-in runtime will be used. This can include arguments to the binary as well."
msgstr "Pythonコードの実行に使用するPythonバイナリへのパス。設定されていない場合は、組み込みのランタイムが使用される。これにはバイナリーへの引数も含めることができる。"

#: ../../gdi/monitors-hosts/couchbase.md:23
msgid "`collectTarget`"
msgstr "`collectTarget`"

#: ../../gdi/monitors-hosts/couchbase.md:23
msgid "Define what the module block will monitor: `NODE` for a Couchbase node, or `BUCKET` for a Couchbase bucket."
msgstr "モジュールブロックが監視するものを定義します：`Couchbaseノードの場合はNODE` 、Couchbaseバケットの場合は`BUCKET` 。"

#: ../../gdi/monitors-hosts/couchbase.md:23
msgid "`collectBucket`"
msgstr "`collectBucket`"

#: ../../gdi/monitors-hosts/couchbase.md:23
msgid "If `collectTarget` is `BUCKET`, `collectBucket` specifies the name of the bucket that this will monitor."
msgstr "`collectTarget` が`BUCKET` の場合、`collectBucket` は、これが監視するバケツの名前を指定する。"

#: ../../gdi/monitors-hosts/couchbase.md:23 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "`clusterName`"
msgstr "`clusterName`"

#: ../../gdi/monitors-hosts/couchbase.md:23
msgid "Name of this Couchbase cluster. Defaults to `default`."
msgstr "このCouchbaseクラスタの名前。デフォルトは`` 。"

#: ../../gdi/monitors-hosts/couchbase.md:23
msgid "`collectMode`"
msgstr "`collectMode`"

#: ../../gdi/monitors-hosts/couchbase.md:23
msgid "Change to `detailed` to collect all available metrics from Couchbase stats API. Defaults to `default`, collecting a curated set that works well with SignalFx."
msgstr "Couchbase stats APIから利用可能なすべてのメトリックを収集するために、`詳細` に変更します。デフォルトは`デフォルトは` 、SignalFxでうまく動作するようにキュレートされたセットを収集します。"

#: ../../gdi/monitors-hosts/couchbase.md:23
msgid "Username to authenticate with"
msgstr "認証するユーザー名"

#: ../../gdi/monitors-hosts/couchbase.md:23
msgid "Password to authenticate with"
msgstr "認証用パスワード"

#: ../../gdi/monitors-hosts/cpu.md:3 ../../gdi/opentelemetry/collector-architecture.rst:61
msgid "CPU"
msgstr "CPU"

#: ../../gdi/monitors-hosts/cpu.md:8
msgid "If you're using the Splunk Distribution of OpenTelemetry Collector and want to collect CPU utilization metrics, use the native OTel component {ref}`host-metrics-receiver`."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを使用していて、CPU 使用率のメトリクスを収集したい場合は、ネイティブの OTel コンポーネント {ref}`host-metrics-receiver` を使用してください。"

#: ../../gdi/monitors-hosts/cpu.md:13 ../../gdi/monitors-hosts/disk.md:13
msgid "If you're still using this monitor with the Smart Agent (deprecated), these are the configuration options:"
msgstr "スマートエージェント（非推奨）でこのモニターをまだ使用している場合は、これらの設定オプションがあります："

#: ../../gdi/monitors-hosts/cpu.md:7
msgid "`reportPerCPU`"
msgstr "`reportPerCPU`"

#: ../../gdi/monitors-hosts/cpu.md:7
msgid "If `true`, stats are generated for the system as a whole _as well as_ for each individual CPU/core in the system, and are distinguished by the `cpu` dimension.  If `false`, stats are only generated for the system as a whole, and don't include a `cpu` dimension. (**default:** `false`)"
msgstr "`true` の場合、統計情報はシステム全体およびシステム内の各CPU/コアについて生成され、`cpu` 次元で区別される。 `false` の場合、統計はシステム全体に対してのみ生成され、`cpu` のディメンションは含まれない。(**default:**`false`)"

#: ../../gdi/monitors-hosts/cpufreq.md:4
msgid "CPUFreq"
msgstr "CPUFreq"

#: ../../gdi/monitors-hosts/cpufreq.md:8
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the CPUFreq monitor type to monitor the clock speed of each CPU on a host. This is useful for systems that vary the clock speed to save energy."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と CPUFreq モニタータイプを使用して、ホスト上の各 CPU のクロック速度を監視します。これは、エネルギーを節約するためにクロック速度を変化させるシステムに有効である。"

#: ../../gdi/monitors-hosts/disk.md:3
msgid "Disk and partition"
msgstr "ディスクとパーティション"

#: ../../gdi/monitors-hosts/disk.md:8
msgid "If you're using the Splunk Distribution of OpenTelemetry Collector and want to collect disk I/O metrics, use the native OTel component {ref}`host-metrics-receiver`."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを使用していて、ディスク I/O メトリクスを収集したい場合は、ネイティブ OTel コンポーネント {ref}`host-metrics-receiver` を使用してください。"

#: ../../gdi/monitors-hosts/disk.md:7 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:126
msgid "Disk"
msgstr "ディスク"

#: ../../gdi/monitors-hosts/disk.md:7
msgid "Include specific Disk(s)"
msgstr "特定のディスクを含む"

#: ../../gdi/monitors-hosts/disk.md:7
msgid "\"sda\" \"/^hd/\""
msgstr "\"sda\" \"/^hd/\""

#: ../../gdi/monitors-hosts/disk.md:7
msgid "IgnoreSelected"
msgstr "選択無視"

#: ../../gdi/monitors-hosts/disk.md:7
msgid "Ignore the designation of specific Disks"
msgstr "特定のディスクの指定を無視する"

#: ../../gdi/monitors-hosts/disk.md:7
msgid "`false`"
msgstr "`false`"

#: ../../gdi/monitors-hosts/docker.md:3
msgid "Docker Containers"
msgstr "Dockerコンテナ"

#: ../../gdi/monitors-hosts/docker.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `docker-container-stats` monitor type to read container stats from a Docker API server. Note it doesn't currently support CPU share/quota metrics."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバ<smartagent-receiver>` と`docker-container-stats` モニタタイプを使用して、Docker API サーバからコンテナの統計情報を読み取ります。現在、CPUシェア/クォータ・メトリクスはサポートしていない。"

#: ../../gdi/monitors-hosts/docker.md:9 ../../gdi/monitors-hosts/procstat.md:9 ../../gdi/monitors-monitoring/prometheus-node.md:9
msgid "This integration is available for Kubernetes, Linux, and Windows."
msgstr "この統合はKubernetes、Linux、Windowsで利用できる。"

#: ../../gdi/monitors-hosts/docker.md:26
msgid "If you're using this integration with the default Docker daemon domain socket, you might need to add the `splunk-otel-collector` user to the `docker` group to have permission to access the Docker API."
msgstr "この統合をデフォルトのDockerデーモンドメインソケットで使用している場合、`splunk-otel-collector` ユーザを`docker` グループに追加して、 Docker APIへのアクセス権限を持たせる必要があるかもしれません。"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "`enableExtraBlockIOMetrics`"
msgstr "`enableExtraBlockIOMetrics`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "Sends all extra block IO metrics. The default value is `false`"
msgstr "すべての余分なブロックIOメトリクスを送信する。デフォルト値は`false`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "`enableExtraCPUMetrics`"
msgstr "`enableExtraCPUMetrics`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "Sends all extra CPU metrics. The default value is `false`"
msgstr "すべての余分なCPUメトリクスを送信する。デフォルト値は`false`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "`enableExtraMemoryMetrics`"
msgstr "`enableExtraMemoryMetrics`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "Sends all extra memory metrics. The default value is `false`"
msgstr "余分なメモリ・メトリクスをすべて送信する。デフォルト値は`false`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "`enableExtraNetworkMetrics`"
msgstr "`enableExtraNetworkMetrics`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "Sends all extra network metrics. The default value is `false`"
msgstr "すべての余分なネットワーク・メトリックを送信します。デフォルト値は`false`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "`dockerURL`"
msgstr "`dockerURL`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "The URL of the docker server. The default value is `unix:///var/run/docker.sock`. For Windows, set it to `npipe:////.//pipe//docker_engine`."
msgstr "ドッカーサーバーのURL。デフォルト値は`unix:///var/run/docker.sock` 。Windowsの場合は、`npipe:///.//pipe//docker_engine` に設定する。"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "The maximum amount of time to wait for docker API requests. The default value is `5`"
msgstr "docker API リクエストの最大待機時間。デフォルト値は`5`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "`cacheSyncInterval`"
msgstr "`cacheSyncInterval`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "The time to wait before resyncing the list of containers the monitor maintains through the docker event listener. An example is `cacheSyncInterval: \"20m\"` The default value is `60m`"
msgstr "dockerイベントリスナーを通じてモニターが保持するコンテナのリストを再同期するまでの待機時間。例：`cacheSyncInterval: \"20m\"` デフォルト値は`60m`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "`labelsToDimensions`"
msgstr "`labelsToDimensions`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "A mapping of container label names to dimension names. The corresponding label values become the dimension value for the mapped name. For example, `io.kubernetes.container.name: container_spec_name` results in a dimension called `container_spec_name` that has the value of the `io.kubernetes.container.name` container label."
msgstr "コンテナ・ラベル名とディメンジョン名のマッピング。対応するラベルの値が、マッピングされた名前のディメンジョン値となる。たとえば、`io.kubernetes.container.name: container_spec_name` を指定すると、`container_spec_name` というディメンジョンになり、`io.kubernetes.container.name` コンテナ・ラベルの値を持つ。"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "`envToDimensions`"
msgstr "`envToDimensions`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "A mapping of container environment variable names to dimension names. The corresponding env var values become the dimension values on the emitted metrics. For example, `APP_VERSION: version` results in data points having a dimension called `version` whose value is the value of the `APP_VERSION` envvar configured for that particular container, if present."
msgstr "コンテナ環境変数名とディメンジョン名のマッピング。対応する env var の値が、出力されるメトリクスの次元値になります。例えば、`APP_VERSION: version` は、`version` というディメンションを持つデータポイントになり、その値は特定のコンテナ用に設定された`APP_VERSION` envvar の値である。"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "`excludedImages`"
msgstr "`excludedImages`"

#: ../../gdi/monitors-hosts/docker.md:23
msgid "A list of filters of images to exclude. Supports literals, globs, and regex."
msgstr "除外する画像のフィルタのリスト。リテラル、グロブ、正規表現をサポート。"

#: ../../gdi/monitors-hosts/docker.md:85
msgid "Protocol not available error"
msgstr "プロトコルが利用できないエラー"

#: ../../gdi/monitors-hosts/docker.md:87
msgid "If you get the following error message when configuring the monitor on a Windows host:"
msgstr "Windowsホストでモニターを設定するときに次のエラーメッセージが表示された場合："

#: ../../gdi/monitors-hosts/docker.md:93
msgid "edit the configuration and replace `unix:///var/run/docker.sock` with `npipe:////.//pipe//docker_engine`."
msgstr "設定を編集し、`unix:///var/run/docker.sock` を`npipe:///.//pipe//docker_engine` に置き換える。"

#: ../../gdi/monitors-hosts/elasticsearch.md:3
msgid "Elasticsearch stats"
msgstr "Elasticsearchの統計"

#: ../../gdi/monitors-hosts/elasticsearch.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Elasticsearch monitor type to collect node, cluster, and index level stats from Elasticsearch."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と Elasticsearch monitor type を使用して、Elasticsearch からノード、クラスタ、インデックスレベルの統計情報を収集します。"

#: ../../gdi/monitors-hosts/elasticsearch.md:9
msgid "By default, this integration only collects cluster-level and index-level stats from the current master in an Elasticsearch cluster. You can override this using the `clusterHealthStatsMasterOnly` and `indexStatsMasterOnly` configuration options respectively."
msgstr "デフォルトでは、この統合は Elasticsearch クラスタ内の現在のマスタからクラスタレベルとインデックスレベルの統計情報のみを収集します。`clusterHealthStatsMasterOnly` および`indexStatsMasterOnly` の各設定オプションを使用して、これをオーバーライドできます。"

#: ../../gdi/monitors-hosts/elasticsearch.md:37
msgid "For instance, to collects only default (non-custom) metrics:"
msgstr "例えば、デフォルト（非カスタム）のメトリクスのみを収集する場合："

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Username used to access Elasticsearch stats API"
msgstr "Elasticsearch stats APIへのアクセスに使用するユーザー名"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Password used to access Elasticsearch stats API"
msgstr "Elasticsearch stats API にアクセスするためのパスワード"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Whether to use https or not (**default:** `false`)"
msgstr "httpsを使うかどうか (**default:**`false`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23 ../../gdi/monitors-hosts/solr.md:23
msgid "`cluster`"
msgstr "`cluster`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Cluster name to which the node belongs. This is an optional config that will override the cluster name fetched from a node and will be used to populate the plugin_instance dimension"
msgstr "ノードが属するクラスタ名。これは、ノードから取得したクラスタ名をオーバーライドするオプションの設定であり、plugin_instanceディメンジョンの入力に使用されます。"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`enableIndexStats`"
msgstr "`enableIndexStats`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Activate Index stats. If set to `true`, by default the a subset of index stats will be collected (see docs for list of default index metrics collected). (**default:** `true`)"
msgstr "インデックスのスタッツをアクティブにする。`true` に設定すると、デフォルトでインデックス統計のサブセットが収集されます（収集されるデフォルトのインデックスメトリクスの一覧はドキュメントを参照してください）。(**デフォルト:**`true`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`indexes`"
msgstr "`indexes`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Indexes to collect stats from (by default stats from all indexes are collected)"
msgstr "統計情報を収集するインデックス (デフォルトでは、すべてのインデックスから統計情報が収集されます)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`indexStatsIntervalSeconds`"
msgstr "`indexStatsIntervalSeconds`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Interval to report IndexStats on (**default:** `60`)"
msgstr "IndexStatsを報告する間隔 (**デフォルト:**`60`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`indexSummaryOnly`"
msgstr "`indexSummaryOnly`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Collect only aggregated index stats across all indexes (**default:** `false`)"
msgstr "全インデックスに渡って集計されたインデックス統計情報のみを収集する (**default:**`false`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`indexStatsMasterOnly`"
msgstr "`indexStatsMasterOnly`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Collect index stats only from Master node (**default:** `true`)"
msgstr "マスターノードからのみインデックス統計情報を収集 (**default:**`true`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`enableClusterHealth`"
msgstr "`enableClusterHealth`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Activates reporting on the cluster health (**default:** `true`)"
msgstr "クラスタの健全性に関するレポートを有効にします (**default:**`true`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`clusterHealthStatsMasterOnly`"
msgstr "`clusterHealthStatsMasterOnly`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Whether or not non master nodes should report cluster health (**default:** `true`)"
msgstr "マスター以外のノードがクラスタの状態を報告するかどうか (**default:**`true`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`enableEnhancedHTTPStats`"
msgstr "`enableEnhancedHTTPStats`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Activate enhanced HTTP stats (**default:** `false`)"
msgstr "拡張HTTP統計情報を有効にする (**デフォルト:**`false`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`enableEnhancedJVMStats`"
msgstr "`enableEnhancedJVMStats`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Activate enhanced JVM stats (**default:** `false`)"
msgstr "拡張JVM統計を有効にする (**デフォルト:**`false`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`enableEnhancedProcessStats`"
msgstr "`enableEnhancedProcessStats`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Activate enhanced Process stats (**default:** `false`)"
msgstr "拡張プロセス統計を有効にする (**デフォルト:**`false`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`enableEnhancedThreadPoolStats`"
msgstr "`enableEnhancedThreadPoolStats`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Activate enhanced ThreadPool stats (**default:** `false`)"
msgstr "強化されたスレッドプールの統計情報を有効にする (**デフォルト:**`false`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`enableEnhancedTransportStats`"
msgstr "`enableEnhancedTransportStats`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Activate enhanced Transport stats (**default:** `false`)"
msgstr "強化されたトランスポート統計を有効にする (**デフォルト:**`false`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`enableEnhancedNodeIndicesStats`"
msgstr "`enableEnhancedNodeIndicesStats`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Activate enhanced node level index stats groups. A list of index stats groups for which to collect enhanced stats"
msgstr "強化されたノードレベルのインデックス統計グループをアクティブにする。拡張統計を収集するインデックス統計グループのリスト。"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`threadPools`"
msgstr "`threadPools`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "ThreadPools to report threadpool node stats on (**default:** `[search index]`)"
msgstr "スレッドプールノードの統計情報を報告するスレッドプール (**default:**`[search index]`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`enableEnhancedClusterHealthStats`"
msgstr "`enableEnhancedClusterHealthStats`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Activate Cluster level stats. These stats report only from master Elasticserach nodes. (**default:** `false`)"
msgstr "クラスターレベルのスタッツを有効にする。これらの統計はマスターElasticserachノードからのみ報告されます。(**default:**`false`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`enableEnhancedIndexStatsForIndexGroups`"
msgstr "`enableEnhancedIndexStatsForIndexGroups`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Activate enhanced index level index stats groups. A list of index stats groups for which to collect enhanced stats"
msgstr "拡張インデックスレベルのインデックス統計グループをアクティブにする。拡張統計を収集するインデックス統計グループのリスト。"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`enableIndexStatsPrimaries`"
msgstr "`enableIndexStatsPrimaries`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "To activate index stats from only primary shards. By default, the index stats collected are aggregated across all shards. (**default:** `false`)"
msgstr "プライマリ・シャードのみからインデックス統計を有効にする。デフォルトでは、収集されたインデックス統計はすべてのシャードにわたって集約されます。(**default:**`false`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "`metadataRefreshIntervalSeconds`"
msgstr "`metadataRefreshIntervalSeconds`"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "How often to refresh metadata about the node and cluster (**default:** `30`)"
msgstr "ノードとクラスタに関するメタデータの更新頻度 (**default:**`30`)"

#: ../../gdi/monitors-hosts/elasticsearch.md:91
msgid "Advanced configuration examples"
msgstr "高度な設定例"

#: ../../gdi/monitors-hosts/elasticsearch.md:93
msgid "Enhanced (custom) metrics"
msgstr "強化された（カスタム）メトリクス"

#: ../../gdi/monitors-hosts/elasticsearch.md:95
msgid "The `elasticsearch` integration collects a subset of node stats of JVM, process, HTTP, transport, indices, and thread pool stats. It is possible to activate enhanced stats for each stat group separately.  Note that these metrics get categorized under the _custom_ group if you are on host-based pricing. This is an example of a configuration that collects enhanced (custom) metrics:"
msgstr "`elasticsearch` integrationは、JVM、プロセス、HTTP、トランスポート、インデックス、スレッドプールの統計情報のノード統計情報のサブセットを収集する。各スタッツ・グループの強化スタッツを個別に発動させることも可能だ。 ホスト・ベースの価格設定の場合、これらのメトリクスは_custom_グループに分類されることに注意してください。これは、拡張（カスタム）メトリクスを収集する構成の例です："

#: ../../gdi/monitors-hosts/elasticsearch.md:114
msgid "The `enableEnhancedNodeIndicesStats` option takes a list of index stats groups for which enhanced stats will be collected. See [Nodes stats API](https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-nodes-stats.html) for a comprehensive list of all available groups."
msgstr "`enableEnhancedNodeIndicesStats` オプションは、拡張統計を収集するインデックス統計グループのリストを取ります。利用可能なすべてのグループの包括的なリストについては、[Nodes stats API](https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-nodes-stats.html) を参照してください。"

#: ../../gdi/monitors-hosts/elasticsearch.md:116
msgid "Note that the `enableEnhancedIndexStatsForIndexGroups` configuration option is similar to the `enableEnhancedNodeIndicesStats` configuration option, but for index level stats."
msgstr "`enableEnhancedIndexStatsForIndexGroups` 構成オプションは`enableEnhancedNodeIndicesStats` 構成オプションと似ていますが、インデックス・レベルの統計であることに注意してください。"

#: ../../gdi/monitors-hosts/elasticsearch.md:118
msgid "Thread pools"
msgstr "スレッドプール"

#: ../../gdi/monitors-hosts/elasticsearch.md:120
msgid "By default, thread pool statistics from the \"search\" and \"index\" thread pools are collected. To collect stats from other thread pools, specify the `threadPools` configuration option, as shown in the following example:"
msgstr "デフォルトでは、\"search \"スレッドプールと \"index \"スレッドプールの統計情報が収集される。他のスレッド・プールから統計情報を収集するには、次の例に示すように、`threadPools` 構成オプションを指定する："

#: ../../gdi/monitors-hosts/elasticsearch.md:133
msgid "The following is a list of valid thread pools by Elasticsearch version:"
msgstr "以下は Elasticsearch のバージョン別に有効なスレッドプールのリストです："

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "Thread pool name"
msgstr "スレッドプール名"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "ES 1.x"
msgstr "ES 1.x"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "ES 2.0"
msgstr "ES 2.0"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "ES 2.1+"
msgstr "ES 2.1+"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "merge"
msgstr "マージ"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "&#x2713;"
msgstr "&#x2713;"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "optimize"
msgstr "オプティマイズ"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "bulk"
msgstr "バルク"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "flush"
msgstr "フラッシュ"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "generic"
msgstr "ジェネリック"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "get"
msgstr "得る"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "snapshot"
msgstr "スナップショット"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "warmer"
msgstr "ウォーマー"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "refresh"
msgstr "リフレッシュ"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "fetch\\_shard\\_started"
msgstr "fetch\\_shard\\_started"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "fetch\\_shard\\_store"
msgstr "fetch\\_shard\\_store"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "listener"
msgstr "リスナー"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "management"
msgstr "管理"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "percolate"
msgstr "滲み出る"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "suggest"
msgstr "suggest"

#: ../../gdi/monitors-hosts/elasticsearch.md:23
msgid "force\\_merge"
msgstr "force\\_merge"

#: ../../gdi/monitors-hosts/elasticsearch.md:155
msgid "Collecting index statistics"
msgstr "インデックス統計の収集"

#: ../../gdi/monitors-hosts/elasticsearch.md:157
msgid "By default, the configuration parameter `indexes` is empty, which means that stats are collected on all indexes. To collect statistics from a subset of indexes, set the configuration parameter `indexes` to a list of the index names you want to collect stats for."
msgstr "デフォルトでは、`indexes` という設定パラメータは空で、これはすべてのインデックスで統計情報が収集されることを意味します。インデックスのサブセットから統計を収集するには、`indexes` 構成パラメータを、統計を収集したいインデックス名のリストに設定します。"

#: ../../gdi/monitors-hosts/elasticsearch.md:159
msgid "The call to collect index statistics can be CPU-intensive. For this reason, use the `indexStatsIntervalSeconds` configuration parameter to decrease the reporting interval for nodes that report index statistics."
msgstr "インデックス統計を収集するための呼び出しは、CPUに負荷がかかる可能性がある。こ のため、`indexStatsIntervalSeconds` 構成パ ラ メ ー タ を使用 し て、 イ ンデ ッ ク ス統計を報告す る ノ ー ド の報告間隔を短 く し ます。"

#: ../../gdi/monitors-hosts/elasticsearch.md:162
msgid "Primaries versus total"
msgstr "プライマリー対全体"

#: ../../gdi/monitors-hosts/elasticsearch.md:164
msgid "By default, the integration collects a subset of index stats of total aggregation type. The total for an index stat aggregates across all shards, whereas primaries only reflect the stats from primary shards. It is possible to activate index stats of only primaries aggregation type. The following is an example configuration that shows how to index stats from primary shards:"
msgstr "デフォルトでは、統合は合計集計タイプのインデックス統計のサブセットを収集します。インデックス統計の合計は全シャードにわたって集計されるが、プライマリにはプライマリ・シャードの統計のみが反映される。プライマリー集計タイプのみのインデックス統計を有効にすることができる。以下は、プライマリシャードから統計情報をインデックス化する方法を示す設定例です："

#: ../../gdi/monitors-hosts/elasticsearch-query.md:3
msgid "Elasticsearch query"
msgstr "Elasticsearchクエリ"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:7
msgid "**This integration is in beta.**"
msgstr "**この統合はベータ版です。"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:9
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `elasticsearch-query` monitor type to metricize aggregated responses from Elasticsearch. The integration constructs Splunk Observability Cloud data points based on Elasticsearch aggregation types and aggregation names."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバ<smartagent-receiver>` と`elasticsearch-query` モニタタイプを使用して、Elasticsearch からの集約されたレスポンスを測定します。この統合は、Elasticsearch の集約タイプと集約名に基づいて Splunk Observability Cloud のデータポイントを構築します。"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:16
msgid "Data model transformation"
msgstr "データモデルの変換"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:18
msgid "This integration transforms Elasticsearch responses into Splunk Observability Cloud data points."
msgstr "この統合は、Elasticsearch のレスポンスを Splunk Observability Cloud のデータポイントに変換します。"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:20
msgid "At high level, it metricizes responses of the following types:"
msgstr "高いレベルでは、以下のようなタイプの反応を評価する："

#: ../../gdi/monitors-hosts/elasticsearch-query.md:22
msgid "Metric aggregations inside one or more Bucket aggregations such as the `terms` and `filters` aggregations. Dimensions on a data point are determined by the aggregation name (dimension name) and the `key` of each bucket (dimension value). The metric name is derived from the type of metric aggregation name and its values in case of multi-value aggregations. A dimension called `metric_aggregation_type`is also set on the corresponding data points."
msgstr "`、` 、`フィルタ` のような、1つ以上のバケット集約内のメトリック集約。データ・ポイントのディメンジョンは、集約名（ディメンジョン名）と、各バケットの`キー` （ディメンジョン値）によって決定されます。メトリック名は、メトリック集約名のタイプと、複数値の集約の場合はその値から導かれる。`metric_aggregation_type`というディメンションも対応するデータポイントに設定される。"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:24
msgid "Metric aggregations applied without any Bucket aggregation are transformed in the same way."
msgstr "バケット集約なしで適用されるメトリック集約は、同じように変換される。"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:26
msgid "Bucket aggregations that do not have any Metric aggregations as sub aggregations are transformed to a metric called `<name_of_aggregation>.doc_count` and have the `bucket_aggregation_name` dimension apart from the `key` of each bucket."
msgstr "サブ集約としてメトリック集約を持たないバケット集約は、`<name_of_aggregation>.doc_count` というメトリックに変換され、各バケットの`キー` とは別に、`bucket_aggregation_name` ディメンジョンを持つ。"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:30
msgid "**Note**: Since Bucket aggregations determine dimensions in Splunk Observability Cloud, in most cases Bucket aggregations should be performed on `string` fields that represent a slice of the data from Elasticsearch."
msgstr "**注意バケット集約は Splunk Observability Cloud のディメンションを決定するため、ほとんどの場合、バケット集約は Elasticsearch からのデータのスライスを表す`文字列` フィールドに対して実行する必要があります。"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:32
msgid "Example: avg metric aggregation"
msgstr "例：avgメトリック集計"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:34
msgid "`avg` metric aggregation as a sub-aggregation of `terms` bucket aggregation:"
msgstr "`avg`terms` bucket aggregation のサブアグリゲーションとしての` メトリックアグリゲーション："

#: ../../gdi/monitors-hosts/elasticsearch-query.md:54
msgid "This query results in a metric called `elasticsearch_query.average_cpu_usage`, where the data point has a `host` dimension with its value being the `key` of a bucket in the response. The type of the metric aggregation (`avg`) is set on the data oint as the `metric_aggregation_type` dimension."
msgstr "このクエリの結果、`elasticsearch_query.average_cpu_usage` というメトリックが得られます。データポイントは`ホスト` ディメンジョンを持ち、その値はレスポンス内のバケットの`キー` となります。メトリック集計のタイプ（`avg` ）は、`metric_aggregation_type` ディメンジョンとしてデータオイントに設定される。"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:56
msgid "For instance, the `json` below provides 4 data points, each with a different value for `host`:"
msgstr "例えば、以下の`json` は4つのデータポイントを提供し、それぞれ`ホスト` の値が異なる："

#: ../../gdi/monitors-hosts/elasticsearch-query.md:97
msgid "Example: extended_stats metric aggregation"
msgstr "例：extended_stats メトリック集約"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:99
msgid "`extended_stats` metric aggregation as a sub-aggregation of `terms` bucket aggregation"
msgstr "`extended_stats`項目のサブ集約としての` メトリック集約` バケット集約"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:174
msgid "In this case, each bucket outputs 5 metrics:"
msgstr "この場合、各バケットは5つのメトリクスを出力する："

#: ../../gdi/monitors-hosts/elasticsearch-query.md:182
msgid "The dimensions are derived in the same manner as the previous example."
msgstr "寸法は前の例と同じ方法で導き出される。"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:215
msgid "Condiguration options"
msgstr "コンディギュレーション・オプション"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:217
msgid "See the [configuration example](https://github.com/signalfx/splunk-otel-collector/tree/main/examples) in GitHub for specific use cases that show how the Splunk Distribution of OpenTelemetry Collector can integrate and complement existing environments."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションがどのように統合され、既存の環境を補完できるかを示す具体的な使用例については、GitHub の[設定例](https://github.com/signalfx/splunk-otel-collector/tree/main/examples) を参照してください。"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:219
msgid "For Kubernetes, see the [kubernetes.yaml](https://github.com/signalfx/splunk-otel-collector/tree/main/examples/kubernetes-yaml) in GitHub for the Agent and Gateway YAML files."
msgstr "Kubernetes については、GitHub の[kubernetes.yaml](https://github.com/signalfx/splunk-otel-collector/tree/main/examples/kubernetes-yaml) にある Agent と Gateway の YAML ファイルを参照してください。"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:221
msgid "For Prometheus, see [Prometheus Federation Endpoint Example](https://github.com/signalfx/splunk-otel-collector/tree/main/examples/prometheus-federation) in GitHub for an example of how the OTel Collector works with Splunk Enterprise and an existing Prometheus deployment."
msgstr "Prometheus については、GitHub の[Prometheus Federation Endpoint Example](https://github.com/signalfx/splunk-otel-collector/tree/main/examples/prometheus-federation) を参照して、OTel Collector が Splunk Enterprise と既存の Prometheus デプロイメントでどのように動作するかの例をご覧ください。"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:192
msgid "If true, the agent will connect to the server using HTTPS instead of plain HTTP. (**default:** `false`)"
msgstr "true の場合、エージェントはプレーン HTTP ではなく HTTPS を使用してサーバに接続します。(**default:**`false`)"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:192
msgid "If useHTTPS is true and this option is also true, the exporter TLS cert will not be verified. (**default:** `false`)"
msgstr "useHTTPSがtrueでこのオプションもtrueの場合、エクスポータTLS証明書は検証されない。(**default:**`false`)"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:192
msgid "`index`"
msgstr "`index`"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:192
msgid "Index that's being queried. If none is provided, given query will be applied across all indexes. To apply the search query to multiple indices, provide a comma separated list of indices (**default:** `_all`)"
msgstr "照会されるインデックス。何も指定されない場合、指定されたクエリは全てのインデックスに適用されます。検索クエリを複数のインデックスに適用するには、インデックスのリストをカンマ区切りで指定します (**default:**`_all`)"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:192
msgid "`elasticsearchRequest`"
msgstr "`elasticsearchRequest`"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:192
msgid "Takes in an Elasticsearch request body search request. See the Elasticsearch documentation at https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-body.html for details."
msgstr "Elasticsearch リクエストボディの検索リクエストを受け取ります。詳細は Elasticsearch のドキュメント（https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-body.html）を参照してください。"

#: ../../gdi/monitors-hosts/elasticsearch-query.md:245
msgid "The Splunk Distribution of OpenTelemetry Collector does not do any built-in filtering of metrics for this receiver."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションは、このレシーバに対してメトリックのビルトインフィルタリングを行いません。"

#: ../../gdi/monitors-hosts/filesystems.md:3
msgid "Free disk space (filesystems)"
msgstr "ディスクの空き容量（ファイルシステム）"

#: ../../gdi/monitors-hosts/filesystems.md:8
msgid "If you are using the Splunk Distribution of OpenTelemetry Collector and want to collect file system utilization metrics, use the native OTel component {ref}`host-metrics-receiver`."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを使用していて、ファイルシステムの利用メトリクスを収集したい場合は、ネイティブ OTel コンポーネント {ref}`host-metrics-receiver` を使用してください。"

#: ../../gdi/monitors-hosts/filesystems.md:13
msgid "The following table shows the configuration options for this monitor."
msgstr "次の表に、このモニターの設定オプションを示します。"

#: ../../gdi/monitors-hosts/filesystems.md:7
msgid "Path to the root of the host filesystem.  It is useful when running in a container and the host filesystem is mounted in a subdirectory under /.  The disk usage metrics emitted will be based at this path."
msgstr "ホスト・ファイルシステムのルートへのパス。 これは、コンテナ内で実行していて、ホスト・ファイルシステムが / 以下のサブディレクトリにマウントされている場合に便利である。 出力されるディスク使用量メトリクスは、このパスに基づいている。"

#: ../../gdi/monitors-hosts/filesystems.md:7
msgid "The filesystem types to include/exclude.  This is an [overridable set](https://docs.splunk.com/Observability/gdi/smart-agent/smart-agent-resources.html#filtering-data-using-the-smart-agent). If this is not set, the default value is the set of all **non-logical/virtual filesystems** on the system.  On Linux this list is determined by reading the `/proc/filesystems` file and choosing the filesystems that do not have the `nodev` modifier."
msgstr "インクルード/除外するファイルシステム・タイプ。 これは[オーバーライド可能なセット](https://docs.splunk.com/Observability/gdi/smart-agent/smart-agent-resources.html#filtering-data-using-the-smart-agent) 。これが設定されていない場合、デフォルト値はシステム上のすべての**非論理/仮想ファイルシステム**のセットとなる。 Linuxでは、このリストは、`/proc/filesystems` ファイルを読み、`nodev` 修飾子を持たないファイルシステムを選択することによって決定される。"

#: ../../gdi/monitors-hosts/filesystems.md:7
msgid "The mount paths to include/exclude. This is an [overridable set](https://docs.splunk.com/Observability/gdi/smart-agent/smart-agent-resources.html#filtering-data-using-the-smart-agent). **Note**: If you are using the hostFSPath option, do not include the `/hostfs/` mount in the filter.  If both this and `fsTypes` are specified, the two filters combine in an AND relationship."
msgstr "インクルード/除外するマウントパス。これは[オーバーライド可能なセット](https://docs.splunk.com/Observability/gdi/smart-agent/smart-agent-resources.html#filtering-data-using-the-smart-agent) 。**注意**：hostFSPathオプションを使用している場合は、`/hostfs/` マウントをフィルターに含めないでください。 これと`fsTypes` の両方が指定された場合、2つのフィルターはANDの関係で結合される。"

#: ../../gdi/monitors-hosts/filesystems.md:7
msgid "`sendModeDimension`"
msgstr "`sendModeDimension`"

#: ../../gdi/monitors-hosts/filesystems.md:7
msgid "Set to `true` to emit the \"mode\" dimension, which represents whether the mount is \"rw\" or \"ro\". (**default:** `false`)"
msgstr "マウントが \"rw \"か \"ro \"かを表す \"mode \"ディメンジョンを出すには、`true` に設定する。 (**default:**`false`)"

#: ../../gdi/monitors-hosts/haproxy.md:4
msgid "HAProxy"
msgstr "ハプロキシー"

#: ../../gdi/monitors-hosts/haproxy.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the HAProxy monitor type to monitor an [HAProxy](http://www.haproxy.org/) instance. This monitor requires HAProxy 1.5+."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を HAProxy モニタータイプで使用し、[HAProxy](http://www.haproxy.org/) インスタンスをモニターする。このモニターにはHAProxy 1.5+が必要です。"

#: ../../gdi/monitors-hosts/haproxy.md:14
msgid "Set up"
msgstr "セットアップ"

#: ../../gdi/monitors-hosts/haproxy.md:16
msgid "Socket configuration"
msgstr "ソケット構成"

#: ../../gdi/monitors-hosts/haproxy.md:18
msgid "The location of the HAProxy socket file is defined in the HAProxy configuration file, as shown in the following example:"
msgstr "HAProxyソケットファイルの場所は、以下の例に示すように、HAProxy設定ファイルで定義される："

#: ../../gdi/monitors-hosts/haproxy.md:27
msgid "**Note:** You can use a TCP socket for stats in HAProxy. In your `haproxy` plugin configuration file, specify the TCP address for the socket. For example, you can use `https://www.example.com/socket:9000`. In the haproxy.cfg file, change the stats socket to use the same TCP address and port, as shown in the following example:"
msgstr "**注：** HAProxyでは統計にTCPソケットを使用することができる。`haproxy` プラグイン設定ファイルで、ソケットのTCPアドレスを指定します。例えば、`https://www.example.com/socket:9000` 。haproxy.cfgファイルで、次の例に示すように、statsソケットを同じTCPアドレスとポートを使用するように変更する："

#: ../../gdi/monitors-hosts/haproxy.md:37
msgid "To use a more restricted TCP socket, follow these steps:"
msgstr "より制限されたTCPソケットを使用するには、以下の手順に従ってください："

#: ../../gdi/monitors-hosts/haproxy.md:39
msgid "Define a backend server that listens to stats on localhost."
msgstr "localhost上のstatsをリッスンするバックエンドサーバを定義します。"

#: ../../gdi/monitors-hosts/haproxy.md:40
msgid "Define a frontend proxy server that communicates with the back-end server on a different port."
msgstr "異なるポートでバックエンドサーバーと通信するフロントエンドプロキシサーバーを定義する。"

#: ../../gdi/monitors-hosts/haproxy.md:41
msgid "Use ACLs on both servers to control access. Depending on how restrictive your socket is, you might need to add the signalfx-agent user to the haproxy group as follows: `sudo usermod -a -G haproxy signalfx-agent`"
msgstr "両方のサーバーでACLを使用してアクセスを制御する。ソケットの制限の度合いにもよりますが、以下のようにsignalfx-agentユーザーをhaproxyグループに追加する必要があるかもしれません:`sudo usermod -a -G haproxy signalfx-agent`"

#: ../../gdi/monitors-hosts/haproxy.md:44
msgid "The following configuration file shows how to define a back-end server and a frontend proxy:"
msgstr "以下の設定ファイルは、バックエンドサーバとフロントエンドプロキシを定義する方法を示しています："

#: ../../gdi/monitors-hosts/haproxy.md:63
msgid "SELinux setup"
msgstr "SELinuxのセットアップ"

#: ../../gdi/monitors-hosts/haproxy.md:65
msgid "If you have SELinux activated, create a SELinux policy package by downloading the [type enforcement file](https://github.com/signalfx/collectd-haproxy/blob/master/selinux/collectd-haproxy.te) to some place on your server. Run the following commands to create and install the policy package:"
msgstr "SELinuxを有効にしている場合は、[タイプ・エンフォースメント・ファイル](https://github.com/signalfx/collectd-haproxy/blob/master/selinux/collectd-haproxy.te) をサーバーのどこかにダウンロードして、SELinuxポリシー・パッケージを作成する。以下のコマンドを実行して、ポリシーパッケージを作成し、インストールする："

#: ../../gdi/monitors-hosts/haproxy.md:86
msgid "`proxiesToMonitor`"
msgstr "`proxiesToMonitor`"

#: ../../gdi/monitors-hosts/haproxy.md:86
msgid "A list of all the pxname(s) or svname(s) that you want to monitor (e.g. `[\"http-in\", \"server1\", \"backend\"]`)"
msgstr "監視したいすべてのpx名またはsv名のリスト (例:`[\"http-in\", \"server1\", \"backend\"]`)"

#: ../../gdi/monitors-hosts/haproxy.md:86
msgid "`excludedMetrics`"
msgstr "`excludedMetrics`"

#: ../../gdi/monitors-hosts/haproxy.md:86
msgid "Deprecated.  Please use `datapointsToExclude` on the monitor config block instead."
msgstr "非推奨。 代わりにモニター設定ブロックの`datapointsToExclude` を使用してください。"

#: ../../gdi/monitors-hosts/health-checker.md:3 ../../gdi/opentelemetry/collector-architecture.rst:192
msgid "Health Checker"
msgstr "ヘルスチェッカー"

#: ../../gdi/monitors-hosts/health-checker.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Health Checker monitor type to check whether the configured JSON value is returned in the response body."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を Health Checker モニタータイプで使用し、設定された JSON 値がレスポンスボディに返されるかどうかをチェックします。"

#: ../../gdi/monitors-hosts/health-checker.md:45
msgid "The following table shows the configuration options for the Health Checker monitor:"
msgstr "次の表に、ヘルスチェッカーモニターの設定オプションを示します："

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "The HTTP path that contains a JSON document to verify (**default:** `/`)"
msgstr "検証するJSONドキュメントを含むHTTPパス (**default:**`/`)"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "`jsonKey`"
msgstr "`jsonKey`"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "If `jsonKey` and `jsonVal` are given, the given endpoint will be interpreted as a JSON document and will be expected to contain the given key and value for the service to be considered healthy."
msgstr "`jsonKey` と`jsonVal` が指定された場合、指定されたエンドポイントはJSONドキュメントとして解釈され、サービスが健全であるとみなされるために、指定されたキーと値が含まれていることが期待されます。"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "`jsonVal`"
msgstr "`jsonVal`"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "`any`"
msgstr "`any`"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "This can be either a string or numeric type"
msgstr "これは文字列型でも数値型でもよい"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "If `true`, the endpoint will be connected to on HTTPS instead of plain HTTP.  It is invalid to specify this if `tcpCheck` is `true`. (**default:** `false`)"
msgstr "`true` の場合、エンドポイントはプレーンHTTPではなくHTTPSで接続される。 `tcpCheck` ` true`. (**default:**`false`) の場合、この指定は無効です。"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "`skipSecurity`"
msgstr "`skipSecurity`"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "If `true`, and `useHTTPS` is `true`, the server's SSL/TLS cert will not be verified. (**default:** `false`)"
msgstr "`true`,`useHTTPS` が`true` の場合、サーバーのSSL/TLS証明書は検証されません。(**default:**`false`)"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "`tcpCheck`"
msgstr "`tcpCheck`"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "If `true`, the plugin will verify that it can connect to the given host/port value. JSON checking is not supported. (**default:** `false`)"
msgstr "`true` の場合、プラグインは指定されたホスト/ポート値に接続できるかどうかを確認する。JSONチェックはサポートされていません。(**default:**`false`)"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "Sample value"
msgstr "サンプル値"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "Category"
msgstr "カテゴリー"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "`gauge.service.health.status`"
msgstr "`gauge.service.health.status`"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "The HTTP response status code for the request made to the application being monitored.  A `200` value means an HTTP 200 OK success status response was returned, so the application is healthy."
msgstr "監視対象のアプリケーションに対するリクエストのHTTPレスポンス・ステータス・コード。 `200` 値は、HTTP 200 OK成功ステータス・レスポンスが返されたことを意味する。"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "`200`"
msgstr "`200`"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "`gauge.service.health.value`"
msgstr "`gauge.service.health.value`"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "`0` means an unhealthy state, and `1` means a healthy state."
msgstr "`0` は不健康な状態を意味し、`1` は健康な状態を意味する。"

#: ../../gdi/monitors-hosts/health-checker.md:21
msgid "`0` or `1`"
msgstr "`0` または`1`"

#: ../../gdi/monitors-hosts/host-metadata.md:3
msgid "Host metadata properties"
msgstr "ホスト・メタデータのプロパティ"

#: ../../gdi/monitors-hosts/host-metadata.md:8
msgid "If you're using the Splunk Distribution of OpenTelemetry Collector and want to collect metadata properties about a host, use the native OTel component {ref}`host-metrics-receiver`."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを使用していて、ホストに関するメタデータプロパティを収集したい場合は、ネイティブ OTel コンポーネント {ref}`host-metrics-receiver` を使用します。"

#: ../../gdi/monitors-hosts/host-metadata.md:21 ../../gdi/monitors-monitoring/prometheus-go.md:80 ../../gdi/monitors-orchestration/kubernetes-proxy.md:169 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:76
msgid "Non-default metrics (version 4.7.0+)"
msgstr "デフォルト以外のメトリクス（バージョン4.7.0以上）"

#: ../../gdi/monitors-hosts/host-metadata.md:23
msgid "To emit metrics that are not default, you can add those metrics in the generic monitor-level `extraMetrics` configuration option. Metrics derived from specific configuration options that do not appear in the above list of metrics do not need to be added to `extraMetrics`."
msgstr "デフォルト以外のメトリクスを出力するには、一般的なモニター・レベル`extraMetrics` 構成オプションでそれらのメトリクスを追加できます。上記のメトリクスのリストに表示されない特定の構成オプションに由来するメトリクスは、`extraMetrics` に追加する必要はありません。"

#: ../../gdi/monitors-hosts/host-metadata.md:25
msgid "To see a list of metrics that will be emitted, you can run `agent-status monitors` after configuring this monitor in a running agent instance."
msgstr "発行されるメトリクスのリストを見るには、実行中のエージェントインスタンスでこのモニターを構成した後、`agent-status monitors` を実行します。"

#: ../../gdi/monitors-hosts/host-processes.md:3
msgid "Host processes"
msgstr "ホストプロセス"

#: ../../gdi/monitors-hosts/host-processes.md:8
msgid "If you're using the Splunk Distribution of OpenTelemetry Collector and want to collect metrics about processes running on a host, use the native OTel component {ref}`host-metrics-receiver`."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを使用していて、ホスト上で実行されているプロセスのメトリクスを収集したい場合は、ネイティブ OTel コンポーネント {ref}`host-metrics-receiver` を使用します。"

#: ../../gdi/monitors-hosts/host-processes.md:13
msgid "The following table shows the configuration options for the host process monitor:"
msgstr "次の表は、ホスト・プロセス・モニターの設定オプションを示します："

#: ../../gdi/monitors-hosts/host-processes.md:7
msgid "`processes`"
msgstr "`プロセス`"

#: ../../gdi/monitors-hosts/host-processes.md:7
msgid "A list of process names to match."
msgstr "マッチさせるプロセス名のリスト。"

#: ../../gdi/monitors-hosts/host-processes.md:7
msgid "`processMatch`"
msgstr "`processMatch`"

#: ../../gdi/monitors-hosts/host-processes.md:7
msgid "A map with keys specifying the `plugin_instance` value to send for regex values that match process names. See the example configuration."
msgstr "`plugin_instance` プロセス名にマッチする正規表現値に対して送信する値を指定するキーを持つマップ。設定例を参照してください。"

#: ../../gdi/monitors-hosts/host-processes.md:7
msgid "`collectContextSwitch`"
msgstr "`collectContextSwitch`"

#: ../../gdi/monitors-hosts/host-processes.md:7
msgid "Collects metrics on the number of context switches made by the process. The default value is `false`."
msgstr "プロセスによるコンテキスト・スイッチの回数に関するメトリクスを収集します。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/host-processes.md:7
msgid "`procFSPath`"
msgstr "`procFSPath`"

#: ../../gdi/monitors-hosts/host-processes.md:7
msgid "(Deprecated) Set the agent configuration `procPath` instead of this monitor configuration option. This option is useful for overriding the path to the `proc` file system if the agent is running in a container."
msgstr "(非推奨) このモニター構成オプションの代わりに、エージェント構成`procPath` を設定します。このオプションは、エージェントがコンテナ内で実行されている場合に、`proc` ファイルシステムへのパスを上書きするのに便利です。"

#: ../../gdi/monitors-hosts/host-processes.md:24
msgid "Metrics produced by this receiver count towards the custom metric ingestion limit. See {ref}`System limits for Splunk Infrastructure Monitoring <sys-limits>`."
msgstr "このレシーバーによって生成されたメトリクスは、カスタムメトリクスの取り込み制限にカウントされます。参照}`Splunk Infrastructure Monitoring のシステム制限<sys-limits>` を参照してください。"

#: ../../gdi/monitors-hosts/host-processlist.md:3
msgid "Host process list"
msgstr "ホストプロセスリスト"

#: ../../gdi/monitors-hosts/host-processlist.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `processlist` monitor type to report the running processes for a host, similar to the output of the `top` or `ps` commands on *nix systems. The output format is a special base64-encoded event that appears under the Infrastructure view for a specific host. Historical process information is not retained on Splunk Observability Cloud."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と`processlist` monitor type を使用して、*nix システムの`top` または`ps` コマンドの出力と同様に、ホストの実行中のプロセスをレポートします。出力フォーマットは、特定のホストのインフラストラクチャ・ビューの下に表示される特別なbase64エンコードされたイベントである。過去のプロセス情報は Splunk Observability Cloud には保持されません。"

#: ../../gdi/monitors-hosts/host-processlist.md:9 ../../gdi/monitors-hosts/nginx.md:9 ../../gdi/monitors-languages/java-monitor.md:9 ../../gdi/monitors-monitoring/prometheus-go.md:9 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:11 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:11 ../../gdi/monitors-monitoring/signalfx-forwarder.md:9
msgid "This integration is available on Linux and Windows."
msgstr "この統合はLinuxとWindowsで利用できる。"

#: ../../gdi/monitors-hosts/host-processlist.md:37
msgid "Next, add the monitor to the `service.pipelines.metrics.receivers` section of your configuration file. The following example shows how to configure the `logs` pipeline using the required `signalfx` exporter:"
msgstr "次に、設定ファイルの`service.pipelines.metrics.receivers` セクションにモニターを追加する。次の例は、必要な`signalfx` exporterを使用して、`logs` pipelineを設定する方法を示している："

#: ../../gdi/monitors-hosts/host-processlist.md:50 ../../gdi/monitors-monitoring/jaeger-grpc.md:65
msgid "The Splunk Distribution of OpenTelemetry Collector does not do any built-in filtering of metrics for this monitor."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションは、このモニタのメトリックの組み込みフィルタリングを行いません。"

#: ../../gdi/monitors-hosts/host-processload.md:3
msgid "Host process load"
msgstr "ホストプロセス負荷"

#: ../../gdi/monitors-hosts/host-processload.md:8
msgid "If you're using the Splunk Distribution of OpenTelemetry Collector and want to collect CPU load metrics, use the native OTel component {ref}`host-metrics-receiver`."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを使用していて、CPU 負荷メトリクスを収集したい場合は、ネイティブ OTel コンポーネント {ref}`host-metrics-receiver` を使用してください。"

#: ../../gdi/monitors-hosts/host-processload.md:7
msgid "`perCPU`"
msgstr "`perCPU`"

#: ../../gdi/monitors-hosts/http.md:3
msgid "HTTP"
msgstr "HTTP"

#: ../../gdi/monitors-hosts/http.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `http` monitor type to generate metrics based on whether the HTTP response from the configured URL matches expectations. For example, correct body, status code, and so on."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`http` モニタータイプを使用して、設定された URL からの HTTP レスポンスが期待値と一致するかどうかに基づいてメトリクスを生成します。例えば、正しいボディ、ステータスコードなど。"

#: ../../gdi/monitors-hosts/http.md:9
msgid "If applicable, TLS information is automatically fetched from the base URL or redirection, depending on whether the `useHTTPS` parameter is configured."
msgstr "該当する場合、`useHTTPS` パラメータが設定されているかどうかに応じて、ベースURLまたはリダイレクトからTLS情報が自動的に取得される。"

#: ../../gdi/monitors-hosts/http.md:16
msgid "Setup"
msgstr "セットアップ"

#: ../../gdi/monitors-hosts/http.md:18
msgid "To create a webcheck from a URL, split the URL into different configuration options. All of these options determine the URL dimension value from its \"normalized\" URL, which is in the format of `{scheme}://{host}:{port}{path}`:"
msgstr "URLからウェブチェックを作成するには、URLをさまざまな設定オプションに分割します。これらのオプションはすべて、`{scheme}://{host}:{port}{path}` の形式である「正規化」URLから、URLディメンジョン値を決定する："

#: ../../gdi/monitors-hosts/http.md:20
msgid "`scheme` is `https` if `useHTTPS:true`, or `http` if `useHTTPS:false`."
msgstr "`スキーム` は`https` if`useHTTPS:true`, または`http` if`useHTTPS:false` 。"

#: ../../gdi/monitors-hosts/http.md:21
msgid "`host` is the host name of the site to check. This option is required."
msgstr "`host` はチェックするサイトのホスト名。このオプションは必須である。"

#: ../../gdi/monitors-hosts/http.md:22
msgid "`port` is the port to connect to. If not defined, `port` is `443` if `useHTTPS:true` or `80` if `useHTTPS:false`. The default value for `http` is `80`. If the default value is used, `port` is removed from the configuration because it is implicit and makes the behavior similar to what `curl` does."
msgstr "`port` は接続先ポート。定義されていない場合、`ポート` は`443` の場合`useHTTPS:true` または`80` の場合`useHTTPS:false` 。`http` のデフォルト値は`80` 。デフォルト値を使用する場合、`port` 。これは暗黙的なものであり、`curl` と同様の動作になるため、設定から削除される。"

#: ../../gdi/monitors-hosts/http.md:23
msgid "`path` contains the full query including the resource path and finally the `GET` method parameters with `?` separator."
msgstr "`パス` には、リソースパスを含む完全なクエリが含まれ、最後に`GET` メソッドパラメータと、`?` セパレータが含まれる。"

#: ../../gdi/monitors-hosts/http.md:25
msgid "Configure the following options to change the behavior of the request done on this URL:"
msgstr "このURLで行われるリクエストの動作を変更するために、以下のオプションを設定する："

#: ../../gdi/monitors-hosts/http.md:27
msgid "Configure the `method` option to define request types such as `GET` or `POST`. See <a href=\"https://golang.org/src/net/http/method.go\" target=\"_blank\">https://golang.org/src/net/http/method.go</a> for the full list of available methods."
msgstr "`GET` または`POST` のようなリクエストタイプを定義するために、`method` オプションを設定する。利用可能なメソッドの全リストは<a href=\"https://golang.org/src/net/http/method.go\" target=\"_blank\">https://golang.org/src/net/http/method.go</a> を参照。"

#: ../../gdi/monitors-hosts/http.md:28
msgid "Configure the `username` and `password` options for basic authentication."
msgstr "ベーシック認証のために、`ユーザー名` と`パスワード` オプションを設定する。"

#: ../../gdi/monitors-hosts/http.md:29
msgid "Configure the `httpHeaders` option to define request headers. Use this option to override the `host` header."
msgstr "`httpHeaders` オプションを設定して、リクエスト・ヘッダを定義する。このオプションを使うと、`host` ヘッダーを上書きすることができる。"

#: ../../gdi/monitors-hosts/http.md:30
msgid "Configure the `requestBody` option to provide a body to the request. The form of this body depends on the `Content-Type` header. For example, `{\"foo\":\"bar\"}` with `Content-Type: application/json`."
msgstr "リクエストにボディを提供するために、`requestBody` オプションを設定する。このボディの形式は、`Content-Type` ヘッダーに依存する。例えば、`{\"foo\": \"bar\"}` with`Content-Type: application/json`."

#: ../../gdi/monitors-hosts/http.md:31
msgid "Configure the `noRedirects:false` option to stop the URL from following redirects. The default value is `true`."
msgstr "`noRedirects:false` オプションを設定して、URLがリダイレクトをたどらないようにします。デフォルト値は`true` 。"

#: ../../gdi/monitors-hosts/http.md:33
msgid "See [configuration examples](#configuration) for different request behaviors."
msgstr "さまざまなリクエストの動作については[設定例](#configuration) を参照のこと。"

#: ../../gdi/monitors-hosts/http.md:35
msgid "The following configuration options change the resulting values:"
msgstr "以下の設定オプションは、結果の値を変更する："

#: ../../gdi/monitors-hosts/http.md:37
msgid "The `desiredCode` option determines the `http.code_matched` value. Configure this option if you expect a different \"normal\" value. The default value is `200`. For example, configure `desiredCode:301` and `noRedirects:false` to check a redirect (and not the end redirected URL) keeping the value to `1` (success)."
msgstr "`desiredCode` オプションは、`http.code_matched` の値を決定する。異なる \"通常 \"の値を期待する場合は、このオプションを設定する。デフォルト値は`200` 。例えば、`desiredCode:301` と`noRedirects:false` を設定し、リダイレクトをチェックする（リダイレクトされたURLではなく、リダイレクトされたURLをチェックする）ために、`1` （成功）に値を維持します。"

#: ../../gdi/monitors-hosts/http.md:38
msgid "The `regex` option does the same with the `http.regex_matched` metric, where the value is `1` only if the provided regex matches the response body."
msgstr "`regex` オプションは、`http.regex_matched` メトリックと同じことをする。ここで値は、指定された regexがレスポンス・ボディにマッチする場合のみ、`1` となる。"

#: ../../gdi/monitors-hosts/http.md:39
msgid "The `addRedirectURL` option does not have impact on metrics, but adds a new dimension `redirect_url` with a \"dynamic\" value. If the `url` dimension changes with the monitor configuration, the `redirect_url` value is impacted by any server change and is always the last URL redirected. This option is deactivated by default because this could cause issues with heartbeat detectors, for example."
msgstr "`addRedirectURL` オプションは、メトリックスには影響しませんが、新しいディメンション`redirect_url` を「ダイナミック」な値で追加します。`url` ディメンジョンがモニター設定で変更された場合、`redirect_url` の値は、サーバーの変更の影響を受け、常に最後にリダイレクトされたURLになります。このオプションは、ハートビート検出器などで問題が発生する可能性があるため、デフォルトでは無効になっている。"

#: ../../gdi/monitors-hosts/http.md:41
msgid "The following HTTP headers let the client and the server pass additional information with an HTTP request or response:"
msgstr "以下のHTTPヘッダーは、クライアントとサーバーがHTTPリクエストまたはレスポンスで追加情報を受け渡しできるようにします："

#: ../../gdi/monitors-hosts/http.md:43
msgid "`Cache-Control: no-cache` to send the request to the origin server for validation before releasing a cached copy."
msgstr "`Cache-Control: no-cache` キャッシュされたコピーをリリースする前に、検証のためにオリジン・サーバーにリクエストを送る。"

#: ../../gdi/monitors-hosts/http.md:44
msgid "`Host` to change the request, that is, to bypass CDN or load balancer requesting directly the back end."
msgstr "`ホスト` リクエストを変更する、つまりCDNやロードバランサーをバイパスしてバックエンドに直接リクエストする。"

#: ../../gdi/monitors-hosts/http.md:45
msgid "`Content-Type` to indicate the media type of the resource. For example, `json`, `xml`, or `octet-stream`."
msgstr "`Content-Type` リソースのメディアタイプを示す。例えば、`json` 、`xml` 、`octet-stream` 。"

#: ../../gdi/monitors-hosts/http.md:77
msgid "Monitor multiple hosts"
msgstr "複数のホストを監視する"

#: ../../gdi/monitors-hosts/http.md:79
msgid "To monitor multiple hosts, add an `http` monitor entry for each host in the `receivers` section of the configuration. For example:"
msgstr "複数のホストを監視するには、コンフィギュレーションの`レシーバー` セクションに、各ホストの`http` モニター・エントリーを追加する。例えば、こうだ："

#: ../../gdi/monitors-hosts/http.md:54
msgid "The host or IP address to monitor. Note: Host is required for functionality, but not for configuration validation."
msgstr "監視するホストまたはIPアドレス。注：ホストは機能上必要ですが、設定の検証には必要ありません。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "The port of the HTTP server to monitor. The default value is `0`."
msgstr "監視するHTTPサーバーのポート。デフォルト値は`0` 。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "The HTTP path to use in the test request."
msgstr "テスト・リクエストで使用するHTTPパス。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "The HTTP timeout duration for both read and writes. This should be a duration string that is accepted by the `ParseDuration` type. The default value is `10s`."
msgstr "読み込みと書き込みの両方のHTTPタイムアウト時間。これは、`ParseDuration` 型が受け付ける継続時間文字列でなければならない。デフォルト値は`10s` 。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "The basic auth username to use on each request, if any."
msgstr "もしあれば、各リクエストで使用する基本認証ユーザー名。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "The basic auth password to use on each request, if any."
msgstr "各リクエストで使用する基本認証パスワード(もしあれば)。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "If `true`, the Collector connects to the server using HTTPS instead of plain HTTP. The default value is `false`."
msgstr "`true` の場合、Collector はプレーン HTTP ではなく HTTPS を使用してサーバーに接続します。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23
msgid "A map of HTTP header names to values. Comma-separated multiple values for the same message-header are supported."
msgstr "HTTPヘッダー名と値のマップ。同じmessage-headerに対するカンマ区切りの複数の値がサポートされている。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "If `useHTTPS` is true and this option is also `true`, the exporter's TLS cert is not verified. The default value is `false`."
msgstr "`useHTTPS` がtrueで、このオプションもtrue`` の場合、エクスポーターのTLS証明書は検証されない。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/http.md:54 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "`sniServerName`"
msgstr "`sniServerName`"

#: ../../gdi/monitors-hosts/http.md:54
msgid "If `useHTTPS` is `true` and `skipVerify` is `true`, the sniServerName is used to verify the host name on the returned certificates. It is also included in the client's handshake to support virtual hosting unless it is an IP address."
msgstr "`useHTTPS` が`true` であり、`skipVerify` が`true` である場合、sniServerName は、返された証明書のホスト名を検証するために使用される。また、IPアドレスでない限り、バーチャルホスティングをサポートするためにクライアントのハンドシェイクに含まれる。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "The path to the CA certificate that has signed the TLS cert. This option is unnecessary if `skipVerify` is set to `false`."
msgstr "TLS証明書に署名したCA証明書へのパス。`skipVerify` が`false` に設定されている場合、このオプションは不要である。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "The path to the client TLS cert to use for TLS required connections."
msgstr "TLSが必要な接続に使用するクライアントTLS証明書へのパス。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "The path to the client TLS key to use for TLS required connections."
msgstr "TLSが必要な接続に使用するクライアントTLSキーへのパス。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "`requestBody`"
msgstr "`requestBody`"

#: ../../gdi/monitors-hosts/http.md:54
msgid "Optional HTTP request body as string, for example, `{\"foo\":\"bar\"}`."
msgstr "文字列としてのオプションのHTTPリクエスト・ボディ、例えば`{\"foo\": \"bar\"}`."

#: ../../gdi/monitors-hosts/http.md:54
msgid "`noRedirects`"
msgstr "`noRedirects`"

#: ../../gdi/monitors-hosts/http.md:54
msgid "Do not follow redirect. The default value is `false`."
msgstr "リダイレクトに従わないこと。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "`method`"
msgstr "`方法`"

#: ../../gdi/monitors-hosts/http.md:54
msgid "HTTP request method to use. The default value is `GET`."
msgstr "使用するHTTPリクエスト・メソッド。デフォルト値は`GET` 。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "`urls`"
msgstr "`urls`"

#: ../../gdi/monitors-hosts/http.md:54
msgid "Provides a list of HTTP URLs to monitor. This option is **deprecated**. Use `host`/`port`/`useHTTPS`/`path` instead."
msgstr "監視するHTTP URLのリストを提供する。このオプションは**非推奨**である。代わりに`host`/`port`/`useHTTPS`/`path` を使用してください。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "`regex`"
msgstr "`regex`"

#: ../../gdi/monitors-hosts/http.md:54
msgid "Optional regex to match on URL(s) response(s)."
msgstr "URL(複数可)のレスポンスにマッチする正規表現(オプション)。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "`desiredCode`"
msgstr "`desiredCode`"

#: ../../gdi/monitors-hosts/http.md:54
msgid "Desired code to match for URL(s) response(s). The default value is `200`."
msgstr "URL(s)のレスポンスにマッチするコード。デフォルト値は`200` 。"

#: ../../gdi/monitors-hosts/http.md:54
msgid "`addRedirectURL`"
msgstr "`addRedirectURL`"

#: ../../gdi/monitors-hosts/http.md:54
msgid "Adds the `redirect_url` dimension, which could differ from `url` when redirection is followed. The default value is `false`."
msgstr "`redirect_url` ディメンジョンを追加します。これは、リダイレクションに従った場合に`url` と異なる可能性があります。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/interface.md:3
msgid "Interface traffic (deprecated)"
msgstr "インターフェイスのトラフィック（非推奨）"

#: ../../gdi/monitors-hosts/interface.md:8
msgid "This integration is deprecated in favor of the `net-io` integration, which uses the `interface` dimension to identify the network card instead of the `plugin_instance` dimension and provides the same metrics. To learn more, see {ref}`net-io`."
msgstr "この統合は、`plugin_instance` ディメンジョンの代わりに、`interface` ディメンジョンを使用してネットワーク・カードを識別し、同じメトリクスを提供する`net-io` 統合に取って代わられています。詳しくは、{ref}`net-io` を参照のこと。"

#: ../../gdi/monitors-hosts/interface.md:7
msgid "`excludedInterfaces`"
msgstr "`excludedInterfaces`"

#: ../../gdi/monitors-hosts/interface.md:7
msgid "List of interface names to exclude from monitoring (**default:** `[/^lo\\d*$/ /^docker.*/ /^t(un"
msgstr "モニタリングから除外するインターフェース名のリスト (**default:**`[/^lod*$/ /^docker.*/ /^t(un"

#: ../../gdi/monitors-hosts/interface.md:7
msgid "`includedInterfaces`"
msgstr "`includedInterfaces`"

#: ../../gdi/monitors-hosts/interface.md:7
msgid "List of all the interfaces you want to monitor, all others will be ignored.  If you set both `included` and `excludedInterfaces`, only `includedInterfaces` will be honored."
msgstr "監視したいすべてのインターフェースのリスト。 `included` と`excludedInterfaces` の両方を設定した場合、`includedInterfaces` のみが尊重される。"

#: ../../gdi/monitors-hosts/interface.md:31
msgid "Trobleshooting"
msgstr "トラブルシューティング"

#: ../../gdi/monitors-hosts/jenkins.md:3 ../../gdi/opentelemetry/collector-architecture.rst:193
msgid "Jenkins"
msgstr "ジェンキンス"

#: ../../gdi/monitors-hosts/jenkins.md:8
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `jenkins` monitor type to collect metrics from Jenkins instances by hitting the following endpoints:"
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と`jenkins` monitor type を使用して、以下のエンドポイントを叩くことで Jenkins インスタンスからメトリクスを収集します："

#: ../../gdi/monitors-hosts/jenkins.md:10
msgid "Job metrics with the `../api/json` endpoint."
msgstr "`../api/json` エンドポイントを使用したジョブ・メトリクス。"

#: ../../gdi/monitors-hosts/jenkins.md:11
msgid "Codahale or Dropwizard JVM metrics with the `metrics/<MetricsKey>/..` endpoint."
msgstr "`metrics/<MetricsKey>/...` エンドポイントを使用して、Codahale または Dropwizard JVM メトリクスを設定します。"

#: ../../gdi/monitors-hosts/jenkins.md:16
msgid "The Jenkins integration requires Jenkins version 1.580.3 or higher and the [Jenkins Metrics plugin](https://plugins.jenkins.io/metrics/)."
msgstr "Jenkinsとの統合には、Jenkinsバージョン1.580.3以上と、[Jenkins Metricsプラグイン](https://plugins.jenkins.io/metrics/) が必要です。"

#: ../../gdi/monitors-hosts/jenkins.md:54
msgid "Sample YAML configurations"
msgstr "サンプルYAMLコンフィギュレーション"

#: ../../gdi/monitors-hosts/jenkins.md:56
msgid "See the following sample YAML configurations:"
msgstr "以下のサンプルYAMLコンフィギュレーションを参照してください："

#: ../../gdi/monitors-hosts/jenkins.md:67
msgid "Sample YAML configuration with specific enhanced metrics included:"
msgstr "特定の強化されたメトリクスを含むサンプルYAML設定："

#: ../../gdi/monitors-hosts/jenkins.md:81
msgid "Sample YAML configuration with all enhanced metrics included:"
msgstr "すべての拡張メトリクスを含むサンプルYAML設定："

#: ../../gdi/monitors-hosts/jenkins.md:31
msgid "Path to a python binary used to execute the Python code. If not set, a built-in runtime will be used. Can include arguments to the binary as well."
msgstr "Pythonコードを実行するためのPythonバイナリへのパス。設定されていない場合は、組み込みのランタイムが使用される。バイナリへの引数も含めることができる。"

#: ../../gdi/monitors-hosts/jenkins.md:31
msgid "`metricsKey`"
msgstr "`metricsKey`"

#: ../../gdi/monitors-hosts/jenkins.md:31
msgid "Key required for collecting metrics. The access key located at `Manage Jenkins > Configure System > Metrics > ADD.` If empty, select `Generate`."
msgstr "メトリクスを収集するために必要なキー。アクセス・キーは、`Manage Jenkins > Configure System > Metrics > ADDにあります。`空の場合は、`Generate` を選択する。"

#: ../../gdi/monitors-hosts/jenkins.md:31
msgid "Whether to activate enhanced metrics (**default:** `false`)"
msgstr "拡張メトリクスを有効にするかどうか (**default:**`false`)"

#: ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-hosts/solr.md:23
msgid "`includeMetrics`"
msgstr "`includeMetrics`"

#: ../../gdi/monitors-hosts/jenkins.md:31
msgid "Used to activate individual enhanced metrics when `enhancedMetrics` is set to `false`"
msgstr "`enhancedMetrics` が`false に設定されている場合に、個々の拡張メトリクスを有効にするために使用される。`"

#: ../../gdi/monitors-hosts/jenkins.md:31
msgid "User with security access to Jenkins"
msgstr "Jenkinsへのセキュリティアクセス権を持つユーザー"

#: ../../gdi/monitors-hosts/jenkins.md:31
msgid "`apiToken`"
msgstr "`apiToken`"

#: ../../gdi/monitors-hosts/jenkins.md:31
msgid "API Token of the user"
msgstr "ユーザーのAPIトークン"

#: ../../gdi/monitors-hosts/jenkins.md:31
msgid "Whether to activate HTTPS. (**default:** `false`)"
msgstr "HTTPS を有効にするかどうか。(**default:**`false`)"

#: ../../gdi/monitors-hosts/jenkins.md:31 ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "`sslKeyFile`"
msgstr "`sslKeyFile`"

#: ../../gdi/monitors-hosts/jenkins.md:31
msgid "`sslCertificate`"
msgstr "`sslCertificate`"

#: ../../gdi/monitors-hosts/jenkins.md:31
msgid "`sslCACerts`"
msgstr "`sslCACerts`"

#: ../../gdi/monitors-hosts/jenkins.md:31
msgid "Skip SSL certificate validation (**default:** `false`)"
msgstr "SSL証明書の検証をスキップする (**default:**`false`)"

#: ../../gdi/monitors-hosts/kafka-consumer.md:3
msgid "Kafka consumer"
msgstr "カフカ・コンシューマー"

#: ../../gdi/monitors-hosts/kafka-consumer.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `collectd/kafka_consumer` monitor type to monitor a Java-based Kafka consumer. It has a set of built-in MBeans to pull metrics from the Kafka consumer's JMX endpoint."
msgstr "`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent レシーバー<smartagent-receiver>` と`collectd/kafka_consumer` モニタタイプを使用して、Java ベースの Kafka コンシューマーを監視します。これは、KafkaコンシューマーのJMXエンドポイントからメトリクスをプルするための組み込みMBeansのセットを持っています。"

#: ../../gdi/monitors-hosts/kafka-consumer.md:9
msgid "This integration is only available on Kubernetes and Linux. It requires Kafka version 0.9.0.0 or higher and collects metrics from the new consumer API. Per-topic metrics are not available through the new consumer API in version 0.9.0.0 or lower, which can cause the logs to fill with warnings related to the MBean not being found. Use the `mBeansToOmit` config option in such cases."
msgstr "この統合はKubernetesとLinuxでのみ利用可能だ。Kafkaのバージョン0.9.0.0以上が必要で、新しいコンシューマーAPIからメトリクスを収集する。バージョン0.9.0.0以下の新しいコンシューマAPIでは、トピック単位のメトリクスが利用できないため、MBeanが見つからないことに関連する警告でログがいっぱいになることがあります。このような場合は、`mBeansToOmit` configオプションを使用する。"

#: ../../gdi/monitors-hosts/kafka-consumer.md:48
msgid "The following table shows the configuration options for `collectd/kafka_consumer`:"
msgstr "`collectd/kafka_consumer` の設定オプションを次の表に示します："

#: ../../gdi/monitors-hosts/kafka-consumer.md:23
msgid "How the service type is identified in Splunk Observability Cloud so that you can get built-in content for it. For custom JMX integrations, set it to an arbitrary value."
msgstr "Splunk Observability Cloud でサービスタイプがどのように識別され、そのサービス用の組み込みコンテンツを取得できるようになるか。カスタムJMX統合の場合は、任意の値を設定する。"

#: ../../gdi/monitors-hosts/kafka-producer.md:3
msgid "Kafka producer"
msgstr "カフカ・プロデューサー"

#: ../../gdi/monitors-hosts/kafka-producer.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `collectd/kafka_producer` monitor type to monitor a Java-based Kafka producer. It has a set of built-in MBeans to pull metrics from the Kafka consumer's JMX endpoint."
msgstr "`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent receiver<smartagent-receiver>` と`collectd/kafka_producer` monitor type を使用して、Java ベースの Kafka プロデューサを監視する。これは、KafkaコンシューマーのJMXエンドポイントからメトリクスをプルするための組み込みMBeansのセットを持っています。"

#: ../../gdi/monitors-hosts/kafka-producer.md:9
msgid "This integration is only available on Kubernetes and Linux. It requires Kafka version 0.9.0.0 or higher and collects metrics from the new producer API."
msgstr "この統合はKubernetesとLinuxでのみ利用可能だ。Kafkaバージョン0.9.0.0以上が必要で、新しいプロデューサーAPIからメトリクスを収集する。"

#: ../../gdi/monitors-hosts/kafka-producer.md:48
msgid "The following table shows the configuration options for `collectd/kafka_producer`:"
msgstr "`collectd/kafka_producer` の設定オプションを次の表に示します："

#: ../../gdi/monitors-hosts/microsoft-windows-iis.md:3
msgid "Microsoft Windows IIS"
msgstr "Microsoft Windows IIS"

#: ../../gdi/monitors-hosts/microsoft-windows-iis.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `windows-iis` monitor type to report metrics for Windows Internet Information Services (IIS) and drive the Windows IIS dashboard content."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`windows-iis` モニタタイプを使用して、Windows Internet Information Services (IIS) のメトリクスをレポートし、Windows IIS ダッシュボードのコンテンツを駆動します。"

#: ../../gdi/monitors-hosts/microsoft-windows-iis.md:9
msgid "Windows Performance Counters are the underlying source for these metrics. Most of the performance counters queried are actually gauges that represent rates per second and percentages. This integration reports the instantaneous values for these Windows Performance Counters. This means that in between a collection interval, spikes could occur on the Performance Counters. The best way to mitigate this limitation is to increase the reporting interval on this monitor to collect more frequently."
msgstr "Windowsパフォーマンス・カウンターは、これらのメトリクスの基礎となるソースです。照会されるパフォーマンス・カウンターのほとんどは、実際には秒あたりのレートとパーセンテージを表すゲージである。この統合は、これらのWindowsパフォーマンス・カウンターの瞬時値をレポートします。これは、収集間隔の間に、パフォーマンス・カウンターにスパイクが発生する可能性があることを意味する。この制限を緩和する最善の方法は、このモニターの報告間隔を長くして、より頻繁に収集することである。"

#: ../../gdi/monitors-hosts/microsoft-windows-iis.md:11 ../../gdi/monitors-languages/asp-dot-net.md:11 ../../gdi/monitors-languages/microsoft-dotnet.md:9
msgid "This integration is only available on Windows."
msgstr "この統合はWindowsでのみ利用可能です。"

#: ../../_includes/collector-installation-windows.md:4
msgid "Deploy the Splunk Distribution of OpenTelemetry Collector to your host:"
msgstr "OpenTelemetry Collector の Splunk ディストリビューションをホストにデプロイします："

#: ../../gdi/monitors-hosts/microsoft-windows-iis.md:50
msgid "The following table shows the configuration options for the `windows-iis` monitor:"
msgstr "次の表は、`windows-iis` モニターの設定オプションを示す："

#: ../../gdi/monitors-hosts/microsoft-windows-iis.md:25 ../../gdi/monitors-languages/asp-dot-net.md:25 ../../gdi/monitors-languages/microsoft-dotnet.md:41 ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "`counterRefreshInterval`"
msgstr "`counterRefreshInterval`"

#: ../../gdi/monitors-hosts/microsoft-windows-iis.md:25 ../../gdi/monitors-languages/microsoft-dotnet.md:41
msgid "Number of seconds that wildcards in counter paths should be expanded and how often to refresh counters from configuration. (**default:** `60s`)"
msgstr "カウンタパスのワイルドカードを展開する秒数と、設定からカウンタをリフレッシュする頻度。(**default:**`60s`)"

#: ../../gdi/monitors-hosts/microsoft-windows-iis.md:25 ../../gdi/monitors-languages/asp-dot-net.md:25 ../../gdi/monitors-languages/microsoft-dotnet.md:41 ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "`printValid`"
msgstr "`printValid`"

#: ../../gdi/monitors-hosts/microsoft-windows-iis.md:25 ../../gdi/monitors-languages/microsoft-dotnet.md:41
msgid "Print out the configurations that match available performance counters. This option is used for debugging. (**default:** `false`)"
msgstr "利用可能なパフォーマンス・カウンターに一致する構成を印刷する。このオプションはデバッグに使われる。(**default:**`false`)"

#: ../../gdi/monitors-hosts/nginx.md:3 ../../gdi/opentelemetry/discovery-mode.rst:52
msgid "NGINX"
msgstr "NGINX"

#: ../../gdi/monitors-hosts/nginx.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `nginx` monitor type to  to retrieve metrics and logs from an NGINX instance."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と`nginx` monitor type を使用して、NGINX インスタンスからメトリクスとログを取得する。"

#: ../../gdi/monitors-hosts/nginx.md:23
msgid "Hostname or IP address of the NGINX instance. For example, `127.0.0.1`."
msgstr "NGINXインスタンスのホスト名またはIPアドレス。例えば、`127.0.0.1` 。"

#: ../../gdi/monitors-hosts/nginx.md:23
msgid "The port of the NGINX instance. For example, `8080`."
msgstr "NGINX インスタンスのポート。例えば、`8080` 。"

#: ../../gdi/monitors-hosts/nginx.md:23
msgid "Name of the NGINX instance."
msgstr "NGINXインスタンスの名前。"

#: ../../gdi/monitors-hosts/nginx.md:23
msgid "URL of the status endpoint. The default value is `http://{{.Host}}:{{.Port}}/nginx_status`, which takes the values defined in `host` and `port`."
msgstr "ステータス・エンドポイントの URL。デフォルト値は`http://{{.Host}}:{{.Port}}/nginx_status` で、`host` と`port` で定義された値を取ります。"

#: ../../gdi/monitors-hosts/nginx.md:23
msgid "Username for HTTP basic authentication, if needed."
msgstr "必要であれば、HTTPベーシック認証用のユーザー名。"

#: ../../gdi/monitors-hosts/nginx.md:23
msgid "Password for HTTP basic authentication, if needed."
msgstr "必要であれば、HTTPベーシック認証のパスワード。"

#: ../../gdi/monitors-hosts/nginx.md:23
msgid "Timeout in seconds for the request. The default value is `0`."
msgstr "リクエストのタイムアウト（秒）。デフォルト値は`0` 。"

#: ../../gdi/monitors-hosts/nginx.md:62
msgid "Nginx configuration"
msgstr "Nginxの設定"

#: ../../gdi/monitors-hosts/nginx.md:64
msgid "You can configure NGINX to expose status information by editing the NGINX configuration. See `ngx_http_stub_status_module` on the NGINX documentation site."
msgstr "NGINXの設定を編集することで、ステータス情報を公開するようにNGINXを設定できます。NGINX ドキュメント・サイトの`ngx_http_stub_status_module` を参照。"

#: ../../gdi/monitors-hosts/nginx.md:66
msgid "After you've set up the Collector, follow these steps to configure the Nginx web server to expose status metrics:"
msgstr "Collectorのセットアップが完了したら、以下の手順に従ってNginx Webサーバを構成し、ステータス メトリックを公開します："

#: ../../gdi/monitors-hosts/nginx.md:68
msgid "Add the following configuration to your Nginx server:"
msgstr "Nginxサーバーに以下の設定を追加する："

#: ../../gdi/monitors-hosts/nginx.md:81
msgid "Restart the Nginx web server."
msgstr "Nginxウェブサーバーを再起動します。"

#: ../../gdi/monitors-hosts/ntpq.md:3
msgid "NTPQ"
msgstr "NTPQ"

#: ../../gdi/monitors-hosts/ntpq.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `net-io` monitor type to retrieve metrics from NTPQ. This is an embedded form of the Telegraf NTPQ plugin and requires the `ntpq` executable available on the path of the agent."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と`net-io` monitor type を使用して、NTPQ からメトリクスを取得します。これは Telegraf NTPQ プラグインの組み込み形式で、エージェントのパスで利用可能な`ntpq` 実行ファイルが必要です。"

#: ../../gdi/monitors-hosts/ntpq.md:9 ../../gdi/monitors-monitoring/prometheus-exporter.md:11 ../../gdi/monitors-network/traefik.md:9 ../../gdi/monitors-orchestration/openshift-cluster.md:9
msgid "This monitor is available on Kubernetes, Linux, and Windows."
msgstr "このモニターはKubernetes、Linux、Windowsで利用できる。"

#: ../../gdi/monitors-hosts/ntpq.md:46
msgid "Notes:"
msgstr "注釈"

#: ../../gdi/monitors-hosts/ntpq.md:48
msgid "Include monitors with event-sending functionality in a `logs` pipeline that contains an exporter that makes the event submission requests."
msgstr "イベント送信機能を持つモニターを、イベント送信要求を行うエクスポーターを含む`ログ` パイプラインに含める。"

#: ../../gdi/monitors-hosts/ntpq.md:49
msgid "Use a resource detection processor to make host identity and other useful information available as event dimensions."
msgstr "リソース検出プロセッサを使用して、ホストのIDやその他の有用な情報をイベントディメンジョンとして利用できるようにする。"

#: ../../gdi/monitors-hosts/ntpq.md:23
msgid "`dnsLookup`"
msgstr "`dnsLookup`"

#: ../../gdi/monitors-hosts/ntpq.md:23
msgid "If set to `false`, set the `-n ntpq` flag. Deactivating DNS lookups can reduce metric gather time. The default value is `true`."
msgstr "`false` に設定されている場合は、`-n ntpq` フラグを設定する。DNSルックアップを無効にすると、メトリックの収集時間を短縮できる。デフォルト値は`true` 。"

#: ../../gdi/monitors-hosts/php-fpm.md:3
msgid "PHP FPM"
msgstr "PHP FPM"

#: ../../gdi/monitors-hosts/php-fpm.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `collectd/php-fpm` monitor type to monitor PHP-FastCGI Process Manager (FPM) using the pool status URL."
msgstr "`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent receiver<smartagent-receiver>` と`collectd/php-fpm` monitor type を使用して、プールステータス URL を使用して PHP-FastCGI Process Manager (FPM) を監視します。"

#: ../../gdi/monitors-hosts/php-fpm.md:21
msgid "Install PHP"
msgstr "PHPのインストール"

#: ../../gdi/monitors-hosts/php-fpm.md:23
msgid "To configure the PHP-FPM service itself to expose status metrics, follow these steps:"
msgstr "PHP-FPM サービス自身がステータスのメトリクスを公開するように 設定するには、以下の手順に従います："

#: ../../gdi/monitors-hosts/php-fpm.md:25
msgid "Activate the status path. See the PHP documentation for more information."
msgstr "ステータスパスを有効にする。詳細はPHPのドキュメントを参照のこと。"

#: ../../gdi/monitors-hosts/php-fpm.md:26
msgid "Configure access through the web server. The following example shows how to configure access for NGINX:"
msgstr "ウェブサーバーからのアクセスを設定する。次の例では、NGINXのアクセスを設定する方法を示します："

#: ../../gdi/monitors-hosts/php-fpm.md:36
msgid "Restart both the web server and PHP-FPM."
msgstr "Web サーバーと PHP-FPM の両方を再起動します。"

#: ../../gdi/monitors-hosts/php-fpm.md:38
msgid "Make sure that the URL you provide to reach the FPM status page through your web server ends in `?json`. This returns the metrics as `json`, which this plugin requires."
msgstr "ウェブサーバーから FPM のステータスページにアクセスするための URL の末尾が`?json` であることを確認する。これは、このプラグインが必要とする`json` としてメトリクスを返します。"

#: ../../gdi/monitors-hosts/php-fpm.md:65 ../../gdi/monitors-languages/genericjmx.md:46 ../../gdi/monitors-network/snmp.md:50
msgid "Advanced configuration example"
msgstr "高度な設定例"

#: ../../gdi/monitors-hosts/php-fpm.md:67
msgid "See the following config options:"
msgstr "以下の設定オプションを参照のこと："

#: ../../gdi/monitors-hosts/php-fpm.md:82
msgid "The following table shows the configuration options for `collectd/php-fpm`:"
msgstr "`collectd/php-fpm` の設定オプションを次の表に示します："

#: ../../gdi/monitors-hosts/php-fpm.md:42
msgid "The host name of the web server. For example, `127.0.0.1`."
msgstr "ウェブサーバーのホスト名。例えば、`127.0.0.1` 。"

#: ../../gdi/monitors-hosts/php-fpm.md:42
msgid "The port number of the web server. For example, `80`. The default value is `0`."
msgstr "ウェブサーバーのポート番号。例えば、`80` 。デフォルト値は`0` 。"

#: ../../gdi/monitors-hosts/php-fpm.md:42
msgid "Whether the monitor connects to Supervisor using HTTPS instead of HTTP. The default value is `false`."
msgstr "モニターがHTTPの代わりにHTTPSを使用してSupervisorに接続するかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/php-fpm.md:42
msgid "The scrape URL for Supervisor. The default value is `/status`."
msgstr "SupervisorのスクレイプURL。デフォルト値は`/status` 。"

#: ../../gdi/monitors-hosts/php-fpm.md:42
msgid "URL or Go template that to be populated with the `host`, `port`, and `path` values."
msgstr "URL または Go テンプレートに、`ホスト` 、`ポート` 、`パス` の値を入力する。"

#: ../../gdi/monitors-hosts/php-fpm.md:42
msgid "The `plugin_instance` dimension. It can take any value."
msgstr "`plugin_instance` 次元。任意の値を取ることができる。"

#: ../../gdi/monitors-hosts/procstat.md:3
msgid "procstat"
msgstr "procstat"

#: ../../gdi/monitors-hosts/procstat.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `procstat` monitor type to collect metrics about processes."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバ<smartagent-receiver>` と`procstat` モニタタイプを使用して、プロセスに関するメトリクスを収集する。"

#: ../../gdi/monitors-hosts/procstat.md:48
msgid "The following table shows the configuration options for the procstat monitor:"
msgstr "次の表は、procstatモニターのコンフィギュレーション・オプションを示している："

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "`exe`"
msgstr "`exe`"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "Name of an executable to monitor. For example, `exe: \"signalfx-agent*\"`."
msgstr "監視する実行ファイル名。例えば、`exe: \"signalfx-agent*\"`."

#: ../../gdi/monitors-hosts/procstat.md:23 ../../gdi/monitors-network/statsd.md:35
msgid "`pattern`"
msgstr "`pattern`"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "Regular expression pattern to match against."
msgstr "マッチする正規表現パターン。"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "`user`"
msgstr "`user`"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "Username to match against."
msgstr "対戦するユーザー名。"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "`pidFile`"
msgstr "`pidFile`"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "Path to pid file to monitor. For example, `pidFile: \"/var/run/signalfx-agent.pid\"`."
msgstr "監視するpidファイルへのパス。例えば、`pidFile: \"/var/run/signalfx-agent.pid\"`."

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "`processName`"
msgstr "`processName`"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "Use to override the process name dimension."
msgstr "プロセス名ディメンジョンをオーバーライドする場合に使用します。"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "`prefix`"
msgstr "`prefix`"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "Prefix to add to each dimension."
msgstr "各次元に付加する接頭辞。"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "`pidTag`"
msgstr "`pidTag`"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "Whether to add PID as a dimension or as part of the metric name. The default value is `false`."
msgstr "PIDをディメンションとして追加するか、メトリック名の一部として追加するか。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "`cmdLineTag`"
msgstr "`cmdLineTag`"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "When `true`, it adds the full `cmdline` as a dimension. The default value is `false`."
msgstr "`true` の場合、ディメンジョンとして`cmdline` が追加されます。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "`cGroup`"
msgstr "`cGroup`"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "The name of the cgroup to monitor. This cgroup name is appended to the configured `sysPath`. See the agent config schema for more information about the `sysPath` agent configuration."
msgstr "監視するcgroupの名前。このcgroup名は、設定された`sysPath` に付加される。`sysPath` エージェント設定の詳細については、エージェント設定スキーマを参照してください。"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "`WinService`"
msgstr "`WinService`"

#: ../../gdi/monitors-hosts/procstat.md:23
msgid "The name of a Windows service to report procstat information on."
msgstr "procstat情報を報告するWindowsサービスの名前。"

#: ../../gdi/monitors-hosts/procstat.md:63
msgid "On Linux hosts, this monitor relies on the `/proc` file system. If the underlying host's `/proc` file system is mounted somewhere other than `/proc`, specify the path using the top-level configuration `procPath`."
msgstr "Linuxホストでは、このモニターは`/proc` ファイルシステムに依存する。基盤となるホストの`/proc` ファイルシステムが`/proc` 以外の場所にマウントされている場合は、トップレベル構成`procPath` を使用してパスを指定します。"

#: ../../gdi/monitors-hosts/solr.md:3
msgid "SolrCloud"
msgstr "SolrCloud"

#: ../../gdi/monitors-hosts/solr.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the SolrCloud monitor type to monitor Solr instances. You can collect metrics only when the instance is running in SolrCloud mode."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と SolrCloud モニタータイプを使用して、Solr インスタンスを監視する。インスタンスが SolrCloud モードで実行されている場合にのみ、メトリクスを収集できます。"

#: ../../gdi/monitors-hosts/solr.md:9 ../../gdi/monitors-network/statsd.md:11
msgid "This integration is available for Kubernetes and Linux."
msgstr "この統合はKubernetesとLinuxで利用できる。"

#: ../../gdi/monitors-hosts/solr.md:23
msgid "Path to the Python binary. If not set, a built-in runtime is used. Can include arguments to the binary."
msgstr "Pythonバイナリへのパス。設定されていない場合は、組み込みのランタイムが使用される。バイナリーへの引数を含めることができる。"

#: ../../gdi/monitors-hosts/solr.md:23
msgid "Host or address of the Solr instance. For example, `127.0.0.1`."
msgstr "Solr インスタンスのホストまたはアドレス。例えば、`127.0.0.1` 。"

#: ../../gdi/monitors-hosts/solr.md:23
msgid "Port of the Solr instance."
msgstr "Solrインスタンスのポート。"

#: ../../gdi/monitors-hosts/solr.md:23
msgid "Name of the Solr cluster."
msgstr "Solrクラスタの名前。"

#: ../../gdi/monitors-hosts/solr.md:23
msgid "Whether stats from the `/metrics` endpoint are needed. The default value is`false`."
msgstr "`/metrics` エンドポイントからの統計が必要かどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/solr.md:23
msgid "List of metric names from the `/admin/metrics` endpoint to include. Valid when `EnhancedMetrics` is \"false\"."
msgstr "`/admin/metrics` エンドポイントに含まれるメトリック名のリスト。`EnhancedMetrics` が \"false \"の場合に有効。"

#: ../../gdi/monitors-hosts/solr.md:23
msgid "`excludeMetrics`"
msgstr "`excludeMetrics`"

#: ../../gdi/monitors-hosts/solr.md:23
msgid "List of metric names from the `/admin/metrics` endpoint to exclude. Valid when `EnhancedMetrics` is \"true\"."
msgstr "`/admin/metrics` エンドポイントから除外するメトリック名のリスト。`EnhancedMetrics` が \"true \"の場合に有効。"

#: ../../gdi/monitors-hosts/supervisor.md:3 ../../gdi/opentelemetry/collector-architecture.rst:89
msgid "Supervisor"
msgstr "スーパーバイザー"

#: ../../gdi/monitors-hosts/supervisor.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `supervisor` monitor type to retrieve the state of processes running by the Supervisor."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と`supervisor` monitor type を使用して、Supervisor が実行しているプロセスの状態を取得します。"

#: ../../gdi/monitors-hosts/supervisor.md:23
msgid "The host/IP address of the Supervisor XML-RPC API. Used to build the `url` option if a URL is not provided."
msgstr "Supervisor XML-RPC API のホスト/IP アドレス。URL が提供されない場合に`url` オプションを構築するために使用される。"

#: ../../gdi/monitors-hosts/supervisor.md:23
msgid "The port of the Supervisor XML-RPC API. Used to build the `url` option if a URL not provided. For example, `localhost`. The default value is `9001`."
msgstr "Supervisor XML-RPC API のポート。URL が提供されない場合に`url` オプションを構築するために使用される。例えば、`localhost`.デフォルト値は`9001` 。"

#: ../../gdi/monitors-hosts/supervisor.md:23
msgid "If true, the monitor connects to the Supervisor using the HTTPS protocol instead of the HTTP protocol. The default value is `false`."
msgstr "trueの場合、モニターはHTTPプロトコルの代わりにHTTPSプロトコルを使用してSupervisorに接続します。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/supervisor.md:23
msgid "The URL path to use for the scrape URL for Supervisor. The default value is `/RPC2`."
msgstr "SupervisorのスクレイプURLに使用するURLパス。デフォルト値は`/RPC2` 。"

#: ../../gdi/monitors-hosts/supervisor.md:23
msgid "URL on which to scrape Supervisor XML-RPC API. If this is not provided, it's derived from the `host`, `port`, `useHTTPS`, and `path` options. For example, `http://localhost:9001/RPC2`."
msgstr "Supervisor XML-RPC API をスクレイピングする URL。これが提供されない場合、`host` 、`port` 、`useHTTPS` 、`path` オプションから派生する。例えば、`http://localhost:9001/RPC2` 。"

#: ../../gdi/monitors-hosts/systemd.md:3 ../../gdi/opentelemetry/collector-architecture.rst:201
msgid "systemd"
msgstr "systemd"

#: ../../gdi/monitors-hosts/systemd.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `collectd/systemd` monitor type to collect metrics about the state of configured systemd services."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`collectd/systemd` モニタタイプを使用して、設定された systemd サービスの状態に関するメトリクスを収集します。"

#: ../../gdi/monitors-hosts/systemd.md:18
msgid "This integration reads the status of systemd services from `/var/run/dbus/system_bus_socket`. You must mount the host location to the container in which the Collector or the Smart Agent is running. The agent container must also run in privileged mode. The following example shows an excerpt of the `docker run` command:"
msgstr "この統合は、`/var/run/dbus/system_bus_socket` から systemd サービスのステータスを読み込みます。CollectorまたはSmart Agentが実行されているコンテナに、ホストの場所をマウントする必要があります。エージェントコンテナも特権モードで実行しなければならない。次の例は、`docker run` コマンドの抜粋である："

#: ../../gdi/monitors-hosts/systemd.md:57
msgid "Advanced examples"
msgstr "高度な例"

#: ../../gdi/monitors-hosts/systemd.md:59
msgid "The following is an excerpt of a YAML configuration for monitoring the state of `docker` and `ubuntu-fan` services:"
msgstr "以下は、`docker` と`ubuntu-fan` サービスの状態を監視するための YAML 設定の抜粋である："

#: ../../gdi/monitors-hosts/systemd.md:71
msgid "By default, the `gauge.substate.running` metrics, which indicates whether a service is running or not, is the only metric reported. Configure additional metrics using the `sendActiveState`, `sendSubState`, and `sendLoadState` configuration flags, as shown in the following example:"
msgstr "デフォルトでは、サービスが実行中かどうかを示す`gauge.substate.running` メトリックのみがレポートされます。次の例に示すように、`sendActiveState` 、`sendSubState` 、`sendLoadState` 構成フラグを使用して、追加のメトリクスを構成します："

#: ../../gdi/monitors-hosts/systemd.md:34
msgid "`services`"
msgstr "`services`"

#: ../../gdi/monitors-hosts/systemd.md:34
msgid "Services to report on."
msgstr "報告すべきサービス"

#: ../../gdi/monitors-hosts/systemd.md:34
msgid "`sendActiveState`"
msgstr "`sendActiveState`"

#: ../../gdi/monitors-hosts/systemd.md:34
msgid "Flag for sending metrics about the state of systemd services. The default value is `false`."
msgstr "systemd サービスの状態に関するメトリクスを送信するフラグ。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/systemd.md:34
msgid "`sendSubState`"
msgstr "`sendSubState`"

#: ../../gdi/monitors-hosts/systemd.md:34
msgid "Flag for sending more detailed metrics about the state of systemd services. The default value is `false`."
msgstr "systemd サービスの状態についてより詳細なメトリクスを送信するためのフラグ。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/systemd.md:34
msgid "`sendLoadState`"
msgstr "`sendLoadState`"

#: ../../gdi/monitors-hosts/systemd.md:34
msgid "Flag for sending metrics about the load state of systemd services. The default value is `false`."
msgstr "systemd サービスの負荷状態に関するメトリクスを送信するためのフラグ。デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/systemd.md:95
msgid "A service is in the state that a metric represents if the metric value is `1` and not in that state if the metric value is `0`. The integration assigns the name of monitored services to the `systemd_service` dimension."
msgstr "サービスは、メトリック値が`1` の場合、メトリックが示す状態にあり、メトリック値が`0` の場合、その状態にない。統合では、監視サービスの名前を`systemd_service` ディメンジョンに割り当てます。"

#: ../../gdi/monitors-hosts/varnish.md:3
msgid "Varnish"
msgstr "ワニス"

#: ../../gdi/monitors-hosts/varnish.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `telegraf/varnish` monitor type to collect Varnish metrics."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`telegraf/varnish` モニタタイプを使用して、Varnish メトリクスを収集します。"

#: ../../gdi/monitors-hosts/varnish.md:18
msgid "This integration uses the `varnishstat` command. The Collector or Smart Agent must run on the same host as the Varnish server."
msgstr "この統合では、`varnishstat` コマンドを使用する。コレクターまたはスマートエージェントは、Varnishサーバーと同じホスト上で実行する必要があります。"

#: ../../gdi/monitors-hosts/varnish.md:20
msgid "Run the following command to activate the Smart Agent to run the `varnishstat` command:"
msgstr "以下のコマンドを実行して、スマートエージェントを有効化し、`varnishstat` コマンドを実行します："

#: ../../gdi/monitors-hosts/varnish.md:33
msgid "`useSudo`"
msgstr "`useSudo`"

#: ../../gdi/monitors-hosts/varnish.md:33
msgid "If running as a restricted user, activate this flag to use `sudo`. The default value is `false`."
msgstr "制限ユーザーとして実行する場合は、このフラグを有効にして`sudo`.デフォルト値は`false` 。"

#: ../../gdi/monitors-hosts/varnish.md:33
msgid "`binary`"
msgstr "`binary`"

#: ../../gdi/monitors-hosts/varnish.md:33
msgid "The location of the `varnishstat` binary.  The default value is `/usr/bin/varnishstat`."
msgstr "`varnishstat` バイナリの場所。 デフォルト値は`/usr/bin/varnishstat` 。"

#: ../../gdi/monitors-hosts/varnish.md:33
msgid "`stats`"
msgstr "`stats`"

#: ../../gdi/monitors-hosts/varnish.md:33
msgid "Which stats to gather. You can use glob matching. For example, `stats = [\"MAIN.*\"]`. The default value is `[MAIN.*]`."
msgstr "どの統計を集めるか。グロブ・マッチングを使用できます。例えば、`stats =[\"MAIN.*\"]`.デフォルト値は`[MAIN.*]` 。"

#: ../../gdi/monitors-hosts/varnish.md:33
msgid "`instanceName`"
msgstr "`instanceName`"

#: ../../gdi/monitors-hosts/varnish.md:33
msgid "Optional name for the Varnish instance to query. The setting has the same effect of passing the `-n` parameter value."
msgstr "問い合わせる Varnish インスタンスの名前。この設定は、`-n` パラメータ値を渡すのと同じ効果がある。"

#: ../../gdi/monitors-hosts/vsphere.md:3
msgid "VMware vSphere"
msgstr "VMware vSphere"

#: ../../gdi/monitors-hosts/vsphere.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `vsphere` monitor type to collect metrics from vSphere through the vSphere API."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`vsphere` モニタータイプを使用して、vSphere API を通じて vSphere からメトリクスを収集します。"

#: ../../gdi/monitors-hosts/vsphere.md:9
msgid "This integration is available on Kubernetes, Linux, and Windows. You can install it on the same server used by vSphere if it's running on Linux or Windows."
msgstr "この統合はKubernetes、Linux、Windowsで利用できる。vSphereがLinuxやWindows上で動作している場合は、vSphereが使用しているのと同じサーバーにインストールすることができる。"

#: ../../gdi/monitors-hosts/vsphere.md:11
msgid "This integration uses VMware `govmomi` SDK, which officially supports vCenter 6.5, 6.7, and 7.0. While this monitor might work with vCenter 5.1, 5.5, and 6.0, these versions are not officially supported."
msgstr "この統合はVMware`govmomi` SDKを使用しており、vCenter 6.5、6.7、7.0を正式にサポートしている。このモニターはvCenter 5.1、5.5、6.0で動作するかもしれませんが、これらのバージョンは公式にはサポートされていません。"

#: ../../gdi/monitors-hosts/vsphere.md:14
msgid "When you add a custom role, don't assign any privileges to it. The role is created as a read-only role with three system-defined privileges: `System.Anonymous`, `System.View`, and `System.Read`. For more information, see the vSphere official documentation on user roles."
msgstr "カスタムロールを追加する際には、権限を割り当てないでください。このロールは、3つのシステム定義権限を持つ読み取り専用ロールとして作成される：`System.Anonymous` 、`System.View` 、`System.Read` 。詳細については、ユーザー・ロールに関するvSphere公式ドキュメントを参照してください。"

#: ../../gdi/monitors-hosts/vsphere.md:52
msgid "See the following example with extended config options:"
msgstr "コンフィグオプションを拡張した次の例を参照："

#: ../../gdi/monitors-hosts/vsphere.md:77
msgid "The following table shows the configuration options for the `vsphere` monitor:"
msgstr "次の表に、`vsphere` モニタの構成オプションを示します："

#: ../../gdi/monitors-hosts/vsphere.md:29
msgid "Hostname or IP address of the vSphere instance. For example, `127.0.0.1`."
msgstr "vSphere インスタンスのホスト名または IP アドレス。例えば、`127.0.0.1` 。"

#: ../../gdi/monitors-hosts/vsphere.md:29
msgid "Port of the vSphere instance. The default value is `0`)"
msgstr "vSphere インスタンスのポート。デフォルト値は`0`)"

#: ../../gdi/monitors-hosts/vsphere.md:29
msgid "vSphere username."
msgstr "vSphereユーザー名。"

#: ../../gdi/monitors-hosts/vsphere.md:29
msgid "vSphere password."
msgstr "vSphereのパスワード。"

#: ../../gdi/monitors-hosts/vsphere.md:29
msgid "`inventoryRefreshInterval`"
msgstr "`inventoryRefreshInterval`"

#: ../../gdi/monitors-hosts/vsphere.md:29
msgid "Controls how often to reload the inventory and inventory metrics. The default value is `60s`."
msgstr "在庫と在庫メトリクスのリロード頻度を制御します。デフォルト値は`60s` 。"

#: ../../gdi/monitors-hosts/vsphere.md:29
msgid "`perfBatchSize`"
msgstr "`perfBatchSize`"

#: ../../gdi/monitors-hosts/vsphere.md:29
msgid "Controls the maximum number of inventory objects to be queried for performance data per request. Set this value to `0` to request performance data for all inventory objects at a time. The default value is `10`."
msgstr "リクエストごとにパフォーマンス・データを照会するインベントリ・オブジェクトの最大数を制御します。この値を`0` に設定すると、一度にすべてのインベントリ・オブジェクトのパフォーマンス・データを要求することができます。デフォルト値は`10` 。"

#: ../../gdi/monitors-hosts/vsphere.md:29
msgid "`tlsCACertPath`"
msgstr "`tlsCACertPath`"

#: ../../gdi/monitors-hosts/vsphere.md:29
msgid "Path to the CA certificate file."
msgstr "CA 証明書ファイルへのパス。"

#: ../../gdi/monitors-hosts/vsphere.md:29
msgid "`tlsClientCertificatePath`"
msgstr "`tlsClientCertificatePath`"

#: ../../gdi/monitors-hosts/vsphere.md:29
msgid "Path to the client certificate. Both `tlsClientKeyPath` and `tlsClientCertificatePath` must be present. The files must contain PEM encoded data."
msgstr "クライアント証明書へのパス。`tlsClientKeyPath` と`tlsClientCertificatePath` の両方が存在しなければならない。ファイルにはPEMエンコードされたデータが含まれていなければならない。"

#: ../../gdi/monitors-hosts/vsphere.md:29
msgid "`tlsClientKeyPath`"
msgstr "`tlsClientKeyPath`"

#: ../../gdi/monitors-hosts/vsphere.md:29
msgid "Path to the keyfile."
msgstr "キーファイルへのパス。"

#: ../../gdi/monitors-hosts/vsphere.md:92
msgid "To report metrics for a vSphere deployment, this monitor logs into a vCenter Server and retrieves data about the deployment and real time performance data on a regular interval. When the monitor first runs, it logs in to the vCenter Server and traverses the inventory, gathering and caching all of the hosts and virtual machines and their available metrics."
msgstr "vSphere 展開のメトリックをレポートするために、このモニタは vCenter Server にログインし、展開に関するデータとリアルタイムのパフォーマンス データを定期的に取得します。モニタが最初に実行されると、vCenter Server にログインしてインベントリをトラバースし、すべてのホストと仮想マシン、およびそれらの利用可能なメトリックを収集してキャッシュします。"

#: ../../gdi/monitors-hosts/vsphere.md:94
msgid "After the initial sweep, the monitor queries the vCenter for performance data and metrics. This query runs every 20 seconds, which is the interval at which the vCenter makes real time performance data available. As a result, regardless of the `intervalSeconds` value in the agent configuration, this monitor runs every 20 seconds."
msgstr "初期スイープの後、モニターはvCenterにパフォーマンスデータとメトリクスを問い合わせます。このクエリは、vCenter がリアルタイムのパフォーマンス・データを利用可能にする間隔である 20 秒ごとに実行されます。その結果、エージェント設定の`intervalSeconds` の値に関係なく、このモニターは20秒ごとに実行される。"

#: ../../gdi/monitors-hosts/vsphere.md:96
msgid "The monitor also refreshes, at a configurable interval, the cache of hosts, virtual machines, and metrics. By default, this refresh takes place every 60 seconds; however, this interval can be changed by updating the configuration field `InventoryRefreshInterval`."
msgstr "モニタはまた、ホスト、仮想マシン、およびメトリックのキャッシュを、設定可能な間隔で更新します。デフォルトでは、このリフレッシュは60秒ごとに行われますが、この間隔は設定フィールド`InventoryRefreshInterval` を更新することで変更できます。"

#: ../../gdi/monitors-hosts/win-services.md:3
msgid "Windows Services"
msgstr "Windowsサービス"

#: ../../gdi/monitors-hosts/win-services.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `telegraf/win_services` monitor type to ingest metrics about Windows services."
msgstr "`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent レシーバー<smartagent-receiver>` と`telegraf/win_services` モニタタイプを使用して、Windows サービスに関するメトリクスをインジェストする。"

#: ../../gdi/monitors-hosts/win-services.md:21
msgid "`serviceNames`"
msgstr "`serviceNames`"

#: ../../gdi/monitors-hosts/win-services.md:21
msgid "List of strings"
msgstr "文字列のリスト"

#: ../../gdi/monitors-hosts/win-services.md:21
msgid "Names of services to monitor. All services will be monitored if none are specified."
msgstr "監視するサービス名。何も指定しなければ、すべてのサービスが監視される。"

#: ../../gdi/monitors-languages/asp-dot-net.md:3
msgid "ASP.NET"
msgstr "ASP.NET"

#: ../../gdi/monitors-languages/asp-dot-net.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `aspdotnet` monitor type to retrieve metrics for requests, errors, sessions, and worker processes from ASP.NET applications."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`aspdotnet` モニタタイプを使用して、ASP.NET アプリケーションからリクエスト、エラー、セッション、ワーカープロセスのメトリクスを取得します。"

#: ../../gdi/monitors-languages/asp-dot-net.md:9
msgid "This integration reports the instantaneous values of Windows Performance Counters, which are the source of the retrieved metrics. Most of the performance counters in this monitor are gauges that represent rates per second and percentages. Between collection intervals, spikes might occur in the Performance Counters. To mitigate the effect of these spikes, decrease the reporting interval on the monitor so that it collects more frequently."
msgstr "この統合は、取得したメトリクスのソースである Windows パフォーマンス・カウンターの瞬時値をレポートします。このモニターのパフォーマンス・カウンターのほとんどは、秒あたりのレートとパーセンテージを表すゲージである。収集間隔の間に、パフォーマンス・カウンターにスパイクが発生することがある。このようなスパイクの影響を軽減するには、モニターの報告間隔を短くして、より頻繁に収集するようにする。"

#: ../../gdi/monitors-languages/asp-dot-net.md:25
msgid "This integer is the number of seconds that wildcards in counter paths should be expanded and how often to refresh counters from configuration. The default is `60s`."
msgstr "この整数は、カウンタ・パスのワイルドカードを展開する秒数と、コンフィギュレーションからカウンタをリフレッシュする頻度である。デフォルトは`60s` 。"

#: ../../gdi/monitors-languages/asp-dot-net.md:25
msgid "Use this flag to print out the configurations that match available performance counters. Use the flag for debugging. The default is `false`."
msgstr "利用可能なパフォーマンス・カウンタに一致するコンフィグレーションをプリントアウトするには、このフラグを使用する。このフラグはデバッグに使用する。デフォルトは`false` 。"

#: ../../gdi/monitors-languages/expvar.md:3
msgid "Expvar (Go)"
msgstr "Expvar (Go)"

#: ../../gdi/monitors-languages/expvar.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `expvar` monitor type to scrape metrics exposed by [expvar](https://golang.org/pkg/expvar/)."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`expvar` モニタタイプを使用して、[expvar](https://golang.org/pkg/expvar/) によって公開されたメトリクスをスクレイピングします。"

#: ../../gdi/monitors-languages/expvar.md:9
msgid "The integration uses configured paths to get metric and dimension values from fetched JSON objects at an HTTP endpoint.  The Metrics section in this document shows metrics derived from expvar variable [`memstats`](https://golang.org/pkg/runtime/), which is exposed by default. These `memstat` metrics are referred to as standard or default metrics."
msgstr "この統合では、構成されたパスを使用して、HTTP エンドポイントでフェッチされた JSON オブジェクトからメトリック値とディメンジョン値を取得します。 このドキュメントのMetricsセクションは、デフォルトで公開されているexpvar変数[`memstats`](https://golang.org/pkg/runtime/) に由来するメトリクスを示している。これらの`memstat` メトリクスは、標準またはデフォルトのメトリクスと呼ばれる。"

#: ../../gdi/monitors-languages/expvar.md:24
msgid "Host of the expvar endpoint"
msgstr "expvarエンドポイントのホスト"

#: ../../gdi/monitors-languages/expvar.md:24
msgid "Port of the expvar endpoint"
msgstr "expvarエンドポイントのポート"

#: ../../gdi/monitors-languages/expvar.md:24
msgid "If `true`, the agent will connect to the host using HTTPS instead of plain HTTP. (**default:** `false`)"
msgstr "`true` の場合、エージェントはプレーン HTTP ではなく HTTPS を使用してホストに接続します。(**default:**`false`)"

#: ../../gdi/monitors-languages/expvar.md:24
msgid "If useHTTPS is `true `and this option is also `true`, the host TLS cert will not be verified. (**default:** `false`)"
msgstr "useHTTPSが`true`であり、このオプションも`true` である場合、ホストのTLS証明書は検証されない。(**default:**`false`)"

#: ../../gdi/monitors-languages/expvar.md:24
msgid "Path to the expvar endpoint, usually `/debug/vars` (the default). (**default:** `/debug/vars`)"
msgstr "通常は`/debug/vars` (デフォルト)。(**default:**`/debug/vars`) 。"

#: ../../gdi/monitors-languages/expvar.md:24
msgid "If `true`, sends metrics memstats.alloc, memstats.by_size.size, memstats.by_size.mallocs and memstats.by_size.frees (**default:** `false`)"
msgstr "`true` の場合、memstats.alloc、memstats.by_size.size、memstats.by_size.mallocs、memstats.by_size.frees の各メトリクスを送信する（**default:**`false` ）。"

#: ../../gdi/monitors-languages/expvar.md:24
msgid "Metrics configurations"
msgstr "メトリクス構成"

#: ../../gdi/monitors-languages/expvar.md:61
msgid "The **nested** `metrics` configuration object has the following fields:"
msgstr "nested**`metrics` 構成オブジェクトには以下のフィールドがある："

#: ../../gdi/monitors-languages/expvar.md:24
msgid "`JSONPath`"
msgstr "`JSONPath`"

#: ../../gdi/monitors-languages/expvar.md:24
msgid "JSON path of the metric value"
msgstr "メトリック値のJSONパス"

#: ../../gdi/monitors-languages/expvar.md:24
msgid "SignalFx metric type. Possible values are \"gauge\" or \"cumulative\""
msgstr "SignalFx メトリックタイプ。設定可能な値は \"gauge \"または \"cumulative\"。"

#: ../../gdi/monitors-languages/expvar.md:24
msgid "Metric dimensions"
msgstr "メートル寸法"

#: ../../gdi/monitors-languages/expvar.md:24
msgid "`pathSeparator`"
msgstr "`pathSeparator`"

#: ../../gdi/monitors-languages/expvar.md:24
msgid "Path separator character of metric value in JSON object (**default:** `.`)"
msgstr "JSONオブジェクト内のメトリック値のパス区切り文字 (**default:**`.`)"

#: ../../gdi/monitors-languages/expvar.md:71
msgid "The **nested** `dimensions` configuration object has the following fields:"
msgstr "nested**`dimensions` コンフィギュレーション・オブジェクトには以下のフィールドがある："

#: ../../gdi/monitors-languages/expvar.md:24
msgid "JSON path of the dimension value"
msgstr "寸法値の JSON パス"

#: ../../gdi/monitors-languages/expvar.md:24
msgid "`value`"
msgstr "`value`"

#: ../../gdi/monitors-languages/expvar.md:24
msgid "Dimension value"
msgstr "寸法値"

#: ../../gdi/monitors-languages/expvar.md:81
msgid "Do not configure the monitor for memstats metrics because they are standard metrics provided by default. The following metrics are also available for this integration:"
msgstr "memstatsメトリクスはデフォルトで提供される標準メトリクスであるため、モニターを構成しないでください。この統合では、以下のメトリクスも使用できます："

#: ../../gdi/monitors-languages/genericjmx.md:3
msgid "GenericJMX"
msgstr "GenericJMX"

#: ../../gdi/monitors-languages/genericjmx.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `genericjmx` monitor to expose metrics on Java Management Extensions (JMX), a generic framework to provide and query management information. The interface is used by the Java Virtual Machine (JVM) to provide information about the memory used and threads. For a more flexible alternative, use [the JMX monitor](https://docs.splunk.com/Observability/gdi/jmx/jmx.html)."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`genericjmx` モニタを使用して、管理情報を提供しクエリする汎用フレームワークである Java Management Extensions (JMX) 上のメトリクスを公開します。このインターフェースは、Java仮想マシン（JVM）が使用するメモリとスレッドに関する情報を提供するために使用される。より柔軟な代替案としては、[JMXモニター](https://docs.splunk.com/Observability/gdi/jmx/jmx.html) を使用してください。"

#: ../../gdi/monitors-languages/genericjmx.md:23
msgid "JMX connection port (not the RMI port) on the application. This corresponds to the `com.sun.management.jmxremote.port` Java property that should be set on the JVM when running the application."
msgstr "アプリケーションのJMX接続ポート（RMIポートではない）。これは、アプリケーションの実行時に JVM に設定される`com.sun.management.jmxremote.port` Java プロパティに対応します。"

#: ../../gdi/monitors-languages/genericjmx.md:23
msgid "This is how the service type is identified in the Splunk Observability Cloud UI so that you can get built-in content."
msgstr "これは、Splunk Observability Cloud UI でサービスタイプが識別され、組み込みのコンテンツを取得できるようにする方法です。"

#: ../../gdi/monitors-languages/genericjmx.md:23
msgid "The JMX connection string. This is rendered as a Go template and has access to the other values in this config. **Note:** Do not set this string directly; setting the host and port as specified above is preferred. The default value is `service:jmx:rmi:///jndi/rmi://{{.Host}}:{{.Port}}/jmxrmi`."
msgstr "JMX 接続文字列。これはGoテンプレートとしてレンダリングされ、このconfigの他の値にアクセスできる。**注意:** この文字列を直接設定しないでください。上記のようにホストとポートを設定することが望ましいです。デフォルト値は`service:jmx:rmi:///jndi/rmi://{.Host}}:{{.Port}}/jmxrmi` です。"

#: ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "Prefixes the generated plugin instance with prefix. If a second `instancePrefix` is specified in a referenced MBean block, the prefix specified in the Connection block will appear at the beginning of the plugin instance, and the prefix specified in the MBean block will be appended to it."
msgstr "生成されたプラグインインスタンスにプレフィックスをつけます。参照されるMBeanブロックで2番目の`instancePrefix` が指定された場合、Connectionブロックで指定された接頭辞がプラグインインスタンスの先頭に現れ、MBeanブロックで指定された接頭辞がそれに追加される。"

#: ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "Username to authenticate to the server"
msgstr "サーバーを認証するユーザー名"

#: ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "User password to authenticate to the server"
msgstr "サーバーを認証するためのユーザーパスワード"

#: ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "Takes in key-value pairs of custom dimensions at the connection level."
msgstr "接続レベルでカスタム・ディメンジョンのキーと値のペアを取り込みます。"

#: ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "A list of the MBeans defined in `mBeanDefinitions` to actually collect. If not provided, then all defined MBeans will be collected."
msgstr "実際に収集する`mBeanDefinitions` で定義された MBeans のリスト。提供されない場合、定義されたすべてのMBeansが収集される。"

#: ../../gdi/monitors-languages/genericjmx.md:23
msgid "A list of the MBeans to omit. This is useful when only a few MBeans need to be omitted from the default list."
msgstr "省略するMBeansのリスト。これは、デフォルト・リストから数MBeansだけを省く必要がある場合に便利である。"

#: ../../gdi/monitors-languages/genericjmx.md:23
msgid "`map of objects` (see the following table)"
msgstr "`オブジェクトのマップ` (以下の表を参照)"

#: ../../gdi/monitors-languages/genericjmx.md:23
msgid "Specifies how to map JMX MBean values to metrics. Specific service monitors such as Cassandra, Kafka, or ActiveMQ are pre-loaded with a set of mappings, and any that you add in this option will be merged with those. See <a href=\"https://collectd.org/documentation/manpages/collectd-java.5.shtml#genericjmx_plugin\" target=\"_blank\">GenericJMX plugin</a> for more details."
msgstr "JMX MBean の値をメトリックにマッピングする方法を指定します。Cassandra、Kafka、ActiveMQなどの特定のサービス・モニターには、マッピングのセットがあらかじめロードされており、このオプションで追加したマッピングは、それらのマッピングにマージされます。詳しくは<a href=\"https://collectd.org/documentation/manpages/collectd-java.5.shtml#genericjmx_plugin\" target=\"_blank\">GenericJMXプラグイン</a>を参照してください。"

#: ../../gdi/monitors-languages/genericjmx.md:23
msgid "Sets the pattern which is used to retrieve MBeans from the MBeanServer. If more than one MBean is returned, you should use the `instanceFrom` option to make the identifiers unique."
msgstr "MBeanServerからMBeansを取得するために使用されるパターンを設定します。複数のMBeanが返される場合、`instanceFrom` オプションを使用して識別子を一意にする必要があります。"

#: ../../gdi/monitors-languages/genericjmx.md:23
msgid "The object names used by JMX to identify MBeans include \"properties\", which are basically key-value pairs. If the given object name is not unique and multiple MBeans are returned, the values of those properties usually differ. You can use this option to build the plugin instance from the appropriate property values. This is optional and can be repeated to generate the plugin instance from multiple property values."
msgstr "JMXがMBeansを識別するために使用するオブジェクト名には、基本的にキーと値のペアである \"プロパティ \"が含まれる。与えられたオブジェクト名が一意でなく、複数のMBeansが返される場合、それらのプロパティの値は通常異なる。このオプションを使用すると、適切なプロパティ値からプラグイン・インスタンスを構築できます。これはオプションで、複数のプロパティ値からプラグインインスタンスを生成するために繰り返すことができます。"

#: ../../gdi/monitors-languages/genericjmx.md:23
msgid "`list of objects` (see the following table)"
msgstr "`オブジェクトのリスト` (以下の表を参照)"

#: ../../gdi/monitors-languages/genericjmx.md:23
msgid "The `value` blocks map one or more attributes of an MBean to a value list<!---in collectd-->. There must be at least one `value` block within each MBean block."
msgstr "`value` ブロックはMBeanの1つ以上の属性を値リスト<!---in collectd-->にマップする。各MBeanブロック内に少なくとも1つの`値` ブロックがなければならない。"

#: ../../gdi/monitors-languages/genericjmx.md:23
msgid "Sets the data set being used<!---within collectd--> to handle the values of the MBean attribute."
msgstr "MBean属性の値を扱うために<!---collectd-->内で使用されるデータセットを設定する。"

#: ../../gdi/monitors-languages/genericjmx.md:23
msgid "Sets the name of the attribute from which to read the value. You can access the keys of composite types by using a dot to concatenate the key name to the attribute name. For example,  “attrib0.key42”. If `table` is set to `true`, path must point to a composite type, otherwise it must point to a numeric type."
msgstr "値を読み込む属性名を設定します。ドットを使ってキー名と属性名を連結すれば、複合型のキーにアクセスできる。例えば、\"attrib0.key42\"。`テーブル` が`真の` に設定されている場合、パスは複合型を指し示す必要があり、そうでない場合は数値型を指し示す必要がある。"

#: ../../gdi/monitors-languages/genericjmx.md:23 ../../gdi/monitors-messaging/apache-activemq.md:29
msgid "The plural form of the `attribute` config above. Used to derive multiple metrics from a single MBean."
msgstr "上記の`属性` コンフィグの複数形。単一の MBean から複数のメトリクスを導出するために使用されます。"

#: ../../gdi/monitors-languages/genericjmx.md:124
msgid "Exposed ports"
msgstr "露出したポート"

#: ../../gdi/monitors-languages/genericjmx.md:126
msgid "The following Java properties show how to expose JMX ports to inbound connections. For more information, see Monitoring and Management Using JMX Technology in the Java documentation."
msgstr "以下のJavaプロパティは、JMXポートをインバウンド接続に公開する方法を示しています。詳細については、Javaドキュメントの「Monitoring and Management Using JMX Technology」を参照のこと。"

#: ../../gdi/monitors-languages/genericjmx.md:136
msgid "This works as long as the agent is allowed to access port 5000 on the Java app host. Note that this does not turn on authentication or encryption, but these can be added."
msgstr "これは、エージェントがJavaアプリホスト上のポート5000へのアクセスを許可されている限り機能する。これは認証や暗号化をオンにはしないが、追加することは可能である。"

#: ../../gdi/monitors-languages/genericjmx.md:138
msgid "The following error messages assume the host config is set to 172.17.0.3 and the port set to 5000. Your host config and port settings might be different. The following sections show errors you might receive and their meanings:"
msgstr "以下のエラーメッセージは、ホスト設定が172.17.0.3、ポート設定が5000に設定されていることを前提としている。ホストの設定とポートの設定が違うかもしれません。以下のセクションでは、表示される可能性のあるエラーとその意味を示します："

#: ../../gdi/monitors-languages/genericjmx.md:140
msgid "Connection Refused"
msgstr "接続拒否"

#: ../../gdi/monitors-languages/genericjmx.md:150
msgid "This error indicates that the JMX connect port is not open on the specified host. Confirm, using netstat/ss or some other tool, that this port is indeed open on the configured host and is listening on an appropriate address. If the agent is running on a remote server, JMX might not be listening on localhost only."
msgstr "このエラーは、JMX 接続ポートが指定されたホスト上で開いていないことを示しています。netstat/ssやその他のツールを使って、このポートが設定されたホスト上で実際に開いていて、適切なアドレスでリッスンしていることを確認する。エージェントがリモートサーバー上で動作している場合、JMXはlocalhostのみでリッスンしていない可能性があります。"

#: ../../gdi/monitors-languages/genericjmx.md:152
msgid "RMI Connection Issues"
msgstr "RMI接続の問題"

#: ../../gdi/monitors-languages/genericjmx.md:158
msgid "This indicates that the JMX connect port was reached successfully, but the RMI port that it was directed to is being blocked, probably by a firewall. Make sure the `com.sun.management.jmxremote.rmi.port` property in your Java app is set to the same port as the JMX connect port. There might be other variations of the error message that say Connection reset or Connection refused which indicate a similar cause."
msgstr "これは、JMX接続ポートには正常に到達したが、接続先のRMIポートがファイアウォールによってブロックされていることを示している。Java アプリの`com.sun.management.jmxremote.rmi.port` プロパティが、JMX 接続ポートと同じポートに設定されていることを確認してください。エラーメッセージには、Connection reset（接続がリセットされました）やConnection refused（接続が拒否されました）など、同様の原因を示す他のバリエーションがあるかもしれません。"

#: ../../gdi/monitors-languages/java-monitor.md:3
msgid "Java metrics"
msgstr "Javaメトリクス"

#: ../../gdi/monitors-languages/java-monitor.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `java-monitor` to retrieve metrics from a Java application."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`java-monitor` を使用して、Java アプリケーションからメトリクスを取得します。"

#: ../../gdi/monitors-languages/java-monitor.md:12
msgid "To activate metrics collection in the OpenTelemetry Java agent, see {ref}`Activate metrics collection <enable_automatic_metric_collection>`."
msgstr "OpenTelemetry Java エージェントでメトリクス・コレクションを有効にするには、{ref}`メトリクス・コレクションを有効にする<enable_automatic_metric_collection>` を参照してください。"

#: ../../gdi/monitors-languages/java-monitor.md:52
msgid "The following table shows the configuration options for the `java-monitor`:"
msgstr "次の表は、`java-monitor` の設定オプションを示す："

#: ../../gdi/monitors-languages/java-monitor.md:27
msgid "Host is filled in by auto-discovery if the receiver has a discovery rule."
msgstr "ホストは、受信機に発見ルールがある場合、自動発見によって入力される。"

#: ../../gdi/monitors-languages/java-monitor.md:27
msgid "Port is filled in by auto-discovery if the receiver has a discovery rule. Default value is `0`."
msgstr "ポート番号は、受信機にディスカバリールールがある場合、自動ディスカバリーによって入力される。デフォルト値は`0` 。"

#: ../../gdi/monitors-languages/java-monitor.md:27
msgid "`jarFilePath`"
msgstr "`jarFilePath`"

#: ../../gdi/monitors-languages/java-monitor.md:27
msgid "Path to the jar file that implements the monitoring logic."
msgstr "監視ロジックを実装するjarファイルへのパス。"

#: ../../gdi/monitors-languages/java-monitor.md:27
msgid "`javaBinary`"
msgstr "`javaBinary`"

#: ../../gdi/monitors-languages/java-monitor.md:27
msgid "By default, the agent use its bundled Java runtime (Java 8). If you wish to use a Java runtime that already exists on the system, specify the full path to the `java` binary here in `/usr/bin/java`."
msgstr "デフォルトでは、エージェントはバンドルされているJavaランタイム（Java 8）を使用する。システム上にすでに存在するJavaランタイムを使用したい場合は、`java` バイナリへのフルパスを`/usr/bin/java` に指定してください。"

#: ../../gdi/monitors-languages/java-monitor.md:27
msgid "`mainClass`"
msgstr "`mainClass`"

#: ../../gdi/monitors-languages/java-monitor.md:27
msgid "The class within the specified `jarFilePath` that contains a main method to execute."
msgstr "指定された`jarFilePath` 内の、実行するメイン・メソッドを含むクラス。"

#: ../../gdi/monitors-languages/java-monitor.md:27
msgid "`classPath`"
msgstr "`classPath`"

#: ../../gdi/monitors-languages/java-monitor.md:27
msgid "Additional class paths to set on the invoked Java subprocess."
msgstr "呼び出されたJavaサブプロセスに設定する追加のクラス・パス。"

#: ../../gdi/monitors-languages/java-monitor.md:27
msgid "`extraJavaArgs`"
msgstr "`extraJavaArgs`"

#: ../../gdi/monitors-languages/java-monitor.md:27
msgid "Additional flags to the Java subprocess"
msgstr "Javaサブプロセスへの追加フラグ"

#: ../../gdi/monitors-languages/jmx.md:3 ../../gdi/opentelemetry/collector-architecture.rst:205 ../../gdi/opentelemetry/collector-architecture.rst:209
msgid "JMX"
msgstr "JMX"

#: ../../gdi/monitors-languages/jmx.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `jmx` monitor type to run an arbitrary Groovy script to convert JMX MBeans fetched from a remote Java application to SignalFx data points. This is a more flexible alternative to the [GenericJMX](https://docs.splunk.com/Observability/gdi/monitors-languages/genericjmx.html) monitor."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と`jmx` monitor type を使用して、任意の Groovy スクリプトを実行し、リモート Java アプリケーションからフェッチされた JMX MBeans を SignalFx データポイントに変換する。これは、[GenericJMX](https://docs.splunk.com/Observability/gdi/monitors-languages/genericjmx.html) モニターの、より柔軟な代替品である。"

#: ../../gdi/monitors-languages/jmx.md:9
msgid "You can use the following utility helpers in the Groovy script within the `util` variable, which is set in the script's context:"
msgstr "以下のユーティリティ・ヘルパーは、Groovyスクリプトの中で、スクリプトのコンテキストに設定されている`util` 変数の中で使用することができます："

#: ../../gdi/monitors-languages/jmx.md:11
msgid "`util.queryJMX(String objectName)`: This helper queries the configured JMX application for the given `objectName`, which can include wildcards. In any case, the return value will be a `List` of zero or more `GroovyMBean` objects, which are a convenience wrapper that Groovy provides to make accessing attributes on the MBean simple. See http://groovy-lang.org/jmx.html for more information about the `GroovyMBean` object. You can use the Groovy `.first()` method on the returned list to access the first MBean is you are only expecting one."
msgstr "`util.queryJMX(String objectName)` ：このヘルパーは、指定された`objectName` に対して、設定された JMX アプリケーションをクエリします。いずれにせよ、戻り値は`リスト` ゼロ以上の`GroovyMBean` オブジェクトになります。これはMBean上の属性に簡単にアクセスするためにGroovyが提供する便利なラッパーです。`GroovyMBean` オブジェクトの詳細についてはhttp://groovy-lang.org/jmx.html。返されたリストでGroovy`.first()` メソッドを使い、最初のMBeanにアクセスすることができます。"

#: ../../gdi/monitors-languages/jmx.md:13
msgid "`util.makeGauge(String name, double val, Map<String, String> dimensions)`:   A convenience function to create a SignalFx gauge data point. This creates a `DataPoint` instance that can be fed to `output.sendDatapoint[s]`. This does not send the data point, only creates it."
msgstr "`util.makeGauge(String name, double val, Map<String, String> dimensions)` ：   SignalFxゲージのデータポイントを作成する便利な関数です。これは、`DataPoint` インスタンスを作成し、`output.sendDatapoint[s]` に送ることができる。これはデータ・ポイントを送信するのではなく、作成するだけである。"

#: ../../gdi/monitors-languages/jmx.md:16
msgid "`util.makeCumulative(String name, double val, Map<String, String> dimensions)`: A convenience function to create a SignalFx cumulative counter data point. This creates a `DataPoint` instance that can be fed to `output.sendDatapoint[s]`. This does not send the data point, it only creates it."
msgstr "`util.makeCumulative(String name, double val, Map<String, String> dimensions)` ：SignalFxの累積カウンタ・データ・ポイントを作成する便利な関数。これは、`DataPoint` インスタンスを作成し、`output.sendDatapoint[s]` に送ることができる。これはデータ・ポイントを送信するのではなく、作成するだけである。"

#: ../../gdi/monitors-languages/jmx.md:18
msgid "The `output` instance available in the script context is used to send data to Splunk Observability Cloud. It contains the following methods:"
msgstr "スクリプトコンテキストで利用可能な`出力` インスタンスは、Splunk Observability Cloud へのデータ送信に使用されます。以下のメソッドが含まれている："

#: ../../gdi/monitors-languages/jmx.md:20
msgid "`output.sendDatapoint(DataPoint dp)`: Emit the given data point to SignalFx. Use the `util.make[Gauge|Cumulative]` helpers to create the `DataPoint` instance."
msgstr "`output.sendDatapoint(DataPoint dp)` ：与えられたデータポイントをSignalFxに送信する。`util.make[Gauge|Cumulative]` ヘルパーを使用して、`DataPoint` インスタンスを作成する。"

#: ../../gdi/monitors-languages/jmx.md:22
msgid "`output.sendDatapoints(List<DataPoint> dp)`: Emit the given data points to SignalFx. We recommend using the `util.make[Gauge|Cumulative]` helpers to create the `DataPoint` instance. It's slightly more efficient to send multiple data points at once, but this doesn't matter that much unless you're sending very high volumes of data."
msgstr "`output.sendDatapoints(List<DataPoint> dp)` ：与えられたデータポイントをSignalFxに送信する。`util.make[Gauge|Cumulative]` ヘルパーを使用して`DataPoint` インスタンスを作成することをお勧めします。一度に複数のデータを送信する方が若干効率的だが、よほど大量のデータを送信しない限り、それほど重要ではない。"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "Host will be filled in by auto-discovery if this monitor has a discovery rule."
msgstr "このモニターに検出ルールがある場合、ホストは自動検出によって入力される。"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "Port will be filled in by auto-discovery if this monitor has a discovery rule. (**default:** `0`)"
msgstr "このモニターに検出ルールがある場合、ポートは自動検出によって埋められます。(**default:**`0`)"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "The service URL for the JMX RMI/JMXMP endpoint. If empty it will be filled in with values from `host` and `port` using a standard JMX RMI template: `service:jmx:rmi:///jndi/rmi://<host>:<port>/jmxrmi`. If overridden, `host` and `port` will have no effect. For JMXMP endpoint the service URL must be specified. The JMXMP endpoint URL format is `service:jmx:jmxmp://<host>:<port>`."
msgstr "JMX RMI/JMXMP エンドポイントのサービス URL。空の場合は、標準的なJMX RMIテンプレートを使用して、`ホスト` と`ポート` の値で埋められます：`service:jmx:rmi:///jndi/rmi://<host>:<port>/jmxrmi` 。オーバーライドされた場合、`ホスト` と`ポート` は何の効果もない。JMXMPエンドポイントの場合は、サービスURLを指定する必要があります。JMXMP エンドポイントの URL 形式は`service:jmx:jmxmp://<host>:<port>` です。"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "`groovyScript`"
msgstr "`groovyScript`"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "A literal Groovy script that generates data points from JMX MBeans. See the top-level `jmx` monitor doc for more information on how to write this script. You can put the Groovy script in a separate file and refer to it here with `${include:/<my_path>/jmx.groovy}`. For more information on using the `include` config, see <a href=\"https://github.com/signalfx/splunk-otel-collector/tree/main/internal/configsource/includeconfigsource\">https://github.com/signalfx/splunk-otel-collector/tree/main/internal/configsource/includeconfigsource</a>. Or, you can put it straight in YAML by using the | block indicator."
msgstr "JMX MBeansからデータポイントを生成するリテラルGroovyスクリプト。このスクリプトの書き方については、トップレベルの`jmx` monitor docを参照のこと。Groovyスクリプトを別のファイルにして、`${include:/<my_path>/jmx.groovy}` で参照することができます。`include` configの使い方については、<a href=\"https://github.com/signalfx/splunk-otel-collector/tree/main/internal/configsource/includeconfigsource\">https://github.com/signalfx/splunk-otel-collector/tree/main/internal/configsource/includeconfigsource</a> を参照のこと。あるいは、｜ブロックインジケータを使ってYAMLに直接記述することもできる。"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "Username for JMX authentication, if applicable."
msgstr "該当する場合は、JMX 認証用のユーザー名。"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "Password for JMX authentication, if applicable."
msgstr "JMX 認証用のパスワード（該当する場合）。"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "`keyStorePath`"
msgstr "`keyStorePath`"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "The key store path is required if client authentication is activated on the target JVM."
msgstr "キー・ストアのパスは、ターゲットJVMでクライアント認証が有効になっている場合に必要となる。"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "`keyStorePassword`"
msgstr "`keyStorePassword`"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "The key store file password if required."
msgstr "必要であれば、キーストアファイルのパスワード。"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "`keyStoreType`"
msgstr "`keyStoreType`"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "The key store type. (**default:** `jks`)"
msgstr "キーストアタイプ。(**default:**`jks`)"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "`trustStorePath`"
msgstr "`trustStorePath`"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "The trusted store path if the TLS profile is required."
msgstr "TLSプロファイルが必要な場合は、信頼されたストアのパス。"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "`trustStorePassword`"
msgstr "`trustStorePassword`"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "The trust store file password if required."
msgstr "必要であれば、トラストストアファイルのパスワード。"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "`jmxRemoteProfiles`"
msgstr "`jmxRemoteProfiles`"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "Supported JMX remote profiles are TLS in combination with SASL profiles: SASL/PLAIN, SASL/DIGEST-MD5 and SASL/CRAM-MD5. Thus valid `jmxRemoteProfiles` values are: `SASL/PLAIN`, `SASL/DIGEST-MD5`, `SASL/CRAM-MD5`, `TLS SASL/PLAIN`, `TLS SASL/DIGEST-MD5` and `TLS SASL/CRAM-MD5`."
msgstr "サポートされているJMXリモート・プロファイルは、SASLプロファイルと組み合わせたTLSです：SASL/PLAIN、SASL/DIGEST-MD5、SASL/CRAM-MD5。したがって、`jmxRemoteProfiles` の有効な値は以下のとおりである：`SASL/PLAIN`,`SASL/DIGEST-MD5`,`SASL/CRAM-MD5`,`TLS SASL/PLAIN`,`TLS SASL/DIGEST-MD5` および`TLS SASL/CRAM-MD5` 。"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "`realm`"
msgstr "`realm`"

#: ../../gdi/monitors-languages/jmx.md:35
msgid "The realm is required by profile SASL/DIGEST-MD5."
msgstr "レルムはプロファイルSASL/DIGEST-MD5で必要とされる。"

#: ../../gdi/monitors-languages/jmx.md:77
msgid "The following is an example Groovy script that replicates some of the data presented by the Cassandra `nodetool status` utility:"
msgstr "以下は、Cassandra`nodetool status` ユーティリティによって提示されるデータの一部を複製するGroovyスクリプトの例です："

#: ../../gdi/monitors-languages/jmx.md:137
msgid "Make sure that your script is carefully tested before using it to monitor a production JMX service. In general, scripts should only read attributes, but nothing enforces that."
msgstr "本番のJMXサービスを監視するためにスクリプトを使用する前に、スクリプトが入念にテストされていることを確認してください。一般的に、スクリプトは属性だけを読むべきだが、それを強制するものは何もない。"

#: ../../gdi/monitors-languages/jmx.md:141 ../../gdi/monitors-monitoring/prometheus-exporter.md:84 ../../gdi/monitors-monitoring/signalfx-forwarder.md:62 ../../gdi/monitors-network/logstash-tcp.md:135
msgid "There are no metrics available for this integration."
msgstr "この統合で利用可能なメトリクスはありません。"

#: ../../gdi/monitors-languages/microsoft-dotnet.md:3
msgid "Microsoft .NET"
msgstr "Microsoft .NET"

#: ../../gdi/monitors-languages/microsoft-dotnet.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `dotnet` monitor type to report metrics for .NET applications."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`dotnet` モニタタイプを使用して、.NET アプリケーションのメトリクスをレポートします。"

#: ../../gdi/monitors-languages/microsoft-dotnet.md:11
msgid "This integration reports the instantaneous values for Windows Performance Counters. Most of these performance counters are gauges that represent rates per second and percentages. This means that in a collection interval, spikes might occur on the Performance Counters. The best way to mitigate this limitation is to increase the reporting interval on this monitor to collect more frequently."
msgstr "この統合は、Windowsパフォーマンス・カウンターの瞬時値をレポートします。これらのパフォーマンス・カウンターのほとんどは、秒あたりのレートやパーセンテージを表すゲージである。これは、収集間隔において、パフォーマンス・カウンターにスパイクが発生する可能性があることを意味する。この制限を緩和する最善の方法は、このモニターの報告間隔を長くして、より頻繁に収集することである。"

#: ../../gdi/monitors-languages/microsoft-dotnet.md:13
msgid "The following is a list of the most critical .NET performance counters:"
msgstr "以下は、最も重要な.NETパフォーマンス・カウンターのリストである："

#: ../../gdi/monitors-languages/microsoft-dotnet.md:15
msgid "Exceptions"
msgstr "例外"

#: ../../gdi/monitors-languages/microsoft-dotnet.md:17
msgid "Logical threads"
msgstr "論理スレッド"

#: ../../gdi/monitors-languages/microsoft-dotnet.md:19
msgid "Physical threads"
msgstr "物理的なスレッド"

#: ../../gdi/monitors-languages/microsoft-dotnet.md:21
msgid "Heap bytes"
msgstr "ヒープバイト"

#: ../../gdi/monitors-languages/microsoft-dotnet.md:23
msgid "Time in GC"
msgstr "GCでの時間"

#: ../../gdi/monitors-languages/microsoft-dotnet.md:25
msgid "Committed bytes"
msgstr "コミット・バイト"

#: ../../gdi/monitors-languages/microsoft-dotnet.md:27
msgid "Pinned objects"
msgstr "ピン留めされたオブジェクト"

#: ../../gdi/monitors-languages/microsoft-dotnet.md:75
msgid "This integration emits all metrics by default, but they are categorized as custom metrics. See the notes for more details."
msgstr "この統合は、デフォルトですべてのメトリクスを出力しますが、それらはカスタム・メトリクスに分類されます。詳細は注釈を参照のこと。"

#: ../../gdi/monitors-messaging/apache-activemq.md:3
msgid "Apache ActiveMQ"
msgstr "Apache ActiveMQ"

#: ../../gdi/monitors-messaging/apache-activemq.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Apache ActiveMQ monitor type to track the following information from ActiveMQ:"
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と Apache ActiveMQ モニタータイプを使用して、ActiveMQ から以下の情報を追跡します："

#: ../../gdi/monitors-messaging/apache-activemq.md:9
msgid "Broker (Totals per broker)"
msgstr "ブローカー（ブローカーごとの合計）"

#: ../../gdi/monitors-messaging/apache-activemq.md:10
msgid "Queue (Queue status)"
msgstr "キュー（キューの状態）"

#: ../../gdi/monitors-messaging/apache-activemq.md:11
msgid "Topic (Topic status)"
msgstr "トピック（トピックの状況）"

#: ../../gdi/monitors-messaging/apache-activemq.md:15
msgid "This integration works with ActiveMQ 5.8.0 and higher."
msgstr "この統合は、ActiveMQ 5.8.0以降で動作します。"

#: ../../gdi/monitors-messaging/apache-activemq.md:29
msgid "Host to connect to. JMX must be configured for remote access and accessible from the agent."
msgstr "接続先のホスト。JMXはリモートアクセス用に設定され、エージェントからアクセスできなければならない。"

#: ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "JMX connection port (NOT the RMI port) on the application. This corresponds to the `com.sun.management.jmxremote.port` Java property that should be set on the JVM when running the application."
msgstr "アプリケーションのJMX接続ポート（RMIポートではない）。これは、アプリケーションの実行時に JVM に設定される`com.sun.management.jmxremote.port` Java プロパティに対応します。"

#: ../../gdi/monitors-messaging/apache-activemq.md:29
msgid "This is how the service type is identified in the Splunk Observability Cloud UI so that you can get built-in content for it. For custom JMX integrations, it can be set to whatever you like."
msgstr "これは、Splunk Observability Cloud UI でサービスタイプが識別され、そのサービス用の組み込みコンテンツを取得できるようにする方法です。カスタムJMX統合の場合は、好きなように設定できる。"

#: ../../gdi/monitors-messaging/apache-activemq.md:29
msgid "The JMX connection string. This is rendered as a Go template and has access to the other values in this configuration. **Note**: Under normal circumstances, it is not advised to set this string directly. Setting the host and port as specified above is preferred. (**default:** `service:jmx:rmi:///jndi/rmi://{{.Host}}:{{.Port}}/jmxrmi`)"
msgstr "JMX 接続文字列。これはGoテンプレートとしてレンダリングされ、このコンフィギュレーションの他の値にアクセスできます。**注意**：通常、この文字列を直接設定することはお勧めしません。上記のようにホストとポートを設定することが望ましい。(**default:**`service:jmx:rmi:///jndi/rmi://{.Host}}:{{.Port}}/jmxrmi`)"

#: ../../gdi/monitors-messaging/apache-activemq.md:29
msgid "Prefixes the generated plugin instance with prefix. If a second `instancePrefix` is specified in a referenced MBean block, the prefix specified in the Connection block will appear at the beginning of the plugin instance and the prefix specified in the MBean block will be appended to it."
msgstr "生成されたプラグインインスタンスにプレフィックスをつけます。参照されるMBeanブロックで2番目の`instancePrefix` が指定された場合、Connectionブロックで指定された接頭辞がプラグインインスタンスの先頭に現れ、MBeanブロックで指定された接頭辞がそれに追加される。"

#: ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "A list of the MBeans to omit. This will come in handy in cases where only a few MBeans need to be omitted from the default list."
msgstr "省略するMBeansのリスト。これは、数MBeansだけをデフォルト・リストから省く必要がある場合に便利である。"

#: ../../gdi/monitors-messaging/apache-activemq.md:29
msgid "Specifies how to map JMX MBean values to metrics. If using a specific service monitor such as cassandra, kafka, or activemq, they come pre-loaded with a set of mappings, and any that you add in this option will be merged with those."
msgstr "JMX MBean の値をメトリックにマッピングする方法を指定します。cassandra、kafka、activemqのような特定のサービス・モニターを使用する場合、これらのサービスにはマッピングのセットがあらかじめ用意されています。"

#: ../../gdi/monitors-messaging/apache-activemq.md:29
msgid "Sets the pattern that is used to retrieve MBeans from the MBeanServer. If more than one MBean is returned, you should use the `instanceFrom` option to make the identifiers unique."
msgstr "MBeanServerからMBeansを取得するために使用されるパターンを設定します。複数のMBeanが返される場合、`instanceFrom` オプションを使用して識別子を一意にする必要があります。"

#: ../../gdi/monitors-messaging/apache-activemq.md:29
msgid "The object names used by JMX to identify MBeans include so-called \"properties\" that are basically key-value pairs. If the given object name is not unique and multiple MBeans are returned, the values of those properties usually differ. You can use this option to build the plugin instance from the appropriate property values. This option is optional and can be repeated to generate the plugin instance from multiple property values."
msgstr "JMXがMBeansを識別するために使用するオブジェクト名には、基本的にキーと値のペアであるいわゆる「プロパティ」が含まれる。与えられたオブジェクト名が一意でなく、複数のMBeansが返される場合、それらのプロパティの値は通常異なる。このオプションを使用すると、適切なプロパティ値からプラグイン・インスタンスを構築できます。このオプションはオプションで、複数のプロパティ値からプラグインインスタンスを生成するために繰り返すことができます。"

#: ../../gdi/monitors-messaging/apache-activemq.md:29
msgid "The `value` blocks map one or more attributes of an MBean to a value list in the agent. There must be at least one `value` block within each MBean block"
msgstr "`値` ブロックは、MBeanの1つ以上の属性をエージェントの値リストにマッピングする。各MBeanブロック内に少なくとも1つの`値` ブロックがなければならない。"

#: ../../gdi/monitors-messaging/apache-activemq.md:29
msgid "Sets the data set used within the agent to handle the values of the MBean attribute."
msgstr "MBean属性の値を扱うためにエージェント内で使用されるデータセットを設定します。"

#: ../../gdi/monitors-messaging/apache-activemq.md:29 ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "Set this to `true` if the returned attribute is a composite type. If set to `true`, the keys within the composite type are appended to the type instance. (**default:** `false`)"
msgstr "返された属性が複合型の場合、`true` に設定する。`true` に設定すると、複合型内のキーが型インスタンスに追加される。(**default:**`false`)"

#: ../../gdi/monitors-messaging/apache-activemq.md:29
msgid "Sets the name of the attribute to read the value from. You can access the keys of composite types by using a dot to concatenate the key name to the attribute name. For example: “attrib0.key42”. If `table` is set to `true`, path must point to a composite type, otherwise it must point to a numeric type."
msgstr "値を読み込む属性名を設定します。ドットを使ってキー名と属性名を連結すれば、複合型のキーにアクセスできる。例えば\"attrib0.key42\"。`テーブル` が`真の` に設定されている場合、パスは複合型を指し示す必要があり、そうでない場合は数値型を指し示す必要がある。"

#: ../../gdi/monitors-messaging/apache-kafka.md:3
msgid "Apache Kafka"
msgstr "アパッチ・カフカ"

#: ../../gdi/monitors-messaging/apache-kafka.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Apache Kafka monitor type to monitor Kafka instances."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と Apache Kafka monitor type を使用して Kafka インスタンスを監視する。"

#: ../../gdi/monitors-messaging/apache-kafka.md:11
msgid "This integration supports Kafka v0.8.2.x and above."
msgstr "この統合はKafka v0.8.2.x以上をサポートしています。"

#: ../../gdi/monitors-messaging/apache-kafka.md:13
msgid "For Kafka v1.x.x and above, on top of default metrics, monitor the following:"
msgstr "Kafka v1.x.x以上では、デフォルトのメトリクスに加えて、以下を監視します："

#: ../../gdi/monitors-messaging/apache-kafka.md:15
msgid "`kafka.server:type=ZooKeeperClientMetrics,name=ZooKeeperRequestLatencyMs` to track how long brokers wait for requests to Zookeeper to be completed."
msgstr "`kafka.server:type=ZooKeeperClientMetrics,name=ZooKeeperRequestLatencyMs` ブローカーがZookeeperへのリクエストを完了するまでの待ち時間を追跡する。"

#: ../../gdi/monitors-messaging/apache-kafka.md:16
msgid "Disk utilization and network metrics of the underlying host. Since Zookeeper is an integral part of a Kafka cluster, you can monitor it using the Zookeeper monitor."
msgstr "基礎となるホストのディスク使用率とネットワーク・メトリクス。Zookeeper は Kafka クラスタに不可欠な要素であるため、Zookeeper モニタを使用して監視することができます。"

#: ../../gdi/monitors-messaging/apache-kafka.md:52
msgid "See <a href=\"https://github.com/signalfx/splunk-otel-collector/tree/main/examples\" target=\"_blank\">configuration examples</a> for specific use cases that show how the Splunk Distribution of OpenTelemetry Collector can integrate and complement existing environments."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションがどのように既存の環境を統合し、補完できるかを示す具体的な使用例については、<a href=\"https://github.com/signalfx/splunk-otel-collector/tree/main/examples\" target=\"_blank\">構成例</a>を参照してください。"

#: ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "Host to connect to -- JMX must be configured for remote access and accessible from the agent"
msgstr "接続先ホスト -- JMXはリモートアクセス用に設定され、エージェントからアクセス可能でなければならない。"

#: ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "This is how the service type is identified in the Splunk Observability Cloud UI so that you can get built-in content for it.  For custom JMX integrations, it can be set to whatever you like."
msgstr "これは、Splunk Observability Cloud UI でサービスタイプが識別され、そのサービス用の組み込みコンテンツを取得できるようにする方法です。 カスタムJMX統合の場合は、好きなように設定できる。"

#: ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "The JMX connection string. This is rendered as a Go template and has access to the other values in this config. NOTE: under normal circumstances it is not advised to set this string directly - setting the host and port as specified above is preferred. (**default:** `service:jmx:rmi:///jndi/rmi://{{.Host}}:{{.Port}}/jmxrmi`)"
msgstr "JMX 接続文字列。これはGoテンプレートとしてレンダリングされ、このコンフィグ内の他の値にアクセスできる。注意: 通常の状況では、この文字列を直接設定することは推奨されません - 上記で指定されたホストとポートを設定することが推奨されます。(**default:**`service:jmx:rmi:///jndi/rmi://{.Host}}:{{.Port}}/jmxrmi`)"

#: ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "Specifies how to map JMX MBean values to metrics.  If using a specific service monitor such as Cassandra, Kafka, or ActiveMQ, they come pre-loaded with a set of mappings, and any that you add in this option will be merged with those.  See [GenericJMX](https://collectd.org/documentation/manpages/collectd-java.5.shtml#genericjmx_plugin) for more details."
msgstr "JMX MBean の値をメトリックにマッピングする方法を指定します。 Cassandra、Kafka、ActiveMQなどの特定のサービス・モニターを使用する場合、これらのサービスにはマッピングのセットがあらかじめ用意されています。 詳細は[GenericJMX](https://collectd.org/documentation/manpages/collectd-java.5.shtml#genericjmx_plugin) を参照。"

#: ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "Cluster name to which the broker belongs"
msgstr "ブローカーが属するクラスタ名"

#: ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "Sets the pattern used to retrieve MBeans from the MBeanServer. If more than one MBean is returned, you should use the `instanceFrom` option to make the identifiers unique."
msgstr "MBeanServerからMBeansを取得するために使用されるパターンを設定します。複数のMBeanが返される場合、`instanceFrom` オプションを使用して識別子を一意にする必要があります。"

#: ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "Prefixes the generated plugin instance with prefix"
msgstr "生成されたプラグインインスタンスにプレフィックスを付けます。"

#: ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "The object names used by JMX to identify MBeans include so-called \"properties\" which are basically key-value pairs. If the given object name is not unique and multiple MBeans are returned, the values of those properties usually differ. You can use this option to build the plugin instance from the appropriate property values. This option is optional and can be repeated to generate the plugin instance from multiple property values."
msgstr "JMXがMBeansを識別するために使用するオブジェクト名には、基本的にキーと値のペアであるいわゆる「プロパティ」が含まれる。与えられたオブジェクト名が一意でなく、複数のMBeansが返される場合、それらのプロパティの値は通常異なる。このオプションを使用すると、適切なプロパティ値からプラグイン・インスタンスを構築できます。このオプションはオプションで、複数のプロパティ値からプラグインインスタンスを生成するために繰り返すことができます。"

#: ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "The `value` blocks map one or more attributes of an MBean to a value list. There must be at least one `value` block within each MBean block."
msgstr "`値` ブロックはMBeanの1つ以上の属性を値リストにマッピングします。各MBeanブロック内に少なくとも1つの`値` ブロックがなければならない。"

#: ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "Sets the data set used to handle the values of the MBean attribute"
msgstr "MBean属性の値を扱うために使われるデータセットを設定する"

#: ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "Works like the option of the same name directly beneath the MBean block, but sets the type instance instead"
msgstr "MBeanブロックの真下にある同じ名前のオプションのように働きますが、代わりに型インスタンスを設定します。"

#: ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "Sets the name of the attribute from which to read the value. You can access the keys of composite types by using a dot to concatenate the key name to the attribute name. For example, “attrib0.key42”. If `table` is set to `true`, path must point to a composite type, otherwise it must point to a numeric type."
msgstr "値を読み込む属性名を設定します。ドットを使ってキー名と属性名を連結すれば、複合型のキーにアクセスできる。例えば、\"attrib0.key42\"。`テーブル` が`真の` に設定されている場合、パスは複合型を指し示す必要があり、そうでない場合は数値型を指し示す必要がある。"

#: ../../gdi/monitors-messaging/apache-kafka.md:30
msgid "The plural form of the `attribute` configuration above.  Used to derive multiple metrics from a single MBean."
msgstr "上記の`属性` 構成の複数形。 単一の MBean から複数のメトリクスを導出するために使用されます。"

#: ../../gdi/monitors-messaging/rabbitmq.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `rabbitmq` monitor type to keep track of an instance of RabbitMQ."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`rabbitmq` モニタタイプを使用して、RabbitMQ のインスタンスを追跡します。"

#: ../../gdi/monitors-messaging/rabbitmq.md:9
msgid "The integration uses the RabbitMQ Python plugin and the RabbitMQ Management HTTP API to poll for statistics on a RabbitMQ server, then reports them to the agent."
msgstr "このインテグレーションは、RabbitMQ PythonプラグインとRabbitMQ Management HTTP APIを使用して、RabbitMQサーバの統計情報をポーリングし、エージェントにレポートします。"

#: ../../gdi/monitors-messaging/rabbitmq.md:11
msgid "This integration is available on Kubernetes and Linux, and requires RabbitMQ 3.0 and higher."
msgstr "この統合はKubernetesとLinuxで利用可能で、RabbitMQ 3.0以上が必要です。"

#: ../../gdi/monitors-messaging/rabbitmq.md:50
msgid "The following table shows the configuration options for the RabbitMQ monitor:"
msgstr "次の表に、RabbitMQモニターの設定オプションを示します："

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "Hostname or IP address of the RabbitMQ instance. For example, `127.0.0.1`."
msgstr "RabbitMQインスタンスのホスト名またはIPアドレス。例えば、`127.0.0.1` 。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "The port of the RabbitMQ instance. For example, `15672`."
msgstr "RabbitMQインスタンスのポート。例えば、`15672` 。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "`brokerName`"
msgstr "`brokerName`"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "Name of the RabbitMQ instance. Can be a Go template using other configuration options. Used as the `plugin_instance` dimension. The default value is `{{.host}}-{{.port}}`."
msgstr "RabbitMQインスタンスの名前。他の設定オプションを使って囲碁テンプレートにすることもできる。`plugin_instance` ディメンジョンとして使用される。デフォルト値は`{{.host}}-{{.port}}` 。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "`collectChannels`"
msgstr "`collectChannels`"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "Whether to collect channels. The default value is`false`."
msgstr "チャンネルを集めるかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "`collectConnections`"
msgstr "`collectConnections`"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "Whether to collect connections. The default value is`false`."
msgstr "コネクションを集めるかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "`collectExchanges`"
msgstr "`collectExchanges`"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "Whether to collect exchanges. The default value is`false`."
msgstr "交換を集めるかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "`collectNodes`"
msgstr "`collectNodes`"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "Whether to collect nodes. The default value is`false`."
msgstr "ノードを収集するかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "`collectQueues`"
msgstr "`collectQueues`"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "Whether to collect queues. The default value is`false`."
msgstr "キューを集めるかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "HTTP timeout for requests."
msgstr "リクエストのHTTPタイムアウト。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "`verbosityLevel`"
msgstr "`verbosityLevel`"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "Verbosity level."
msgstr "動詞レベル。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "API username of the RabbitMQ instance."
msgstr "RabbitMQ インスタンスの API ユーザー名。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "API password of the RabbitMQ instance."
msgstr "RabbitMQインスタンスのAPIパスワード。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "Whether to activate HTTPS. The default value is`false`."
msgstr "HTTPSを有効にするかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "`sslCACertFile`"
msgstr "`sslCACertFile`"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "Path to the SSL or TLS certificate of the root certificate authority implicitly trusted by this monitor."
msgstr "このモニターが暗黙的に信頼するルート認証局のSSLまたはTLS証明書へのパス。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "`sslCertFile`"
msgstr "`sslCertFile`"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "Path to this monitor's own SSL or TLS certificate."
msgstr "このモニター自身のSSLまたはTLS証明書へのパス。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "Path to this monitor's private SSL or TLS key file."
msgstr "このモニターのプライベートSSLまたはTLSキーファイルへのパス。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "`sslKeyPassphrase`"
msgstr "`sslKeyPassphrase`"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "This monitor's private SSL or TLS key file password, if any."
msgstr "このモニターのプライベートSSLまたはTLSキーファイルのパスワード（もしあれば）。"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "`sslVerify`"
msgstr "`sslVerify`"

#: ../../gdi/monitors-messaging/rabbitmq.md:25
msgid "Whether the monitor verifies the RabbitMQ Management plugin SSL or TLS certificate. The default value is`false`."
msgstr "モニターがRabbitMQ管理プラグインのSSLまたはTLS証明書を検証するかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-messaging/rabbitmq.md:75
msgid "You must activate each of the five `collect*` options to gather metrics pertaining to those facets of a RabbitMQ instance."
msgstr "RabbitMQインスタンスの各ファセットに関連するメトリクスを収集するには、5つの`collect*` オプションをそれぞれ有効にする必要があります。"

#: ../../gdi/monitors-monitoring/cadvisor.md:3
msgid "cAdvisor"
msgstr "cAdvisor"

#: ../../gdi/monitors-monitoring/cadvisor.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the cAdvisor monitor type to pull metrics directly from cAdvisor. By default, it runs on port 4194, but it can be configured to any other port."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を cAdvisor モニタータイプで使用し、cAdvisor から直接メトリクスを取得します。デフォルトではポート4194で実行されるが、他のポートに設定することもできる。"

#: ../../gdi/monitors-monitoring/cadvisor.md:9
msgid "If you are using Kubernetes, consider the {ref}`kubelet-stats-receiver` because many Kubernetes nodes do not expose cAdvisor on a network port, even though they are running it within Kubelet."
msgstr "Kubernetes を使用している場合、{ref}`kubelet-stats-receiver` を検討してください。多くの Kubernetes ノードは、Kubelet 内で実行されているにもかかわらず、ネットワークポートで cAdvisor を公開していないからです。"

#: ../../gdi/monitors-monitoring/cadvisor.md:11
msgid "If you are running containers with Docker, retrieved metrics might overlap with `docker-container-stats`'. Consider not enabling the Docker monitor in a Kubernetes environment, or else use filtering to allow only certain metrics. This will cause the built-in Docker dashboards to be blank, but container metrics will be available on the Kubernetes dashboards instead."
msgstr "Dockerでコンテナを実行している場合、取得したメトリクスは`docker-container-stats`' と重複する可能性があります。Kubernetes環境でDockerモニターを有効にしないか、フィルタリングを使用して特定のメトリクスのみを許可することを検討してください。これにより、組み込みのDockerダッシュボードは空白になりますが、代わりにKubernetesダッシュボードでコンテナメトリクスが利用できるようになります。"

#: ../../gdi/monitors-monitoring/cadvisor.md:52 ../../gdi/monitors-monitoring/cgroups.md:73
msgid "The following table shows the configuration options for this receiver:"
msgstr "次の表に、この受信機の設定オプションを示します："

#: ../../gdi/monitors-monitoring/cadvisor.md:27
msgid "`cadvisor URL`"
msgstr "`アドバイザーのURL`"

#: ../../gdi/monitors-monitoring/cadvisor.md:27
msgid "Where to find cAdvisor. The default value is: `http://localhost:4194`."
msgstr "アドバイザーの居場所デフォルト値は`http://localhost:4194` 。"

#: ../../gdi/monitors-monitoring/cgroups.md:3 ../../gdi/opentelemetry/collector-architecture.rst:58
msgid "cgroups"
msgstr "cgroups"

#: ../../gdi/monitors-monitoring/cgroups.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the cgroups monitor type to report statistics about `cgroups` on Linux. This receiver supports cgroups version 1, not the newer cgroups version 2 unified implementation."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を cgroups モニタタイプで使用し、Linux 上の`cgroups` に関する統計情報をレポートする。このレシーバーは cgroups バージョン 1 をサポートしており、新しい cgroups バージョン 2 の統一実装はサポートしていない。"

#: ../../gdi/monitors-monitoring/cgroups.md:9
msgid "This monitor is available on Linux."
msgstr "このモニターはLinuxで利用できる。"

#: ../../gdi/monitors-monitoring/cgroups.md:11
msgid "For general information on cgroups, see the Linux control groups and Linux Kernel documentation:"
msgstr "cgroupsに関する一般的な情報は、LinuxのコントロールグループとLinuxカーネルのドキュメントを参照のこと："

#: ../../gdi/monitors-monitoring/cgroups.md:13
msgid "<a href=\"http://man7.org/linux/man-pages/man7/cgroups.7.html\">http://man7.org/linux/man-pages/man7/cgroups.7.html</a>."
msgstr "<a href=\"http://man7.org/linux/man-pages/man7/cgroups.7.html\">http://man7.org/linux/man-pages/man7/cgroups.7.html</a>."

#: ../../gdi/monitors-monitoring/cgroups.md:15
msgid "<a href=\"https://www.kernel.org/doc/Documentation/cgroup-v1/memory.txt\">https://www.kernel.org/doc/Documentation/cgroup-v1/memory.txt</a>."
msgstr "<a href=\"https://www.kernel.org/doc/Documentation/cgroup-v1/memory.txt\">https://www.kernel.org/doc/Documentation/cgroup-v1/memory.txt</a>."

#: ../../gdi/monitors-monitoring/cgroups.md:17
msgid "For detailed information on `cpu` and `memory` cgroup metrics, see the Red Hat guides:"
msgstr "`cpu` および`memory` cgroup メトリクスの詳細については、Red Hat のガイドを参照してください："

#: ../../gdi/monitors-monitoring/cgroups.md:19
msgid "<a href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/sec-cpu\">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/sec-cpu</a>. Note that the `cpuacct` cgroup is primarily an informational cgroup that gives detailed information on how long processes in a cgroup used the CPU."
msgstr "<a href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/sec-cpu\">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/sec-cpu</a>.`cpuacct` cgroup は主に情報 cgroup であり、cgroup 内のプロセスがどれくらいの時間 CPU を使用したかについての詳細情報を提供する。"

#: ../../gdi/monitors-monitoring/cgroups.md:21
msgid "<a href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/sec-memory\">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/sec-memory</a>."
msgstr "<a href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/sec-memory\">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/sec-memory</a>."

#: ../../gdi/monitors-monitoring/cgroups.md:58 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:205
msgid "Filtering"
msgstr "フィルタリング"

#: ../../gdi/monitors-monitoring/cgroups.md:60
msgid "You can limit the cgroups for which metrics are generated with the `cgroups` config option to the receiver."
msgstr "`cgroups` コンフィグ・オプションを使用して、メトリックが生成される cgroup をレシーバに制限できます。"

#: ../../gdi/monitors-monitoring/cgroups.md:62
msgid "For example, the following will only monitor Docker-generated cgroups:"
msgstr "例えば、以下はDockerが生成したcgroupのみを監視する："

#: ../../gdi/monitors-monitoring/cgroups.md:35
msgid "`cgroups`"
msgstr "`cgroups`"

#: ../../gdi/monitors-monitoring/cgroups.md:35
msgid "The cgroup names to include or exclude, based on the full hierarchy path. This set can be overridden. If not provided, `cgroups` defaults to a list of all cgroups. For example, to monitor all Docker container cgroups, you could use a value of `[\"/docker/*\"]`."
msgstr "完全な階層パスに基づいて、インクルードまたは除外するcgroup名。このセットはオーバーライドできる。提供されない場合、`cgroups` はデフォルトですべてのcgroupのリストになる。たとえば、すべてのDockerコンテナcグループを監視するには、`[\"/docker/*\"]`."

#: ../../gdi/monitors-monitoring/jaeger-grpc.md:3
msgid "Jaeger gRPC"
msgstr "Jaeger gRPC"

#: ../../gdi/monitors-monitoring/jaeger-grpc.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `jaeger-grpc` monitor type to run a gRPC server that listens for Jaeger trace batches and forwards them to Splunk Observability Cloud (or the configured ingest host in the `writer` section of the agent config). By default, the server listens on localhost port `14250`, but can be configured to anything."
msgstr "`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent receiver<smartagent-receiver>` と`jaeger-grpc` monitor type を使用して、Jaeger トレースバッチをリッスンし、Splunk Observability Cloud (またはエージェント設定の`writer` セクションで設定されたインジェストホスト) に転送する gRPC サーバーを実行します。デフォルトでは、サーバーはlocalhostのポート`14250` をリッスンするが、任意のポートに設定することができる。"

#: ../../gdi/monitors-monitoring/jaeger-grpc.md:10
msgid "If you're using OpenTelemetry, consider using the native OpenTelemetry Jaeger receiver. To learn more, see [the Jaeger receiver documentation in GitHub](https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/jaegerreceiver)."
msgstr "OpenTelemetryを使っているなら、ネイティブのOpenTelemetry Jaegerレシーバーを使うことを検討してください。詳しくは、GitHub](https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/jaegerreceiver) の[Jaeger receiver documentation をご覧ください。"

#: ../../gdi/monitors-monitoring/jaeger-grpc.md:25 ../../gdi/monitors-monitoring/signalfx-forwarder.md:23 ../../gdi/monitors-network/aws-appmesh.md:26 ../../gdi/monitors-network/statsd.md:35
msgid "`listenAddress`"
msgstr "`listenAddress`"

#: ../../gdi/monitors-monitoring/jaeger-grpc.md:25
msgid "The host:port on which to listen for traces. The default value is `0.0.0.0:14250`."
msgstr "トレースをリッスンするホスト：ポート。デフォルト値は`0.0.0.0:14250` 。"

#: ../../gdi/monitors-monitoring/jaeger-grpc.md:25
msgid "`tls`"
msgstr "`tls`"

#: ../../gdi/monitors-monitoring/jaeger-grpc.md:25
msgid "TLS are optional tls credential settings to configure the GRPC server with"
msgstr "TLSは、GRPCサーバーを構成するためのオプションのTLSクレデンシャル設定です。"

#: ../../gdi/monitors-monitoring/jaeger-grpc.md:56
msgid "The **nested** `tls` config object has the following fields:"
msgstr "nested**`tls` configオブジェクトは以下のフィールドを持つ："

#: ../../gdi/monitors-monitoring/jaeger-grpc.md:25
msgid "`certFile`"
msgstr "`certFile`"

#: ../../gdi/monitors-monitoring/jaeger-grpc.md:25
msgid "The cert file to use for tls"
msgstr "tlsに使用する証明書ファイル"

#: ../../gdi/monitors-monitoring/jaeger-grpc.md:25
msgid "`keyFile`"
msgstr "`keyFile`"

#: ../../gdi/monitors-monitoring/jaeger-grpc.md:25
msgid "The key file to use for tls"
msgstr "tlsに使用するキーファイル"

#: ../../gdi/monitors-monitoring/nagios.md:3
msgid "Nagios"
msgstr "ナギオス"

#: ../../gdi/monitors-monitoring/nagios.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Nagios monitor type to run existing Nagios status check scripts through the Collector, which acts as the Nagios Remote Plugin Executor (NRPE) or the Simple Network Management Protocol (SNMP) exec directive, and send the [state](https://nagios-plugins.org/doc/guidelines.html#AEN78) of the check, depending on the exit code of the command."
msgstr "Ref}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent レシーバー<smartagent-receiver>` を Nagios モニタータイプで使用し、Nagios Remote Plugin Executor (NRPE) または Simple Network Management Protocol (SNMP) exec ディレクティブとして動作するコレクターを通して既存の Nagios ステータスチェックスクリプトを実行し、コマンドの終了コードに応じてチェックの[状態](https://nagios-plugins.org/doc/guidelines.html#AEN78) を送信します。"

#: ../../gdi/monitors-monitoring/nagios.md:9
msgid "This integration is similar to the [telegraf/exec monitor configured with dataFormat:nagios integration](https://docs.splunk.com/Observability/gdi/exec/telegraf-exec.html), with the following exceptions:"
msgstr "この統合は、dataFormat:nagios integration](https://docs.splunk.com/Observability/gdi/exec/telegraf-exec.html) で設定された[telegraf/exec モニタに似ていますが、以下の例外があります："

#: ../../gdi/monitors-monitoring/nagios.md:11
msgid "It does not retrieve perfdata metrics. This integration only retrieves the state of the script for alerting purposes."
msgstr "perfdataのメトリクスは取得しない。この統合では、警告の目的でスクリプトの状態を取得するだけです。"

#: ../../gdi/monitors-monitoring/nagios.md:12
msgid "It overrides the state if the exit code `== 0`, but the output string starts with `warn`, `crit`, or `unkn` (not case-sensitive)."
msgstr "終了コード`== 0` が、出力文字列が`warn`,`crit`, または`unkn` （大文字と小文字は区別されない）で始まっている場合、その状態を上書きする。"

#: ../../gdi/monitors-monitoring/nagios.md:14
msgid "This integration adds more context to the status check state by using [events](https://docs.splunk.com/Observability/alerts-detectors-notifications/view-data-events.html#events-intro). In addition to the `state` metric, it also sends an event that includes the output and the error caught from the command execution."
msgstr "この統合では、[イベント](https://docs.splunk.com/Observability/alerts-detectors-notifications/view-data-events.html#events-intro) を使用することで、ステータスチェックの状態にさらにコンテキストが追加される。`状態` メトリックに加え、コマンド実行からキャッチした出力とエラーを含むイベントも送信する。"

#: ../../gdi/monitors-monitoring/nagios.md:16
msgid "Using this integration should make troubleshooting more efficient and let you remain in Splunk Observability Cloud without connecting to your Linux or Windows machine in case of an abnormal state to understand what is happening. Using this integration also lets you create a dashboard that is familiar to Nagios users."
msgstr "この統合を使用することで、トラブルシューティングがより効率的になり、異常事態が発生した場合にLinuxやWindowsマシンに接続することなくSplunk Observability Cloudにとどまり、何が起こっているのかを把握できるようになるはずだ。この統合を使用すると、Nagiosユーザーになじみのあるダッシュボードを作成することもできます。"

#: ../../gdi/monitors-monitoring/nagios.md:19
msgid "The last sent event is cached into memory and compared to new events to avoid repeatedly sending the same event for each collection interval. Restarting the OTel Collector erases its cache, so the  most recently sent event is sent again upon restart. If your check always “normally” produces a different output for each run, for example, the uptime check, you can use the `FilterStdOut: true` parameter to ignore it in comparison."
msgstr "最後に送信されたイベントはメモリにキャッシュされ、収集間隔ごとに同じイベントが繰り返し送信されないように、新しいイベントと比較される。OTel コレクタを再起動するとキャッシュが消去されるため、再起動時に最 新に送信されたイベントが再度送信されます。例えば、アップタイム・チェックなど、実行ごとに常に「通常」とは異なる出力を生成するチェックの場合、`FilterStdOut: true` パラメータを使用することで、比較時にその出力を無視することができます。"

#: ../../gdi/monitors-monitoring/nagios.md:62
msgid "Event-sending functionality"
msgstr "イベント送信機能"

#: ../../_includes/event-sending-functionality.md:2
msgid "This monitor includes event-sending functionality to let you post your own custom events to Observability Cloud. For example, you can send your own custom event when you deploy a new version of your software or update other parts of your infrastructure. You can then view these events in the Observability Cloud user interface (UI)."
msgstr "このモニターには、独自のカスタム・イベントをObservability Cloudに投稿できるイベント送信機能が含まれています。例えば、ソフトウェアの新バージョンをデプロイしたり、インフラストラクチャの他の部分を更新したときに、独自のカスタムイベントを送信することができます。その後、Observability Cloudのユーザー・インターフェース（UI）でこれらのイベントを表示できます。"

#: ../../_includes/event-sending-functionality.md:4
msgid "Make monitors with event-sending functionality members of a logs pipeline that uses a SignalFx exporter to make the event submission requests. Use a Resource Detection processor to ensure that host identity and other useful information is made available as event dimensions."
msgstr "イベント送信機能を持つモニターを、SignalFx エクスポーターを使用してイベント送信要求を行うログパイプラインのメンバーにする。リソース検出プロセッサを使用して、ホストのIDやその他の有用な情報がイベントディメンジョンとして利用できるようにする。"

#: ../../gdi/monitors-monitoring/nagios.md:64
msgid "The command to exec with any arguments like: `\"LC_ALL=\\\"en_US.utf8\\\" /usr/lib/nagios/plugins/check_ntp_time -H pool.ntp.typhon.net -w 0.5 -c 1\"`"
msgstr "`\"LC_ALL=\"ja_US.utf8↩\" /usr/lib/nagios/plugins/check_ntp_time -H pool.ntp.typhon.net -w 0.5 -c 1\" のような引数で実行するコマンド。`"

#: ../../gdi/monitors-monitoring/nagios.md:64
msgid "`service`"
msgstr "`service`"

#: ../../gdi/monitors-monitoring/nagios.md:64
msgid "Corresponds to the nagios `service` column and allows to aggregate all instances of the same service (when calling the same check script with different arguments)"
msgstr "nagios`service` カラムに対応し、同じサービスのすべてのインスタンスを集約することができます（異なる引数で同じチェックスクリプトを呼び出す場合）。"

#: ../../gdi/monitors-monitoring/nagios.md:64
msgid "The max execution time allowed in seconds before sending SIGKILL (**default:** `9`)"
msgstr "SIGKILL を送信するまでの最大実行時間 (秒単位) (**デフォルト:**`9`)"

#: ../../gdi/monitors-monitoring/nagios.md:64
msgid "`ignoreStdOut`"
msgstr "`ignoreStdOut`"

#: ../../gdi/monitors-monitoring/nagios.md:64
msgid "If `false` and change is detected on `stdout` compared to the last event it will send a new one (**default:** `false`)"
msgstr "`false` かつ`stdout` で前回のイベントと比較して変化が検出された場合、新しいイベントを送信する（**default:**`false` ）。"

#: ../../gdi/monitors-monitoring/nagios.md:64
msgid "`ignoreStdErr`"
msgstr "`ignoreStdErr`"

#: ../../gdi/monitors-monitoring/nagios.md:64
msgid "If `false` and change is detected on `stderr` compared to the last event it will send a new one (**default:** `false`)"
msgstr "`false` ` stderr` で前回のイベントと比較して変化が検出された場合、新しいイベントを送信する（**default:**`false` ）。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:3
msgid "Prometheus Exporter"
msgstr "プロメテウス・エクスポーター"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `prometheus-exporter` monitor type to read all metric types from a [Prometheus Exporter](https://prometheus.io/docs/instrumenting/exporters/) endpoint."
msgstr "`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent レシーバー<smartagent-receiver>` と`prometheus-exporter` モニタータイプを使用して、[Prometheus Exporter](https://prometheus.io/docs/instrumenting/exporters/) エンドポイントからすべてのメトリックタイプを読み取ります。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:9
msgid "A Prometheus Exporter is a piece of software that fetches statistics from another, non-Prometheus system, and turns them into Prometheus metrics. For a description of the Prometheus metric types, see [Metric Types](https://prometheus.io/docs/concepts/metric_types/)."
msgstr "Prometheus Exporterは、Prometheus以外のシステムから統計情報を取得し、Prometheusのメトリクスに変換するソフトウェアです。プロメテウスのメトリックタイプの説明については、[メトリックタイプ](https://prometheus.io/docs/concepts/metric_types/) を参照してください。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:51
msgid "For specific use cases that show how the Splunk Distribution of OpenTelemetry Collector can integrate and complement existing environments, see <a href=\"https://github.com/signalfx/splunk-otel-collector/tree/main/examples\" target=\"_blank\">configuration examples</a>."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションが既存の環境をどのように統合し、補完できるかを示す具体的な使用例については、<a href=\"https://github.com/signalfx/splunk-otel-collector/tree/main/examples\" target=\"_blank\">構成例</a> を参照してください。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:53
msgid "See the <a href=\"https://github.com/signalfx/splunk-otel-collector/tree/main/examples/prometheus-federation\" target=\"_blank\">Prometheus Federation Endpoint Example</a> in GitHub for an example of how the OTel Collector works with Splunk Enterprise and an existing Prometheus deployment."
msgstr "GitHub の <a href=\"https://github.com/signalfx/splunk-otel-collector/tree/main/examples/prometheus-federation\" target=\"_blank\">Prometheus Federation Endpoint Example</a> で、OTel Collector が Splunk Enterprise と既存の Prometheus デプロイメントでどのように動作するかの例をご覧ください。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:57
msgid "The following table shows the configuration options for the `prometheus-exporter` monitor:"
msgstr "次の表は、`prometheus-exporter` モニターの設定オプションを示します："

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:25
msgid "HTTP timeout duration for both read and writes. This should be a duration string that is accepted by [func ParseDuration](https://golang.org/pkg/time/#ParseDuration) (**default:** `10s`)"
msgstr "読み込みと書き込みの両方のHTTPタイムアウト時間。これは、[func ParseDuration](https://golang.org/pkg/time/#ParseDuration) (**default:**`10s`) が受け付ける継続時間文字列でなければならない。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:78
msgid "For basic HTTP authentication, use the `username` and `password` options."
msgstr "基本的なHTTP認証には、`ユーザー名` 、`パスワード` 。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:80
msgid "On Kubernetes, if the monitored service requires authentication, use the `useServiceAccount` option to use the service account of the agent when connecting. Make sure that the Smart Agent service account has sufficient permissions for the monitored service."
msgstr "Kubernetes上で、監視対象サービスが認証を必要とする場合、`useServiceAccount` オプションを使用して、接続時にエージェントのサービスアカウントを使用します。スマートエージェントのサービスアカウントに、監視対象のサービスに対する十分な権限があることを確認してください。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:86
msgid "Prometheus metric conversion details"
msgstr "プロメテウスのメートル法換算の詳細"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:88
msgid "This is how Prometheus metrics are converted:"
msgstr "これがプロメテウスのメトリクスの変換方法である："

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:90
msgid "Gauges are converted directly to Splunk Infrastructure Monitoring gauges."
msgstr "ゲージは Splunk Infrastructure Monitoring ゲージに直接変換されます。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:91
msgid "Counters are converted directly to Infrastructure Monitoring cumulative counters."
msgstr "カウンタは、インフラストラクチャ・モニタリングの累積カウンタに直接変換される。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:92
msgid "Untyped metrics are converted directly to Infrastructure Monitoring gauges."
msgstr "タイプされていないメトリクスは、インフラストラクチャ・モニタリング・ゲージに直接変換されます。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:93
msgid "Summary metrics are converted to three distinct metrics, where `<basename>` is the root name of the metric:"
msgstr "サマリー・メトリクスは、3つの異なるメトリクスに変換されます。`<basename>` はメトリクスのルート名です："

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:94 ../../gdi/monitors-monitoring/prometheus-exporter.md:98
msgid "The total count is converted to a cumulative counter called `<basename>_count`."
msgstr "総カウント数は、`<ベース名>_count` という累積カウンターに変換される。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:95 ../../gdi/monitors-monitoring/prometheus-exporter.md:99
msgid "The total sum is converted to a cumulative counter called `<basename>`."
msgstr "合計値は、`<basename>` と呼ばれる累積カウンタに変換される。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:96
msgid "Each quantile value is converted to a gauge called `<basename>_quantile` and includes a dimension called `quantile` that specifies the quantile."
msgstr "各分位値は、`<basename>_quantile` というゲージに変換され、`quantile` という分位を指定するディメンションを含む。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:97
msgid "Histogram metrics are converted to three distinct metrics, where `<basename>` is the root name of the metric:"
msgstr "ヒストグラム・メトリクスは、3つの異なるメトリクスに変換されます。`<basename>` は、メトリクスのルート名です："

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:100
msgid "Each histogram bucket is converted to a cumulative counter called `<basename>_bucket` and includes a dimension called `upper_bound` that specifies the maximum value in that bucket. This metric specifies the number of events with a value that is less than or equal to the upper bound."
msgstr "各ヒストグラム・バケットは、`<basename>_bucket` と呼ばれる累積カウンターに変換され、そのバケット内の最大値を指定する`upper_bound` と呼ばれるディメンションを含む。この指標は、上限値以下の値を持つイベントの数を指定する。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:102
msgid "All Prometheus labels are converted directly to Infrastructure Monitoring dimensions."
msgstr "すべてのPrometheusラベルは、Infrastructure Monitoringのディメンションに直接変換されます。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:104
msgid "This supports service discovery so you can set a discovery rule such as `port >= 9100 && port <= 9500 && containerImage =~ \"exporter\"`, assuming you are running exporters in container images that have the word \"exporter\" in them that fall within the standard exporter port range."
msgstr "これはサービス・ディスカバリーをサポートしているので、`port >= 9100 && port <= 9500 && containerImage =~ \"exporter\"` のようなディスカバリー・ルールを設定することができる。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:106
msgid "In Kubernetes, you can also try matching on the container port name as defined in the pod spec, which is the `name` variable in discovery rules for the `k8s-api` observer."
msgstr "Kubernetesでは、`k8s-api` observerのdiscovery rulesの`name` 変数であるpod specで定義されているコンテナポート名でマッチングしてみることもできる。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:108
msgid "Filtering can be very useful here, because exporters tend to be verbose."
msgstr "エクスポーターは冗長になりがちなので、ここでフィルターをかけると非常に便利だ。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:115
msgid "Log contains the error `net/http: HTTP/1.x transport connection broken: malformed HTTP response`"
msgstr "ログにはエラー`net/http: HTTP/1.x transport connection broken: malformed HTTP responseが含まれています。`"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:117
msgid "Solution: Activate HTTPS with `useHTTPS`."
msgstr "解決策`useHTTPS` で HTTPS を有効にする。"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:119
msgid "Log contains the error `forbidden: User \\\"system:anonymous\\\" cannot get path \\\"/metrics\\\"`"
msgstr "ログにエラー`forbidden：User ˶=\"system:anonymous\" cannot get path ˶=\"/metrics\"`"

#: ../../gdi/monitors-monitoring/prometheus-exporter.md:121
msgid "Solution: Activate `useServiceAccount` and make sure the service account that the Splunk Distribution of OpenTelemetry Collector is running with has the necessary permissions."
msgstr "解決方法`useServiceAccount` を有効にして、OpenTelemetry Collector の Splunk Distribution が実行されているサービスアカウントに必要なパーミッションがあることを確認します。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:3
msgid "Prometheus Go"
msgstr "プロメテウス・ゴー"

#: ../../gdi/monitors-monitoring/prometheus-go.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `prometheus-go` monitor type to wrap the {ref}`prometheus-exporter` to scrape Prometheus Go collector and Prometheus process collector metrics for Splunk Observability Cloud."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` を`prometheus-go` monitor type でラップして {参照}`prometheus-exporter` を使用し、Prometheus Go コレクターと Prometheus プロセスコレクターのメトリクスを Splunk Observability Cloud 用にスクレイピングします。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:50
msgid "The following table shows the configuration options for the `prometheus-go` monitor:"
msgstr "次の表は、`prometheus-go` モニターの設定オプションを示しています："

#: ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-velero.md:23
msgid "HTTP timeout duration for both reads and writes. Must be a duration string accepted by https://golang.org/pkg/time/#ParseDuration. Default value is `10s`."
msgstr "読み込みと書き込みの両方に対するHTTPタイムアウト時間。https://golang.org/pkg/time/#ParseDuration が受け付けるデュレーション文字列でなければならない。デフォルト値は`10s` 。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-velero.md:23
msgid "User name to use on each request."
msgstr "各リクエストで使用するユーザ名。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23
msgid "Password to use on each request."
msgstr "各リクエストで使用するパスワード。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23
msgid "If true, the agent connects to the server using HTTPS instead of plain HTTP. Default value is `false`."
msgstr "trueの場合、エージェントはプレーンHTTPの代わりにHTTPSを使用してサーバに接続します。デフォルト値は`false` 。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23
msgid "If both `useHTTPS` and `skipVerify` are `true`, the TLS certificate of the exporter is not verified. Default value is `false`."
msgstr "`useHTTPS` と`skipVerify` の両方が`true` の場合、エクスポーターのTLS証明書は検証されない。デフォルト値は`false` 。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23
msgid "Path to the CA certificate that has signed the TLS certificate, unnecessary if `skipVerify` is set to false."
msgstr "TLS 証明書に署名した CA 証明書へのパス。`skipVerify` が false に設定されている場合は不要。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23
msgid "Path to the client TLS certificate to use for TLS required connections."
msgstr "TLSが必要な接続に使用するクライアントTLS証明書へのパス。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "Path to the client TLS key to use for TLS required connections."
msgstr "TLSが必要な接続に使用するクライアントTLSキーへのパス。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "Host of the exporter."
msgstr "輸出業者のホスト。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23 ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "Port of the exporter."
msgstr "輸出者の港"

#: ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23
msgid "Use pod service account to authenticate. Default value is `false`."
msgstr "認証にはポッドサービスアカウントを使用します。デフォルト値は`false` 。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-monitoring/prometheus-velero.md:23 ../../gdi/monitors-network/traefik.md:23
msgid "Path to the metrics endpoint on the exporter server. The default value is `/metrics`."
msgstr "エクスポータ・サーバのメトリクス・エンドポイントへのパス。デフォルト値は`/metrics` 。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:23 ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:25 ../../gdi/monitors-monitoring/prometheus-velero.md:23
msgid "Send all the metrics that come out of the Prometheus exporter without any filtering. This option has no effect when using the Prometheus exporter monitor directly, since there is no built-in filtering. Default value is `false`."
msgstr "Prometheus エクスポーターから出力されるすべてのメトリクスをフィルタリングなしで送信します。このオプションは、プロメテウス・エクスポーター・モニターを直接使用する場合には効果がありません。デフォルト値は`false` 。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:82
msgid "To emit metrics that are not default, you can add those metrics in the generic receiver-level `extraMetrics` config option. You don't need to add to `extraMetrics` any metric derived from configuration options that don't appear in the list of metrics."
msgstr "デフォルト以外のメトリクスを出力するには、汎用受信機レベル`extraMetrics` 設定オプションでそれらのメトリクスを追加します。`extraMetrics` メトリクスのリストに表示されない構成オプションに由来するメトリックを追加する必要はありません。"

#: ../../gdi/monitors-monitoring/prometheus-go.md:84
msgid "To see a list of metrics that will be emitted you can run `agent-status monitors` after configuring the receiver in a running agent instance."
msgstr "実行中のエージェントインスタンスでレシーバを設定した後、`agent-status monitors` を実行すると、発行されるメトリクスのリストを見ることができます。"

#: ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:3
msgid "Prometheus NGINX Ingress"
msgstr "プロメテウスNGINXイングレス"

#: ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `prometheus-nginx-ingress` monitor type to wrap the {ref}`prometheus-exporter` to collect Ingress NGINX metrics for Splunk Observability Cloud."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`prometheus-nginx-ingress` モニタータイプを使用して、{参照}`prometheus-exporter` をラップし、Splunk Observability Cloud 用の Ingress NGINX メトリクスを収集します。"

#: ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:9
msgid "This integration relies on the Prometheus metric implementation that replaces VTS. If you use NGINX 0.15 or lower, use the {ref}`Prometheus NGINX VTS <prometheus-nginx-vts>` integration."
msgstr "この統合は、VTSに代わるプロメテウスのメトリック実装に依存している。NGINX 0.15 以下を使用している場合は、{ref}`Prometheus NGINX VTS<prometheus-nginx-vts>` の統合を使用してください。"

#: ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:50
msgid "Ingress NGINX configuration"
msgstr "イングレスNGINXの設定"

#: ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:52
msgid "Activate the `controller.stats.enabled=true` and `controller.metrics.enabled=true` flags in the NGINX Ingress Controller chart."
msgstr "NGINX Ingress Controller チャートの`controller.stats.enabled=true` と`controller.metrics.enabled=true` フラグを有効にします。"

#: ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:56
msgid "The following table shows the configuration options for the `prometheus-nginx-ingress` monitor:"
msgstr "次の表は、`prometheus-nginx-ingress` モニターの設定オプションを示す："

#: ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-network/traefik.md:23
msgid "HTTP timeout duration for both reads and writes. Must be a duration string accepted by `ParseDuration`. Default value is `10s`."
msgstr "読み込みと書き込みの両方に対するHTTPタイムアウト時間。`ParseDuration` が受け付ける期間文字列でなければならない。デフォルト値は`10s` 。"

#: ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-network/traefik.md:23
msgid "Username to use on each request."
msgstr "各リクエストで使用するユーザー名。"

#: ../../gdi/monitors-monitoring/prometheus-nginx-ingress.md:25 ../../gdi/monitors-monitoring/prometheus-node.md:23 ../../gdi/monitors-network/traefik.md:23
msgid "Send all the metrics that come out of the Prometheus exporter without any filtering. This option has No effect when using the Prometheus exporter monitor directly, since there is No built-in filtering. Default value is `false`."
msgstr "Prometheus エクスポーターから出力されるすべてのメトリクスをフィルタリングなしで送信します。このオプションは、プロメテウス・エクスポーター・モニターを直接使用する場合には効果がありません。デフォルト値は`false` 。"

#: ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:3
msgid "Prometheus NGINX VTS"
msgstr "プロメテウスNGINX VTS"

#: ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `prometheus-nginx-vts` monitor type to wrap the {ref}`prometheus-exporter` to collect Prometheus NGINX VTS exporter metrics for Splunk Observability Cloud."
msgstr "Ref}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent receiver<smartagent-receiver>` と`prometheus-nginx-vts` monitor type を使用して {ref}`prometheus-exporter` をラップし、Prometheus NGINX VTS exporter のメトリクスを Splunk Observability Cloud 用に収集します。"

#: ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:9
msgid "If you use NGINX 0.16 or higher, use the {ref}`Prometheus NGINX VTS <prometheus-nginx-ingress>` integration."
msgstr "NGINX 0.16 以降を使用している場合は、{ref}`Prometheus NGINX VTS<prometheus-nginx-ingress>` の統合を使用してください。"

#: ../../gdi/monitors-monitoring/prometheus-nginx-vts.md:50
msgid "The following table shows the configuration options for the `prometheus-nginx-vts` monitor:"
msgstr "次の表は、`prometheus-nginx-vts` モニターの設定オプションを示します："

#: ../../gdi/monitors-monitoring/prometheus-node.md:3
msgid "Prometheus Node"
msgstr "プロメテウス・ノード"

#: ../../gdi/monitors-monitoring/prometheus-node.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `prometheus/node` monitor type to wrap the {ref}`prometheus-exporter` to export server level and OS level metrics and send them to Splunk Observability Cloud. The Node Exporter measures various server resources such as RAM, disk space, and CPU utilization."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を`prometheus/node` モニタータイプで使用し、{参照}`prometheus-exporter` をラップして、サーバーレベルと OS レベルのメトリクスをエクスポートし、Splunk Observability Cloud に送信する。Node Exporterは、RAM、ディスク容量、CPU使用率など、さまざまなサーバーリソースを測定します。"

#: ../../gdi/monitors-monitoring/prometheus-node.md:48
msgid "The following table shows the configuration options for the `prometheus/node` monitor:"
msgstr "次の表は、`prometheus/node` モニターの設定オプションを示します："

#: ../../gdi/monitors-monitoring/prometheus-velero.md:3
msgid "Prometheus Velero"
msgstr "プロメテウス・ヴェレロ"

#: ../../gdi/monitors-monitoring/prometheus-velero.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `prometheus/velero` monitor type to gets metrics from Velero."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`prometheus/velero` モニタタイプを使用して、Velero からメトリクスを取得します。"

#: ../../gdi/monitors-monitoring/prometheus-velero.md:48
msgid "Velero"
msgstr "ベレロ"

#: ../../gdi/monitors-monitoring/prometheus-velero.md:50
msgid "Use the Velero Helm chart to automatically activate Prometheus metrics for Velero. See https://github.com/vmware-tanzu/helm-charts/blob/main/charts/velero/README.md on GitHub for more information."
msgstr "Velero Helmチャートを使用して、Velero用のPrometheusメトリクスを自動的に有効にします。詳しくはGitHubのhttps://github.com/vmware-tanzu/helm-charts/blob/main/charts/velero/README.md。"

#: ../../gdi/monitors-monitoring/signalfx-forwarder.md:3
msgid "SignalFx Forwarder"
msgstr "SignalFx フォワーダー"

#: ../../gdi/monitors-monitoring/signalfx-forwarder.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `signalfx-forwarder` monitor type to run an HTTP server that listens for data points and trace spans, and forward them to Splunk Observability Cloud. This integration supports the latest formats for data points and spans that the Splunk ingest API endpoint supports."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と`signalfx-forwarder` monitor type を使用して、データポイントとトレーススパンをリッスンする HTTP サーバーを実行し、Splunk Observability Cloud に転送します。この統合は、Splunk ingest API エンドポイントがサポートするデータポイントとスパンの最新のフォーマットをサポートします。"

#: ../../gdi/monitors-monitoring/signalfx-forwarder.md:48
msgid "Note that the `defaultSpanTagsFromEndpoint` and `extraSpanTagsFromEndpoint` config options are not compatible with the `signalfx-forwarder` receiver."
msgstr "`defaultSpanTagsFromEndpoint` および`extraSpanTagsFromEndpoint` の設定オプションは、`signalfx-forwarder` の受信機とは互換性がないことに注意。"

#: ../../gdi/monitors-monitoring/signalfx-forwarder.md:52
msgid "The following table shows the configuration options for the `signalfx-forwarder` integration:"
msgstr "次の表は、`signalfx-forwarder` 統合用の設定オプションを示す："

#: ../../gdi/monitors-monitoring/signalfx-forwarder.md:23
msgid "The host and port on which to listen for data points. The listening server accepts data points on the same HTTP path as the ingest endpoint or gateway. For example, `/v2/datapoint` or `/v1/trace`. Requests to other paths return errors with HTTP code 404. The default value is `127.0.0.1:9080`."
msgstr "データ・ポイントをリッスンするホストとポート。リスニング・サーバーは、インジェスト・エンドポイントまたはゲートウェイと同じHTTPパスでデータ・ポイントを受け入れる。例えば、`/v2/datapoint` または`/v1/trace` 。他のパスへのリクエストはHTTPコード404でエラーを返す。デフォルト値は`127.0.0.1:9080` 。"

#: ../../gdi/monitors-monitoring/signalfx-forwarder.md:23
msgid "`serverTimeout`"
msgstr "`serverTimeout`"

#: ../../gdi/monitors-monitoring/signalfx-forwarder.md:23
msgid "HTTP timeout duration for both read and write operations. Accepts a duration string for https://golang.org/pkg/time/#ParseDuration. The default value is `5s`."
msgstr "読み取りと書き込みの両方の操作に対するHTTPタイムアウト時間。https://golang.org/pkg/time/#ParseDuration のデュレーション文字列を受け取る。デフォルト値は`5s` 。"

#: ../../gdi/monitors-monitoring/signalfx-forwarder.md:23
msgid "`sendInternalMetrics`"
msgstr "`sendInternalMetrics`"

#: ../../gdi/monitors-monitoring/signalfx-forwarder.md:23
msgid "Whether to emit internal metrics about the HTTP listener. The default value is `false`."
msgstr "HTTP リスナーに関する内部メトリクスを出力するかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:3
msgid "Windows Performance Counters"
msgstr "ウィンドウズ・パフォーマンス・カウンター"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `telegraf/win_perf_counters` monitor type to receive metrics from Windows performance counters."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`telegraf/win_perf_counters` モニタータイプを使用して、Windows パフォーマンスカウンターからメトリクスを受信します。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:9
msgid "This monitor is available on Windows."
msgstr "このモニターはWindowsで使用できます。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:12
msgid "For information on the OpenTelemetry receiver based on the Windows Performance Counters input plugin, see {ref}`Windows Performance Counters receiver <windowsperfcounters-receiver>`."
msgstr "Windows Performance Counters 入力プラグインに基づく OpenTelemetry 受信機については、{ref}`Windows Performance Counters 受信機<windowsperfcounters-receiver>` を参照。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:41
msgid "The following snippet shows a sample configuration with counters and settings:"
msgstr "次のスニペットは、カウンターと設定を含むコンフィギュレーションのサンプルを示しています："

#: ../../gdi/monitors-monitoring/win_perf_counters.md:72
msgid "The following table shows the configuration options for the `telegraf/win_perf_counters` receiver:"
msgstr "次の表に、`telegraf/win_perf_counters` 受信機の設定オプションを示します："

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "`objects`"
msgstr "`objects`"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "Contains the configuration of the monitor."
msgstr "モニターのコンフィギュレーション。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "Frequency of expansion of the counter paths and counter refresh. The default value is `5s`)"
msgstr "カウンタパスの拡張とカウンタのリフレッシュの頻度。デフォルト値は`5s`)"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "`useWildCardExpansion`"
msgstr "`useWildCardExpansion`"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "If set to `true`, instance indexes are included in instance names, and wildcards are expanded and localized when applicable. The default value is `false`."
msgstr "`true` に設定すると、インスタンスインデックスがインスタンス名に含まれ、ワイルドカードが展開され、該当する場合はローカライズされます。デフォルト値は`false` 。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "Print the configurations that match available performance counters. The default value is `false`."
msgstr "利用可能なパフォーマンス・カウンターに一致する構成を印刷する。デフォルト値は`false` 。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "`pcrMetricNames`"
msgstr "`pcrMetricNames`"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "If `true`, metric names are emitted in the `PerfCounterReporter` format. The default value is `false`."
msgstr "`true` の場合、メトリック名は`PerfCounterReporter` フォーマットで出力されます。デフォルト値は`false` 。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:82
msgid "The nested `objects` configuration object has the following fields:"
msgstr "ネストされた`オブジェクト` コンフィギュレーション・オブジェクトには以下のフィールドがある："

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "The name of a Windows performance counter object."
msgstr "Windows パフォーマンス・カウンター・オブジェクトの名前。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "`counters`"
msgstr "`counters`"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "The name of the counters to collect from the performance counter object."
msgstr "パフォーマンス・カウンター・オブジェクトから収集するカウンターの名前。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "`instances`"
msgstr "`instances`"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "The Windows performance counter instances to retrieve for the performance counter object."
msgstr "パフォーマンス・カウンター・オブジェクトに対して取得するWindowsパフォーマンス・カウンター・インスタンス。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "`measurement`"
msgstr "`測定`"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "The name of the Telegraf measurement to be used as a metric name."
msgstr "メトリック名として使用するテレグラフの測定名。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "`warnOnMissing`"
msgstr "`warnOnMissing`"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "Log a warning if the performance counter object is missing. The default value is `false`."
msgstr "パフォーマンス・カウンタ・オブジェクトが見つからない場合は警告をログに記録する。デフォルト値は`false` 。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "`failOnMissing`"
msgstr "`failOnMissing`"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "Throws an error if the performance counter object is missing. The default value is `false`."
msgstr "パフォーマンス・カウンター・オブジェクトがない場合はエラーをスローする。デフォルト値は`false` 。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "`includeTotal`"
msgstr "`includeTotal`"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:27
msgid "Include the total instance when collecting performance counter metrics. The default value is `false`."
msgstr "パフォーマンス・カウンターのメトリクスを収集する場合は、合計インスタンスを含めます。デフォルト値は`false` 。"

#: ../../gdi/monitors-monitoring/win_perf_counters.md:96
msgid "The Splunk Distribution of OpenTelemetry Collector doesn't filter metrics for this receiver."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションは、このレシーバのメトリクスをフィルタリングしません。"

#: ../../gdi/monitors-network/aws-appmesh.md:4 ../../gdi/monitors-network/aws-appmesh.md:49
msgid "AWS AppMesh Envoy Proxy"
msgstr "AWS AppMesh Envoy Proxy"

#: ../../gdi/monitors-network/aws-appmesh.md:8
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the AppMesh monitor type to report metrics from AWS AppMesh Envoy Proxy."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を AppMesh モニタータイプで使用し、AWS AppMesh Envoy Proxy からのメトリクスをレポートします。"

#: ../../gdi/monitors-network/aws-appmesh.md:10
msgid "To use this integration, you must also activate the Envoy StatsD sink on AppMesh and deploy the agent as a sidecar in the services that need to be monitored."
msgstr "この統合を利用するには、AppMesh上でEnvoy StatsDシンクを有効化し、監視が必要なサービスにサイドカーとしてエージェントをデプロイする必要もある。"

#: ../../gdi/monitors-network/aws-appmesh.md:51
msgid "To configure the AWS AppMesh Envoy Proxy, add the following lines to your configuration of the Envoy StatsD sink on AppMesh:"
msgstr "AWS AppMeshのEnvoy Proxyを設定するには、AppMeshのEnvoy StatsDシンクの設定に以下の行を追加します："

#: ../../gdi/monitors-network/aws-appmesh.md:66
msgid "Because you need to remove the prefix in metric names before metric name conversion, set value of the `prefix` field with the value of the `metricPrefix` configuration field described in the following table. This change  causes the monitor to remove this specified prefix. If you don't specify a value for the `prefix` field, it defaults to `envoy`."
msgstr "メトリック名を変換する前に、メトリック名の接頭辞を削除する必要があるため、`prefix` フィールドの値を、次の表で説明する`metricPrefix` 構成フィールドの値に設定します。この変更により、モニターはこの指定された接頭辞を削除する。`prefix` フィールドに値を指定しない場合、デフォルトは`envoy` となる。"

#: ../../gdi/monitors-network/aws-appmesh.md:71
msgid "To learn more, see the [Envoy API reference](https://www.envoyproxy.io/docs/envoy/latest/api/api)."
msgstr "詳しくは、[Envoy API reference](https://www.envoyproxy.io/docs/envoy/latest/api/api) をご覧ください。"

#: ../../gdi/monitors-network/aws-appmesh.md:26
msgid "This host address binds the UDP listener that accepts statsd datagrams. The default value is `localhost`."
msgstr "このホストアドレスは、statsdデータグラムを受け入れるUDPリスナーをバインドする。デフォルト値は`localhost` 。"

#: ../../gdi/monitors-network/aws-appmesh.md:26 ../../gdi/monitors-network/statsd.md:35
msgid "`listenPort`"
msgstr "`listenPort`"

#: ../../gdi/monitors-network/aws-appmesh.md:26
msgid "This value indicates the port on which to listen for statsd messages. The default value is `8125`."
msgstr "この値は、statsdメッセージをリッスンするポートを示す。デフォルト値は`8125` 。"

#: ../../gdi/monitors-network/aws-appmesh.md:26 ../../gdi/monitors-network/statsd.md:35
msgid "`metricPrefix`"
msgstr "`metricPrefix`"

#: ../../gdi/monitors-network/aws-appmesh.md:26
msgid "This string sets the prefix in metric names that the monitor removes before metric name conversion"
msgstr "この文字列は、メトリック名の変換前にモニターが削除するメトリック名の接頭辞を設定します。"

#: ../../gdi/monitors-network/dns.md:3
msgid "DNS Query Input"
msgstr "DNSクエリー入力"

#: ../../gdi/monitors-network/dns.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the DNS Query Input monitor type (an embedded form of the Telegraf DNS Query plugin) to collect DNS data."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と DNS Query Input モニタータイプ（Telegraf DNS Query プラグインの組み込み型）を使用して DNS データを収集します。"

#: ../../gdi/monitors-network/dns.md:21
msgid "`domains`"
msgstr "`domains`"

#: ../../gdi/monitors-network/dns.md:21
msgid "Domains or subdomains to query. If this is not provided, it is `[\".\"]` and `RecordType` is forced to `NS`."
msgstr "クエリーするドメインまたはサブドメイン。これが提供されない場合、`[\".\"]` と`RecordType` は強制的に`NS` となる。"

#: ../../gdi/monitors-network/dns.md:21
msgid "`network`"
msgstr "`network`"

#: ../../gdi/monitors-network/dns.md:21
msgid "Network is the network protocol name. (**default:** `udp`)"
msgstr "Network はネットワークプロトコル名です。(**default:**`udp`)"

#: ../../gdi/monitors-network/dns.md:21
msgid "DNS server port. (**default:** `53`)"
msgstr "DNS サーバーポート。(**default:**`53`)"

#: ../../gdi/monitors-network/dns.md:21
msgid "`servers`"
msgstr "`servers`"

#: ../../gdi/monitors-network/dns.md:21
msgid "Servers to query."
msgstr "クエリーするサーバー"

#: ../../gdi/monitors-network/dns.md:21
msgid "`recordType`"
msgstr "`recordType`"

#: ../../gdi/monitors-network/dns.md:21
msgid "Query record type (A, AAAA, CNAME, MX, NS, PTR, TXT, SOA, SPF, SRV). (**default:** `NS`)"
msgstr "クエリレコードタイプ（A、AAAA、CNAME、MX、NS、PTR、TXT、SOA、SPF、SRV）。(**default:**`NS`)"

#: ../../gdi/monitors-network/dns.md:21
msgid "Query timeout. Use a duration string that is accepted by https://golang.org/pkg/time/#ParseDuration. (**default:** `2s`)"
msgstr "クエリーのタイムアウト。https://golang.org/pkg/time/#ParseDuration が受け付ける持続時間文字列を使用する。(**default:**`2s`)"

#: ../../gdi/monitors-network/logstash-tcp.md:3
msgid "Logstash TCP"
msgstr "Logstash TCP"

#: ../../gdi/monitors-network/logstash-tcp.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `logstash-tcp` monitor type to monitor the health and performance of Logstash deployments through Logstash Monitoring APIs. It fetches events from the [logstash tcp output plugin](https://www.elastic.co/guide/en/logstash/current/plugins-outputs-tcp.html) operating in either `server` or `client` mode and converts them to data points."
msgstr "`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent receiver<smartagent-receiver>` と`logstash-tcp` monitor type を使用して、Logstash Monitoring API を通じて Logstash デプロイの健全性とパフォーマンスを監視します。`サーバ` または`クライアント` のいずれかのモードで動作する[logstash tcp 出力プラグイン](https://www.elastic.co/guide/en/logstash/current/plugins-outputs-tcp.html) からイベントをフェッチし、データポイントに変換する。"

#: ../../gdi/monitors-network/logstash-tcp.md:9
msgid "This integration is meant to be used in conjunction with the Logstash [Metrics filter plugin](https://www.elastic.co/guide/en/logstash/current/plugins-filters-metrics.html) that turns events into metrics. You can only use autodiscovery when this monitor is in `client` mode."
msgstr "この統合は、イベントをメトリクスに変換するLogstash[Metricsフィルタープラグイン](https://www.elastic.co/guide/en/logstash/current/plugins-filters-metrics.html) と組み合わせて使用することを意図しています。オートディスカバリーは、このモニターが`クライアント` モードのときのみ使用できます。"

#: ../../gdi/monitors-network/logstash-tcp.md:11
msgid "This receiver is available on Linux and Windows."
msgstr "このレシーバーはLinuxとWindowsで利用できる。"

#: ../../gdi/monitors-network/logstash-tcp.md:46
msgid "Example: Logstash Metrics plugin configuration"
msgstr "例Logstash Metricsプラグインの設定"

#: ../../gdi/monitors-network/logstash-tcp.md:48
msgid "The following example shows how to use both `timer` and `meter` metrics from the Logstash Metrics filter plugin:"
msgstr "次の例では、Logstash Metricsフィルタープラグインの`タイマー` と`メーター` メトリクスの両方を使用する方法を示します："

#: ../../gdi/monitors-network/logstash-tcp.md:118
msgid "Once Logstash is configured with the above configuration, the `logstash-tcp` monitor collects `logins.count` and `process_time.<timer_field>`."
msgstr "Logstashが上記の設定で構成されると、`logstash-tcp` モニターは、`logins.count` と`process_timeを収集する。<timer_field>` 。"

#: ../../gdi/monitors-network/logstash-tcp.md:25
msgid "If `mode: server`, the local IP address to listen on.  If `mode: client`, the Logstash host/ip to connect to."
msgstr "`mode: server` の場合、リッスンするローカルIPアドレス。 `mode: client` の場合、接続先の Logstash ホスト/IP。"

#: ../../gdi/monitors-network/logstash-tcp.md:25
msgid "If `mode: server`, the local port to listen on.  If `mode: client`, the port of the Logstash TCP output plugin.  If port is `0`, a random listening port is assigned by the kernel. (**default:** `0`)"
msgstr "`mode: server` の場合、リッスンするローカルポート。 `mode: client` の場合、Logstash TCP 出力プラグインのポート。 port が`0` の場合、カーネルによってランダムなリスニング・ポートが割り当てられる。(**default:**`0`) 。"

#: ../../gdi/monitors-network/logstash-tcp.md:25
msgid "`mode`"
msgstr "`mode`"

#: ../../gdi/monitors-network/logstash-tcp.md:25
msgid "Whether to act as a `server` or `client`.  The corresponding setting in the Logtash `tcp` output plugin should be set to the opposite of this. (**default:** `client`)"
msgstr "`サーバー` または`クライアント` として動作するかどうか。 Logtash`tcp` output pluginの対応する設定は、この反対に設定する必要があります。(**default:**`クライアント`)"

#: ../../gdi/monitors-network/logstash-tcp.md:25
msgid "`desiredTimerFields`"
msgstr "`desiredTimerFields`"

#: ../../gdi/monitors-network/logstash-tcp.md:25
msgid "(**default:** `[mean, max, p99, count]`)"
msgstr "(**default:**`[mean, max, p99, count]`)"

#: ../../gdi/monitors-network/logstash-tcp.md:25
msgid "`reconnectDelay`"
msgstr "`reconnectDelay`"

#: ../../gdi/monitors-network/logstash-tcp.md:25
msgid "How long to wait before reconnecting if the TCP connection cannot be made or after it gets broken. (**default:** `5s`)"
msgstr "TCP接続ができない場合、または接続が切断された場合に再接続するまでの待ち時間。(**default:**`5s`)"

#: ../../gdi/monitors-network/logstash-tcp.md:25
msgid "`debugEvents`"
msgstr "`debugEvents`"

#: ../../gdi/monitors-network/logstash-tcp.md:25
msgid "If `true`, events received from Logstash will be dumped to the agent's stdout in deserialized form (**default:** `false`)"
msgstr "`true` の場合、Logstashから受け取ったイベントは、デシリアライズされた形でエージェントの標準出力にダンプされます（**default:**`false` ）。"

#: ../../gdi/monitors-network/net-io.md:3
msgid "Network interface I/O"
msgstr "ネットワーク・インターフェースI/O"

#: ../../gdi/monitors-network/net-io.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `net-io` monitor type to report I/O metrics about network interfaces."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`net-io` モニタタイプを使用して、ネットワークインターフェースに関する I/O メトリクスをレポートする。"

#: ../../gdi/monitors-network/net-io.md:46
msgid "The following table shows the configuration options for the `net-io` integration:"
msgstr "次の表は、`net-io` 統合の設定オプションを示しています："

#: ../../gdi/monitors-network/net-io.md:21
msgid "`interfaces`"
msgstr "`interfaces`"

#: ../../gdi/monitors-network/net-io.md:21
msgid "The network interfaces to send metrics about. This is an [overridable set](https://docs.splunk.com/Observability/gdi/smart-agent/smart-agent-resources.html#filtering-data-using-the-smart-agent). (**default:** `[* !/^lo\\d*$/ !/^docker.*/ !/^t(un"
msgstr "メトリクスを送信するネットワーク・インターフェイス。これは[オーバーライド可能なセット](https://docs.splunk.com/Observability/gdi/smart-agent/smart-agent-resources.html#filtering-data-using-the-smart-agent) 。(**default:**`[* !/^lod*$/ !/^docker.*/ !/^t(un"

#: ../../gdi/monitors-network/net-io.md:52
msgid "On Linux hosts, this monitor relies on the `/proc` filesystem. If the underlying host's `/proc` file system is mounted somewhere other than `/proc`, specify the path using the top-level configuration `procPath`."
msgstr "Linuxホストでは、このモニターは`/proc` ファイルシステムに依存する。基盤となるホストの`/proc` ファイルシステムが`/proc` 以外の場所にマウントされている場合は、トップレベル構成`procPath` を使用してパスを指定します。"

#: ../../gdi/monitors-network/network-protocols.md:3
msgid "Network protocols"
msgstr "ネットワークプロトコル"

#: ../../gdi/monitors-network/network-protocols.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Network protocols monitor type to gather metrics about the network protocol stacks running on the system."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と Network protocols monitor type を使用して、システム上で動作するネットワークプロトコルスタックに関するメトリクスを収集します。"

#: ../../gdi/monitors-network/ntp.md:3
msgid "NTP server"
msgstr "NTPサーバー"

#: ../../gdi/monitors-network/ntp.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `ntp` monitor type to retrieve clock offset from an NTP server. The minimum interval is 30 minutes."
msgstr "`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent receiver<smartagent-receiver>` と`ntp` monitor type を使用して、NTP サーバーからクロックオフセットを取得します。最小間隔は30分。"

#: ../../gdi/monitors-network/ntp.md:9
msgid "This receiver is available on Kubernetes, Linux, and Windows."
msgstr "このレシーバーはKubernetes、Linux、Windowsで利用できる。"

#: ../../gdi/monitors-network/ntp.md:48
msgid "The following table shows the configuration options for the ntp receiver:"
msgstr "次の表に、ntpレシーバーの設定オプションを示す："

#: ../../gdi/monitors-network/ntp.md:23
msgid "The host or IP address of the NTP server. For example, `pool.ntp.org`."
msgstr "NTPサーバーのホストまたはIPアドレス。例えば、`pool.ntp.org` 。"

#: ../../gdi/monitors-network/ntp.md:23
msgid "The port of the NTP server. Default is `123`."
msgstr "NTPサーバーのポート。デフォルトは`123` 。"

#: ../../gdi/monitors-network/ntp.md:23
msgid "`version`"
msgstr "`version`"

#: ../../gdi/monitors-network/ntp.md:23
msgid "NTP protocol version. Default is `4`."
msgstr "NTPプロトコルのバージョン。デフォルトは`4` 。"

#: ../../gdi/monitors-network/ntp.md:23
msgid "Timeout in seconds for the request. Default is `5s`."
msgstr "リクエストのタイムアウト（秒）。デフォルトは`5s` 。"

#: ../../gdi/monitors-network/snmp.md:3
msgid "SNMP agent"
msgstr "SNMPエージェント"

#: ../../gdi/monitors-network/snmp.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `snmp` monitor type to collect metrics from SNMP agents."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent receiver<smartagent-receiver>` と`snmp` monitor type を使用して、SNMP エージェントからメトリクスを収集します。"

#: ../../gdi/monitors-network/snmp.md:12
msgid "This monitor doesn't support MIB lookups`."
msgstr "このモニターはMIBルックアップをサポートしていない` 。"

#: ../../gdi/monitors-network/snmp.md:52
msgid "The following is a sample Smart Agent monitor configuration:"
msgstr "以下は、スマートエージェントのモニター設定のサンプルです："

#: ../../gdi/monitors-network/snmp.md:66
msgid "The following is a sample Smart Agent monitor configuration using a discovery rule:"
msgstr "以下は、検出ルールを使用したスマートエージェントモニタ構成のサンプルです："

#: ../../gdi/monitors-network/snmp.md:82
msgid "The following table shows the configuration options for the SNMP agent monitor:"
msgstr "次の表は、SNMPエージェントモニターの設定オプションを示したものです："

#: ../../gdi/monitors-network/snmp.md:27
msgid "Host name or IP address of the SNMP agent. Host and port are concatenated and appended to the list of SNMP agents to connect to."
msgstr "SNMPエージェントのホスト名またはIPアドレス。ホストとポートが連結され、接続するSNMPエージェントのリストに追加される。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "Port of the SNMP agent host. Port and Host are concatenated and appended to the list of SNMP agents to connect to. The default value is `0`."
msgstr "SNMPエージェントホストのポート。PortとHostは連結され、接続するSNMPエージェントのリストに追加される。デフォルト値は`0` 。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`agents`"
msgstr "`agents`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "List of SNMP agent address and ports to query for information. For example, `0.0.0.0:5555`. If an address is supplied without a port, the default port is `161`."
msgstr "情報を問い合わせるSNMPエージェントのアドレスとポートのリスト。例えば、`0.0.0.0:5555` 。ポートなしでアドレスが指定された場合、デフォルトのポートは`161` となる。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`retries`"
msgstr "`retries`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "Number of retries. The default value is `0`."
msgstr "再試行回数。デフォルト値は`0` 。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`community`"
msgstr "`community`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "SNMP community to use. The default value is `public`."
msgstr "使用するSNMPコミュニティ。デフォルト値は`public` 。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`maxRepetitions`"
msgstr "`maxRepetitions`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`uint8`"
msgstr "`uint8`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "Maximum number of iterations for repeating variables The default value is `50`."
msgstr "反復変数の最大反復回数 デフォルト値は`50`."

#: ../../gdi/monitors-network/snmp.md:27
msgid "`contextName`"
msgstr "`contextName`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "SNMP v3 context name to use with requests."
msgstr "リクエストで使用するSNMP v3コンテキスト名。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`secLevel`"
msgstr "`secLevel`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "Security level to use for SNMP v3 messages: `noAuthNoPriv`, `authNoPriv`, or `authPriv`. The default value is `noAuthNoPriv`."
msgstr "SNMP v3 メッセージに使用するセキュリティレベル：`noAuthNoPriv`,`authNoPriv`, または`authPriv` 。デフォルト値は`noAuthNoPriv` 。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`secName`"
msgstr "`secName`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "Name to used to authenticate with SNMP v3 requests."
msgstr "SNMP v3リクエストの認証に使用する名前。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`authProtocol`"
msgstr "`authProtocol`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "Protocol to used to authenticate SNMP v3 requests: `\"MD5\"`, `\"SHA\"`, or `\"\"` (default)."
msgstr "SNMP v3リクエストの認証に使用するプロトコル：`\"MD5\"`,`\"SHA\"`, または`\"\"` （デフォルト）。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`authPassword`"
msgstr "`authPassword`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "Password used to authenticate SNMP v3 requests."
msgstr "SNMP v3リクエストの認証に使用されるパスワード。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`privProtocol`"
msgstr "`privProtocol`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "Protocol used for encrypted SNMP v3 messages: `DES`, `AES`, or `\"\"` (default)."
msgstr "暗号化されたSNMP v3メッセージに使用されるプロトコル：`DES`,`AES`, または`\"\"` (デフォルト)。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`privPassword`"
msgstr "`privPassword`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "Password used to encrypt SNMP v3 messages."
msgstr "SNMP v3メッセージの暗号化に使用するパスワード。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`engineID`"
msgstr "`engineID`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "The SNMP v3 engine ID."
msgstr "SNMP v3エンジンID。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`engineBoots`"
msgstr "`engineBoots`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`uint32`"
msgstr "`uint32`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "The SNMP v3 engine boots. The default value is `0`."
msgstr "SNMP v3エンジンが起動する。デフォルト値は`0` 。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`engineTime`"
msgstr "`engineTime`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "The SNMP v3 engine time. The default value is `0`."
msgstr "SNMP v3エンジン時間。デフォルト値は`0` 。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "The top-level measurement name."
msgstr "トップレベルの測定名。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`fields`"
msgstr "`fields`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "The top-level SNMP fields."
msgstr "トップレベルのSNMPフィールド。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`tables`"
msgstr "`tables`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "SNMP Tables."
msgstr "SNMPテーブル。"

#: ../../gdi/monitors-network/snmp.md:106
msgid "The nested `fields` configuration object has the following fields:"
msgstr "ネストされた`フィールド` コンフィギュレーション・オブジェクトには以下のフィールドがある："

#: ../../gdi/monitors-network/snmp.md:27
msgid "Name of the field. The OID is used if no value is supplied."
msgstr "フィールドの名前。値が提供されない場合は、OIDが使用される。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`oid`"
msgstr "`oid`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "The OID to retrieve."
msgstr "取得するOID。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`oidIndexSuffix`"
msgstr "`oidIndexSuffix`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "The subidentifier to strip off when matching indexes to other fields."
msgstr "インデックスを他のフィールドにマッチさせる際に取り除くサブ識別子。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`oidIndexLength`"
msgstr "`oidIndexLength`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "The index length after the table OID. The index is truncated after this length to remove length index suffixes or nonfixed values. The default value is `0`."
msgstr "テーブルOIDの後のインデックス長。インデックスは、長さインデックスの接尾辞や固定されていない値を取り除くために、この長さの後で切り捨てられる。デフォルト値は`0` 。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`isTag`"
msgstr "`isTag`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "Whether to output the field as a tag. The default value is `false`."
msgstr "フィールドをタグとして出力するかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`conversion`"
msgstr "`conversion`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "Controls the type conversion applied to the value: `\"float(X)\"`, `\"float\"`, `\"int\"`, `\"hwaddr\"`, `\"ipaddr\"`, or `\"\"` (default)."
msgstr "`\"float(X)\"`,`\"float\"`,`\"int\"`,`\"hwaddr\"`,`\"ipaddr\"`, または`\"\"` （デフォルト）。"

#: ../../gdi/monitors-network/snmp.md:117
msgid "The nested `tables` configuration object has the following fields:"
msgstr "ネストされた`テーブル` コンフィギュレーション・オブジェクトには以下のフィールドがある："

#: ../../gdi/monitors-network/snmp.md:27
msgid "Metric name. If not supplied the OID is used."
msgstr "メトリック名。提供されない場合はOIDが使用される。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`inheritTags`"
msgstr "`inheritTags`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "Top level tags to inherit."
msgstr "継承するトップレベルのタグ。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`indexAsTag`"
msgstr "`indexAsTag`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "Add a tag for the table index for each row. The default value is `false`."
msgstr "各行のテーブル・インデックスのタグを追加する。デフォルト値は`false` 。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "`field`"
msgstr "`field`"

#: ../../gdi/monitors-network/snmp.md:27
msgid "Specifies the tags and values to look up."
msgstr "検索するタグと値を指定する。"

#: ../../gdi/monitors-network/snmp.md:127
msgid "The nested `field` configuration object has the following fields:"
msgstr "ネストされた`フィールド` コンフィギュレーション・オブジェクトには以下のフィールドがある："

#: ../../gdi/monitors-network/snmp.md:27
msgid "Name of the field. The OID are used if no value is supplied."
msgstr "フィールドの名前。値が提供されない場合は、OIDが使用される。"

#: ../../gdi/monitors-network/snmp.md:27
msgid "The sub-identifier to strip off when matching indexes to other fields."
msgstr "インデックスを他のフィールドにマッチさせる際に取り除くサブ識別子。"

#: ../../gdi/monitors-network/statsd.md:3 ../../gdi/opentelemetry/collector-architecture.rst:113 ../../gdi/opentelemetry/collector-architecture.rst:133
msgid "Statsd"
msgstr "統計"

#: ../../gdi/monitors-network/statsd.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `statsd` monitor type to collect statsd metrics. It listens on a configured address and port to receive the statsd metrics."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`statsd` モニタタイプを使用して、statsd メトリクスを収集します。設定されたアドレスとポートでリッスンし、statsd メトリックを受信します。"

#: ../../gdi/monitors-network/statsd.md:9
msgid "This integration supports the `Counter`, `Timer`, `Gauge`, and `Set` types, which are dispatched as the Splunk Observability Cloud types `counter`, `gauge`, `gauge`, and `gauge` respectively. Statsd extensions such as tags are not supported."
msgstr "この統合は`Counter`,`Timer`,`Gauge`, and`Set` タイプをサポートしており、それぞれ Splunk Observability Cloud タイプ`counter`,`gauge`,`gauge`, and`gauge` としてディスパッチされます。タグのようなStatsdの拡張機能はサポートされていません。"

#: ../../gdi/monitors-network/statsd.md:23
msgid "Verify the installation"
msgstr "インストールの確認"

#: ../../gdi/monitors-network/statsd.md:25
msgid "To verify the installation, send statsd metrics locally with `netcat` as follows, then verify in Splunk Observability Cloud that the metric arrived:"
msgstr "インストールを確認するには、以下のように`netcat` を使用して statsd メトリックをローカルに送信し、Splunk Observability Cloud でメトリックが到着したことを確認します："

#: ../../gdi/monitors-network/statsd.md:31
msgid "For Kubernetes environments, use the `status.hostIP` environment variable to verify the installation. This environment variable is the IP address of the node where the pod is running."
msgstr "Kubernetes環境では、`status.hostIP` 環境変数を使用してインストールを確認する。この環境変数は、ポッドが実行されているノードのIPアドレスである。"

#: ../../gdi/monitors-network/statsd.md:60
msgid "The following table shows the configuration options for the `statsd` monitor:"
msgstr "次の表は、`statsd` モニターの設定オプションを示す："

#: ../../gdi/monitors-network/statsd.md:35
msgid "The host or address on which to bind the UDP listener that accepts statsd datagrams. The default value is `localhost`."
msgstr "statsdデータグラムを受け入れるUDPリスナーをバインドするホストまたはアドレス。デフォルト値は`localhost` 。"

#: ../../gdi/monitors-network/statsd.md:35
msgid "The port on which to listen for statsd messages. The default value is `8125`."
msgstr "statsdメッセージをリッスンするポート。デフォルト値は`8125` 。"

#: ../../gdi/monitors-network/statsd.md:35
msgid "A prefix in metric names that needs to be removed before metric name conversion."
msgstr "メトリック名を変換する前に削除する必要がある、メトリック名の接頭辞。"

#: ../../gdi/monitors-network/statsd.md:35
msgid "`converters`"
msgstr "`converters`"

#: ../../gdi/monitors-network/statsd.md:35
msgid "A list converters to convert statsd metric names into SignalFx metric names and dimensions."
msgstr "statsdのメトリック名をSignalFxのメトリック名とディメンションに変換するコンバータのリスト。"

#: ../../gdi/monitors-network/statsd.md:69
msgid "The nested `converters` configuration object has the following fields:"
msgstr "ネストされた`コンバーター` コンフィギュレーション・オブジェクトには以下のフィールドがある："

#: ../../gdi/monitors-network/statsd.md:35
msgid "A pattern to match against statsd metric names."
msgstr "statsd メトリック名とマッチするパターン。"

#: ../../gdi/monitors-network/statsd.md:35
msgid "A format to compose a metric name to report to Splunk Observability Cloud."
msgstr "Splunk Observability Cloud に報告するメトリック名を構成するフォーマット。"

#: ../../gdi/monitors-network/statsd.md:76
msgid "The Smart Agent and Collector don't do any built-in filtering of metrics that come out of this monitor."
msgstr "Smart AgentとCollectorは、このモニタから出力されるメトリクスに対して組み込みのフィルタリングを行いません。"

#: ../../gdi/monitors-network/statsd.md:82
msgid "See the section below to learn how metrics can be collected with this monitor."
msgstr "このモニターでどのようにメトリクスを収集できるかについては、以下のセクションを参照してください。"

#: ../../gdi/monitors-network/statsd.md:84
msgid "Add dimensions to statsd metrics"
msgstr "statsdメトリクスにディメンションを追加する"

#: ../../gdi/monitors-network/statsd.md:86
msgid "The statsd monitor can parse keywords from a statsd metric name by a set of converters configured by a user, as shown in the following example:"
msgstr "statsdモニターは、次の例に示すように、ユーザーによって設定されたコンバーターのセットによって、statsdメトリック名からキーワードを解析することができます："

#: ../../gdi/monitors-network/statsd.md:94
msgid "This converter parses `traffic`, `mesh`, `service`, and `action` as dimensions from the `cluster.cds_egress_ecommerce-demo-mesh_gateway-vn_tcp_8080.update_success` metric. If a section has only a pair of brackets without a name, it does not capture a dimension."
msgstr "このコンバータは、`トラフィック` 、`メッシュ` 、`サービス` 、`アクション` を、`cluster.cds_egress_ecommerce-demo-mesh_gateway-vn_tcp_8080.update_success` メトリックのディメンジョンとして解析する。セクションに名前のない括弧のペアしかない場合は、ディメンジョンを捕捉していない。"

#: ../../gdi/monitors-network/statsd.md:96
msgid "When multiple converters are provided, a metric is converted by the first converter with a matching pattern to the metric name."
msgstr "複数のコンバータが提供されている場合、メトリックは、メトリック名に一致するパターンを持つ最初のコンバータによって変換される。"

#: ../../gdi/monitors-network/statsd.md:98
msgid "Format metric names"
msgstr "メトリック名のフォーマット"

#: ../../gdi/monitors-network/statsd.md:100
msgid "You can customize a metric name by providing a format string within the converter configuration, as shown in the following example:"
msgstr "次の例に示すように、コンバーターの設定内でフォーマット文字列を指定することで、メトリック名をカスタマイズすることができます："

#: ../../gdi/monitors-network/statsd.md:108
msgid "The metrics that match to the given pattern are reported to Infrastructure Monitoring as `{traffic}.{action}`. For instance, metric `cluster.cds_egress_ecommerce-demo-mesh_gateway-vn_tcp_8080.update_success` is reported as `egress.update_success`."
msgstr "指定されたパターンに一致するメトリクスは、`{traffic}.{action}` として Infrastructure Monitoring に報告されます。たとえば、メトリック`cluster.cds_egress_ecommerce-demo-mesh_gateway-vn_tcp_8080.update_success` は、`egress.update_success` として報告されます。"

#: ../../gdi/monitors-network/statsd.md:111
msgid "`metricName` is required for a converter configuration. A converter is deactivated if `metricName` is not provided."
msgstr "`metricName` 、コンバーターのコンフィギュレーションに必要。`metricName` が提供されない場合、コンバーターは無効化される。"

#: ../../gdi/monitors-network/statsd.md:113
msgid "Data points get a `host` dimension of the current host that the agent is running on, not the host from which the statsd metric was sent. For this reason, send statsd metrics to a local agent instance. If you don't want the `host` dimension, you can set `disableHostDimensions: true` on the monitor configuration."
msgstr "データポイントは、statsd メトリックが送信されたホストではなく、エージェントが実行されている現在のホストの`ホスト` ディメンジョンを取得します。このため、statsdメトリクスをローカル・エージェント・インスタンスに送信します。`ホスト` ディメンジョンが不要な場合は、`disableHostDimensions: true` をモニター構成に設定します。"

#: ../../gdi/monitors-network/traefik.md:3 ../../gdi/opentelemetry/collector-architecture.rst:110
msgid "Traefik"
msgstr "トラフィック"

#: ../../gdi/monitors-network/traefik.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `traefik` monitor type to collect metrics from Traefik."
msgstr "Ref}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent receiver<smartagent-receiver>` と`traefik` monitor type を使って Traefik からメトリクスを収集する。"

#: ../../gdi/monitors-network/traefik.md:48
msgid "The following table shows the configuration options for the `traefik` monitor:"
msgstr "次の表は、`traefik` モニターの設定オプションを示します："

#: ../../gdi/monitors-network/traefik.md:23
msgid "The Collector or Smart Agent must have network access to Traefik."
msgstr "コレクタまたはスマートエージェントは、Traefikにネットワークアクセスできる必要があります。"

#: ../../gdi/monitors-network/traefik.md:68
msgid "Traefik configuration"
msgstr "Traefikコンフィギュレーション"

#: ../../gdi/monitors-network/traefik.md:70
msgid "Edit the Traefik configuration file, for example `traefik.toml`, to activate Traefik to expose Prometheus metrics at an endpoint. By default, the endpoint is on path `/metrics`. When running the Traefik binary, pass the path to the configuration file using the `-c` argument. For example, `./traefik -c traefik.toml`."
msgstr "例えば`traefik.toml` のように、Traefik 設定ファイルを編集して、エンドポイントで Prometheus メトリクスを公開するように Traefik をアクティブにします。デフォルトでは、エンドポイントはパス`/metrics` にある。Traefikバイナリを実行する際、`-c` 引数を用いて設定ファイルへのパスを渡す。例えば、`./traefik -c traefik.toml`."

#: ../../gdi/monitors-network/traefik.md:72
msgid "When running the Traefik Docker image, use the `/etc/traefik/traefik.toml` volume. For example, `docker run -d -p 8080:8080 -p 80:80 -v $PWD/traefik.toml:/etc/traefik/traefik.toml`."
msgstr "Traefik Dockerイメージを実行する場合、`/etc/traefik/traefik.toml` ボリュームを使用します。例えば、`docker run -d -p 8080:8080 -p 80:80 -v $PWD/traefik.toml:/etc/traefik/traefik.toml`."

#: ../../gdi/monitors-network/traefik.md:74
msgid "If the Traefik configuration file is not available, use the sample configuration file to get started. For more information, see the Traefik documentation."
msgstr "Traefikの設定ファイルがない場合は、サンプルの設定ファイルを使用してください。詳しくはTraefikのドキュメントをご覧ください。"

#: ../../gdi/monitors-network/traefik.md:78
msgid "Traefik exports Prometheus metrics which can be categorized into Traefik, entrypoint, and back-end metrics."
msgstr "Traefikは、Traefik、エントリポイント、バックエンドメトリクスに分類できるPrometheusメトリクスをエクスポートします。"

#: ../../gdi/monitors-network/traefik.md:80
msgid "Traefik-related metrics are for monitoring Traefik itself and are prefixed by `go_` and `process_`. For instance, the `go_memstats_sys_bytes` metric can be used to plot Traefik memory usage."
msgstr "Traefik 関連のメトリクスは、Traefik 自体を監視するためのもので、`go_` および`process_` が先頭に付きます。例えば、`go_memstats_sys_bytes` メトリックは、Traefikのメモリ使用量をプロットするのに使うことができる。"

#: ../../gdi/monitors-network/traefik.md:81
msgid "Entrypoint and back-end metrics are the number and duration of requests measured at entrypoints and back ends. Entrypoint-related metrics are prefixed by `traefik_entrypoint_`. Backend-related metrics are prefixed by `traefik_backend_`."
msgstr "エントリーポイントとバックエンドのメトリクスは、エントリーポイントとバックエンドで測定されたリクエストの数と期間である。エントリーポイントに関連するメトリクスは、`traefik_entrypoint_` が先頭に付きます。バックエンド関連のメトリクスには、`traefik_backend_` が先頭に付きます。"

#: ../../gdi/monitors-network/traefik.md:83
msgid "The following table shows the metrics that are available for this integration:"
msgstr "次の表は、この統合で使用できるメトリクスを示しています："

#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:3 ../../gdi/opentelemetry/collector-architecture.rst:102
msgid "Kubernetes API server"
msgstr "Kubernetes APIサーバー"

#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Kubernetes API server monitor type to retrieve metrics from the API server's Prometheus metric endpoint."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を Kubernetes API サーバーモニタータイプで使用し、API サーバーの Prometheus メトリックエンドポイントからメトリクスを取得する。"

#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:11
msgid "This integration requires access to [kube-apiserver pods](https://kubernetes.io/docs/concepts/overview/components/#kube-apiserver) to be able to access certain pods in the control plane. Since several Kubernetes-as-a-service distributions don't expose the control plane pods to the end user, metric collection might not be possible in these cases."
msgstr "この統合には、コントロールプレーンの特定のポッドにアクセスできるように、[kube-apiserver pods](https://kubernetes.io/docs/concepts/overview/components/#kube-apiserver) にアクセスする必要がある。いくつかのKubernetes-as-a-serviceディストリビューションでは、エンドユーザーにコントロールプレーンのポッドを公開していないため、このようなケースではメトリックの収集ができない可能性がある。"

#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:48
msgid "See the [kubernetes-yaml examples](https://github.com/signalfx/splunk-otel-collector/tree/main/examples/kubernetes-yaml) in GitHub for the Agent and Gateway YAML files."
msgstr "エージェントとゲートウェイの YAML ファイルについては、GitHub の[kubernetes-yaml examples](https://github.com/signalfx/splunk-otel-collector/tree/main/examples/kubernetes-yaml) を参照してください。"

#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:50 ../../gdi/monitors-orchestration/kubernetes-proxy.md:47
msgid "Example: Kubernetes observer"
msgstr "例Kubernetesオブザーバー"

#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:52 ../../gdi/monitors-orchestration/kubernetes-proxy.md:49
msgid "The following is an example YAML configuration:"
msgstr "以下はYAMLコンフィギュレーションの例である："

#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:64 ../../gdi/monitors-orchestration/kubernetes-proxy.md:61
msgid "The OpenTelemetry Collector has a Kubernetes observer (`k8sobserver`) that can be implemented as an extension to discover networked endpoints, such as a Kubernetes pod. Using this observer assumes that the OpenTelemetry Collector is deployed in host monitoring (agent) mode, where it is running on each individual node or host instance."
msgstr "OpenTelemetry Collector には Kubernetes observer (`k8sobserver`) があり、Kubernetes pod のようなネットワーク接続されたエンドポイントを発見する拡張機能として実装できる。このオブザーバを使用することは、OpenTelemetry Collectorがホスト監視（エージェント）モードでデプロイされ、個々のノードまたはホストインスタンス上で動作していることを前提としています。"

#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:66
msgid "To use the observer, create a receiver creator instance with an associated rule. For example:"
msgstr "オブザーバーを使用するには、関連するルールを持つレシーバークリエーターのインスタンスを作成します。例えば、こうだ："

#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:100 ../../gdi/monitors-orchestration/kubernetes-proxy.md:136
msgid "See {ref}`Receiver creator <receiver-creator-receiver>` for more information."
msgstr "詳しくは{ref}`レシーバー作成者<receiver-creator-receiver>` を参照。"

#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25
msgid "HTTP timeout duration for both read and writes. This should be a duration string that is accepted by https://golang.org/pkg/time/#ParseDuration. (**default:** `10s`)"
msgstr "読み込みと書き込みの両方のHTTPタイムアウト時間。これは、https://golang.org/pkg/time/#ParseDuration が受け付ける継続時間文字列でなければならない。(**default:**`10s`)"

#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25
msgid "If `useHTTPS` is `true` and this option is also `true`, the exporter TLS cert will not be verified. (**default:** `false`)"
msgstr "`useHTTPS` が`true` であり、このオプションも`true` である場合、エクスポータTLS証明書は検証されない。(**default:**`false`)"

#: ../../gdi/monitors-orchestration/kubernetes-apiserver.md:25 ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "Path to the client TLS cert to use for TLS required connections."
msgstr "TLSが必要な接続に使用するクライアントTLS証明書へのパス。"

#: ../../_includes/bind_address_error_msg.md:2
msgid "**You’re getting a “bind: address already in use” error message**"
msgstr "**bind:アドレスはすでに使用中です。"

#: ../../_includes/bind_address_error_msg.md:4
msgid "If you see an error message such as “bind: address already in use”, another resource is already using the port that the current configuration requires. This resource could be another application, or a tracing tool such as Jaeger or Zipkin."
msgstr "bind: address already in use \"のようなエラーメッセージが表示された場合は、現在のコンフィギュレーションが要求しているポートを、別のリソースがすでに使用しています。このリソースは、他のアプリケーションであったり、JaegerやZipkinのようなトレースツールであったりする。"

#: ../../_includes/bind_address_error_msg.md:6 ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:172
msgid "You can modify the configuration to use another port. You can modify any of these endpoints or ports:"
msgstr "別のポートを使用するように設定を変更することができます。これらのエンドポイントやポートを変更することができる："

#: ../../_includes/bind_address_error_msg.md:8 ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:174
msgid "Receiver endpoint"
msgstr "レシーバー・エンドポイント"

#: ../../_includes/bind_address_error_msg.md:9 ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:175
msgid "Extensions endpoint"
msgstr "エクステンション・エンドポイント"

#: ../../_includes/bind_address_error_msg.md:10 ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:176
msgid "Metrics address (if port 8888)"
msgstr "メトリクスアドレス（ポート8888の場合）"

#: ../../_includes/bind_address_error_msg.md:12
msgid "If you see this error message on Kubernetes and you’re using Helm charts, modify the configuration by updating the chart values for both configuration and exposed ports."
msgstr "Kubernetesでこのエラーメッセージが表示され、Helmチャートを使用している場合は、コンフィギュレーションと公開ポートの両方のチャート値を更新してコンフィギュレーションを修正してください。"

#: ../../_includes/missing_pipeline_configuration.md:2
msgid "**You're getting a “2021-10-19T20:18:40.556Z info builder/receivers_builder.go:112 Ignoring receiver as it is not used by any pipeline {\"kind\": \"receiver\", \"name\": \"<receiver>\" error message**"
msgstr "**2021-10-19T20:18:40.556Z info builder/receivers_builder.go:112 Ignoring receiver as it is not used by any pipeline {\"kind\": \"receiver\", \"name\": \"<receiver>\" error message**」というエラーメッセージが表示されます。"

#: ../../_includes/missing_pipeline_configuration.md:4
msgid "This error occurs when a component (receiver, processor, or exporter) has been configured, but is not used in a receiver pipeline. For example, the following error message tells you that the `smartagent/http` receiver is configured, but that it is not used by any pipeline:"
msgstr "このエラーは、コンポーネント（レシーバー、プロセッサー、エクスポーター）が設定されているにもかかわらず、レシーバー パイプラインで使用されていない場合に発生します。たとえば、次のエラーメッセージは、`smartagent/http` レシーバーは設定されているが、どのパイプラインでも使用されていないことを伝えている："

#: ../../_includes/missing_pipeline_configuration.md:9
msgid "Once configured, all components must be enabled by using pipelines in the service section. The service section is used to configure what components are enabled based on the configuration found in the components sections of your configuration file. If a component is configured, but not defined within the service section, then it is not enabled."
msgstr "一度設定したら、サービスセクションのパイプラインを使用して、すべてのコンポーネントを有効にする必要があります。サービスセクションは、コンフィギュレーションファイルのコンポーネントセクションにあるコンフィギュレーションに基づいて、どのコンポーネントを有効にするかを設定するために使用されます。コンポーネントが設定されているが、サービスセクション内で定義されていない場合、そのコンポーネントは有効にならない。"

#: ../../_includes/missing_pipeline_configuration.md:11
msgid "Here is a sample configuration:"
msgstr "以下に設定例を示す："

#: ../../_includes/missing_pipeline_configuration.md:24
msgid "See [How the OpenTelemetry Collector uses pipelines to process data](https://docs.splunk.com/observability/gdi/opentelemetry/data-processing.html#common-processing-scenarios) for more information."
msgstr "詳細は[How OpenTelemetry Collector uses pipelines to process data](https://docs.splunk.com/observability/gdi/opentelemetry/data-processing.html#common-processing-scenarios) を参照。"

#: ../../_includes/out_of_memory_error.md:2
msgid "**The Splunk Distribution of OpenTelemetry Collector is out of memory**"
msgstr "**OpenTelemetry Collector の Splunk ディストリビューションがメモリ不足です。"

#: ../../_includes/out_of_memory_error.md:4
msgid "If you receive high memory usage or out of memory warnings, do the following before opening a support case:"
msgstr "メモリ使用量が多い、またはメモリ不足の警告が表示される場合は、サポート・ケースを開く前に次のことを行ってください："

#: ../../_includes/out_of_memory_error.md:6
msgid "Verify that you have installed the latest version of the [Splunk Distribution of OpenTelemetry Collector for Kubernetes](https://github.com/signalfx/splunk-otel-collector-chart/releases)."
msgstr "最新バージョンの[Splunk Distribution of OpenTelemetry Collector for Kubernetes](https://github.com/signalfx/splunk-otel-collector-chart/releases) がインストールされていることを確認してください。"

#: ../../_includes/out_of_memory_error.md:7
msgid "Add or change the `memory_limiter` processor in your configuration file. For example:"
msgstr "設定ファイルに`memory_limiter` プロセッサーを追加または変更する。例えば、こうだ："

#: ../../_includes/out_of_memory_error.md:25
msgid "Try to reproduce the error and collect a heap dump close to the point where the memory kill occurs: a. Add the `pprof` extension to the component configuration that is failing. Make sure you enable this extension in a pipeline in the services section.  b. Capture the output of the following commands against the problematic pod:"
msgstr "エラーを再現し、メモリキルが発生したポイントの近くでヒープダンプを収集してみる。`pprof` 拡張を、失敗しているコンポーネント構成に追加する。サービスセクションのパイプラインでこの拡張機能を有効にしていることを確認する。問題のあるポッドに対する以下のコマンドの出力をキャプチャする："

#: ../../_includes/out_of_memory_error.md:33
msgid "For example, if you discover that the pod lasts 5 minutes before it gets killed:"
msgstr "例えば、ポッドが死ぬまで5分間持つことがわかったとする："

#: ../../_includes/out_of_memory_error.md:35
msgid "Bounce the pod and collect the first set of data right after the startup."
msgstr "ポッドをバウンスさせ、始動直後に最初のデータセットを収集する。"

#: ../../_includes/out_of_memory_error.md:36
msgid "Wait 3 minutes and collect another set of data (make sure to label the data accordingly)."
msgstr "3分待ち、別のデータを収集する（データには必ずラベルを貼る）。"

#: ../../_includes/out_of_memory_error.md:37
msgid "Collect another set of data right before the crash (if possible)."
msgstr "可能であれば）クラッシュの直前に別のデータを収集する。"

#: ../../_includes/out_of_memory_error.md:39
msgid "How long does it take for the pod to be killed due to memory limit? Check the logs at the time of the issue to see if there are any obvious repeating errors."
msgstr "メモリ制限のためにポッドが強制終了されるまでの時間は？問題が発生した時点のログをチェックし、明らかな繰り返しエラーがないかどうかを確認する。"

#: ../../_includes/out_of_memory_error.md:41
msgid "Gather additional [support information](https://docs.splunk.com/Observability/gdi/opentelemetry/support-checklist.html#nav-Gather-information-to-open-a-support-request), including your end-to-end architecture information."
msgstr "エンド・ツー・エンド・アーキテクチャ情報を含む、追加の[サポート情報](https://docs.splunk.com/Observability/gdi/opentelemetry/support-checklist.html#nav-Gather-information-to-open-a-support-request) を収集する。"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:3
msgid "Kubernetes cluster (deprecated)"
msgstr "Kubernetesクラスタ（非推奨）"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:8
msgid "This monitor is deprecated in favor of the native OpenTelemetry component `k8s_cluster` receiver. See {ref}`Kubernetes Cluster Receiver <kubernetes-cluster-receiver>` for more information."
msgstr "このモニターは、ネイティブの OpenTelemetry コンポーネント`k8s_cluster` レシーバーに取って代わられ、非推奨となっています。詳細は{ref}`Kubernetes Cluster Receiver<kubernetes-cluster-receiver>` を参照。"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:10
msgid "If you are using OpenShift, use the `openshift-cluster` monitor type instead."
msgstr "OpenShift を使用している場合は、代わりに`openshift-cluster` モニタタイプを使用してください。"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-events.md:63 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "`alwaysClusterReporter`"
msgstr "`alwaysClusterReporter`"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:7
msgid "If `true`, leader election is skipped and metrics are always reported. **Default is** `false`."
msgstr "`true` の場合、リーダー選出はスキップされ、メトリクスは常に報告される。**デフォルトは**`false` 。"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "`namespace`"
msgstr "`namespace`"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:7
msgid "If specified, only resources within the given namespace will be monitored. If omitted (blank), all supported resources across all namespaces will be monitored."
msgstr "指定された場合、指定された名前空間内のリソースのみが監視される。省略（空白）すると、すべてのネームスペースでサポートされているすべてのリソースが監視されます。"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-events.md:63 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "`kubernetesAPI`"
msgstr "`kubernetesAPI`"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:7
msgid "Configuration for the Kubernetes API client"
msgstr "Kubernetes APIクライアントの設定"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "`nodeConditionTypesToReport`"
msgstr "`nodeConditionTypesToReport`"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:7
msgid "A list of node status condition types to report as metrics. The metrics will be reported as data points of the form `kubernetes.node_<type_snake_cased>` with a value of `0` corresponding to \"False\", `1` to \"True\", and `-1` to \"Unknown\". **Default** is `[Ready]`."
msgstr "メトリクスとして報告するノード・ステータス条件タイプのリスト。メトリクスは、`kubernetes.node_<type_snake_cased>` という形式のデータ・ポイントとして報告され、`0` は「False」、`1` は「True」、`-1` は「Unknown」に対応します。**デフォルト**は`[Ready]` 。"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:24 ../../gdi/monitors-orchestration/openshift-cluster.md:63
msgid "The **nested** `kubernetesAPI` configuration object has the following fields:"
msgstr "nested**`kubernetesAPI` コンフィギュレーション・オブジェクトには以下のフィールドがある："

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-events.md:63 ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7 ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "`authType`"
msgstr "`authType`"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-events.md:63
msgid "To authenticate to the K8s API server: <br> - `none` for no authentication.<br> - `tls` to use manually specified TLS client certs (not recommended). <br> - `serviceAccount` to use the standard service account token provided to the agent pod. <br> - `kubeConfig` to use credentials from `~/.kube/config`. <br> - **Default** is `serviceAccount`."
msgstr "<br> -`none` 認証を行わない場合。<br> -`tls` 手動で指定したTLSクライアント証明書を使用する場合（推奨されません）。<br> -`serviceAccount` エージェントポッドに提供される標準サービスアカウントトークンを使用します。 <br> -`kubeConfig` ` ~/.kube/config` からの認証情報を使用します。 <br> - **Default** は`serviceAccount` です。"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:7
msgid "Whether to skip verifying the TLS cert from the API server. Almost never needed. **Default** is `false`."
msgstr "APIサーバーからのTLS証明書の検証をスキップするかどうか。ほとんど必要ありません。**デフォルト**は`偽` 。"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:7
msgid "The path to the TLS client cert on the pod's filesystem, if using `tls` authentication."
msgstr "`tls` 認証を使用する場合は、ポッドのファイルシステム上の TLS クライアント証明書へのパス。"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:7 ../../gdi/monitors-orchestration/kubernetes-events.md:63
msgid "The path to the TLS client key on the pod's filesystem, if using `tls` authentication."
msgstr "`tls` 認証を使用する場合は、ポッドのファイルシステム上の TLS クライアント鍵へのパス。"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:7
msgid "Path to a CA certificate to use when verifying the API server TLS certificate. This is provided by Kubernetes alongside the service account token, which will be picked up automatically, so this should rarely be necessary to specify."
msgstr "APIサーバーのTLS証明書を検証する際に使用するCA証明書へのパス。これはKubernetesがサービスアカウントトークンと一緒に提供し、自動的にピックアップされるので、指定する必要はほとんどないはずだ。"

#: ../../gdi/monitors-orchestration/kubernetes-cluster.md:36
msgid "The following table shows the legacy metrics that are available for this integration. See [OpenTelemetry values and their legacy equivalents](https://docs.splunk.com/Observability/gdi/opentelemetry/legacy-otel-mappings.html#opentelemetry-values-and-their-legacy-equivalents) for the Splunk Distribution of OpenTelemetry Collector equivalents."
msgstr "次の表は、この統合で使用できるレガシー・メトリクスを示しています。OpenTelemetry Collector に相当する Splunk ディストリビューションについては、[OpenTelemetry の値とそのレガシー同等物](https://docs.splunk.com/Observability/gdi/opentelemetry/legacy-otel-mappings.html#opentelemetry-values-and-their-legacy-equivalents) を参照してください。"

#: ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:4
msgid "Kubernetes Controller Manager (deprecated)"
msgstr "Kubernetes Controller Manager（非推奨）"

#: ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:9
msgid "This monitor is deprecated in favor of the `prometheus-exporter` monitor. See {ref}`Prometheus Exporter <prometheus-exporter>` for more information."
msgstr "このモニターは、`prometheus-exporter` モニターに取って代わられ、非推奨となっています。詳しくは{ref}`Prometheus Exporter<prometheus-exporter>` を参照してください。"

#: ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:12
msgid "The monitor queries path `/metrics` by default when no path is configured. It converts the Prometheus metric types to Splunk Observability Cloud metric types as described in the documentation for [prometheus-exporter](../monitors-monitoring/prometheus-exporter.md). All Prometheus labels are converted directly to Infrastructure Monitoring dimensions."
msgstr "パスが設定されていない場合、モニターはデフォルトでパス`/metrics` を照会する。[prometheus-exporter](../monitors-monitoring/prometheus-exporter.md) のドキュメントに記載されているように、Prometheus のメトリックタイプを Splunk Observability Cloud のメトリックタイプに変換します。すべてのPrometheusラベルは、Infrastructure Monitoringのディメンションに直接変換されます。"

#: ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:8
msgid "If useHTTPS is `true` and this option is also `true`, the exporter's TLS cert will not be verified. (**default:** `false`)"
msgstr "useHTTPSが`true` であり、このオプションも`true` である場合、エクスポータのTLS証明書は検証されない。(**default:**`false`)"

#: ../../gdi/monitors-orchestration/kubernetes-controller-manager.md:38
msgid "These are the metrics available for this integration. All metrics are custom and are only emitted if specified explicitly."
msgstr "これらは、この統合で利用可能なメトリクスです。すべてのメトリクスはカスタムであり、明示的に指定された場合にのみ出力されます。"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:3
msgid "Kubernetes events"
msgstr "Kubernetesイベント"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `kubernetes-events` monitor type to listen for Kubernetes events. The integration calls the Kubernetes API running on manager nodes, and sends Kubernetes events into Splunk Observability Cloud as Infrastructure Monitoring events through the OpenTelemetry pipeline."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` を`kubernetes-events` モニタータイプで使用し、Kubernetes イベントをリッスンする。この統合は、マネージャーノード上で実行されている Kubernetes API を呼び出し、Kubernetes イベントを OpenTelemetry パイプラインを通じてインフラストラクチャ監視イベントとして Splunk Observability Cloud に送信します。"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:9
msgid "After it starts, the Kubernetes events monitor type sends all of the events that Kubernetes has that are still persisted, and any new events as they come in. The various agents decide which instance will lead and sends event. If ``alwaysClusterReporter`` is set to ``true``, every node emits the same data, and there is no additional querying of the manager node."
msgstr "開始後、Kubernetesイベント・モニター・タイプは、Kubernetesがまだ永続化されているすべてのイベントと、新しいイベントを送信する。様々なエージェントが、どのインスタンスがイベントをリードし、送信するかを決定する。``alwaysClusterReporter`` が``true`` に設定されている場合、すべてのノードは同じデータを発信し、マネージャー・ノードへの追加クエリーは発生しない。"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:11 ../../gdi/monitors-orchestration/kubernetes-proxy.md:11 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:9
msgid "This monitor type is available on Kubernetes, Linux, and Windows."
msgstr "このモニター・タイプは、Kubernetes、Linux、Windowsで利用できる。"

#: ../../_includes/benefits-events.md:2
msgid "Configure the integration to access these features:"
msgstr "これらの機能にアクセスできるように統合を設定する："

#: ../../_includes/benefits-events.md:4
msgid "View events. You can create your own custom dashboards, and most monitors provide built-in dashboards as well. For information about dashboards, see [View dashboards in Observability Cloud](https://docs.splunk.com/Observability/data-visualization/dashboards/view-dashboards.html#nav-View-dashboards)."
msgstr "イベントを見る独自のカスタム・ダッシュボードを作成することもできるし、ほとんどのモニターはビルトイン・ダッシュボードも提供している。ダッシュボードについては、[Observability Cloud](https://docs.splunk.com/Observability/data-visualization/dashboards/view-dashboards.html#nav-View-dashboards) の View dashboards を参照してください。"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:22
msgid "Deploy with Helm"
msgstr "Helmでデプロイする"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:24
msgid "To activate this monitor with the Helm chart, include this argument with the helm install command:"
msgstr "Helmチャートでこのモニターを有効にするには、helm installコマンドにこの引数を含める："

#: ../../gdi/monitors-orchestration/kubernetes-events.md:30
msgid "Deploy without Helm"
msgstr "Helmなしでデプロイする"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:32
msgid "To deploy without Helm, include the following in the OTel configuration:"
msgstr "Helmなしでデプロイするには、OTelのコンフィギュレーションに以下を含める："

#: ../../gdi/monitors-orchestration/kubernetes-events.md:86
msgid "Lastly, configure which events to send. You can see the types of events happening in your cluster with the following command:"
msgstr "最後に、どのイベントを送信するかを設定する。以下のコマンドで、クラスタで発生しているイベントの種類を確認できる："

#: ../../gdi/monitors-orchestration/kubernetes-events.md:92
msgid "To send all events, set the option ``_sendAllEvents`` to ``true`` in your values.yaml, and remove the ``whitelistedEvents`` option."
msgstr "すべてのイベントを送信するには、values.yamlで``_sendAllEvents`` オプションを``true`` に設定し、``whitelistedEvents`` オプションを削除する。"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:94
msgid "From the output, combine **Reason** (Started, Created, Scheduled) and **Kind** (Pod, ReplicaSet, Deployment…) to select which events to send."
msgstr "出力から、**Reason**（Started、Created、Scheduled）と**Kind**（Pod、ReplicaSet、Deployment...）を組み合わせて、送信するイベントを選択します。"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:95
msgid "Specify a single **reason** and **involveObjectKind** individually for each event rule you want to allow."
msgstr "許可したい各イベントルールに対して、単一の**reason**と**involveObjectKind**を個別に指定します。"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:96
msgid "Events are placed in the `whitelistedEvents` configuration option as a list of events you want to send."
msgstr "イベントは、`whitelistedEvents` 設定オプションに、送信したいイベントのリストとして配置されます。"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:97
msgid "Event names will match the reason name."
msgstr "イベント名は理由と一致する。"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:63
msgid "Configuration of the Kubernetes API client."
msgstr "Kubernetes APIクライアントの設定。"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:63
msgid "`whitelistedEvents`"
msgstr "`whitelistedEvents`"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:63
msgid "A list of event types to send events for.  Only events matching these items will be sent."
msgstr "イベントを送信するイベントタイプのリスト。 これらの項目に一致するイベントのみが送信されます。"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:63
msgid "Whether to always send events from this agent instance or to do leader election to only send from one agent instance. **Default** is `false`."
msgstr "このエージェントインスタンスから常にイベントを送信するか、1つのエージェントインスタンスからのみ送信するようにリーダーエレクションを行うかどうか。**デフォルトは`false` 。"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:107
msgid "The **nested** `kubernetesAPI` config object has the following fields:"
msgstr "nested**`kubernetesAPI` configオブジェクトには以下のフィールドがある："

#: ../../gdi/monitors-orchestration/kubernetes-events.md:63
msgid "Whether to skip verifying the TLS certificate from the API server.  Almost never needed. **Default** is `false`"
msgstr "APIサーバーからのTLS証明書の検証をスキップするかどうか。 ほとんど必要ありません。**デフォルト**は`。`"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:63
msgid "The path to the TLS client certificate on the pod's filesystem, if using `tls` authentication."
msgstr "`tls` 認証を使用する場合は、ポッドのファイルシステム上の TLS クライアント証明書へのパス。"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:63
msgid "Path to a CA certificate to use when verifying the API server TLS certificate.  Generally this is provided by K8s alongside the service account token, which will be picked up automatically, so this should rarely be necessary to specify."
msgstr "APIサーバーのTLS証明書を検証する際に使用するCA証明書へのパス。 通常、これはK8sによってサービスアカウントトークンと一緒に提供され、自動的にピックアップされるので、指定する必要はほとんどないはずです。"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:117
msgid "The **nested** `whitelistedEvents` configuration object has the following fields:"
msgstr "`whitelistedEvents` コンフィギュレーション・オブジェクトは以下のフィールドを持つ："

#: ../../gdi/monitors-orchestration/kubernetes-events.md:63
msgid "`reason`"
msgstr "`reason`"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:63
msgid "`involvedObjectKind`"
msgstr "`involvedObjectKind`"

#: ../../gdi/monitors-orchestration/kubernetes-events.md:124
msgid "Example YAML configuration:"
msgstr "YAML設定の例："

#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:3
msgid "Kubernetes network stats (deprecated)"
msgstr "Kubernetesネットワーク統計（非推奨）"

#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:8
msgid "This monitor is deprecated in favor of the native OTel `kubeletstats` receiver. See {ref}`Kubelet Stats Receiver <kubelet-stats-receiver>` for more information."
msgstr "このモニターは、ネイティブの OTel`kubeletstats` レシーバーを優先するため、非推奨となっています。詳しくは{ref}`Kubelet Stats Receiver<kubelet-stats-receiver>` を参照のこと。"

#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7
msgid "`kubeletAPI`"
msgstr "`kubeletAPI`"

#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7
msgid "`object` (see the following table)"
msgstr "`オブジェクト` （以下の表を参照）"

#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7
msgid "Kubelet client configuration"
msgstr "Kubelet クライアントの構成"

#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:21
msgid "The **nested** `kubeletAPI` configuration object has the following fields:"
msgstr "nested**`kubeletAPI` 構成オブジェクトには、以下のフィールドがあります："

#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7
msgid "URL of the Kubelet instance.  This will default to `http://<current node hostname>:10255` if not provided."
msgstr "KubeletインスタンスのURL。 指定がない場合、デフォルトは`http://<current node hostname>:10255` 。"

#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7
msgid "Can be `none` for no auth, `tls` for TLS client cert auth, or `serviceAccount` to use the pod's default service account token to authenticate. The default value is `none`."
msgstr "`none` で認証なし、`tls` で TLS クライアント証明書認証、`serviceAccount` でポッドのデフォルトのサービスアカウントトークンを使って認証する。デフォルト値は`none` 。"

#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7
msgid "Whether to skip verification of the Kubelet TLS cert. The default value is `true`."
msgstr "Kubelet TLS証明書の検証をスキップするかどうか。デフォルト値は`true` 。"

#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7
msgid "Path to the CA cert that has signed the Kubelet TLS cert, unnecessary if `skipVerify` is set to `false`."
msgstr "Kubelet TLS 証明書に署名した CA 証明書へのパス。`skipVerify` が`false` に設定されている場合は不要。"

#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7
msgid "Path to the client TLS cert to use if `authType` is set to `tls`"
msgstr "`authType` が`tls に設定されている場合に使用するクライアント TLS 証明書へのパス。`"

#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7
msgid "Path to the client TLS key to use if `authType` is set to `tls`"
msgstr "`authType` が`tls に設定されている場合に使用するクライアント TLS キーへのパス。`"

#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7
msgid "`logResponses`"
msgstr "`logResponses`"

#: ../../gdi/monitors-orchestration/kubernetes-network-stats.md:7
msgid "Whether to log the raw cadvisor response at the debug level for debugging purposes. The default value is `false`."
msgstr "デバッグ目的で、生のcadvisor応答をデバッグレベルでログに記録するかどうか。デフォルト値は`false` 。"

#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:3 ../../gdi/opentelemetry/collector-architecture.rst:104
msgid "Kubernetes proxy"
msgstr "Kubernetesプロキシ"

#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `kubernetes-proxy` monitor type to export Prometheus metrics from the [kube-proxy](https://kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy) metrics in Prometheus format."
msgstr "`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent レシーバー<smartagent-receiver>` と`kubernetes-proxy` モニタータイプを使用して、[kube-proxy](https://kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy) メトリクスから Prometheus メトリクスを Prometheus 形式でエクスポートします。"

#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:9
msgid "The integration queries path `/metrics` by default when no path is configured, and converts the Prometheus metric types to Splunk Observability Cloud metric types as described [here](../monitors-monitoring/prometheus-exporter.md)."
msgstr "パスが設定されていない場合、統合はデフォルトでパス`/metrics` をクエリし、[](../monitors-monitoring/prometheus-exporter.md) で説明されているように Prometheus のメトリックタイプを Splunk Observability Cloud のメトリックタイプに変換します。"

#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:63
msgid "To use the observer, you must create a receiver creator instance with an associated rule. For example:"
msgstr "オブザーバーを使用するには、関連するルールを持つReceiver Creatorインスタンスを作成する必要があります。例えば、こうだ："

#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:24
msgid "HTTP timeout duration for both read and writes. This can be a duration string that is accepted by https://golang.org/pkg/time/#ParseDuration **Default is** `10s`."
msgstr "読み込みと書き込みの両方のHTTPタイムアウト時間。https://golang.org/pkg/time/#ParseDuration **デフォルトは**`10s` 。"

#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "If true, the agent will connect to the server using HTTPS instead of plain HTTP. **Default** is `false`."
msgstr "true の場合、エージェントはプレーン HTTP ではなく HTTPS を使用してサーバに接続します。**Default** は`false` です。"

#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:24
msgid "If useHTTPS is true and this option is also true, the exporter TLS certificate will not be verified. **Default** is `false`."
msgstr "useHTTPSがtrueで、このオプションもtrueの場合、エクスポー タのTLS証明書は検証されない。**デフォルト**は`false` 。"

#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "If useHTTPS is true and skipVerify is true, the sniServerName is used to verify the hostname on the returned certificates. It is also included in the client's handshake to support virtual hosting unless it is an IP address."
msgstr "useHTTPS が true、かつ skipVerify が true の場合、sniServerName は、返される証明書のホスト名を検証するために使用される。また、IPアドレスでない限り、バーチャルホスティングをサポートするためにクライアントのハンドシェイクに含まれる。"

#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "Use pod service account to authenticate. **Default** is `false`."
msgstr "認証にはポッドサービスアカウントを使用します。**デフォルト**は`false`."

#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:24
msgid "Path to the metrics endpoint on the exporter server. **Default** is `/metrics`."
msgstr "エクスポータ・サーバのメトリクス・エンドポイントへのパス。**デフォルト** は`/metrics` です。"

#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:24 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "Send all the metrics that come out of the Prometheus exporter without any filtering.  This option has no effect when using the prometheus exporter monitor directly since there is no built-in filtering, only when embedding it in other monitors. **Default** is `false`."
msgstr "Prometheus エクスポーターから出力されるすべてのメトリクスをフィルタリングなしで送信します。 このオプションは、プロメテウス・エクスポーター・モニターを直接使用する場合には、ビルトイン・フィルタリングがないため効果がありません。**デフォルト**は`false` です。"

#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:171 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:78
msgid "To emit metrics that are not _default_, you can add those metrics in the generic monitor-level `extraMetrics` config option.  Metrics that are derived from specific configuration options that do not appear in the above list of metrics do not need to be added to `extraMetrics`."
msgstr "default_ではないメトリクスを出力するには、一般的なモニター・レベル`extraMetrics` configオプションでそれらのメトリクスを追加できます。 上記のメトリクスのリストにない特定の構成オプションに由来するメトリクスは、`extraMetrics` に追加する必要はありません。"

#: ../../gdi/monitors-orchestration/kubernetes-proxy.md:173 ../../gdi/monitors-orchestration/kubernetes-scheduler.md:80
msgid "To see a list of metrics that will be emitted you can run `agent-status monitors` after configuring this monitor in a running agent instance."
msgstr "実行中のエージェントインスタンスでこのモニターを構成した後、`agent-status monitors` を実行すると、発行されるメトリクスのリストを見ることができます。"

#: ../../gdi/monitors-orchestration/kubernetes-scheduler.md:3 ../../gdi/opentelemetry/collector-architecture.rst:105
msgid "Kubernetes scheduler"
msgstr "Kubernetesスケジューラ"

#: ../../gdi/monitors-orchestration/kubernetes-scheduler.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `kubernetes-proxy` monitor type to export Prometheus metrics from the [kube-scheduler](https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler)."
msgstr "`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{ref}`Smart Agent レシーバー<smartagent-receiver>` と`kubernetes-proxy` モニタータイプを使用して、[kube-scheduler](https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler) から Prometheus メトリクスをエクスポートします。"

#: ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "HTTP timeout duration for both read and writes. This should be a duration string that is accepted by https://golang.org/pkg/time/#ParseDuration **Default** is `10s`."
msgstr "読み込みと書き込みの両方のHTTPタイムアウト時間。https://golang.org/pkg/time/#ParseDuration **デフォルト** は`10s` 。"

#: ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "Basic authentication username to use on each request, if any."
msgstr "もしあれば、各リクエストで使用する基本認証ユーザー名。"

#: ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "Basic authentication password to use on each request, if any."
msgstr "各リクエストで使用する基本認証パスワードがある場合。"

#: ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "If useHTTPS is true and this option is also true, the exporter TLS cert will not be verified. **Default** is `false`"
msgstr "useHTTPSがtrueで、このオプションもtrueの場合、エクスポーターのTLS証明書は検証されない。**デフォルト**は`falseである。`"

#: ../../gdi/monitors-orchestration/kubernetes-scheduler.md:23
msgid "Path to the metrics endpoint on the exporter server, usually `/metrics`. **Default** is `/metrics`."
msgstr "通常は`/metrics` です。**デフォルト**は`/metrics` です。"

#: ../../gdi/monitors-orchestration/mesos-marathon.md:2
msgid "Mesos Marathon"
msgstr "メゾス・マラソン"

#: ../../gdi/monitors-orchestration/mesos-marathon.md:6
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the Mesos Marathon monitor type to monitor a Mesos Marathon instance using the [Marathon Python plugin](https://github.com/signalfx/signalfx-agent/blob/main/docs/monitors/collectd-marathon.md)."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、[Marathon Python プラグイン](https://github.com/signalfx/signalfx-agent/blob/main/docs/monitors/collectd-marathon.md) を使用して Mesos Marathon インスタンスを監視するために、Mesos Marathon モニタータイプで {ref}`Smart Agent レシーバー<smartagent-receiver>` を使用します。"

#: ../../gdi/monitors-orchestration/mesos-marathon.md:47
msgid "The following table shows the configuration options for the Mesos Marathon monitor:"
msgstr "次の表に、Mesos Marathon モニターの設定オプションを示します："

#: ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "Username used to authenticate with Marathon."
msgstr "Marathonでの認証に使用するユーザー名。"

#: ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "Password used to authenticate with Marathon."
msgstr "Marathonでの認証に使用するパスワード。"

#: ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "`scheme`"
msgstr "`scheme`"

#: ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "Set to either `http` or `https`. (**default:** `http`)"
msgstr "`http` または`https` のいずれかに設定する。 (**デフォルト:**`http`)"

#: ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "`dcosAuthURL`"
msgstr "`dcosAuthURL`"

#: ../../gdi/monitors-orchestration/mesos-marathon.md:22
msgid "The dcos authentication URL that the plugin uses to get authentication tokens from. Set scheme to \"https\" if operating DC/OS in strict mode and dcosAuthURL to \"https://leader.mesos/acs/api/v1/auth/login\" (which is the default DNS entry provided by DC/OS)"
msgstr "プラグインが認証トークンを取得するために使用する dcos 認証 URL。DC/OSをストリクトモードで運用する場合はschemeを \"https \"に設定し、dcosAuthURLを \"https://leader.mesos/acs/api/v1/auth/login\"（DC/OSが提供するデフォルトのDNSエントリ）に設定する。"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:3
msgid "OpenShift cluster"
msgstr "OpenShiftクラスタ"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:7
msgid "The {ref}`Splunk Distribution of OpenTelemetry Collector <otel-intro>` uses the {ref}`Smart Agent receiver <smartagent-receiver>` with the `openshift-cluster` monitor type to collect cluster-level metrics from the Kubernetes API server, which includes all metrics from the [kubernetes-cluster monitor](https://docs.splunk.com/Observability/gdi/kubernetes-cluster/kubernetes-cluster.html#nav-Kubernetes-cluster) with additional OpenShift-specific metrics. You only need to use the `openshift-cluster` monitor for OpenShift deployments, as it incorporates the `kubernetes-cluster` monitor automatically."
msgstr "参照}`Splunk Distribution of OpenTelemetry Collector<otel-intro>` は、{参照}`Smart Agent レシーバー<smartagent-receiver>` と`openshift-cluster` モニタータイプを使用して、Kubernetes API サーバーからクラスターレベルのメトリックを収集します。これには、[kubernetes-cluster モニター](https://docs.splunk.com/Observability/gdi/kubernetes-cluster/kubernetes-cluster.html#nav-Kubernetes-cluster) からのすべてのメトリックと、追加の OpenShift 固有のメトリックが含まれます。`kubernetes-cluster` モニタが自動的に組み込まれるため、OpenShift デプロイメントには`openshift-cluster` モニタのみを使用すればよい。"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:11
msgid "Behaviour"
msgstr "行動"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:13
msgid "Since the agent is generally running in multiple places in a Kubernetes cluster, and since it is generally more convenient to share the same configuration across all agent instances, this monitor by default makes use of a leader election process to ensure that it is the only agent sending metrics in a cluster."
msgstr "エージェントは一般的にKubernetesクラスタ内の複数の場所で実行されており、一般的にすべてのエージェントインスタンスで同じ設定を共有する方が便利であるため、このモニタはデフォルトで、クラスタ内でメトリクスを送信する唯一のエージェントであることを保証するためにリーダー選出プロセスを使用します。"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:15
msgid "All of the agents running in the same namespace that have this monitor configured decide amongst themselves which agent should send metrics for this monitor. This agent becomes the leader agent. The remaining agents stand by, ready to activate if the leader agent dies. You can override leader agent election by setting the `alwaysClusterReporter` option to `true`, which makes the monitor always report metrics."
msgstr "このモニタが構成されている同じネームスペースで動作しているすべてのエージェントは、このモニタのメトリックを送信するエージェントを互いに決定する。このエージェントがリーダーエージェントとなる。残りのエージェントは、リーダーのエージェントが死亡した場合に発動できるように待機している。`alwaysClusterReporter` オプションを`true` に設定することで、リーダー・エージェントの選出をオーバーライドできます。"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:27
msgid "By default the Collector is installed in the namespace you're logged into. To deploy the Collector into a different namespace, use the `--namespace` flag to indicate where to place the Collector in."
msgstr "デフォルトでは、Collector はログインしているネームスペースにインストールされます。Collectorを別のネームスペースにデプロイするには、`--namespace` フラグを使用して、Collectorを配置する場所を指定します。"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:29
msgid "{ref}`Install on Kubernetes <otel-install-k8s>`. When installing Kubernetes using the Helm chart, use the `--set distribution='openshift'` option to generate specific OpenShift metrics, in addition to the standard Kubernetes metrics."
msgstr "{参考}`Kubernetesへのインストール<otel-install-k8s>`.Helmチャートを使用してKubernetesをインストールする場合、`--set distribution='openshift'` オプションを使用して、標準のKubernetesメトリクスに加えて、特定のOpenShiftメトリクスを生成します。"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:36
msgid "Find more information in our [GitHub repos](https://github.com/signalfx/splunk-otel-collector-chart)."
msgstr "詳細は[GitHub repos](https://github.com/signalfx/splunk-otel-collector-chart) をご覧ください。"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "If `true`, leader election is skipped and metrics are always reported. The default value is `false`."
msgstr "`true` の場合、リーダー選出はスキップされ、メトリクスは常にレポートされる。デフォルト値は`false` 。"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "If specified, only resources within the given namespace are monitored. If omitted (blank), all supported resources across all namespaces are monitored."
msgstr "指定された場合、指定された名前空間内のリソースのみが監視される。省略（空白）すると、すべてのネームスペースでサポートされているすべてのリソースが監視されます。"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "`object`"
msgstr "`object`"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "Config for the K8s API client"
msgstr "K8s APIクライアントの設定"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "A list of node status condition types to report as metrics. The metrics are reported as data points of the form `kubernetes.node_<type_snake_cased>` with a value of `0` corresponding to \"False\", `1` to \"True\", and `-1` to \"Unknown\". The default value is `[Ready].)"
msgstr "メトリクスとして報告するノード・ステータス条件タイプのリスト。メトリクスは、`kubernetes.node_<type_snake_cased>` という形式のデータポイントとして報告され、`0` は「False」、`1` は「True」、`-1` は「Unknown」に対応する。デフォルト値は`[Ready])。"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "How to authenticate to the K8s API server. This can be one of `none` (for no auth), `tls` (to use manually specified TLS client certs, not recommended), `serviceAccount` (to use the standard service account token provided to the agent pod), or `kubeConfig` to use credentials from `~/.kube/config`. The default value is `serviceAccount`."
msgstr "K8s APIサーバーの認証方法。これは、`none` (認証なしの場合)、`tls` (手動で指定したTLSクライアント証明書を使用する場合。推奨されません)、`serviceAccount` (エージェントポッドに提供される標準サービスアカウントトークンを使用する場合)、または`kubeConfig` ` ~/.kube/config` からの資格情報を使用する場合のいずれかになります。デフォルト値は`serviceAccount` 。"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "Whether to skip verifying the TLS cert from the API server. Almost never needed. The default value is `false`."
msgstr "APIサーバーからのTLS証明書の検証をスキップするかどうか。ほとんど必要ない。デフォルト値は`false` 。"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "The path to the TLS client cert on the pod's filesystem, if using `tls` auth."
msgstr "`tls` authを使う場合は、ポッドのファイルシステム上のTLSクライアント証明書へのパス。"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "The path to the TLS client key on the pod's filesystem, if using `tls` auth."
msgstr "`tls` authを使う場合は、ポッドのファイルシステム上のTLSクライアント鍵へのパス。"

#: ../../gdi/monitors-orchestration/openshift-cluster.md:49
msgid "Path to a CA certificate to use when verifying the API server's TLS cert.  Generally, this is provided by Kubernetes alongside the service account token, which is picked up automatically, so this should rarely be necessary to specify."
msgstr "APIサーバーのTLS証明書を検証する際に使用するCA証明書へのパス。 一般的に、これはKubernetesによってサービス・アカウント・トークンと一緒に提供され、自動的にピックアップされるので、指定する必要はほとんどないはずだ。"

#: ../../gdi/network.rst:-1
msgid "Landing for application receivers for network applications in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud のネットワークアプリケーション用アプリケーションレシーバーの着陸。"

#: ../../gdi/network.rst:5
msgid "Configure application receivers for networks"
msgstr "ネットワーク用アプリケーション・レシーバーの設定"

#: ../../gdi/network.rst:24
msgid "These application receivers gather metrics from their associated network-related applications and the hosts the applications are running on."
msgstr "これらのアプリケーション・レシーバーは、関連するネットワーク関連アプリケーションと、そのアプリケーションが実行されているホストからメトリクスを収集します。"

#: ../../gdi/network.rst:26
msgid ":ref:`appmesh`"
msgstr ":ref:`appmesh`"

#: ../../gdi/network.rst:27
msgid ":ref:`dns`"
msgstr ":ref:`dns`"

#: ../../gdi/network.rst:28
msgid ":ref:`logstash-tcp`"
msgstr ":ref:`logstash-tcp`"

#: ../../gdi/network.rst:29
msgid ":ref:`net-io`"
msgstr ":ref:`net-io`"

#: ../../gdi/network.rst:30
msgid ":ref:`protocols`"
msgstr ":ref:`protocols`"

#: ../../gdi/network.rst:31
msgid ":ref:`ntp`"
msgstr ":ref:`ntp`"

#: ../../gdi/network.rst:32
msgid ":ref:`snmp`"
msgstr ":ref:`snmp`"

#: ../../gdi/network.rst:33
msgid ":ref:`statsd`"
msgstr ":ref:`statsd`"

#: ../../gdi/network.rst:34
msgid ":ref:`traefik`"
msgstr ":ref:`traefik`"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:-1 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:-1 ../../gdi/opentelemetry/zero-config.rst:-1
msgid "Use automatic instrumentation to send traces to Splunk Observability Cloud Application Performance Monitoring (APM) without altering your code."
msgstr "自動計測を使用して、コードを変更することなく、Splunk Observability Cloud Application Performance Monitoring (APM) にトレースを送信します。"

#: ../../_includes/gdi/zero-config-preview-header.rst:1
msgid "Preview: Splunk Zero Config Auto Instrumentation"
msgstr "プレビューSplunk Zero Config 自動計測"

#: ../../_includes/gdi/zero-config-preview-header.rst:3 ../../gdi/opentelemetry/discovery-mode.rst:3
msgid "Preview features described in this document are provided by Splunk to you \"as is\" without any warranties, maintenance and support, or service-level commitments. Splunk makes this preview feature available in its sole discretion and may discontinue it at any time. Use of preview features is subject to the :new-page:`Splunk General Terms <https://www.splunk.com/en_us/legal/splunk-general-terms.html>`."
msgstr "本ドキュメントに記載されているプレビュー機能は、保証、メンテナンス、サポート、サービスレベルのコミットメントを伴わずに、Splunk からお客様に「現状のまま」提供されます。Splunk はこのプレビュー機能を独自の判断で利用可能にし、いつでも中止することができます。プレビュー機能の使用には、:new-page:`Splunk 一般規約<https://www.splunk.com/en_us/legal/splunk-general-terms.html>` が適用されます。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:7
msgid "Splunk OpenTelemetry Zero Configuration Auto Instrumentation for .NET"
msgstr ".NET 用 Splunk OpenTelemetry ゼロコンフィギュレーション自動インストルメンテーション"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:12
msgid "Splunk OpenTelemetry Zero Configuration Auto Instrumentation for .NET provides a package that automatically instruments your local ASP.NET applications to capture and report distributed traces to the Splunk Distribution of OpenTelemetry Collector, and then on to Splunk APM."
msgstr "Splunk OpenTelemetry Zero Configuration Auto Instrumentation for .NET は、ローカルの ASP.NET アプリケーションを自動的に計測し、分散トレースをキャプチャして OpenTelemetry Collector の Splunk Distribution にレポートし、さらに Splunk APM にレポートするパッケージを提供します。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:14
msgid "The Zero Configuration package provides the following benefits:"
msgstr "ゼロ・コンフィギュレーション・パッケージには、次のようなメリットがある："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:16 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:24 ../../gdi/opentelemetry/zero-config.rst:23
msgid "You can start streaming traces and monitor distributed applications with Splunk APM in minutes."
msgstr "Splunk APM を使用すれば、数分でトレースのストリーミングを開始し、分散アプリケーションを監視できます。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:17
msgid "You don't need to configure or instrument your .NET back-end services or applications before deployment."
msgstr "デプロイ前に.NETバックエンドサービスやアプリケーションを設定したり、インスツルメンテーションしたりする必要はありません。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:22 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:25
msgid "Install the package"
msgstr "パッケージをインストールする"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:24
msgid "By default, the installer script only installs the Collector. If you add the ``with_dotnet_instrumentation`` parameter, the script also downloads and installs the SignalFx Instrumentation for .NET."
msgstr "デフォルトでは、インストーラスクリプトはコレクタのみをインストールします。``with_dotnet_instrumentation`` パラメータを追加すると、スクリプトはSignalFx Instrumentation for .NETもダウンロードしてインストールします。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:26
msgid "Run the PowerShell script with the ``with_dotnet_instrumentation`` parameter, as shown in the following example:"
msgstr "次の例に示すように、``with_dotnet_instrumentation`` パラメータを指定して PowerShell スクリプトを実行します："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:36
msgid "Do the following to customize the command:"
msgstr "コマンドをカスタマイズするには次のようにする："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:38
msgid "Replace ``<environment_name>`` with the label for the target environment."
msgstr "``<environment_name>`` をターゲット環境のラベルに置き換える。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:39
msgid "Replace ``<access_token>`` with a valid Splunk Observability Cloud access token. To obtain an access token, see :ref:`admin-api-access-tokens`."
msgstr "``<access_token>`` を有効な Splunk Observability Cloud アクセストークンに置き換える。アクセストークンを取得するには、:ref:`admin-api-access-tokens` を参照してください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:40
msgid "Replace ``<realm>`` is the Splunk Observability Cloud realm, for example, ``us0``. To find the realm name of your account, open the navigation menu in Splunk Observability Cloud, select :menuselection:`Settings`, and then select your username. The realm name appears in the :guilabel:`Organizations` section."
msgstr "``<realm>`` を Splunk Observability Cloud レルム、例えば``us0`` に置き換える。アカウントのレルム名を確認するには、Splunk Observability Cloud のナビゲーションメニューを開き、:menuselection:`Settings` を選択し、ユーザー名を選択します。レルム名は:guilabel:`Organizations` セクションに表示される。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:47
msgid "To configure the instrumentation, see :ref:`advanced-dotnet-configuration`."
msgstr "インストゥルメンテーションを設定するには、:ref:`advanced-dotnet-configuration` を参照。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:52 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:235
msgid "Upgrade the package"
msgstr "パッケージのアップグレード"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-dotnet.rst:54
msgid "You can upgrade the package by installing a new version of the SignalFx Instrumentation for .NET. See :ref:`instrument-dotnet-applications`."
msgstr "SignalFx Instrumentation for .NETの新しいバージョンをインストールすることで、パッケージをアップグレードできます。:ref:`instrument-dotnet-applications` を参照。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:12 ../../gdi/opentelemetry/deployment-modes.rst:87 ../../gdi/opentelemetry/install-the-collector.rst:10
msgid "Kubernetes"
msgstr "Kubernetes"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:12 ../../gdi/opentelemetry/zero-config.rst:12
msgid "Kubernetes Operator"
msgstr "Kubernetes オペレーター"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:7
msgid "Splunk OpenTelemetry Zero Configuration Auto Instrumentation for Java"
msgstr "Java 用 Splunk OpenTelemetry ゼロコンフィギュレーション自動インストルメンテーション"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:19
msgid "Splunk OpenTelemetry (OTel) Zero Configuration Auto Instrumentation for Java automatically instruments supported Java libraries in running applications to capture distributed traces. The Splunk OpenTelemetry Collector receives the distributed traces and forwards them to Splunk Application Performance Monitoring (APM) in Splunk Observability Cloud."
msgstr "Splunk OpenTelemetry (OTel) Zero Configuration Auto Instrumentation for Java は、実行中のアプリケーションでサポートされている Java ライブラリを自動的に計測し、分散トレースをキャプチャします。Splunk OpenTelemetry Collector は分散トレースを受信し、Splunk Observability Cloud の Splunk Application Performance Monitoring (APM) に転送します。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:21
msgid "This feature provides the following benefits:"
msgstr "この機能には以下のような利点がある："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:23
msgid "You don't need to configure or manually instrument your applications before deployment if your Java applications use any of the supported libraries."
msgstr "サポートされているライブラリのいずれかを使用するJavaアプリケーションであれば、デプロイ前にアプリケーションを設定したり、手動でインスツルメンテーションを行ったりする必要はありません。"

#: ../../_includes/gdi/zero-conf-reqs.rst:1
msgid "Automatic instrumentation is only available for applications using supported Java libraries. See :ref:`supported-java-libraries`. If your application isn't supported, manually instrument your service to generate trace data. See :ref:`java-manual-instrumentation` ."
msgstr "自動インストルメンテーションは、サポートされているJavaライブラリを使用しているアプリケーションでのみ利用可能です。:ref:`supported-java-libraries` を参照。アプリケーションがサポートされていない場合は、手動でサービスを計測してトレースデータを生成する。:ref:`java-manual-instrumentation` を参照。"

#: ../../_includes/gdi/zero-conf-reqs.rst:3
msgid ":ref:`java-requirements`."
msgstr ":ref:`java-requirements`."

#: ../../_includes/gdi/zero-conf-reqs.rst:5
msgid "Your Splunk Observability Cloud realm and access token."
msgstr "Splunk Observability Cloud レルムとアクセストークン。"

#: ../../_includes/gdi/zero-conf-reqs.rst:7
msgid "To get an access token, see :ref:`admin-api-access-tokens`."
msgstr "アクセストークンを取得するには、:ref:`admin-api-access-tokens` を参照してください。"

#: ../../_includes/gdi/zero-conf-reqs.rst:9
msgid "To find the realm name of your account, open the navigation menu in Splunk Observability Cloud. Select :menuselection:`Settings`, and then select your username. The realm name appears in the :guilabel:`Organizations` section."
msgstr "アカウントのレルム名を見つけるには、Splunk Observability Cloud のナビゲーションメニューを開きます。:menuselection:`Settings` を選択し、ユーザー名を選択します。レルム名は:guilabel:`Organizations` セクションに表示される。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:40
msgid "Zero Config Auto Instrumentation is available on Kubernetes and Linux using the Splunk OTel Collector and OTel Java agent. When you activate Zero Config, the Splunk OTel Java agent automatically instruments all Java applications running in the target environment."
msgstr "Zero Config Auto Instrumentation は、Splunk OTel Collector と OTel Java エージェントを使用して Kubernetes と Linux で利用できます。Zero Config を有効にすると、Splunk OTel Java エージェントはターゲット環境で実行されているすべての Java アプリケーションを自動的に計測します。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:42
msgid "On **Linux**, the target environment is the entire Linux host, so the Java agent instruments every Java application on the host."
msgstr "Linux**では、ターゲット環境はLinuxホスト全体であるため、Javaエージェントはホスト上のすべてのJavaアプリケーションを計測する。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:44
msgid "On **Kubernetes**, the target environment is the deployment or pod where you activated instrumentation. The Java agent instruments every Java application within the pod or deployment."
msgstr "Kubernetes**では、ターゲット環境はインスツルメンテーションを有効にしたデプロイメントまたはポッドです。Javaエージェントは、ポッドまたはデプロイメント内のすべてのJavaアプリケーションを計測します。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:46
msgid "In both cases you must restart the applications to start instrumentation."
msgstr "どちらの場合も、計測を開始するにはアプリケーションを再起動する必要がある。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:48
msgid "You can also use the Kubernetes Operator for Auto Instrumentation. See an example in :ref:`Scenario: Deploy the OpenTelemetry Operator and Java auto-instrumentation <auto-instrumentation-java-operator>`."
msgstr "自動計測にはKubernetes Operatorを使うこともできる。:ref:`Scenario: Deploy the OpenTelemetry Operator and Java auto-instrumentation <auto-instrumentation-java-operator>` の例を参照のこと。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:56
msgid "Follow the instructions from the following list:"
msgstr "以下のリストの指示に従ってください："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:58
msgid ":ref:`Install Zero Configuration Auto Instrumentation on Linux <auto-instrumentation-java-linux>`"
msgstr ":ref:`Install Zero Configuration Auto Instrumentation on Linux <auto-instrumentation-java-linux>`"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:59
msgid ":ref:`Install Zero Configuration Auto Instrumentation on Kubernetes <auto-instrumentation-java-k8s>`"
msgstr ":ref:`Install Zero Configuration Auto Instrumentation on Kubernetes <auto-instrumentation-java-k8s>`"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:67
msgid "Instrumentation sends trace data to Splunk APM. Learn :ref:`what you can do with Splunk APM <wcidw-apm>`."
msgstr "Instrumentation はトレースデータを Splunk APM に送信する。Learn:ref:`what you can do with Splunk APM <wcidw-apm>`."

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:68
msgid "Learn more about the :ref:`features of the Splunk Distribution of OpenTelemetry Java <splunk-java-otel-dist>`."
msgstr ":ref:`features of the Splunk Distribution of OpenTelemetry Java <splunk-java-otel-dist>` 。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java.rst:69
msgid ":ref:`java-otel-performance`."
msgstr ":ref:`java-otel-performance`."

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:-1
msgid "How to activate zero configuration automatic instrumentation for Kubernetes Java applications and thus collect and send traces to Splunk Application Performance Monitoring (APM) without altering your code."
msgstr "Kubernetes Javaアプリケーションのゼロコンフィギュレーション自動計測を有効にし、コードを変更することなくSplunk Application Performance Monitoring (APM) にトレースを収集して送信する方法。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:7
msgid "Zero Configuration Auto Instrumentation for Java Applications on Kubernetes"
msgstr "Kubernetes上のJavaアプリケーションのためのゼロコンフィギュレーション自動計測"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:12
msgid "Zero Configuration Auto Instrumentation for Java activates automatic instrumentation for Kubernetes Java applications. When you activate automatic instrumentation, you only have to restart any applications that are already running."
msgstr "Zero Configuration Auto Instrumentation for Javaは、Kubernetes Javaアプリケーションの自動インスツルメンテーションを有効にします。自動インスツルメンテーションを有効にすると、すでに起動しているアプリケーションを再起動するだけでよい。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:21
msgid "Install :ref:`the Splunk OpenTelemetry Collector Kubernetes Operator<k8s-operator>` on a :new-page:`compatible version of Kubernetes <https://github.com/signalfx/splunk-otel-collector-operator#compatibility-matrix>`."
msgstr ":new-page:`互換バージョンの Kubernetes<https://github.com/signalfx/splunk-otel-collector-operator#compatibility-matrix>` に:ref:`the Splunk OpenTelemetry Collector Kubernetes Operator<k8s-operator>` をインストールする。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:26
msgid "Activate automatic instrumentation of Java applications on Kubernetes"
msgstr "Kubernetes上でJavaアプリケーションの自動計測を有効にする"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:28
msgid "Before deployment, you can activate automatic instrumentation for a Kubernetes Deployment or pod by adding the ``otel.splunk.com/inject-java`` annotation."
msgstr "デプロイ前に、``otel.splunk.com/inject-java`` アノテーションを追加することで、Kubernetes デプロイメントまたはポッドの自動計測を有効にできます。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:30
msgid "When you activate instrumentation, the Collector operator injects the Splunk OTel Java agent into Java applications to capture telemetry data."
msgstr "インスツルメンテーションを有効にすると、Collector オペレータは Splunk OTel Java エージェントを Java アプリケーションに注入し、遠隔測定データを取得します。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:32
msgid "To activate automatic instrumentation, add this annotation to the ``spec`` for a deployment or pod: ``otel.splunk.com/inject-java: \"true\"``. If you add the annotation to a pod, restarting the pod removes the annotation."
msgstr "自動計測を有効にするには、デプロイメントまたはポッドの``spec`` に次のアノテーションを追加します:``otel.splunk.com/inject-java: \"true\"``.アノテーションをポッドに追加した場合、ポッドを再起動するとアノテーションは削除されます。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:34
msgid "You can also activate automatic instrumentation on a running workload."
msgstr "実行中のワークロードの自動計測を有効にすることもできる。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:39
msgid "Activate or deactivate automatic instrumentation before runtime"
msgstr "実行前に自動計測を有効または無効にする"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:41
msgid "If the deployment is not deployed, add the ``otel.splunk.com/inject-java`` annotation to the application deployment YAML file."
msgstr "デプロイメントがデプロイされていない場合は、アプリケーションのデプロイメント YAML ファイルに``otel.splunk.com/inject-java`` アノテーションを追加します。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:43
msgid "For example, given the following deployment YAML:"
msgstr "たとえば、次のようなデプロイメントYAMLがあるとします："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:58
msgid "Activate auto instrumentation by adding ``otel.splunk.com/inject-java: \"true\"`` to the ``spec``:"
msgstr "``spec`` に``otel.splunk.com/inject-java: \"true\"`` を追加して自動計測を有効にする："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:76
msgid "The Collector operator activates automatic instrumentation for any Java applications in the deployment."
msgstr "Collector オペレータは、配置内の Java アプリケーションの自動インス トゥルメンテーションを有効にします。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:78
msgid "To deactivate automatic instrumentation, remove the annotation or set its value to ``false``."
msgstr "自動計測を無効にするには、注釈を削除するか、その値を``false`` に設定します。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:83
msgid "Activate or deactivate automatic instrumentation on a running workload"
msgstr "実行中のワークロードの自動インスツルメンテーションの有効化または無効化"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:85
msgid "If the application is already running, patch the deployment using ``kubectl patch`` to activate instrumentation."
msgstr "アプリケーションがすでに実行されている場合は、``kubectl patch`` を使用してデプロイメントにパッチを適用し、インスツルメンテーションを有効にします。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:89
msgid "Patching a deployment restarts the pods in the deployment."
msgstr "ディプロイメントにパッチを適用すると、ディプロイメント内のポッドが再起動します。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:92
msgid "Use the following snippet as an example. Replace ``<my-deployment>`` with your deployment's name."
msgstr "例として以下のスニペットを使用する。``<my-deployment>`` をデプロイメント名に置き換えてください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:98
msgid "To deactivate automatic instrumentation, run the same command but change the value of the annotation to ``false``:"
msgstr "自動計測を無効にするには、同じコマンドを実行するが、アノテーションの値を``false`` に変更する："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:108
msgid "Check the status of automatic instrumentation"
msgstr "自動計装の状態をチェックする"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:110
msgid "When you successfully activate instrumentation for a deployment, the metadata for every pod in the deployment includes the annotation ``otel.splunk.com/injection-status:success``."
msgstr "デプロイメントのインスツルメンテーションを正常に有効にすると、デプロイメント内のすべてのポッドのメタデータにアノテーション``otel.splunk.com/injection-status:success`` が含まれます。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:112
msgid "Use the following command to check for the ``injection-status`` annotation. Replace ``<POD_NAME>`` with the name of your pod."
msgstr "以下のコマンドを使用して、``injection-status`` のアノテーションをチェックする。``<POD_NAME>`` をポッドの名前に置き換えてください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:118
msgid "The command result is similar to the following:"
msgstr "コマンドの結果は以下のようになる："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:126
msgid "If the ``injection-status`` annotation is not present or is not set to ``success``, auto instrumentation is not activated. See the troubleshooting section for next steps."
msgstr "``injection-status`` 注釈がない場合、または``success`` に設定されていない場合、自動計測は作動しない。次のステップについては、トラブルシューティングのセクションを参照してください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:128
msgid "If the ``injection-status`` annotation is set to ``success``, you have activated instrumentation correctly. You can :ref:`verify-apm-data` or :ref:`optionally configure instrumentation settings<configure-java-zeroconf-k8s>`."
msgstr "``injection-status`` 注釈が``success`` に設定されていれば、インスツルメンテーションは正しく作動している。:ref:`verify-apm-data` または:ref:`optionally configure instrumentation settings<configure-java-zeroconf-k8s>` 。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:133
msgid "Optionally configure instrumentation"
msgstr "オプションで計装を設定する"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:135
msgid "The default settings for auto instrumentation are sufficient for most cases. You can add advanced configuration like activating custom sampling and including custom data in the reported spans with environment variables and Java system properties."
msgstr "ほとんどの場合、自動計測のデフォルト設定で十分です。環境変数やJavaシステム・プロパティを使って、カスタム・サンプリングの有効化や、レポートされるスパンにカスタム・データを含めるといった高度な設定を追加できる。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:137
msgid "For example, if you want every span to include the key-value pair ``build.id=feb2023_v2``, set the ``OTEL_RESOURCE_ATTRIBUTES`` environment variable."
msgstr "例えば、すべてのスパンにキーと値のペア``build.id=feb2023_v2`` を含めたい場合は、環境変数``OTEL_RESOURCE_ATTRIBUTES`` を設定する。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:143
msgid "See :ref:`advanced-java-otel-configuration` for the full list of supported environment variables."
msgstr "サポートされる環境変数の全リストは:ref:`advanced-java-otel-configuration` を参照のこと。"

#: ../../_includes/gdi/next-steps.rst:4
msgid "After activating automatic instrumentation, :ref:`verify-apm-data`."
msgstr "自動計装を作動させた後、:ref:`verify-apm-data` 。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:152
msgid "If you activate auto instrumentation and you do not see any telemetry data in Splunk Observability Cloud APM, try the following steps:"
msgstr "自動計測を有効にしても Splunk Observability Cloud APM にテレメトリデータが表示されない場合は、次の手順をお試しください："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:154
msgid "Check the Collector operator logs. Look for the pods in the ``splunk-otel-operator-system`` namespace, and then examine their logs:"
msgstr "コレクタのオペレータログを確認する。``splunk-otel-operator-system`` ネームスペースでポッドを探し、そのログを調べる："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:169
msgid "Run this command to see the logs for one of the pods:"
msgstr "このコマンドを実行すると、あるポッドのログが表示されます："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-k8s.rst:175
msgid "You can also follow the :ref:`steps to troubleshoot the Java agent<basic-java-troubleshooting>`."
msgstr "また、:ref:`steps to troubleshoot the Java agent<basic-java-troubleshooting>` 。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:-1
msgid "How to activate zero configuration automatic instrumentation for Linux Java applications and thus collect and send traces to Splunk Application Performance Monitoring (APM) without altering your code."
msgstr "Linux Java アプリケーションのゼロコンフィギュレーション自動計測を有効にして、コードを変更することなくトレースを収集し、Splunk Application Performance Monitoring (APM) に送信する方法。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:8
msgid "Zero Configuration Auto Instrumentation for Linux Java applications"
msgstr "Linux Javaアプリケーションのためのゼロ・コンフィギュレーション自動計測"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:13
msgid "Zero Configuration Auto Instrumentation for Java activates automatic instrumentation for Java applications running on Linux. After installing the package, you must start or restart any Java applications that you want to instrument."
msgstr "Zero Configuration Auto Instrumentation for Javaは、Linux上で動作するJavaアプリケーションの自動インスツルメンテーションを有効にします。パッケージのインストール後、インスツルメンテーションを行うJavaアプリケーションを起動または再起動する必要があります。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:27
msgid "You can install the ``splunk-otel-auto-instrumentation`` package in the following ways:"
msgstr "``splunk-otel-auto-instrumentation`` パッケージは以下の方法でインストールできる："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:31 ../../gdi/opentelemetry/install-linux.rst:21 ../../gdi/opentelemetry/install-windows.rst:40 ../../gdi/opentelemetry/install-windows.rst:58
msgid "Installer script"
msgstr "インストーラ・スクリプト"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:33
msgid "To install the package, run the Collector installer script with the ``--with-instrumentation`` option. The installer script will install the Collector and the Java agent from the Splunk Distribution of OpenTelemetry Java. The Java agent is then loaded automatically when a Java application starts on the local machine."
msgstr "パッケージをインストールするには、Collectorインストーラスクリプトを``--with-instrumentation`` オプション付きで実行します。インストーラスクリプトは、OpenTelemetry Java の Splunk ディストリビューションから Collector と Java エージェントをインストールします。Javaエージェントは、ローカル・マシン上でJavaアプリケーションが起動すると自動的にロードされる。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:35
msgid "Run the installer script with the ``--with-instrumentation`` option, as shown in the following example. Replace  ``<SPLUNK_REALM>`` and ``<SPLUNK_ACCESS_TOKEN>`` with your Splunk Observability Cloud realm and token, respectively."
msgstr "次の例に示すように、``--with-instrumentation`` オプションを指定してインストーラ・スクリプトを実行します。``<SPLUNK_REALM>`` と``<SPLUNK_ACCESS_TOKEN>`` は、それぞれ Splunk Observability Cloud のレルムとトークンに置き換えてください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:42 ../../gdi/opentelemetry/components/fluentd-receiver.rst:61 ../../gdi/opentelemetry/configure-the-collector.rst:74 ../../gdi/opentelemetry/install-linux.rst:51 ../../gdi/opentelemetry/install-linux.rst:99
msgid "If you don't have a Log Observer entitlement or don't wish to collect logs for the target host, use the ``--without-fluentd`` option to skip the installation of Fluentd when installing the Collector."
msgstr "Log Observer の権限を持っていないか、ターゲットホストのログを収集したくない場合は、``--without-fluentd`` オプションを使用して、Collector のインストール時に Fluentd のインストールをスキップします。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:44
msgid "To automatically define the optional ``deployment.environment`` resource attribute at installation time, run the installer script with the ``--deployment-environment <env>`` option. Replace ``<env>`` with the desired attribute value, for example, ``prod``, as shown in the following example:"
msgstr "インストール時にオプションの``deployment.environment`` リソース属性を自動的に定義するには、``--deployment-environment <env>`` オプションを指定してインストーラ・スクリプトを実行します。次の例に示すように、``<env>`` を希望する属性値、例えば``prod`` に置き換える："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:53
msgid "You can activate AlwaysOn Profiling for CPU and memory, as well as metrics, using additional options, as in the following example:"
msgstr "次の例のように、追加オプションを使用して、CPU とメモリ、およびメトリックの AlwaysOn プロファイリングを有効にできます："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:63
msgid "Next, ensure the service is running and restart your application. See :ref:`verify-install` and :ref:`start-restart-java-apps`."
msgstr "次に、サービスが実行されていることを確認し、アプリケーションを再起動する。:ref:`verify-install` および:ref:`start-restart-java-apps` を参照のこと。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:65
msgid "Linux packages (deb, rpm)"
msgstr "Linux パッケージ (deb, rpm)"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:67
msgid "You must first install the Splunk OpenTelemetry Collector using the :ref:`linux-packages`."
msgstr "まず、:ref:`linux-packages` を使用して Splunk OpenTelemetry Collector をインストールする必要があります。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:69
msgid "After installing the Collector, follow these steps to install the package using the Debian or RPM repositories with ``root`` privileges:"
msgstr "Collector をインストールした後、以下の手順に従って、Debian または RPM リポジトリを使用して``root`` 権限でパッケージをインストールしてください："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:71
msgid "You can either download the ``splunk-otel-auto-instrumentation`` package directly from the :new-page:`GitHub Releases page <https://github.com/signalfx/splunk-otel-collector/releases>` or add the Splunk repository to the package repositories on your Linux host. See :new-page:`Debian or RPM package repositories <https://docs.splunk.com/Observability/gdi/opentelemetry/install-linux.html#debian-or-rpm-packages>` for instructions on how to configure your package repository."
msgstr ":new-page:`GitHub Releases ページ<https://github.com/signalfx/splunk-otel-collector/releases>` から``splunk-otel-auto-instrumentation`` パッケージを直接ダウンロードするか、Linux ホストのパッケージリポジトリに Splunk リポジトリを追加します。パッケージリポジトリの設定方法については:new-page:`Debian または RPM パッケージリポジトリ<https://docs.splunk.com/Observability/gdi/opentelemetry/install-linux.html#debian-or-rpm-packages>` を参照してください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:73
msgid "Run the following commands to install the package. Replace ``<path to splunk-otel-auto-instrumentation deb/rpm>`` with the local path to the downloaded package."
msgstr "以下のコマンドを実行してパッケージをインストールする。``<path to splunk-otel-auto-instrumentation deb/rpm>`` をダウンロードしたパッケージのローカルパスに置き換えてください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:85
msgid "Edit the ``/etc/otel/collector/splunk-otel-collector.conf`` file to set the ``SPLUNK_ACCESS_TOKEN`` and ``SPLUNK_REALM`` variables to the values you got earlier. If the file does not exist, use the provided sample at ``/etc/otel/collector/splunk-otel-collector.conf.example`` as a starting point."
msgstr "``/etc/otel/collector/splunk-otel-collector.conf`` ファイルを編集し、``SPLUNK_ACCESS_TOKEN`` と``SPLUNK_REALM`` 変数を先ほど取得した値に設定する。ファイルが存在しない場合は、``/etc/otel/collector/splunk-otel-collector.conf.example`` で提供されているサンプルを出発点として使用してください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:92
msgid "Start the collector service:"
msgstr "コレクタサービスを開始する："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:98
msgid ":ref:`verify-install`."
msgstr ":ref:`verify-install`."

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:99
msgid ":ref:`start-restart-java-apps`."
msgstr ":ref:`start-restart-java-apps`."

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:101 ../../gdi/opentelemetry/install-linux.rst:202 ../../gdi/opentelemetry/install-windows.rst:44 ../../gdi/opentelemetry/install-windows.rst:154
msgid "Ansible"
msgstr "アンシブル"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:103
msgid "See :ref:`ansible-zero-config-java`."
msgstr ":ref:`ansible-zero-config-java` を参照。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:105 ../../gdi/opentelemetry/deployments/deployments-chef.rst:5 ../../gdi/opentelemetry/install-linux.rst:208 ../../gdi/opentelemetry/install-windows.rst:46 ../../gdi/opentelemetry/install-windows.rst:160
msgid "Chef"
msgstr "シェフ"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:107
msgid "See :ref:`chef-zero-config-java`."
msgstr ":ref:`chef-zero-config-java` を参照。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:109 ../../gdi/opentelemetry/install-linux.rst:239 ../../gdi/opentelemetry/install-windows.rst:50 ../../gdi/opentelemetry/install-windows.rst:172
msgid "Puppet"
msgstr "人形"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:111
msgid "See :ref:`puppet-zero-config-java`."
msgstr ":ref:`puppet-zero-config-java` を参照。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:113 ../../gdi/opentelemetry/deployments/deployments-salt.rst:5 ../../gdi/opentelemetry/install-linux.rst:245
msgid "Salt"
msgstr "塩"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:115
msgid "See :ref:`salt-zero-config-java`."
msgstr ":ref:`salt-zero-config-java` を参照。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:120
msgid "Ensure the service is running"
msgstr "サービスが稼動していることを確認する"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:122
msgid "After a successful installation, run the following command to ensure the ``splunk-otel-collector`` service is running:"
msgstr "インストールに成功したら、以下のコマンドを実行し、``splunk-otel-collector`` サービスが実行されていることを確認する："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:128
msgid "If the service is not running, start or restart it with the following command:"
msgstr "サービスが起動していない場合は、以下のコマンドで起動または再起動する："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:134
msgid "If the service fails to start, check that the ``SPLUNK_REALM`` and ``SPLUNK_ACCESS_TOKEN`` in ``/etc/otel/collector/splunk-otel-collector.conf`` are correct. You can also view the service logs with this command:"
msgstr "サービスが開始できない場合は、``/etc/otel/collector/splunk-otel-collector.conf`` の``SPLUNK_REALM`` と``SPLUNK_ACCESS_TOKEN`` が正しいか確認してください。このコマンドでサービスログを見ることもできる："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:143
msgid "Start your applications"
msgstr "応募を開始する"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:145
msgid "For auto instrumentation to take effect, you must manually start or restart any Java applications on the host where you installed the package. This is true after installing the auto instrumentation package for the first time and whenever you make any changes to the configuration file."
msgstr "自動インストルメンテーションを有効にするには、パッケージをインストールしたホスト上のJavaアプリケーションを手動で起動または再起動する必要があります。これは、自動計測パッケージを初めてインストールした後や、コンフィギュレーション・ファイルに変更を加えるたびに同じことが言える。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:147
msgid "After your applications are running, you can verify your data. See :ref:`verify-apm-data`. You can also configure instrumentation settings. See :ref:`configure-java-zeroconf-linux`."
msgstr "アプリケーションの実行後、データを検証することができます。:ref:`verify-apm-data` を参照。インスツルメンテーションの設定もできる。:ref:`configure-java-zeroconf-linux` を参照。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:152
msgid "(Optional) Configure the instrumentation"
msgstr "(オプション）計装の設定"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:154
msgid "The default settings for zero config autoinstrumentation are sufficient for most cases. You can set additional customizations by editing the configuration file."
msgstr "ほとんどの場合、ゼロコンフィグ自動計測のデフォルト設定で十分です。設定ファイルを編集することで、追加のカスタマイズを設定することができます。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:156
msgid "The installation package contains the following artifacts:"
msgstr "インストール・パッケージには以下のアーティファクトが含まれている："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:158
msgid "The configuration file at ``/usr/lib/splunk-instrumentation/instrumentation.conf``"
msgstr "にある設定ファイル ``/usr/lib/splunk-instrumentation/instrumentation.conf``"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:159
msgid "The :new-page:`Java Instrumentation Agent <https://github.com/signalfx/splunk-otel-java>` at ``/usr/lib/splunk-instrumentation/splunk-otel-javaagent.jar``"
msgstr ":new-page:`Java Instrumentation Agent<https://github.com/signalfx/splunk-otel-java>` 。 ``/usr/lib/splunk-instrumentation/splunk-otel-javaagent.jar``"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:160
msgid "The shared instrumentation library at ``/usr/lib/splunk-instrumentation/libsplunk.so```"
msgstr "の共有計装ライブラリ。 ``/usr/lib/splunk-instrumentation/libsplunk.so```"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:162
msgid "The following is a sample of the default configuration file:"
msgstr "以下はデフォルトのコンフィギュレーション・ファイルのサンプルである："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:168
msgid "By default, the configuration file only specifies one parameter, ``java_agent_jar``, which points to the path of the installed Java Instrumentation Agent."
msgstr "デフォルトでは、コンフィギュレーション・ファイルは、インストールされた Java Instrumentation Agentのパスを指す1つのパラメータ、``java_agent_jar`` だけを指定する。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:170
msgid "The following is a sample configuration that sets the service name and environment, activates CPU and memory profiling, and activates metric collection:"
msgstr "以下は、サービス名と環境を設定し、CPUとメモリーのプロファイリングを有効にし、メトリック収集を有効にするサンプル構成です："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:181
msgid "The :ref:`supported-parameters` section discusses additional parameters you can set in the configuration file."
msgstr ":ref:`supported-parameters` セクションでは、コンフィギュレーション・ファイルで設定できる追加パラメー ターについて説明する。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:186
msgid "Supported parameters"
msgstr "対応パラメータ"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:188
msgid "The following table shows the supported parameters for the ``/usr/lib/splunk-instrumentation/instrumentation.conf`` file."
msgstr "次の表は、``/usr/lib/splunk-instrumentation/instrumentation.conf`` ファイルでサポートされているパラメーターを示しています。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:195
msgid "Parameter"
msgstr "パラメータ"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:198
msgid "``java_agent_jar``"
msgstr "``java_agent_jar``"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:199
msgid "The full path to the JAR file provided by the installer."
msgstr "インストーラが提供するJARファイルのフルパス。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:201
msgid "``service_name``"
msgstr "``service_name``"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:202
msgid "An optional parameter that specifies a unique identifier for a particular host. If you set this parameter, all instrumented Java applications on the host have their service name set using the  ``OTEL_SERVICE_NAME`` environment variable. If this parameter isn't set, the shared object assigns a generated name."
msgstr "特定のホストの一意な識別子を指定するオプションのパラメータ。このパラメーターを設定すると、ホスト上のすべてのインスツルメンテッドJavaアプリケーションは、環境変数``OTEL_SERVICE_NAME`` を使用してサービス名を設定される。このパラメータが設定されていない場合、共有オブジェクトには生成された名前が割り当てられる。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:204
msgid "``resource_attributes``"
msgstr "``resource_attributes``"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:205
msgid "Contains a comma-separated list of name-value pairs of the form ``name=value``. Use this attribute to add extra tags to the generated trace data. |br| If you installed the package with the installer script and specified the ``--deployment-environment <your_env>`` when you ran the script, the ``deployment.environment=<your_env>`` resource attribute is automatically added to the configuration."
msgstr "コンマで区切られた、``name=value``.この属性は、生成されたトレース・データに余分なタグを追加するために使用する。|br| インストーラ・スクリプトでパッケージをインストールし、スクリプトの実行時に``--deployment-environment <your_env>`` を指定した場合、``deployment.environment=<your_env>`` リソース属性がコンフィギュレーションに自動的に追加されます。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:207
msgid "``generate_service_name``"
msgstr "``generate_service_name``"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:208
msgid "Set to ``false`` to prevent the preloader from setting the ``OTEL_SERVICE_NAME`` environment variable. In that case, the instrumentation library tries to determine the service name automatically."
msgstr "プリローダーが環境変数``OTEL_SERVICE_NAME`` を設定しないようにするには、``false`` に設定する。その場合、インスツルメンテーション・ライブラリは自動的にサービス名を決定しようとする。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:210
msgid "``enable_profiler``"
msgstr "``enable_profiler``"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:211
msgid "Set to ``true`` to activate AlwaysOn Profiling (CPU). See :ref:`profiling-intro`."
msgstr "AlwaysOn Profiling (CPU) を有効にするには、``true`` に設定します。:ref:`profiling-intro` を参照。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:213
msgid "``enable_profiler_memory``"
msgstr "``enable_profiler_memory``"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:214
msgid "Set to ``true`` to activate AlwaysOn Profiling (Memory). See :ref:`profiling-memory-metrics`."
msgstr "AlwaysOn Profiling (Memory) を有効にするには、``true`` に設定します。:ref:`profiling-memory-metrics` を参照。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:216
msgid "``enable_metrics``"
msgstr "``enable_metrics``"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:217
msgid "Set to ``true``  to activate metric collection. See :ref:`java-otel-metrics-attributes`."
msgstr "メトリック収集を有効にするには、``true`` に設定する。:ref:`java-otel-metrics-attributes` を参照。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:219
msgid "``disable_telemetry``"
msgstr "``disable_telemetry``"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:220
msgid "Set to ``true`` to prevent the preloader from sending the ``splunk.linux-autoinstr.executions`` metric to the local collector."
msgstr "プリローダが``splunk.linux-autoinstr.executions`` メトリックをローカルコレクタに送信しないようにするには、``true`` に設定する。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:223
msgid "The ``/etc/ld.so.preload`` file is automatically created or updated with the default path to the installed instrumentation library. If necessary, custom library paths can be manually added to this file."
msgstr "``/etc/ld.so.preload`` ファイルは、インストールされたインスツルメンテーション・ライブラリのデフォルトパスで自動的に作成または更新されます。必要に応じて、カスタム・ライブラリーのパスをこのファイルに手動で追加することができる。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:225
msgid "Whenever you change the configuration file, you must manually start or restart any Java applications on the host where you installed the package."
msgstr "構成ファイルを変更するたびに、パッケージをインストールしたホスト上のJavaアプリケーションを手動で起動または再起動する必要があります。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:230
msgid "More advanced configuration options like correlating traces and logs and activating custom sampling are available by :ref:`configuring the Java agent<advanced-java-otel-configuration>`."
msgstr "トレースとログの相関やカスタムサンプリングの有効化など、より高度な設定オプションは、:ref:`configuring the Java agent<advanced-java-otel-configuration>` 。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:237
msgid "You can upgrade the package in two ways:"
msgstr "パッケージのアップグレードには2つの方法があります："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:239
msgid ":ref:`upgrade-with-script`"
msgstr ":ref:`upgrade-with-script`"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:240
msgid ":ref:`upgrade-manually`"
msgstr ":ref:`upgrade-manually`"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:245
msgid "Upgrade using the package repository"
msgstr "パッケージ・リポジトリを使ったアップグレード"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:247
msgid "If you installed the package using the installer script, or if you configured the Debian or RPM package repositories manually, run the following commands according to your platform. Upgrading the package requires ``root`` privileges."
msgstr "インストーラ・スクリプトを使用してパッケージをインストールした場合、または Debian または RPM パッケージ・リポジトリーを手動で設定した場合は、プラットフォームに応じて以下のコマンドを実行してください。パッケージのアップグレードには``root`` 権限が必要です。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:250 ../../gdi/opentelemetry/otel-upgrade.rst:85
msgid "Debian"
msgstr "デビアン"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:252
msgid "Run the following commands:"
msgstr "以下のコマンドを実行する："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:259
msgid "You might see a prompt to keep or overwrite the configuration file at ``/usr/lib/splunk-instrumentation/instrumentation.conf``. If you choose to overwrite, the configuration file reverts to the default file provided by the upgraded package."
msgstr "設定ファイルを保持するか上書きするかのプロンプトが``/usr/lib/splunk-instrumentation/instrumentation.conf`` に表示されるかもしれない。上書きを選択した場合、設定ファイルはアップグレードされたパッケージが提供するデフォルトのファイルに戻ります。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:262 ../../gdi/opentelemetry/otel-upgrade.rst:100
msgid "RPM"
msgstr "RPM"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:264
msgid "For the RPM package management system, run the following commands:"
msgstr "RPMパッケージ管理システムについては、以下のコマンドを実行する："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:267 ../../gdi/opentelemetry/otel-upgrade.rst:106
msgid "yum"
msgstr "yum"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:274 ../../gdi/opentelemetry/otel-upgrade.rst:112
msgid "dnf"
msgstr "ディーンフ"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:281 ../../gdi/opentelemetry/otel-upgrade.rst:118
msgid "zypper"
msgstr "zypper"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:288
msgid "After you've upgraded the packages, manually start or restart the Java applications on the host for the changes to take effect."
msgstr "パッケージをアップグレードしたら、ホスト上のJavaアプリケーションを手動で起動または再起動して、変更を有効にします。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:293
msgid "Upgrade using Debian or RPM packages"
msgstr "DebianまたはRPMパッケージを使用したアップグレード"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:295
msgid "To manually upgrade the package:"
msgstr "パッケージを手動でアップグレードするには"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:297
msgid "Download the ``splunk-auto-auto-instrumentation`` Debian or RPM package for the target system from the :new-page:`GitHub Releases page <https://github.com/signalfx/splunk-otel-collector/releases>`."
msgstr ":new-page:`GitHub Releases ページ<https://github.com/signalfx/splunk-otel-collector/releases>` から、ターゲットシステム用の``splunk-auto-auto-instrumentation`` Debian パッケージまたは RPM パッケージをダウンロードする。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:299
msgid "Run the following commands to install the package. Replace ``<path to splunk-otel-auto-instrumentation deb/rpm>`` with the local path to the downloaded package:"
msgstr "以下のコマンドを実行してパッケージをインストールする。``<path to splunk-otel-auto-instrumentation deb/rpm>`` をダウンロードしたパッケージのローカルパスに置き換えてください："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:311
msgid "After upgrading the Debian package, you might see a prompt to keep or overwrite the configuration file at ``/usr/lib/splunk-instrumentation/instrumentation.conf``. If you choose to overwrite, the configuration file reverts to the default file provided by the upgraded package."
msgstr "Debian パッケージをアップグレードすると、``/usr/lib/splunk-instrumentation/instrumentation.conf`` にある設定ファイルを保持するか上書きするかを尋ねるプロンプトが表示されるかもしれません。上書きを選択した場合、設定ファイルはアップグレードされたパッケージが提供するデフォルトのファイルに戻ります。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:313
msgid "You can also upgrade using the same package repositories as the Collector. See :new-page:`Debian or RPM packages <https://docs.splunk.com/Observability/gdi/opentelemetry/install-linux.html#debian-or-rpm-packages>` for more information."
msgstr "コレクターと同じパッケージリポジトリを使用してアップグレードすることもできます。詳しくは:new-page:`Debian または RPM packages<https://docs.splunk.com/Observability/gdi/opentelemetry/install-linux.html#debian-or-rpm-packages>` を参照のこと。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:316
msgid "Deactivate automatic instrumentation"
msgstr "自動計器の停止"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:318
msgid "Use one of the following options to deactivate automatic instrumentation:"
msgstr "自動計測を無効にするには、以下のいずれかのオプションを使用します："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:320
msgid "Uninstall the package by running the following command:"
msgstr "以下のコマンドを実行してパッケージをアンインストールする："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:327
msgid "See :ref:`otel-linux-uninstall-otel-and-tdagent` for more information on the files deleted by the uninstall."
msgstr "アンインストールによって削除されるファイルの詳細については、:ref:`otel-linux-uninstall-otel-and-tdagent` を参照してください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:329
msgid "Set ``DISABLE_SPLUNK_AUTOINSTRUMENTATION`` to any nonempty value other than ``false``, ``FALSE``, or ``0``."
msgstr "``false`` 、``FALSE`` 、``0`` 以外の空でない値を``DISABLE_SPLUNK_AUTOINSTRUMENTATION`` に設定する。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:331
msgid "Set the ``JAVA_TOOL_OPTIONS`` environment variable to some value that you want the JVM to pick up."
msgstr "環境変数``JAVA_TOOL_OPTIONS`` に、JVMに拾わせたい値を設定する。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:333
msgid "Delete or move the instrumentation.conf configuration file."
msgstr "instrumentation.conf設定ファイルを削除または移動する。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:340
msgid "If you activate auto instrumentation and you see an error message or you do not see any data in Observabiity Cloud APM, try the following steps:"
msgstr "自動計測を有効にしてもエラーメッセージが表示されたり、Observabiity Cloud APMにデータが表示されない場合は、以下の手順をお試しください："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:342
msgid "Check the  ``splunk-otel-collector`` service logs:"
msgstr "``splunk-otel-collector`` サービスログを確認する："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-linux.rst:348
msgid "You can also follow the :ref:`steps to activate trace and troubleshoot the Java agent<basic-java-troubleshooting>`."
msgstr "また、:ref:`steps to activate trace and troubleshoot the Java agent<basic-java-troubleshooting>` 。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:-1
msgid "Learn how to deploy the upstream Kubernetes Operator and Java automatic instrumentation for Splunk Observability Cloud."
msgstr "アップストリームの Kubernetes Operator と Java 自動計測を Splunk Observability Cloud にデプロイする方法をご紹介します。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:5
msgid "Scenario: Arnau instruments Java apps using the Splunk Collector and Kubernetes Operator"
msgstr "シナリオArnau は Splunk Collector と Kubernetes Operator を使用して Java アプリを計測する。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:10
msgid "Spring Clinic Microservices, a fictitious company, wants to use the OTel Collector and the upstream Kubernetes Operator to auto-instrument their Java applications. The final architecture will look as shown in the diagram below:"
msgstr "架空の会社であるSpring Clinic Microservicesは、OTel CollectorとアップストリームのKubernetes Operatorを使ってJavaアプリケーションを自動計測したいと考えている。最終的なアーキテクチャは下図のようになる："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:-1
msgid "Java app auto instrumentation architecture diagram."
msgstr "Javaアプリの自動計測アーキテクチャ図。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:16
msgid "To do so, Arnau, their DevOps manager, proceeds to:"
msgstr "そのために、彼らのDevOpsマネージャーであるアルナウは次のように進める："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:18
msgid ":ref:`Set up the apps to instrument <auto-instrument-operator-java-set-up>`."
msgstr ":ref:`Set up the apps to instrument <auto-instrument-operator-java-set-up>`."

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:19
msgid ":ref:`Deploy and configure the Collector <auto-instrument-operator-java-install>`."
msgstr ":ref:`Deploy and configure the Collector <auto-instrument-operator-java-install>`."

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:21
msgid "Learn more about the Spring Clinic Microservices demo in GitHub at :new-page:`spring-petclinic/spring-petclinic-microservices <https://github.com/spring-petclinic/spring-petclinic-microservices>`."
msgstr "Spring Clinic MicroservicesのデモについてはGitHubの:new-page:`spring-petclinic/spring-petclinic-microservices<https://github.com/spring-petclinic/spring-petclinic-microservices>` を参照してください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:26
msgid "1. Set up the applications to instrument"
msgstr "1.計測するアプリケーションを設定する"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:28
msgid "Arnau creates the ``spring-petclinic`` namespace and deploys the related Java applications to it."
msgstr "Arnauは``spring-petclinic`` ネームスペースを作成し、関連するJavaアプリケーションをそこにデプロイする。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:37
msgid "2. Deploy and configure the Collector"
msgstr "2.コレクタのデプロイと設定"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:39
msgid "Arnau follows the steps described in :ref:`auto-instrumentation-operator` to set up Auto Intrumentation for their clinic apps."
msgstr "アルナウは、:ref:`auto-instrumentation-operator` に記載されている手順に従って、クリニックアプリに自動計測を設定している。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:41
msgid "After completing the deployment, Arnau is able to see the results using :ref:`APM <get-started-apm>`."
msgstr "デプロイ完了後、アルナウは:ref:`APM <get-started-apm>` を使って結果を見ることができる。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:-1
msgid "Java app auto instrumented."
msgstr "Javaアプリの自動計測。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:48 ../../gdi/opentelemetry/components/prometheus-receiver.rst:143 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:93
msgid "Summary"
msgstr "概要"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:50
msgid "Arnau uses the Collector and the upstream Kubernetes Operator to auto-instrument their Java applications and see the results in APM dashboards."
msgstr "Arnau氏は、CollectorとアップストリームのKubernetes Operatorを使ってJavaアプリケーションを自動計測し、その結果をAPMダッシュボードで確認している。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:53 ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:122 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:110 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:195 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:229 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:265 ../../gdi/opentelemetry/sizing.rst:111
msgid "Learn more"
msgstr "さらに詳しく"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-java-operator.rst:55
msgid "To install the Operator for Auto Instrumentation, see :ref:`Install the Collector with the Kubernetes Operator <auto-instrumentation-operator>`."
msgstr "Operator for Auto Instrumentation をインストールするには、:ref:`Install the Collector with the Kubernetes Operator <auto-instrumentation-operator>` を参照してください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:-1
msgid "Use the Collector with the upstream Kubernetes Operator for automatic instrumentation to easily add observability code to your application, enabling it to produce telemetry data."
msgstr "自動インスツルメンテーション用のアップストリームKubernetes Operatorと共にCollectorを使用することで、アプリケーションに観測可能コードを簡単に追加し、遠隔測定データを生成できるようになります。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:5
msgid "Install the Collector and the upstream Kubernetes Operator for Auto Instrumentation"
msgstr "自動計測のためのCollectorとアップストリームのKubernetes Operatorをインストールします。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:10
msgid "You can use the OTel Collector with an upstream Operator in a Kubernetes environment to implement and simplify the management of OpenTelemetry Auto Instrumentation of your applications."
msgstr "Kubernetes 環境でアップストリームの Operator と共に OTel Collector を使用することで、アプリケーションの OpenTelemetry Auto Instrumentation を実装し、管理を簡素化することができます。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:12
msgid "This instance of the Kubernetes Operator is part of the upstream OpenTelemetry Collector Contrib project. It's not related to the Splunk Operator for Kubernetes, which is used to deploy and operate Splunk Enterprise deployments in a Kubernetes infrastructure."
msgstr "このKubernetes Operatorのインスタンスは、アップストリームのOpenTelemetry Collector Contribプロジェクトの一部です。Kubernetes インフラストラクチャに Splunk Enterprise デプロイメントをデプロイして運用するために使用する Splunk Operator for Kubernetes とは関係ありません。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:17
msgid "Operator Auto Instrumentation requires the following components:"
msgstr "Operator Auto Instrumentationには、以下のコンポーネントが必要です："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:19
msgid "The :ref:`Splunk OTel Collector chart <helm-chart>`: It deploys the Collector and related resources, including the OpenTelemetry Operator."
msgstr ":ref:`Splunk OTel Collector chart <helm-chart>`: Collector と、OpenTelemetry Operator を含む関連リソースをデプロイします。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:20
msgid "The OpenTelemetry Operator, which manages auto-instrumentation of Kubernetes applications. See more in the :new-page:`OpenTelemetry GitHub repo <https://github.com/open-telemetry/opentelemetry-operator>`."
msgstr "Kubernetesアプリケーションの自動計測を管理するOpenTelemetry Operator。詳しくは:new-page:`OpenTelemetry GitHub repo<https://github.com/open-telemetry/opentelemetry-operator>` をご覧ください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:21
msgid "Instrumentation libraries generate telemetry data when your application uses instrumented components."
msgstr "インスツルメンテーション・ライブラリは、アプリケーションがインスツルメンテーショ ン・コンポーネントを使用すると、テレメトリ・データを生成します。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:22
msgid "A Kubernetes instrumentation object ``opentelemetry.io/v1alpha1``, which configures auto-instrumentation settings for applications."
msgstr "Kubernetes instrumentation object``opentelemetry.io/v1alpha1`` 、アプリケーションの自動計測設定を構成します。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:25
msgid "Install the Collector using the Kubernetes Operator"
msgstr "Kubernetes Operatorを使用してCollectorをインストールする"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:27
msgid "To use the Operator for Auto Instrumentation, follow these steps:"
msgstr "自動計装用オペレーターを使用するには、以下の手順に従います："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:29
msgid "Deploy the Helm chart with the required components, including the Operator, to your Kubernetes cluster."
msgstr "Operatorを含む必要なコンポーネントを含むHelmチャートをKubernetesクラスタにデプロイします。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:31
msgid "Verify the deployed resources are working correctly."
msgstr "配置されたリソースが正しく動作していることを確認する。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:33
msgid "Apply annotations at the pod or namespace level for the Operator to know which pods to apply auto-instrumentation to."
msgstr "自動計測を適用するポッドをオペレーターが把握できるように、ポッドまたはネームスペースレベルでアノテーションを適用します。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:35
msgid "Check out the results at Splunk Observability APM."
msgstr "結果は Splunk Observability APM でご確認ください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:38
msgid "1. Deploy the Helm Chart with the Operator enabled"
msgstr "1.オペレータを有効にしてヘルムチャートを展開する"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:40
msgid "Deploy the :ref:`Collector for Kubernetes with the Helm chart <helm-chart>` with ``operator.enabled=true`` to include the Operator in the deployment."
msgstr "``operator.enabled=true`` を使用して:ref:`Collector for Kubernetes with the Helm chart <helm-chart>` をデプロイし、Operator をデプロイに含めます。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:43
msgid "Ingest traces"
msgstr "トレースの取り込み"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:45
msgid "In order to be properly ingest trace telemetry data, the attribute ``environment`` must be on board the exported traces. There are two ways to set this attribute:"
msgstr "トレース・テレメトリ・データを適切にインジェストするためには、エクスポートされたトレースにアトリビュート``environment`` 。この属性を設定するには2つの方法がある："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:47
msgid "Use the `values.yaml` optional environment configuration."
msgstr "`values.yaml` オプションの環境設定を使用する。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:48
msgid "Use the Instrumentation spec with the environment variable ``OTEL_RESOURCE_ATTRIBUTES``."
msgstr "Instrumentation specを環境変数``OTEL_RESOURCE_ATTRIBUTES`` とともに使用する。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:51
msgid "Add certifications"
msgstr "資格の追加"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:53
msgid "The Operator requires certain TLS cerificates to work. If a certification manager (or any other TLS certificate source) is not available in the cluster, then you'll need to deploy it using ``certmanager.enabled=true``. You can use the following commands to run these steps."
msgstr "オペレーターが動作するには、特定のTLS証明書が必要です。認証マネージャー（またはその他のTLS証明書ソース）がクラスタ内で利用できない場合は、``certmanager.enabled=true`` を使ってデプロイする必要がある。以下のコマンドを使って、これらの手順を実行することができる。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:67
msgid "2. Verify all the OpenTelemetry resources are deployed successfully"
msgstr "2.すべての OpenTelemetry リソースが正常にデプロイされていることを確認する。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:69
msgid "Resources include the Collector, the Operator, webhook, an instrumentation."
msgstr "リソースには、コレクタ、オペレータ、Webhook、インスツルメンテーションが含まれます。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:71
msgid "Run the following to verify the resources are deployed correctly:"
msgstr "以下を実行し、リソースが正しく配置されていることを確認する："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:95
msgid "3. Set annotations to instrument applications"
msgstr "3.アプリケーションに注釈を設定する"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:97
msgid "You can add an ``instrumentation.opentelemetry.io/inject-{instrumentation_library}`` annotation to the following:"
msgstr "``instrumentation.opentelemetry.io/inject-{instrumentation_library}`` 注釈は以下のように追加できる："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:99
msgid "Namespace: All pods within that namespace will be instrumented."
msgstr "ネームスペース：その名前空間内のすべてのポッドがインスツルメンテーションされます。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:100
msgid "Pod Spec Objects: PodSpec objects that are available as part of Deployment, Statefulset, or other resources can be annotated."
msgstr "Pod Specオブジェクト：PodSpecオブジェクト：Deployment、Statefulset、またはその他のリソースの一部として利用可能なPodSpecオブジェクトにアノテーションを付けることができます。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:102
msgid "Instrumentation annotations can have the following values:"
msgstr "Instrumentationアノテーションは以下の値を持つことができる："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:104
msgid "``\"true\"``: Inject, and the Instrumentation resource from the namespace to use."
msgstr "``\"true\"``:Inject、および使用するネームスペースの Instrumentation リソースを指定します。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:105
msgid "``\"my-instrumentation\"``: Name of Instrumentation CR instance in the current namespace to use."
msgstr "``\"my-instrumentation\"``:使用する現在のネームスペースのInstrumentation CRインスタンスの名前。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:106
msgid "``\"my-other-namespace/my-instrumentation\"``: Name and namespace of Instrumentation CR instance in another namespace to use."
msgstr "``\"my-other-namespace/my-instrumentation\"``:使用する別の名前空間の Instrumentation CR インスタンスの名前と名前空間。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:107
msgid "``\"false\"``: Do not inject."
msgstr "``\"false\"``:注射しないこと。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:109
msgid "Sample annotations include:"
msgstr "注釈のサンプルは以下の通り："

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:111
msgid "``instrumentation.opentelemetry.io/inject-java: \"true\"``"
msgstr "``instrumentation.opentelemetry.io/inject-java: \"true\"``"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:112
msgid "``instrumentation.opentelemetry.io/inject-dotnet: \"true\"``"
msgstr "``instrumentation.opentelemetry.io/inject-dotnet: \"true\"``"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:113
msgid "``instrumentation.opentelemetry.io/inject-nodejs: \"true\"``"
msgstr "``instrumentation.opentelemetry.io/inject-nodejs: \"true\"``"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:114
msgid "``instrumentation.opentelemetry.io/inject-python: \"true\"``"
msgstr "``instrumentation.opentelemetry.io/inject-python: \"true\"``"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:117
msgid "4. Check out the results at Splunk Observability APM"
msgstr "4.結果はSplunk Observability APMでご確認ください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:119
msgid "Allow the Operator to do the work. The Operator intercepts and alters the Kubernetes API requests to create and update annotated pods, the internal pod application containers are instrumented, and trace and metrics data populates the :ref:`APM dashboard <apm-dashboards>`."
msgstr "オペレーターに仕事をさせる。OperatorはKubernetes APIリクエストをインターセプトして変更し、アノテートされたポッドを作成および更新します。内部ポッドアプリケーションコンテナはインスツルメンテーションされ、トレースおよびメトリックデータが:ref:`APM dashboard <apm-dashboards>` 。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:124
msgid "See :ref:`auto-instrumentation-java-operator`."
msgstr ":ref:`auto-instrumentation-java-operator` を参照。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:125
msgid "To learn more about how Auto Instrumentation works in Splunk Observability Cloud, see :new-page:`more detailed documentation in GH <https://github.com/signalfx/splunk-otel-collector-chart/blob/main/docs/auto-instrumentation-install.md#how-does-auto-instrumentation-work>`."
msgstr "Splunk Observability Cloud で自動計測がどのように機能するかについては、GH<https://github.com/signalfx/splunk-otel-collector-chart/blob/main/docs/auto-instrumentation-install.md#how-does-auto-instrumentation-work>` の:new-page:`より詳細なドキュメントを参照してください。"

#: ../../gdi/opentelemetry/auto-instrumentation/auto-instrumentation-operator.rst:126
msgid "Refer to :new-page:`the operator pattern in the Kubernetes documentation <https://kubernetes.io/docs/concepts/extend-kubernetes/operator/>` for more information."
msgstr "詳細はKubernetesドキュメント<https://kubernetes.io/docs/concepts/extend-kubernetes/operator/>` の:new-page:`operatorパターンを参照。"

#: ../../gdi/opentelemetry/collector-architecture.rst:-1
msgid "Describes the compatible CPU architectures and operating systems of the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションの互換 CPU アーキテクチャとオペレーティングシステムについて説明します。"

#: ../../gdi/opentelemetry/collector-architecture.rst:5
msgid "Processor architecture"
msgstr "プロセッサー・アーキテクチャ"

#: ../../gdi/opentelemetry/collector-architecture.rst:10
msgid "For information on the Collector's deployment modes and their architecture, see :ref:`otel-deployment-mode`."
msgstr "Collector の展開モードとそのアーキテクチャについては、:ref:`otel-deployment-mode` を参照してください。"

#: ../../gdi/opentelemetry/collector-architecture.rst:12
msgid "The Collector supports the following processor architectures and operating systems:"
msgstr "コレクタは、以下のプロセッサアーキテクチャとオペレーティングシステムをサポートしています："

#: ../../gdi/opentelemetry/collector-architecture.rst:19
msgid "Architecture"
msgstr "建築"

#: ../../gdi/opentelemetry/collector-architecture.rst:20
msgid "Install methods"
msgstr "インストール方法"

#: ../../gdi/opentelemetry/collector-architecture.rst:21
msgid "Supported components"
msgstr "対応コンポーネント"

#: ../../gdi/opentelemetry/collector-architecture.rst:22
msgid "x86_64 and AMD64"
msgstr "x86_64とAMD64"

#: ../../gdi/opentelemetry/collector-architecture.rst:24 ../../gdi/opentelemetry/collector-architecture.rst:32
msgid "Linux packages (deb, rpm, and tar.gz)"
msgstr "Linux パッケージ (deb、rpm、tar.gz)"

#: ../../gdi/opentelemetry/collector-architecture.rst:25
msgid "Linux binary file (otelcol_linux_amd64)"
msgstr "Linuxバイナリファイル (otelcol_linux_amd64)"

#: ../../gdi/opentelemetry/collector-architecture.rst:26
msgid "Windows installer and binary file (otelcol_windows_amd64.exe)"
msgstr "Windowsインストーラおよびバイナリファイル (otelcol_windows_amd64.exe)"

#: ../../gdi/opentelemetry/collector-architecture.rst:27
msgid "macOS binary file (otelcol_darwin_amd64)"
msgstr "macOS binary file (otelcol_darwin_amd64)"

#: ../../gdi/opentelemetry/collector-architecture.rst:28
msgid "Docker image. See :ref:`Docker image for Linux <linux-docker>` and :ref:`Docker image for Windows <windows-docker>`"
msgstr "Dockerイメージ。:ref:`Docker image for Linux <linux-docker>` を参照のこと。 :ref:`Docker image for Windows <windows-docker>`"

#: ../../gdi/opentelemetry/collector-architecture.rst:29
msgid "See :ref:`compatible components <x86_64-AMD64-ARM64-yes>`"
msgstr "参照 :ref:`compatible components <x86_64-AMD64-ARM64-yes>`"

#: ../../gdi/opentelemetry/collector-architecture.rst:30
msgid "ARM64"
msgstr "ARM64"

#: ../../gdi/opentelemetry/collector-architecture.rst:33
msgid "Linux binary file (otelcol_linux_arm64)"
msgstr "Linux バイナリファイル (otelcol_linux_arm64)"

#: ../../gdi/opentelemetry/collector-architecture.rst:34
msgid "macOS binary file (otelcol_darwin_arm64)"
msgstr "macOSバイナリファイル (otelcol_darwin_arm64)"

#: ../../gdi/opentelemetry/collector-architecture.rst:35
msgid "Docker image. See :ref:`Docker image for Linux <linux-docker>`"
msgstr "Dockerイメージ。参照 :ref:`Docker image for Linux <linux-docker>`"

#: ../../gdi/opentelemetry/collector-architecture.rst:36
msgid "Some monitors within the Smart Agent receivers are not supported with ARM64. See :ref:`unsupported components <ARM64-no>`"
msgstr "スマートエージェントレシーバー内の一部のモニターは、ARM64に対応していません。参照 :ref:`unsupported components <ARM64-no>`"

#: ../../gdi/opentelemetry/collector-architecture.rst:37
msgid "ppc64le, including IBM Private Cloud"
msgstr "IBM Private Cloudを含むppc64le"

#: ../../gdi/opentelemetry/collector-architecture.rst:39
msgid "Linux binary file (otelcol_linux_ppc64le)"
msgstr "Linuxバイナリファイル (otelcol_linux_ppc64le)"

#: ../../gdi/opentelemetry/collector-architecture.rst:40
msgid "Docker image. :ref:`Docker image for Linux <linux-docker>`"
msgstr "Dockerイメージ。 :ref:`Docker image for Linux <linux-docker>`"

#: ../../gdi/opentelemetry/collector-architecture.rst:41
msgid "Smart Agent monitors are unsupported on ppc64le. See :ref:`unsupported components <ARM64-no>`"
msgstr "スマートエージェントモニターはppc64leではサポートされていません。参照 :ref:`unsupported components <ARM64-no>`"

#: ../../gdi/opentelemetry/collector-architecture.rst:43
msgid "Smart Agent support on ARM64 is experimental."
msgstr "ARM64でのスマートエージェントのサポートは実験的なものです。"

#: ../../gdi/opentelemetry/collector-architecture.rst:48
msgid "Compatible components"
msgstr "適合部品"

#: ../../gdi/opentelemetry/collector-architecture.rst:50
msgid "All native OpenTelemetry receivers are supported in the Collector for the x86_64, AMD64, ARM64, and ppc64le architectures."
msgstr "すべてのネイティブOpenTelemetryレシーバは、x86_64、AMD64、ARM64、ppc64leアーキテクチャのコレクタでサポートされています。"

#: ../../gdi/opentelemetry/collector-architecture.rst:55 ../../gdi/opentelemetry/collector-architecture.rst:96 ../../gdi/opentelemetry/collector-architecture.rst:115 ../../gdi/opentelemetry/collector-architecture.rst:122
msgid "The following components are supported:"
msgstr "以下のコンポーネントがサポートされている："

#: ../../gdi/opentelemetry/collector-architecture.rst:57
msgid "cAdvisor (with the kubelet stats receiver)"
msgstr "cAdvisor（kubelet統計レシーバー付き）"

#: ../../gdi/opentelemetry/collector-architecture.rst:59
msgid "Cloud Foundry Firehose Nozzle"
msgstr "Cloud Foundry Firehose ノズル"

#: ../../gdi/opentelemetry/collector-architecture.rst:60
msgid "Conviva"
msgstr "コンヴィバ"

#: ../../gdi/opentelemetry/collector-architecture.rst:62
msgid "Disk-IO"
msgstr "ディスクIO"

#: ../../gdi/opentelemetry/collector-architecture.rst:63 ../../gdi/opentelemetry/install-linux-manual.rst:53 ../../gdi/opentelemetry/install-windows.rst:52
msgid "Docker"
msgstr "ドッカー"

#: ../../gdi/opentelemetry/collector-architecture.rst:64
msgid "ECS"
msgstr "ECS"

#: ../../gdi/opentelemetry/collector-architecture.rst:65 ../../gdi/opentelemetry/collector-architecture.rst:189
msgid "Elasticsearch"
msgstr "Elasticsearch"

#: ../../gdi/opentelemetry/collector-architecture.rst:66
msgid "Expvar"
msgstr "エクスパー"

#: ../../gdi/opentelemetry/collector-architecture.rst:67
msgid "File systems"
msgstr "ファイルシステム"

#: ../../gdi/opentelemetry/collector-architecture.rst:68
msgid "Trace forwarder"
msgstr "トレースフォワーダー"

#: ../../gdi/opentelemetry/collector-architecture.rst:69
msgid "HA Proxy"
msgstr "HAプロキシ"

#: ../../gdi/opentelemetry/collector-architecture.rst:70
msgid "Heroku (dims only)"
msgstr "Heroku (ディムのみ)"

#: ../../gdi/opentelemetry/collector-architecture.rst:71
msgid "Host metadata (props and uptime metrics)"
msgstr "ホストのメタデータ（小道具と稼働時間のメトリクス）"

#: ../../gdi/opentelemetry/collector-architecture.rst:72
msgid "https"
msgstr "https"

#: ../../gdi/opentelemetry/collector-architecture.rst:73
msgid "Internal metrics"
msgstr "内部指標"

#: ../../gdi/opentelemetry/collector-architecture.rst:74
msgid "Jaeger gRPC (traces)"
msgstr "イェーガーgRPC（痕跡）"

#: ../../gdi/opentelemetry/collector-architecture.rst:75
msgid "Kubernetes cluster"
msgstr "Kubernetesクラスタ"

#: ../../gdi/opentelemetry/collector-architecture.rst:76
msgid "Kubernetes events (events)"
msgstr "Kubernetesイベント（イベント）"

#: ../../gdi/opentelemetry/collector-architecture.rst:77
msgid "Kubernetes and kubelet metrics"
msgstr "Kubernetesとkubeletのメトリクス"

#: ../../gdi/opentelemetry/collector-architecture.rst:78
msgid "Kubernetes volumes"
msgstr "Kubernetesボリューム"

#: ../../gdi/opentelemetry/collector-architecture.rst:79
msgid "Load"
msgstr "負荷"

#: ../../gdi/opentelemetry/collector-architecture.rst:81
msgid "Logstash-tcp"
msgstr "Logstash-tcp"

#: ../../gdi/opentelemetry/collector-architecture.rst:83
msgid "Mongodb Atlas"
msgstr "Mongodb Atlas"

#: ../../gdi/opentelemetry/collector-architecture.rst:84
msgid "Net-IO"
msgstr "ネットIO"

#: ../../gdi/opentelemetry/collector-architecture.rst:85
msgid "NTP"
msgstr "NTP"

#: ../../gdi/opentelemetry/collector-architecture.rst:87
msgid "Processlist (events)"
msgstr "プロセスリスト（イベント）"

#: ../../gdi/opentelemetry/collector-architecture.rst:90
msgid "Vmem"
msgstr "ブイエムエム"

#: ../../gdi/opentelemetry/collector-architecture.rst:91
msgid "vSphere"
msgstr "vSphere"

#: ../../gdi/opentelemetry/collector-architecture.rst:99 ../../gdi/opentelemetry/collector-architecture.rst:190
msgid "etcd"
msgstr "etcd"

#: ../../gdi/opentelemetry/collector-architecture.rst:103
msgid "Kubernetes controller manager"
msgstr "Kubernetesコントローラー・マネージャー"

#: ../../gdi/opentelemetry/collector-architecture.rst:106
msgid "Nginx VTS"
msgstr "Nginx VTS"

#: ../../gdi/opentelemetry/collector-architecture.rst:108
msgid "Postgres"
msgstr "ポストグレス"

#: ../../gdi/opentelemetry/collector-architecture.rst:117
msgid "AWS App Mesh"
msgstr "AWS App Mesh"

#: ../../gdi/opentelemetry/collector-architecture.rst:120
msgid "Telegraf"
msgstr "テレグラフ"

#: ../../gdi/opentelemetry/collector-architecture.rst:124
msgid "ASP.NET (Windows)"
msgstr "ASP.NET (Windows)"

#: ../../gdi/opentelemetry/collector-architecture.rst:125
msgid "DNS"
msgstr "DNS"

#: ../../gdi/opentelemetry/collector-architecture.rst:126
msgid "Exec"
msgstr "エグゼクティブ"

#: ../../gdi/opentelemetry/collector-architecture.rst:127
msgid "Internet Information Services (IIS) for Windows"
msgstr "Windows用インターネットインフォメーションサービス（IIS）"

#: ../../gdi/opentelemetry/collector-architecture.rst:130 ../../gdi/opentelemetry/zero-config.rst:12
msgid ".NET"
msgstr ".NET"

#: ../../gdi/opentelemetry/collector-architecture.rst:131
msgid "Procstat"
msgstr "プロクスタット"

#: ../../gdi/opentelemetry/collector-architecture.rst:132
msgid "SNMP"
msgstr "SNMP"

#: ../../gdi/opentelemetry/collector-architecture.rst:134
msgid "Tail"
msgstr "テール"

#: ../../gdi/opentelemetry/collector-architecture.rst:135
msgid "Windows Performance Counter"
msgstr "Windowsパフォーマンスカウンター"

#: ../../gdi/opentelemetry/collector-architecture.rst:136
msgid "Windows Legacy"
msgstr "Windows Legacy"

#: ../../gdi/opentelemetry/collector-architecture.rst:137
msgid "Windows Service"
msgstr "Windowsサービス"

#: ../../gdi/opentelemetry/collector-architecture.rst:142
msgid "Unsupported components"
msgstr "サポートされていないコンポーネント"

#: ../../gdi/opentelemetry/collector-architecture.rst:144
msgid "Support for Smart Agent receiver monitor types is experimental for ARM64 starting from the Splunk Distribution of OpenTelemetry Collector version 0.73 and higher. Using the Smart Agent receiver with monitor types is not supported for ppc64le architectures."
msgstr "OpenTelemetry Collector バージョン 0.73 以降の Splunk ディストリビューションでは、ARM64 用の Smart Agent レシーバモニタタイプのサポートは実験的です。スマートエージェントレシーバーをモニタータイプで使用することは、ppc64leアーキテクチャではサポートされていません。"

#: ../../gdi/opentelemetry/collector-architecture.rst:146
msgid "Subprocess monitor types are those that initiate the creation and management of a child process where metric gathering occurs. There are three major subprocess monitor types:"
msgstr "サブプロセスモニタタイプは、メトリック収集が行われる子プロセスの作成と管理を開始するものである。サブプロセス・モニターには、大きく分けて3つのタイプがある："

#: ../../gdi/opentelemetry/collector-architecture.rst:148
msgid "``collectd`` and its associated ``collectd/GenericJMX`` plugin-based integrations"
msgstr "``collectd`` および関連する``collectd/GenericJMX`` プラグイン・ベースの統合"

#: ../../gdi/opentelemetry/collector-architecture.rst:149
msgid "``sfxcollectd``"
msgstr "``sfxcollectd``"

#: ../../gdi/opentelemetry/collector-architecture.rst:150
msgid "``JMX``"
msgstr "``JMX``"

#: ../../gdi/opentelemetry/collector-architecture.rst:152
msgid "These types derive from integrations that produce metrics in the Smart Agent and are not reflective of the current ability to run arbitrary Python or Java applications."
msgstr "これらのタイプは、スマート・エージェントでメトリクスを生成する統合から派生したものであり、任意のPythonまたはJavaアプリケーションを実行する現在の機能を反映したものではありません。"

#: ../../gdi/opentelemetry/collector-architecture.rst:155
msgid "collectd"
msgstr "collectd"

#: ../../gdi/opentelemetry/collector-architecture.rst:157 ../../gdi/opentelemetry/collector-architecture.rst:173 ../../gdi/opentelemetry/collector-architecture.rst:185 ../../gdi/opentelemetry/collector-architecture.rst:207
msgid "The following components are not supported:"
msgstr "以下のコンポーネントはサポートされていません："

#: ../../gdi/opentelemetry/collector-architecture.rst:160
msgid "Chrony"
msgstr "クロニー"

#: ../../gdi/opentelemetry/collector-architecture.rst:161
msgid "CPU frequency"
msgstr "CPU周波数"

#: ../../gdi/opentelemetry/collector-architecture.rst:164
msgid "Nginx"
msgstr "Nginx"

#: ../../gdi/opentelemetry/collector-architecture.rst:166
msgid "postgresql"
msgstr "postgresql"

#: ../../gdi/opentelemetry/collector-architecture.rst:167
msgid "processes"
msgstr "プロセス"

#: ../../gdi/opentelemetry/collector-architecture.rst:171
msgid "collectd or GenericJMX"
msgstr "collectdまたはGenericJMX"

#: ../../gdi/opentelemetry/collector-architecture.rst:175
msgid "ActiveMQ"
msgstr "ActiveMQ"

#: ../../gdi/opentelemetry/collector-architecture.rst:178
msgid "Kafka"
msgstr "カフカ"

#: ../../gdi/opentelemetry/collector-architecture.rst:179
msgid "Kafka Consumer"
msgstr "カフカ・コンシューマー"

#: ../../gdi/opentelemetry/collector-architecture.rst:180
msgid "Kafka Producer"
msgstr "カフカ・プロデューサー"

#: ../../gdi/opentelemetry/collector-architecture.rst:183
msgid "sfxcollectd"
msgstr "sfxcollectd"

#: ../../gdi/opentelemetry/collector-architecture.rst:187
msgid "Consul"
msgstr "領事"

#: ../../gdi/opentelemetry/collector-architecture.rst:188
msgid "Couchbase"
msgstr "Couchbase"

#: ../../gdi/opentelemetry/collector-architecture.rst:194
msgid "Kong"
msgstr "コング"

#: ../../gdi/opentelemetry/collector-architecture.rst:195
msgid "Marathon"
msgstr "マラソン"

#: ../../gdi/opentelemetry/collector-architecture.rst:199
msgid "Solr"
msgstr "ソル"

#: ../../gdi/opentelemetry/collector-architecture.rst:200
msgid "Spark"
msgstr "スパーク"

#: ../../gdi/opentelemetry/collector-architecture.rst:202
msgid "Zookeeper"
msgstr "ズーキーパー"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:-1
msgid "Manage your data ingestion manually by deploying the Splunk Distribution of OpenTelemetry Collector alongside the Splunk Universal Forwarder (UF) on each virtual machine (VM)."
msgstr "各仮想マシン (VM) に Splunk Universal Forwarder (UF) と一緒に OpenTelemetry Collector の Splunk Distribution を配置して、データの取り込みを手動で管理します。"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:5
msgid "Use the Splunk Universal Forwarder with the Collector"
msgstr "コレクターで Splunk Universal Forwarder を使用する"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:11
msgid "Splunk Enterprise Cloud and Splunk Observability Cloud currently use different data collection agents:"
msgstr "Splunk Enterprise Cloud と Splunk Observability Cloud は現在、異なるデータ収集エージェントを使用しています："

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:13
msgid "Enterprise Cloud uses the :new-page:`Splunk Universal Forwarder (UF) <https://docs.splunk.com/Documentation/Forwarder>` to capture logs and some metrics, which are also stored as logs."
msgstr "Enterprise Cloud は、:new-page:`Splunk Universal Forwarder (UF)<https://docs.splunk.com/Documentation/Forwarder>` を使用して、ログと一部のメトリクスをキャプチャし、それもログとして保存します。"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:14
msgid "Splunk Observability Cloud uses OpenTelemetry to capture traces, metrics, and logs. Logs are currently captured through bundled Fluentd."
msgstr "Splunk Observability Cloud は OpenTelemetry を使用してトレース、メトリクス、ログを取得します。ログは現在、バンドルされているFluentdを通して取得されます。"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:16
msgid "You can manage your data ingestion manually by deploying the Splunk Distribution of OpenTelemetry Collector alongside the UF on each virtual machine (VM).This solution is applicable for VM environments for operating systems that are currently supported by both Splunk Observability Cloud and Enterprise and Cloud, running in common environments such as AWS EC2, GCE, Azure VMs, and VMWare."
msgstr "各仮想マシン(VM)上に UF と一緒に OpenTelemetry Collector の Splunk Distribution を配置することで、手動でデータ取り込みを管理することができます。このソリューションは、現在 Splunk Observability Cloud と Enterprise and Cloud の両方でサポートされているオペレーティングシステムの VM 環境で、AWS EC2、GCE、Azure VM、VMWare などの一般的な環境で実行されている場合に適用できます。"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:20
msgid "For Kubernetes deployments, use the Splunk Distribution of OpenTelemetry Collector for Kubernetes. Install the Collector using the method that best suits your needs:"
msgstr "Kubernetes デプロイメントには、Splunk Distribution of OpenTelemetry Collector for Kubernetes を使用します。コレクタは、お客様のニーズに最も適した方法で取り付けてください："

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:28
msgid "The benefits of using the Universal Forwarder with the Collector are:"
msgstr "コレクターとともにユニバーサルフォワーダーを使用する利点は、次のとおりです："

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:30
msgid "You can use Splunk Observability Cloud alongside Enterprise or Enterprise Cloud without capturing and submitting any duplicate telemetry data."
msgstr "Splunk Observability CloudをEnterpriseまたはEnterprise Cloudと並行して使用することで、重複した遠隔測定データをキャプチャして送信する必要がなくなります。"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:31
msgid "When used with :ref:`Splunk Log Observer Connect <logs-intro-logconnect>`, you can take advantage of effectively all Splunk Observability Cloud logging functionality, including :ref:`Related Content <get-started-relatedcontent>`."
msgstr ":ref:`Splunk Log Observer Connect <logs-intro-logconnect>` と併用することで、:ref:`Related Content <get-started-relatedcontent>` を含む、Splunk Observability Cloud のロギング機能を効率的にすべて利用することができます。"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:32
msgid "You do not have to update existing UF deployments."
msgstr "既存のUFデプロイメントを更新する必要はありません。"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:35
msgid "Collect data with the Collector and Universal Forwarder"
msgstr "CollectorとUniversal Forwarderによるデータ収集"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:37
msgid "To collect data with the Collector and the UF:"
msgstr "コレクターとUFでデータを収集する："

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:39
msgid "Configure each agent using the default configuration files:"
msgstr "デフォルトの設定ファイルを使って各エージェントを設定する："

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:41
msgid "Configure the Collector in :new-page:`Agent <https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/agent_config.yaml>` or :new-page:`Gateway <https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/gateway_config.yaml>` mode."
msgstr "コレクタを:new-page:`Agent<https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/agent_config.yaml>` または:new-page:`Gateway<https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/gateway_config.yaml>` モードで構成します。"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:43
msgid "Configure the :new-page:`UF <https://docs.splunk.com/Documentation/Forwarder/latest/Forwarder/Configuretheuniversalforwarder>`."
msgstr ":new-page:`UF<https://docs.splunk.com/Documentation/Forwarder/latest/Forwarder/Configuretheuniversalforwarder>` を設定する。"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:45
msgid "Run the following command to skip installation of Fluentd and the plugins and dependencies for the Collector:"
msgstr "以下のコマンドを実行して、Fluentd と Collector 用のプラグインと依存関係のインストールをスキップします："

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:52
msgid "Ensure that the UF captures the fully qualified domain name (FQDN) of the host, which is used to identify hosts in Splunk Observability Cloud. The UF can already capture this, and its behavior is consistent with the Collector. To capture the FQDN:"
msgstr "UF がホストの完全修飾ドメイン名 (FQDN) を取得していることを確認します。FQDN は Splunk Observability Cloud でホストを識別するために使用されます。UFはすでにこれをキャプチャすることができ、その動作はコレクターと一致している。FQDNをキャプチャする："

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:54
msgid "From the ``$SPLUNK_HOME/etc/system/local/`` directory, open server.conf and verify that the following :new-page:`stanza <https://docs.splunk.com/Documentation/Splunk/latest/Admin/Serverconf#OVERVIEW>` is present:"
msgstr "``$SPLUNK_HOME/etc/system/local/`` 、server.confを開き、以下の:new-page:`stanza<https://docs.splunk.com/Documentation/Splunk/latest/Admin/Serverconf#OVERVIEW>` ："

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:61
msgid "From the ``$SPLUNK_HOME/etc/system/local/ directory`` directory, open inputs.conf and verify that the following :new-page:`stanza <https://docs.splunk.com/Documentation/Splunk/latest/Admin/Inputsconf#OVERVIEW>` is present:"
msgstr "``$SPLUNK_HOME/etc/system/local/ directory`` 、inputs.confを開き、以下の:new-page:`stanza<https://docs.splunk.com/Documentation/Splunk/latest/Admin/Inputsconf#OVERVIEW>` ："

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:68
msgid "Restart the UF."
msgstr "UFを再起動する。"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:70
msgid "Ensure that the UF captures the name of the service, which you must set manually in the Collector configuration and within your applications."
msgstr "UFがサービス名をキャプチャしていることを確認します。これは、Collectorの構成およびアプリケーション内で手動で設定する必要があります。"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:72
msgid "For the UF, do this in the same way that you append trace and span IDs to logs."
msgstr "UFの場合は、トレースIDやスパンIDをログに付加するのと同じ方法で行う。"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:74
msgid "To capture the name of the service, set the ``OTEL_SERVICE_NAME`` environment variable in the configuration file. On Linux, run ``export OTEL_SERVICE_NAME=<yourServiceName>``. On Windows Powershell, run ``$env:OTEL_SERVICE_NAME=<yourServiceName>``. See :new-page:`https://github.com/open-telemetry/opentelemetry-specification/blob/main/spec-compliance-matrix.md#environment-variables  <https://github.com/open-telemetry/opentelemetry-specification/blob/main/spec-compliance-matrix.md#environment-variables>` on GitHub to view additional OpenTelemetry specification environment variables."
msgstr "サービス名をキャプチャするには、設定ファイルで``OTEL_SERVICE_NAME`` 環境変数を設定する。Linux では、``export OTEL_SERVICE_NAME=<yourServiceName>`` を実行する。Windows Powershellで、``$env:OTEL_SERVICE_NAME=<yourServiceName>`` を実行する。その他のOpenTelemetry仕様の環境変数については、GitHubの:new-page:`https://github.com/open-telemetry/opentelemetry-specification/blob/main/spec-compliance-matrix.md#environment-variables<https://github.com/open-telemetry/opentelemetry-specification/blob/main/spec-compliance-matrix.md#environment-variables>` を参照してください。"

#: ../../gdi/opentelemetry/collector-with-the-uf.rst:76
msgid "Restart both agents."
msgstr "両方のエージェントを再起動する。"

#: ../../gdi/opentelemetry/components.rst:-1
msgid "Learn about the components that make up the Splunk Observability Cloud OpenTelemetry Collector."
msgstr "Splunk Observability Cloud OpenTelemetry Collector を構成するコンポーネントについて学びます。"

#: ../../gdi/opentelemetry/components.rst:5 ../../gdi/smart-agent/smart-agent-resources.rst:17
msgid "Components"
msgstr "コンポーネント"

#: ../../gdi/opentelemetry/components.rst:42
msgid "The OpenTelemetry Collector includes the following component types:"
msgstr "OpenTelemetry Collector には、以下のコンポーネントタイプがあります："

#: ../../gdi/opentelemetry/components.rst:44
msgid ":ref:`Receivers <collector-components-receivers>`: Get data into the Collector from multiple sources."
msgstr ":ref:`Receivers <collector-components-receivers>`:複数のソースからコレクタにデータを取得します。"

#: ../../gdi/opentelemetry/components.rst:45
msgid ":ref:`Processors <collector-components-processors>`: Perform operations on data before it's exported. For example, filtering."
msgstr ":ref:`Processors <collector-components-processors>`:エクスポートする前にデータに対して操作を行う。例えば、フィルタリング。"

#: ../../gdi/opentelemetry/components.rst:46
msgid ":ref:`Exporters <collector-components-exporters>`: Send data to one or more backends or destinations."
msgstr ":ref:`Exporters <collector-components-exporters>`:1つまたは複数のバックエンドまたは宛先にデータを送信する。"

#: ../../gdi/opentelemetry/components.rst:47 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:12
msgid ":ref:`Extensions <collector-components-extensions>`: Extend the capabilities of the Collector."
msgstr ":ref:`Extensions <collector-components-extensions>`:コレクターの機能を拡張する。"

#: ../../gdi/opentelemetry/components.rst:49
msgid "You can activate components by configuring :ref:`pipelines <otel-data-processing>` in the Collector configuration. See :ref:`otel-configuration` to learn how to define multiple instances of components as well as their pipelines."
msgstr "コレクタ構成で:ref:`pipelines <otel-data-processing>` を構成することで、コンポーネントをアクティブ化できます。コンポーネントの複数のインスタンスとそのパイプラインを定義する方法については、:ref:`otel-configuration` を参照してください。"

#: ../../gdi/opentelemetry/components.rst:51
msgid "The Splunk Distribution of OpenTelemetry Collector includes and supports the following components."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションには、以下のコンポーネントが含まれ、サポートされています。"

#: ../../gdi/opentelemetry/components.rst:53
msgid "The following lists might not contain all the latest additions. For a complete list of Collector components, including components that aren't included in the Splunk Distribution of OpenTelemetry Collector, see the ``opentelemetry-contrib`` repository in GitHub."
msgstr "以下のリストには、最新の追加がすべて含まれていない可能性がある。OpenTelemetry Collector の Splunk ディストリビューションに含まれていないコンポーネントを含む Collector コンポーネントの完全なリストについては、GitHub の``opentelemetry-contrib`` リポジトリを参照してください。"

#: ../../gdi/opentelemetry/components.rst:70 ../../gdi/opentelemetry/components.rst:196 ../../gdi/opentelemetry/components.rst:257
msgid "Pipeline types"
msgstr "パイプラインの種類"

#: ../../gdi/opentelemetry/components.rst:71
msgid "``azureeventhub``"
msgstr "``azureeventhub``"

#: ../../gdi/opentelemetry/components.rst:72
msgid "Pulls logs from an Azure event hub."
msgstr "Azure イベントハブからログをプルします。"

#: ../../gdi/opentelemetry/components.rst:73 ../../gdi/opentelemetry/components.rst:88 ../../gdi/opentelemetry/components.rst:91 ../../gdi/opentelemetry/components.rst:94 ../../gdi/opentelemetry/components.rst:103 ../../gdi/opentelemetry/components.rst:109 ../../gdi/opentelemetry/components.rst:112 ../../gdi/opentelemetry/components.rst:166 ../../gdi/opentelemetry/components.rst:169 ../../gdi/opentelemetry/components.rst:172 ../../gdi/opentelemetry/components/filter-processor.rst:27 ../../gdi/opentelemetry/components/transform-processor.rst:27
msgid "Logs"
msgstr "過去ログ"

#: ../../gdi/opentelemetry/components.rst:74
msgid "``carbon``"
msgstr "``carbon``"

#: ../../gdi/opentelemetry/components.rst:75
msgid "Receives metrics in Carbon plaintext protocol."
msgstr "カーボン・プレーンテキスト・プロトコルでメトリクスを受信する。"

#: ../../gdi/opentelemetry/components.rst:77
msgid "``cloudfoundry``"
msgstr "``cloudfoundry``"

#: ../../gdi/opentelemetry/components.rst:78
msgid "Connects to the Reverse Log Proxy (RLP) gateway of Cloud Foundry to extract metrics."
msgstr "Cloud FoundryのRLP（Reverse Log Proxy）ゲートウェイに接続し、メトリクスを抽出します。"

#: ../../gdi/opentelemetry/components.rst:80
msgid "``collectd``"
msgstr "``collectd``"

#: ../../gdi/opentelemetry/components.rst:81
msgid "Receives data exported through the CollectD ``write_http`` plugin. Only supports the JSON format."
msgstr "CollectD``write_http`` プラグインからエクスポートされたデータを受信します。JSON形式のみサポート。"

#: ../../gdi/opentelemetry/components.rst:83
msgid ":ref:`databricks_receiver` (``databricks``)"
msgstr ":ref:`databricks_receiver` (``databricks``)"

#: ../../gdi/opentelemetry/components.rst:84
msgid "Uses the Databricks API to generate metrics about the operation of a Databricks instance."
msgstr "Databricks API を使用して、Databricks インスタンスの動作に関するメトリクスを生成します。"

#: ../../gdi/opentelemetry/components.rst:86
msgid "``discovery``"
msgstr "``discovery``"

#: ../../gdi/opentelemetry/components.rst:87
msgid "Wraps the receiver creator to facilitate the discovery of metric collection targets. See :ref:`discovery_mode`."
msgstr "メトリック収集ターゲットの発見を容易にするために、レシーバークリエータをラップする。:ref:`discovery_mode` を参照。"

#: ../../gdi/opentelemetry/components.rst:89
msgid "``filelog``"
msgstr "``filelog``"

#: ../../gdi/opentelemetry/components.rst:90
msgid "Tails and parses logs from files."
msgstr "ファイルからのログを解析する。"

#: ../../gdi/opentelemetry/components.rst:92
msgid ":ref:`fluentd-receiver` (``fluentforward``)"
msgstr ":ref:`fluentd-receiver` (``fluentforward``)"

#: ../../gdi/opentelemetry/components.rst:93
msgid "Runs a TCP server that accepts events through the Fluentd Forward protocol."
msgstr "Fluentd Forward プロトコルでイベントを受け取る TCP サーバーを実行します。"

#: ../../gdi/opentelemetry/components.rst:95
msgid ":ref:`host-metrics-receiver` (``hostmetrics``)"
msgstr ":ref:`host-metrics-receiver` (``hostmetrics``)"

#: ../../gdi/opentelemetry/components.rst:96
msgid "Generates system metrics from various sources. Use this receiver when deploying the Collector as an agent."
msgstr "さまざまなソースからシステム・メトリクスを生成します。コレクタをエージェントとしてデプロイするときは、このレシーバを使用します。"

#: ../../gdi/opentelemetry/components.rst:98
msgid "``jaeger``"
msgstr "``jaeger``"

#: ../../gdi/opentelemetry/components.rst:99
msgid "Receives trace data in Jaeger format."
msgstr "イェーガー形式のトレースデータを受信する。"

#: ../../gdi/opentelemetry/components.rst:100 ../../gdi/opentelemetry/components.rst:148 ../../gdi/opentelemetry/components.rst:178 ../../gdi/opentelemetry/components.rst:220 ../../gdi/opentelemetry/components.rst:232 ../../gdi/opentelemetry/components.rst:235 ../../gdi/opentelemetry/components.rst:275 ../../gdi/opentelemetry/components.rst:281 ../../gdi/opentelemetry/components/transform-processor.rst:23 ../../gdi/opentelemetry/data-processing.rst:53 ../../gdi/opentelemetry/data-processing.rst:56 ../../gdi/opentelemetry/data-processing.rst:71 ../../gdi/opentelemetry/data-processing.rst:74 ../../gdi/opentelemetry/security.rst:117
msgid "Traces"
msgstr "痕跡"

#: ../../gdi/opentelemetry/components.rst:101
msgid "``journald``"
msgstr "``journald``"

#: ../../gdi/opentelemetry/components.rst:102
msgid "Parses Journald events from the systemd journal. The ``journalctl`` binary must be in the same ``$PATH`` of the agent."
msgstr "systemd journal から Journald イベントを解析する。``journalctl`` バイナリは、エージェントと同じ``$PATH`` になければならない。"

#: ../../gdi/opentelemetry/components.rst:104
msgid ":ref:`kubernetes-cluster-receiver` (``k8s_cluster``)"
msgstr ":ref:`kubernetes-cluster-receiver` (``k8s_cluster``)"

#: ../../gdi/opentelemetry/components.rst:105
msgid "Collects cluster-level metrics from the Kubernetes API server. It uses the Kubernetes API to listen for updates. You can use a single instance of this receiver to monitor a cluster."
msgstr "Kubernetes APIサーバからクラスタレベルのメトリクスを収集します。Kubernetes APIを使ってアップデートをリッスンする。このレシーバの単一のインスタンスを使用してクラスタを監視できます。"

#: ../../gdi/opentelemetry/components.rst:107
msgid "``k8s_events``"
msgstr "``k8s_events``"

#: ../../gdi/opentelemetry/components.rst:108
msgid "Collects all new and updated events from the Kubernetes API server. Supports authentication through service accounts only."
msgstr "Kubernetes APIサーバーからすべての新規および更新イベントを収集します。サービスアカウントによる認証のみをサポート。"

#: ../../gdi/opentelemetry/components.rst:110
msgid "``k8sobjects``"
msgstr "``k8sobjects``"

#: ../../gdi/opentelemetry/components.rst:111
msgid "Collects objects from the Kubernetes API server. Supports authentication through service accounts only."
msgstr "Kubernetes APIサーバーからオブジェクトを収集します。サービスアカウントによる認証のみをサポート。"

#: ../../gdi/opentelemetry/components.rst:113
msgid "``kafkametrics``"
msgstr "``kafkametrics``"

#: ../../gdi/opentelemetry/components.rst:114
msgid "Collects Kafka metrics such as brokers, topics, partitions, and consumer groups from Kafka server, and converts them to OTLP format."
msgstr "Kafkaサーバーからブローカー、トピック、パーティション、コンシューマーグループなどのKafkaメトリクスを収集し、OTLP形式に変換します。"

#: ../../gdi/opentelemetry/components.rst:116 ../../gdi/opentelemetry/components.rst:261
msgid "``kafka``"
msgstr "``kafka``"

#: ../../gdi/opentelemetry/components.rst:117
msgid "Receives metrics, logs, and traces from Kafka. Metrics and logs only support the OTLP format."
msgstr "Kafkaからメトリクス、ログ、トレースを受け取る。メトリクスとログは、OTLPフォーマットのみをサポートしています。"

#: ../../gdi/opentelemetry/components.rst:118 ../../gdi/opentelemetry/components.rst:130 ../../gdi/opentelemetry/components.rst:157 ../../gdi/opentelemetry/components.rst:202 ../../gdi/opentelemetry/components.rst:208 ../../gdi/opentelemetry/components.rst:211 ../../gdi/opentelemetry/components.rst:214 ../../gdi/opentelemetry/components.rst:223 ../../gdi/opentelemetry/components.rst:226 ../../gdi/opentelemetry/components.rst:229 ../../gdi/opentelemetry/components.rst:238 ../../gdi/opentelemetry/components.rst:260 ../../gdi/opentelemetry/components.rst:263 ../../gdi/opentelemetry/components.rst:266 ../../gdi/opentelemetry/components.rst:284
msgid "Metrics, logs, traces"
msgstr "メトリクス、ログ、トレース"

#: ../../gdi/opentelemetry/components.rst:119
msgid ":ref:`kubelet-stats-receiver` (``kubeletstats``)"
msgstr ":ref:`kubelet-stats-receiver` (``kubeletstats``)"

#: ../../gdi/opentelemetry/components.rst:120
msgid "Pulls pod metrics from the API server on a kubelet."
msgstr "kubelet上のAPIサーバーからPodのメトリクスを引き出します。"

#: ../../gdi/opentelemetry/components.rst:122
msgid ":ref:`mongodb-atlas-receiver` (``mongodbatlas``)"
msgstr ":ref:`mongodb-atlas-receiver` (``mongodbatlas``)"

#: ../../gdi/opentelemetry/components.rst:123
msgid "Retrieves metrics from MongoDB Atlas using their monitoring APIs."
msgstr "MongoDB Atlas の監視 API を使って、MongoDB Atlas からメトリクスを取得します。"

#: ../../gdi/opentelemetry/components.rst:125
msgid ":ref:`oracledb` (``oracledb``) |br|"
msgstr ":ref:`oracledb` (``oracledb``) |br|"

#: ../../gdi/opentelemetry/components.rst:126
msgid "Connects to an Oracle Database instance and obtains metrics such as physical reads, CPU, time, and others."
msgstr "Oracle Database インスタンスに接続し、物理読み込み、CPU、時間などのメトリクスを取得します。"

#: ../../gdi/opentelemetry/components.rst:128 ../../gdi/opentelemetry/components.rst:267
msgid "``otlp``"
msgstr "``otlp``"

#: ../../gdi/opentelemetry/components.rst:129
msgid "Receives data through gRPC or HTTP using OTLP format."
msgstr "OTLPフォーマットでgRPCまたはHTTP経由でデータを受信する。"

#: ../../gdi/opentelemetry/components.rst:131
msgid ":ref:`postgresql-receiver` (``postgresql``)"
msgstr ":ref:`postgresql-receiver` (``postgresql``)"

#: ../../gdi/opentelemetry/components.rst:132
msgid "Queries the PostgreSQL statistics collector. Supports PostgreSQL version 9.6 and higher."
msgstr "PostgreSQL統計情報コレクタに問い合わせます。PostgreSQLバージョン9.6以上をサポート。"

#: ../../gdi/opentelemetry/components.rst:134
msgid ":ref:`prometheus-receiver` (``prometheus``)"
msgstr ":ref:`prometheus-receiver` (``prometheus``)"

#: ../../gdi/opentelemetry/components.rst:135
msgid "Provides a simple configuration interface to scrape metrics from a single target."
msgstr "単一のターゲットからメトリクスをスクレイピングするためのシンプルな構成インターフェイスを提供します。"

#: ../../gdi/opentelemetry/components.rst:137
msgid ":ref:`simple-prometheus-receiver` (``prometheus_simple``)"
msgstr ":ref:`simple-prometheus-receiver` (``prometheus_simple``)"

#: ../../gdi/opentelemetry/components.rst:138
msgid "Wraps the ``prometheus`` receiver to provide simplified settings for single targets."
msgstr "``prometheus`` 受信機をラップし、単一ターゲットの設定を簡素化。"

#: ../../gdi/opentelemetry/components.rst:140
msgid ":ref:`receiver-creator-receiver` (``receiver_creator``)"
msgstr ":ref:`receiver-creator-receiver` (``receiver_creator``)"

#: ../../gdi/opentelemetry/components.rst:141
msgid "Instantiates other receivers at runtime based on whether observed endpoints match a configured rule. To use the receiver creator, configure one or more observer extensions to discover networked endpoints."
msgstr "観測されたエンドポイントが設定されたルールに一致するかどうかに基づいて、実行時に他のレシーバーをインスタンス化する。受信機クリエーターを使用するには、ネットワーク接続されたエンドポイントを検出するために、1つまたは複数のオブザーバー拡張機能を設定します。"

#: ../../gdi/opentelemetry/components.rst:142
msgid "N/A"
msgstr "N/A"

#: ../../gdi/opentelemetry/components.rst:143
msgid "``redis``"
msgstr "``redis``"

#: ../../gdi/opentelemetry/components.rst:144
msgid "Retrieves Redis ``INFO`` data from a specific Redis instance and builds metrics from it."
msgstr "特定の Redis インスタンスから Redis``INFO`` データを取得し、そこからメトリクスを構築します。"

#: ../../gdi/opentelemetry/components.rst:146
msgid "``sapm``"
msgstr "``sapm``"

#: ../../gdi/opentelemetry/components.rst:147
msgid "Receives traces from other collectors or from the SignalFx Smart Agent."
msgstr "他のコレクタまたは SignalFx スマートエージェントからトレースを受信します。"

#: ../../gdi/opentelemetry/components.rst:149
msgid ":ref:`signalfx-receiver` (``signalfx``)"
msgstr ":ref:`signalfx-receiver` (``signalfx``)"

#: ../../gdi/opentelemetry/components.rst:150
msgid "Accepts metrics and logs in the proto format."
msgstr "proto 形式のメトリクスとログを受け付けます。"

#: ../../gdi/opentelemetry/components.rst:151 ../../gdi/opentelemetry/data-processing.rst:68
msgid "Metrics, logs"
msgstr "メトリクス、ログ"

#: ../../gdi/opentelemetry/components.rst:152
msgid ":ref:`smartagent-receiver` (``smartagent``)"
msgstr ":ref:`smartagent-receiver` (``smartagent``)"

#: ../../gdi/opentelemetry/components.rst:153
msgid "Uses the existing Smart Agent monitors as Collector metric receivers. Learn more in :ref:`migration-monitors`."
msgstr "既存のSmart AgentモニタをCollectorメトリックレシーバとして使用します。詳しくは:ref:`migration-monitors` 。"

#: ../../gdi/opentelemetry/components.rst:155
msgid ":ref:`splunk-hec-receiver` (``splunk_hec``)"
msgstr ":ref:`splunk-hec-receiver` (``splunk_hec``)"

#: ../../gdi/opentelemetry/components.rst:156
msgid "Accepts telemetry in the Splunk HEC format."
msgstr "Splunk HEC 形式の遠隔測定を受け付ける。"

#: ../../gdi/opentelemetry/components.rst:158
msgid "``sqlquery``"
msgstr "``sqlquery``"

#: ../../gdi/opentelemetry/components.rst:159
msgid "Runs custom SQL queries to generate metrics from a database connection."
msgstr "カスタム SQL クエリを実行して、データベース接続からメトリックを生成します。"

#: ../../gdi/opentelemetry/components.rst:161
msgid "``statsd``"
msgstr "``statsd``"

#: ../../gdi/opentelemetry/components.rst:162
msgid "Collects StatsD messages to generate metrics."
msgstr "StatsDメッセージを収集し、メトリクスを生成します。"

#: ../../gdi/opentelemetry/components.rst:164
msgid "``syslog``"
msgstr "``syslog``"

#: ../../gdi/opentelemetry/components.rst:165
msgid "Parses syslog messages received over TCP or UDP."
msgstr "TCPまたはUDPで受信したsyslogメッセージを解析する。"

#: ../../gdi/opentelemetry/components.rst:167
msgid "``tcplog``"
msgstr "``tcplog``"

#: ../../gdi/opentelemetry/components.rst:168
msgid "Receives logs over TCP."
msgstr "TCPでログを受信する。"

#: ../../gdi/opentelemetry/components.rst:170
msgid "``windowseventlog``"
msgstr "``windowseventlog``"

#: ../../gdi/opentelemetry/components.rst:171
msgid "Tails and parses logs from the Windows Event log API."
msgstr "WindowsイベントログAPIからのログを解析する。"

#: ../../gdi/opentelemetry/components.rst:173
msgid ":ref:`windowsperfcounters-receiver` (``windowsperfcounters``) (Windows only)"
msgstr ":ref:`windowsperfcounters-receiver` (``windowsperfcounters``) （Windowsのみ）"

#: ../../gdi/opentelemetry/components.rst:174
msgid "Collects the configured system, application, or custom performance counter data from the Windows Registry."
msgstr "構成されたシステム、アプリケーション、またはカスタム・パフォーマンス・カウンターのデータをWindowsレジストリから収集します。"

#: ../../gdi/opentelemetry/components.rst:176
msgid "``zipkin``"
msgstr "``zipkin``"

#: ../../gdi/opentelemetry/components.rst:177
msgid "Receives spans from Zipkin versions 1 and 2."
msgstr "ジプキン・バージョン1と2のスパンを受信。"

#: ../../gdi/opentelemetry/components.rst:197
msgid ":ref:`attributes-processor` (``attributes``)"
msgstr ":ref:`attributes-processor` (``attributes``)"

#: ../../gdi/opentelemetry/components.rst:198
msgid "Modifies attributes of a span or log record."
msgstr "スパンまたはログレコードの属性を変更する。"

#: ../../gdi/opentelemetry/components.rst:199
msgid "Logs, traces"
msgstr "ログ、トレース"

#: ../../gdi/opentelemetry/components.rst:200
msgid ":ref:`batch-processor` (``batch``)"
msgstr ":ref:`batch-processor` (``batch``)"

#: ../../gdi/opentelemetry/components.rst:201
msgid "Accepts spans, metrics, or logs and places them into batches. Batching helps better compress the data and reduce the number of outgoing connections required to transmit the data. This processor supports both size-based and time-based batching."
msgstr "スパン、メトリクス、またはログを受け入れ、それらをバッチに配置します。バッチ処理は、データを圧縮し、データ送信に必要な送信接続の数を減らすのに役立つ。このプロセッサーは、サイズベースのバッチ処理と時間ベースのバッチ処理の両方をサポートしている。"

#: ../../gdi/opentelemetry/components.rst:203
msgid ":ref:`filter-processor` (``filter``)"
msgstr ":ref:`filter-processor` (``filter``)"

#: ../../gdi/opentelemetry/components.rst:204
msgid "Can be configured to include or exclude metrics based on metric name in the case of the ``strict`` or ``regexp`` match types, or based on other metric attributes in the case of the ``expr`` match type."
msgstr "``strict`` または``regexp`` マッチ・タイプの場合はメトリック名に基づいて、``expr`` マッチ・タイプの場合はその他のメトリック属性に基づいて、メトリックを包含または除外するように構成できます。"

#: ../../gdi/opentelemetry/components.rst:206
msgid "``groupbyattrs``"
msgstr "``groupbyattrs``"

#: ../../gdi/opentelemetry/components.rst:207
msgid "Reassociates spans, log records, and metric data points to a resource that matches with the specified attributes. As a result, all spans, log records, or metric data points with the same values for the specified attributes are grouped under the same resource."
msgstr "スパン、ログ・レコード、およびメトリック・データ・ポイントを、指定された属性に一致するリソースに関連付け直す。その結果、指定された属性に同じ値を持つすべてのスパン、ログレコード、またはメトリックデータポイントは、同じリソースの下にグループ化されます。"

#: ../../gdi/opentelemetry/components.rst:209
msgid ":ref:`kubernetes-attributes-processor` (``k8sattributes``)"
msgstr ":ref:`kubernetes-attributes-processor` (``k8sattributes``)"

#: ../../gdi/opentelemetry/components.rst:210
msgid "Allows automatic tagging of spans, metrics, and logs with Kubernetes metadata. Formerly known as ``k8s_tagger``."
msgstr "スパン、メトリクス、ログにKubernetesメタデータによる自動タグ付けが可能。旧称``k8s_tagger`` 。"

#: ../../gdi/opentelemetry/components.rst:212
msgid "``memory_limiter``"
msgstr "``memory_limiter``"

#: ../../gdi/opentelemetry/components.rst:213
msgid "Prevents out of memory situations on the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションでのメモリ不足を防止します。"

#: ../../gdi/opentelemetry/components.rst:215
msgid "``metricstransform``"
msgstr "``metricstransform``"

#: ../../gdi/opentelemetry/components.rst:216
msgid "Renames metrics, and adds, renames, or deletes label keys and values."
msgstr "メトリクスの名前を変更し、ラベル・キーと値を追加、変更、または削除します。"

#: ../../gdi/opentelemetry/components.rst:218
msgid "``probabilisticsampler``"
msgstr "``probabilisticsampler``"

#: ../../gdi/opentelemetry/components.rst:219
msgid "Provides samples based on hash values determined by trace IDs."
msgstr "トレースIDによって決定されるハッシュ値に基づいてサンプルを提供する。"

#: ../../gdi/opentelemetry/components.rst:221
msgid ":ref:`resource-processor` (``resource``)"
msgstr ":ref:`resource-processor` (``resource``)"

#: ../../gdi/opentelemetry/components.rst:222
msgid "Applies changes to resource attributes. Attributes represent actions that can be applied on resources."
msgstr "リソース属性の変更を適用する。属性は、リソースに適用できるアクションを表す。"

#: ../../gdi/opentelemetry/components.rst:224
msgid ":ref:`resourcedetection-processor` (``resourcedetection``)"
msgstr ":ref:`resourcedetection-processor` (``resourcedetection``)"

#: ../../gdi/opentelemetry/components.rst:225
msgid "Detects resource information from the host, in a format that conforms to the OpenTelemetry resource semantic conventions, and appends or overrides the resource value in telemetry data with this information."
msgstr "ホストからのリソース情報を、OpenTelemetry リソースのセマンティック規約に準拠したフォーマットで検出し、テレメトリデータのリソース値をこの情報で追加または上書きします。"

#: ../../gdi/opentelemetry/components.rst:227
msgid "``routing``"
msgstr "``routing``"

#: ../../gdi/opentelemetry/components.rst:228
msgid "Reads a header from the incoming HTTP request or reads a resource attribute, and then directs the trace information to specific exporters based on the value."
msgstr "受信 HTTP リクエストからヘッダーを読み取るか、リソース属性を読み取り、その値に基づいてトレース情報を特定のエクスポータに向ける。"

#: ../../gdi/opentelemetry/components.rst:230
msgid "``span``"
msgstr "``span``"

#: ../../gdi/opentelemetry/components.rst:231
msgid "Modifies either the span name or attributes of a span based on the span name."
msgstr "スパン名またはスパン名に基づくスパンの属性を変更する。"

#: ../../gdi/opentelemetry/components.rst:233
msgid "``tail_sampling``"
msgstr "``tail_sampling``"

#: ../../gdi/opentelemetry/components.rst:234
msgid "Samples traces based on a set of defined policies. All spans for a given trace must be received by the same Collector instance for effective sampling decisions."
msgstr "定義されたポリシーのセットに基づいてトレースをサンプルする。効果的なサンプリング決定を行うには、特定のトレースのすべてのスパンを同じコレクターインスタンスが受信する必要があります。"

#: ../../gdi/opentelemetry/components.rst:236
msgid ":ref:`transform-processor` (``transform``)"
msgstr ":ref:`transform-processor` (``transform``)"

#: ../../gdi/opentelemetry/components.rst:237
msgid "Modifies telemetry based on OpenTelemetry Transformation Language functions."
msgstr "OpenTelemetry Transformation Language 関数に基づいてテレメトリを変更します。"

#: ../../gdi/opentelemetry/components.rst:258
msgid "``file``"
msgstr "``file``"

#: ../../gdi/opentelemetry/components.rst:259
msgid "Writes pipeline data to a JSON file in Protobuf JSON encoding using the OpenTelemetry protocol."
msgstr "パイプラインのデータを、OpenTelemetry プロトコルを使用して、Protobuf JSON エンコーディングの JSON ファイルに書き込みます。"

#: ../../gdi/opentelemetry/components.rst:262
msgid "Exports metrics, logs, and traces to Kafka using a synchronous producer."
msgstr "同期プロデューサーを使用して、メトリクス、ログ、トレースをKafkaにエクスポートします。"

#: ../../gdi/opentelemetry/components.rst:264
msgid ":ref:`logging-exporter` (``logging``)"
msgstr ":ref:`logging-exporter` (``logging``)"

#: ../../gdi/opentelemetry/components.rst:265
msgid "Exports data to the console. By default, ``logging`` doesn't send its output to Windows Event Viewer. Run the Splunk Distribution of OpenTelemetry Collector directly from the PowerShell terminal to send output to the Windows Event Viewer."
msgstr "コンソールにデータをエクスポートする。デフォルトでは、``logging`` 、その出力はWindowsイベントビューアに送信されない。OpenTelemetry Collector の Splunk ディストリビューションを PowerShell ターミナルから直接実行して、Windows イベントビューアに出力を送信します。"

#: ../../gdi/opentelemetry/components.rst:268
msgid "Exports data through gRPC using the OTLP format. By default, this exporter requires TLS and provides queued retry capabilities."
msgstr "OTLPフォーマットでgRPCを通してデータをエクスポートします。デフォルトでは、このエクスポータはTLSを必要とし、キュー再試行機能を提供する。"

#: ../../gdi/opentelemetry/components.rst:269 ../../gdi/opentelemetry/components.rst:272
msgid "Metrics, traces"
msgstr "メトリクス、トレース"

#: ../../gdi/opentelemetry/components.rst:270
msgid "``otlphttp``"
msgstr "``otlphttp``"

#: ../../gdi/opentelemetry/components.rst:271
msgid "Exports traces and metrics in OTLP format over the HTTP protocol."
msgstr "HTTPプロトコルを介してOTLP形式でトレースとメトリクスをエクスポートします。"

#: ../../gdi/opentelemetry/components.rst:273 ../../gdi/opentelemetry/components.rst:279
msgid ":ref:`splunk-apm-exporter` (``sapm``)"
msgstr ":ref:`splunk-apm-exporter` (``sapm``)"

#: ../../gdi/opentelemetry/components.rst:274
msgid "Allows the Splunk Distribution of OpenTelemetry Collector to export traces from multiple nodes or services in a single batch."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションで、複数のノードまたはサービスからのトレースを 1 つのバッチでエクスポートできるようにします。"

#: ../../gdi/opentelemetry/components.rst:276
msgid ":ref:`signalfx-exporter` (``signalfx``)"
msgstr ":ref:`signalfx-exporter` (``signalfx``)"

#: ../../gdi/opentelemetry/components.rst:277
msgid "Sends metrics, events, and trace correlation to Splunk Observability Cloud."
msgstr "メトリクス、イベント、トレース相関を Splunk Observability Cloud に送信します。"

#: ../../gdi/opentelemetry/components.rst:278
msgid "Logs (events), metrics, traces (trace to metric correlation only)"
msgstr "ログ（イベント）、メトリクス、トレース（トレースとメトリクスの相関のみ）"

#: ../../gdi/opentelemetry/components.rst:280
msgid "Exports traces from multiple nodes or services in a single batch."
msgstr "複数のノードまたはサービスのトレースを一括してエクスポートします。"

#: ../../gdi/opentelemetry/components.rst:282
msgid ":ref:`splunk-hec-exporter` (``splunk_hec``)"
msgstr ":ref:`splunk-hec-exporter` (``splunk_hec``)"

#: ../../gdi/opentelemetry/components.rst:283
msgid "Sends telemetry to a Splunk HEC endpoint."
msgstr "テレメトリを Splunk HEC エンドポイントに送信する。"

#: ../../gdi/opentelemetry/components.rst:301
msgid "``docker_observer``"
msgstr "``docker_observer``"

#: ../../gdi/opentelemetry/components.rst:302
msgid "Detects and reports container endpoints discovered through the Docker API. Only containers that are in the state of ``Running`` and not ``Paused`` emit endpoints."
msgstr "Docker APIを通じて検出されたコンテナエンドポイントを検出し、報告します。``Paused`` ではなく、``Running`` の状態にあるコンテナだけがエンドポイントを発する。"

#: ../../gdi/opentelemetry/components.rst:303
msgid "``ecs_observer``"
msgstr "``ecs_observer``"

#: ../../gdi/opentelemetry/components.rst:304
msgid "Uses the ECS and EC2 API to discover Prometheus scrape targets from all running tasks and filter them based on service names, task definitions, and container labels. Only compatible with the Prometheus receiver."
msgstr "ECSとEC2のAPIを使用して、実行中のすべてのタスクからPrometheusのスクレイプターゲットを検出し、サービス名、タスク定義、コンテナラベルに基づいてフィルタリングする。プロメテウス受信機のみ対応。"

#: ../../gdi/opentelemetry/components.rst:305
msgid "``file_storage``"
msgstr "``file_storage``"

#: ../../gdi/opentelemetry/components.rst:306
msgid "Persists state to the local file system. Requires read and write access to a diectory."
msgstr "ローカルファイルシステムに状態を保持する。ディレクトリへの読み書きアクセスが必要。"

#: ../../gdi/opentelemetry/components.rst:307
msgid "``health_check``"
msgstr "``health_check``"

#: ../../gdi/opentelemetry/components.rst:308
msgid "Activates an HTTP URL that can be probed to check the status of the OpenTelemetry Collector. You can also use this extension as a liveness or readiness probe on Kubernetes."
msgstr "OpenTelemetry Collector のステータスをチェックするためにプローブできる HTTP URL をアクティブにします。このエクステンションは、Kubernetes上の有効性または準備状況のプローブとして使用することもできる。"

#: ../../gdi/opentelemetry/components.rst:309
msgid "``http_forwarder``"
msgstr "``http_forwarder``"

#: ../../gdi/opentelemetry/components.rst:310
msgid "Accepts HTTP requests and optionally adds headers and forwards them. The RequestURIs of the original requests are preserved by the extension."
msgstr "HTTPリクエストを受け付け、オプションでヘッダーを追加して転送する。オリジナルリクエストのRequestURIは拡張によって保持される。"

#: ../../gdi/opentelemetry/components.rst:311
msgid "``host_observer``"
msgstr "``host_observer``"

#: ../../gdi/opentelemetry/components.rst:312
msgid "Looks at the current host for listening network endpoints. Uses the /proc file system and requires the ``SYS_PTRACE`` and ``DAC_READ_SEARCH`` capabilities so that it can determine what processes own the listening sockets. See :ref:`receiver-creator-receiver` for more information."
msgstr "リッスンしているネットワーク・エンドポイントについて、現在のホストを調べる。procファイルシステムを使用し、どのプロセスがリスニング・ソケットを所有しているかを判断できるように、``SYS_PTRACE`` と``DAC_READ_SEARCH`` の機能を必要とする。詳しくは:ref:`receiver-creator-receiver` 。"

#: ../../gdi/opentelemetry/components.rst:313
msgid "``k8s_observer``"
msgstr "``k8s_observer``"

#: ../../gdi/opentelemetry/components.rst:314
msgid "Uses the Kubernetes API to discover pods running on the local node. See :ref:`receiver-creator-receiver` for more information."
msgstr "Kubernetes APIを使用して、ローカルノードで動作しているPodを検出します。詳しくは:ref:`receiver-creator-receiver` 。"

#: ../../gdi/opentelemetry/components.rst:315
msgid "``memory_ballast``"
msgstr "``memory_ballast``"

#: ../../gdi/opentelemetry/components.rst:316
msgid "Configures the memory ballast for the Collector process, either as a size in megabytes or as a size expressed as a percentage of the total memory. Sufficient ballast enhances the stability of Collector deployments."
msgstr "コレクタプロセスのメモリバラストを、メガバイト単位または総メモリに対するパーセンテージで設定します。十分なバラストはコレクター配備の安定性を高める。"

#: ../../gdi/opentelemetry/components.rst:317
msgid "``pprof``"
msgstr "``pprof``"

#: ../../gdi/opentelemetry/components.rst:318
msgid "Activates the golang ``net/http/pprof`` endpoint, which is used to collect performance profiles and investigate issues with a service."
msgstr "golang``net/http/pprof`` エンドポイントを有効にします。このエンドポイントは、パフォーマンスプロファイルを収集し、サービスの問題を調査するために使用されます。"

#: ../../gdi/opentelemetry/components.rst:319
msgid "``smartagent``"
msgstr "``smartagent``"

#: ../../gdi/opentelemetry/components.rst:320
msgid "Provides a mechanism to set configuration options that are applicable to all instances of the Smart Agent receiver. Allows to migrate your existing Smart Agent configuration to the Splunk Distribution of OpenTelemetry Collector."
msgstr "スマートエージェントレシーバのすべてのインスタンスに適用される設定オプションを設定するメカニズムを提供します。既存のスマートエージェント設定を OpenTelemetry Collector の Splunk ディストリビューションに移行できます。"

#: ../../gdi/opentelemetry/components.rst:321
msgid "``zpages``"
msgstr "``zpages``"

#: ../../gdi/opentelemetry/components.rst:322
msgid "Activates an extension that serves zPages, an HTTP endpoint that provides live data for debugging different components."
msgstr "さまざまなコンポーネントをデバッグするためのライブデータを提供する HTTP エンドポイントである zPages を提供する拡張機能を有効にします。"

#: ../../gdi/opentelemetry/components.rst:331
msgid "Read on to learn how to:"
msgstr "その方法については、こちらをお読みいただきたい："

#: ../../gdi/opentelemetry/components.rst:333
msgid ":ref:`otel-install-platform`."
msgstr ":ref:`otel-install-platform`."

#: ../../gdi/opentelemetry/components.rst:334
msgid ":ref:`otel-configuration`."
msgstr ":ref:`otel-configuration`."

#: ../../gdi/opentelemetry/components/attributes-processor.rst:-1
msgid "Use the attributes processor to transform, redact, update, hash, or delete attributes of spans, metrics, or logs. Read on to learn how to configure the component."
msgstr "属性プロセッサを使用して、スパン、メトリクス、またはログの属性を変換、再編集、更新、ハッシュ、または削除します。コンポーネントの設定方法については、こちらをお読みください。"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:5
msgid "Attributes processor"
msgstr "属性プロセッサ"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:10
msgid "The attributes processor is an OpenTelemetry Collector component that modifies the attributes of spans, metrics, or logs through actions. You can combine actions in a single processor instance to run complex operations. Use cases include, among others, obfuscating sensitive information, copying values to new keys, and backfilling attributes."
msgstr "アトリビュート・プロセッサはOpenTelemetry Collectorのコンポーネントで、アクションによってスパン、メトリクス、ログのアトリビュートを変更します。単一のプロセッサー・インスタンスでアクションを組み合わせて、複雑な操作を実行することができる。使用例としては、機密情報の難読化、新しいキーへの値のコピー、属性の埋め戻しなどがある。"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:12
msgid "You can apply any of the following actions on collected attributes of spans, metrics, or logs:"
msgstr "スパン、メトリクス、またはログの収集された属性に対して、次のいずれかのアクションを適用できます："

#: ../../gdi/opentelemetry/components/attributes-processor.rst:19 ../../gdi/opentelemetry/components/resource-processor.rst:21
msgid "Action"
msgstr "アクション"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:21 ../../gdi/opentelemetry/components/resource-processor.rst:23
msgid "``insert``"
msgstr "``insert``"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:22
msgid "Inserts a new attribute in data lacking a specific ``key``, which must have either a ``value``, ``from_attribute``, or ``from_context`` defined."
msgstr "特定の``key`` を欠くデータに新しい属性を挿入する。このデータには``value``,``from_attribute``,``from_context`` のいずれかが定義されていなければならない。"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:23 ../../gdi/opentelemetry/components/resource-processor.rst:25
msgid "``update``"
msgstr "``update``"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:24
msgid "Updates an attribute in data that has a specific ``key``, which must have either a ``value``, ``from_attribute``, or ``from_context`` defined."
msgstr "``value``,``from_attribute``,``from_context`` のいずれかが定義されていなければならない、特定の``key`` を持つデータの属性を更新する。"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:25 ../../gdi/opentelemetry/components/resource-processor.rst:27
msgid "``upsert``"
msgstr "``upsert``"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:26
msgid "Updates or insert an attribute in data depending on whether a ``key`` exists or not. The ``key`` must have either a ``value``, ``from_attribute``, or ``from_context`` defined."
msgstr "``key`` が存在するかどうかに応じて、データ内の属性を更新または挿入する。``key`` には、``value`` 、``from_attribute`` 、``from_context`` のいずれかが定義されていなければならない。"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:27 ../../gdi/opentelemetry/components/resource-processor.rst:29
msgid "``delete``"
msgstr "``delete``"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:28
msgid "Deletes an attribute from the data that has a specific ``key`` or ``pattern``."
msgstr "特定の``key`` または``pattern`` を持つ属性をデータから削除します。"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:29 ../../gdi/opentelemetry/components/resource-processor.rst:31
msgid "``hash``"
msgstr "``hash``"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:30
msgid "Hashes the value of an existing attribute that has a specific ``key`` or ``pattern`` using the SHA1 algorithm."
msgstr "特定の``key`` または``pattern`` を持つ既存の属性の値を、SHA1 アルゴリズムを使ってハッシュします。"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:31 ../../gdi/opentelemetry/components/resource-processor.rst:33
msgid "``extract``"
msgstr "``extract``"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:32
msgid "Extracts values using regular expression rules. A ``pattern`` is required."
msgstr "正規表現ルールを使用して値を抽出します。``pattern`` 。"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:33 ../../gdi/opentelemetry/components/resource-processor.rst:35
msgid "``convert``"
msgstr "``convert``"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:34
msgid "Converts an attribute to another type, as specified in the ``converted_type`` parameter, which can be either ``int``, ``double``, or ``string``."
msgstr "``int``,``double``,``string`` のいずれかである``converted_type`` パラメータで指定されるように、属性を別のタイプに変換する。"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:36
msgid "To include or exclude whole spans, logs, or metrics, use the filter processor. See :ref:`filter-processor`."
msgstr "スパン全体、ログ、またはメトリックを含めたり除外したりするには、フィルタ・プロセッサを使用します。:ref:`filter-processor` を参照。"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:41
msgid "By default, the Splunk Distribution of OpenTelemetry Collector includes the attributes processor. To activate the attributes processor for a pipeline, add ``attributes`` to the ``processors`` section of the configuration. For example:"
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションには属性プロセッサが含まれています。パイプラインのアトリビュート・プロセッサを有効にするには、コンフィギュレーションの``processors`` セクションに``attributes`` を追加します。例えば、こうだ："

#: ../../gdi/opentelemetry/components/attributes-processor.rst:67
msgid "You can then add the attributes processors to any compatible pipeline. For example:"
msgstr "その後、互換性のあるパイプラインにアトリビュート・プロセッサーを追加することができる。例えば、こうだ："

#: ../../gdi/opentelemetry/components/attributes-processor.rst:99
msgid "To include or exclude attributes use any of the following properties:"
msgstr "属性をインクルードまたは除外するには、以下のプロパティのいずれかを使用します："

#: ../../gdi/opentelemetry/components/attributes-processor.rst:101
msgid "``services``"
msgstr "``services``"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:102
msgid "``resources``"
msgstr "``resources``"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:103
msgid "``libraries``"
msgstr "``libraries``"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:104
msgid "``span_names``"
msgstr "``span_names``"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:105
msgid "``log_bodies``"
msgstr "``log_bodies``"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:106
msgid "``log_severity_texts``"
msgstr "``log_severity_texts``"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:107
msgid "``metric_names``"
msgstr "``metric_names``"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:110
msgid "The following example shows how to apply a ``delete`` action to specific services:"
msgstr "次の例は、特定のサービスに``delete`` ："

#: ../../gdi/opentelemetry/components/attributes-processor.rst:122
msgid "For a complete list of parameters, see :ref:`attributes-processor-settings`."
msgstr "パラメータの完全なリストについては、:ref:`attributes-processor-settings` を参照のこと。"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:125 ../../gdi/opentelemetry/components/batch-processor.rst:20 ../../gdi/opentelemetry/components/databricks-receiver.rst:36 ../../gdi/opentelemetry/components/filter-processor.rst:109 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:61 ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:29 ../../gdi/opentelemetry/components/logging-exporter.rst:76 ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:32 ../../gdi/opentelemetry/components/oracledb-receiver.rst:48 ../../gdi/opentelemetry/components/postgresql-receiver.rst:36
#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:36 ../../gdi/opentelemetry/components/resource-processor.rst:55 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:68 ../../gdi/opentelemetry/components/signalfx-exporter.rst:22 ../../gdi/opentelemetry/components/signalfx-receiver.rst:24 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:34 ../../gdi/opentelemetry/components/smartagent-receiver.rst:31 ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:17 ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:30 ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:31
#: ../../gdi/opentelemetry/components/transform-processor.rst:100 ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:33
msgid "Sample configurations"
msgstr "サンプル構成"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:127
msgid "The following sample configurations show how to perform different actions on attributes."
msgstr "以下のサンプル設定は、属性に対して異なるアクションを実行する方法を示しています。"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:129
msgid "For a complete list of examples, see the configuration snippets in :new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/processor/attributesprocessor/testdata/config.yaml`."
msgstr "例の完全なリストは、:new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/processor/attributesprocessor/testdata/config.yaml` のコンフィギュレーション・スニペットを参照。"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:132
msgid "Remove or obfuscate sensitive information from logs"
msgstr "ログから機密情報を削除または難読化する"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:134
msgid "The following example shows how to remove a token attribute, hash an email, and redact a password in logs:"
msgstr "次の例は、トークン属性を削除し、電子メールをハッシュ化し、ログ中のパスワードを再編集する方法を示しています："

#: ../../gdi/opentelemetry/components/attributes-processor.rst:152
msgid "Create a new attribute based on the value of another"
msgstr "別の属性の値に基づいて新しい属性を作成する。"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:154
msgid "The following example shows how to create a new attribute based on the value of another attribute in spans:"
msgstr "次の例は、スパン内の別の属性の値に基づいて新しい属性を作成する方法を示しています："

#: ../../gdi/opentelemetry/components/attributes-processor.rst:167
msgid "Backfill spans that are missing an attribute"
msgstr "属性が欠けているスパンを埋め戻す"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:169
msgid "The following example shows how to backfill spans that are missing an attribute:"
msgstr "次の例は、属性が欠けているスパンを埋め戻す方法を示しています："

#: ../../gdi/opentelemetry/components/attributes-processor.rst:185
msgid "More examples and scenarios"
msgstr "その他の例とシナリオ"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:187
msgid "See also the following scenarios:"
msgstr "以下のシナリオも参照のこと："

#: ../../gdi/opentelemetry/components/attributes-processor.rst:189 ../../gdi/opentelemetry/configure-the-collector.rst:32
msgid ":ref:`configure-remove`"
msgstr ":ref:`configure-remove`"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:190
msgid ":ref:`collector-remove-data`"
msgstr ":ref:`collector-remove-data`"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:195 ../../gdi/opentelemetry/components/batch-processor.rst:59 ../../gdi/opentelemetry/components/databricks-receiver.rst:77 ../../gdi/opentelemetry/components/filter-processor.rst:383 ../../gdi/opentelemetry/components/fluentd-receiver.rst:45 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:321 ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:191 ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:309 ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:93 ../../gdi/opentelemetry/components/logging-exporter.rst:89
#: ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:75 ../../gdi/opentelemetry/components/oracledb-receiver.rst:86 ../../gdi/opentelemetry/components/postgresql-receiver.rst:72 ../../gdi/opentelemetry/components/prometheus-receiver.rst:117 ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:144 ../../gdi/opentelemetry/components/resource-processor.rst:93 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:433 ../../gdi/opentelemetry/components/signalfx-exporter.rst:322 ../../gdi/opentelemetry/components/signalfx-receiver.rst:53 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:67
#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:80 ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:88 ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:292 ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:82 ../../gdi/opentelemetry/components/transform-processor.rst:159 ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:151
msgid "Settings"
msgstr "設定"

#: ../../gdi/opentelemetry/components/attributes-processor.rst:197 ../../gdi/opentelemetry/components/transform-processor.rst:161
msgid "The following table shows the configuration options for the attributes processor:"
msgstr "次の表は、属性プロセッサの設定オプションを示します："

#: ../../gdi/opentelemetry/components/batch-processor.rst:-1
msgid "Use the batch processor to batch telemetry and reduce network usage by the OpenTelemetry Collector. Read on to learn how to configure the component."
msgstr "バッチプロセッサを使用してテレメトリをバッチ化し、OpenTelemetry Collectorのネットワーク使用量を減らします。コンポーネントの設定方法については、こちらをお読みください。"

#: ../../gdi/opentelemetry/components/batch-processor.rst:5
msgid "Batch processor"
msgstr "バッチプロセッサー"

#: ../../gdi/opentelemetry/components/batch-processor.rst:10
msgid "The batch processor is an OpenTelemetry Collector component that batches and compresses spans, metrics, or logs based on size or time. Batching can help reduce the number of submission requests made by exporters, and help regulate the flow of telemetry from multiple or single receivers in a pipeline."
msgstr "バッチ・プロセッサはOpenTelemetry Collectorのコンポーネントで、スパン、メトリクス、またはログをサイズまたは時間に基づいてバッチ化し、圧縮します。バッチ処理は、輸出業者による提出要求の数を減らし、パイプライン内の複数または単一のレシーバーからのテレメトリの流れを調整するのに役立つ。"

#: ../../gdi/opentelemetry/components/batch-processor.rst:15
msgid "By default, the Splunk Distribution of OpenTelemetry Collector includes the batch processor in all the predefined pipelines when deployed in host monitoring (agent) or data forwarding (gateway) modes. See :ref:`otel-deployment-mode` for more information."
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションは、ホストモニタリング (エージェント) またはデータ転送 (ゲートウェイ) モードでデプロイされた場合、すべての定義済みパイプラインにバッチプロセッサを含みます。詳しくは:ref:`otel-deployment-mode` 。"

#: ../../gdi/opentelemetry/components/batch-processor.rst:17
msgid "To ensure that batching happens after data sampling and filtering, add the batch processor after the ``memory_limiter`` processor and other sampling processors."
msgstr "データサンプリングとフィルタリングの後にバッチ処理が行われるようにするには、``memory_limiter`` プロセッサと他のサンプリングプロセッサの後にバッチプロセッサを追加する。"

#: ../../gdi/opentelemetry/components/batch-processor.rst:22
msgid "The Splunk Distribution of OpenTelemetry Collector adds the batch processor with the default configuration:"
msgstr "OpenTelemetry Collector の Splunk ディストリビューションでは、デフォルトの設定でバッチプロセッサが追加されます："

#: ../../gdi/opentelemetry/components/batch-processor.rst:29
msgid "The following example shows how to configure the batch processor to send batches after 5,000 spans, data points, or logs have been collected. The timeout setting works as a fallback condition in case the size condition isn't met."
msgstr "次の例は、5,000スパン、データポイント、またはログが収集された後にバッチを送信するようにバッチプロセッサを設定する方法を示している。タイムアウト設定は、サイズ条件が満たされなかった場合の予備条件として機能する。"

#: ../../gdi/opentelemetry/components/batch-processor.rst:39
msgid "Batching by metadata"
msgstr "メタデータによるバッチ処理"

#: ../../gdi/opentelemetry/components/batch-processor.rst:41
msgid "Starting from version 0.78 of the OpenTelemetry Collector, you can batch telemetry based on metadata. For example:"
msgstr "OpenTelemetryコレクターのバージョン0.78から、メタデータに基づいてテレメトリをバッチ処理できるようになりました。例えば、こうだ："

#: ../../gdi/opentelemetry/components/batch-processor.rst:54
msgid "To use metadata as batching criteria, add the ``include_metadata: true`` setting to your receivers's configuration, so that the batch processor can use the available metadata keys."
msgstr "メタデータをバッチ基準として使用するには、``include_metadata: true`` の設定を受信機の設定に追加し、バッチプロセッサーが使用可能なメタデータキーを使用できるようにする。"

#: ../../gdi/opentelemetry/components/batch-processor.rst:56
msgid "Batching by metadata can increase memory consumption, as each metadata combination triggers the allocation of a new background task in the Collector. The maximum number of distinct combinations is defined using the ``metadata_cardinality_limit`` setting, which defaults to ``1000``."
msgstr "メタデータによるバッチ処理は、各メタデータの組み合わせがCollectorの新しいバックグラウンド・タスクの割り当てをトリガーするため、メモリ消費量が増加する可能性があります。``1000``異なる組み合わせの最大数は、``metadata_cardinality_limit`` の設定で定義される。"

#: ../../gdi/opentelemetry/components/batch-processor.rst:61
msgid "The following table shows the configuration options for the batch processor:"
msgstr "次の表は、バッチプロセッサーの設定オプションを示している："

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:-1
msgid "The Databricks receiver allows the Splunk Distribution of OpenTelemetry Collector to collect metrics from Databricks using the Databricks API."
msgstr "Databricks レシーバーを使用すると、Splunk Distribution of OpenTelemetry Collector で Databricks API を使用して Databricks からメトリックを収集できます。"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:5
msgid "Databricks receiver"
msgstr "データブロック・レシーバー"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:10
msgid "The Databricks receiver allows the Splunk Distribution of OpenTelemetry Collector to collect metrics from Databricks using the Databricks API. Use this integration to view and monitor the health of your Databricks clusters. The receiver also generates metrics from the Spark subsystem running in a Databricks instance. The supported pipeline type is ``metrics``."
msgstr "Databricks レシーバーを使用すると、Splunk Distribution of OpenTelemetry Collector で Databricks API を使用して Databricks からメトリックを収集できます。この統合を使用して、Databricksクラスタの健全性を表示および監視します。レシーバは、Databricksインスタンスで実行されているSparkサブシステムからのメトリクスも生成します。サポートされるパイプライン・タイプは``metrics`` です。"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:15
msgid "After you configure the integration, you can access the following features:"
msgstr "統合を設定すると、以下の機能にアクセスできるようになります："

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:17
msgid "Visualize physical servers, virtual machines, AWS instances, and other resources in your environment that are visible to Splunk Observability Cloud. For information about navigators, see :ref:`use-navigators-imm`."
msgstr "物理サーバー、仮想マシン、AWS インスタンスなど、Splunk Observability Cloud から見える環境のリソースを可視化します。ナビゲーターについては:ref:`use-navigators-imm` を参照。"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:19
msgid "Search for metrics sent by the receiver. For information about Metric Finder, see :ref:`metrics-finder-and-metadata-catalog`."
msgstr "受信者が送信したメトリクスを検索する。Metric Finder については:ref:`metrics-finder-and-metadata-catalog` を参照。"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:24 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:30 ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:17 ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:20 ../../gdi/opentelemetry/components/oracledb-receiver.rst:16 ../../gdi/opentelemetry/components/postgresql-receiver.rst:24 ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:24 ../../gdi/opentelemetry/components/resource-processor.rst:43 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:22 ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:19
#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:21
msgid "Follow these steps to configure and activate the component:"
msgstr "以下の手順に従って、コンポーネントの設定とアクティベーションを行ってください："

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:28 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:34 ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:21 ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:24 ../../gdi/opentelemetry/components/oracledb-receiver.rst:20 ../../gdi/opentelemetry/components/postgresql-receiver.rst:28 ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:28 ../../gdi/opentelemetry/components/resource-processor.rst:47 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:26 ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:23
#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:25
msgid ":ref:`otel-install-linux`"
msgstr ":ref:`otel-install-linux`"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:29 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:35 ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:22 ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:25 ../../gdi/opentelemetry/components/oracledb-receiver.rst:21 ../../gdi/opentelemetry/components/postgresql-receiver.rst:29 ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:29 ../../gdi/opentelemetry/components/resource-processor.rst:48 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:27 ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:24
#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:26
msgid ":ref:`otel-install-windows`"
msgstr ":ref:`otel-install-windows`"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:30 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:36 ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:23 ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:26 ../../gdi/opentelemetry/components/oracledb-receiver.rst:22 ../../gdi/opentelemetry/components/postgresql-receiver.rst:30 ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:30 ../../gdi/opentelemetry/components/resource-processor.rst:49 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:28 ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:25
#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:27
msgid ":ref:`otel-install-k8s`"
msgstr ":ref:`otel-install-k8s`"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:32
msgid "Configure the Databricks receiver as described in the next section."
msgstr "次のセクションで説明するように Databricks レシーバを設定する。"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:33 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:39 ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:26 ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:29 ../../gdi/opentelemetry/components/oracledb-receiver.rst:25 ../../gdi/opentelemetry/components/postgresql-receiver.rst:33 ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:33 ../../gdi/opentelemetry/components/resource-processor.rst:52 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:31 ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:28
#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:30
msgid "Restart the Collector."
msgstr "コレクタを再起動する。"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:38
msgid "To activate the Databricks receiver, add ``databricks`` to the ``receivers`` section of your configuration file with all the mandatory fields, as shown in the following example:"
msgstr "Databricks レシーバーをアクティブにするには、設定ファイルの``receivers`` セクションに``databricks`` を追加します："

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:52 ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:33 ../../gdi/opentelemetry/components/oracledb-receiver.rst:74 ../../gdi/opentelemetry/components/postgresql-receiver.rst:61 ../../gdi/opentelemetry/components/prometheus-receiver.rst:37 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:53 ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:53
msgid "To complete the configuration, include the receiver in the ``metrics`` pipeline of the ``service`` section of your configuration file. For example:"
msgstr "コンフィギュレーションを完了するには、コンフィギュレーションファイルの``service`` セクションの``metrics`` パイプラインにレシーバーを含める。例えば、こうだ："

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:65
msgid "Spark subsystem configuration"
msgstr "スパークサブシステムの構成"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:67
msgid "To obtain the Spark settings for the receiver configuration, run the following Scala notebook and copy the values into your configuration:"
msgstr "レシーバー設定のSpark設定を取得するには、以下のScalaノートブックを実行し、設定に値をコピーします："

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:79
msgid "The following table shows the configuration options for the Databricks receiver:"
msgstr "以下の表に Databricks レシーバーの設定オプションを示します："

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:88
msgid "``instance_name``"
msgstr "``instance_name``"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:89
msgid "A string representing the name of the instance. This value gets set as a ``databricks.instance.name`` resource attribute."
msgstr "インスタンス名を表す文字列。この値は``databricks.instance.name`` リソース属性として設定される。"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:92
msgid "The protocol (http or https), host name, and port for the Databricks API, without a trailing slash."
msgstr "Databricks API のプロトコル (http または https)、ホスト名、ポートを指定します。"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:94
msgid "``token``"
msgstr "``token``"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:95
msgid "An access token to authenticate to the Databricks API. See :new-page:`Authentication using Databricks personal access tokens <https://docs.databricks.com/dev-tools/api/latest/authentication.html>` on the Databricks documentation site for more information."
msgstr "Databricks API を認証するためのアクセストークン。詳細は Databricks ドキュメントサイトの:new-page:`Authentication using Databricks personal access tokens<https://docs.databricks.com/dev-tools/api/latest/authentication.html>` を参照してください。"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:97
msgid "``spark_org_id``"
msgstr "``spark_org_id``"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:98
msgid "Spark Org ID. See :ref:`spark-substytem-databricks` for information on how to found this value."
msgstr "スパーク組織IDこの値の見つけ方については、:ref:`spark-substytem-databricks` を参照のこと。"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:100
msgid "``spark_endpoint``"
msgstr "``spark_endpoint``"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:101
msgid "Spark API endpoint, composed of protocol, host name, and, optionally, the port. See :ref:`spark-substytem-databricks` for information on how to found this value."
msgstr "Spark API のエンドポイント。プロトコル、ホスト名、そしてオプションでポート。この値の見つけ方については、:ref:`spark-substytem-databricks` を参照のこと。"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:103
msgid "``spark_ui_port``"
msgstr "``spark_ui_port``"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:104
msgid "Spark UI Port. Usually, the port is ``40001``. See :ref:`spark-substytem-databricks` for information on how to found this value."
msgstr "スパークUIポート。通常、ポートは``40001`` 。この値の見つけ方については、:ref:`spark-substytem-databricks` を参照のこと。"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:106
msgid "``collection_interval``"
msgstr "``collection_interval``"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:107
msgid "How often this receiver fetches information from the Databricks API. Must be a string readable by ``time.ParseDuration``. The default value is ``30s``."
msgstr "このレシーバが Databricks API から情報を取得する頻度。``time.ParseDuration`` で読み取り可能な文字列でなければならない。デフォルト値は``30s`` 。"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:109
msgid "``max_results``"
msgstr "``max_results``"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:110
msgid "The maximum number of items to return per API call. The default value is ``25``, which is the maximum value. If set explicitly, the API requires a value greater than ``0``, and less than or equal to ``25``."
msgstr "APIコールごとに返す項目の最大数。デフォルト値は``25`` で、これは最大値である。明示的に設定された場合、APIは``0`` を超え、``25`` 以下の値を必要とする。"

#: ../../gdi/opentelemetry/components/databricks-receiver.rst:116 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:240 ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:202 ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:320 ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:104 ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:86 ../../gdi/opentelemetry/components/postgresql-receiver.rst:83
msgid "The following metrics, resource attributes, and attributes are available."
msgstr "以下のメトリクス、リソース属性、および属性が使用できます。"

#: ../../_includes/activate-deactivate-native-metrics.rst:2
msgid "Activate or deactivate specific metrics"
msgstr "特定のメトリクスをアクティブまたは非アクティブにする"

#: ../../_includes/activate-deactivate-native-metrics.rst:4
msgid "You can activate or deactivate specific metrics by setting the ``enabled`` field in the ``metrics`` section for each metric. For example:"
msgstr "各メトリクスの``metrics`` セクションの``enabled`` フィールドを設定することで、特定のメトリクスをアクティブまたは非アクティブにできます。例えば、こうだ："

#: ../../_includes/activate-deactivate-native-metrics.rst:16
msgid "The following is an example of host metrics receiver configuration with activated metrics:"
msgstr "以下は、アクティブ化されたメトリクスを持つホスト・メトリクス・レシーバの構成例です："

#: ../../_includes/activate-deactivate-native-metrics.rst:28
msgid "Deactivated metrics aren't sent to Splunk Observability Cloud."
msgstr "無効化されたメトリクスは Splunk Observability Cloud に送信されません。"

#: ../../gdi/opentelemetry/components/filter-processor.rst:-1
msgid "Use the filter processor to include or exclude telemetry based on certain conditions. Read on to learn how to configure the component."
msgstr "フィルタプロセッサを使用して、特定の条件に基づいてテレメトリを含めたり除外したりします。コンポーネントの設定方法については、こちらをお読みください。"

#: ../../gdi/opentelemetry/components/filter-processor.rst:5
msgid "Filter processor"
msgstr "フィルタープロセッサー"

#: ../../gdi/opentelemetry/components/filter-processor.rst:10
msgid "The filter processor is an OpenTelemetry Collector component that filters spans, metrics, or logs based on the conditions you define in its configuration. A typical use case for the filter processor is dropping telemetry that isn't relevant to the observed system, like noncritical logs or spans, to reduce noise in your data."
msgstr "フィルタ・プロセッサはOpenTelemetry Collectorのコンポーネントで、構成で定義した条件に基づいてスパン、メトリクス、またはログをフィルタリングします。フィルター・プロセッサーの典型的な使用例は、データのノイズを減らすために、クリティカルでないログやスパンのような、観測されたシステムに関係のないテレメトリーを削除することである。"

#: ../../gdi/opentelemetry/components/filter-processor.rst:12
msgid "Filtering works through allow lists and deny lists, which include or exclude telemetry based on regular expressions and resource attributes. You can also use the OpenTelemetry Transformation Language (OTTL) to better describe the signals you want to filter. The processor supports all pipeline types. See :ref:`otel-data-processing` for more information."
msgstr "フィルタリングは許可リストと拒否リストを通して機能し、正規表現とリソース属性に基づいて遠隔測定を含めたり除外したりします。また、OpenTelemetry Transformation Language (OTTL)を使用して、フィルタリングしたい信号をより適切に記述することもできます。プロセッサーはすべてのパイプラインタイプをサポートしている。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/filter-processor.rst:14
msgid "The filter processor can include or exclude telemetry based on the following criteria:"
msgstr "フィルタプロセッサは、以下の基準に基づいてテレメトリを含むことも除外することもできる："

#: ../../gdi/opentelemetry/components/filter-processor.rst:21 ../../gdi/opentelemetry/components/transform-processor.rst:21
msgid "Signal"
msgstr "信号"

#: ../../gdi/opentelemetry/components/filter-processor.rst:22
msgid "Criteria and match types"
msgstr "基準とマッチタイプ"

#: ../../gdi/opentelemetry/components/filter-processor.rst:23
msgid "Spans"
msgstr "スパン"

#: ../../gdi/opentelemetry/components/filter-processor.rst:24
msgid "OTTL conditions, span names (``strict`` or ``regexp``), and resource attributes (``strict`` or ``regexp``). Span events filtering only supports OTTL conditions."
msgstr "OTTL条件、スパン名（``strict`` または``regexp`` ）、リソース属性（``strict`` または``regexp`` ）。スパンイベントのフィルタリングは、OTTL条件のみをサポートする。"

#: ../../gdi/opentelemetry/components/filter-processor.rst:26
msgid "OTTL conditions, metric names (``strict`` or ``regexp``), and metric attributes (``expr``). Data points filtering only supports OTTL conditions."
msgstr "OTTL条件、メトリック名(``strict`` または``regexp``)、メトリック属性(``expr``)。データポイントのフィルタリングはOTTL条件のみサポート。"

#: ../../gdi/opentelemetry/components/filter-processor.rst:28
msgid "OTTL conditions, resource attributes (``strict`` or ``regexp``)."
msgstr "OTTL条件、リソース属性(``strict`` または``regexp``)。"

#: ../../gdi/opentelemetry/components/filter-processor.rst:30
msgid "The regular expression engine used by the filter processor is ``re2``."
msgstr "フィルタープロセッサーが使用する正規表現エンジンは``re2`` です。"

#: ../../gdi/opentelemetry/components/filter-processor.rst:32
msgid "To redact or transform attributes of spans, logs, or metrics without dropping them, use the attributes processor. See :ref:`attributes-processor`."
msgstr "スパン、ログ、またはメトリクスの属性を削除せずに再編集または変換するには、属性プロセッサを使用します。:ref:`attributes-processor` を参照。"

#: ../../gdi/opentelemetry/components/filter-processor.rst:37
msgid "By default, the Splunk Distribution of OpenTelemetry Collector includes the filter processor. To activate the filter processor for a pipeline, add ``filter`` to the ``processors`` section of the configuration. For example:"
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションにはフィルタプロセッサが含まれています。パイプラインのフィルタープロセッサーを有効にするには、コンフィギュレーションの``processors`` セクションに``filter`` を追加する。例えば、こうだ："

#: ../../gdi/opentelemetry/components/filter-processor.rst:73
msgid "You can then add the filter processors to any compatible pipeline. For example:"
msgstr "その後、互換性のあるパイプラインにフィルタープロセッサーを追加することができる。例えば、こうだ："

#: ../../gdi/opentelemetry/components/filter-processor.rst:106
msgid "For a complete list of parameters, see :ref:`filter-processor-settings`."
msgstr "パラメータの完全なリストについては、:ref:`filter-processor-settings` を参照のこと。"

#: ../../gdi/opentelemetry/components/filter-processor.rst:111
msgid "The following sample configurations show how to filter spans, metrics, and logs using different criteria."
msgstr "以下のサンプル構成は、さまざまな基準を使用してスパン、メトリクス、およびログをフィルタする方法を示しています。"

#: ../../gdi/opentelemetry/components/filter-processor.rst:113
msgid "For a complete list of examples, see the configuration snippets in :new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/filterprocessor/testdata`."
msgstr "例の完全なリストは、:new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/filterprocessor/testdata` のコンフィギュレーション・スニペットを参照。"

#: ../../gdi/opentelemetry/components/filter-processor.rst:118
msgid "You can exclude or include spans from traces using resource attributes or OTTL conditions. For example:"
msgstr "リソース属性またはOTTL条件を使用して、スパンをトレースから除外または含めることができます。例えば、こうだ："

#: ../../gdi/opentelemetry/components/filter-processor.rst:144
msgid "Include filters are always applied before exclude filters for any given filter processor instance."
msgstr "インクルードフィルターは、どのフィルタープロセッサーのインスタンスでも、常に除外フィルターの前に適用されます。"

#: ../../gdi/opentelemetry/components/filter-processor.rst:147
msgid "Filter metrics"
msgstr "フィルター・メトリクス"

#: ../../gdi/opentelemetry/components/filter-processor.rst:149
msgid "You can exclude or include metrics using metric names, expressions, or OTTL conditions. For example:"
msgstr "メトリック名、式、または OTTL 条件を使用して、メトリックを除外または含めることができます。例えば、こうだ："

#: ../../gdi/opentelemetry/components/filter-processor.rst:190
msgid "Filter logs"
msgstr "フィルターログ"

#: ../../gdi/opentelemetry/components/filter-processor.rst:192
msgid "You can exclude or include logs using resource attributes or OTTL conditions. For example:"
msgstr "リソース属性またはOTTL条件を使用して、ログを除外または含めることができます。例えば、こうだ："

#: ../../gdi/opentelemetry/components/filter-processor.rst:247
msgid "Filter Kubernetes elements"
msgstr "Kubernetesエレメントのフィルタリング"

#: ../../gdi/opentelemetry/components/filter-processor.rst:249
msgid "You can exclude or include Kubernetes elements, such as containers, pods, nodes, namespaces, or clusters, with the following configuration:"
msgstr "コンテナ、ポッド、ノード、名前空間、クラスタなどのKubernetes要素を除外または含めるには、次のように設定します："

#: ../../gdi/opentelemetry/components/filter-processor.rst:319
msgid "After setting up the processors, configure the pipelines:"
msgstr "プロセッサーを設定したら、パイプラインを設定する："

#: ../../gdi/opentelemetry/components/filter-processor.rst:341
msgid "Drop telemetry using OTTL conditions"
msgstr "OTTL条件を使用してテレメトリをドロップする"

#: ../../gdi/opentelemetry/components/filter-processor.rst:343
msgid "You can use the OpenTelemetry Transformation Language (OTTL) to define filtering conditions with more detail. Matching telemetry is dropped (excluded)."
msgstr "OpenTelemetry Transformation Language (OTTL)を使って、より詳細なフィルタリング条件を定義することができます。一致するテレメトリはドロップされる（除外される）。"

#: ../../gdi/opentelemetry/components/filter-processor.rst:345
msgid "In OTTL, each telemetry type or context has its own fields. The following example shows all available OTTL contexts:"
msgstr "OTTL では、各テレメトリタイプまたはコンテキストは独自のフィールドを持つ。次の例は、利用可能なすべてのOTTLコンテキストを示す："

#: ../../gdi/opentelemetry/components/filter-processor.rst:374 ../../gdi/opentelemetry/components/transform-processor.rst:93
msgid "For more information on OTTL functions and syntax, see:"
msgstr "OTTLの関数と構文の詳細については、こちらを参照のこと："

#: ../../gdi/opentelemetry/components/filter-processor.rst:376 ../../gdi/opentelemetry/components/transform-processor.rst:95
msgid "OTTL Syntax: :new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/pkg/ottl/README.md`"
msgstr "OTTL 構文：:new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/pkg/ottl/README.md`"

#: ../../gdi/opentelemetry/components/filter-processor.rst:377 ../../gdi/opentelemetry/components/transform-processor.rst:96
msgid "OTTL Functions: :new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/pkg/ottl/ottlfuncs`"
msgstr "OTTLの機能：:new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/pkg/ottl/ottlfuncs`"

#: ../../gdi/opentelemetry/components/filter-processor.rst:378 ../../gdi/opentelemetry/components/transform-processor.rst:97
msgid "OTTL Contexts: :new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/pkg/ottl/contexts`"
msgstr "OTTL Contexts::new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/pkg/ottl/contexts`"

#: ../../gdi/opentelemetry/components/filter-processor.rst:385
msgid "The following table shows the configuration options for the filter processor:"
msgstr "次の表は、フィルター・プロセッサーのコンフィギュレーション・オプションを示しています："

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:-1
msgid "The Fluent Forward receiver allows the Splunk Distribution of OpenTelemetry Collector to collect logs and events using the Fluent Forward protocol."
msgstr "Fluent Forward レシーバーは、Splunk Distribution of OpenTelemetry Collector が Fluent Forward プロトコルを使用してログとイベントを収集することを可能にします。"

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:5
msgid "Fluent Forward receiver"
msgstr "流暢なフォワード・レシーバー"

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:10
msgid "The Fluent Forward receiver allows the Splunk Distribution of OpenTelemetry Collector to collect events using the bundled Fluentd application. The supported pipeline type is ``logs``. See :ref:`otel-data-processing` for more information."
msgstr "Fluent Forward レシーバーは、Splunk Distribution of OpenTelemetry Collector がバンドルされた Fluentd アプリケーションを使ってイベントを収集することを可能にします。サポートされるパイプライン・タイプは``logs`` です。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:12
msgid "The receiver accepts data formatted as Fluent Forward events through a TCP connection. All three Fluent event types, message, forward, and packed forward, are supported, including compressed packed forward."
msgstr "レシーバーは、TCP 接続を通じて、Fluent Forward イベントとしてフォーマットされたデータを受け取ります。Fluentの3つのイベントタイプ、メッセージ、フォワード、パックドフォワードは、圧縮パックドフォワードを含め、すべてサポートされています。"

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:14
msgid "Fluentd is bundled in the Splunk Distribution of OpenTelemetry Collector."
msgstr "Fluentd は OpenTelemetry Collector の Splunk ディストリビューションにバンドルされています。"

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:19
msgid "By default, the Splunk Distribution of OpenTelemetry Collector includes the Fluent Forward receiver in the ``logs`` pipeline when deploying in host monitoring (agent) mode. See :ref:`otel-deployment-mode` for more information."
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションは、ホストモニタリング (エージェント) モードでデプロイする場合、``logs`` パイプラインに Fluent Forward レシーバーを含みます。詳しくは:ref:`otel-deployment-mode` 。"

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:21
msgid "The default configuration of the ``fluentforward`` receiver in the Splunk Distribution of OpenTelemetry Collector is the following:"
msgstr "OpenTelemetry Collector の Splunk ディストリビューションにおける``fluentforward`` レシーバのデフォルト設定は以下のとおりです："

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:38
msgid "For more information on how to install Fluentd when manually installing the Collector, see:"
msgstr "手動で Collector をインストールするときの Fluentd のインストール方法については、こちらを参照してください："

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:40
msgid ":ref:`fluentd-manual-config-linux`"
msgstr ":ref:`fluentd-manual-config-linux`"

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:41
msgid ":ref:`fluentd-manual-config-windows`"
msgstr ":ref:`fluentd-manual-config-windows`"

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:42
msgid ":ref:`windows-manual-fluentd`"
msgstr ":ref:`windows-manual-fluentd`"

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:47
msgid "The following table shows the configuration options for the Fluent Forward receiver:"
msgstr "次の表は、Fluent Forward レシーバーの設定オプションを示します："

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:56
msgid "For troubleshooting Fluentd, see:"
msgstr "Fluentdのトラブルシューティングについては、こちらをご覧ください："

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:58
msgid ":ref:`fluentd-collector-troubleshooting`."
msgstr ":ref:`fluentd-collector-troubleshooting`."

#: ../../gdi/opentelemetry/components/fluentd-receiver.rst:59
msgid ":ref:`otel-linux-uninstall-both-otel-and-tdagent`"
msgstr ":ref:`otel-linux-uninstall-both-otel-and-tdagent`"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:-1
msgid "Use this Splunk Observability Cloud integration for the host metrics monitor. See benefits, install, configuration, and metrics."
msgstr "ホストメトリクスの監視には、この Splunk Observability Cloud 統合を使用します。メリット、インストール、設定、メトリクスを参照してください。"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:5
msgid "Host metrics receiver"
msgstr "ホスト・メトリクス・レシーバー"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:10
msgid "The host metrics receiver generates metrics scraped from host systems when the Collector is deployed as an agent. The supported pipeline type is ``metrics``."
msgstr "ホスト・メトリクス・レシーバは、Collectorがエージェントとしてデプロイされたときに、ホスト・システムからスクレイピングされたメトリクスを生成します。サポートされるパイプライン・タイプは``metrics`` です。"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:12
msgid "By default, the host metrics receiver is activated in the Splunk Distribution of OpenTelemetry Collector and collects the following metrics:"
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションでホストメトリクスレシーバが有効化され、以下のメトリクスを収集します："

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:14
msgid "CPU usage metrics"
msgstr "CPU使用率メトリクス"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:15 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:93
msgid "Disk I/O metrics"
msgstr "ディスクI/Oメトリクス"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:16 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:97
msgid "CPU load metrics"
msgstr "CPU負荷メトリクス"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:17
msgid "File system usage metrics"
msgstr "ファイル・システム使用メトリクス"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:18
msgid "Memory usage metrics"
msgstr "メモリ使用量メトリクス"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:19
msgid "Network interface and TCP connection metrics"
msgstr "ネットワーク・インターフェースとTCPコネクション・メトリクス"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:20
msgid "Process count metrics (Linux only)"
msgstr "プロセス・カウント・メトリクス（Linuxのみ）"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:21 ../../gdi/opentelemetry/components/host-metrics-receiver.rst:121
msgid "Per process CPU, memory, and disk I/O metrics"
msgstr "プロセスごとのCPU、メモリ、ディスクI/Oメトリクス"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:23
msgid "Host receiver metrics appear in Infrastructure Monitoring. You can use them to create dashboards and alerts. See :ref:`create-detectors` for more information."
msgstr "ホスト・レシーバーのメトリクスは、インフラストラクチャ・モニタリングに表示されます。ダッシュボードやアラートの作成に利用できる。詳しくは:ref:`create-detectors` 。"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:25
msgid "The SignalFx exporter excludes some available metrics by default. Learn more about default metric filters in :ref:`list-excluded-metrics`. The most up-to-date list of excluded metrics is in GitHub. See :new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/signalfxexporter/internal/translation/default_metrics.go#L49`."
msgstr "SignalFxエクスポータは、デフォルトでいくつかの利用可能なメトリクスを除外します。:ref:`list-excluded-metrics` のデフォルトのメトリックフィルタの詳細については、こちらをご覧ください。除外されたメトリクスの最新リストはGitHubにある。:new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/signalfxexporter/internal/translation/default_metrics.go#L49` を参照。"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:38
msgid "Configure the receiver as described in the next section."
msgstr "次のセクションで説明するように受信機を設定する。"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:41
msgid "Metrics produced by this receiver count towards the custom metric ingestion limit. See :ref:`sys-limits`."
msgstr "このレシーバーによって生成されたメトリクスは、カスタムメトリクスの取り込み制限にカウントされます。:ref:`sys-limits` を参照。"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:44
msgid "Collect container host metrics (Linux)"
msgstr "コンテナ・ホストのメトリクスを収集する（Linux）"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:46
msgid "The host metrics receiver collects metrics from the Linux system directories. To collect metrics for the host instead of the container, follow these steps:"
msgstr "ホスト・メトリクス・レシーバは、Linuxシステム・ディレクトリからメトリクスを収集する。コンテナではなくホストのメトリクスを収集するには、以下の手順に従います："

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:48
msgid "Mount the entire host file system when running the container. For example: ``docker run -v /:/hostfs``. You can also choose which parts of the host file system to mount. For example: ``docker run -v /proc:/hostfs/proc``"
msgstr "コンテナ実行時にホストのファイルシステム全体をマウントする。例：``docker run -v /:/hostfs``.ホスト・ファイルシステムのどの部分をマウントするかも選択できる。例えば、こうだ： ``docker run -v /proc:/hostfs/proc``"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:50
msgid "Configure ``root_path`` so that the host metrics receiver knows where the root file system is located. For example:"
msgstr "``root_path`` を構成して、ホスト・メトリクス・レシーバがルート・ファイル・システムの場所を知るようにする。例えば、こうだ："

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:58
msgid "If you are running multiple instances of the host metrics receiver, set the same ``root_path`` for all."
msgstr "ホスト・メトリクス・レシーバの複数のインスタンスを実行している場合は、すべてのインスタンスに同じ``root_path`` を設定します。"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:63
msgid "The collection interval and the categories of metrics to be scraped can be configured as shown in the following example:"
msgstr "次の例に示すように、収集間隔とスクレイピングするメトリクスのカテゴリを構成できます："

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:75
msgid "Scrapers extract data from endpoints and then send that data to a specified target. The following table shows the available scrapers:"
msgstr "スクレーパーはエンドポイントからデータを抽出し、そのデータを指定されたターゲットに送信する。次の表は、利用可能なスクレーパーを示している："

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:84
msgid "Scraper"
msgstr "スクレーパー"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:88
msgid "``cpu``"
msgstr "``cpu``"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:89
msgid "CPU utilization metrics"
msgstr "CPU使用率メトリクス"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:92
msgid "``disk``"
msgstr "``disk``"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:100
msgid "``filesystem``"
msgstr "``filesystem``"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:101
msgid "File system utilization metrics"
msgstr "ファイル・システム利用メトリクス"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:104
msgid "``memory``"
msgstr "``memory``"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:105
msgid "Memory utilization metrics"
msgstr "メモリ利用メトリクス"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:108
msgid "``network``"
msgstr "``network``"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:109
msgid "Network interface I/O metrics and TCP connection metrics"
msgstr "ネットワーク・インターフェイスのI/OメトリクスとTCPコネクション・メトリクス"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:112
msgid "``paging``"
msgstr "``paging``"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:113
msgid "Paging or swap space utilization and I/O metrics"
msgstr "ページングまたはスワップ領域の使用率とI/Oメトリクス"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:116
msgid "``processes``"
msgstr "``processes``"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:117
msgid "Process count metrics. Only available on Linux"
msgstr "プロセス数のメトリクス。Linuxでのみ利用可能"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:120
msgid "``process``"
msgstr "``process``"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:123
msgid "See the following sections for scraper configurations."
msgstr "スクレーパーの構成については、以下のセクションを参照のこと。"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:136
msgid "File system"
msgstr "ファイルシステム"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:151
msgid "The following example shows the forward slash (``/``) as a common mount point for Linux systems:"
msgstr "以下の例では、Linuxシステムの一般的なマウント・ポイントとして、フォワード・スラッシュ（``/`` ）を使用しています："

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:160
msgid "Similarly, the following example shows ``C:`` as a common mount point for Windows systems:"
msgstr "同様に、以下の例では、Windowsシステムの一般的なマウントポイントとして``C:`` を示している："

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:169
msgid "To include virtual file systems, set ``include_virtual_filesystems`` to ``true``."
msgstr "仮想ファイルシステムを含めるには、``include_virtual_filesystems`` を``true`` に設定する。"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:176
msgid "Find more examples in the daemonset.yaml file in GitHub."
msgstr "GitHubのdaemonset.yamlファイルに、より多くの例がある。"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:179
msgid "Network"
msgstr "ネットワーク"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:189
msgid "Process"
msgstr "プロセス"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:202
msgid "If you keep getting errors related to process reading, consider setting ``mute_process_name_error``, ``mute_process_exe_error``, or ``mute_process_io_error`` to ``true``."
msgstr "プロセスの読み取りに関するエラーが出続ける場合は、``mute_process_name_error`` 、``mute_process_exe_error`` 、``mute_process_io_error`` を``true`` に設定することを検討してください。"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:207
msgid "To only gather a subset of metrics from a particular source, use the host metrics receiver with the ``filter`` processor."
msgstr "特定のソースからのメトリクスのサブセットのみを収集するには、``filter`` プロセッサでホスト・メトリクス・レシーバを使用します。"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:211
msgid "Different frequencies"
msgstr "異なる周波数"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:213
msgid "To scrape some metrics at a different frequency than others, configure multiple host metrics receivers with different ``collection_interval`` values. For example:"
msgstr "あるメトリクスを他のメトリクスと異なる頻度でスクレイピングするには、異なる``collection_interval`` 値で複数のホスト・メトリクス・レシーバを構成します。例えば、こうだ："

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:242 ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:204
msgid "The SignalFx exporter excludes some available metrics by default. Learn more about default metric filters in :ref:`list-excluded-metrics`."
msgstr "SignalFxエクスポータは、デフォルトでいくつかの利用可能なメトリクスを除外します。:ref:`list-excluded-metrics` のデフォルトのメトリックフィルタの詳細については、こちらをご覧ください。"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:245
msgid "cpu scraper"
msgstr "CPUスクレーパー"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:252
msgid "disk scraper"
msgstr "ディスクスクレーパー"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:259
msgid "filesystem scraper"
msgstr "ファイルシステムスクレーパー"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:266
msgid "load scraper"
msgstr "ロードスクレーパー"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:273
msgid "memory scraper"
msgstr "メモリースクレーパー"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:280
msgid "network scraper"
msgstr "ネットワークスクレーパー"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:287
msgid "paging scraper"
msgstr "ページングスクレーパー"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:294
msgid "processes scraper"
msgstr "スクレーパー"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:301
msgid "process scraper"
msgstr "プロセススクレーパー"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:310
msgid "The host metrics receiver doesn't set any resource attributes on the exported metrics."
msgstr "ホスト・メトリクス・レシーバは、エクスポートされたメトリクスにリソース属性を設定しません。"

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:312
msgid "To set resource attributes, provide them using the ``OTEL_RESOURCE_ATTRIBUTES`` environment variables. For example:"
msgstr "リソース属性を設定するには、``OTEL_RESOURCE_ATTRIBUTES`` 環境変数を使用します。例えば、こうだ："

#: ../../gdi/opentelemetry/components/host-metrics-receiver.rst:323
msgid "The following table shows the configuration options for the host metrics receiver:"
msgstr "以下の表に、ホスト・メトリクス・レシーバの構成オプションを示します："

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:-1
msgid "Use this Splunk Observability Cloud integration for the kubelet-stats receiver. See benefits, install, configuration, and metrics."
msgstr "kubelet-stats レシーバーには、この Splunk Observability Cloud インテグレーションを使用します。メリット、インストール、設定、メトリクスを参照してください。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:5
msgid "Kubelet stats receiver"
msgstr "Kubelet統計レシーバー"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:10
msgid "The Kubelet stats receiver pulls pod metrics from the Kubernetes API server on a kubelet and sends them through the metrics pipeline for further processing. The supported pipeline type is ``metrics``. See :ref:`otel-data-processing` for more information."
msgstr "Kubelet statsレシーバーは、kubelet上のKubernetes APIサーバーからポッドメトリクスをプルし、さらなる処理のためにメトリクスパイプラインを介して送信します。サポートされるパイプライン・タイプは``metrics`` です。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:12
msgid "This receiver replaces the ``kubelet-stats``, ``kubelet-metrics``, and ``kubernetes-volumes`` Smart Agent monitors."
msgstr "このレシーバーは、``kubelet-stats`` 、``kubelet-metrics`` 、``kubernetes-volumes`` スマートエージェントモニターに代わるものです。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:25
msgid "Configure the Kubelet stats receiver as described in the next section."
msgstr "次のセクションで説明するように、Kubelet 統計レシーバーを設定します。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:31
msgid "A kubelet runs on a Kubernetes node and has an API server to which the Kubelet stats receiver connects. To configure the receiver, set the connection and authentication details, and how often you want to collect data and send it."
msgstr "KubeletはKubernetesノード上で実行され、Kubelet statsレシーバーが接続するAPIサーバーを持つ。受信機を設定するには、接続と認証の詳細、およびデータの収集と送信の頻度を設定する。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:33
msgid "There are two ways to authenticate, as indicated by the ``auth_type`` field:"
msgstr "認証には、``auth_type`` フィールドで示されるように、2つの方法がある："

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:35
msgid "``tls`` tells the receiver to use TLS for authentication and requires that the ``ca_file``, ``key_file``, and ``cert_file`` fields."
msgstr "``tls`` は、認証にTLSを使うよう受信側に指示し、``ca_file`` 、``key_file`` 、``cert_file`` フィールドを要求する。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:36
msgid "``ServiceAccount`` tells this receiver to use the default service account token to authenticate to the kubelet API."
msgstr "``ServiceAccount`` は、kubelet API の認証にデフォルトのサービス アカウント トークンを使用するよう、このレシーバに指示します。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:39
msgid "Configure TLS authentication"
msgstr "TLS認証を設定する"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:41
msgid "The following example shows how to configure the kubelet stats receiver with TLS authentication:"
msgstr "次の例は、TLS 認証を使用して kubelet stats レシーバーを構成する方法を示しています："

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:66
msgid "Configure service account authentication"
msgstr "サービスアカウント認証の設定"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:68
msgid "The following example shows how to configure the ``kubeletstats`` receiver with service account authentication."
msgstr "次の例は、サービス・アカウント認証で``kubeletstats`` 受信機を設定する方法を示している。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:70
msgid "Make sure the pod spec sets the node name:"
msgstr "ポッド仕様でノード名が設定されていることを確認する："

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:80
msgid "Activate the Collector to reference the ``K8S_NODE_NAME`` environment variable:"
msgstr "コレクタをアクティブにして、``K8S_NODE_NAME`` 環境変数を参照します："

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:99
msgid "A missing or empty ``endpoint`` value causes the host name on which the Collector is running to be used as the endpoint. If the ``hostNetwork`` flag is set, and the Collector is running in a Pod, the host name resolves to the node's network namespace."
msgstr "``endpoint`` 値がないか空の場合、Collector が実行されているホスト名がエンドポイントとして使用されます。``hostNetwork`` フラグが設定されていて、Collector が Pod で実行されている場合、ホスト名はノードのネットワーク名前空間に解決されます。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:102
msgid "Add metrics excluded by default"
msgstr "デフォルトで除外されているメトリクスを追加する"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:104
msgid "To import excluded metrics, use the ``include_metrics`` option as in the following example:"
msgstr "除外されたメトリクスをインポートするには、次の例のように``include_metrics`` オプションを使用します："

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:116
msgid "Add additional metadata attributes"
msgstr "メタデータ属性の追加"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:118
msgid "By default, all produced metrics get resource attributes based on what kubelet the ``/stats/summary`` endpoint provides. For some use cases, this might not be enough: use other endpoints to retrieve additional metadata entities and set them as extra attributes on the metric resource."
msgstr "デフォルトでは、生成されたすべてのメトリクスは、``/stats/summary`` エンドポイントが提供する kubelet に基づいてリソース属性を取得します。他のエンドポイントを使用して追加のメタデータ・エンティティを取得し、メトリック・リソースの追加属性として設定する。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:120
msgid "The kubelet stats receiver supports the following metadata:"
msgstr "kubelet stats レシーバーは、以下のメタデータをサポートします："

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:122
msgid "``container.id``: Enriches metric metadata with the Container ID label obtained from container statuses exposed using ``/pods``."
msgstr "``container.id``:``/pods`` を使って公開されたコンテナのステータスから得られるコンテナIDラベルで、メトリックメタデータを豊かにする。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:123
msgid "``k8s.volume.type``: Collects the volume type from the Pod spec exposed using ``/pods`` and add it as an attribute to volume metrics. If more metadata than the volume type is available, the receiver syncs it depending on the available fields and the type of volume. For example, ``aws.volume.id`` is synced from ``awsElasticBlockStore`` and ``gcp.pd.name`` is synced from ``gcePersistentDisk``."
msgstr "``k8s.volume.type``:``/pods`` を使用して公開された Pod 仕様からボリューム・タイプを収集し、ボリューム・メトリクスに属性として追加します。ボリュームの種類よりも多くのメタデータが利用可能な場合、受信機は利用可能なフィールドとボリュームの種類に応じて同期する。例えば、``aws.volume.id`` は``awsElasticBlockStore`` から同期され、``gcp.pd.name`` は``gcePersistentDisk`` から同期される。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:125
msgid "To add the ``container.id`` label to your metrics, set the ``extra_metadata_labels`` field. For example:"
msgstr "メトリックスに``container.id`` ラベルを追加するには、``extra_metadata_labels`` フィールドを設定します。例えば、こうだ："

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:138
msgid "If ``extra_metadata_labels`` isn't set, no additional API calls are made to receive metadata."
msgstr "``extra_metadata_labels`` が設定されていない場合、メタデータを受け取るための追加のAPIコールは行われない。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:141
msgid "Collect additional volume metadata"
msgstr "追加のボリューム・メタデータを収集する"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:143
msgid "When dealing with persistent volume claims, you can sync metadata from the underlying storage resource. For example:"
msgstr "永続ボリューム・クレームを扱う場合、基礎となるストレージ・リソースからメタデータを同期することができます。例えば、こうだ："

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:158
msgid "If ``k8s_api_config`` is set, the receiver attempts to collect metadata from underlying storage resources for persistent volume claims. For example, if a Pod is using a persistent volume claim backed by an Elastic Block Store (EBS) instance on AWS, the receiver sets the ``k8s.volume.type`` label to ``awsElasticBlockStore`` rather than ``persistentVolumeClaim``."
msgstr "``k8s_api_config`` が設定されている場合、レシーバは永続ボリューム請求のために、基礎となるストレージリソースからメタデータの収集を試みる。たとえば、Pod が AWS 上の Elastic Block Store（EBS）インスタンスに裏付けされた永続ボリュームのクレームを使用している場合、レシーバは``persistentVolumeClaim`` ではなく``awsElasticBlockStore`` に``k8s.volume.type`` ラベルを設定します。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:161
msgid "Configure metric groups"
msgstr "メトリックグループの設定"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:163
msgid "A metric group is a collection of metrics by component type. By default, metrics from containers, pods, and nodes are collected. If ``metric_groups`` is set, then only metrics from the listed groups are collected. Valid groups are ``container``, ``pod``, ``node``, and ``volume``."
msgstr "メトリック・グループは、コンポーネント・タイプ別のメトリックの集まりです。デフォルトでは、コンテナ、ポッド、およびノードからのメトリクスが収集されます。``metric_groups`` を設定すると、リストされたグループからのメトリクスのみが収集されます。有効なグループは``container`` 、``pod`` 、``node`` 、``volume`` 。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:165
msgid "For example, to collect only node and pod metrics from the receiver:"
msgstr "例えば、レシーバーからノードとポッドのメトリクスだけを収集する："

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:180
msgid "Configure optional parameters"
msgstr "オプションパラメーターの設定"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:182
msgid "You can also set the following optional parameters:"
msgstr "また、以下のオプション・パラメーターも設定できる："

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:184
msgid "``collection_interval``, which is the interval at which to collect data. The default value is ``10s``."
msgstr "``collection_interval``これはデータを収集する間隔である。デフォルト値は``10s`` 。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:186
msgid "``insecure_skip_verify``, which specifies whether or not to skip server certificate chain and host name verification. The default value is ``false``."
msgstr "``insecure_skip_verify``これは、サーバー証明書チェーンとホスト名の検証を省略するかどうかを指定する。デフォルト値は``false`` 。"

#: ../../gdi/opentelemetry/components/kubelet-stats-receiver.rst:193
msgid "The following table shows the configuration options for the Kubelet stats receiver:"
msgstr "次の表に、Kubelet 統計レシーバーの構成オプションを示します："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:-1
msgid "Use the Kubernetes attributes processor to update, add, or delete resource attributes. Read on to learn how to configure the component."
msgstr "リソース属性の更新、追加、削除にはKubernetes attributesプロセッサを使用します。コンポーネントの設定方法については、こちらをお読みください。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:5
msgid "Kubernetes attributes processor"
msgstr "Kubernetesアトリビュート・プロセッサー"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:10
msgid "The Kubernetes attributes processor is an OpenTelemetry Collector component that manages resource attributes using Kubernetes metadata. The processor automatically discovers resources, extracts metadata from them, and adds the metadata to relevant spans, metrics and logs as resource attributes. The supported pipeline types are ``traces``, ``metrics``, and ``logs``. See :ref:`otel-data-processing` for more information."
msgstr "Kubernetes attributes processorはOpenTelemetry Collectorのコンポーネントで、Kubernetesのメタデータを使ってリソースの属性を管理します。プロセッサは自動的にリソースを検出し、そこからメタデータを抽出し、関連するスパン、メトリクス、およびログにメタデータをリソース属性として追加する。サポートされるパイプラインのタイプは、``traces`` 、``metrics`` 、``logs`` です。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:12
msgid "Don't remove the Kubernetes attributes processor from your configuration. Default attributes extracted by the processor, such as ``k8s.pod.name``, are required for Splunk Observability Cloud capabilities, such as Kuberbetes navigator, Related Content, and accurate subscription usage."
msgstr "設定からKubernetesアトリビュート・プロセッサーを削除しないでください。プロセッサーによって抽出されたデフォルト属性（``k8s.pod.name`` など）は、Kuberbetes ナビゲーター、関連コンテンツ、正確なサブスクリプションの使用状況など、Splunk Observability Cloud の機能に必要です。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:17
msgid "The Helm chart for the Splunk Distribution of OpenTelemetry Collector already includes the Kubernetes attributes processor, which is activated by default for all deployment modes. See :ref:`helm-chart`."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションの Helm チャートには、すでに Kubernetes 属性プロセッサが含まれており、すべてのデプロイモードでデフォルトで有効になっています。:ref:`helm-chart` を参照。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:19
msgid "To manually configure the Kubernetes attributes processor, follow these steps:"
msgstr "Kubernetesアトリビュートプロセッサを手動で設定するには、以下の手順に従います："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:21
msgid ":ref:`configure-rbac-k8sattributes`"
msgstr ":ref:`configure-rbac-k8sattributes`"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:22
msgid ":ref:`configure-filter-k8sattributes`"
msgstr ":ref:`configure-filter-k8sattributes`"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:23
msgid ":ref:`configure-extracted-metadata-k8sattributes`"
msgstr ":ref:`configure-extracted-metadata-k8sattributes`"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:24
msgid ":ref:`configure-association-lists-k8sattributes`"
msgstr ":ref:`configure-association-lists-k8sattributes`"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:25
msgid ":ref:`configure-labels-k8sattributes`"
msgstr ":ref:`configure-labels-k8sattributes`"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:30
msgid "Configure role-based access control"
msgstr "役割ベースのアクセス制御を設定する"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:32
msgid "The Kubernetes attributes processor requires ``get``, ``watch`` and ``list`` permissions on both ``pods`` and ``namespaces`` resources for all namespaces and pods included in the configured filters."
msgstr "Kubernetes属性プロセッサーは、設定されたフィルターに含まれるすべてのネームスペースとポッドについて、``pods`` と``namespaces`` の両方のリソースに``get`` 、``watch`` 、``list`` パーミッションを要求します。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:34
msgid "The following example shows how to give a ServiceAccount the necessary permissions for all pods and namespaces in a cluster. Replace ``<col_namespace>`` with the namespace where you've deployed the Collector:"
msgstr "次の例は、クラスタ内のすべてのポッドとネームスペースに対して必要なパーミッションをServiceAccountに与える方法を示しています。``<col_namespace>`` を Collector をデプロイしたネームスペースに置き換えます："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:71
msgid "Sample configuration"
msgstr "サンプル構成"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:73
msgid "The following example contains a list of extracted metadata, Kubernetes annotations and labels, and an association list:"
msgstr "次の例には、抽出されたメタデータ、Kubernetesのアノテーションとラベル、および関連付けのリストが含まれています："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:106 ../../gdi/opentelemetry/components/resource-processor.rst:76
msgid "To complete the configuration, include the receiver in any pipeline of the ``service`` section of your configuration file. For example:"
msgstr "コンフィギュレーションを完了するには、コンフィギュレーションファイルの``service`` セクションの任意のパイプラインにレシーバーを含める。例えば、こうだ："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:123
msgid "Discovery filters"
msgstr "ディスカバリー・フィルター"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:125
msgid "You can use the Kubernetes attributes processor in Collectors deployed either as agents or as gateways, using DaemonSets or Deployments respectively. See :ref:`otel-deployment-mode` for more information."
msgstr "エージェントまたはゲートウェイとしてデプロイされたCollectorでは、それぞれDaemonSetsまたはDeploymentsを使用して、Kubernetes属性プロセッサを使用できます。詳しくは:ref:`otel-deployment-mode` 。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:128 ../../gdi/opentelemetry/deployment-modes.rst:101
msgid "Agent configuration"
msgstr "エージェント設定"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:130
msgid "In host monitoring (agent) mode, the processor detects IP addresses of pods sending spans, metrics, or logs to the agent and uses this information to extract metadata from pods."
msgstr "ホスト監視（エージェント）モードでは、プロセッサは、スパン、メトリクス、またはログをエージェントに送信するポッドのIPアドレスを検出し、この情報を使用してポッドからメタデータを抽出します。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:132
msgid "When running the Collector in host monitoring (agent) mode, apply a discovery filter so that only pods from the same host the Collector is running on are discovered. Using a discovery filter also optimizes resource consumption on large clusters."
msgstr "Collectorをホスト監視（エージェント）モードで実行する場合は、検出フィルタを適用して、Collectorが実行されているのと同じホストからのポッドのみが検出されるようにします。ディスカバリー・フィルタを使うことで、大規模クラスタでのリソース消費も最適化される。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:134
msgid "To automatically filter pods by the node the processors is running on, configure the Downward API to inject the node name as an environment variable. For example:"
msgstr "プロセッサーが実行されているノードによってポッドを自動的にフィルターするには、Downward API を設定してノード名を環境変数として注入します。例えば、こうだ："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:147
msgid "Then, set the ``filter.node_from_env_var`` field to the name of the environment variable that containes the name of the node. For example:"
msgstr "次に、``filter.node_from_env_var`` フィールドに、ノードの名前を含む環境変数の名前を設定する。例えば、こうだ："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:156 ../../gdi/opentelemetry/deployment-modes.rst:173
msgid "Gateway configuration"
msgstr "ゲートウェイの設定"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:158
msgid "The processor can't resolve the IP address of the pods that emit telemetry data when running in data forwarding (gateway) mode. To receive the correct IP addresses in a Collector gateway, configure the agents to forward addresses."
msgstr "データ転送（ゲートウェイ）モードで実行している場合、プロセッサーが遠隔測定データを送信するポッドの IP アドレスを解決できない。コレクタゲートウェイで正しいIPアドレスを受信するには、アドレスを転送するようにエージェントを構成します。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:160
msgid "To forward IP addresses to gateways, configure the Collectors in host monitoring (agent) mode to run in passthrough mode. This ensures that agents detect IP addresses and pass them as an attribute attached to all telemetry resources."
msgstr "IP アドレスをゲートウェイに転送するには、コレクタをホストモニタ ( エージェント ) モードでパススルーモードで実行するように構成します。これは、エージェントがIPアドレスを検出し、すべての遠隔測定リソースに付加された属性としてIPアドレスを渡すことを保証する。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:167
msgid "Then, configure the Collector gateways as usual. The processor automatically detects the IP addresses of spans, logs, and metrics sent by the agents or by other sources, and call the Kubernetes API to extract metadata."
msgstr "その後、通常どおりコレクタゲートウェイを構成します。このプロセッサは、エージェントや他のソースから送信されたスパン、ログ、メトリクスのIPアドレスを自動的に検出し、Kubernetes APIを呼び出してメタデータを抽出する。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:172
msgid "Extracted metadata"
msgstr "抽出されたメタデータ"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:174
msgid "Use the ``metadata`` option to define what resource attributes you want to add. You can only use attribute names from existing metadata defined in ``pod_association.resource_attribute``. The processor ignores empty or nonexisting values."
msgstr "``metadata`` オプションを使って、追加したいリソース属性を定義する。``pod_association.resource_attribute`` で定義されている既存のメタデータの属性名のみを使用することができます。プロセッサは、空の値や存在しない値を無視する。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:176
msgid "The following attributes are added by default:"
msgstr "デフォルトでは以下の属性が追加される："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:178
msgid "``k8s.namespace.name``"
msgstr "``k8s.namespace.name``"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:179
msgid "``k8s.pod.name``"
msgstr "``k8s.pod.name``"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:180
msgid "``k8s.pod.uid``"
msgstr "``k8s.pod.uid``"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:181
msgid "``k8s.pod.start_time``"
msgstr "``k8s.pod.start_time``"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:182
msgid "``k8s.deployment.name``"
msgstr "``k8s.deployment.name``"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:183
msgid "``k8s.node.name``"
msgstr "``k8s.node.name``"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:185
msgid "You can change this list by adding a ``metadata`` section. For example:"
msgstr "このリストは、``metadata`` セクションを追加することで変更できる。例えば、こうだ："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:203
msgid "Make sure that default attributes, such as ``k8s.pod.name``, are always extracted, as they're required for Splunk Observability Cloud capabilities, such as Kuberbetes navigator, Related Content, and accurate subscription usage."
msgstr "Kuberbetes ナビゲータ、関連コンテンツ、正確なサブスクリプションの使用など、Splunk Observability Cloud の機能に必要なため、``k8s.pod.name`` などのデフォルト属性が常に抽出されていることを確認してください。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:205
msgid "The following container level attributes require additional attributes to identify a container in a pod:"
msgstr "以下のコンテナ・レベル属性は、ポッド内のコンテナを識別するために追加の属性を必要とする："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:207
msgid "Container spec attributes: Set only if ``k8s.container.name`` is available as a resource attribute."
msgstr "コンテナ仕様の属性：リソース属性として``k8s.container.name`` が利用可能な場合のみ設定。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:209
msgid "``container.image.name``"
msgstr "``container.image.name``"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:210
msgid "``container.image.tag``"
msgstr "``container.image.tag``"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:212
msgid "Container attributes: Set only if ``k8s.container.name`` is available as a resource attribute."
msgstr "コンテナ属性：リソース属性として``k8s.container.name`` が利用可能な場合のみ設定。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:214
msgid "``container.id``: Must be available in the metadata."
msgstr "``container.id``:メタデータで利用可能でなければならない。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:216
msgid "Set the ``k8s.container.restart_count`` resource attribute to retrieve the association with a particular container instance. If ``k8s.container.restart_count`` is not set, the last container instance is used."
msgstr "``k8s.container.restart_count`` リソース属性を設定して、特定のコンテナインスタンスとの関連付けを取得する。``k8s.container.restart_count`` が設定されていない場合は、最後のコンテナ・インスタンスが使用される。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:221
msgid "Association lists"
msgstr "協会リスト"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:223
msgid "Define rules for associating data passing through the processor with pod metadata using the ``pod_association`` field, which represents a list of associations executed in the specified order until the first match."
msgstr "``pod_association`` フィールドを使用して、プロセッサーを通過するデータとポッドのメタデータを関連付けるルールを定義します。このフィールドは、最初に一致するまで、指定された順序で実行される関連付けのリストを表します。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:225
msgid "Each association is a list of sources. Sources contain rules. The processor executes all rules and produce a metadata cache key as a result. For example:"
msgstr "各協会は情報源のリストである。ソースにはルールが含まれている。プロセッサーはすべてのルールを実行し、結果としてメタデータ・キャッシュ・キーを生成する。例えば、こうだ："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:238
msgid "To apply an association, each source has to be successfully retrieved from a log, trace, or metric. If you don't configure association rules, the processor associates resources using the connection's address."
msgstr "関連付けを適用するには、各ソースがログ、トレース、またはメトリックから正常に検索されなければならない。アソシエーション・ルールを設定しない場合、プロセッサーは、接続のア ドレスを使用してリソースを関連付ける。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:240
msgid "Each source rule consists of a pair of ``from`` and ``name`` statements, representing the rule type and attribute name respectively. You can define two types of ``from`` statements:"
msgstr "各ソース・ルールは、``from`` と``name`` ステートメントのペアで構成され、それぞれルール・タイプと属性名を表します。``from`` 、2種類のステートメントを定義できる："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:242
msgid "``from: connection``: Extracts the IP address attribute from the connection context, if available."
msgstr "``from: connection``:接続コンテキストからIPアドレス属性を抽出します。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:243
msgid "``from: resource_attribute``: Specifies the attribute name to search in the list of attributes."
msgstr "``from: resource_attribute``:属性リストから検索する属性名を指定します。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:245
msgid "The following example shows the two type of ``from`` source statements in pod association rules:"
msgstr "次の例では、ポッド関連付けルールの 2 種類の``from`` ソース文を示します："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:266
msgid "Kubernetes labels and annotations"
msgstr "Kubernetesのラベルとアノテーション"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:268
msgid "The Kubernetes attributes processor can also set resource attributes from Kubernetes labels and annotations of pods and namespaces. You can configure this through the ``annotations`` and ``labels`` lists inside ``extract``."
msgstr "Kubernetesアトリビュート・プロセッサーは、Kubernetesのラベルやポッドやネームスペースのアノテーションからリソースアトリビュートを設定することもできる。``extract`` 内の``annotations`` と``labels`` リストで設定できます。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:270
msgid "The processor extracts annotations and labels from pods and namespaces and adds them to spans, metrics, and logs. You can specify each item using the following parameters:"
msgstr "プロセッサーは、ポッドとネームスペースから注釈とラベルを抽出し、スパン、メトリクス、およびログに追加します。各項目は以下のパラメータで指定できる："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:272
msgid "``tag_name``: Name used to tag telemetry."
msgstr "``tag_name``:テレメトリのタグ付けに使用される名前。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:273
msgid "``key``: Key used to extract the value."
msgstr "``key``:値を抽出するためのキー。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:274
msgid "``from``: Kubernetes object used to extract the value. The two possible values are ``pod`` and ``namespace``. The default value is ``namespace``."
msgstr "``from``:値の抽出に使用されるKubernetesオブジェクト。可能な値は``pod`` と``namespace`` の2つ。デフォルト値は``namespace`` 。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:311
msgid "The following table shows the configuration options for the Kubernetes attributes processor:"
msgstr "次の表は、Kubernetesアトリビュートプロセッサーの設定オプションを示します："

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:329 ../../gdi/opentelemetry/components/prometheus-receiver.rst:106 ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:146
msgid "Known limitations"
msgstr "既知の制限"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:331
msgid "The Kubernetes attributes processor doesn't work well in the following cases."
msgstr "Kubernetesのアトリビュート・プロセッサーは、次のようなケースではうまく動作しない。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:334
msgid "Host networking mode"
msgstr "ホストネットワーキングモード"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:336
msgid "The processor can't identify pods running in the host network mode. Enriching telemetry data generated by such pods only works if the association rule isn't based on the IP address attribute."
msgstr "プロセッサーがホストネットワークモードで動作しているポッドを識別できない。このようなポッドによって生成されたテレメトリーデータをエンリッチすることは、アソシエーションルールがIPアドレス属性に基づいていない場合にのみ機能する。"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:339
msgid "Sidecar"
msgstr "サイドカー"

#: ../../gdi/opentelemetry/components/kubernetes-attributes-processor.rst:341
msgid "The processor can't detect containers from the same pods when running as a sidecar. Instead, use the Kubernetes Downward API to inject environment variables into the pods and use their values as tags."
msgstr "サイドカーとして実行すると、プロセッサーは同じポッドからのコンテナを検出できない。代わりに、Kubernetes Downward APIを使用して環境変数をポッドに注入し、その値をタグとして使用する。"

#: ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:-1
msgid "The Kubernetes cluster receiver allows the Splunk Distribution of OpenTelemetry Collector to collect cluster metrics from Kubernetes through its monitoring API."
msgstr "Kubernetesクラスタレシーバーは、Splunk Distribution of OpenTelemetry Collectorが、そのモニタリングAPIを通じてKubernetesからクラスタメトリクスを収集することを可能にする。"

#: ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:5
msgid "Kubernetes cluster receiver"
msgstr "Kubernetesクラスター受信機"

#: ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:10
msgid "The Kubernetes cluster receiver collects cluster metrics using the Kubernetes API server. You can use a single instance of this receiver to monitor an entire Kubernetes cluster. The supported pipeline type is ``metrics``. See :ref:`otel-data-processing` for more information."
msgstr "Kubernetesクラスタレシーバーは、Kubernetes APIサーバーを使用してクラスタメトリクスを収集します。このレシーバーの単一のインスタンスを使用して、Kubernetesクラスター全体を監視することができます。サポートされるパイプライン・タイプは``metrics`` です。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:12
msgid "Kubernetes version 1.21 and higher is compatible with the Kubernetes navigator. Using lower versions of Kubernetes is not supported for this receiver and might result in the navigator not displaying all clusters."
msgstr "Kubernetesバージョン1.21以上はKubernetesナビゲーターと互換性があります。低バージョンのKubernetesの使用はこのレシーバーではサポートされておらず、ナビゲーターにすべてのクラスタが表示されない可能性があります。"

#: ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:14
msgid "This receiver replaces the ``kubernetes-cluster`` Smart Agent monitor type."
msgstr "この受信機は、``kubernetes-cluster`` スマートエージェントのモニタータイプに代わるものです。"

#: ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:19
msgid "By default, the Kubernetes cluster receiver is already activated in the Helm chart of the Splunk OpenTelemetry Collectors. See :ref:`otel-kubernetes-config` for more information."
msgstr "デフォルトでは、Splunk OpenTelemetry Collectors の Helm チャートで Kubernetes クラスタレシーバがすでに有効になっています。詳しくは:ref:`otel-kubernetes-config` 。"

#: ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:21
msgid "To activate the Kubernetes cluster receiver manually in the Collector configuration, add ``k8s_cluster`` to the ``receivers`` section of your configuration file, as shown in the following example:"
msgstr "Collectorの設定でKubernetesクラスタレシーバーを手動で有効にするには、次の例に示すように、設定ファイルの``receivers`` セクションに``k8s_cluster`` を追加します："

#: ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:44
msgid "Sync metadata_exporters"
msgstr "メタデータ・エクスポーターの同期"

#: ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:46
msgid "Use ``metadata_exporters`` as a list of metadata exporters to sync with metadata collected by the Kubernetes cluster receiver. For example:"
msgstr "Kubernetesクラスターレシーバーが収集したメタデータと同期するメタデータエクスポーターのリストとして``metadata_exporters`` 。例えば、こうだ："

#: ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:56
msgid "Exporters specified in this list need to implement the following interface. If an exporter doesn't implement the interface, startup fails."
msgstr "このリストで指定されたエクスポーターは、以下のインターフェイスを実装する必要がある。エクスポーターがそのインターフェイスを実装していない場合、起動に失敗する。"

#: ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:77
msgid "Set node_conditions_to_report"
msgstr "node_conditions_to_reportを設定する。"

#: ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:79
msgid "Use the following configuration to have the ``k8s_cluster`` receiver emit two metrics, ``k8s.node.condition_ready`` and ``k8s.node.condition_memory_pressure``, one for each condition in the configuration:"
msgstr "以下のコンフィギュレーションを使用すると、``k8s_cluster`` のレシーバは、コンフィギュレーション内の各条件について、2つのメトリッ ク、``k8s.node.condition_ready`` と``k8s.node.condition_memory_pressure`` を出力します："

#: ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:90
msgid "The value is ``1`` if the ``ConditionStatus`` for the corresponding ``Condition`` is ``True``, ``0`` if it's ``False``, and ``-1`` if it's ``Unknown``. To learn more, search for “Conditions” in the Kubernetes documentation."
msgstr "対応する``Condition`` の``ConditionStatus`` が``True`` の場合は``1`` 、``False`` の場合は``0`` 、``Unknown`` の場合は``-1`` となる。詳しくは、Kubernetesのドキュメントで \"Conditions \"を検索してほしい。"

#: ../../gdi/opentelemetry/components/kubernetes-cluster-receiver.rst:95 ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:77
msgid "The following table shows the configuration options for the MongoDB Atlas:"
msgstr "次の表に MongoDB Atlas の設定オプションを示します："

#: ../../gdi/opentelemetry/components/logging-exporter.rst:-1
msgid "Use the logging exporter to write traces, metrics, and logs to the console. Read on to learn how to configure the component."
msgstr "ロギング・エクスポーターを使用して、トレース、メトリクス、およびログをコンソールに書き込みます。コンポーネントの設定方法については、こちらをお読みください。"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:4
msgid "Logging exporter"
msgstr "ログエクスポーター"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:9
msgid "The logging exporter allows the OpenTelemetry Collector to send traces, metrics, and logs directly to the console. The supported pipeline types are ``traces``, ``metrics``, and ``logs``. See :ref:`otel-data-processing` for more information."
msgstr "ロギング・エクスポーターにより、OpenTelemetry Collector はトレース、メトリクス、ログをコンソールに直接送信することができます。サポートされるパイプラインのタイプは、``traces`` 、``metrics`` 、``logs`` です。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:11
msgid "Use the logging exporter to diagnose and troubleshoot issues with telemetry received and processed by the OpenTelemetry Collector, or to obtain samples for other purposes."
msgstr "ロギング・エクスポーターを使用して、OpenTelemetry Collectorによって受信され処理されたテレメトリの問題を診断しトラブルシューティングしたり、他の目的のためにサンプルを取得したりします。"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:13
msgid "The logging exporter sends pipeline activity to the console as logs. To control the verbosity of the OpenTelemetry Collector itself, use the ``service.logger`` setting."
msgstr "ロギング・エクスポーターは、パイプラインの活動をログとしてコンソールに送る。OpenTelemetry Collector 自体の冗長性を制御するには、``service.logger`` 設定を使用します。"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:18
msgid "By default, the Splunk Distribution of OpenTelemetry Collector includes the logging exporter with verbosity set to ``detailed`` when deploying in host monitoring (agent) mode. See :ref:`otel-deployment-mode` for more information."
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションには、ホスト監視 (エージェント) モードでデプロイする際に、冗長度を``detailed`` に設定したロギングエクスポーターが含まれています。詳しくは:ref:`otel-deployment-mode` 。"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:31
msgid "To activate the logging exporter, add it to any pipeline you want to diagnose. For example:"
msgstr "ログエクスポーターを有効にするには、診断したいパイプラインに追加します。例えば、こうだ："

#: ../../gdi/opentelemetry/components/logging-exporter.rst:57
msgid "Available verbosity levels are ``basic``, ``normal``, and ``detailed``. The correspondence between verbosity levels and log levels is the following:"
msgstr "利用可能な冗長レベルは``basic`` 、``normal`` 、``detailed`` です。冗長性レベルとログレベルの対応は以下の通りである："

#: ../../gdi/opentelemetry/components/logging-exporter.rst:64
msgid "Verbosity level"
msgstr "動詞度"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:65
msgid "Log level (Deprecated)"
msgstr "ログレベル (非推奨)"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:66
msgid "``basic``"
msgstr "``basic``"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:67
msgid "``warn``, ``error``, ``panic``, ``fatal``"
msgstr "``warn``, ``error``, ``panic``, ``fatal``"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:68
msgid "``normal``"
msgstr "``normal``"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:69
msgid "``info``"
msgstr "``info``"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:70
msgid "``detailed``"
msgstr "``detailed``"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:73
msgid "The ``detailed`` verbosity level might increase resource consumption on the host. Deactivate the logging exporter after you've obtained sufficient samples."
msgstr "``detailed`` の冗長性レベルは、ホスト上のリソース消費を増加させるかもしれない。十分なサンプルが得られたら、ロギング・エクスポーターを停止する。"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:78
msgid "The following example shows a logging exporter with detailed verbosity, which is equivalent to a ``debug`` log level. Initial sampling is five messages logged each second, logging every 200 messages after the initial sample."
msgstr "次の例は、``debug`` ログレベルに相当する、詳細な冗長性を持つロギングエクスポーターを示しています。初期サンプリングは毎秒5メッセージ、初期サンプリング後は200メッセージごとにロギング。"

#: ../../gdi/opentelemetry/components/logging-exporter.rst:91
msgid "The following table shows the configuration options for the logging exporter:"
msgstr "次の表は、ロギング・エクスポーターの設定オプションを示したものである："

#: ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:-1
msgid "The MongoDB Atlas receiver allows the Splunk Distribution of OpenTelemetry Collector to collect metrics from MongoDB Atlas through its monitoring API."
msgstr "MongoDB Atlas レシーバーは、Splunk Distribution of OpenTelemetry Collector がそのモニタリング API を通して MongoDB Atlas からメトリクスを収集することを可能にします。"

#: ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:5
msgid "MongoDB Atlas receiver"
msgstr "MongoDBアトラスレシーバー"

#: ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:10
msgid "The MongoDB Atlas receiver allows the Splunk Distribution of OpenTelemetry Collector to collect metrics from MongoDB Atlas through its monitoring API. The supported pipeline types are ``metrics`` and ``logs``. See :ref:`otel-data-processing` for more information."
msgstr "MongoDB Atlas レシーバーは、Splunk Distribution of OpenTelemetry Collector がそのモニタリング API を通して MongoDB Atlas からメトリクスを収集することを可能にします。サポートされるパイプラインタイプは``metrics`` と``logs`` です。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:12
msgid "Database metrics are dimensionalized by project and database attributes, for example, ``project_name`` and ``database_name``."
msgstr "データベース・メトリクスは、プロジェクトとデータベースの属性、例えば``project_name`` や``database_name`` によって次元化されます。"

#: ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:15
msgid "Use the MongoDB Atlas receiver in place of the SignalFx Smart Agent ``mongodb-atlas`` monitor type."
msgstr "SignalFx Smart Agent``mongodb-atlas`` モニタータイプの代わりに MongoDB Atlas レシーバーを使用します。"

#: ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:28
msgid "Configure the MongoDB Atlas receiver as described in the next section."
msgstr "次のセクションで説明するように、MongoDB Atlas レシーバーを設定します。"

#: ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:34
msgid "To activate the MongoDB Atlas receiver, add ``mongodbatlas`` to the ``receivers`` section of your configuration file, as shown in the following example:"
msgstr "MongoDB Atlas のレシーバーを有効にするには、設定ファイルの``receivers`` セクションに``mongodbatlas`` を追加します："

#: ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:50
msgid "The following example shows how to collect logs:"
msgstr "次の例は、ログを収集する方法を示している："

#: ../../gdi/opentelemetry/components/mongodb-atlas-receiver.rst:63
msgid "To complete the configuration, include the receiver in the ``metrics`` or ``logs`` pipelines of the ``service`` section of your configuration file. For example:"
msgstr "コンフィギュレーションを完了するには、コンフィギュレーションファイルの``service`` セクションの``metrics`` または``logs`` パイプラインにレシーバーをインクルードする。例えば、こうだ："

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:-1
msgid "The Oracle Database receiver allows the Splunk Distribution of OpenTelemetry Collector to collect metrics from Oracle Database by connecting to it."
msgstr "Oracle Database レシーバーは、OpenTelemetry Collector の Splunk Distribution が Oracle Database に接続することで、Oracle Database からメトリクスを収集できるようにします。"

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:5
msgid "Oracle Database receiver"
msgstr "オラクル・データベース・レシーバー"

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:10
msgid "The Oracle Database receiver allows the Splunk Distribution of OpenTelemetry Collector to collect metrics from Oracle Database. The receiver connects to an Oracle Database instance and obtains metrics such as the number of physical reads, cumulative CPU time, and others. The supported pipeline type is ``metrics``. See :ref:`otel-data-processing` for more information."
msgstr "Oracle Database レシーバーにより、Splunk Distribution of OpenTelemetry Collector は Oracle Database からメトリクスを収集できます。レシーバーはOracle Databaseインスタンスに接続し、物理読み込み回数や累積CPU時間などのメトリクスを取得する。サポートされるパイプライン・タイプは``metrics`` です。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:24
msgid "Configure the Oracle Database receiver as described in the next section."
msgstr "次のセクションで説明するように、Oracle Database レシーバーを設定する。"

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:28
msgid "Create a database user for this monitor"
msgstr "このモニター用にデータベースユーザーを作成する"

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:30
msgid "To create an Oracle Database user for this monitor, run the following commands:"
msgstr "このモニター用にOracle Databaseユーザーを作成するには、以下のコマンドを実行する："

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:38
msgid "Depending on which metrics you collect, you might need to assign the following permissions to the database user:"
msgstr "収集するメトリクスによっては、データベース・ユーザーに以下の権限を割り当てる必要があります："

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:41
msgid "``GRANT SELECT ON V_$SESSION TO <username>;``"
msgstr "``GRANT SELECT ON V_$SESSION TO <username>;``"

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:42
msgid "``GRANT SELECT ON V_$SYSSTAT TO <username>;``"
msgstr "``GRANT SELECT ON V_$SYSSTAT TO <username>;``"

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:43
msgid "``GRANT SELECT ON V_$RESOURCE_LIMIT TO <username>;``"
msgstr "``GRANT SELECT ON V_$RESOURCE_LIMIT TO <username>;``"

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:44
msgid "``GRANT SELECT ON DBA_TABLESPACES TO <username>;``"
msgstr "``GRANT SELECT ON DBA_TABLESPACES TO <username>;``"

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:45
msgid "``GRANT SELECT ON DBA_DATA_FILES TO <username>;``"
msgstr "``GRANT SELECT ON DBA_DATA_FILES TO <username>;``"

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:50
msgid "To activate the Oracle Database receiver, add ``oracledb`` to the ``receivers`` section of your configuration file, as shown in the following example:"
msgstr "Oracle Databaseレシーバーをアクティブにするには、以下の例に示すように、設定ファイルの``receivers`` セクションに``oracledb`` を追加する："

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:60
msgid "To add more than one instance of Oracle Database, add as many entries of the ``oracledb`` receiver as needed. For example:"
msgstr "複数のOracle Databaseインスタンスを追加するには、``oracledb`` レシーバーのエントリーを必要なだけ追加する。例えば、こうだ："

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:88
msgid "The following table shows the configuration options for the Oracle Database receiver:"
msgstr "次の表に、Oracle Database レシーバーの構成オプションを示します："

#: ../../gdi/opentelemetry/components/oracledb-receiver.rst:97
msgid "The following metrics, resource attributes, and attributes, are available."
msgstr "以下のメトリクス、リソース属性、および属性が利用可能です。"

#: ../../gdi/opentelemetry/components/postgresql-receiver.rst:-1
msgid "The PostgreSQL receiver allows the Splunk Distribution of OpenTelemetry Collector to collect metrics from PostgreSQL through its statistics collector."
msgstr "PostgreSQL レシーバを使用すると、Splunk Distribution of OpenTelemetry Collector の統計コレクタを通じて PostgreSQL からメトリクスを収集できます。"

#: ../../gdi/opentelemetry/components/postgresql-receiver.rst:5
msgid "PostgreSQL receiver"
msgstr "PostgreSQLレシーバー"

#: ../../gdi/opentelemetry/components/postgresql-receiver.rst:10
msgid "The PostgreSQL receiver allows the Splunk Distribution of OpenTelemetry Collector to collect metrics from PostgreSQL through its statistics collector. The supported pipeline type is ``metrics``. See :ref:`otel-data-processing` for more information."
msgstr "PostgreSQL レシーバを使用すると、Splunk Distribution of OpenTelemetry Collector の統計コレクタを通じて PostgreSQL からメトリクスを収集できます。サポートされるパイプライン・タイプは``metrics`` です。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/postgresql-receiver.rst:12
msgid "Use the PostgreSQL receiver in place of the SignalFx Smart Agent ``postgresql`` monitor type."
msgstr "SignalFx Smart Agent``postgresql`` モニタタイプの代わりに PostgreSQL レシーバを使用します。"

#: ../../gdi/opentelemetry/components/postgresql-receiver.rst:17
msgid "This receiver supports PostgreSQL version 9.6 and higher."
msgstr "この受信機は PostgreSQL バージョン 9.6 以降をサポートしている。"

#: ../../gdi/opentelemetry/components/postgresql-receiver.rst:19
msgid "To let the receiver collect data, grant the monitoring user ``SELECT`` permissions for ``pg_stat_database``."
msgstr "受信機にデータを収集させるには、モニタリングユーザーに``pg_stat_database`` の``SELECT`` 権限を与える。"

#: ../../gdi/opentelemetry/components/postgresql-receiver.rst:32
msgid "Configure the PostgreSQL receiver as described in the next section."
msgstr "次のセクションで説明するように、PostgreSQL レシーバを設定する。"

#: ../../gdi/opentelemetry/components/postgresql-receiver.rst:38
msgid "To activate the PostgreSQL receiver, add ``mongodbatlas`` to the ``receivers`` section of your configuration file, as shown in the following example:"
msgstr "PostgreSQLレシーバーを有効にするには、以下の例のように、設定ファイルの``receivers`` セクションに``mongodbatlas`` を追加する："

#: ../../gdi/opentelemetry/components/postgresql-receiver.rst:59
msgid "The ``username`` and ``password`` fields are mandatory. By default, the receiver searches for a PostgreSQL server at ``localhost:5432``. You can customize the address by editing the value of the ``endpoint`` field."
msgstr "``username`` と``password`` フィールドは必須。デフォルトでは、受信機は PostgreSQL サーバを``localhost:5432`` で検索する。``endpoint`` フィールドの値を編集することで、アドレスをカスタマイズすることができます。"

#: ../../gdi/opentelemetry/components/postgresql-receiver.rst:74
msgid "The following table shows the configuration options for the PostgreSQL:"
msgstr "次の表は、PostgreSQLの設定オプションを示したものである："

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:-1
msgid "The Prometheus receiver allows the Splunk Distribution of OpenTelemetry Collector to collect metrics from any scraping source compatible with the Prometheus format."
msgstr "Prometheus レシーバーにより、Splunk Distribution of OpenTelemetry Collector は Prometheus フォーマットと互換性のあるスクレイピングソースからメトリクスを収集することができます。"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:5
msgid "Prometheus receiver"
msgstr "プロメテウス受信機"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:10
msgid "The Prometheus receiver allows the Splunk Distribution of OpenTelemetry Collector to collect metrics from any source exposing telemetry in Prometheus format. The supported pipeline type is ``metrics``."
msgstr "Prometheus レシーバーにより、Splunk Distribution of OpenTelemetry Collector は、Prometheus フォーマットでテレメトリを公開するあらゆるソースからメトリクスを収集することができます。サポートされるパイプライン・タイプは``metrics`` です。"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:12
msgid "To use a simplified version of the Prometheus receiver that supports single endpoints, see :ref:`simple-prometheus-receiver`."
msgstr "シングルエンドポイントをサポートするPrometheusレシーバーの簡易版を使用するには、:ref:`simple-prometheus-receiver` を参照してください。"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:17
msgid "The Prometheus receiver can scrape metrics data from any application that exposes a Prometheus endpoint. The receiver converts Prometheus metrics to OpenTelemetry metrics while preserving metric names, values, timestamps, and labels. You can also reuse your existing Prometheus configurations."
msgstr "Prometheus レシーバーは、Prometheus エンドポイントを公開するあらゆるアプリケーションからメトリクス・データをスクレイピングできます。レシーバーは、メトリック名、値、タイムスタンプ、ラベルを保持したまま、Prometheus メトリックを OpenTelemetry メトリックに変換します。また、既存のプロメテウス設定を再利用することもできます。"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:22
msgid "By default, the Splunk Distribution of OpenTelemetry Collector includes the Prometheus receiver in the ``metrics/internal`` pipeline when deploying in host monitoring (agent) mode. See :ref:`otel-deployment-mode` for more information."
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションは、ホスト監視 (エージェント) モードでデプロイする場合、``metrics/internal`` パイプラインに Prometheus レシーバーを含めます。詳しくは:ref:`otel-deployment-mode` 。"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:24
msgid "To activate additional Prometheus receivers, add a new ``prometheus`` entry in the ``receivers`` section of the Collector configuration file, as in the following example:"
msgstr "追加の Prometheus レシーバをアクティブにするには、次の例のように Collector 設定ファイルの``receivers`` セクションに新しい``prometheus`` エントリを追加します："

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:48 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:64
msgid "Don't remove the ``prometheus/internal`` receiver from the configuration. Internal metrics feed the Splunk Distribution of OpenTelemetry Collector default dashboard."
msgstr "``prometheus/internal`` 受信機をコンフィギュレーションから外さないでください。内部メトリクスは Splunk Distribution of OpenTelemetry Collector のデフォルトダッシュボードにフィードされます。"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:51
msgid "Scraper configuration"
msgstr "スクレーパーの構成"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:53
msgid "The Prometheus Receiver supports the most of the scrape configuration of Prometheus, including service discovery, through the ``config.scrape_configs`` section. In the ``scrape_config`` section of your configuration file you can specify a set of targets and parameters that describe how to scrape them."
msgstr "Prometheus Receiverは、``config.scrape_configs`` セクションを通じて、サービスディスカバリを含むPrometheusのスクレイプ設定のほとんどをサポートしています。設定ファイルの``scrape_config`` セクションでは、ターゲットとそのスクレイピング方法を記述するパラメーターのセットを指定することができる。"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:55
msgid "For basic configurations, a single scrape configuration specifies a single job. You can configure static targets using the ``static_configs`` parameter. Dynamically discovered targets use service discovery mechanisms of Prometheus. In addition, the ``relabel_configs`` parameter allows advanced modifications to any target and its labels before scraping."
msgstr "基本設定では、1つのスクレイプ設定は1つのジョブを指定する。静的ターゲットは``static_configs`` パラメータを使って設定できる。動的に発見されたターゲットは、Prometheusのサービス発見メカニズムを使用する。さらに、``relabel_configs`` パラメーターにより、スクレイピング前にターゲットとそのラベルを高度に修正することができる。"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:57
msgid "The following is an example of a basic scrape configuration:"
msgstr "以下は基本的なスクレイプ設定の例である："

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:88
msgid "To use environment variables in the Prometheus receiver configuration, use the ``${<var>}`` syntax. For example:"
msgstr "Prometheus 受信機設定で環境変数を使用するには、``${<var>}`` 構文を使用します。例えば、こうだ："

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:98
msgid "If you're using existing Prometheus configurations, replace ``$`` with ``$$`` to prevent the Collector from reading them as environment variables."
msgstr "既存の Prometheus 設定を使用している場合は、``$`` を``$$`` に置き換えて、Collector が環境変数として読み込まないようにしてください。"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:101
msgid "Scaling considerations"
msgstr "スケーリングに関する考慮事項"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:103
msgid "When running multiple replicas of the Collector with the same configuration, the Prometheus receiver scrapes targets multiple times. If you need to configure each replica with different scraping configurations, shard the scraping. The Prometheus receiver is stateful. For considerations on scaling, see :ref:`otel-sizing`."
msgstr "同じ設定でCollectorの複数のレプリカを実行すると、Prometheusレシーバーがターゲットを複数回スクレイピングします。各レプリカを異なるスクレイピング設定で構成する必要がある場合は、スクレイピングをシャードする。プロメテウスのレシーバーはステートフルである。スケーリングに関する考察は、:ref:`otel-sizing` を参照のこと。"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:108
msgid "The following Prometheus features are not supported and return an error if used in the receiver configuration:"
msgstr "以下の Prometheus 機能はサポートされておらず、受信機設定で使用するとエラーを返します："

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:110
msgid "``alert_config.alertmanagers``"
msgstr "``alert_config.alertmanagers``"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:111
msgid "``alert_config.relabel_configs``"
msgstr "``alert_config.relabel_configs``"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:112
msgid "``remote_read``"
msgstr "``remote_read``"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:113
msgid "``remote_write``"
msgstr "``remote_write``"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:114
msgid "``rule_files``"
msgstr "``rule_files``"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:119 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:69
msgid "The following table shows the configuration options for the Prometheus receiver:"
msgstr "以下の表は、Prometheus受信機の設定オプションを示しています："

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:128
msgid "The Prometheus receiver converts Prometheus metrics to OpenTelemetry metrics following these conversion rules:"
msgstr "Prometheus レシーバーは、以下の変換ルールに従って Prometheus メトリクスを OpenTelemetry メトリクスに変換します："

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:135 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:85
msgid "Prometheus metric type"
msgstr "プロメテウスのメトリックタイプ"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:136 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:86
msgid "OpenTelemetry metric type"
msgstr "OpenTelemetryメトリックタイプ"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:137 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:87
msgid "Counter (monotonic)"
msgstr "カウンター（単調）"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:138 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:88
msgid "Sum (data type ``double``)"
msgstr "合計 (データ型``double``)"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:139 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:89
msgid "Gauge |br| Unknown"
msgstr "ゲージ|br| 不明"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:140 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:90
msgid "Gauge (data type ``double``)"
msgstr "ゲージ (データ型``double``)"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:142 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:92
msgid "Histogram (cumulative distribution)"
msgstr "ヒストグラム（累積分布）"

#: ../../gdi/opentelemetry/components/prometheus-receiver.rst:144 ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:94
msgid "Summary (percentiles)"
msgstr "サマリー（パーセンタイル）"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:-1
msgid "Use the receiver creator to create receivers at runtime in the OpenTelemetry Collector based on rules. Read on to learn how to configure the component."
msgstr "ルールに基づき OpenTelemetry Collector で実行時にレシーバを作成するには、レシーバクリエータを使用します。コンポーネントの設定方法については、こちらをお読みください。"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:5
msgid "Receiver creator receiver"
msgstr "レシーバー・クリエーター・レシーバー"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:10
msgid "The receiver creator receiver allows the Splunk Distribution of OpenTelemetry Collector to create new receivers at runtime based on configured rules and observer extensions. The supported pipeline types are ``metrics``, ``traces``, and ``logs``. See :ref:`otel-data-processing` for more information."
msgstr "レシーバー作成レシーバーにより、Splunk Distribution of OpenTelemetry Collector は、設定されたルールとオブザーバー拡張機能に基づいて、実行時に新しいレシーバーを作成することができます。サポートされるパイプラインのタイプは、``metrics`` 、``traces`` 、``logs`` です。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:12
msgid "You can use any of the following observer extensions as listeners for the receiver creator:"
msgstr "受信機クリエーターのリスナーとして、以下のオブザーバー拡張機能のいずれかを使用できます："

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:14
msgid "``docker_observer``: Detects and reports running container endpoints through the Docker API."
msgstr "``docker_observer``:Docker APIを通じて実行中のコンテナエンドポイントを検出し、レポートします。"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:15
msgid "``ecs_task_observer``: Detects and reports container endpoints for running ECS tasks."
msgstr "``ecs_task_observer``:ECS タスクを実行するコンテナエンドポイントを検出し、レポートする。"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:16
msgid "``host_observer``: Discovers listening network endpoints of the current host."
msgstr "``host_observer``:現在のホストのリッスンしているネットワークエンドポイントを発見する。"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:17
msgid "``k8s_observer``: Detects and reports Kubernetes pod, port, and node endpoints through the Kubernetes API."
msgstr "``k8s_observer``:Kubernetes APIを通じてKubernetesのポッド、ポート、ノードのエンドポイントを検出し、レポートします。"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:19
msgid "This receiver can use other receivers for applications and hosts, like the ``kubeletstats`` or ``hostmetrics`` receivers. A typical use case of the receiver creator is to collect metrics for infrastructure that is deployed dynamically, such as Kubernetes pods or Docker containers."
msgstr "このレシーバーは、``kubeletstats`` や``hostmetrics`` レシーバーのように、アプリケーションやホストに他のレシーバーを使用することができる。レシーバ・クリエータの典型的なユースケースは、KubernetesポッドやDockerコンテナなど、動的にデプロイされるインフラストラクチャのメトリクスを収集することです。"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:32
msgid "Configure the receiver creator receiver as described in the next section."
msgstr "次のセクションで説明するように、レシーバークリエータレシーバを設定します。"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:38
msgid "To activate the receiver creator receiver, add the desired extensions to the ``extensions`` section of your configuration file, followed by ``receiver_creator`` instances in the ``receivers`` section. For example:"
msgstr "レシーバー・クリエーター・レシーバーを有効にするには、設定ファイルの``extensions`` セクションに必要な拡張子を追加し、続いて``receivers`` セクションに``receiver_creator`` インスタンスを追加します。例えば、こうだ："

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:70
msgid "You can nest and configure any supported receiver inside the ``receivers`` section of a ``receiver_creator`` configuration. Which receiver you can nest depends on the type of infrastructure the receiver creator is watching through the extensions defined in ``watch_observers``."
msgstr "``receiver_creator`` 設定の``receivers`` セクション内に、サポートされているレシーバーをネストして設定することができます。どのレシーバーをネストできるかは、レシーバー作成者が``watch_observers`` で定義された拡張機能を通じて監視しているインフラの種類に依存する。"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:73
msgid "Rules expressions"
msgstr "ルール表現"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:75
msgid "New receivers are created dynamically based on rules. Each rule must start with ``type == (\"pod\"|\"port\"|\"hostport\"|\"container\"|\"k8s.node\") &&`` such that the rule matches only one endpoint type. For a list of variable available to each endpoint type, see :new-page:`Rules expressions <https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/receiver/receivercreator/README.md#rule-expressions>` on GitHub."
msgstr "新しいレシーバーはルールに基づいて動的に作成される。各ルールは、1つのエンドポイント・タイプにのみマッチするように、``type == (\"pod\"|\"port\"|\"hostport\"|\"container\"|\"k8s.node\") &&`` で始まらなければならない。各エンドポイント・タイプで利用可能な変数のリストについては、GitHubの:new-page:`Rules expressions<https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/receiver/receivercreator/README.md#rule-expressions>` 。"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:79
msgid "Docker observer example"
msgstr "Dockerオブザーバーの例"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:81
msgid "The following example shows how to configure the receiver creator using the Docker observer:"
msgstr "以下の例では、Docker observerを使用してReceiver creatorを設定する方法を示しています："

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:106
msgid "See :new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/observer/dockerobserver/README.md` for a complete list of settings."
msgstr "設定の完全なリストは:new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/observer/dockerobserver/README.md` を参照。"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:109
msgid "Kubernetes observer example"
msgstr "Kubernetesオブザーバーの例"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:111
msgid "The following example shows how to configure the receiver creator using the Kubernetes observer:"
msgstr "次の例では、Kubernetesオブザーバーを使用してレシーバークリエイターを設定する方法を示しています："

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:141
msgid "See :new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/observer/k8sobserver/README.md` for a complete list of settings."
msgstr "設定の完全なリストは:new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/observer/k8sobserver/README.md` を参照。"

#: ../../gdi/opentelemetry/components/receiver-creator-receiver.rst:146
msgid "The following table shows the configuration options for the receiver creator receiver:"
msgstr "次の表は、レシーバー・クリエーター・レシーバーの設定オプションを示します："

#: ../../gdi/opentelemetry/components/resource-processor.rst:-1
msgid "Use the resource processor to update, add, or delete resource attributes. Read on to learn how to configure the component."
msgstr "リソース属性を更新、追加、または削除するには、リソースプロセッサを使用します。コンポーネントの設定方法については、こちらをお読みください。"

#: ../../gdi/opentelemetry/components/resource-processor.rst:5
msgid "Resource processor"
msgstr "リソース・プロセッサ"

#: ../../gdi/opentelemetry/components/resource-processor.rst:10
msgid "The resource processor is an OpenTelemetry Collector component that can add, update, or delete resource attributes. The supported pipeline types are ``traces``, ``metrics``, and ``logs``. See :ref:`otel-data-processing` for more information."
msgstr "リソースプロセッサはOpenTelemetry Collectorのコンポーネントで、リソース属性の追加、更新、削除ができます。サポートされるパイプラインのタイプは、``traces`` 、``metrics`` 、``logs`` です。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/resource-processor.rst:12
msgid "The resource processor is useful when you want to add attributes that your instrumentation doesn't provide, or when you need to override the value of attributes collected by receivers using other attributes. To edit existing attributes, for example to obfuscate sensitive information, use the attributes processor. See :ref:`attributes-processor`."
msgstr "リソース・プロセッサは、インスツルメンテーションが提供しない属性を追加したい場合や、他の属性を使用してレシーバが収集した属性の値をオーバーライドする必要がある場合に便利です。既存の属性を編集するには、例えば機密情報を難読化するには、属性プロセッサを使用します。:ref:`attributes-processor` を参照。"

#: ../../gdi/opentelemetry/components/resource-processor.rst:14
msgid "Target attributes are defined through the ``key`` field. The ``value`` field contains the desired value for the attribute. Each attribute in the list requires an action. The available actions are the following:"
msgstr "ターゲット属性は、``key`` フィールドを通じて定義される。``value`` フィールドには属性に必要な値が入ります。リスト内の各属性はアクションを必要とする。利用可能なアクションは以下の通り："

#: ../../gdi/opentelemetry/components/resource-processor.rst:24
msgid "Adds the key-value combination to attributes when the key doesn't exist. Requires one of the following fields: ``value``, ``from_attribute``, or ``from_context``."
msgstr "キーが存在しない場合に、キーと値の組み合わせを属性に追加する。以下のフィールドのいずれかが必要：``value`` ``from_attribute`` または``from_context`` 。"

#: ../../gdi/opentelemetry/components/resource-processor.rst:26
msgid "Updates an existing key with a value. Requires one of the following fields: ``value``, ``from_attribute``, or ``from_context``."
msgstr "既存のキーを値で更新する。以下のフィールドのいずれかが必要：``value`` ``from_attribute`` または``from_context`` 。"

#: ../../gdi/opentelemetry/components/resource-processor.rst:28
msgid "Adds or updates a key-value combination depending on the attributes containing the key. Requires one of the following fields: ``value``, ``from_attribute``, or ``from_context``."
msgstr "キーを含む属性に応じて、キーと値の組み合わせを追加または更新します。以下のフィールドのいずれかが必要：``value`` ``from_attribute`` または``from_context`` 。"

#: ../../gdi/opentelemetry/components/resource-processor.rst:30
msgid "Deletes the attribute."
msgstr "属性を削除します。"

#: ../../gdi/opentelemetry/components/resource-processor.rst:32
msgid "Hashes an existing value using the SHA-1 algorithm."
msgstr "既存の値をSHA-1アルゴリズムでハッシュする。"

#: ../../gdi/opentelemetry/components/resource-processor.rst:34
msgid "Extracts values from an attribute using a regular expression to add or update the value of keys specified in the rule. Requires the ``pattern`` field."
msgstr "正規表現を使って属性から値を抽出し、ルールで指定されたキーの値を追加または更新する。``pattern`` フィールドが必要。"

#: ../../gdi/opentelemetry/components/resource-processor.rst:36
msgid "Converts the type of an existing attribute if the attribute can be converted. Requires the ``converted_type`` field."
msgstr "属性が変換可能な場合、既存の属性の型を変換します。``converted_type`` フィールドが必要。"

#: ../../gdi/opentelemetry/components/resource-processor.rst:38
msgid "For information about the Resource Detection processor, see :ref:`resourcedetection-processor`."
msgstr "リソース検出プロセッサーについては、:ref:`resourcedetection-processor` を参照。"

#: ../../gdi/opentelemetry/components/resource-processor.rst:51
msgid "Configure the resource processor as described in the next section."
msgstr "次のセクションで説明するように、リソースプロセッサを設定する。"

#: ../../gdi/opentelemetry/components/resource-processor.rst:57
msgid "To activate the resource processor, add ``resource`` to the ``processors`` section of your configuration file, as shown in the following example:"
msgstr "リソースプロセッサーを有効にするには、次の例のように、設定ファイルの``processors`` セクションに``resource`` を追加します："

#: ../../gdi/opentelemetry/components/resource-processor.rst:95
msgid "The following table shows the configuration options for the resource processor:"
msgstr "以下の表に、リソースプロセッサーの設定オプションを示します："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:-1
msgid "Use the resource detection processor to detect resources and manipulate information about them in OpenTelemetry format. Read on to learn how to configure the component."
msgstr "リソース検出プロセッサを使ってリソースを検出し、OpenTelemetryフォーマットでリソースの情報を操作する。コンポーネントの設定方法については、こちらをお読みください。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:5
msgid "Resource detection processor"
msgstr "リソース検出プロセッサ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:10
msgid "The resource detection processor is an OpenTelemetry Collector component that can detect resources in the incoming telemetry and collect additional metadata about them. The supported pipeline types are ``traces``, ``metrics``, and ``logs``. See :ref:`otel-data-processing` for more information."
msgstr "リソース検出プロセッサはOpenTelemetry Collectorのコンポーネントで、受信するテレメトリからリソースを検出し、それらに関する追加のメタデータを収集することができます。サポートされるパイプラインのタイプは、``traces`` 、``metrics`` 、``logs`` です。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:12
msgid "The resource detection processor uses detectors to collect system metadata from a variety of sources. The detection targets supported by the resource detection processor are the following:"
msgstr "リソース検出プロセッサは、検出器を使用して、さまざまなソースからシステムのメタデータを収集する。リソース検出プロセッサがサポートする検出対象は以下の通り："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:14
msgid "On-host environment variables"
msgstr "ホスト環境変数"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:15
msgid "On-host system information"
msgstr "オンホスト・システム情報"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:16
msgid "Amazon Web Services EC2, ECS, EKS, Elastic Beanstalk, and Lambda"
msgstr "アマゾン ウェブ サービス EC2、ECS、EKS、Elastic Beanstalk、ラムダ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:17
msgid "Azure instances and AKS"
msgstr "AzureインスタンスとAKS"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:18
msgid "Google Cloud Platform GCE, GKE, Cloud Run, Cloud Functions, and App Engine"
msgstr "Google Cloud Platform GCE、GKE、Cloud Run、Cloud Functions、App Engine"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:19
msgid "Consul agents"
msgstr "領事代理人"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:20
msgid "Openshift and Kubernetes"
msgstr "OpenshiftとKubernetes"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:21
msgid "Docker containers"
msgstr "Dockerコンテナ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:24
msgid "You can use metadata collected by the resource detection processor to expand or overwrite resource values in the collected telemetry. By default, the processor overrides existing resource metadata. You can also choose to append attributes to existing resources."
msgstr "リソース検出プロセッサが収集したメタデータを使用して、収集したテレメトリのリソース値を拡張または上書きできます。デフォルトでは、プロセッサは既存のリソースメタデータを上書きする。また、既存のリソースに属性を追加することもできます。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:26
msgid "For information about the Resource processor, see :ref:`resource-processor`."
msgstr "リソースプロセッサーについては、:ref:`resource-processor` を参照。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:31
msgid "By default, the Splunk Distribution of OpenTelemetry Collector includes the resource detection processor in all the predefined pipelines when deploying in host monitoring (agent) mode. When deploying the Collector in data forwarding (gateway) mode, the resource detection processor collects internal metrics. See :ref:`otel-deployment-mode` for more information."
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションには、ホスト監視 (エージェント) モードでデプロイする場合、すべての定義済みパイプラインにリソース検出プロセッサが含まれています。Collectorをデータ転送(ゲートウェイ)モードで展開すると、リソース検出プロセッサは内部メトリックを収集します。詳しくは:ref:`otel-deployment-mode` 。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:33
msgid "To detect more types of resources, you can configure additional processors and add them to existing or new pipelines, as shown in the following sample configurations."
msgstr "より多くの種類のリソースを検出するには、以下の設定例に示すように、追加のプロセッサーを設定し、既存または新規のパイプラインに追加します。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:35
msgid "Don't remove the ``resourcedetection`` or the ``resourcedetection/internal`` processors from the configuration. Removing the processor might prevent Splunk Observability Cloud from collecting infrastructure metadata."
msgstr "``resourcedetection`` 、``resourcedetection/internal`` プロセッサーを構成から外さないでください。プロセッサを削除すると、Splunk Observability Cloud がインフラストラクチャメタデータを収集できなくなる可能性があります。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:38
msgid "Main configuration"
msgstr "メイン構成"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:40
msgid "The resource attributes processor accepts a list of detectors in ``detectors``. You can specify which resource attributes are collected or ignored for each detector, as well as whether existing attributes must be overridden. See :ref:`resourcedetection-processor-metadata` for a list of detectors."
msgstr "リ ソ ース属性プ ロ セ ッ サは、``detectors`` で検出器の リ ス ト を受け付けます。各検出器で収集または無視されるリソース属性、および既存の属性をオーバーライドする必要があるかどうかを指定できます。検出器のリストは:ref:`resourcedetection-processor-metadata` 。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:42
msgid "The following example shows the main configuration settings of the resource attributes processor:"
msgstr "次の例は、リソース属性プロセッサーの主な構成設定を示している："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:64
msgid "Starting from version 0.81 of the Collector, the ``attributes`` setting is deprecated. To migrate from ``attributes`` to ``resource_attributes``, see :ref:`migration-from-attributes-to-resource-attributes`."
msgstr "コレクターのバージョン 0.81 以降、``attributes`` の設定は非推奨です。``attributes`` から``resource_attributes`` への移行については、:ref:`migration-from-attributes-to-resource-attributes` を参照のこと。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:70
msgid "The following sample configurations show how to detect resources from different targets."
msgstr "以下のサンプル設定は、異なるターゲットからのリソースを検出する方法を示しています。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:73
msgid "Collect EC2 resources and tags"
msgstr "EC2リソースとタグの収集"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:75
msgid "The following example shows how detect resources, environment variables, and selected tags from EC2 instances without overwriting existing metadata:"
msgstr "次の例では、既存のメタデータを上書きすることなく、EC2インスタンスからリソース、環境変数、選択したタグを検出する方法を示している："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:98
msgid "Collect OpenShift resources over a TLS connection"
msgstr "TLS接続でOpenShiftリソースを収集する"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:100
msgid "The following example shows how to collect resource attributes from OpenShift and the Kubernetes API by specifying an IP address and port, as well as a TLS certificate and service token:"
msgstr "以下の例では、IPアドレスとポート、TLS証明書とサービス・トークンを指定して、OpenShiftとKubernetes APIからリソース属性を収集する方法を示しています："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:117
msgid "Collect system metadata using all available sources"
msgstr "利用可能なすべてのソースを使用してシステムのメタデータを収集する"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:119
msgid "The following example shows how to use all sources available to the ``system`` detector to determine the host name. The ``resource_attributes`` field tells the processor to only include the selected attributes."
msgstr "次の例は、``system`` 検出器で利用可能なすべてのソースを使用してホスト名を決定する方法を示しています。``resource_attributes`` フィールドは、選択された属性のみを含めるようにプロセッサに指示する。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:139
msgid "Migration from attributes to resource_attributes"
msgstr "attributesからresource_attributesへの移行"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:141
msgid "Starting from version 0.81 of the Collector, the resource detection processor deprecates the ``attributes`` option and replaces it with ``resource_attributes``, which is specific to each detector."
msgstr "コレクターのバージョン0.81から、リソース検出プロセッサは``attributes`` オプションを廃止し、各検出器に固有の``resource_attributes`` 。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:143
msgid "To migrate, move the attributes inside of ``attributes`` to the relevant ``resource_attributes`` lists of each detector. For example, consider the following configuration:"
msgstr "移行するには、``attributes`` 内の属性を各検出器の関連する``resource_attributes`` リストに移動します。例えば、次のような構成を考えてみよう："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:152
msgid "You can replace the previous configuration with the following:"
msgstr "以前の設定を以下のように置き換えることができる："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:170
msgid "Ordering considerations"
msgstr "注文に関する注意事項"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:172
msgid "If multiple detectors insert the same attribute name, only the first detector is considered. For example, if you use the ``eks`` and ``ec2`` detectors, the value of the ``cloud.platform`` attribute is ``aws_eks`` instead of ``ec2``."
msgstr "複数の検出器が同じ属性名を挿入した場合、最初の検出器のみが考慮される。例えば、``eks`` と``ec2`` ディテクターを使用する場合、``cloud.platform`` 属性の値は``ec2`` ではなく``aws_eks`` となります。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:174
msgid "When using multiple detectors, follow this order:"
msgstr "複数の検出器を使用する場合は、次の順序に従ってください："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:176
msgid "AWS: ``lambda``, ``elastic_beanstalk``, ``eks``, ``ecs``, ``ec2``"
msgstr "AWS：``lambda`` ``elastic_beanstalk``,``eks``,``ecs`` 、 ``ec2``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:177
msgid "GCP: ``gke``, ``gce``"
msgstr "GCP:``gke`` 、 ``gce``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:182
msgid "Available detectors and metadata"
msgstr "利用可能な検出器とメタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:184
msgid "The resource detection processor uses detectors to collect resource metadata. By default, the following detectors are active in the Splunk Distribution of OpenTelemetry Collector: ``gcp``, ``ecs``, ``ec2``, ``azure``, and ``system``."
msgstr "リソース検出プロセッサーは、ディテクターを使用してリソースのメタデータを収集する。デフォルトでは、以下の検出器が OpenTelemetry Collector の Splunk ディストリビューションでアクティブになっています：``gcp`` ``ecs``,``ec2``,``azure``, および``system`` 。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:187
msgid "Amazon Elastic Beanstalk metadata"
msgstr "Amazon Elastic Beanstalkのメタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:189
msgid "The ``elastic_beanstalk`` detector collects the following resource attributes by reading the AWS X-Ray configuration on all Beanstalk instances that have X-Ray activated:"
msgstr "``elastic_beanstalk`` ディテクタは、X-Ray が有効になっているすべての Beanstalk インスタンスの AWS X-Ray 設定を読み取ることで、以下のリソース属性を収集します："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:191 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:202 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:210 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:227 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:249
msgid "``cloud.provider`` (Value: ``aws``)"
msgstr "``cloud.provider`` (Value:``aws``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:192
msgid "``cloud.platform`` (Value: ``aws_elastic_beanstalk``)"
msgstr "``cloud.platform`` (Value:``aws_elastic_beanstalk``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:194
msgid "``service.instance.id``"
msgstr "``service.instance.id``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:195
msgid "``service.version``"
msgstr "``service.version``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:198
msgid "Amazon EKS metadata"
msgstr "アマゾンEKSメタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:200
msgid "The ``eks`` detector collects the following resource attributes:"
msgstr "``eks`` 検出器は以下のリソース属性を収集する："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:203
msgid "``cloud.platform`` (Value: ``aws_eks``)"
msgstr "``cloud.platform`` (Value:``aws_eks``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:206
msgid "AWS EC2 metadata"
msgstr "AWS EC2のメタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:208
msgid "The ``ec2`` detector collects the following resource attributes:"
msgstr "``ec2`` 検出器は以下のリソース属性を収集する："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:211
msgid "``cloud.platform`` (Value: ``aws_ec2``)"
msgstr "``cloud.platform`` (Value:``aws_ec2``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:212 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:229
msgid "``cloud.account.id``"
msgstr "``cloud.account.id``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:213 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:230 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:264 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:403
msgid "``cloud.region``"
msgstr "``cloud.region``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:214 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:231
msgid "``cloud.availability_zone``"
msgstr "``cloud.availability_zone``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:215 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:414
msgid "``host.id``"
msgstr "``host.id``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:216
msgid "``host.image.id``"
msgstr "``host.image.id``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:218
msgid "``host.type``"
msgstr "``host.type``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:220
msgid "The ``ec2`` detector can also collect tags. To collect tags, add the ``ec2:DescribeTags`` permission to the EC2 instance's policy. If you're using a proxy on the EC2 instance, allow requests for metadata."
msgstr "``ec2`` 、タグを収集することもできる。タグを収集するには、EC2インスタンスのポリシーに``ec2:DescribeTags`` 。EC2インスタンスでプロキシを使用している場合は、メタデータへのリクエストを許可する。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:223
msgid "AWS ECS metadata"
msgstr "AWS ECS メタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:225
msgid "The ``ecs`` detector collects the following resource attributes. Only Task Metadata Endpoint (TMDE) version 3 and 4 are supported."
msgstr "``ecs`` 検出器は以下のリソース属性を収集する。タスク・メタデータ・エンドポイント（TMDE）バージョン3および4のみがサポートされています。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:228
msgid "``cloud.platform`` (Value: ``aws_ecs``)"
msgstr "``cloud.platform`` (Value:``aws_ecs``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:232
msgid "``aws.ecs.cluster.arn``"
msgstr "``aws.ecs.cluster.arn``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:233
msgid "``aws.ecs.task.arn``"
msgstr "``aws.ecs.task.arn``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:234
msgid "``aws.ecs.task.family``"
msgstr "``aws.ecs.task.family``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:235
msgid "``aws.ecs.task.revision``"
msgstr "``aws.ecs.task.revision``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:236
msgid "``aws.ecs.launchtype`` (TMDE version 4 only)"
msgstr "``aws.ecs.launchtype`` (TMDEバージョン4のみ）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:237
msgid "``aws.log.group.names`` (TMDE version 4 only)"
msgstr "``aws.log.group.names`` (TMDEバージョン4のみ）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:238
msgid "``aws.log.group.arns`` (TMDE version 4 only)"
msgstr "``aws.log.group.arns`` (TMDEバージョン4のみ）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:239
msgid "``aws.log.stream.names`` (TMDE version 4 only)"
msgstr "``aws.log.stream.names`` (TMDEバージョン4のみ）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:240
msgid "``aws.log.stream.arns`` (TMDE version 4 only)"
msgstr "``aws.log.stream.arns`` (TMDEバージョン4のみ）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:243
msgid "AWS Lambda metadata"
msgstr "AWS Lambda metadata"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:245
msgid "The ``lambda`` detector collects the following resource attributes using runtime environment variables:"
msgstr "``lambda`` 検出器は、実行時環境変数を使用して、以下のリソース属性を収集する："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:247
msgid "``aws.log.group.names`` (Value: ``$AWS_LAMBDA_LOG_GROUP_NAME``)"
msgstr "``aws.log.group.names`` (Value:``$AWS_LAMBDA_LOG_GROUP_NAME``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:248
msgid "``aws.log.stream.names`` (Value: ``$AWS_LAMBDA_LOG_STREAM_NAME``)"
msgstr "``aws.log.stream.names`` (Value:``$AWS_LAMBDA_LOG_STREAM_NAME``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:250
msgid "``cloud.platform`` (Value: ``aws_lambda``)"
msgstr "``cloud.platform`` (Value:``aws_lambda``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:251
msgid "``cloud.region`` (Value: ``$AWS_REGION``)"
msgstr "``cloud.region`` (Value:``$AWS_REGION``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:252
msgid "``faas.name`` (Value: ``$AWS_LAMBDA_FUNCTION_NAME``)"
msgstr "``faas.name`` (Value:``$AWS_LAMBDA_FUNCTION_NAME``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:253
msgid "``faas.version`` (Value: ``$AWS_LAMBDA_FUNCTION_VERSION``)"
msgstr "``faas.version`` (Value:``$AWS_LAMBDA_FUNCTION_VERSION``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:254
msgid "``faas.instance`` (Value: ``$AWS_LAMBDA_LOG_STREAM_NAME``)"
msgstr "``faas.instance`` (Value:``$AWS_LAMBDA_LOG_STREAM_NAME``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:255
msgid "``faas.max_memory`` (Value: ``$AWS_LAMBDA_FUNCTION_MEMORY_SIZE``)"
msgstr "``faas.max_memory`` (Value:``$AWS_LAMBDA_FUNCTION_MEMORY_SIZE``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:258
msgid "Azure metadata"
msgstr "Azure metadata"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:260
msgid "The ``azure`` detector collects the following resource attributes through the Azure Instance Metadata Service:"
msgstr "``azure`` ディテクターは、Azure Instance Metadata Service を通じて以下のリソース属性を収集します："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:262 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:278
msgid "``cloud.provider`` (Value: ``azure``)"
msgstr "``cloud.provider`` (Value:``azure``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:263
msgid "``cloud.platform`` (Value: ``azure_vm``)"
msgstr "``cloud.platform`` (Value:``azure_vm``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:265
msgid "``cloud.account.id`` (Value: Subscription ID)"
msgstr "``cloud.account.id`` (値：サブスクリプションID）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:266
msgid "``host.id`` (Value: Virtual machine ID)"
msgstr "``host.id`` (値：仮想マシンID）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:268
msgid "``azure.vm.name`` (Same as ``host.name``)"
msgstr "``azure.vm.name`` (``host.name`` と同じ）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:269
msgid "``azure.vm.size`` (Value: Virtual machine size)"
msgstr "``azure.vm.size`` (値：仮想マシンサイズ）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:270
msgid "``azure.vm.scaleset.name`` (Value: Name of the scale set, if any)"
msgstr "``azure.vm.scaleset.name`` (値: スケールセットの名前、もしあれば)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:271
msgid "``azure.resourcegroup.name`` (Value: Resource group name)"
msgstr "``azure.resourcegroup.name`` (値：リソースグループ名）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:274
msgid "Azure AKS metadata"
msgstr "Azure AKS メタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:276
msgid "The ``aks`` detector collects the following resource attributes:"
msgstr "``aks`` 検出器は以下のリソース属性を収集する："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:279
msgid "``cloud.platform`` (Value: ``azure_aks``)"
msgstr "``cloud.platform`` (Value:``azure_aks``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:282
msgid "Consul metadata"
msgstr "コンシュルのメタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:284
msgid "The ``consul`` detector collects the following resource attributes by querying a Consul agent and reading its configuration endpoint:"
msgstr "``consul`` 検出器は、Consul エージェントに問い合わせ、その設定エンドポイントを読み取ることで、以下のリソース属性を収集します："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:286
msgid "``cloud.region`` (Value: Consul data center)"
msgstr "``cloud.region`` (価値：コンシュルデータセンター）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:287
msgid "``host.id`` (Value: Consul node id)"
msgstr "``host.id`` (値: ConsulノードID)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:288
msgid "``host.name`` (Value: Consul node name)"
msgstr "``host.name`` (値: Consulノード名)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:290
msgid "The detector also collects all key-value pairs in Consul metadata and converts them into label-value pairs."
msgstr "検出器はまた、Consulメタデータのすべてのキーと値のペアを収集し、ラベルと値のペアに変換する。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:293
msgid "Docker metadata"
msgstr "ドッカーのメタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:295
msgid "The ``docker`` detector collects the following resource attributes from the host machine by querying the Docker daemon:"
msgstr "``docker`` ディテクターは、Dockerデーモンにクエリを送信することで、ホストマシンから以下のリソース属性を収集します："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:300
msgid "For Heroku applications, the ``dyno`` ID identifies the virtualized environment."
msgstr "Herokuアプリケーションの場合、``dyno`` IDは仮想化環境を識別します。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:302
msgid "To contact the Docker daemon, mount the Docker socket. On Linux, the socket is ``/var/run/docker.sock``."
msgstr "Dockerデーモンと連絡を取るには、Dockerソケットをマウントする。Linux では、ソケットは``/var/run/docker.sock`` 。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:307
msgid "The ``env`` detector collects resource information from the ``OTEL_RESOURCE_ATTRIBUTES`` environment variable as a list of key-value pairs separated by the ``=`` character."
msgstr "``env`` ディテクターは、``=`` 文字で区切られたキーと値のペアのリストとして、``OTEL_RESOURCE_ATTRIBUTES`` 環境変数からリソース情報を収集します。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:310
msgid "GCP metadata"
msgstr "GCPメタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:312
msgid "The ``gcp`` detector uses the Google Cloud client libraries to read resource information from the metadata server, as well as environment variables. The detector uses the metadata to determine which GCP application is running and extracts relevant attributes."
msgstr "``gcp`` ディテクターは、Google Cloudクライアント・ライブラリを使用して、メタデータ・サーバーからリソース情報と環境変数を読み取ります。検出器はメタデータを使用して、どのGCPアプリケーションが実行されているかを判断し、関連する属性を抽出します。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:315
msgid "GCE metadata"
msgstr "GCEメタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:317
msgid "The ``gcp`` detector collects the following resource attributes from GCE:"
msgstr "``gcp`` 検出器はGCEから以下のリソース属性を収集する："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:319 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:333 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:347 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:361 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:374
msgid "``cloud.provider`` (Value: ``gcp``)"
msgstr "``cloud.provider`` (Value:``gcp``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:320
msgid "``cloud.platform`` (Value: ``gcp_compute_engine``)"
msgstr "``cloud.platform`` (Value:``gcp_compute_engine``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:321 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:335 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:349 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:363 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:376
msgid "``cloud.account.id`` (Value: Project ID)"
msgstr "``cloud.account.id`` (値：プロジェクトID）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:322
msgid "``cloud.region `` (For example, ``us-central1``)"
msgstr "``cloud.region `` (例えば、``us-central1`` ）。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:323
msgid "``cloud.availability_zone`` (For example, ``us-central1-c``)"
msgstr "``cloud.availability_zone`` (例えば、``us-central1-c`` ）。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:324 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:339
msgid "``host.id`` (Value: Instance ID)"
msgstr "``host.id`` (値：インスタンスID）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:325
msgid "``host.name`` (Value: Instance name)"
msgstr "``host.name`` (値：インスタンス名）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:326
msgid "``host.type`` (Value: Machine type)"
msgstr "``host.type`` (値：マシンタイプ）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:329
msgid "GKE metadata"
msgstr "GKEメタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:331
msgid "The ``gcp`` detector collects the following resource attributes from GKE:"
msgstr "``gcp`` 検出器は、GKEから以下のリソース属性を収集する："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:334
msgid "``cloud.platform`` (Value: ``gcp_kubernetes_engine``)"
msgstr "``cloud.platform`` (Value:``gcp_kubernetes_engine``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:336
msgid "``cloud.region`` (Only for regional GKE clusters. For example, ``us-central1``)"
msgstr "``cloud.region`` (地域GKEクラスタのみ）。例えば、``us-central1``)。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:337
msgid "``cloud.availability_zone`` (Only for zonal GKE clusters. For example, ``us-central1-c``)"
msgstr "``cloud.availability_zone`` (帯状GKEクラスタのみ）。例えば、``us-central1-c``)。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:338 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:404
msgid "``k8s.cluster.name``"
msgstr "``k8s.cluster.name``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:340
msgid "``host.name`` (Value: Instance name, only when workload identity is deactivated)"
msgstr "``host.name`` (値：インスタンス名、ワークロード ID が無効化されている場合のみ）。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:343
msgid "Google App Engine metadata"
msgstr "Google App Engineのメタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:345
msgid "The ``gcp`` detector collects the following resource attributes from Google App Engine:"
msgstr "``gcp`` ディテクターは、Google App Engine から以下のリソース属性を収集します："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:348
msgid "``cloud.platform`` (Value: ``gcp_app_engine``)"
msgstr "``cloud.platform`` (Value:``gcp_app_engine``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:350 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:364 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:377
msgid "``cloud.region`` (For example, ``us-central1``)"
msgstr "``cloud.region`` (例えば、``us-central1`` ）。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:351
msgid "``cloud.availability_zone`` (For example: ``us-central1-c``)"
msgstr "``cloud.availability_zone`` (例：``us-central1-c`` ）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:352 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:365 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:378
msgid "``faas.id`` (Value: Instance ID)"
msgstr "``faas.id`` (値：インスタンスID）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:353 ../../gdi/opentelemetry/components/resourcedetection-processor.rst:366
msgid "``faas.name`` (Value: Service name)"
msgstr "``faas.name`` (値：サービス名）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:354
msgid "``faas.version`` (service version)"
msgstr "``faas.version`` (サービス版）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:357
msgid "Google Cloud Run metadata"
msgstr "Google Cloud Runのメタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:359
msgid "The ``gcp`` detector collects the following resource attributes from Google Cloud Run:"
msgstr "``gcp`` ディテクターはGoogle Cloud Runから以下のリソース属性を収集します："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:362
msgid "``cloud.platform`` (Value: ``gcp_cloud_run``)"
msgstr "``cloud.platform`` (Value:``gcp_cloud_run``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:367
msgid "``faas.version`` (Value: Service version)"
msgstr "``faas.version`` (値：サービスバージョン）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:370
msgid "Google Cloud Functions metadata"
msgstr "Google Cloud Functionsのメタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:372
msgid "The ``gcp`` detector collects the following resource attributes from Google Cloud Functions:"
msgstr "``gcp`` ディテクターは、Google Cloud Functions から以下のリソース属性を収集します："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:375
msgid "``cloud.platform`` (Value: ``gcp_cloud_functions``)"
msgstr "``cloud.platform`` (Value:``gcp_cloud_functions``)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:379
msgid "``faas.name`` (function name)"
msgstr "``faas.name`` (関数名)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:380
msgid "``faas.version`` (function version)"
msgstr "``faas.version`` (機能版）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:383
msgid "Heroku metadata"
msgstr "Herokuメタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:385
msgid "The ``heroku`` detector collects the following resource attributes through the Heroku metadata feature:"
msgstr "``heroku`` ディテクターは、Heroku メタデータ機能を通じて以下のリソース属性を収集します："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:387
msgid "``heroku.release.version`` (Value: Identifier for the current release)"
msgstr "``heroku.release.version`` (値: 現在のリリースの識別子)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:388
msgid "``heroku.release.creation_timestamp`` (Value: Creation time and date of the release)"
msgstr "``heroku.release.creation_timestamp`` (値：リリース作成日時）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:389
msgid "``heroku.release.commit`` (Value: Commit hash for the current release)"
msgstr "``heroku.release.commit`` (値: 現在のリリースのコミットハッシュ)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:390
msgid "``heroku.app.name`` (Value: Application name)"
msgstr "``heroku.app.name`` (値：アプリケーション名）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:391
msgid "``heroku.app.id`` (Value: Unique identifier for the application)"
msgstr "``heroku.app.id`` (値：アプリケーションの一意識別子）"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:392
msgid "``heroku.dyno.id`` (Value: Dyno identifier. Used as host name)"
msgstr "``heroku.dyno.id`` (値：Dyno 識別子。ホスト名として使用)"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:394
msgid "Activate the Heroku metadata feature for your application before using the ``heroku`` detector."
msgstr "``heroku`` 検出器を使用する前に、アプリケーションのHerokuメタデータ機能を有効にしてください。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:397
msgid "Openshift metadata"
msgstr "Openshiftのメタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:399
msgid "The ``openshift`` detector collects the following resource attributes by querying the OpenShift and Kubernetes API:"
msgstr "``openshift`` ディテクターは、OpenShift と Kubernetes API にクエリを送信することで以下のリソース属性を収集します："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:401
msgid "``cloud.provider``"
msgstr "``cloud.provider``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:402
msgid "``cloud.platform``"
msgstr "``cloud.platform``"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:406
msgid "By default, the detector determines the API address using the ``KUBERNETES_SERVICE_HOST`` and ``KUBERNETES_SERVICE_PORT`` environment variables; the default service token is ``/var/run/secrets/kubernetes.io/serviceaccount/token``. If TLS is active and you don't define a CA file, the detector uses the certificate in ``/var/run/secrets/kubernetes.io/serviceaccount/ca.crt``. All settings can be overridden in the configuration."
msgstr "デフォルトでは、検出器は環境変数``KUBERNETES_SERVICE_HOST`` および``KUBERNETES_SERVICE_PORT`` を使用してAPIアドレスを決定します。デフォルトのサービス・トークンは``/var/run/secrets/kubernetes.io/serviceaccount/token`` です。TLSが有効でCAファイルを定義しない場合、検出器は``/var/run/secrets/kubernetes.io/serviceaccount/ca.crt`` の証明書を使用します。すべての設定はコンフィギュレーションで上書きすることができる。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:409
msgid "System metadata"
msgstr "システム・メタデータ"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:411
msgid "The ``system`` detector collects the following resource attributes:"
msgstr "``system`` 検出器は以下のリソース属性を収集する："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:417
msgid "By default, the ``host.name`` attribute is the fully qualified domain name (FQDN) when available. The detector uses the host name as fallback."
msgstr "デフォルトでは、``host.name`` 属性は、利用可能な場合、完全修飾ドメイン名（FQDN）です。検出器は、フォールバックとしてホスト名を使用する。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:419
msgid "The default configuration of the detector is ``hostname_sources: [\"dns\", \"os\"]``, which can be overridden using the following supported values:"
msgstr "検出器のデフォルト設定は``hostname_sources: [\"dns\", \"os\"]`` ："

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:421
msgid "``cname``: Canonical name."
msgstr "``cname``:正式名称。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:422
msgid "``dns``: Either the host name from the ``hosts`` file, the ``CNAME``, or the result of a reverse DNS query, in that order."
msgstr "``dns``:``hosts`` ファイルのホスト名、``CNAME`` 、またはDNSの逆引きクエリの結果のいずれか（この順）。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:423
msgid "``lookup``: Reverse DNS lookup of the current host's IP address."
msgstr "``lookup``:現在のホストのIPアドレスのDNS逆引き。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:424
msgid "``os``: Host name provided by the local machine's kernel."
msgstr "``os``:ローカルマシンのカーネルが提供するホスト名。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:426
msgid "To avoid using the FQDN, set the value of the ``hostname_sources`` field to ``os``."
msgstr "FQDNの使用を避けるには、``hostname_sources`` フィールドの値を``os`` に設定する。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:428
msgid "Use the ``docker`` detector if you're running the Collector as a Docker container."
msgstr "CollectorをDockerコンテナとして実行している場合は、``docker`` ディテクタを使用します。"

#: ../../gdi/opentelemetry/components/resourcedetection-processor.rst:435
msgid "The following table shows the configuration options for the resource detection processor:"
msgstr "以下の表は、リソース検出プロセッサのコンフィギュレーション・オプションを示しています："

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:-1
msgid "The SignalFx exporter allows the OpenTelemetry Collector to send traces, logs, and metrics to SignalFx endpoints. Read on to learn how to configure the component."
msgstr "SignalFx エクスポーターにより、OpenTelemetry Collector はトレース、ログ、メトリクスを SignalFx エンドポイントに送信できます。コンポーネントの設定方法については、こちらをお読みください。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:5
msgid "SignalFx exporter"
msgstr "SignalFx エクスポーター"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:10
msgid "The SignalFx exporter creates and excludes metrics by default. Read on to understand which metrics are created, which ones are filtered out, and learn how to modify this behavior."
msgstr "SignalFx エクスポーターは、デフォルトでメトリクスを作成し、除外します。どのメトリクスが作成され、どのメトリクスがフィルタリングされるかを理解し、この動作を変更する方法を学ぶには、この先をお読みください。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:12
msgid "The SignalFx exporter is a native OTel component that allows the OpenTelemetry Collector to send metrics and events to SignalFx endpoints. The supported pipeline types are ``traces``, ``metrics``, and ``logs``. See :ref:`otel-data-processing` for more information."
msgstr "SignalFx エクスポーターは、OpenTelemetry コレクターがメトリクスとイベントを SignalFx エンドポイントに送信できるようにする OTel ネイティブ・コンポーネントです。サポートされるパイプラインのタイプは、``traces`` 、``metrics`` 、``logs`` です。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:14
msgid "While the SignalFx Smart Agent has reached End of Support, OTel native components such as the Smart Agent receiver, the SignalFx receiver, and the SignalFx exporter are available and supported. For information on the receivers, see :ref:`smartagent-receiver`: and :ref:`signalfx-receiver`."
msgstr "SignalFxスマート・エージェントはサポート終了となりましたが、スマート・エージェント・レシーバー、SignalFxレシーバー、SignalFxエクスポーターなどのOTelネイティブ・コンポーネントは利用可能で、サポートされています。レシーバーについては、:ref:`smartagent-receiver`: および:ref:`signalfx-receiver` を参照。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:19
msgid "By default, the Splunk Distribution of OpenTelemetry Collector includes the SignalFx exporter in the ``traces``, ``metrics``, and ``logs/signalfx`` pipelines when deploying in host monitoring (agent) mode. See :ref:`otel-deployment-mode` for more information."
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションには、ホスト監視 (エージェント) モードでデプロイする場合、``traces`` 、``metrics`` 、``logs/signalfx`` のパイプラインに SignalFx エクスポーターが含まれます。詳しくは:ref:`otel-deployment-mode` 。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:24
msgid "The following example shows the default configuration of SignalFx exporter for metrics and events ingest, as well as trace and metrics correlation:"
msgstr "次の例は、SignalFx exporterのデフォルトの構成で、メトリックスとイベントの取り込み、およびトレースとメトリックスの相関を示しています："

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:38
msgid "When adding the SignalFx exporter, configure both the metrics and logs pipelines. Make sure to also add the SignalFx receiver as in the following example:"
msgstr "SignalFx エクスポーターを追加する際、メトリクス・パイプラインとログ・パイプラインの両方を設定します。次の例のように、SignalFxレシーバーも追加してください："

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:56
msgid "Default metric filters"
msgstr "デフォルトのメトリックフィルタ"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:58
msgid "To prevent unwanted custom metrics, the SignalFx exporter excludes a number of metrics by default. See :ref:`list-excluded-metrics` for more information."
msgstr "不要なカスタム・メトリクスを防ぐため、SignalFxエクスポータはデフォルトで多くのメトリクスを除外しています。詳しくは:ref:`list-excluded-metrics` 。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:60
msgid "To override default exclusions and include metrics manually, use the ``include_metrics`` option. For example:"
msgstr "デフォルトの除外を無効にし、メトリクスを手動で含めるには、``include_metrics`` オプションを使用します。例えば、こうだ："

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:72
msgid "The following example instructs the exporter to send only the ``cpu.interrupt`` metric with a ``cpu`` dimension value and both per core and aggregate ``cpu.idle`` metrics:"
msgstr "以下の例では、``cpu`` ディメンジョン値を持つ``cpu.interrupt`` メトリックと、コアごとおよび集約``cpu.idle`` メトリックの両方を送信するようにエクスポータに指示します："

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:87
msgid "List of metrics excluded by default"
msgstr "デフォルトで除外されるメトリクスのリスト"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:89
msgid "Metrics excluded by default by the SignalFx exporter are listed in the default_metrics.go file. The following snippet shows the latest version of the list:"
msgstr "SignalFxエクスポータがデフォルトで除外するメトリクスは、default_metrics.goファイルに記載されています。次のスニペットは最新版のリストを示している："

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:232
msgid "Filter metrics using service or environment"
msgstr "サービスまたは環境を使用してメトリクスをフィルタリングする"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:234
msgid "The SignalFx exporter correlates the traces it receives to metrics. When the exporter detects a new service or environment, it associates the source (for example, a host or a pod) to that service or environment in Splunk Observability Cloud, and identifies them using ``sf_service`` and ``sf_environment``. You can then filter those metrics based on the trace service and environment."
msgstr "SignalFx エクスポーターは、受け取ったトレースをメトリクスに関連付けます。エクスポータが新しいサービスや環境を検出すると、Splunk Observability Cloud のサービスや環境にソース (ホストやポッドなど) を関連付け、``sf_service`` と``sf_environment`` を使用してそれらを識別します。次に、トレース・サービスと環境に基づいて、これらのメトリクスをフィルタリングできます。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:236
msgid "You need to send traces using :ref:`splunk-apm-exporter` to see them in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud でトレースを確認するには、:ref:`splunk-apm-exporter` を使用してトレースを送信する必要があります。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:238
msgid "Use the ``correlation`` setting to control the syncing of service and environment properties onto dimensions. It has the following options:"
msgstr "``correlation`` 設定を使用して、サービスおよび環境プロパティのディメンジョンへの同期を制御します。以下のオプションがある："

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:240
msgid "``endpoint``: :strong:`Required`. The base URL for API requests, such as https://api.us0.signalfx.com. Defaults to api_url or https://api.{realm}.signalfx.com/."
msgstr "``endpoint``::strong:`必須`.https://api.us0.signalfx.com のような API リクエストのベース URL。デフォルトは api_url または https://api.{realm}.signalfx.com/ です。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:241
msgid "``timeout``: Timeout for every attempt to send data to the backend. 5 seconds by default."
msgstr "``timeout``:バックエンドへのデータ送信のタイムアウト。デフォルトでは5秒。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:242
msgid "``stale_service_timeout``: How long to wait after a span's service name is last seen before uncorrelating it. 5 minutes by default."
msgstr "``stale_service_timeout``:スパンのサービス名が最後に表示されてから、相関を解除するまでの待ち時間。デフォルトで5分。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:243
msgid "``max_requests``: Maximum HTTP requests to be made in parallel. 20 by default."
msgstr "``max_requests``:HTTP リクエストの最大並列数。デフォルトで20。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:244
msgid "``max_buffered``: Maximum number of correlation updates that can be buffered before updates are dropped. 10,000 by default."
msgstr "``max_buffered``:更新がドロップされる前にバッファリングできる相関更新の最大数。デフォルトで10,000ドル。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:245
msgid "``max_retries``: Maximum number of retries that will be made for failed correlation updates. 2 by default."
msgstr "``max_retries``:相関更新が失敗した場合の最大再試行回数。デフォルトでは2。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:246
msgid "``log_updates``: Whether or not to log correlation updates to dimensions, at DEBUG level. ``false`` by default."
msgstr "``log_updates``:``false`` デフォルト。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:247
msgid "``retry_delay``: How long to wait between retries. 30 seconds by default."
msgstr "``retry_delay``:リトライまでの待ち時間。デフォルトでは30秒。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:248
msgid "``cleanup_interval``: How frequently to purge duplicate requests. 1 minute by default."
msgstr "``cleanup_interval``:重複リクエストのパージ頻度。デフォルトで1分。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:249
msgid "``sync_attributes`` : Map containing key of the attribute to read from spans to sync to dimensions specified as the value. Defaults to ``{\"k8s.pod.uid\": \"k8s.pod.uid\", \"container.id\": \"container.id\"}``."
msgstr "``sync_attributes`` :値として指定された次元に同期するスパンから読み込む属性のキーを含むマップ。デフォルトは``{\"k8s.pod.uid\": \"k8s.pod.uid\", \"container.id\": \"container.id\"}`` 。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:251
msgid "See more options in the Settings section."
msgstr "その他のオプションは「設定」セクションをご覧ください。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:256
msgid "Translation rules and metric transformations"
msgstr "翻訳ルールとメトリック変換"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:258
msgid "Use the ``translation_rules`` field to transform metrics or produce custom metrics by copying, calculating, or aggregating other metric values without requiring an additional processor."
msgstr "``translation_rules`` フィールドを使用すると、追加のプロセッサを必要とせずに、メトリクスを変換したり、他のメトリッ クス値をコピー、計算、集計してカスタム・メトリクスを作成したりすることができます。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:260
msgid "Translation rules currently allow the following actions:"
msgstr "翻訳ルールでは現在、次のような操作が可能です："

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:262
msgid "``aggregate_metric``: Aggregates a metric through removal of specified dimensions."
msgstr "``aggregate_metric``:指定された寸法を削除してメトリックを集約する。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:263
msgid "``calculate_new_metric``: Creates a new metric via operating on two consistuent ones."
msgstr "``calculate_new_metric``:一貫性のある2つのメトリックを操作して新しいメトリックを作成する。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:264
msgid "``convert_values``: Convert float values to int or int to float for specified metric names."
msgstr "``convert_values``:指定されたメトリック名について、float値をintに、intをfloatに変換する。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:265
msgid "``copy_metrics``: Creates a new metric as a copy of another."
msgstr "``copy_metrics``:別のメトリックのコピーとして新しいメトリックを作成します。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:266
msgid "``delta_metric``: Creates a new delta metric for a specified non-delta one."
msgstr "``delta_metric``:指定されたノン・デルタのメトリックに対して新しいデルタのメトリックを作成する。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:267
msgid "``divide_int``: Scales a metric's integer value by a given factor."
msgstr "``divide_int``:メトリックの整数値を指定された係数でスケーリングする。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:268
msgid "``drop_dimensions``: Drops dimensions for specified metrics, or globally."
msgstr "``drop_dimensions``:指定されたメトリクス、またはグローバルにディメンジョンを削除します。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:269
msgid "``drop_metrics``: Drops all metrics with a given name."
msgstr "``drop_metrics``:指定された名前のメトリクスをすべて削除します。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:270
msgid "``multiply_float``: Scales a metric's float value by a given float factor."
msgstr "``multiply_float``:メトリックの浮動小数点値を与えられた浮動小数点係数でスケーリングする。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:271
msgid "``multiply_int``: Scales a metric's int value by a given int factor."
msgstr "``multiply_int``:メトリックのint値を指定されたint倍でスケーリングする。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:272
msgid "``rename_dimension_keys``: Renames dimensions for specified metrics, or globally."
msgstr "``rename_dimension_keys``:指定されたメトリクス、またはグローバルなディメンジョンの名前を変更します。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:273
msgid "``rename_metrics``: Replaces a given metric name with specified one."
msgstr "``rename_metrics``:指定されたメトリック名を指定されたメトリック名に置き換えます。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:274
msgid "``split_metric``: Splits a given metric into multiple new ones for a specified dimension."
msgstr "``split_metric``:指定された次元について、指定されたメトリックを複数の新しいメトリックに分割する。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:277
msgid "Default translation rules and generated metrics"
msgstr "デフォルトの翻訳ルールと生成されたメトリクス"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:279
msgid "The SignalFx exporter uses the translation rules defined in :new-page:`translation/constants.go <https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/signalfxexporter/internal/translation/constants.go>` by default. The default rules create metrics which are reported directly to Infrastructure Monitoring. If you want to change any of their attributes or values, you need to either modify the translation rules or their constituent host metrics."
msgstr "SignalFx エクスポーターは、デフォルトで:new-page:`translation/constants.go<https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/signalfxexporter/internal/translation/constants.go>` で定義された翻訳ルールを使用します。デフォルトのルールは、インフラストラクチャ・モニタリングに直接レポートされるメトリクスを作成します。これらの属性や値を変更したい場合は、変換ルールまたはその構成要素であるホスト・メトリクスを変更する必要があります。"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:281
msgid "By default, the SignalFx exporter creates the following aggregated metrics from the :ref:`host-metrics-receiver`:"
msgstr "デフォルトでは、SignalFx エクスポーターは、:ref:`host-metrics-receiver` から以下の集約メトリクスを作成します："

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:283
msgid "``cpu.idle``"
msgstr "``cpu.idle``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:284 ../../gdi/opentelemetry/components/signalfx-exporter.rst:313
msgid "``cpu.interrupt``"
msgstr "``cpu.interrupt``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:285 ../../gdi/opentelemetry/components/signalfx-exporter.rst:314
msgid "``cpu.nice``"
msgstr "``cpu.nice``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:286
msgid "``cpu.num_processors``"
msgstr "``cpu.num_processors``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:287 ../../gdi/opentelemetry/components/signalfx-exporter.rst:315
msgid "``cpu.softirq``"
msgstr "``cpu.softirq``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:288 ../../gdi/opentelemetry/components/signalfx-exporter.rst:316
msgid "``cpu.steal``"
msgstr "``cpu.steal``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:289 ../../gdi/opentelemetry/components/signalfx-exporter.rst:317
msgid "``cpu.system``"
msgstr "``cpu.system``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:290 ../../gdi/opentelemetry/components/signalfx-exporter.rst:318
msgid "``cpu.user``"
msgstr "``cpu.user``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:291
msgid "``cpu.utilization``"
msgstr "``cpu.utilization``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:292
msgid "``cpu.utilization_per_core``"
msgstr "``cpu.utilization_per_core``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:293 ../../gdi/opentelemetry/components/signalfx-exporter.rst:319
msgid "``cpu.wait``"
msgstr "``cpu.wait``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:294
msgid "``disk.summary_utilization``"
msgstr "``disk.summary_utilization``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:295
msgid "``disk.utilization``"
msgstr "``disk.utilization``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:296
msgid "``disk_ops.pending``"
msgstr "``disk_ops.pending``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:297
msgid "``disk_ops.total``"
msgstr "``disk_ops.total``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:298
msgid "``memory.total``"
msgstr "``memory.total``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:299
msgid "``memory.utilization``"
msgstr "``memory.utilization``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:300
msgid "``network.total``"
msgstr "``network.total``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:301
msgid "``process.cpu_time_seconds``"
msgstr "``process.cpu_time_seconds``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:302
msgid "``system.disk.io.total``"
msgstr "``system.disk.io.total``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:303
msgid "``system.disk.operations.total``"
msgstr "``system.disk.operations.total``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:304
msgid "``system.network.io.total``"
msgstr "``system.network.io.total``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:305
msgid "``system.network.packets.total``"
msgstr "``system.network.packets.total``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:306
msgid "``vmpage_io.memory.in``"
msgstr "``vmpage_io.memory.in``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:307
msgid "``vmpage_io.memory.out``"
msgstr "``vmpage_io.memory.out``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:308
msgid "``vmpage_io.swap.in``"
msgstr "``vmpage_io.swap.in``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:309
msgid "``vmpage_io.swap.out``"
msgstr "``vmpage_io.swap.out``"

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:311
msgid "In addition to the aggregated metrics, the default rules make available the following \"per core\" custom hostmetrics. The CPU number is assigned to the dimension ``cpu``:"
msgstr "デフォルトのルールでは、集約されたメトリクスに加えて、以下の「コアごとの」カスタム・ホスト・メトリクスを利用できます。CPU番号は、``cpu`` ディメンジョンに割り当てられている："

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:324
msgid "The following table shows the configuration options for the SignalFx exporter:"
msgstr "次の表は、SignalFx エクスポーターの設定オプションです："

#: ../../gdi/opentelemetry/components/signalfx-exporter.rst:330
msgid "Use the ``access_token_passthrough`` setting if you're using a SignalFx receiver with the same setting. Only use the SignalFx receiver with the SignalFx exporter when activating this setting."
msgstr "同じ設定のSignalFxレシーバーを使用している場合は、``access_token_passthrough`` 。この設定を有効にする場合は、SignalFxエクスポーターとSignalFxレシーバーのみを使用してください。"

#: ../../gdi/opentelemetry/components/signalfx-receiver.rst:-1
msgid "The SignalFx receiver allows the Splunk Distribution of OpenTelemetry Collector to collect metrics and logs in SignalFx proto format."
msgstr "SignalFx レシーバーを使用すると、Splunk Distribution of OpenTelemetry Collector で SignalFx proto フォーマットのメトリクスとログを収集できます。"

#: ../../gdi/opentelemetry/components/signalfx-receiver.rst:5
msgid "SignalFx receiver"
msgstr "SignalFxレシーバー"

#: ../../gdi/opentelemetry/components/signalfx-receiver.rst:10
msgid "The SignalFx receiver is a native OTel component that allows the Splunk Distribution of OpenTelemetry Collector to collect metrics and logs in SignalFx proto format. Supported pipeline types are ``metrics`` and ``logs``. See :ref:`otel-data-processing` for more information."
msgstr "SignalFx レシーバーは、OpenTelemetry Collector の Splunk ディストリビューションが SignalFx プロトフォーマットでメトリクスとログを収集できるようにする、ネイティブの OTel コンポーネントです。サポートされるパイプライン・タイプは``metrics`` と``logs`` 。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/signalfx-receiver.rst:12
msgid "For more information on the SignalFx proto format, see :new-page:`Send Traces, Metrics, and Events <https://dev.splunk.com/observability/reference/api/ingest_data/latest>` in the Splunk Developer Program documentation."
msgstr "SignalFx proto フォーマットの詳細については、Splunk Developer Program ドキュメントの:new-page:`Send Traces, Metrics, and Events<https://dev.splunk.com/observability/reference/api/ingest_data/latest>` を参照してください。"

#: ../../gdi/opentelemetry/components/signalfx-receiver.rst:14
msgid "While the SignalFx Smart Agent has reached End of Support, OTel native components such as the Smart Agent receiver, the SignalFx receiver, and the SignalFx exporter are available and supported. For information on the exporter, see :ref:`signalfx-exporter`."
msgstr "SignalFxスマート・エージェントはサポート終了となりましたが、スマート・エージェント・レシーバー、SignalFxレシーバー、SignalFxエクスポーターなどのOTelネイティブ・コンポーネントは利用可能で、サポートされています。エクスポーターについては、:ref:`signalfx-exporter` を参照。"

#: ../../gdi/opentelemetry/components/signalfx-receiver.rst:19
msgid "By default, the Splunk Distribution of OpenTelemetry Collector includes the SignalFx receiver in the ``metrics`` and ``logs/signalfx`` pipelines when deploying in host monitoring (agent) mode. See :ref:`otel-deployment-mode` for more information."
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションは、ホスト監視 (エージェント) モードでデプロイする場合、``metrics`` および``logs/signalfx`` パイプラインに SignalFx レシーバーを含めます。詳しくは:ref:`otel-deployment-mode` 。"

#: ../../gdi/opentelemetry/components/signalfx-receiver.rst:21
msgid "Don't remove the ``signalfx`` receiver from the default configuration. If you need to change its settings, use the existing receiver or create a separate receiver configuration."
msgstr "``signalfx`` 受信機を初期設定から外さないでください。設定を変更する必要がある場合は、既存のレシーバーを使用するか、別のレシーバー設定を作成してください。"

#: ../../gdi/opentelemetry/components/signalfx-receiver.rst:26
msgid "The default configuration of the ``signalfx`` receiver in the Splunk Distribution of OpenTelemetry Collector is the following:"
msgstr "OpenTelemetry Collector の Splunk ディストリビューションにおける``signalfx`` レシーバのデフォルト設定は以下のとおりです："

#: ../../gdi/opentelemetry/components/signalfx-receiver.rst:37
msgid "When adding the SignalFx receiver, configure both the metrics and logs pipelines. Make sure to also add the SignalFx exporter as in the following example:"
msgstr "SignalFx レシーバーを追加する際、メトリクス・パイプラインとログ・パイプラインの両方を設定します。次の例のように、SignalFxエクスポータも追加してください："

#: ../../gdi/opentelemetry/components/signalfx-receiver.rst:55
msgid "The following table shows the configuration options for the SignalFx receiver:"
msgstr "次の表は、SignalFx レシーバーの設定オプションを示します："

#: ../../gdi/opentelemetry/components/signalfx-receiver.rst:61
msgid "If you use the ``access_token_passthrough`` setting with any exporter other than the SignalFx exporter, the receiver might reveal all organization access tokens. Only use the SignalFx receiver with the SignalFx exporter when activating this setting."
msgstr "SignalFxエクスポーター以外のエクスポーターで``access_token_passthrough`` の設定を使用すると、レシーバーがすべての組織のアクセストークンを公開してしまう可能性があります。この設定を有効にする場合は、SignalFxエクスポーターとSignalFxレシーバーのみを使用してください。"

#: ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:-1
msgid "The Simple Prometheus receiver allows the Splunk Distribution of OpenTelemetry Collector to collect metrics from a single source compatible with the Prometheus format."
msgstr "Simple Prometheus レシーバーを使用すると、OpenTelemetry Collector の Splunk ディストリビューションで、Prometheus 形式と互換性のある単一のソースからメトリックを収集できます。"

#: ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:5
msgid "Simple Prometheus receiver"
msgstr "シンプルなプロメテウス受信機"

#: ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:10
msgid "The Simple Prometheus is a wrapper around the Prometheus receiver that allows the Splunk Distribution of OpenTelemetry Collector to collect metrics from a single source of telemetry in Prometheus format. The supported pipeline type is ``metrics``."
msgstr "Simple Prometheus は Prometheus レシーバーのラッパーで、Splunk Distribution of OpenTelemetry Collector が単一のテレメトリソースから Prometheus フォーマットでメトリクスを収集できるようにします。サポートされるパイプライン・タイプは``metrics`` です。"

#: ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:12
msgid "To scrape Prometheus metrics from multiple targets that require extensive configuration, use the Prometheus receiver. See :ref:`prometheus-receiver` for more information."
msgstr "大規模な設定を必要とする複数のターゲットから Prometheus メトリクスをスクレイピングするには、Prometheus レシーバーを使用します。詳しくは:ref:`prometheus-receiver` 。"

#: ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:17
msgid "The Simple Prometheus receiver requires less configuration than the Prometheus receiver. You can define settings for a single Prometheus endpoint without having to use a Prometheus configuration. The receiver converts Prometheus metrics to OpenTelemetry metrics while preserving metric names, values, timestamps, and labels."
msgstr "シンプル・プロメテウス・レシーバーは、プロメテウス・レシーバーよりも設定が少なくて済む。Prometheusコンフィギュレーションを使用することなく、単一のPrometheusエンドポイントの設定を定義できます。レシーバーは、メトリック名、値、タイムスタンプ、ラベルを保持したまま、Prometheus メトリックを OpenTelemetry メトリックに変換します。"

#: ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:30
msgid "Configure the Simple Prometheus receiver as described in the next section."
msgstr "次のセクションで説明するように、Simple Prometheus レシーバーを設定します。"

#: ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:36
msgid "To activate additional Prometheus receivers, add a new ``prometheus_simple`` entry in the ``receivers`` section of the Collector configuration file, as in the following example:"
msgstr "追加の Prometheus レシーバをアクティブにするには、次の例のように Collector 設定ファイルの``receivers`` セクションに新しい``prometheus_simple`` エントリを追加します："

#: ../../gdi/opentelemetry/components/simple-prometheus-receiver.rst:78
msgid "The Simple Prometheus receiver converts Prometheus metrics to OpenTelemetry metrics following these conversion rules:"
msgstr "Simple Prometheus レシーバーは、以下の変換ルールに従って Prometheus メトリクスを OpenTelemetry メトリクスに変換します："

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:-1
msgid "The Smart Agent receiver lets you use Smart Agent monitors in the Splunk Distribution of OpenTelemetry Collector."
msgstr "Smart Agent レシーバーを使用すると、OpenTelemetry Collector の Splunk ディストリビューションで Smart Agent モニタを使用できます。"

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:5
msgid "Smart Agent receiver"
msgstr "スマート・エージェント受信機"

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:10
msgid "The Smart Agent receiver is a native OTel component that lets you use Smart Agent monitors through the Splunk Distribution of OpenTelemetry Collector. Supported pipeline types are ``traces``, ``metrics``, and ``logs``. See :ref:`otel-data-processing` for more information."
msgstr "Smart Agent レシーバは、OpenTelemetry Collector の Splunk ディストリビューションを通して Smart Agent モニタを使用するための OTel ネイティブコンポーネントです。対応するパイプライン・タイプは``traces`` 、``metrics`` 、``logs`` 。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:12
msgid "The Smart Agent receiver is fully supported only on amd64 linux platforms. Support for ARM64 is experimental starting from the Splunk Distribution of OpenTelemetry Collector version 0.73 and higher. For a list of supported monitors, see :ref:`collector-architecture`."
msgstr "スマートエージェントレシーバーは、amd64 linuxプラットフォームでのみ完全にサポートされています。ARM64 のサポートは、OpenTelemetry Collector バージョン 0.73 以降の Splunk ディストリビューションから実験的に行われています。対応モニターのリストについては、:ref:`collector-architecture` を参照してください。"

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:14
msgid "For instructions on how to migrate from the Smart Agent to the Splunk Distribution of OpenTelemetry Collector, see :ref:`migrate-from-sa-to-otel`."
msgstr "スマートエージェントから OpenTelemetry Collector の Splunk ディストリビューションへの移行方法については、:ref:`migrate-from-sa-to-otel` を参照してください。"

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:19
msgid "The Smart Agent receiver lets you use Smart Agent monitors through the OpenTelemetry Collector. In most cases, you can move your existing Smart Agent monitor configuration to the configuration file of the Collector without changes."
msgstr "Smart Agentレシーバを使用すると、OpenTelemetryコレクタを通してSmart Agentモニタを使用できます。ほとんどの場合、既存のSmart Agentモニタ設定をコレクタの設定ファイルに変更せずに移動できます。"

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:21
msgid "For a list of monitor data sources, see :ref:`monitor-data-sources`."
msgstr "モニター・データ・ソースのリストについては、:ref:`monitor-data-sources` を参照。"

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:26
msgid "By default, the Splunk Distribution of OpenTelemetry Collector includes the Smart Agent receiver with the ``signalfx-forwarder`` and ``processlist`` monitors when deploying in host monitoring (agent) mode. See :ref:`otel-deployment-mode` for more information."
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションには、ホスト監視 (エージェント) モードでデプロイする場合、``signalfx-forwarder`` と``processlist`` のモニターとともにスマートエージェントレシーバーが含まれます。詳しくは:ref:`otel-deployment-mode` 。"

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:28
msgid "For each Smart Agent monitor you want to add to the Collector, add a Smart Agent receiver. After you've configured a Smart Agent monitor in the Collector, each Smart Agent receiver behaves like the corresponding Smart Agent monitor."
msgstr "コレクタに追加するSmart Agentモニタごとに、Smart Agentレシーバを追加します。コレクタでSmart Agentモニタを設定すると、各Smart Agentレシーバは対応するSmart Agentモニタのように動作します。"

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:33
msgid "The following example adds the Postgresql monitor to the Collector using the Smart Agent receiver:"
msgstr "次の例では、Smart Agentレシーバを使用してPostgresqlモニタをCollectorに追加します："

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:45
msgid "You can then add the receiver to any compatible pipeline. For example:"
msgstr "レシーバーを互換性のあるパイプラインに追加することができます。例えば、こうだ："

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:57
msgid "If you use a monitor that updates dimension properties or tags, for example ``postgresql``, add the name of your SignalFx exporter in the ``dimensionClients`` field in Smart Agent receiver configuration block. If you don't set any exporter in the ``dimensionClients`` field, the receiver tries to use the pipeline to which it's connected. If you don't require dimension updates, you can use an empty array (``[]``) to deactivate it."
msgstr "ディメンジョンプロパティやタグを更新するモニタを使用する場合（例えば、``postgresql`` ）、Smart Agentレシーバ構成ブロックの``dimensionClients`` フィールドにSignalFxエクスポータの名前を追加します。``dimensionClients`` フィールドにエクスポーターを設定しない場合、レシーバーは接続されているパイプラインを使用しようとします。ディメンジョンの更新が不要な場合は、空の配列 (``[]``) を使用して非アクティブにできます。"

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:59
msgid "Don't remove the ``smartagent/signalfx-forwarder`` and ``smartagent/processlist`` receivers from the configuration. System processes and Smart Agent telemetry depend on both receivers's configurations."
msgstr "コンフィギュレーションから``smartagent/signalfx-forwarder`` と``smartagent/processlist`` のレシーバーを削除しないでください。システムプロセスとスマートエージェントの遠隔測定は、両方のレシーバーの設定に依存します。"

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:64
msgid "Add additional metrics"
msgstr "メトリクスの追加"

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:66
msgid "To ingest additional metrics using Smart Agent monitors, add the ``extraMetrics`` field to the monitor configuration. For example:"
msgstr "Smart Agentモニターを使用して追加のメトリクスを取り込むには、``extraMetrics`` フィールドをモニター構成に追加します。例えば、こうだ："

#: ../../gdi/opentelemetry/components/smartagent-receiver.rst:82
msgid "To configure Smart Agent monitors, see the documentation on each monitor type in :ref:`monitor-data-sources`."
msgstr "スマートエージェントのモニターを設定するには、:ref:`monitor-data-sources` の各モニタータイプのドキュメントを参照してください。"

#: ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:-1
msgid "Use the Splunk APM (SAPM) exporter to send traces from multiple nodes or services in a single batch. Read on to learn how to configure the component."
msgstr "Splunk APM (SAPM) エクスポーターを使用して、複数のノードまたはサービスからのトレースを 1 つのバッチで送信します。コンポーネントの設定方法については、こちらをお読みください。"

#: ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:4
msgid "Splunk APM exporter"
msgstr "Splunk APM エクスポーター"

#: ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:9
msgid "The Splunk APM (SAPM) exporter allows the OpenTelemetry Collector to send traces to Splunk Observability Cloud. The supported pipeline types are ``traces``. See :ref:`otel-data-processing` for more information."
msgstr "Splunk APM (SAPM) エクスポーターにより、OpenTelemetry Collector はトレースを Splunk Observability Cloud に送信できます。サポートされるパイプライン・タイプは``traces`` 。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:14
msgid "By default, the Splunk Distribution of OpenTelemetry Collector includes the SAPM exporter in the ``traces`` pipeline when deploying in host monitoring (agent) or data forwarding (gateway) modes. See :ref:`otel-deployment-mode` for more information."
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションは、ホストモニタリング (エージェント) またはデータ転送 (ゲートウェイ) モードでデプロイする場合、``traces`` パイプラインに SAPM エクスポーターを含みます。詳しくは:ref:`otel-deployment-mode` 。"

#: ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:19
msgid "The following example shows a SAPM exporter instance configure for a maximum of 100 connections and 8 workers:"
msgstr "次の例では、最大100コネクション、8ワーカーのSAPMエクスポータインスタンスを設定しています："

#: ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:39
msgid "The following example shows all available settings:"
msgstr "次の例は、利用可能なすべての設定を示しています："

#: ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:77
msgid "In the endpoint URL, ``realm`` is the Splunk Observability Cloud realm, for example, ``us0``. To find the realm name of your account, follow these steps:"
msgstr "エンドポイント URL の``realm`` は Splunk Observability Cloud のレルムで、例えば``us0`` 。アカウントのレルム名を見つけるには、以下の手順に従ってください："

#: ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:85
msgid "To send SAPM data through a proxy, configure proxy settings as environment variables. See :ref:`configure-proxy-collector` for more information."
msgstr "SAPM データをプロキシ経由で送信するには、プロキシ設定を環境変数として設定します。詳しくは:ref:`configure-proxy-collector` 。"

#: ../../gdi/opentelemetry/components/splunk-apm-exporter.rst:90
msgid "The following table shows the configuration options for the SAPM exporter:"
msgstr "次の表に、SAPM エクスポーターの設定オプションを示します："

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:-1
msgid "The Splunk HEC exporter allows the OpenTelemetry Collector to send traces, logs, and metrics to Splunk HTTP Event Collector (HEC) endpoints. Read on to learn how to configure the component."
msgstr "Splunk HEC エクスポーターにより、OpenTelemetry Collector はトレース、ログ、メトリクスを Splunk HTTP Event Collector (HEC) エンドポイントに送信できます。コンポーネントの設定方法については、こちらをお読みください。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:5
msgid "Splunk HEC exporter"
msgstr "Splunk HEC エクスポーター"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:10
msgid "The Splunk HTTP Event Collector (HEC) exporter allows the OpenTelemetry Collector to send traces, logs, and metrics to Splunk HEC endpoints. The supported pipeline types are ``traces``, ``metrics``, and ``logs``. See :ref:`otel-data-processing` for more information."
msgstr "Splunk HTTP Event Collector (HEC) エクスポーターにより、OpenTelemetry Collector はトレース、ログ、メトリクスを Splunk HEC エンドポイントに送信できます。サポートされるパイプラインのタイプは、``traces`` 、``metrics`` 、``logs`` です。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:12
msgid "The main purpose of the Splunk HEC exporter is to send logs and metrics to Splunk Cloud Platform or Splunk Enterprise. Log Observer Connect is now used to pull the Splunk Cloud Platform and Splunk Enterprise indexes into Splunk Observability Cloud. See :ref:`lo-connect-landing` for more information."
msgstr "Splunk HEC エクスポーターの主な目的は、ログとメトリクスを Splunk Cloud Platform または Splunk Enterprise に送信することです。Log Observer Connect は、Splunk Cloud Platform と Splunk Enterprise のインデックスを Splunk Observability Cloud に取り込むために使用されます。詳しくは:ref:`lo-connect-landing` 。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:14
msgid "The exporter also sends AlwaysOn Profiling data to Splunk Observability Cloud. For more information, see :ref:`get-data-in-profiling`."
msgstr "エクスポーターは、AlwaysOn プロファイリングデータも Splunk Observability Cloud に送信します。詳細は:ref:`get-data-in-profiling` を参照。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:16
msgid "For information about the HEC receiver, see :ref:`splunk-hec-receiver`."
msgstr "HECレシーバーについては、:ref:`splunk-hec-receiver` を参照。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:23
msgid "By default, the Splunk Distribution of OpenTelemetry Collector includes the Splunk HEC exporter in the ``logs`` pipeline when deploying in host monitoring (agent) mode. See :ref:`otel-deployment-mode` for more information."
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションは、ホストモニタリング (エージェント) モードでデプロイするとき、``logs`` パイプラインに Splunk HEC エクスポーターを含みます。詳しくは:ref:`otel-deployment-mode` 。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:25
msgid "Starting from version 0.81 of the Splunk Distribution of OpenTelemetry Collector, the default configuration includes an exporter for AlwaysOn Profiling data that is separate from the standard logs exporter. See :ref:`exclude-log-data`."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションのバージョン 0.81 以降では、標準のログエクスポーターとは別に、AlwaysOn プロファイリングデータのエクスポーターがデフォルトの構成に含まれています。:ref:`exclude-log-data` を参照。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:27
msgid "To send Splunk HEC data through a proxy, configure proxy settings as environment variables. See :ref:`configure-proxy-collector` for more information."
msgstr "Splunk HEC データをプロキシ経由で送信するには、プロキシ設定を環境変数として構成する。詳しくは:ref:`configure-proxy-collector` 。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:32
msgid "The following example shows a Splunk HEC exporter instance configured for a logs pipeline in the Collector configuration file:"
msgstr "次の例は、Collector 設定ファイルでログパイプライン用に設定された Splunk HEC exporter インスタンスを示しています："

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:59
msgid "The Splunk HEC exporter requires a Splunk HEC token and endpoint. Obtaining a HEC token and choosing a HEC endpoint depends on the target. The following table shows endpoints and instructions for each back end. Use the ``source`` and ``sourcetype`` fields options when sending logs to Splunk Cloud Platform or Splunk Enterprise."
msgstr "Splunk HEC エクスポーターには Splunk HEC トークンとエンドポイントが必要です。HECトークンの取得とHECエンドポイントの選択はターゲットに依存する。次の表は、各バックエンドのエンドポイントおよび指示を示しています。ログを Splunk Cloud Platform または Splunk Enterprise に送信する場合は、``source`` および``sourcetype`` フィールドオプションを使用します。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:66
msgid "Back end"
msgstr "バックエンド"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:67
msgid "Endpoint"
msgstr "エンドポイント"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:68
msgid "Tokens"
msgstr "トークン"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:70
msgid "See :new-page:`Send data to HTTP Event Collector on Splunk Cloud Platform <https://docs.splunk.com/Documentation/Splunk/latest/Data/UsetheHTTPEventCollector#Send_data_to_HTTP_Event_Collector_on_Splunk_Cloud_Platform>`"
msgstr ":new-page:`Splunk Cloud Platform の HTTP Event Collector にデータを送信するを参照してください。 <https://docs.splunk.com/Documentation/Splunk/latest/Data/UsetheHTTPEventCollector#Send_data_to_HTTP_Event_Collector_on_Splunk_Cloud_Platform>`"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:71
msgid "See :new-page:`Manage HTTP Event Collector (HEC) tokens in Splunk Cloud Platform <https://docs.splunk.com/Documentation/SplunkCloud/latest/Config/ManageHECtokens>`"
msgstr ":new-page:`Splunk Cloud Platform で HTTP Event Collector (HEC) トークンを管理する を参照。 <https://docs.splunk.com/Documentation/SplunkCloud/latest/Config/ManageHECtokens>`"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:73
msgid "See :new-page:`Send data to HTTP Event Collector on Splunk Enterprise <https://docs.splunk.com/Documentation/Splunk/latest/Data/UsetheHTTPEventCollector#Send_data_to_HTTP_Event_Collector_on_Splunk_Enterprise>`"
msgstr ":new-page:`Splunk Enterprise の HTTP Event Collector にデータを送信する を参照してください。 <https://docs.splunk.com/Documentation/Splunk/latest/Data/UsetheHTTPEventCollector#Send_data_to_HTTP_Event_Collector_on_Splunk_Enterprise>`"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:74
msgid "See :new-page:`Create an Event Collector token on Splunk Enterprise <https://docs.splunk.com/Documentation/Splunk/latest/Data/UsetheHTTPEventCollector#Create_an_Event_Collector_token_on_Splunk_Enterprise>`"
msgstr ":new-page:`Splunk Enterprise でのイベントコレクタートークンの作成を参照してください。 <https://docs.splunk.com/Documentation/Splunk/latest/Data/UsetheHTTPEventCollector#Create_an_Event_Collector_token_on_Splunk_Enterprise>`"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:76
msgid "See :ref:`admin-org-tokens`."
msgstr ":ref:`admin-org-tokens` を参照。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:77
msgid "``https://ingest.<realm>.signalfx.com/v1/log``, where ``<realm>`` is the Splunk Observability Cloud realm, for example ``us0``."
msgstr "``https://ingest.<realm>.signalfx.com/v1/log````<realm>`` は Splunk Observability Cloud レルムで、例えば``us0`` 。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:90
msgid "Send logs to Splunk Cloud Platform or Splunk Enterprise"
msgstr "ログを Splunk Cloud Platform または Splunk Enterprise に送信する"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:92
msgid "If you're using the Collector for log collection and need to send data to Splunk Cloud Platform or Splunk Enterprise, configure the ``splunk_hec`` exporter to use your Splunk ``endpoint`` and ``token``. For example:"
msgstr "ログ収集に Collector を使用しており、Splunk Cloud Platform または Splunk Enterprise にデータを送信する必要がある場合は、``splunk_hec`` エクスポーターを設定し、Splunk``endpoint`` と``token`` を使用するようにします。例えば、こうだ："

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:118
msgid "You can split log data between Splunk Cloud Platform or Enterprise and Splunk Observability Cloud to preserve AlwaysOn Profiling data while sending logs to Splunk. See :ref:`profiling-pipeline-setup` for more information."
msgstr "Splunk Cloud Platform または Enterprise と Splunk Observability Cloud の間でログデータを分割して、ログを Splunk に送信しながら AlwaysOn Profiling データを保持することができます。詳しくは:ref:`profiling-pipeline-setup` 。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:120
msgid "To split the log pipelines, configure two separate ``splunk_hec`` entries in the ``receiver`` and ``exporters`` sections of the Collector configuration file. Then, add both to the ``logs`` pipeline. For example:"
msgstr "ログパイプラインを分割するには、Collector設定ファイルの``receiver`` と``exporters`` セクションに2つの別々の``splunk_hec`` エントリを設定します。そして、その両方を``logs`` のパイプラインに加える。例えば、こうだ："

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:193
msgid "Turn off logs or profiling data"
msgstr "ログやプロファイリングデータをオフにする"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:195
msgid "Starting from version 0.81 of the Splunk Distribution of OpenTelemetry Collector, logs and profiling pipelines are split. In that case, you can remove or comment them out according to your needs."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションのバージョン 0.81 から、ログとプロファイリングパイプラインが分割されるようになりました。その場合は、必要に応じて削除したり、コメントアウトすることができる。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:198
msgid "If you don't need AlwaysOn Profiling data for a specific host or container. set the ``profiling_data_enabled`` option to ``false`` in the ``splunk_hec`` exporter settings of the Collector configuration file. For example:"
msgstr "特定のホストまたはコンテナの AlwaysOn Profiling データが不要な場合は、Collector 構成ファイルの``splunk_hec`` exporter 設定で``profiling_data_enabled`` オプションを``false`` に設定します。例えば、こうだ："

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:210
msgid "To turn off log collection for Splunk Observability Cloud while preserving AlwaysOn Profiling data for APM, set the ``log_data_enabled`` option to ``false``. See :ref:`disable_log_collection` for more information."
msgstr "APM 用の AlwaysOn プロファイリングデータを保持しながら Splunk Observability Cloud 用のログ収集をオフにするには、``log_data_enabled`` オプションを``false`` に設定します。詳しくは:ref:`disable_log_collection` 。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:222
msgid "If you need to turn off log data export to Splunk Observability Cloud, for example because you're using Log Observer Connect or because you don't have Log Observer in your organization, set ``log_data_enabled`` to ``false`` in the ``splunk_hec`` exporter of your Collector configuration file:"
msgstr "Log Observer Connect を使用している、または組織に Log Observer がないなどの理由で Splunk Observability Cloud へのログデータエクスポートをオフにする必要がある場合は、Collector 設定ファイルの``splunk_hec`` エクスポーターで``log_data_enabled`` を``false`` に設定します："

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:234
msgid "The ``log_data_enabled`` setting is available in the Splunk Distribution of OpenTelemetry Collector version 0.49.0 and higher."
msgstr "``log_data_enabled`` の設定は、OpenTelemetry Collector バージョン 0.49.0 以降の Splunk ディストリビューションで利用可能です。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:236
msgid "To use a custom configuration for EC2, see :ref:`ecs-ec2-custom-config`. To use a custom configuration for Fargate, see :ref:`fargate-custom-config`."
msgstr "EC2のカスタム構成を使用するには、:ref:`ecs-ec2-custom-config` を参照。Fargateのカスタム設定を使用するには、:ref:`fargate-custom-config` を参照してください。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:238
msgid "If you've deployed the Collector in Kubernetes using the Helm chart, change the following setting in the ``splunkObservability`` section of your custom chart or values.yaml file:"
msgstr "Helmチャートを使用してKubernetesにCollectorをデプロイしている場合は、カスタムチャートまたはvalues.yamlファイルの``splunkObservability`` セクションで以下の設定を変更してください："

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:249
msgid "Send metrics to Splunk Cloud Platform or Splunk Enterprise"
msgstr "メトリクスを Splunk Cloud Platform または Splunk Enterprise に送信する"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:251
msgid "You can use the Collector to send metrics to Splunk Cloud Platform or Splunk Enterprise."
msgstr "コレクターを使用して、Splunk Cloud Platform または Splunk Enterprise にメトリクスを送信できます。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:253
msgid "For example, if you're scraping Prometheus metrics with a configuration such as:"
msgstr "例えば、以下のような設定でPrometheusのメトリクスをスクレイピングしている場合："

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:272
msgid "You need to configure the ``splunk_hec`` exporter as shown in the following example:"
msgstr "次の例に示すように、``splunk_hec`` エクスポーターを設定する必要があります："

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:289
msgid "Note that to be able to ingest metrics through Splunk HEC you need to declare your index as a metric index. To learn more about our metric index technology, see :new-page:`Get started with metrics <https://docs.splunk.com/Documentation/SplunkCloud/latest/Metrics/GetStarted>` in Splunk docs."
msgstr "Splunk HEC からメトリクスを取り込むには、インデックスをメトリクスインデックスとして宣言する必要があることに注意してください。メトリックインデックス技術の詳細については、Splunk docs の:new-page:`Get started with metrics<https://docs.splunk.com/Documentation/SplunkCloud/latest/Metrics/GetStarted>` を参照してください。"

#: ../../gdi/opentelemetry/components/splunk-hec-exporter.rst:294
msgid "The following table shows the configuration options for the Splunk HEC exporter:"
msgstr "次の表は、Splunk HEC エクスポーターの設定オプションを示している："

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:-1
msgid "The Splunk HEC receiver allows the Splunk Distribution of OpenTelemetry Collector to collect logs and metrics in Splunk HTTP Event Collector format."
msgstr "Splunk HEC レシーバーを使用すると、Splunk Distribution of OpenTelemetry Collector でログとメトリックを Splunk HTTP Event Collector 形式で収集できます。"

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:5
msgid "Splunk HEC receiver"
msgstr "Splunk HEC レシーバー"

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:10
msgid "The Splunk HTTP Event Collector (HEC) receiver allows the Splunk Distribution of OpenTelemetry Collector to collect events and logs in Splunk HEC format. The supported pipeline types are ``metrics`` and ``logs``. See :ref:`otel-data-processing` for more information."
msgstr "Splunk HTTP Event Collector (HEC) レシーバーを使用すると、Splunk Distribution of OpenTelemetry Collector でイベントとログを Splunk HEC 形式で収集できます。サポートされるパイプラインタイプは``metrics`` と``logs`` です。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:12
msgid "The receiver accepts data formatted as JSON HEC events under any path or as end-of-line separated log raw data if sent to the ``raw_path``. See :new-page:`Format events for HTTP Event Collector <https://docs.splunk.com/Documentation/Splunk/latest/Data/FormateventsforHTTPEventCollector>` for more information."
msgstr "レシーバは、JSON HECイベントとして任意のパスでフォーマットされたデータ、または``raw_path`` に送られた場合は行末で区切られたログ生データとしてデータを受け付ける。詳細については、HTTP Event Collector<https://docs.splunk.com/Documentation/Splunk/latest/Data/FormateventsforHTTPEventCollector>` の:new-page:`Format events を参照してください。"

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:14
msgid "For information about the HEC exporter, see :ref:`splunk-hec-exporter`."
msgstr "HECエクスポーターについては、:ref:`splunk-hec-exporter` を参照。"

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:27
msgid "Configure the Splunk HEC receiver as described in the next section."
msgstr "次のセクションで説明するように Splunk HEC レシーバを設定する。"

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:33
msgid "To activate the Splunk HEC receiver add a ``splunk_hec`` entry inside the ``receivers`` section of the Collector configuration file. For example:"
msgstr "Splunk HEC レシーバを有効にするには、Collector 設定ファイルの``receivers`` セクションに``splunk_hec`` エントリを追加する。例えば、こうだ："

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:40
msgid "The following example shows a Splunk HEC receiver configured with all available settings:"
msgstr "次の例は、Splunk HEC レシーバをすべての利用可能な設定で構成したものです："

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:70
msgid "Authorize HTTP requests"
msgstr "HTTPリクエストを認可する"

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:72
msgid "To allow the receiver to work with client extensions, add the following in the Collector service and pipeline configuration:"
msgstr "Receiverがクライアント拡張機能で動作するようにするには、Collectorサービスとパイプラインの構成に以下を追加します："

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:74
msgid ":new-page:`Basic authentication <https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/basicauthextension>`"
msgstr ":new-page:`基本認証 <https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/basicauthextension>`"

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:75
msgid ":new-page:`Bearer Token authentication <https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/bearertokenauthextension>`"
msgstr ":new-page:`ベアラ・トークン認証 <https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/bearertokenauthextension>`"

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:76
msgid ":new-page:`OIDC Authentication <https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/oidcauthextension>`"
msgstr ":new-page:`OIDC認証 <https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/oidcauthextension>`"

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:77
msgid ":new-page:`OAuth 2 client <https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/oauth2clientauthextension>`"
msgstr ":new-page:`OAuth 2 クライアント <https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/oauth2clientauthextension>`"

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:79
msgid "For advanced users, you can implement your own authentication extension to fulfill your requirements using the :new-page:`open-telemetry auth Go package <https://github.com/open-telemetry/opentelemetry-collector/tree/main/extension/auth>` and the :new-page:`configauth Go package <https://github.com/open-telemetry/opentelemetry-collector/tree/main/config/configauth>`."
msgstr "上級ユーザー向けには、:new-page:`open-telemetry auth Go パッケージ<https://github.com/open-telemetry/opentelemetry-collector/tree/main/extension/auth>` と:new-page:`configauth Go パッケージ<https://github.com/open-telemetry/opentelemetry-collector/tree/main/config/configauth>` を使って、要件を満たす独自の認証拡張機能を実装できます。"

#: ../../gdi/opentelemetry/components/splunk-hec-receiver.rst:84
msgid "The following table shows the configuration options for the Splunk HEC receiver:"
msgstr "次の表は、Splunk HEC レシーバーの設定オプションを示している："

#: ../../gdi/opentelemetry/components/transform-processor.rst:-1
msgid "Use the transform processor to modify traces, metrics, or logs before exporting telemetry to Splunk Observability Cloud. Read on to learn how to configure the component."
msgstr "テレメトリを Splunk Observability Cloud にエクスポートする前に、変換プロセッサを使用してトレース、メトリクス、またはログを変更します。コンポーネントの設定方法については、こちらをお読みください。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:5
msgid "Transform processor"
msgstr "トランスフォームプロセッサー"

#: ../../gdi/opentelemetry/components/transform-processor.rst:10
msgid "The transform processor is an OpenTelemetry Collector component that modifies matching spans, metrics, or logs through statements. Use cases include, among others, converting metrics to a different type, replacing or deleting keys, and setting fields depending on predefined conditions."
msgstr "変換プロセッサはOpenTelemetry Collectorのコンポーネントで、ステートメントによって一致するスパン、メトリクス、またはログを変更します。使用例としては、メトリクスの異なるタイプへの変換、キーの置換や削除、事前定義された条件によるフィールドの設定などがあります。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:12
msgid "Statements are functions of the OpenTelemetry Transformation Language (OTTL) and are applied to telemetry following their order in the list. The transform processor includes additional functions for converting metric types. Statements transform data according to the OTTL context you define, for example Span or DataPoint."
msgstr "ステートメントは OpenTelemetry Transformation Language (OTTL) の関数であり、リスト内の順序に従ってテレメトリに適用されます。トランスフォーム・プロセッサーには、メトリックタイプを変換するための追加関数が含まれている。ステートメントは、定義した OTTL コンテキスト（Span や DataPoint など）に従ってデータを変換する。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:14
msgid "The transform processor supports the following contexts:"
msgstr "トランスフォームプロセッサは、以下のコンテキストをサポートしている："

#: ../../gdi/opentelemetry/components/transform-processor.rst:22
msgid "Supported contexts"
msgstr "サポートされているコンテキスト"

#: ../../gdi/opentelemetry/components/transform-processor.rst:24
msgid "``resource`` → ``scope`` → ``span`` → ``spanevent``"
msgstr "``resource`` → ``scope`` → ``span`` → ``spanevent``"

#: ../../gdi/opentelemetry/components/transform-processor.rst:26
msgid "``resource`` → ``scope`` → ``metric`` → ``datapoint``"
msgstr "``resource`` → ``scope`` → ``metric`` → ``datapoint``"

#: ../../gdi/opentelemetry/components/transform-processor.rst:28
msgid "``resource`` → ``scope`` → ``logs``"
msgstr "``resource`` → ``scope`` → ``logs``"

#: ../../gdi/opentelemetry/components/transform-processor.rst:30
msgid "Statements can transform telemetry of a higher context. For example, statements applied to a data point can access the metric and resource of the data point. Access to lower contexts isn't possible; for example, you can't use a span statement to transform single span events. As a general rule, associate statements to the context you want to transform."
msgstr "ステートメントは、より高いコンテクストのテレメトリーを変換することができる。例えば、データ・ポイントに適用されるステートメントは、データ・ポイントのメトリックとリソースにアクセスすることができる。例えば、spanステートメントを使って単一のspanイベントを変換することはできない。一般的なルールとして、変換したいコンテキストにステートメントを関連付ける。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:32
msgid "Modifying telemetry might have unintended consequences, such as orphaned spans or logs, identity conflicts, and wrong metric conversions. Always test transformations before releasing them in a production environment."
msgstr "テレメトリを変更すると、スパンやログの孤児化、アイデンティティの衝突、誤ったメトリック変換など、意図しない結果を招く可能性がある。本番環境でリリースする前に、必ずトランスフォームをテストしてください。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:37
msgid "By default, the Splunk Distribution of OpenTelemetry Collector includes the transform processor. To activate the transform processor for a pipeline, add ``transform`` to the ``processors`` section of the configuration. For example:"
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションには変換プロセッサが含まれています。パイプラインのトランスフォームプロセッサを有効にするには、コンフィギュレーションの``processors`` セクションに``transform`` を追加する。例えば、こうだ："

#: ../../gdi/opentelemetry/components/transform-processor.rst:56
msgid "You can then add the transform processor to any compatible pipeline. For example:"
msgstr "その後、互換性のあるパイプラインにトランスフォーム・プロセッサーを追加することができる。例えば、こうだ："

#: ../../gdi/opentelemetry/components/transform-processor.rst:88
msgid "The ``error_mode`` field describes how the processor reacts to errors when processing statements:"
msgstr "``error_mode`` フィールドは、ステートメントを処理する際にプロセッサがどのようにエラーに対応するかを記述する："

#: ../../gdi/opentelemetry/components/transform-processor.rst:90
msgid "``error_mode: ignore`` tells the processor to ignore errors and continue execution. This is the default error mode."
msgstr "``error_mode: ignore`` は、エラーを無視して実行を続行するようプロセッサに指示する。これはデフォルトのエラーモードである。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:91
msgid "``error_mode: propagate`` tells the processor to return errors. The Collector drops the payload as a result."
msgstr "``error_mode: propagate`` はエラーを返すようにプロセッサに指示する。コレクターは結果としてペイロードをドロップする。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:102
msgid "The following sample configurations show how to perform different transformations on spans, metrics, and logs."
msgstr "以下のサンプル構成は、スパン、メトリクス、およびログに対してさまざまな変換を実行する方法を示しています。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:105
msgid "Transform Kubernetes object logs"
msgstr "Kubernetesのオブジェクトログを変換する"

#: ../../gdi/opentelemetry/components/transform-processor.rst:107
msgid "The following example shows how to edit logs received using the ``k8sobjects`` receiver. Shortening logs can be helpful when visualizing objects in a dashboard or setting up alerts."
msgstr "次の例は、``k8sobjects`` 受信機を使用して受信したログを編集する方法を示している。ログの短縮は、ダッシュボードでオブジェクトを視覚化したり、アラートを設定したりする際に役立ちます。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:119
msgid "Edit resources and spans for size"
msgstr "リソースとスパンを編集してサイズを調整"

#: ../../gdi/opentelemetry/components/transform-processor.rst:121
msgid "The following example shows how to edit resources and spans by limiting the number of attributes and truncating them to 4,096 characters. The ``resource`` statement drops all keys except the ones indicated in ``keep_keys``."
msgstr "次の例では、属性の数を制限し、4,096文字に切り捨てて、リソースとスパンを編集する方法を示しています。``resource`` 文は、``keep_keys`` で示されたキーを除くすべてのキーを削除する。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:140
msgid "Convert datapoints to different types"
msgstr "データポイントを異なるタイプに変換する"

#: ../../gdi/opentelemetry/components/transform-processor.rst:142
msgid "The following example shows how to convert datapoints to different types depending on their metric names using the functions included in the transform processor."
msgstr "以下の例では、変換プロセッサに含まれる関数を使用して、データポイントをメトリック名によって異なるタイプに変換する方法を示している。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:168
msgid "Metrics functions"
msgstr "メトリクス機能"

#: ../../gdi/opentelemetry/components/transform-processor.rst:170
msgid "You can apply the following functions to metric contexts:"
msgstr "メトリックコンテキストには以下の機能を適用できます："

#: ../../gdi/opentelemetry/components/transform-processor.rst:172
msgid "``convert_sum_to_gauge``: Converts a metric of type sum to type gauge. Retains data points."
msgstr "``convert_sum_to_gauge``:sum型のメトリックをgauge型に変換する。データポイントを保持する。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:173
msgid "``convert_gauge_to_sum``: Converts a metric of type gauge to type sum. Retains data points. Takes aggregation temporality (``cumulative`` or ``delta``) and monotonicity (boolean) as arguments."
msgstr "``convert_gauge_to_sum``:Gauge型のメトリックをSum型に変換します。データポイントを保持する。集計の時間性 (``cumulative`` または``delta``) と単調性 (boolean) を引数にとる。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:174
msgid "``convert_summary_count_val_to_sum``: Creates a metric of type sum from the count value of a summary. Takes aggregation temporality (``cumulative`` or ``delta``) and monotonicity (boolean) as arguments. The name of the new metric is in the form ``<summary metric name>_count``. Time stamp, attributes, and description are preserved."
msgstr "``convert_summary_count_val_to_sum``:要約のカウント値からsum型のメトリックを作成する。集計の時間性 (``cumulative`` または``delta``) と単調性 (boolean) を引数にとる。新しいメトリクスの名前は``<summary metric name>_count`` という形式である。タイムスタンプ、属性、説明は保存される。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:175
msgid "``convert_summary_sum_val_to_sum``: Creates a metric of type sum from the count value of a summary. Takes aggregation temporality (``cumulative`` or ``delta``) and monotonicity (boolean) as arguments. The name of the new metric is in the form ``<summary metric name>_sum``. Time stamp, attributes, and description are preserved."
msgstr "``convert_summary_sum_val_to_sum``:要約のカウント値からsum型のメトリックを作成する。集計の時間性 (``cumulative`` または``delta``) と単調性 (boolean) を引数にとる。新しいメトリクスの名前は``<summary metric name>_sum`` という形式である。タイムスタンプ、属性、説明は保存される。"

#: ../../gdi/opentelemetry/components/transform-processor.rst:177
msgid "Using conversion functions might break metric semantics."
msgstr "変換関数を使用すると、メトリックのセマンティクスが壊れる可能性がある。"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:-1
msgid "The Windows Performance Counters receiver allows the Splunk Distribution of OpenTelemetry Collector to collect system, application, or custom performance counter data from the Windows Registry."
msgstr "Windows Performance Counters レシーバーを使用すると、OpenTelemetry Collector の Splunk ディストリビューションで、Windows レジストリからシステム、アプリケーション、またはカスタムのパフォーマンスカウンターデータを収集できます。"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:5
msgid "Windows Performance Counters receiver"
msgstr "Windowsパフォーマンス・カウンタ受信機"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:10
msgid "The Windows Performance Counters receiver allows the Splunk Distribution of OpenTelemetry Collector to collect configured system, application, or custom performance counter data from the Windows Registry. The supported pipeline types are ``metrics``. See :ref:`otel-data-processing` for more information."
msgstr "Windows Performance Counters レシーバーを使用すると、OpenTelemetry Collector の Splunk ディストリビューションで、設定されたシステム、アプリケーション、またはカスタムのパフォーマンスカウンターデータを Windows レジストリから収集できます。サポートされるパイプライン・タイプは``metrics`` 。詳しくは:ref:`otel-data-processing` 。"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:12
msgid "Configured metrics consist of a metric description, including unit and type, used by one or more performance counters scraped by the receiver. If a specific performance counter can't be accessed at startup, the receiver emits a warning and continues execution."
msgstr "構成されたメトリクスは、レシーバによってスクレイピングされた 1 つまたは複数のパフォーマンス・カウンタによって使用される、単位とタイプを含むメトリクスの説明で構成されます。起動時に特定のパフォーマンス・カウンターにアクセスできない場合、レシーバーは警告を発し、実行を継続する。"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:14
msgid "The Windows Performance Counters receiver replaces the SmartAgent monitor type of the same name. See :ref:`telegraf-win-perf-counters` for information on the monitor type."
msgstr "Windowsパフォーマンス・カウンター・レシーバーは、同名のSmartAgentモニター・タイプを置き換える。モニターの種類については、:ref:`telegraf-win-perf-counters` を参照。"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:16
msgid "The Windows Performance Counters receiver only works on Windows hosts."
msgstr "Windowsパフォーマンス・カウンター・レシーバーはWindowsホストでのみ動作します。"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:29
msgid "Configure the Windows Performance Counters receiver as described in the next section."
msgstr "次のセクションで説明するように、Windowsパフォーマンス・カウンター・レシーバーを設定する。"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:35
msgid "To activate the Windows Performance Counters receiver add a ``windowsperfcounters`` entry inside the ``receivers`` section of the Collector configuration file. For example:"
msgstr "Windows Performance Counters レシーバを有効にするには、Collector 構成ファイルの``receivers`` セクションに``windowsperfcounters`` エントリを追加します。例えば、こうだ："

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:64
msgid "To collect metrics from Windows performance counters, you need to define metrics using the ``metrics`` field as in the example. You can then reference the metrics you defined from the ``counters.metric`` fields."
msgstr "Windows パフォーマンス・カウンターからメトリクスを収集するには、例のように``metrics`` フィールドを使用してメトリクスを定義する必要があります。その後、``counters.metric`` フィールドから定義したメトリクスを参照できます。"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:66
msgid "Metrics can be of type ``sum`` or ``gauge``. Sum metrics support the ``aggregation`` and ``monotonic`` fields."
msgstr "メトリクスのタイプは``sum`` または``gauge`` 。Sum メトリクスは、``aggregation`` と``monotonic`` フィールドをサポートしています。"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:70
msgid "Scrape at different collection intervals"
msgstr "異なる収集間隔で削る"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:72
msgid "The following example shows how to scrape performance counters using different collection intervals depending on the target:"
msgstr "以下の例は、ターゲットによって異なる収集間隔を使用してパフォーマンス・カウンターをスクレイピングする方法を示している："

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:121
msgid "Instances configuration"
msgstr "インスタンスの構成"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:123
msgid "An instance is any entity that produces performance data. Instances can have one or more counter values."
msgstr "インスタンスとは、パフォーマンス・データを生成するあらゆるエンティティのことである。インスタンスは1つ以上のカウンタ値を持つことができる。"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:125
msgid "The receiver supports the following values through the ``instances`` field:"
msgstr "受信機は``instances`` フィールドを通じて以下の値をサポートする："

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:133
msgid "Interpretation"
msgstr "解釈"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:134
msgid "``\"*\"``"
msgstr "``\"*\"``"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:135
msgid "All instances"
msgstr "すべてのインスタンス"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:136
msgid "``\"_Total\"``"
msgstr "``\"_Total\"``"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:137
msgid "The total instance"
msgstr "インスタンス総数"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:138
msgid "``\"instance1\"``"
msgstr "``\"instance1\"``"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:139
msgid "Single instance"
msgstr "シングルインスタンス"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:140
msgid "``[\"instance1\", \"instance2\", ...]``"
msgstr "``[\"instance1\", \"instance2\", ...]``"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:141
msgid "Set of instances"
msgstr "インスタンスの集合"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:142
msgid "``[\"_Total\", \"instance1\", \"instance2\", ...]``"
msgstr "``[\"_Total\", \"instance1\", \"instance2\", ...]``"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:143
msgid "Set of instances including the total instance"
msgstr "合計インスタンスを含むインスタンスのセット"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:148
msgid "Metrics from the Network Interface object aren't generated when running the Collector inside a container. This is caused by the network interface not being available inside the container. Network Interface metrics are captured for subprocesses."
msgstr "コンテナ内でCollectorを実行すると、Network Interfaceオブジェクトからのメトリクスが生成されません。これは、コンテナ内でネットワーク・インターフェイスが利用できないことが原因である。ネットワーク・インターフェイスのメトリクスは、サブプロセスに対して取得されます。"

#: ../../gdi/opentelemetry/components/windowsperfcounters-receiver.rst:153
msgid "The following table shows the configuration options for the Windows Performance Counters receiver:"
msgstr "以下の表は、Windows パフォーマンス・カウンター・レシーバーの構成オプションを示す："

#: ../../gdi/opentelemetry/configure-remove.rst:-1
msgid "Remove data prior to ingestion with the Splunk Distribution of OpenTelemetry Collector / Pre-ingest data removal."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを使用して、インジェスト前にデータを削除する / インジェスト前のデータ削除。"

#: ../../gdi/opentelemetry/configure-remove.rst:5
msgid "Control data to ingest using the Collector"
msgstr "コレクターを使用して取り込むデータを制御する"

#: ../../gdi/opentelemetry/configure-remove.rst:10
msgid "Depending on its configuration, the Splunk Distribution of OpenTelemetry Collector can forward a wide range of telemetry, such as metrics, traces, or logs, to the Splunk Observability Cloud ingest endpoints. For certain scenarios, some of this data can be redundant, unnecessary, or sensitive, causing technical complications, increased cost, or legal issues."
msgstr "構成によっては、Splunk Distribution of OpenTelemetry Collector は、メトリクス、トレース、ログなどの幅広いテレメトリを Splunk Observability Cloud インジェストエンドポイントに転送できます。特定のシナリオでは、このデータの一部が冗長、不要、または機密である可能性があり、技術的な複雑さ、コストの増加、または法的な問題を引き起こす。"

#: ../../gdi/opentelemetry/configure-remove.rst:12
msgid "To address these situations, the Collector comes with options to process the data you're receiving to modify or delete unwanted elements before they're ingested by Splunk Observability Cloud. For example, you can use the :ref:`attributes processor <attributes-processor>` to edit or remove any unwanted data."
msgstr "このような状況に対処するため、コレクターには、受信したデータを処理し、Splunk Observability Cloud に取り込まれる前に不要な要素を修正または削除するオプションが用意されています。例えば、:ref:`attributes processor <attributes-processor>` 、不要なデータを編集したり削除したりすることができる。"

#: ../../gdi/opentelemetry/configure-remove.rst:15
msgid "Scenarios: Remove dimensions using the attributes processor"
msgstr "シナリオ属性プロセッサを使用して寸法を削除する"

#: ../../gdi/opentelemetry/configure-remove.rst:17
msgid "Moira, a performance engineer, notices high cardinality in ingested metrics, which heavily impacts data charges. Moira is considering dropping certain dimensions to cut costs."
msgstr "パフォーマンス・エンジニアのモイラは、インジェストされたメトリクスにカーディナリティが高く、データ料金に大きな影響を与えていることに気づいた。モイラはコスト削減のため、ある寸法を落とすことを検討している。"

#: ../../gdi/opentelemetry/configure-remove.rst:19
msgid "Moira checks which dimensions are being used and realizes that for the metric ``cpu.utilization``, the dimensions ``hostname`` and ``source_host`` are irrelevant. They decide that those dimension don't need to be ingested at all."
msgstr "モイラは、どの寸法が使われているかをチェックし、メートル法の``cpu.utilization`` 、寸法``hostname`` と``source_host`` は無関係であることに気づく。そのような次元のものは摂取する必要がないと判断するのだ。"

#: ../../gdi/opentelemetry/configure-remove.rst:21
msgid "To prevent both dimensions from being ingested, first Moira adds the attributes processor in the Collectors's configuration, set up to skip the unnecessary dimensions:"
msgstr "両方のディメンジョンが取り込まれないようにするには、まずモイラがコレクターの構成に属性プロセッサを追加し、不要なディメンジョンをスキップするように設定します："

#: ../../gdi/opentelemetry/configure-remove.rst:38
msgid "Next, Moira adds the ``attributes/delete`` processor to the ``processors`` pipeline under ``pipelines`` in the Collector's configuration:"
msgstr "次に、Moiraはコレクターのコンフィギュレーションの``pipelines`` 、``attributes/delete`` プロセッサを``processors`` パイプラインに追加する："

#: ../../gdi/opentelemetry/configure-remove.rst:51
msgid "Alternatives to alter or remove data"
msgstr "データを変更または削除する代替手段"

#: ../../gdi/opentelemetry/configure-remove.rst:53
msgid "See another example of how to tweak your data at :ref:`collector-remove-data`."
msgstr ":ref:`collector-remove-data` 、データを微調整する方法の別の例をご覧ください。"

#: ../../gdi/opentelemetry/configure-remove.rst:55
msgid "You can also use the metrics pipeline management tool to control how you ingest and store your metrics. Learn more at :ref:`metrics-pipeline-intro`."
msgstr "また、メトリクス・パイプライン管理ツールを使用して、メトリクスの取り込みと保存方法を制御できます。詳しくは:ref:`metrics-pipeline-intro` 。"

#: ../../gdi/opentelemetry/configure-the-collector.rst:10
msgid "Remove data pre-ingest"
msgstr "検査前のデータを削除する"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:-1 ../../gdi/opentelemetry/configure-the-collector.rst:-1
msgid "Configure the Splunk Distribution of OpenTelemetry Collector. There are a variety of default configuration files available, as well additional components that can be configured."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを設定します。さまざまなデフォルトのコンフィギュレーション・ファイルが用意されているほか、追加でコンフィギュレーションできるコンポーネントもある。"

#: ../../gdi/opentelemetry/configure-the-collector.rst:5 ../../gdi/opentelemetry/security.rst:22 ../../gdi/opentelemetry/security.rst:53
msgid "Configure the Collector"
msgstr "コレクタの設定"

#: ../../gdi/opentelemetry/configure-the-collector.rst:26
msgid "You can use a variety of default configuration files to set up the Splunk Distribution of OpenTelemetry Collector, as well :ref:`additional components <otel-components>` that you can configure separately."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションの設定には、さまざまなデフォルトの設定ファイルを使用できます。また、:ref:`additional components <otel-components>` を個別に設定することもできます。"

#: ../../gdi/opentelemetry/configure-the-collector.rst:28
msgid "See also other configuration options:"
msgstr "その他の設定オプションも参照してください："

#: ../../gdi/opentelemetry/configure-the-collector.rst:30
msgid ":ref:`otel-data-processing`"
msgstr ":ref:`otel-data-processing`"

#: ../../gdi/opentelemetry/configure-the-collector.rst:31
msgid ":ref:`otel-tags`"
msgstr ":ref:`otel-tags`"

#: ../../gdi/opentelemetry/configure-the-collector.rst:34
msgid "Splunk Observability Cloud also offers several options for no-hassle, zero-config Auto Instrumentation. Learn more at :ref:`Splunk OpenTelemetry Zero Configuration Auto Instrumentation <zero-config>`."
msgstr "Splunk Observability Cloud は、面倒な設定なしで自動計測を行うためのいくつかのオプションも提供しています。詳しくは:ref:`Splunk OpenTelemetry Zero Configuration Auto Instrumentation <zero-config>` 。"

#: ../../gdi/opentelemetry/configure-the-collector.rst:44
msgid "See :ref:`the default configuration <otel-configuration-ootb>` to learn about the basic structure of the Collector's configuration file. It also contains an example valid for most environments."
msgstr "コレクタの設定ファイルの基本構造については、:ref:`the default configuration <otel-configuration-ootb>` を参照してください。また、ほとんどの環境で有効な例も掲載されている。"

#: ../../gdi/opentelemetry/configure-the-collector.rst:46
msgid "You can also use these configurations to change the default settings in each Collector package:"
msgstr "これらの設定を使用して、各 Collector パッケージのデフォルト設定を変更することもできます："

#: ../../gdi/opentelemetry/configure-the-collector.rst:48
msgid "Kubernetes: :ref:`Helm configuration <otel-kubernetes-config>`, :ref:`advanced config <otel-kubernetes-config-advanced>`, and :ref:`log config <otel-kubernetes-config-logs>`"
msgstr "Kubernetes：:ref:`Helm configuration <otel-kubernetes-config>` :ref:`advanced config <otel-kubernetes-config-advanced>` :ref:`log config <otel-kubernetes-config-logs>`"

#: ../../gdi/opentelemetry/configure-the-collector.rst:49
msgid ":ref:`otel-linux-config`"
msgstr ":ref:`otel-linux-config`"

#: ../../gdi/opentelemetry/configure-the-collector.rst:50
msgid ":ref:`otel-windows-config`"
msgstr ":ref:`otel-windows-config`"

#: ../../gdi/opentelemetry/configure-the-collector.rst:60
msgid "To define multiple config files simultaneously use:"
msgstr "複数の設定ファイルを同時に定義するには"

#: ../../gdi/opentelemetry/configure-the-collector.rst:72
msgid "Use the Fluentd receiver to collect logs. Common sources such as filelog, journald, and Windows Event Viewer are included in the installation. See :ref:`fluentd-receiver` for more information."
msgstr "Fluentdレシーバーを使ってログを収集する。filelog、journald、Windows Event Viewerなどの一般的なソースは、インストールに含まれている。詳しくは:ref:`fluentd-receiver` 。"

#: ../../gdi/opentelemetry/configure-the-collector.rst:82
msgid "The following table describes the artifacts in the Fluentd directory:"
msgstr "次の表は、Fluentd ディレクトリの成果物を説明しています："

#: ../../gdi/opentelemetry/configure-the-collector.rst:90
msgid "fluent.conf or td-agent.conf"
msgstr "fluent.confまたはtd-agent.conf"

#: ../../gdi/opentelemetry/configure-the-collector.rst:91
msgid "These are the main Fluentd configuration files used to forward events to the Collector. The file locations are ``/etc/otel/collector/fluentd/fluent.conf`` on Linux and ``C:\\opt\\td-agent\\etc\\td-agent\\td-agent.conf`` on Windows. By default, these files configure Fluentd to include custom Fluentd sources and forward all log events with the ``@SPLUNK`` label to the Collector."
msgstr "これらは、Collector にイベントを転送するために使用される主な Fluentd 設定ファイルです。ファイルの場所は、Linuxでは``/etc/otel/collector/fluentd/fluent.conf`` 、Windowsでは``C:\\opt\\td-agent\\etc\\td-agent\\td-agent.conf`` 。デフォルトでは、これらのファイルは、カスタム Fluentd ソースを含むように Fluentd を設定し、``@SPLUNK`` ラベルを持つすべてのログイベントを Collector に転送します。"

#: ../../gdi/opentelemetry/configure-the-collector.rst:92
msgid "conf.d"
msgstr "conf.d"

#: ../../gdi/opentelemetry/configure-the-collector.rst:93
msgid "This directory contains the custom Fluentd configuration files. The location is ``/etc/otel/collector/fluentd/conf.d`` on Linux and ``\\opt\\td-agent\\etc\\td-agent\\conf.d`` on Windows. All files in this directory ending with the .conf extension are automatically included by Fluentd, including ``\\opt\\td-agent\\etc\\td-agent\\conf.d\\eventlog.conf`` on Windows."
msgstr "このディレクトリには、カスタム Fluentd 設定ファイルがあります。場所はLinuxでは``/etc/otel/collector/fluentd/conf.d`` 、Windowsでは``\\opt\\td-agent\\etc\\td-agent\\conf.d`` 。このディレクトリの .conf という拡張子で終わるすべてのファイルは、Windows の``\\opt\\td-agent\\etc\\td-agent\\conf.d\\eventlog.conf`` を含めて、Fluentd によって自動的にインクルードされます。"

#: ../../gdi/opentelemetry/configure-the-collector.rst:94
msgid "splunk-otel-collector.conf"
msgstr "splunk-otel-collector.conf"

#: ../../gdi/opentelemetry/configure-the-collector.rst:95
msgid "This is the drop-in file for the Fluentd service on Linux. Use this file to override the default Fluentd configuration path in favor of the custom Fluentd configuration file for Linux (fluent.conf)."
msgstr "これはLinux上のFluentdサービス用のドロップインファイルです。Linux 用のカスタム Fluentd 設定ファイル (fluent.conf) を優先して、デフォルトの Fluentd 設定パスを上書きするには、このファイルを使います。"

#: ../../gdi/opentelemetry/configure-the-collector.rst:97
msgid "The following is a sample configuration to collect custom logs:"
msgstr "以下は、カスタムログを収集するための設定例です："

#: ../../gdi/opentelemetry/configure-the-collector.rst:112
msgid "See :ref:`fluentd-receiver` for more information."
msgstr "詳しくは:ref:`fluentd-receiver` 。"

#: ../../gdi/opentelemetry/configure-the-collector.rst:122
msgid "You can also use these additional :ref:`configuration sources <otel-other-configuration-sources>`:"
msgstr ":ref:`configuration sources <otel-other-configuration-sources>` を追加することもできる："

#: ../../gdi/opentelemetry/configure-the-collector.rst:124 ../../gdi/opentelemetry/other-configuration-sources.rst:27
msgid "Environment variable (Alpha)"
msgstr "環境変数（アルファ）"

#: ../../gdi/opentelemetry/configure-the-collector.rst:125
msgid "etcd (Alpha)"
msgstr "etcd (Alpha)"

#: ../../gdi/opentelemetry/configure-the-collector.rst:126 ../../gdi/opentelemetry/other-configuration-sources.rst:39
msgid "Include config source (Beta)"
msgstr "コンフィグソースを含める（ベータ版）"

#: ../../gdi/opentelemetry/configure-the-collector.rst:127 ../../gdi/opentelemetry/other-configuration-sources.rst:46
msgid "Vault (Alpha)"
msgstr "ボールト（アルファ）"

#: ../../gdi/opentelemetry/configure-the-collector.rst:128 ../../gdi/opentelemetry/other-configuration-sources.rst:58
msgid "Zookeeper (Alpha)"
msgstr "ズーキーパー（アルファ）"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:5
msgid "Collector default configuration"
msgstr "コレクターのデフォルト設定"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:10
msgid "The Collector configuration is stored in a :new-page:`YAML file <https://yaml.org/>` that specifies the characteristics and behavior of the following elements:"
msgstr "Collector の設定は:new-page:`YAML ファイル<https://yaml.org/>` に保存され、以下の要素の特性と動作を指定します："

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:13
msgid ":ref:`Receivers <collector-components-receivers>`: Determine how you'll get data into the Collector."
msgstr ":ref:`Receivers <collector-components-receivers>`:コレクターにデータを取り込む方法を決定します。"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:14
msgid ":ref:`Processors <collector-components-processors>`: Configure which operations you'll perform on data before it's exported. For example, filtering."
msgstr ":ref:`Processors <collector-components-processors>`:エクスポート前にデータに対してどのような処理を行うかを設定します。例えば、フィルタリング。"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:15
msgid ":ref:`Exporters <collector-components-exporters>`: Set up where to send data to. It can be one or more backends or destinations."
msgstr ":ref:`Exporters <collector-components-exporters>`:データの送信先を設定する。バックエンドやデスティネーションは1つでもよいし、複数でもよい。"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:16
msgid "Services. It consists of two elements:"
msgstr "サービスこれは2つの要素で構成されている："

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:18
msgid "List of the :ref:`extensions <collector-components-extensions>` you've configured."
msgstr "設定した:ref:`extensions <collector-components-extensions>` のリスト。"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:20
msgid ":ref:`Pipelines <otel-data-processing>`: Path data will follow from reception, then through processing or modification, and finally exiting through exporters."
msgstr ":ref:`Pipelines <otel-data-processing>`:データは受信から、加工や修正を経て、最終的に輸出業者を通じて出荷される。"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:22
msgid "See an overview of the elements and pipelines in the default configuration in the following sections."
msgstr "以下のセクションで、デフォルト設定のエレメントとパイプラインの概要を参照してください。"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:25
msgid "Default configuration"
msgstr "デフォルト設定"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:27
msgid "This is the default configuration file for the Linux (Debian/RPM) and Windows Installer collector packages:"
msgstr "これは、Linux (Debian/RPM) および Windows インストーラコ レクタパッケージのデフォルトの設定ファイルです："

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:33
msgid "Default pipelines"
msgstr "デフォルトのパイプライン"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:35
msgid "By default, ingested data follows these pipelines."
msgstr "デフォルトでは、取り込まれたデータはこれらのパイプラインに従う。"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:38
msgid "Default pipelines for logs"
msgstr "ログのデフォルト・パイプライン"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:40
msgid "The following diagram shows the default logs pipeline:"
msgstr "以下の図は、デフォルトのログ・パイプラインを示している："

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:-1
msgid "Default logs pipeline."
msgstr "デフォルトのログパイプライン。"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:45 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:70 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:94
msgid "Learn more about these receivers:"
msgstr "これらのレシーバーについて詳しく知る："

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:47 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:73
msgid ":ref:`signalfx-receiver`"
msgstr ":ref:`signalfx-receiver`"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:49
msgid ":ref:`fluentd-receiver`"
msgstr ":ref:`fluentd-receiver`"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:51 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:77 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:99
msgid "Learn more about these processors:"
msgstr "これらのプロセッサーの詳細については、こちらをご覧ください："

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:53 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:79 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:101
msgid ":ref:`batch-processor`"
msgstr ":ref:`batch-processor`"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:54 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:80 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:102
msgid ":ref:`resourcedetection-processor`"
msgstr ":ref:`resourcedetection-processor`"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:56 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:82 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:104
msgid "Learn more about these exporters:"
msgstr "これらの輸出業者についてもっと知る："

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:58 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:84 ../../gdi/opentelemetry/configure-the-collector-ootb.rst:107
msgid ":ref:`signalfx-exporter`"
msgstr ":ref:`signalfx-exporter`"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:59
msgid ":ref:`splunk-hec-exporter`"
msgstr ":ref:`splunk-hec-exporter`"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:63
msgid "Default pipelines for metrics"
msgstr "メトリクスのデフォルト・パイプライン"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:65
msgid "The following diagram shows the default metrics pipeline:"
msgstr "次の図は、デフォルトのメトリクス・パイプラインを示しています："

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:-1
msgid "Default metrics pipeline."
msgstr "デフォルトのメトリクス・パイプライン。"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:87
msgid "Default pipelines for traces"
msgstr "トレースのデフォルトパイプライン"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:89
msgid "The following diagram shows the default traces pipeline:"
msgstr "次の図は、デフォルトのトレース・パイプラインを示している："

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:-1
msgid "Default traces pipeline."
msgstr "デフォルトのトレースパイプライン。"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:112
msgid "See also the following documents:"
msgstr "以下の文書も参照のこと："

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:114
msgid ":ref:`otel-collector-scenario`"
msgstr ":ref:`otel-collector-scenario`"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:115
msgid ":ref:`otel-install-platform`"
msgstr ":ref:`otel-install-platform`"

#: ../../gdi/opentelemetry/configure-the-collector-ootb.rst:116
msgid ":ref:`Troubleshooting <otel-troubleshooting>`"
msgstr ":ref:`Troubleshooting <otel-troubleshooting>`"

#: ../../gdi/opentelemetry/data-processing.rst:-1
msgid "Learn how to process data collected with the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションで収集したデータの処理方法について説明します。"

#: ../../gdi/opentelemetry/data-processing.rst:5
msgid "Process your data with pipelines"
msgstr "パイプラインでデータを処理する"

#: ../../gdi/opentelemetry/data-processing.rst:10
msgid "A pipeline defines the path the ingested data follows in the Collector, starting from reception, then further processing or modification, and finally when data exits the Collector through exporters."
msgstr "パイプラインは、インジェストされたデータがCollector内でたどる経路を定義するもので、受信から始まり、さらに処理または修正され、最後にデータがエクスポータを通じてCollectorから出るときに定義されます。"

#: ../../gdi/opentelemetry/data-processing.rst:12
msgid "Pipelines operate on three data types: logs, traces, and metrics. To learn more about data in Splunk Observability Cloud, see :ref:`data-model`."
msgstr "パイプラインは、ログ、トレース、メトリクスの3種類のデータで動作する。Splunk Observability Cloud のデータについて詳しくは、:ref:`data-model` をご覧ください。"

#: ../../gdi/opentelemetry/data-processing.rst:15
msgid "Define the pipeline"
msgstr "パイプラインの定義"

#: ../../gdi/opentelemetry/data-processing.rst:17
msgid "The pipeline is constructed during Collector startup based on the pipeline definition. See :ref:`otel-components` to understand the behavior of each component, and check :ref:`otel-configuration-ootb`."
msgstr "パイプラインは、パイプライン定義に基づいてコレクタ起動時に構築されます。各コンポーネントの動作については、:ref:`otel-components` を参照し、:ref:`otel-configuration-ootb` をチェックしてほしい。"

#: ../../gdi/opentelemetry/data-processing.rst:19
msgid "To define the pipeline, first you need to specify a data type in your pipeline configuration. All the receivers, exporters, and processors you use in a pipeline must support the particular data type, otherwise you'll get the ``ErrDataTypeIsNotSupported`` error message when the configuration is loaded."
msgstr "パイプラインを定義するには、まずパイプライン設定でデータ型を指定する必要がある。パイプラインで使用するすべてのレシーバー、エクスポーター、プロセッサーが特定のデータ型をサポートしていなければなりません。そうでない場合、コンフィギュレーションがロードされたときに``ErrDataTypeIsNotSupported`` のエラーメッセージが表示されます。"

#: ../../gdi/opentelemetry/data-processing.rst:21
msgid "A pipeline can contain one or more receivers. Data from all receivers is pushed to the first processor, which performs processing on it and then pushes it to the next processor and so on until the last processor in the pipeline pushes the data to the exporters. Each exporter gets a copy of each data element. The last processor uses a data fan-out connector to fan out (distribute) the data to multiple exporters."
msgstr "パイプラインは、1つ以上のレシーバーを含むことができる。すべてのレシーバーからのデータは最初のプロセッサーにプッシュされ、プロセッサーはそのデータに対して処理を実行し、次のプロセッサーにプッシュし、パイプラインの最後のプロセッサーがデータをエクスポータにプッシュするまでそれを繰り返す。各エクスポーターは各データ要素のコピーを取得する。最後のプロセッサーは、データファンアウトコネクターを使用して、データを複数のエクスポーターにファンアウト（分配）する。"

#: ../../gdi/opentelemetry/data-processing.rst:24
msgid "Example of a pipeline configuration"
msgstr "パイプラインの構成例"

#: ../../gdi/opentelemetry/data-processing.rst:26
msgid "A pipeline configuration typically looks like this:"
msgstr "パイプラインのコンフィギュレーションは通常次のようになる："

#: ../../gdi/opentelemetry/data-processing.rst:39
msgid "This example defines a pipeline for ``traces``, with three receivers, two processors, and three exporters. The following table describes the receivers, processors, and exporters used in this example."
msgstr "この例では、``traces`` 、3つのレシーバー、2つのプロセッサー、3つのエクスポー ターを持つパイプラインを定義している。以下の表は、この例で使用されているレシーバー、プロセッサー、およびエクスポーターについて説明したものである。"

#: ../../gdi/opentelemetry/data-processing.rst:45 ../../gdi/opentelemetry/install-the-collector.rst:76 ../../gdi/opentelemetry/install-the-collector.rst:102
msgid "Component"
msgstr "コンポーネント"

#: ../../gdi/opentelemetry/data-processing.rst:47
msgid "Pipeline type"
msgstr "パイプライン・タイプ"

#: ../../gdi/opentelemetry/data-processing.rst:48 ../../gdi/opentelemetry/data-processing.rst:51 ../../gdi/opentelemetry/data-processing.rst:54 ../../gdi/opentelemetry/discovery-mode.rst:44
msgid "Receiver"
msgstr "レシーバー"

#: ../../gdi/opentelemetry/data-processing.rst:49
msgid "``otlp``: Receives data through gRPC or HTTP using OTLP format."
msgstr "``otlp``:OTLP形式でgRPCまたはHTTP経由でデータを受信する。"

#: ../../gdi/opentelemetry/data-processing.rst:50
msgid "Traces, metrics, logs"
msgstr "トレース、メトリクス、ログ"

#: ../../gdi/opentelemetry/data-processing.rst:52
msgid "``jaeger``: Receives trace data in Jaeger format."
msgstr "``jaeger``:イェーガー形式のトレースデータを受信する。"

#: ../../gdi/opentelemetry/data-processing.rst:55
msgid "``zipkin``: Receives spans from Zipkin (V1 and V2)."
msgstr "``zipkin``:ジプキン（V1とV2）からスパンを受け取る。"

#: ../../gdi/opentelemetry/data-processing.rst:57 ../../gdi/opentelemetry/data-processing.rst:60
msgid "Processor"
msgstr "プロセッサー"

#: ../../gdi/opentelemetry/data-processing.rst:58
msgid "``memory_limiter``: Prevents out of memory situations."
msgstr "``memory_limiter``:メモリ不足を防ぐ。"

#: ../../gdi/opentelemetry/data-processing.rst:59 ../../gdi/opentelemetry/data-processing.rst:62
msgid "Metrics, traces, logs"
msgstr "メトリクス、トレース、ログ"

#: ../../gdi/opentelemetry/data-processing.rst:61
msgid "``batch``: Accepts spans, metrics, or logs and places them into batches. Batching helps better compress the data and reduce the number of outgoing connections required to transmit the data."
msgstr "``batch``:スパン、メトリクス、またはログを受け入れ、それらをバッチに配置します。バッチ処理は、データを圧縮し、データ送信に必要な送信接続の数を減らすのに役立つ。"

#: ../../gdi/opentelemetry/data-processing.rst:63 ../../gdi/opentelemetry/data-processing.rst:66 ../../gdi/opentelemetry/data-processing.rst:69 ../../gdi/opentelemetry/data-processing.rst:72
msgid "Exporter"
msgstr "輸出業者"

#: ../../gdi/opentelemetry/data-processing.rst:64
msgid "``otlp``: Exports data through gRPC using OTLP format. By default, this exporter requires TLS and offers queued retry capabilities."
msgstr "``otlp``:OTLPフォーマットでgRPCを通してデータをエクスポートします。デフォルトでは、このエクスポータはTLSを必要とし、キュー再試行機能を提供する。"

#: ../../gdi/opentelemetry/data-processing.rst:65
msgid "Traces, metrics"
msgstr "トレース、メトリクス"

#: ../../gdi/opentelemetry/data-processing.rst:67
msgid "``HEC``: Sends data to Splunk HTTP Event Collector (HEC) endpoints."
msgstr "``HEC``:Splunk HTTP Event Collector (HEC) エンドポイントにデータを送信します。"

#: ../../gdi/opentelemetry/data-processing.rst:70
msgid "``jaeger``: Exports data through gRPC to Jaeger destinations. By default, this exporter requires TLS and offers queued retry capabilities."
msgstr "``jaeger``:gRPCを通してデータをJaeger宛にエクスポートします。デフォルトでは、このエクスポータはTLSを必要とし、キュー再試行機能を提供する。"

#: ../../gdi/opentelemetry/data-processing.rst:73
msgid "``zipkin``: Exports data to a Zipkin server. By default, this exporter requires TLS and offers queued retry capabilities."
msgstr "``zipkin``:Zipkinサーバーにデータをエクスポートします。デフォルトでは、このエクスポータはTLSを必要とし、キュー再試行機能を提供する。"

#: ../../gdi/opentelemetry/data-processing.rst:77
msgid "Metadata transformations"
msgstr "メタデータの変換"

#: ../../gdi/opentelemetry/data-processing.rst:79
msgid ""
"Metadata refers to the name/value pair added to telemetry data. OpenTelemetry calls this ``Attributes`` on ``Spans``, ``Labels`` on ``Metrics``, and ``Fields`` on ``Logs``. See :new-page:`Resource SDK <https://github.com/open-telemetry/opentelemetry-specification/blob/49c2f56f3c0468ceb2b69518bcadadd96e0a5a8b/specification/resource/sdk.md>`, :new-page:`Metrics API <https://github.com/open-telemetry/opentelemetry-specification/blob/49c2f56f3c0468ceb2b69518bcadadd96e0a5a8b/specification/metrics/api.md>`, and :new-page:`Trace Semantic Conventions <https://github.com/open-telemetry/opentelemetry-specification/blob/52cc12879e8c2d372c5200c00d4574fa73996369/specification/trace/"
"semantic_conventions/README.md>` in GitHub for additional details."
msgstr ""
"メタデータとは、遠隔測定データに付加される名前と値のペアを指す。OpenTelemetryでは、これを``Spans`` の``Attributes`` 、``Metrics`` の``Labels`` 、``Logs`` の``Fields`` と呼んでいる。詳細はGitHubの:new-page:`Resource SDK<https://github.com/open-telemetry/opentelemetry-specification/blob/49c2f56f3c0468ceb2b69518bcadadd96e0a5a8b/specification/resource/sdk.md>` 、:new-page:`Metrics API<https://github.com/open-telemetry/opentelemetry-specification/blob/49c2f56f3c0468ceb2b69518bcadadd96e0a5a8b/specification/metrics/api.md>` 、:new-page:`Trace Semantic Conventions<https://github.com/open-telemetry/opentelemetry-specification/blob/52cc12879e8c2d372c5200c00d4574fa73996369/"
"specification/trace/semantic_conventions/README.md>` を参照。"

#: ../../gdi/opentelemetry/data-processing.rst:84
msgid "Attributes are a list of zero or more key-value pairs. An attribute must have the following properties:"
msgstr "属性は、0個以上のキーと値のペアのリストです。属性は以下のプロパティを持たなければならない："

#: ../../gdi/opentelemetry/data-processing.rst:86
msgid "The attribute key, which must be a non-null and non-empty string."
msgstr "属性キーで、空文字列であってはならない。"

#: ../../gdi/opentelemetry/data-processing.rst:87
msgid "The attribute value, which is one of these types:"
msgstr "属性値で、これらの型のいずれかである："

#: ../../gdi/opentelemetry/data-processing.rst:89
msgid "A primitive type: string, boolean, double precision floating point (IEEE 754-1985) or signed 64-bit integer."
msgstr "プリミティブ型：文字列、ブーリアン、倍精度浮動小数点（IEEE 754-1985）、符号付き64ビット整数。"

#: ../../gdi/opentelemetry/data-processing.rst:90
msgid "An array of primitive type values. The array must be homogeneous. That is, it must not contain values of different types. For protocols that do not natively support array values, represent those values as JSON strings."
msgstr "プリミティブ型の値の配列。配列は均質でなければならない。つまり、異なる型の値を含んではならない。配列値をネイティブにサポートしていないプロトコルでは、それらの値をJSON文字列として表現する。"

#: ../../gdi/opentelemetry/data-processing.rst:92
msgid "Attribute values expressing a numerical value of zero, an empty string, or an empty array are considered meaningful and must be stored and passed on to processors or exporters."
msgstr "ゼロの数値、空の文字列、または空の配列を表現する属性値は、意味があるとみなされ、格納され、プロセッサまたはエクスポータに渡されなければならない。"

#: ../../gdi/opentelemetry/data-processing.rst:94
msgid "Attribute values of ``null`` are not valid and attempting to set a ``null`` value is undefined behavior."
msgstr "``null`` の属性値は無効であり、``null`` の値を設定しようとすると未定義の動作となる。"

#: ../../gdi/opentelemetry/data-processing.rst:96
msgid ""
"``null`` values are not allowed in arrays. However, if it is impossible to make sure that no ``null`` values are accepted (for example, in languages that do not have appropriate compile-time type checking), ``null`` values within arrays MUST be preserved as-is (that is, passed on to span processors/exporters as ``null``). If exporters do not support exporting ``null`` values, you can replace those values by 0, ``false``, or empty strings. Changing these values is required for map and dictionary structures represented as two arrays with indices that are kept in sync (for example, two attributes ``header_keys`` and ``header_values``, both containing an array of strings to "
"represent a mapping ``header_keys[i] -> header_values[i]``)."
msgstr ""
"``null`` の値は配列では使用できない。しかし、（適切なコンパイル時の型チェックを持たない言語などにおいて）``null`` の値を受け入れないようにすることが不可能な場合、配列内の``null`` の値はそのまま保存されなければならない（MUST）（つまり、``null`` としてスパンプロセッサー/エキスポーターに渡される）。エクスポータが``null`` 値のエクスポートをサポートしていない場合は、それらの値を 0、``false`` 、または空の文字列で置き換えることができます。これらの値を変更する必要があるのは、インデックスが同期された2つの配列として表されるマップと辞書構造です（例えば、``header_keys`` と``header_values`` という2つの属性があり、どちらもマッピングを表す文字列の配列を含んでいます``header_keys[i] -> "
"header_values[i]`` ）。"

#: ../../gdi/opentelemetry/data-processing.rst:99
msgid "Labels"
msgstr "ラベル"

#: ../../gdi/opentelemetry/data-processing.rst:101
msgid "Labels are name/value pairs added to metric data points. Labels are deprecated from the OpenTelemetry specification. Use attributes instead of labels."
msgstr "ラベルは、メトリックデータポイントに追加される名前と値のペアである。ラベルはOpenTelemetry仕様から非推奨。ラベルの代わりに属性を使用する。"

#: ../../gdi/opentelemetry/data-processing.rst:104
msgid "Fields"
msgstr "フィールド"

#: ../../gdi/opentelemetry/data-processing.rst:106
msgid "Fields are name/value pairs added to log records. Each record contains two kinds of fields:"
msgstr "フィールドは、ログレコードに追加される名前と値のペアである。各レコードには2種類のフィールドがある："

#: ../../gdi/opentelemetry/data-processing.rst:108
msgid "Named top-level fields of specific type and meaning."
msgstr "特定の型と意味を持つ名前付きトップレベルフィールド。"

#: ../../gdi/opentelemetry/data-processing.rst:109
msgid "Fields stored as ``map<string, any>``, which can contain arbitrary values of different types. The keys and values for well-known fields follow semantic conventions for key names and possible values that allow all parties that work with the field to have the same interpretation of the data."
msgstr "``map<string, any>`` として保存されるフィールド。異なる型の任意の値を含むことができる。よく知られたフィールドのキーと値は、キー名と取り得る値について、フィールドを扱うすべての関係者がデータを同じように解釈できるようにするためのセマンティックな規約に従っている。"

#: ../../gdi/opentelemetry/data-processing.rst:114
msgid "Next steps: See and manage the data you ingested"
msgstr "次のステップ取り込んだデータの確認と管理"

#: ../../gdi/opentelemetry/data-processing.rst:116
msgid "After you've ingested and processed your data using the Collector, you can see the final, exported version in Splunk Observability Cloud."
msgstr "Collector を使用してデータを取り込み、処理した後、Splunk Observability Cloud で最終的なエクスポートバージョンを確認できます。"

#: ../../gdi/opentelemetry/data-processing.rst:119
msgid "See and manage logs"
msgstr "ログの確認と管理"

#: ../../gdi/opentelemetry/data-processing.rst:121
msgid "To see and manage your logs, use :ref:`lo-connect-landing`."
msgstr "ログの確認と管理には、:ref:`lo-connect-landing` をご利用ください。"

#: ../../gdi/opentelemetry/data-processing.rst:123
msgid "Splunk Log Observer is no longer available for new users. You can continue to use Log Observer if you already have an entitlement. Learn more in :ref:`logs-logs`."
msgstr "Splunk Log Observer は新規ユーザー向けには提供されなくなりました。すでに権利を持っている場合は、ログ・オブザーバーを使い続けることができます。詳しくは:ref:`logs-logs` 。"

#: ../../gdi/opentelemetry/data-processing.rst:126
msgid "See and manage metrics"
msgstr "メトリクスの確認と管理"

#: ../../gdi/opentelemetry/data-processing.rst:128
msgid "Splunk Observability Cloud offers several tools to track and manage your metrics:"
msgstr "Splunk Observability Cloud には、メトリクスを追跡・管理するためのツールがいくつか用意されています："

#: ../../gdi/opentelemetry/data-processing.rst:130
msgid ":ref:`metrics-finder-and-metadata-catalog`."
msgstr ":ref:`metrics-finder-and-metadata-catalog`."

#: ../../gdi/opentelemetry/data-processing.rst:131
msgid "See :ref:`metrics-pipeline` to manage metrics."
msgstr "メトリクスを管理するには、:ref:`metrics-pipeline` を参照してください。"

#: ../../gdi/opentelemetry/data-processing.rst:132
msgid "See also :ref:`org-metrics` for metrics generated by Splunk Observability Cloud."
msgstr "Splunk Observability Cloud が生成するメトリクスについては、:ref:`org-metrics` も参照してください。"

#: ../../gdi/opentelemetry/data-processing.rst:135
msgid "See and manage spans, traces, and tags"
msgstr "スパン、トレース、タグの確認と管理"

#: ../../gdi/opentelemetry/data-processing.rst:137
msgid "See :ref:`apm-traces-spans` and :ref:`otel-tags`."
msgstr ":ref:`apm-traces-spans` および:ref:`otel-tags` を参照のこと。"

#: ../../gdi/opentelemetry/deployment-modes.rst:-1
msgid "The Splunk Distribution of OpenTelemetry Collector provides a single binary and two deployment methods. Both deployment methods can be configured using a default configuration."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションは、単一のバイナリと 2 つのデプロイ方法を提供します。どちらのデプロイ方法も、デフォルト設定を使用して設定できる。"

#: ../../gdi/opentelemetry/deployment-modes.rst:5
msgid "Collector deployment modes"
msgstr "コレクターの展開モード"

#: ../../gdi/opentelemetry/deployment-modes.rst:10
msgid "The Collector has two deployment modes: :ref:`host monitoring (agent) mode <collector-agent-mode>`, and :ref:`data forwarding (gateway) mode <collector-gateway-mode>`."
msgstr "コレクターには 2 つの展開モードがあります：:ref:`host monitoring (agent) mode <collector-agent-mode>`および:ref:`data forwarding (gateway) mode <collector-gateway-mode>` 。"

#: ../../gdi/opentelemetry/deployment-modes.rst:15 ../../gdi/opentelemetry/sizing.rst:28
msgid "Host monitoring (agent) mode"
msgstr "ホスト監視（エージェント）モード"

#: ../../gdi/opentelemetry/deployment-modes.rst:17
msgid "In host monitoring (agent) mode, the Collector runs with the application or on the same host as the application, and sends data directly to Splunk Observability Cloud."
msgstr "ホスト監視 (エージェント) モードでは、Collector はアプリケーションと共に、またはアプリケーションと同じホスト上で実行され、Splunk Observability Cloud に直接データを送信します。"

#: ../../gdi/opentelemetry/deployment-modes.rst:19
msgid "Use the host monitoring (agent) mode when you want to do these things:"
msgstr "これらのことを行いたい場合は、ホスト監視（エージェント）モードを使用する："

#: ../../gdi/opentelemetry/deployment-modes.rst:21
msgid "Configure instrumentation. Host monitoring (agent) mode offloads responsibilities from the application including batching, queuing, and retrying."
msgstr "計装を設定する。ホスト・モニタリング（エージェント）モードは、バッチ処理、キューイング、リトライなどの責任をアプリケーションからオフロードする。"

#: ../../gdi/opentelemetry/deployment-modes.rst:22
msgid "Collect host and application metrics, as well as host and application metadata enrichment for metrics, spans, and logs."
msgstr "ホストとアプリケーションのメトリクス、およびメトリクス、スパン、ログのホストとアプリケーションのメタデータ・エンリッチメントを収集します。"

#: ../../gdi/opentelemetry/deployment-modes.rst:25
msgid "Standalone host monitoring (agent) mode"
msgstr "スタンドアロンホスト監視（エージェント）モード"

#: ../../gdi/opentelemetry/deployment-modes.rst:27
msgid "If deployed as a standalone agent, the Splunk Distribution of OpenTelemetry Collector is the only component deployed and configured."
msgstr "スタンドアロンエージェントとしてデプロイされた場合、OpenTelemetry Collector の Splunk Distribution は、デプロイされ設定された唯一のコンポーネントとなります。"

#: ../../gdi/opentelemetry/deployment-modes.rst:29
msgid "The following image shows the architecture for the standalone mode:"
msgstr "次の図は、スタンドアロン・モードのアーキテクチャーを示している："

#: ../../gdi/opentelemetry/deployment-modes.rst:-1
msgid "This image shows the architecture for the standalone host monitoring (agent) mode."
msgstr "この図は、スタンドアロン・ホスト・モニタリング（エージェント）モードのアーキテクチャを示している。"

#: ../../gdi/opentelemetry/deployment-modes.rst:35
msgid "Host monitoring (agent) mode deployed with the installer script or Helm chart"
msgstr "インストーラスクリプトまたはHelmチャートで展開されるホスト監視（エージェント）モード"

#: ../../gdi/opentelemetry/deployment-modes.rst:37
msgid "The default configurations for the :ref:`Linux installer script <otel-install-linux>`, :ref:`Windows installer script <otel-install-windows>`, and for certain :ref:`Helm charts <otel-install-k8s>` deploy the Collector with Fluentd."
msgstr ":ref:`Linux installer script <otel-install-linux>`,:ref:`Windows installer script <otel-install-windows>`, および特定の:ref:`Helm charts <otel-install-k8s>` のデフォルトの設定は、Fluentd で Collector をデプロイします。"

#: ../../gdi/opentelemetry/deployment-modes.rst:39
msgid "The architecure looks as follows:"
msgstr "設計は次のようになっている："

#: ../../gdi/opentelemetry/deployment-modes.rst:-1
msgid "This image shows the architecture for Helm chart and installer script deployments."
msgstr "この図は、Helmチャートとインストーラースクリプトのデプロイのアーキテクチャを示しています。"

#: ../../gdi/opentelemetry/deployment-modes.rst:47 ../../gdi/opentelemetry/sizing.rst:36
msgid "Data forwarding (gateway) mode"
msgstr "データ転送（ゲートウェイ）モード"

#: ../../gdi/opentelemetry/deployment-modes.rst:49
msgid "Use this mode when one or more Collectors are running as a standalone service, for example in containers. Data forwarding (gateway) mode is typically deployed per cluster, data center, or region."
msgstr "このモードは、1つまたは複数のコレクターが、コンテナなどでスタンドアロンサービスとして実行されている場合に使用します。データ転送（ゲートウェイ）モードは通常、クラスタ、データセンター、リージョンごとに展開される。"

#: ../../gdi/opentelemetry/deployment-modes.rst:51
msgid "Use data forwarding (gateway) mode when you want to do one of the following:"
msgstr "データ転送（ゲートウェイ）モードは、以下のいずれかを行う場合に使用する："

#: ../../gdi/opentelemetry/deployment-modes.rst:53
msgid "Configure a larger buffer."
msgstr "より大きなバッファを設定する。"

#: ../../gdi/opentelemetry/deployment-modes.rst:54
msgid "Configure an increased wait interval for retry attempts."
msgstr "再試行の待機間隔を長く設定する。"

#: ../../gdi/opentelemetry/deployment-modes.rst:55
msgid "Limit the number of egress points required to send data."
msgstr "データ送信に必要なイグレスポイント数を制限する。"

#: ../../gdi/opentelemetry/deployment-modes.rst:56
msgid "Consolidate API token management."
msgstr "APIトークン管理を統合。"

#: ../../gdi/opentelemetry/deployment-modes.rst:58
msgid "See :new-page:`data forwarding (gateway) mode configuration <https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/gateway_config.yaml>` for the default configuration file."
msgstr "デフォルトの設定ファイルについては、:new-page:`データ転送（ゲートウェイ）モード設定<https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/gateway_config.yaml>` を参照のこと。"

#: ../../gdi/opentelemetry/deployment-modes.rst:60
msgid "To forward metrics and metadata in data forwarding (gateway) mode, see :ref:`collector-gateway-metrics-issue`."
msgstr "データ転送（ゲートウェイ）モードでメトリクスとメタデータを転送するには、:ref:`collector-gateway-metrics-issue` を参照してください。"

#: ../../gdi/opentelemetry/deployment-modes.rst:62
msgid "The following image shows the architecture for the data forwarding (gateway) mode:"
msgstr "次の図は、データ転送（ゲートウェイ）モードのアーキテクチャを示している："

#: ../../gdi/opentelemetry/deployment-modes.rst:-1
msgid "This image shows the architecture for the advanced mode."
msgstr "この画像は、アドバンス・モードのアーキテクチャを示している。"

#: ../../gdi/opentelemetry/deployment-modes.rst:70
msgid "What mode is my Collector deployed as? How can I change it?"
msgstr "コレクターはどのようなモードでデプロイされていますか？どうすれば変更できますか？"

#: ../../gdi/opentelemetry/deployment-modes.rst:72
msgid "If you install the Collector using the :ref:`provided scripts <otel-install-platform>`, the Collector is deployed in the mode specified in your configuration file."
msgstr ":ref:`provided scripts <otel-install-platform>` を使用して Collector をインストールする場合、Collector は構成ファイルで指定されたモードでデプロイされます。"

#: ../../gdi/opentelemetry/deployment-modes.rst:75
msgid "Linux and Windows"
msgstr "LinuxとWindows"

#: ../../gdi/opentelemetry/deployment-modes.rst:77
msgid "For Windows and Linux installers, the default configuration yaml sets the Collector as an agent."
msgstr "WindowsおよびLinuxインストーラの場合、デフォルトの構成yamlはCollectorをエージェントとして設定します。"

#: ../../gdi/opentelemetry/deployment-modes.rst:79
msgid "The path to the configuration yaml is set in the env variable ``SPLUNK_CONFIG`` and is, by default:"
msgstr "コンフィギュレーションyamlへのパスはenv変数``SPLUNK_CONFIG`` 、デフォルトで設定される："

#: ../../gdi/opentelemetry/deployment-modes.rst:81
msgid "Linux: ``/etc/otel/collector/<gateway or agent>_config.yaml``"
msgstr "Linux: ``/etc/otel/collector/<gateway or agent>_config.yaml``"

#: ../../gdi/opentelemetry/deployment-modes.rst:82
msgid "Windows: ``C:\\ProgramData\\Splunk\\OpenTelemetry Collector\\<gateway or agent>_config.yaml``"
msgstr "Windows: ``C:\\ProgramData\\Splunk\\OpenTelemetry Collector\\<gateway or agent>_config.yaml``"

#: ../../gdi/opentelemetry/deployment-modes.rst:84
msgid "To change the deployment mode, modify ``SPLUNK_CONFIG`` for the path to the gateway configuration yaml file instead. See :ref:`collector-gateway-mode` for details on the data forwarding (gateway) mode yaml."
msgstr "デプロイメント・モードを変更するには、代わりにゲートウェイ設定yamlファイルへのパスを``SPLUNK_CONFIG`` 。データ転送（ゲートウェイ）モードyamlの詳細については、:ref:`collector-gateway-mode` 。"

#: ../../gdi/opentelemetry/deployment-modes.rst:89
msgid "For Kubernetes, check the config mappings in your Helm chart. See :ref:`otel-kubernetes-config-advanced` for information on how to access your configuration yaml, and how to override it."
msgstr "Kubernetesの場合は、Helmチャートのコンフィグマッピングを確認してください。設定yamlにアクセスする方法と、それを上書きする方法については、:ref:`otel-kubernetes-config-advanced` を参照してください。"

#: ../../gdi/opentelemetry/deployment-modes.rst:94
msgid "Send data from an agent Collector to a gateway Collector"
msgstr "エージェントコレクタからゲートウェイコレクタへのデータ送信"

#: ../../gdi/opentelemetry/deployment-modes.rst:96
msgid "When running as an agent, you can also manually configure the Collector to send data to a Splunk Distribution of OpenTelemetry Collector gateway instance or cluster. This requires changing the :ref:`pipeline exporters <otel-data-processing>` in the agent to point to the gateway."
msgstr "エージェントとして実行する場合、Splunk Distribution of OpenTelemetry Collector のゲートウェイインスタンスまたはクラスタにデータを送信するように Collector を手動で設定することもできます。これには、ゲートウェイを指すようにエージェントの:ref:`pipeline exporters <otel-data-processing>` を変更する必要があります。"

#: ../../gdi/opentelemetry/deployment-modes.rst:98
msgid "To configure the Collector to send data to the another Collector in data forwarding (gateway) mode, see these configurations:"
msgstr "コレクタがデータ転送 ( ゲートウェイ ) モードで別のコレクタにデータを 送信するように設定するには、以下の設定を参照してください："

#: ../../gdi/opentelemetry/deployment-modes.rst:103
msgid "Change the following sections of the :new-page:`host monitoring (agent) mode configuration file <https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/agent_config.yaml>`:"
msgstr ":new-page:`ホスト監視（エージェント）モード設定ファイル<https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/agent_config.yaml>` の以下のセクションを変更する："

#: ../../gdi/opentelemetry/deployment-modes.rst:105
msgid "Update the ``SPLUNK_GATEWAY_URL`` environment variable to the URL of the gateway."
msgstr "環境変数``SPLUNK_GATEWAY_URL`` をゲートウェイのURLに更新する。"

#: ../../gdi/opentelemetry/deployment-modes.rst:106
msgid "Update the ``SPLUNK_API_URL`` environment variable to the URL of the gateway, specifying the ingress port, which is ``6060`` by default."
msgstr "環境変数``SPLUNK_API_URL`` をゲートウェイのURLに更新し、イングレス・ポート（デフォルトでは``6060`` ）を指定する。"

#: ../../gdi/opentelemetry/deployment-modes.rst:107
msgid "Update the ``SPLUNK_INGEST_URL`` environment variable to the URL of the gateway, specifying the ingress port, which is ``9943`` by default."
msgstr "環境変数``SPLUNK_INGEST_URL`` をゲートウェイのURLに更新し、イングレス・ポート（デフォルトでは``9943`` ）を指定する。"

#: ../../gdi/opentelemetry/deployment-modes.rst:108
msgid "Make sure that metrics, traces, and logs pipelines send data to the appropriate receivers on the gateway."
msgstr "メトリクス、トレース、ログのパイプラインが、ゲートウェイの適切なレシーバーにデータを送信することを確認する。"

#: ../../gdi/opentelemetry/deployment-modes.rst:110
msgid "To activate trace correlation, use the ``signalfx`` exporter in the traces pipeline. All other pipelines between the agent and the gateway can use the ``otlp`` exporter, which is more efficient."
msgstr "トレース相関を有効にするには、トレースパイプラインの``signalfx`` エクスポーターを使用します。エージェントとゲートウェイ間の他の全てのパイプラインは、より効率的な``otlp`` エクスポーターを使用することができる。"

#: ../../gdi/opentelemetry/deployment-modes.rst:112
msgid "If you are using the ``otlp`` exporter for metrics, the ``hostmetrics`` aggregation takes place in the gateway."
msgstr "メトリクスに``otlp`` エクスポーターを使用している場合、``hostmetrics`` 集計はゲートウェイで行われます。"

#: ../../gdi/opentelemetry/deployment-modes.rst:114
msgid "The following example shows how to configure the Collector in host monitoring (agent) mode when sending data to a gateway:"
msgstr "次の例は、ゲートウェイにデータを送信するときにコレクタをホストモニタ ( エージェント ) モードで構成する方法を示しています："

#: ../../gdi/opentelemetry/deployment-modes.rst:175
msgid "Change the following sections of the :new-page:`data forwarding (gateway) mode configuration file <https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/gateway_config.yaml>`:"
msgstr ":new-page:`データ転送（ゲートウェイ）モード設定ファイル<https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/gateway_config.yaml>` の以下のセクションを変更する："

#: ../../gdi/opentelemetry/deployment-modes.rst:177
msgid "Make sure that the receivers match the exporters in the agent configuration."
msgstr "レシーバーがエージェント設定のエクスポータと一致していることを確認する。"

#: ../../gdi/opentelemetry/deployment-modes.rst:178
msgid "Make sure that the Collector in data forwarding (gateway) mode can listen to requests on ports 6060 and 9943."
msgstr "データ転送 ( ゲートウェイ ) モードのコレクタが、ポート 6060 および 9943 の要求をリッスンできることを確認します。"

#: ../../gdi/opentelemetry/deployment-modes.rst:179
msgid "Update the ``SPLUNK_GATEWAY_URL`` environment variable to ``https://api.${SPLUNK_REALM}.signalfx.com``."
msgstr "環境変数``SPLUNK_GATEWAY_URL`` を``https://api.${SPLUNK_REALM}.signalfx.com`` に更新する。"

#: ../../gdi/opentelemetry/deployment-modes.rst:181
msgid "To set the Collector in data forwarding (gateway) mode to receiving data from an agent, use the following configuration:"
msgstr "コレクタをデータ転送 ( ゲートウェイ ) モードに設定してエージェントから データを受信するには、以下の設定を使用します："

#: ../../gdi/opentelemetry/deployment-modes.rst:235
msgid "Send metrics with the SignalFx exporter"
msgstr "SignalFxエクスポータでメトリクスを送信する"

#: ../../gdi/opentelemetry/deployment-modes.rst:237
msgid "If you want to use the :ref:`signalfx-exporter` for metrics on both agent and gateway, deactivate the aggregation at the Gateway. To do so, set the ``translation_rules`` and ``exclude_metrics`` to empty lists as in the following example."
msgstr "エージェントとゲートウェイの両方でメトリクスに:ref:`signalfx-exporter` を使用したい場合は、ゲートウェイで集約を非アクティブにします。そのためには、以下の例のように、``translation_rules`` と``exclude_metrics`` を空のリストに設定する。"

#: ../../gdi/opentelemetry/deployment-modes.rst:239
msgid "If you want to collect host metrics from the Gateway, use a different ``signalfx exporter`` with translation rules intact. For example, add the ``hostmetrics`` to the metrics/internal pipeline."
msgstr "ゲートウェイからホスト・メトリクスを収集する場合は、変換ルールをそのまま使用して別の``signalfx exporter`` 。例えば、``hostmetrics`` をメトリクス/内部パイプラインに追加する。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:-1
msgid "Use Chef to install and configure the OpenTelemetry Collector to collect metrics, traces, and logs from Linux and Windows machines and send data to Splunk Observability Cloud."
msgstr "Chef を使用して OpenTelemetry Collector をインストールおよび設定し、Linux および Windows マシンからメトリクス、トレース、ログを収集し、Splunk Observability Cloud にデータを送信します。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:10
msgid "Chef is a configuration management technology used to manage infrastructure on physical or virtual machines. Chef uses cookbooks to define a scenario."
msgstr "Chefは、物理マシンや仮想マシン上のインフラを管理するために使用される構成管理技術である。Chefはシナリオを定義するためにクックブックを使います。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:12
msgid "Cookbooks are fundamental working units of Chef, which consists of all the details related to working units, having the capability to modify configuration and the state of any system configured as a node on Chef infrastructure. Cookbooks can run multiple tasks."
msgstr "クックブックはChefの基本的な作業単位で、作業単位に関連するすべての詳細から構成され、Chefインフラストラクチャ上でノードとして構成されたシステムの設定や状態を変更する機能を持ちます。クックブックは複数のタスクを実行できる。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:17
msgid "You need the following resources to use Chef:"
msgstr "Chefを使うには以下のリソースが必要です："

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:19 ../../gdi/opentelemetry/deployments/deployments-salt.rst:19
msgid ":ref:`Splunk Access Token <admin-org-tokens>`"
msgstr ":ref:`Splunk Access Token <admin-org-tokens>`"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:20 ../../gdi/opentelemetry/deployments/deployments-salt.rst:20
msgid ":new-page:`Splunk Realm <https://dev.splunk.com/observability/docs/realms_in_endpoints/>`"
msgstr ":new-page:`Splunk レルム <https://dev.splunk.com/observability/docs/realms_in_endpoints/>`"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:21
msgid "Double-check exposed ports to make sure your environment doesn't have conflicts. You can change ports in the Collector configuration. See :ref:`otel-exposed-endpoints` for more information."
msgstr "公開されているポートをダブルチェックし、あなたの環境がコンフリクトしていないことを確認する。コレクタの設定でポートを変更できます。詳しくは:ref:`otel-exposed-endpoints` 。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:26
msgid "The following Linux distributions and versions:"
msgstr "以下のLinuxディストリビューションとバージョン："

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:29 ../../gdi/opentelemetry/deployments/deployments-salt.rst:28
msgid "CentOS, Red Hat, Oracle: 7, 8"
msgstr "CentOS、Red Hat、Oracle: 7、8"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:31 ../../gdi/opentelemetry/deployments/deployments-salt.rst:30
msgid "SUSE: 12, 15 (Note: Only for Collector versions 0.34.0 or higher. Log collection with Fluentd not currently supported.)"
msgstr "SUSE: 12, 15 (注意: Collectorバージョン0.34.0以上のみ。Fluentdによるログ収集は現在サポートされていません)。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:32 ../../gdi/opentelemetry/deployments/deployments-salt.rst:31
msgid "Ubuntu: 18.04, 20.04, 22.04"
msgstr "Ubuntu：18.04, 20.04, 22.04"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:37
msgid "The following Windows versions. All versions require using PowerShell 3.0 or newer."
msgstr "以下のWindowsバージョン。すべてのバージョンで、PowerShell 3.0以降を使用する必要があります。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:45
msgid "Download the Chef cookbook from the :new-page:`Chef Supermarket <https://supermarket.chef.io/cookbooks/splunk_otel_collector>`, which is the site for community cookbooks."
msgstr ":new-page:`Chef Supermarket<https://supermarket.chef.io/cookbooks/splunk_otel_collector>` からChefの料理本をダウンロードしてください。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:47
msgid "To install the Collector and Fluentd, include the ``splunk_otel_collector::default`` recipe in the ``run_list``, and set the attributes on the node's ``run_state``. The following is an example configuration that shows how to configure the required ``splunk_access_token`` attribute and some optional attributes:"
msgstr "CollectorとFluentdをインストールするには、``run_list`` に``splunk_otel_collector::default`` レシピをインクルードし、ノードの``run_state`` に属性を設定します。以下は、必須の``splunk_access_token`` 属性といくつかのオプション属性の設定方法を示す設定例である："

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:59 ../../gdi/opentelemetry/deployments/deployments-salt.rst:51
msgid "Attributes for Linux"
msgstr "Linux用属性"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:61
msgid "For Linux, the cookbook accepts the attributes described in the following table:"
msgstr "Linuxの場合、クックブックは以下の表に示す属性を受け入れます："

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:70 ../../gdi/opentelemetry/deployments/deployments-chef.rst:189 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:53 ../../gdi/opentelemetry/deployments/deployments-salt.rst:62 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:41
msgid "``collector_version``"
msgstr "``collector_version``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:71 ../../gdi/opentelemetry/deployments/deployments-chef.rst:190 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:54 ../../gdi/opentelemetry/deployments/deployments-salt.rst:63
msgid "Version of the Collector package to install, for example, ``0.25.0``. The version should correspond to :new-page:`Github Releases <https://github.com/signalfx/splunk-otel-collector/releases>` without the preceding ``v``. Note that on Linux, the latest Collector version is installed if this parameter is not specified."
msgstr "インストールする Collector パッケージのバージョン（例：``0.25.0``.バージョンは、:new-page:`Github Releases<https://github.com/signalfx/splunk-otel-collector/releases>` から``v`` を除いたものに対応する必要がある。Linuxでは、このパラメータが指定されていない場合、最新のCollectorバージョンがインストールされることに注意してください。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:73 ../../gdi/opentelemetry/deployments/deployments-chef.rst:192 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:59 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:56 ../../gdi/opentelemetry/deployments/deployments-salt.rst:65 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:51 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:44
msgid "``splunk_access_token``"
msgstr "``splunk_access_token``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:74 ../../gdi/opentelemetry/deployments/deployments-chef.rst:193 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:60 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:57 ../../gdi/opentelemetry/deployments/deployments-salt.rst:66 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:52 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:45
msgid "The Splunk access token to authenticate requests. This attribute is required."
msgstr "リクエストを認証するための Splunk アクセストークン。この属性は必須である。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:76 ../../gdi/opentelemetry/deployments/deployments-chef.rst:195 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:61 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:59 ../../gdi/opentelemetry/deployments/deployments-salt.rst:68 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:53 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:47
msgid "``splunk_realm``"
msgstr "``splunk_realm``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:77 ../../gdi/opentelemetry/deployments/deployments-chef.rst:196 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:60 ../../gdi/opentelemetry/deployments/deployments-salt.rst:69 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:48
msgid "Which realm to send the data to, for example, ``us0``. The Splunk ingest and API URLs are inferred by this value. The ``SPLUNK_REALM`` environment variable is set with this value for the collector service. This attribute is required."
msgstr "どのレルムにデータを送るか、例えば``us0`` 。Splunk のインジェスト URL と API URL は、この値によって推測される。``SPLUNK_REALM`` 環境変数には、コレクターサービスにこの値が設定される。この属性は必須である。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:79 ../../gdi/opentelemetry/deployments/deployments-chef.rst:198 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:63 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:62 ../../gdi/opentelemetry/deployments/deployments-salt.rst:71 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:55 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:50
msgid "``splunk_ingest_url``"
msgstr "``splunk_ingest_url``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:80 ../../gdi/opentelemetry/deployments/deployments-chef.rst:199 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:63 ../../gdi/opentelemetry/deployments/deployments-salt.rst:72 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:51
msgid "Sets the Splunk ingest URL explicitly instead of the URL inferred by the ``$splunk_realm`` parameter. The ``SPLUNK_INGEST_URL`` environment variable is set with this value for the Collector service."
msgstr "``$splunk_realm`` パラメータによって推測される URL ではなく、明示的に Splunk インジェストの URL を設定します。Collectorサービスでは、``SPLUNK_INGEST_URL`` 環境変数にこの値が設定されます。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:81 ../../gdi/opentelemetry/deployments/deployments-chef.rst:200 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:64 ../../gdi/opentelemetry/deployments/deployments-salt.rst:73 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:52
msgid "``https://ingest.${splunk_realm}.signalfx.com``"
msgstr "``https://ingest.${splunk_realm}.signalfx.com``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:82 ../../gdi/opentelemetry/deployments/deployments-chef.rst:201 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:65 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:65 ../../gdi/opentelemetry/deployments/deployments-salt.rst:74 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:57 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:53
msgid "``splunk_api_url``"
msgstr "``splunk_api_url``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:83 ../../gdi/opentelemetry/deployments/deployments-chef.rst:202 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:66 ../../gdi/opentelemetry/deployments/deployments-salt.rst:75 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:54
msgid "Sets the Splunk API URL explicitly instead of the URL inferred by the ``$splunk_realm`` parameter. The ``SPLUNK_API_URL`` environment variable is set with this value for the Collector service."
msgstr "``$splunk_realm`` パラメータで推測した URL ではなく、明示的に Splunk API の URL を設定します。Collectorサービスでは、``SPLUNK_API_URL`` 環境変数にこの値が設定されます。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:84 ../../gdi/opentelemetry/deployments/deployments-chef.rst:203 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:67 ../../gdi/opentelemetry/deployments/deployments-salt.rst:76 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:55
msgid "``https://api.${splunk_realm}.signalfx.com``"
msgstr "``https://api.${splunk_realm}.signalfx.com``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:85 ../../gdi/opentelemetry/deployments/deployments-chef.rst:204 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:67 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:68 ../../gdi/opentelemetry/deployments/deployments-salt.rst:77 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:59 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:56
msgid "``splunk_trace_url``"
msgstr "``splunk_trace_url``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:86 ../../gdi/opentelemetry/deployments/deployments-chef.rst:205 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:69 ../../gdi/opentelemetry/deployments/deployments-salt.rst:78 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:57
msgid "Sets the Splunk trace endpoint URL explicitly instead of the URL inferred by the ``$splunk_ingest_url`` parameter. The ``SPLUNK_TRACE_URL`` environment variable is set with this value for the Collector service."
msgstr "``$splunk_ingest_url`` パラメータによって推測される URL ではなく、明示的に Splunk トレースエンドポイント URL を設定します。Collectorサービスでは、``SPLUNK_TRACE_URL`` 環境変数にこの値が設定されます。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:87 ../../gdi/opentelemetry/deployments/deployments-chef.rst:206 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:70 ../../gdi/opentelemetry/deployments/deployments-salt.rst:79 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:58
msgid "``${splunk_ingest_url}/v2/trace``"
msgstr "``${splunk_ingest_url}/v2/trace``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:88 ../../gdi/opentelemetry/deployments/deployments-chef.rst:213 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:81 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:77 ../../gdi/opentelemetry/deployments/deployments-salt.rst:86 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:73 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:65
msgid "``splunk_bundle_dir``"
msgstr "``splunk_bundle_dir``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:89 ../../gdi/opentelemetry/deployments/deployments-chef.rst:214 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:78 ../../gdi/opentelemetry/deployments/deployments-salt.rst:87 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:66
msgid "The path to the Smart Agent bundle directory. The default path is provided by the Collector package. If the specified path is changed from the default value, the path should be an existing directory on the node. The ``SPLUNK_BUNDLE_DIR`` environment variable is set to this value for the Collector service."
msgstr "スマートエージェントのバンドルディレクトリへのパス。デフォルトのパスは Collector パッケージによって提供される。指定されたパスがデフォルト値から変更された場合、パスはノード上の既存のディレクトリでなければなりません。Collectorサービスでは、``SPLUNK_BUNDLE_DIR`` 環境変数にこの値が設定されます。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:90 ../../gdi/opentelemetry/deployments/deployments-chef.rst:215 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:79 ../../gdi/opentelemetry/deployments/deployments-salt.rst:88
msgid "``/usr/lib/splunk-otel-collector/agent-bundle``"
msgstr "``/usr/lib/splunk-otel-collector/agent-bundle``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:91 ../../gdi/opentelemetry/deployments/deployments-chef.rst:216 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:83 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:80 ../../gdi/opentelemetry/deployments/deployments-salt.rst:89 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:75 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:68
msgid "``splunk_collectd_dir``"
msgstr "``splunk_collectd_dir``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:92 ../../gdi/opentelemetry/deployments/deployments-chef.rst:217 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:81 ../../gdi/opentelemetry/deployments/deployments-salt.rst:90 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:69
msgid "The path to the collectd configuration directory for the Smart Agent bundle. The default path is provided by the Collector package. If the specified path is changed from the default value, the path should be an existing directory on the node. The ``SPLUNK_COLLECTD_DIR`` environment variable is set to this value for the Collector service."
msgstr "スマートエージェントバンドルのcollectd設定ディレクトリへのパス。デフォルトのパスは Collector パッケージによって提供される。指定されたパスがデフォルト値から変更された場合、パスはノード上の既存のディレクトリでなければなりません。Collectorサービスでは、``SPLUNK_COLLECTD_DIR`` 環境変数にこの値が設定されます。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:93 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:82 ../../gdi/opentelemetry/deployments/deployments-salt.rst:91
msgid "``${splunk_bundle_dir}/run/collectd``"
msgstr "``${splunk_bundle_dir}/run/collectd``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:94 ../../gdi/opentelemetry/deployments/deployments-chef.rst:219 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:89 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:83 ../../gdi/opentelemetry/deployments/deployments-salt.rst:92 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:77 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:71
msgid "``splunk_memory_total_mib``"
msgstr "``splunk_memory_total_mib``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:95 ../../gdi/opentelemetry/deployments/deployments-chef.rst:220 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:84 ../../gdi/opentelemetry/deployments/deployments-salt.rst:93 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:72
msgid "Total memory in MIB to allocate to the Collector; automatically calculates the ballast size. The ``SPLUNK_MEMORY_TOTAL_MIB`` environment variable is set to this value for the Collector service."
msgstr "コレクタに割り当てる MIB の合計メモリ。Collectorサービスでは、``SPLUNK_MEMORY_TOTAL_MIB`` 環境変数にこの値が設定されます。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:96 ../../gdi/opentelemetry/deployments/deployments-chef.rst:221 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:85 ../../gdi/opentelemetry/deployments/deployments-salt.rst:94 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:73
msgid "``512``"
msgstr "``512``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:97 ../../gdi/opentelemetry/deployments/deployments-chef.rst:222 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:91 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:86 ../../gdi/opentelemetry/deployments/deployments-salt.rst:95 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:79 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:74
msgid "``splunk_ballast_size_mib``"
msgstr "``splunk_ballast_size_mib``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:98 ../../gdi/opentelemetry/deployments/deployments-chef.rst:223 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:87 ../../gdi/opentelemetry/deployments/deployments-salt.rst:96
msgid "Sets the ballast size for the Collector explicitly instead of the value calculated from the ``$splunk_memory_total_mib`` parameter. This should be set to 1/3 to 1/2 of configured memory. The ``SPLUNK_BALLAST_SIZE_MIB`` environment variable is set to this value for the Collector service."
msgstr "コレクタのバラストサイズを、``$splunk_memory_total_mib`` パラメータから計算された値ではなく、明示的に設定します。設定メモリの1/3から1/2に設定する。Collectorサービスでは、``SPLUNK_BALLAST_SIZE_MIB`` 環境変数にこの値が設定されます。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:99 ../../gdi/opentelemetry/deployments/deployments-chef.rst:224
msgid "``\"``"
msgstr "``\"``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:100 ../../gdi/opentelemetry/deployments/deployments-chef.rst:225 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:89 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:77
msgid "``collector_config_source``"
msgstr "``collector_config_source``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:101 ../../gdi/opentelemetry/deployments/deployments-chef.rst:226 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:90 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:78
msgid "The source path to the Collector configuration YAML file. This file is copied to the ``$collector_config_dest`` path on the node. See the :new-page:`source attribute <https://puppet.com/docs/puppet/latest/types/file.html#file-attribute-source>` of the file resource for the supported value types. The default source file is provided by the Collector package."
msgstr "Collector設定YAMLファイルのソースパス。このファイルはノードの``$collector_config_dest`` パスにコピーされる。対応する値の型については、ファイル・リソースの:new-page:`ソース属性<https://puppet.com/docs/puppet/latest/types/file.html#file-attribute-source>` を参照してください。デフォルトのソースファイルは Collector パッケージから提供される。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:102 ../../gdi/opentelemetry/deployments/deployments-chef.rst:105 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:91 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:94 ../../gdi/opentelemetry/uninstall-the-collector.rst:53 ../../gdi/opentelemetry/uninstall-the-collector.rst:79
msgid "``/etc/otel/collector/agent_config.yaml``"
msgstr "``/etc/otel/collector/agent_config.yaml``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:103 ../../gdi/opentelemetry/deployments/deployments-chef.rst:228 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:92 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:80
msgid "``collector_config_dest``"
msgstr "``collector_config_dest``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:104 ../../gdi/opentelemetry/deployments/deployments-chef.rst:229 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:93 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:81
msgid "Destination path of the Collector configuration file on the node. The ``SPLUNK_CONFIG`` environment variable is set with this value for the Collector service."
msgstr "ノード上のCollector構成ファイルの宛先パス。Collectorサービスでは、``SPLUNK_CONFIG`` 環境変数にこの値が設定されます。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:106 ../../gdi/opentelemetry/deployments/deployments-chef.rst:231
msgid "``node['splunk_otel_collector']['collector_config']``"
msgstr "``node['splunk_otel_collector']['collector_config']``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:107 ../../gdi/opentelemetry/deployments/deployments-chef.rst:232
msgid "The Collector configuration object. Everything underneath this object gets directly converted to YAML and becomes the Collector configuration file. Using this option preempts ``collector_config_source`` functionality."
msgstr "Collector 構成オブジェクト。このオブジェクトの下にあるものはすべて直接 YAML に変換され、Collector 設定ファイルになります。このオプションを使うと、``collector_config_source`` の機能が優先される。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:108 ../../gdi/opentelemetry/deployments/deployments-chef.rst:233
msgid "``{}``"
msgstr "``{}``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:109 ../../gdi/opentelemetry/deployments/deployments-chef.rst:234 ../../gdi/opentelemetry/deployments/deployments-salt.rst:101
msgid "``service_user`` and ``$service_group``"
msgstr "``service_user`` そして ``$service_group``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:110 ../../gdi/opentelemetry/deployments/deployments-chef.rst:235 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:96 ../../gdi/opentelemetry/deployments/deployments-salt.rst:102
msgid "Sets the user or group ownership for the Collector service. The user or group is created if they do not exist."
msgstr "Collector サービスのユーザまたはグループの所有権を設定します。ユーザーまたはグループが存在しない場合は作成される。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:111 ../../gdi/opentelemetry/deployments/deployments-chef.rst:236 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:97 ../../gdi/opentelemetry/deployments/deployments-salt.rst:103
msgid "``splunk-otel-collector``"
msgstr "``splunk-otel-collector``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:112 ../../gdi/opentelemetry/deployments/deployments-chef.rst:237
msgid "``package_stage``"
msgstr "``package_stage``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:113 ../../gdi/opentelemetry/deployments/deployments-chef.rst:238
msgid "The Collector package repository stage to use. Can be ``release``, ``beta``, or ``test``."
msgstr "使用する Collector パッケージリポジトリステージ。``release`` 、``beta`` 、``test`` のいずれか。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:114 ../../gdi/opentelemetry/deployments/deployments-chef.rst:239
msgid "``release``"
msgstr "``release``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:115 ../../gdi/opentelemetry/deployments/deployments-chef.rst:240 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:98 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:83
msgid "``with_fluentd``"
msgstr "``with_fluentd``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:116 ../../gdi/opentelemetry/deployments/deployments-chef.rst:241 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:99 ../../gdi/opentelemetry/deployments/deployments-salt.rst:105
msgid "Whether to install or manage Fluentd and dependencies for log collection. On Linux, the dependencies include ``capng_c`` for activating Linux capabilities, ``fluent-plugin-systemd`` for systemd journal log collection, and the required libraries and development tools."
msgstr "ログ収集のためにFluentdと依存関係をインストールまたは管理するかどうか。Linuxでは、Linuxの機能を有効にするための``capng_c`` 、systemdジャーナルログ収集のための``fluent-plugin-systemd`` 、必要なライブラリと開発ツールが依存関係にある。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:118 ../../gdi/opentelemetry/deployments/deployments-chef.rst:243
msgid "``fluentd_version``"
msgstr "``fluentd_version``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:119 ../../gdi/opentelemetry/deployments/deployments-chef.rst:244 ../../gdi/opentelemetry/deployments/deployments-salt.rst:108
msgid "Version of the td-agent (Fluentd) package to install"
msgstr "インストールする td-agent (Fluentd) パッケージのバージョン"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:120
msgid "``3.7.1`` for Debian stretch and ``4.3.1`` for all other Linux distros"
msgstr "``3.7.1`` Debian stretch および``4.3.1`` その他のすべての Linux ディストロ用"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:121 ../../gdi/opentelemetry/deployments/deployments-chef.rst:246 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:101 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:86
msgid "``fluentd_config_source``"
msgstr "``fluentd_config_source``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:122 ../../gdi/opentelemetry/deployments/deployments-chef.rst:247 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:102 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:87
msgid "Source path to the Fluentd configuration file. This file is copied to the ``$fluentd_config_dest`` path on the node. See the :new-page:`source attribute <https://puppet.com/docs/puppet/latest/types/file.html#file-attribute-source>` of the file resource for the supported value types. The default source file is provided by the Collector package. Only applicable if ``$with_fluentd`` is set to ``true``."
msgstr "Fluentd 設定ファイルのソースパス。このファイルはノードの``$fluentd_config_dest`` パスにコピーされる。対応する値の型については、ファイル・リソースの:new-page:`ソース属性<https://puppet.com/docs/puppet/latest/types/file.html#file-attribute-source>` を参照してください。デフォルトのソースファイルは Collector パッケージから提供される。``$with_fluentd`` が``true`` に設定されている場合のみ適用される。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:123 ../../gdi/opentelemetry/deployments/deployments-chef.rst:126 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:103 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:106 ../../gdi/opentelemetry/deployments/deployments-salt.rst:112 ../../gdi/opentelemetry/deployments/deployments-salt.rst:118 ../../gdi/opentelemetry/uninstall-the-collector.rst:71 ../../gdi/opentelemetry/uninstall-the-collector.rst:97
msgid "``/etc/otel/collector/fluentd/fluent.conf``"
msgstr "``/etc/otel/collector/fluentd/fluent.conf``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:124 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:104 ../../gdi/opentelemetry/deployments/deployments-salt.rst:116
msgid "``fluentd_config_dest``"
msgstr "``fluentd_config_dest``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:125 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:105 ../../gdi/opentelemetry/deployments/deployments-salt.rst:117
msgid "Destination path to the Fluentd configuration file on the node. Only applicable if ``$with_fluentd`` is set to ``true``."
msgstr "ノード上のFluentd設定ファイルへのデスティネーションパス。``$with_fluentd`` が``true`` に設定されている場合のみ適用される。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:131 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:105 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:114 ../../gdi/opentelemetry/deployments/deployments-salt.rst:123
msgid "Configure auto instrumentation for Java (Linux only)"
msgstr "Javaの自動インスツルメンテーションを設定する（Linuxのみ）"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:133 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:107 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:116 ../../gdi/opentelemetry/deployments/deployments-salt.rst:125
msgid "You can automatically instrument your Java applications along with the Collector installation. Auto instrumentation removes the need to install and configure the Java agent separately. See :ref:`configure-auto-instrumentation` for more information."
msgstr "Collectorのインストールと同時に、Javaアプリケーションを自動的にインスツルメンテーションできます。自動インストルメンテーションにより、Javaエージェントを個別にインストールして構成する必要がなくなる。詳しくは:ref:`configure-auto-instrumentation` 。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:135
msgid "The following table shows the variables that can be configured for this Chef cookbook:"
msgstr "次の表はこの Chef cookbook で設定できる変数を示しています："

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:144 ../../gdi/opentelemetry/deployments/deployments-chef.rst:249 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:127
msgid "``with_auto_instrumentation``"
msgstr "``with_auto_instrumentation``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:145 ../../gdi/opentelemetry/deployments/deployments-chef.rst:250 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:128 ../../gdi/opentelemetry/deployments/deployments-salt.rst:137
msgid "Whether to install or manage :ref:`auto-instrumentation-java`. When set to ``true``, the ``splunk-otel-auto-instrumentation`` deb/rpm package is downloaded and installed from the Collector repository. The Java application on the node needs to be started or restarted separately after installation for auto instrumentation to take effect."
msgstr ":ref:`auto-instrumentation-java` をインストールするか管理するか。``true`` に設定すると、``splunk-otel-auto-instrumentation`` deb/rpm パッケージが Collector リポジトリからダウンロードされ、インストールされます。自動計測を有効にするには、インストール後、ノード上のJavaアプリケーションを個別に起動または再起動する必要がある。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:147 ../../gdi/opentelemetry/deployments/deployments-chef.rst:252 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:130 ../../gdi/opentelemetry/deployments/deployments-salt.rst:139
msgid "``auto_instrumentation_version``"
msgstr "``auto_instrumentation_version``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:148 ../../gdi/opentelemetry/deployments/deployments-chef.rst:253 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:131 ../../gdi/opentelemetry/deployments/deployments-salt.rst:140
msgid "Version of the ``splunk-otel-auto-instrumentation`` package to install, for example, ``0.50.0``. The minimum supported version is ``0.48.0``. The Java application on the node needs to be started or restarted separately after installation for auto instrumentation to take effect."
msgstr "インストールする``splunk-otel-auto-instrumentation`` パッケージのバージョン、例えば``0.50.0`` 。最小対応バージョンは``0.48.0`` 。自動計測を有効にするには、インストール後、ノード上のJavaアプリケーションを個別に起動または再起動する必要がある。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:149 ../../gdi/opentelemetry/deployments/deployments-chef.rst:254 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:132 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:62 ../../gdi/opentelemetry/deployments/deployments-salt.rst:141
msgid "``latest``"
msgstr "``latest``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:150 ../../gdi/opentelemetry/deployments/deployments-chef.rst:255 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:133 ../../gdi/opentelemetry/deployments/deployments-salt.rst:142
msgid "``auto_instrumentation_ld_so_preload``"
msgstr "``auto_instrumentation_ld_so_preload``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:151 ../../gdi/opentelemetry/deployments/deployments-chef.rst:256 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:134 ../../gdi/opentelemetry/deployments/deployments-salt.rst:143
msgid "By default, the ``/etc/ld.so.preload`` file on the node is configured for the ``/usr/lib/splunk-instrumentation/libsplunk.so`` shared object library provided by the ``splunk-otel-auto-instrumentation`` package and is required for auto instrumentation. Configure this variable to include additional library paths, for example, ``/path/to/my.library.so``. The Java application on the node needs to be started or restarted separately after installation for auto instrumentation to take effect."
msgstr "デフォルトでは、ノード上の``/etc/ld.so.preload`` ファイルは、``splunk-otel-auto-instrumentation`` パッケージが提供する``/usr/lib/splunk-instrumentation/libsplunk.so`` 共有オブジェクト・ライブラリ用に設定されており、自動計測に必要です。この変数を設定して、例えば``/path/to/my.library.so`` のような追加のライブラリパスを含める。自動計測を有効にするには、インストール後、ノード上のJavaアプリケーションを個別に起動または再起動する必要がある。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:152 ../../gdi/opentelemetry/deployments/deployments-chef.rst:158 ../../gdi/opentelemetry/deployments/deployments-chef.rst:161 ../../gdi/opentelemetry/deployments/deployments-chef.rst:257 ../../gdi/opentelemetry/deployments/deployments-chef.rst:263 ../../gdi/opentelemetry/deployments/deployments-chef.rst:266 ../../gdi/opentelemetry/deployments/deployments-salt.rst:144 ../../gdi/opentelemetry/deployments/deployments-salt.rst:150 ../../gdi/opentelemetry/deployments/deployments-salt.rst:153
msgid "``''``"
msgstr "``''``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:153 ../../gdi/opentelemetry/deployments/deployments-chef.rst:258 ../../gdi/opentelemetry/deployments/deployments-salt.rst:145
msgid "``auto_instrumentation_java_agent_path``"
msgstr "``auto_instrumentation_java_agent_path``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:154 ../../gdi/opentelemetry/deployments/deployments-chef.rst:259 ../../gdi/opentelemetry/deployments/deployments-salt.rst:146
msgid "Path to the Splunk OpenTelemetry Java agent. The default path is provided by the ``splunk-otel-auto-instrumentation`` package. If the path is changed from the default value, the path should be an existing file on the node. The specified path is added to the ``/usr/lib/splunk-instrumentation/instrumentation.conf`` configuration file on the node. The Java application on the node needs to be started or restarted separately after installation for auto instrumentation to take effect."
msgstr "Splunk OpenTelemetry Java エージェントへのパス。デフォルトのパスは``splunk-otel-auto-instrumentation`` パッケージによって提供される。パスがデフォルト値から変更された場合、パスはノード上の既存のファイルでなければなりません。指定されたパスは、ノードの``/usr/lib/splunk-instrumentation/instrumentation.conf`` 構成ファイルに追加されます。自動計測を有効にするには、インストール後、ノード上のJavaアプリケーションを個別に起動または再起動する必要がある。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:155 ../../gdi/opentelemetry/deployments/deployments-chef.rst:260 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:138 ../../gdi/opentelemetry/deployments/deployments-salt.rst:147
msgid "``/usr/lib/splunk-instrumentation/splunk-otel-javaagent.jar``"
msgstr "``/usr/lib/splunk-instrumentation/splunk-otel-javaagent.jar``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:156 ../../gdi/opentelemetry/deployments/deployments-chef.rst:261 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:139 ../../gdi/opentelemetry/deployments/deployments-salt.rst:148
msgid "``auto_instrumentation_resource_attributes``"
msgstr "``auto_instrumentation_resource_attributes``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:157 ../../gdi/opentelemetry/deployments/deployments-chef.rst:262 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:140 ../../gdi/opentelemetry/deployments/deployments-salt.rst:149
msgid "Configure the OpenTelemetry instrumentation resource attributes, for example, ``deployment.environment=prod``. The specified resource attributes are added to the ``/usr/lib/splunk-instrumentation/instrumentation.conf`` configuration file on the node. The Java application on the node needs to be started or restarted separately after installation for auto instrumentation to take effect."
msgstr "OpenTelemetry計測リソースの属性を設定します。例えば、``deployment.environment=prod`` 。指定されたリソース属性は、ノードの``/usr/lib/splunk-instrumentation/instrumentation.conf`` 構成ファイルに追加されます。自動計測を有効にするには、インストール後、ノード上のJavaアプリケーションを個別に起動または再起動する必要がある。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:159 ../../gdi/opentelemetry/deployments/deployments-chef.rst:264 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:142 ../../gdi/opentelemetry/deployments/deployments-salt.rst:151
msgid "``auto_instrumentation_service_name``"
msgstr "``auto_instrumentation_service_name``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:160 ../../gdi/opentelemetry/deployments/deployments-chef.rst:265 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:143 ../../gdi/opentelemetry/deployments/deployments-salt.rst:152
msgid "Explicitly sets the service name for the instrumented Java application, for example, ``my.service``. By default, the service name is automatically derived from the arguments of the Java executable on the node. However, if this variable is set to a non-empty value, the value overrides the derived service name and is added to the ``/usr/lib/splunk-instrumentation/instrumentation.conf`` configuration file on the node. The Java application on the node needs to be started or restarted separately after installation for auto instrumentation to take effect."
msgstr "インスツルメンテーションされたJavaアプリケーションのサービス名を明示的に設定します（例：``my.service`` ）。デフォルトでは、サービス名はノード上のJava実行ファイルの引数から自動的に生成されます。ただし、この変数に空でない値が設定されている場合、その値は派生サービス名よりも優先され、ノード上の``/usr/lib/splunk-instrumentation/instrumentation.conf`` 構成ファイルに追加される。自動計測を有効にするには、インストール後、ノード上のJavaアプリケーションを個別に起動または再起動する必要がある。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:162 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:145 ../../gdi/opentelemetry/deployments/deployments-salt.rst:154
msgid "``auto_instrumentation_generate_service_name``"
msgstr "``auto_instrumentation_generate_service_name``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:163 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:130 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:146 ../../gdi/opentelemetry/deployments/deployments-salt.rst:155
msgid "Set to ``false`` to prevent the preloader from setting the ``OTEL_SERVICE_NAME`` environment variable."
msgstr "プリローダーが環境変数``OTEL_SERVICE_NAME`` を設定しないようにするには、``false`` に設定する。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:165 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:148 ../../gdi/opentelemetry/deployments/deployments-salt.rst:157
msgid "``auto_instrumentation_disable_telemetry``"
msgstr "``auto_instrumentation_disable_telemetry``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:166 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:132 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:149 ../../gdi/opentelemetry/deployments/deployments-salt.rst:158
msgid "Prevents the preloader from sending the ``splunk.linux-autoinstr.executions`` metric to the Collector."
msgstr "プリローダが``splunk.linux-autoinstr.executions`` メトリックをコレクタに送信しないようにします。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:168 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:151 ../../gdi/opentelemetry/deployments/deployments-salt.rst:160
msgid "``auto_instrumentation_enable_profiler``"
msgstr "``auto_instrumentation_enable_profiler``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:169
msgid "Activates or deactibvates AlwaysOn CPU Profiling."
msgstr "AlwaysOn CPU プロファイリングを有効または無効にします。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:171 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:154 ../../gdi/opentelemetry/deployments/deployments-salt.rst:163
msgid "``auto_instrumentation_enable_profiler_memory``"
msgstr "``auto_instrumentation_enable_profiler_memory``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:172 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:136 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:155 ../../gdi/opentelemetry/deployments/deployments-salt.rst:164
msgid "Activates or deactivates AlwaysOn Memory Profiling."
msgstr "AlwaysOn Memory Profiling を有効または無効にします。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:174 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:157 ../../gdi/opentelemetry/deployments/deployments-salt.rst:166
msgid "``auto_instrumentation_enable_metrics``"
msgstr "``auto_instrumentation_enable_metrics``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:175 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:138 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:158 ../../gdi/opentelemetry/deployments/deployments-salt.rst:167
msgid "Activates or deactivates JVM metrics."
msgstr "JVM メトリクスをアクティブまたは非アクティブにします。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:179
msgid "Attributes for Windows"
msgstr "Windows用属性"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:180
msgid "For Windows, the cookbook accepts the attributes described in the following table:"
msgstr "Windowsの場合、クックブックは以下の表に示す属性を受け入れます："

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:207 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:69 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:71 ../../gdi/opentelemetry/deployments/deployments-salt.rst:80 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:61 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:59
msgid "``splunk_hec_url``"
msgstr "``splunk_hec_url``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:208 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:72 ../../gdi/opentelemetry/deployments/deployments-salt.rst:81 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:60
msgid "Sets the Splunk HEC endpoint URL explicitly instead of the URL inferred by the ``$splunk_ingest_url`` parameter. The ``SPLUNK_HEC_URL`` environment variable is set with this value for the Collector service."
msgstr "``$splunk_ingest_url`` パラメータによって推測される URL ではなく、明示的に Splunk HEC エンドポイントの URL を設定します。Collectorサービスでは、``SPLUNK_HEC_URL`` 環境変数にこの値が設定されます。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:209 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:73 ../../gdi/opentelemetry/deployments/deployments-salt.rst:82 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:61
msgid "``${splunk_ingest_url}/v1/log``"
msgstr "``${splunk_ingest_url}/v1/log``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:210 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:74 ../../gdi/opentelemetry/deployments/deployments-salt.rst:83 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:62
msgid "``splunk_hec_token``"
msgstr "``splunk_hec_token``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:211 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:75 ../../gdi/opentelemetry/deployments/deployments-salt.rst:84 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:63
msgid "Sets the Splunk HEC authentication token if different than ``$splunk_access_token``. The ``SPLUNK_HEC_TOKEN`` environment variable is set with this value for the Collector service."
msgstr "Splunk HEC 認証トークンを設定します (``$splunk_access_token`` と異なる場合)。Collectorサービスでは、``SPLUNK_HEC_TOKEN`` 環境変数にこの値が設定されます。"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:212 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:76 ../../gdi/opentelemetry/deployments/deployments-salt.rst:85 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:64
msgid "``$splunk_access_token``"
msgstr "``$splunk_access_token``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:218
msgid "``%ProgramFiles%\\Splunk\\OpenTelemetry Collector\\agent-bundle\\run\\collectd``"
msgstr "``%ProgramFiles%\\Splunk\\OpenTelemetry Collector\\agent-bundle\\run\\collectd``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:227
msgid "``%ProgramFiles%\\Splunk\\OpenTelemetry Collector\\agent_config.yaml``"
msgstr "``%ProgramFiles%\\Splunk\\OpenTelemetry Collector\\agent_config.yaml``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:230 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:82
msgid "``%PROGRAMDATA%\\Splunk\\OpenTelemetry Collector\\agent_config.yaml``"
msgstr "``%PROGRAMDATA%\\Splunk\\OpenTelemetry Collector\\agent_config.yaml``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:245
msgid "``4.3.1``"
msgstr "``4.3.1``"

#: ../../gdi/opentelemetry/deployments/deployments-chef.rst:248
msgid "``%SYSTEMDRIVE%\\opt\\td-agent\\etc\\td-agent\\td-agent.conf``"
msgstr "``%SYSTEMDRIVE%\\opt\\td-agent\\etc\\td-agent\\td-agent.conf``"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:-1 ../../gdi/opentelemetry/deployments/deployments-fargate.rst:-1
msgid "Deploy the Splunk Observability Cloud OpenTelemetry Collector as a Daemon service in an Amazon ECS EC2 cluster."
msgstr "Amazon ECS EC2 クラスターにデーモンサービスとして Splunk Observability Cloud OpenTelemetry Collector をデプロイします。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:5 ../../gdi/opentelemetry/install-linux.rst:181
msgid "Amazon ECS EC2"
msgstr "Amazon ECS EC2"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:10
msgid "Use the guided setup to deploy the Collector as a Daemon service in an Amazon ECS EC2 cluster. The guided setup provides a JSON task definition for the Collector."
msgstr "ガイドされたセットアップを使用して、Amazon ECS EC2クラスタにデーモンサービスとしてCollectorをデプロイします。ガイド付きセットアップでは、Collector の JSON タスク定義を提供します。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:12
msgid "Choose one of the following Collector configuration options:"
msgstr "以下のコレクタ構成オプションのいずれかを選択します："

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:14
msgid "**Default:** The file /etc/otel/collector/ecs_ec2_config.yaml in the Collector image is used for the Collector configuration."
msgstr "**Collectorイメージの/etc/otel/collector/ecs_ec2_config.yamlファイルがCollector設定に使用されます。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:15
msgid "**File:** Specify the file to use for the Collector configuration. See :ref:`ecs-ec2-custom-config`."
msgstr "**File:**コレクターの設定に使用するファイルを指定します。:ref:`ecs-ec2-custom-config` を参照。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:16
msgid "**AWS Parameter Store:** Specify the AWS Parameter Store key or ARN to use for the Collector configuration. See :ref:`ecs-ec2-custom-config`."
msgstr "**AWSパラメータストア:** Collectorの設定に使用するAWSパラメータストアのキーまたはARNを指定します。:ref:`ecs-ec2-custom-config` を参照。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:21 ../../gdi/opentelemetry/deployments/deployments-fargate.rst:29
msgid "On the navigation menu, select :guilabel:`Data Management`."
msgstr "ナビゲーション・メニューで、:guilabel:`Data Management` を選択する。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:22
msgid "On the Integrate Your Data page, select the tile for :guilabel:`Amazon ECS EC2`."
msgstr "Integrate Your Dataページで、:guilabel:`Amazon ECS EC2` のタイルを選択します。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:23 ../../gdi/opentelemetry/deployments/deployments-fargate.rst:32
msgid "Follow the steps provided in the guided setup."
msgstr "セットアップガイドの手順に従ってください。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:28
msgid "The following sections describe how to create a task definition and launch the Collector. A task definition is required to run Docker containers in Amazon ECS. After creating the task definition, you need to launch the Collector."
msgstr "以下のセクションでは、タスク定義を作成して Collector を起動する方法について説明します。Amazon ECSでDockerコンテナを実行するには、タスク定義が必要です。タスク定義を作成したら、Collector を起動する必要があります。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:31
msgid "Create a task definition"
msgstr "タスク定義の作成"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:34
msgid "Knowledge of Amazon ECS using launch type EC2 is assumed. See :new-page:`Getting started with the classic console using Amazon EC2 <https://docs.aws.amazon.com/AmazonECS/latest/developerguide/getting-started-ecs-ec2.html>` for further reading."
msgstr "ローンチタイプのEC2を使用するAmazon ECSの知識があることを前提とする。:new-page:`Getting started with classic console using Amazon EC2<https://docs.aws.amazon.com/AmazonECS/latest/developerguide/getting-started-ecs-ec2.html>` を参照のこと。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:36
msgid "Creating the task definition requires using release v0.34.1 or newer (which corresponds to image tag 0.34.1 and newer) of the Collector. See the :new-page:`image repository <https://quay.io/repository/signalfx/splunk-otel-collector?tab=tags>` to download the latest image."
msgstr "タスク定義を作成するには、Collector のリリース v0.34.1 以降（イメージタグ 0.34.1 以降に対応）を使用する必要があります。最新のイメージをダウンロードするには、:new-page:`イメージリポジトリ<https://quay.io/repository/signalfx/splunk-otel-collector?tab=tags>` を参照してください。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:38
msgid "To create the task definition:"
msgstr "タスク定義を作成する："

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:40
msgid "Locate the task definition for the Collector from the :new-page:`repository <https://github.com/signalfx/splunk-otel-collector/blob/main/deployments/ecs/ec2/splunk-otel-collector.json>`."
msgstr ":new-page:`リポジトリ<https://github.com/signalfx/splunk-otel-collector/blob/main/deployments/ecs/ec2/splunk-otel-collector.json>` からコレクターのタスク定義を探します。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:41
msgid "Replace ``MY_SPLUNK_ACCESS_TOKEN`` and ``MY_SPLUNK_REALM`` with valid values. You should pin the image version to a specific version instead of ``latest`` to avoid upgrade issues."
msgstr "``MY_SPLUNK_ACCESS_TOKEN`` と``MY_SPLUNK_REALM`` を有効な値に置き換える。アップグレードの問題を避けるため、``latest`` の代わりに、イメージのバージョンを特定のバージョンに固定する必要があります。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:42
msgid "Create a task definition of EC2 launch type. See :new-page:`Creating a task definition using the new console <https://docs.aws.amazon.com/AmazonECS/latest/developerguide/create-task-definition.html>` for the instructions. The supplied task definition is a minimal definition. See :new-page:`Task definition parameters <https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html>` for additional configuration options."
msgstr "EC2起動タイプのタスク定義を作成する。:new-page:`新しいコンソールを使ったタスク定義の作成<https://docs.aws.amazon.com/AmazonECS/latest/developerguide/create-task-definition.html>` を参照のこと。提供されたタスク定義は最小限の定義である。その他の設定オプションについては、:new-page:`タスク定義パラメーター<https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html>` を参照のこと。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:44
msgid "The Collector is configured to use the default configuration file ``/etc/otel/collector/ecs_ec2_config.yaml``. The Collector image Dockerfile is available at :new-page:`Dockerfile <https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/Dockerfile>` and the contents of the default configuration file can be seen at :new-page:`ECS EC2 configuration <https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/ecs_ec2_config.yaml>`."
msgstr "コレクタは、デフォルトの構成ファイル``/etc/otel/collector/ecs_ec2_config.yaml`` を使用するように構成されています。CollectorイメージのDockerfileは:new-page:`Dockerfile<https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/Dockerfile>` で、デフォルトの設定ファイルの内容は:new-page:`ECS EC2の設定<https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/ecs_ec2_config.yaml>` で見ることができる。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:48
msgid "You do not need the ``smartagent/ecs-metadata`` metrics receiver in the default configuration file if all you want is tracing. You can take the default configuration, remove the receiver, then use the configuration in a custom configuration following the directions in :ref:`ecs-ec2-custom-config`."
msgstr "トレースするだけなら、デフォルトのコンフィギュレーション・ファイルの``smartagent/ecs-metadata`` メトリクス・レシーバーは必要ない。デフォルトのコンフィギュレーションを使用し、レシーバーを取り外し、:ref:`ecs-ec2-custom-config` の指示に従ってカスタムコンフィギュレーションでコンフィギュレーションを使用することができます。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:50
msgid "The configured network mode for the task is ``host``. This means that task metadata endpoint version 2 used by the ``smartagent/ecs-metadata`` receiver is not activated by default. See :new-page:`task metadata endpoint <https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-metadata-endpoint.html>` to determine if task metadata endpoint version 3 is activated by default for your task. If this version is activated, then add the following to the environment list in the task definition:"
msgstr "タスクに設定されたネットワークモードは``host`` である。これは、``smartagent/ecs-metadata`` レシーバーによって使用されるタスク・メタデータ・エンドポイント・バージョン2が、デフォルトでは有効化されていないことを意味する。タスク・メタデータ・エンドポイント・バージョン3がタスクに対してデフォルトで有効になっているかどうかは、:new-page:`タスク・メタデータ・エンドポイント<https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-metadata-endpoint.html>` を参照のこと。このバージョンが有効になっている場合、タスク定義の環境リストに以下を追加する："

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:63 ../../gdi/opentelemetry/deployments/deployments-fargate.rst:74
msgid "Assign a stringified array of metrics you want excluded to environment variable ``METRICS_TO_EXCLUDE``. You can set the memory limit for the ``memory_limiter`` processor using environment variable ``SPLUNK_MEMORY_LIMIT_MIB``. The default memory limit is 512 MiB."
msgstr "除外したいメ ト リ ッ ク の文字列化 さ れた配列を環境変数``METRICS_TO_EXCLUDE`` に代入 し ます。環境変数``SPLUNK_MEMORY_LIMIT_MIB`` を使用して、``memory_limiter`` プロセッサのメモリ制限を設定できます。デフォルトのメモリ制限は512MiB。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:66
msgid "Launch the Collector"
msgstr "コレクターの起動"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:67
msgid "The Collector is designed to be run as a Daemon service in an EC2 ECS cluster. To create a Collector service from the Amazon ECS console:"
msgstr "Collectorは、EC2 ECSクラスタのDaemonサービスとして実行するように設計されています。Amazon ECSコンソールからCollectorサービスを作成します："

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:69
msgid "Go to your cluster in the console."
msgstr "コンソールでクラスターに移動する。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:70
msgid "Select :guilabel:`Services`."
msgstr ":guilabel:`Services` を選択する。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:72
msgid "Select the following options: #. Launch Type: EC2 #. Task Definition (Family): splunk-otel-collector #. Task Definition (Revision): 1 (or whatever the latest is in your case) #. Service Name: splunk-otel-collector #. Service type: DAEMON #. Leave everything else at default."
msgstr "以下のオプションを選択してください：#.起動タイプEC2 #.タスク定義 (ファミリー): splunk-otel-collector #.タスクの定義（リビジョン）：1(または最新) #.サービス名: splunk-otel-collector #.サービスタイプDAEMON #.他はデフォルトのままにしておく。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:79
msgid "Select :guilabel:`Next step`."
msgstr "選択:guilabel:`次のステップ`."

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:80 ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:81
msgid "Leave everything on this next page at their defaults and select :guilabel:`Next step`."
msgstr "この次のページではすべてデフォルトのままにしておき、:guilabel:`次のステップ` を選択する。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:82
msgid "Select :guilabel:`Create Service` to deploy the Collector onto each node in the ECS cluster. You should see infrastructure and docker metrics flowing soon."
msgstr ":guilabel:`Create Service` を選択して、ECSクラスタの各ノードにCollectorをデプロイします。インフラとドッカーのメトリクスがすぐに流れるはずだ。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:87 ../../gdi/opentelemetry/deployments/deployments-fargate.rst:79
msgid "Use a custom configuration"
msgstr "カスタム設定を使用する"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:88
msgid "To use a custom configuration file, replace the value of the ``SPLUNK_CONFIG`` environment variable  with the file path of the custom configuration file in the Collector task definition."
msgstr "カスタム構成ファイルを使用するには、Collectorタスク定義で``SPLUNK_CONFIG`` 環境変数の値をカスタム構成ファイルのファイルパスに置き換えます。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:90 ../../gdi/opentelemetry/deployments/deployments-fargate.rst:103
msgid "Alternatively, you can specify the custom configuration YAML directly using the ``SPLUNK_CONFIG_YAML`` environment variable, as described in :ref:`ecs-observer-config`."
msgstr "あるいは、:ref:`ecs-observer-config` で説明されているように、``SPLUNK_CONFIG_YAML`` 環境変数を使用してカスタムコンフィギュレーション YAML を直接指定することもできます。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:95 ../../gdi/opentelemetry/deployments/deployments-fargate.rst:108
msgid "``ecs_observer`` configuration"
msgstr "``ecs_observer`` 構成"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:96
msgid "Use extension Amazon Elastic Container Service Observer (``ecs_observer``) in your custom configuration to discover metrics targets in running tasks, filtered by service names, task definitions, and container labels. ``ecs_observer`` is currently limited to Prometheus targets and requires the read-only permissions below. You can add the permissions to the task role by adding them to a customer-managed policy that is attached to the task role."
msgstr "カスタム構成で拡張 Amazon Elastic Container Service Observer (``ecs_observer``) を使用して、サービス名、タスク定義、コンテナ・ラベルでフィルタリングして、実行中のタスクのメトリクス・ターゲットを検出します。``ecs_observer`` は現在 Prometheus ターゲットに限定されており、以下の読み取り専用パーミッションが必要です。タスクロールにアタッチされた顧客管理ポリシーに追加することで、タスクロールに権限を追加できます。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:103
msgid "The following custom configuration examples show the ``ecs_observer`` configured to find Prometheus targets in the ``lorem-ipsum-cluster`` cluster and ``us-west-2`` region, where the task ARN pattern is ``^arn:aws:ecs:us-west-2:906383545488:task-definition/lorem-ipsum-task:[0-9]+$``."
msgstr "以下のカスタム設定例では、``lorem-ipsum-cluster`` クラスタと``us-west-2`` 地域で Prometheus ターゲットを検索するように設定された``ecs_observer`` を示しており、タスク ARN パターンは``^arn:aws:ecs:us-west-2:906383545488:task-definition/lorem-ipsum-task:[0-9]+$`` です。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:105
msgid "The results are written to ``/etc/ecs_sd_targets.yaml``. The ``prometheus`` receiver is configured to read targets from the results file. The values for ``access_token`` and ``realm`` are read from the ``SPLUNK_ACCESS_TOKEN`` and ``SPLUNK_REALM`` environment variables , which must be specified in your container definition."
msgstr "結果は``/etc/ecs_sd_targets.yaml`` に書き込まれる。``prometheus`` 受信機は、結果ファイルからターゲットを読み込むように設定されている。``access_token`` 、``realm`` の値は、``SPLUNK_ACCESS_TOKEN`` 、``SPLUNK_REALM`` 環境変数から読み込まれる。これは、コンテナ定義で指定する必要がある。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:148
msgid "Use the AWS Parameter Store"
msgstr "AWSパラメータストアの使用"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:150
msgid "Use the ``SPLUNK_CONFIG_YAML`` environment variable to specify the configuration YAML directly. Use ``SPLUNK_CONFIG_YAML`` in place of ``SPLUNK_CONFIG``."
msgstr "コンフィギュレーションYAMLを直接指定するには、環境変数``SPLUNK_CONFIG_YAML`` 。``SPLUNK_CONFIG`` の代わりに``SPLUNK_CONFIG_YAML`` を使用する。"

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:152
msgid "For example, first, store the custom configuration for the :ref:`ecs-observer-config` in a parameter called ``splunk-otel-collector-config`` in the AWS Systems Manager Parameter Store.Next, assign the parameter to ``SPLUNK_CONFIG_YAML`` using the ``valueFrom`` option, as shown in the following example:"
msgstr "例えば、まず、:ref:`ecs-observer-config` のカスタム設定を AWS Systems Manager Parameter Store の``splunk-otel-collector-config`` というパラメータに格納します。次に、次の例に示すように、``valueFrom`` オプションを使用して、``SPLUNK_CONFIG_YAML`` にパラメータを割り当てます："

#: ../../gdi/opentelemetry/deployments/deployments-ecs-ec2.rst:163
msgid "You should add policy ``AmazonSSMReadOnlyAccess`` to the task role for the task to have read access to the Parameter Store. See :new-page:`Systems manager parameter store <https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html>` for more information."
msgstr "タスクがパラメータストアに読み取りアクセスできるように、タスクロールにポリシー``AmazonSSMReadOnlyAccess`` を追加する必要があります。詳しくは、:new-page:`システム・マネージャー・パラメータ・ストア<https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html>` を参照のこと。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:5 ../../gdi/opentelemetry/install-linux.rst:192
msgid "Amazon Fargate"
msgstr "アマゾン・ファーゲート"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:10
msgid "Knowledge of AWS Fargate (Fargate) is assumed. See the :new-page:`user guide <https://docs.aws.amazon.com/AmazonECS/latest/userguide/what-is-fargate.html>` for more information."
msgstr "AWS Fargate（ファーゲート）の知識があることを前提とする。詳しくは:new-page:`ユーザーガイド<https://docs.aws.amazon.com/AmazonECS/latest/userguide/what-is-fargate.html>` をご覧ください。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:12
msgid "Unless stated otherwise, the Collector is deployed as a sidecar (additional container) to ECS tasks."
msgstr "特に断りのない限り、CollectorはECSタスクのサイドカー（追加コンテナ）としてデプロイされます。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:14
msgid "This deployment requires Collector release v0.33.0 or newer, which corresponds to image tag ``0.33.0`` and newer. See the :new-page:`image repository <https://quay.io/repository/signalfx/splunk-otel-collector?tab=tags>` to download the latest image."
msgstr "このデプロイには、Collectorリリースv0.33.0以降（イメージタグ``0.33.0`` 以降に対応）が必要です。最新のイメージをダウンロードするには、:new-page:`イメージリポジトリ<https://quay.io/repository/signalfx/splunk-otel-collector?tab=tags>` を参照してください。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:18
msgid "Use the guided setup"
msgstr "ガイド付きセットアップを使用する"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:20
msgid "Use the guided setup to deploy the Collector as a sidecar to ECS tasks.  Choose one of the following Collector configuration options:"
msgstr "ガイド付きセットアップを使用して、ECSタスクのサイドカーとしてCollectorをデプロイします。 以下のコレクタ構成オプションのいずれかを選択します："

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:22
msgid "**Default:** The ``/etc/otel/collector/ecs_ec2_config.yaml`` file in the Collector image is used for the Collector configuration."
msgstr "**デフォルト:** Collector イメージの``/etc/otel/collector/ecs_ec2_config.yaml`` ファイルが Collector 構成に使用されます。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:23
msgid "**File:** Specify the file to use for the Collector configuration. See :ref:`ecs-observer-config-fargate`."
msgstr "**File:**コレクターの設定に使用するファイルを指定します。:ref:`ecs-observer-config-fargate` を参照。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:24
msgid "**AWS Parameter Store:** Specify the AWS Parameter Store key or ARN to use for the Collector configuration. See :ref:`ecs-observer-config-fargate`."
msgstr "**AWSパラメータストア:** Collectorの設定に使用するAWSパラメータストアのキーまたはARNを指定します。:ref:`ecs-observer-config-fargate` を参照。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:26
#, python-format
msgid "Open the :new-page:`Amazon Fargate guided setup <https://login.signalfx.com/#/gdi/scripted/fargate/step-1?category=all&gdiState=%7B%22integrationId%22:%22fargate%22%7D>`. Optionally, you can navigate to the guided setup on your own:"
msgstr ":new-page:`Amazon Fargate guided setup<https://login.signalfx.com/#/gdi/scripted/fargate/step-1?category=all&gdiState=%7B%22integrationId%22:%22fargate%22%7D>` を開く。オプションで、ガイド付きセットアップに自分で移動することもできる："

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:30
msgid "Select :guilabel:`Add Integration`."
msgstr ":guilabel:`Add Integration` を選択する。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:31
msgid "On the Integrate Your Data page, select the tile for :guilabel:`Amazon Fargate`."
msgstr "Integrate Your Data ページで、:guilabel:`Amazon Fargate` のタイルを選択します。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:36
msgid "Copy the default Collector container definition shown in the example.Replace ``MY_SPLUNK_ACCESS_TOKEN`` and ``MY_SPLUNK_REALM`` with valid values. Update the image tag to the newest version, and then add the configuration to the ``containerDefinitions`` section of your task definition."
msgstr "``MY_SPLUNK_ACCESS_TOKEN`` と``MY_SPLUNK_REALM`` を有効な値に置き換える。画像タグを最新バージョンに更新し、タスク定義の``containerDefinitions`` セクションに設定を追加します。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:64
msgid "In this example container definition, the Collector is configured to use the default configuration file ``/etc/otel/collector/fargate_config.yaml``. The Collector image Dockerfile is available at :new-page:`Dockerfile <https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/Dockerfile>` and the contents of the default configuration file can be seen at :new-page:`Fargate configuration <https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/fargate_config.yaml>`. Note that the ``smartagent/ecs-metadata`` receiver is activated by default."
msgstr "このコンテナ定義の例では、Collector はデフォルトの構成ファイル``/etc/otel/collector/fargate_config.yaml`` を使用するように構成されています。CollectorイメージのDockerfileは:new-page:`Dockerfile<https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/Dockerfile>` で、デフォルトの設定ファイルの内容は:new-page:`Fargate configuration<https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/fargate_config.yaml>` で見ることができる。なお、``smartagent/ecs-metadata`` 受信機はデフォルトで有効になっている。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:66
msgid "In summary, the default Collector container definition does the following:"
msgstr "要約すると、デフォルトのCollectorコンテナ定義では以下のことが行われます："

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:68 ../../gdi/opentelemetry/deployments/deployments-fargate.rst:100
msgid "Specifies the Collector image."
msgstr "コレクタイメージを指定する。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:69
msgid "Sets the access token using environment variable ``SPLUNK_ACCESS_TOKEN``."
msgstr "環境変数``SPLUNK_ACCESS_TOKEN`` を使ってアクセストークンを設定する。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:70
msgid "Sets the realm using environment variable ``SPLUNK_REALM``."
msgstr "環境変数``SPLUNK_REALM`` を使ってレルムを設定する。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:71
msgid "Sets the default configuration file path using environment variable ``SPLUNK_CONFIG``."
msgstr "環境変数``SPLUNK_CONFIG`` を使って、デフォルトの設定ファイルパスを設定する。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:72
msgid "Excludes ``ecs-metadata`` metrics from the Collector image using environment variable ``ECS_METADATA_EXCLUDED_IMAGES``."
msgstr "環境変数``ECS_METADATA_EXCLUDED_IMAGES`` を使用して、Collector イメージから``ecs-metadata`` メトリクスを除外する。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:80
msgid "The following example shows an excerpt of the container definition for the Collector configured to use custom configuration file ``/path/to/custom/config/file``."
msgstr "次の例は、カスタム構成ファイル``/path/to/custom/config/file`` を使用するように構成された Collector のコンテナ定義の抜粋です。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:82
msgid "``/path/to/custom/config/file`` is a placeholder value for the actual custom configuration file path and ``0.33.0`` is the latest image tag at present. The custom configuration file should be present in a volume attached to the task."
msgstr "``/path/to/custom/config/file`` は実際のカスタム設定ファイルのパスを表すプレースホルダ値で、``0.33.0`` は現在最新の画像タグです。カスタム設定ファイルは、タスクにアタッチされたボリュームに存在しなければならない。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:98
msgid "The custom Collector container definition essentially:"
msgstr "カスタムCollectorコンテナの定義"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:101
msgid "Sets environment variable ``SPLUNK_CONFIG`` with the custom configuration file path."
msgstr "環境変数``SPLUNK_CONFIG`` にカスタム設定ファイルのパスを設定する。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:109
msgid "Use extension Amazon Elastic Container Service Observer (ecs_observer) in your custom configuration to discover metrics targets in running tasks, filtered by service names, task definitions and container labels. ecs_observer is currently limited to Prometheus targets and requires the read-only permissions below. You can add the permissions to the task role by adding them to a customer-managed policy that is attached to the task role."
msgstr "カスタム構成で拡張機能Amazon Elastic Container Service Observer (ecs_observer)を使用すると、サービス名、タスク定義、コンテナ・ラベルでフィルタリングして、実行中のタスクのメトリクス・ターゲットを検出できます。ecs_observerは現在Prometheusターゲットに限定されており、以下の読み取り専用パーミッションが必要です。タスクロールにアタッチされた顧客管理ポリシーに追加することで、タスクロールに権限を追加できます。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:116
msgid "The following custom configuration examples shows the ``ecs_observer`` configured to find Prometheus targets in the ``lorem-ipsum-cluster`` cluster and ``us-west-2`` region, where the task ARN pattern is ``^arn:aws:ecs:us-west-2:906383545488:task-definition/lorem-ipsum-task:[0-9]+$``."
msgstr "以下のカスタム設定例では、``lorem-ipsum-cluster`` クラスタと``us-west-2`` 地域で Prometheus ターゲットを検索するように設定された``ecs_observer`` を示しており、タスク ARN パターンは``^arn:aws:ecs:us-west-2:906383545488:task-definition/lorem-ipsum-task:[0-9]+$`` です。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:118
msgid "The results are written to /etc/ecs_sd_targets.yaml. The ``prometheus`` receiver is configured to read targets from the results file. The values for ``access_token`` and ``realm`` are read from the ``SPLUNK_ACCESS_TOKEN`` and ``SPLUNK_REALM`` environment variables , which must be specified in your container definition."
msgstr "結果は/etc/ecs_sd_targets.yamlに書き込まれる。``prometheus`` 受信機は、結果ファイルからターゲットを読み込むように設定されている。``access_token`` 、``realm`` の値は、``SPLUNK_ACCESS_TOKEN`` 、``SPLUNK_REALM`` 環境変数から読み込まれる。これは、コンテナ定義で指定する必要がある。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:160
msgid "Using this task ARN pattern causes the ``ecs_observer`` to discover targets in running revisions of task ``lorem-ipsum-task``. This means that when multiple revisions of task ``lorem-ipsum-task`` are running, the ``ecs_observer`` discovers targets outside the task in which the Collector sidecar container is running. In a sidecar deployment, the Collector and the monitored containers are in the same task, so metric targets must be within the task. This problem can be solved by using the complete task ARN as shown below. But, now the task ARN pattern must be updated to keep pace with task revisions."
msgstr "このタスクARNパターンを使用すると、``ecs_observer`` 、タスク``lorem-ipsum-task`` の実行中のリビジョンでターゲットを発見するようになる。これは、タスク``lorem-ipsum-task`` の複数のリビジョンが実行されている場合、``ecs_observer`` 、Collector サイドカーコンテナが実行されているタスクの外にあるターゲットを検出することを意味する。サイドカーデプロイメントでは、Collectorと監視対象のコンテナは同じタスク内にあるため、メトリックターゲットはタスク内にある必要があります。この問題は、以下のように完全なタスクARNを使用することで解決できる。しかし、タスクのARNパターンは、タスクの改訂に合わせて更新されなければならなくなった。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:171
msgid "Use a direct configuration"
msgstr "直接コンフィギュレーションを使用する"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:173
msgid "The file system is not readily available in Fargate, which means that you should specify the configuration YAML directly using the ``SPLUNK_CONFIG_YAML`` environment variable."
msgstr "ファイルシステムはFargateではすぐに利用できないので、``SPLUNK_CONFIG_YAML`` 環境変数を使ってコンフィギュレーションYAMLを直接指定する必要があります。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:175
msgid "For example, you can store the custom configuration YAML in a parameter called ``splunk-otel-collector-config`` in AWS Systems Manager Parameter Store. In your Collector container definition, assign the parameter to the ``SPLUNK_CONFIG_YAML`` environment variable  using ``valueFrom``. In the following example, ``MY_SPLUNK_ACCESS_TOKEN`` and ``MY_SPLUNK_REALM`` are placeholder values and ``0.33.0`` is the image tag."
msgstr "例えば、AWS Systems Manager Parameter Store の``splunk-otel-collector-config`` というパラメータにカスタム設定の YAML を格納することができる。Collector コンテナの定義で、``valueFrom`` を使用してパラメータを``SPLUNK_CONFIG_YAML`` 環境変数に割り当てます。以下の例では、``MY_SPLUNK_ACCESS_TOKEN`` と``MY_SPLUNK_REALM`` がプレースホルダーの値で、``0.33.0`` が画像タグです。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:203
msgid "You should add ``AmazonSSMReadOnlyAccess`` policy to the task role for the task to have read access to the Parameter Store."
msgstr "タスクがパラメータストアに読み取りアクセスできるように、``AmazonSSMReadOnlyAccess`` ポリシーをタスクロールに追加する必要があります。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:206
msgid "Standalone task"
msgstr "スタンドアロン・タスク"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:207
msgid "The ``ecs_observer`` extension is capable of scanning for targets in the entire cluster. Scanning lets you collect telemetry data by deploying the Collector in a task that is separate from tasks containing monitored applications. This is in contrast to the sidecar deployment where the Collector container, and the monitored application containers are in the same task."
msgstr "``ecs_observer`` 、クラスター全体のターゲットをスキャンすることができる。スキャンでは、監視対象のアプリケーションを含むタスクとは別のタスクにコレクターをデプロイすることで、遠隔測定データを収集できます。これは、Collectorコンテナと監視アプリケーションコンテナが同じタスクにあるサイドカーデプロイメントとは対照的である。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:209
msgid "Do not configure the ECS ``resourcedetection`` processor for the standalone task, as it would detect resources in the standalone Collector task itself as opposed to resources in the tasks containing the monitored applications."
msgstr "スタンドアロンタスク用にECS``resourcedetection`` プロセッサを構成しないでください。スタンドアロンCollectorタスク自体のリソースが検出され、監視対象のアプリケーションを含むタスクのリソースが検出されなくなるためです。"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:212
msgid "AWS Graviton2"
msgstr "AWS Graviton2"

#: ../../gdi/opentelemetry/deployments/deployments-fargate.rst:213
msgid "AWS Graviton2 is supported with the default Fargate configuration. The Collector Docker image can run on both AMD64 and ARM64 architectures."
msgstr "AWS Graviton2はデフォルトのFargateコンフィギュレーションでサポートされている。CollectorのDockerイメージは、AMD64とARM64の両方のアーキテクチャで実行できます。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:-1
msgid "Describes how to install the Splunk Observability Cloud OpenTelemetry Collector Ansible role on Linux."
msgstr "Linux に Splunk Observability Cloud OpenTelemetry Collector Ansible ロールをインストールする方法を説明します。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:5
msgid "Ansible for Linux"
msgstr "Linux用Ansible"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:11
msgid "Install the Ansible collection"
msgstr "Ansibleコレクションをインストールする"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:13 ../../gdi/opentelemetry/install-linux.rst:23
msgid "The following Linux distributions and versions are supported:"
msgstr "以下のLinuxディストリビューションとバージョンがサポートされている："

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:15
msgid "Amazon Linux: 2, 2023. Log collection with Fluentd isn't supported for Amazon Linux 2023."
msgstr "Amazon Linux: 2, 2023.Fluentdによるログ収集はAmazon Linux 2023ではサポートされていない。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:16 ../../gdi/opentelemetry/install-linux.rst:26
msgid "CentOS, Red Hat, or Oracle: 7, 8, 9"
msgstr "CentOS、Red Hat、またはOracle: 7、8、9"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:18
msgid "SUSE: 12, 15 for Collector version 0.34.0 or higher. Log collection with Fluentd isn't supported."
msgstr "SUSE: 12, 15 コレクターバージョン 0.34.0 以上。Fluentdによるログ収集はサポートされていません。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:19 ../../gdi/opentelemetry/install-linux.rst:29
msgid "Ubuntu: 16.04, 18.04, 20.04, and 22.04"
msgstr "Ubuntu：16.04、18.04、20.04、22.04"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:21 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:10
msgid "Before installing the Ansible collection, do the following:"
msgstr "Ansibleコレクションをインストールする前に、以下を実行する："

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:23 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:12
msgid "Find your :ref:`Splunk access token <otel-using>`"
msgstr "あなたの :ref:`Splunk access token <otel-using>`"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:24 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:13
msgid "Find your :ref:`Splunk realm <otel-using>`"
msgstr "あなたの :ref:`Splunk realm <otel-using>`"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:25 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:14
msgid "Check :ref:`exposed ports <otel-using>` to make sure your environment doesn't have conflicts. Ports can be changed in the package's configuration."
msgstr ":ref:`exposed ports <otel-using>` をチェックして、あなたの環境にコンフリクトがないことを確認してください。ポートはパッケージの設定で変更できる。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:27
msgid "Ansible Galaxy is the Ansible official hub for sharing Ansible content. See :new-page:`Ansible Collection for the Splunk Distribution of OpenTelemetry Collector <https://galaxy.ansible.com/signalfx/splunk_otel_collector>` for more information about the playbook."
msgstr "Ansible Galaxyは、Ansibleのコンテンツを共有するためのAnsible公式ハブです。プレイブックの詳細については、:new-page:`Ansible Collection for Splunk Distribution of OpenTelemetry Collector<https://galaxy.ansible.com/signalfx/splunk_otel_collector>` を参照してください。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:29 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:18
msgid "Run the following command to install the Ansible collection from Ansible Galaxy:"
msgstr "以下のコマンドを実行して、Ansible GalaxyからAnsibleコレクションをインストールする："

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:35
msgid "To use the role, include the ``signalfx.splunk_otel_collector.collector role`` invocation in your playbook. Note that this role requires root access. The following example shows how to use the role in a playbook with minimal required configuration:"
msgstr "このロールを使用するには、プレイブックに``signalfx.splunk_otel_collector.collector role`` 。この役割にはroot権限が必要であることに注意。次の例は、必要最小限の構成でプレイブックでロールを使用する方法を示しています："

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:50 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:42
msgid "The following table describes the variables that can be configured for this role:"
msgstr "次の表は、このロールに設定できる変数について説明したものです："

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:57 ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:115 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:54 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:49 ../../gdi/opentelemetry/windows-config.rst:26
msgid "Variable"
msgstr "可変"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:62 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:54
msgid "The realm to send the data to. This variable is set with this value for the service. The default value is ``us0``."
msgstr "データを送信するレルム。この変数は、サービスに対してこの値が設定される。デフォルト値は``us0`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:64 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:56
msgid "The Splunk ingest URL, for example, ``https://ingest.us0.signalfx.com``. This variable is set with this value for the service. The default value is ``https://ingest.{{ splunk_realm }}.signalfx.com``."
msgstr "Splunk インジェスト URL は、例えば``https://ingest.us0.signalfx.com``.この変数は、サービスに対してこの値が設定される。デフォルト値は``https://ingest.{{ splunk_realm }}.signalfx.com`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:66 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:58
msgid "The Splunk API URL, for example, ``https://api.us0.signalfx.com``. This variable is set with this value for the service. The default value is ``https://api.{{ splunk_realm }}.signalfx.com``."
msgstr "Splunk API URL は、例えば``https://api.us0.signalfx.com``.この変数は、サービスに対してこの値が設定される。デフォルト値は``https://api.{{ splunk_realm }}.signalfx.com`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:68 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:60
msgid "The Splunk trace endpoint URL, for example, ``https://ingest.us0.signalfx.com/v2/trace``. This variable is set with this value for the service. The default value is ``{{ splunk_ingest_url }}/v2/trace``."
msgstr "Splunk トレースエンドポイント URL は、例えば``https://ingest.us0.signalfx.com/v2/trace``.この変数は、サービスに対してこの値が設定される。デフォルト値は``{{ splunk_ingest_url }}/v2/trace`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:70 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:62
msgid "The Splunk HEC endpoint URL, for example, ``https://ingest.us0.signalfx.com/v1/log``. This variable is set with this value for the service. The default value is ``{{ splunk_ingest_url }}/v1/log``."
msgstr "Splunk HEC のエンドポイント URL は、例えば``https://ingest.us0.signalfx.com/v1/log``.この変数は、サービスに対してこの値が設定される。デフォルト値は``{{ splunk_ingest_url }}/v1/log`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:71 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:63
msgid "``splunk_otel_collector_version``"
msgstr "``splunk_otel_collector_version``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:72 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:64
msgid "The version of the package to install, for example, ``0.25.0``. The default value is ``latest``."
msgstr "インストールするパッケージのバージョン、例えば``0.25.0`` 。デフォルト値は``latest`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:73 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:65
msgid "``splunk_otel_collector_config``"
msgstr "``splunk_otel_collector_config``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:74
msgid "The configuration file, created in YAML. This variable can be set to ``/etc/otel/collector/gateway_config.yaml`` to install the package in data forwarding (gateway) mode. The default location is ``/etc/otel/collector/agent_config.yaml``."
msgstr "YAMLで作成された設定ファイル。この変数を``/etc/otel/collector/gateway_config.yaml`` に設定すると、データ転送（ゲートウェイ）モードでパッケージをインストールできる。デフォルトの場所は``/etc/otel/collector/agent_config.yaml`` です。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:75 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:67
msgid "``splunk_config_override``"
msgstr "``splunk_config_override``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:76 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:68
msgid "The custom configuration that is merged into the default configuration."
msgstr "デフォルトのコンフィギュレーションにマージされるカスタムコンフィギュレーション。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:77 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:69
msgid "``splunk_config_override_list_merge``"
msgstr "``splunk_config_override_list_merge``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:78 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:70
msgid "The variable used to configure the ``list_merge`` option for merging lists in ``splunk_config_override`` with lists in the default configuration. Allowed options are ``replace``, ``keep``, ``append``, ``prepend``, ``append_rp``, or ``prepend_rp``. The default value is ``replace``. You can find information about this variable on the :new-page:`Ansible Documentation site <https://docs.ansible.com/>`."
msgstr "``splunk_config_override`` のリストをデフォルト設定のリストとマージするための``list_merge`` オプションを設定するために使われる変数。許されるオプションは``replace``,``keep``,``append``,``prepend``,``append_rp``, または``prepend_rp`` 。デフォルト値は``replace`` 。この変数に関する情報は、:new-page:`Ansible Documentation サイト<https://docs.ansible.com/>` にある。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:79 ../../gdi/opentelemetry/deployments/deployments-salt.rst:98 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:71
msgid "``splunk_otel_collector_config_source``"
msgstr "``splunk_otel_collector_config_source``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:80 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:72
msgid "This is the source path to a configuration file on your control host that is uploaded and set in place of the value set in ``splunk_otel_collector_config`` on remote hosts. This variable can be used to submit a custom configuration, for example, ``./custom_collector_config.yaml``. The default value is ``\"\"``, which means that nothing is copied and the configuration file set with ``splunk_otel_collector_config`` is used."
msgstr "これは、リモートホスト上で``splunk_otel_collector_config`` で設定された値の代わりにアップロードされて設定される、コントロールホスト上の設定ファイルへのソースパスです。この変数は、例えば、``./custom_collector_config.yaml`` のようなカスタムコンフィギュレーションを送信するために使用することができる。デフォルト値は``\"\"`` 、つまり何もコピーされず、``splunk_otel_collector_config`` で設定されたコンフィギュレーション・ファイルが使用される。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:82
msgid "The path to the bundle directory. The default path is provided by the package. If the specified path is changed from the default value, the path should be an existing directory on the node. This variable is set with this value for the service. The default location is ``/usr/lib/splunk-otel-collector/agent-bundle``."
msgstr "バンドルディレクトリへのパス。デフォルトのパスはパッケージが提供する。指定されたパスがデフォルト値から変更された場合、パスはノード上の既存のディレクトリでなければなりません。この変数は、サービスに対してこの値が設定される。デフォルトの場所は``/usr/lib/splunk-otel-collector/agent-bundle`` です。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:84
msgid "The path to the collectd configuration directory for the bundle. The default path is provided by the package. If the specified path is changed from the default value, the path should be an existing directory on the node. This variable is set with this value for the service. The default location is ``/usr/lib/splunk-otel-collector/agent-bundle``."
msgstr "バンドルの collectd 設定ディレクトリへのパス。デフォルトのパスはパッケージが提供する。指定されたパスがデフォルト値から変更された場合、パスはノード上の既存のディレクトリでなければなりません。この変数は、サービスに対してこの値が設定される。デフォルトの場所は``/usr/lib/splunk-otel-collector/agent-bundle`` です。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:85
msgid "``splunk_service_user`` and ``splunk_service_group``"
msgstr "``splunk_service_user`` そして ``splunk_service_group``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:86
msgid "The user or group ownership for the service. The user or group is created if they do not exist. The default value is ``splunk-otel-collector``."
msgstr "サービスのユーザーまたはグループの所有権。ユーザーまたはグループが存在しない場合は作成される。デフォルト値は``splunk-otel-collector`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:87
msgid "``splunk_otel_collector_proxy_http`` and ``splunk_otel_collector_proxy_https``"
msgstr "``splunk_otel_collector_proxy_http`` そして ``splunk_otel_collector_proxy_https``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:88
msgid "The proxy address, respectively for ``http_proxy`` and ``https_proxy`` environment variables, to be used by the service if at least one of them is not empty. This value must be a full URL, for example, ``http://user:pass@10.0.0.42``. Notice this proxy is not used by Ansible itself during deployment. The default value is ``\"\"``."
msgstr "``http_proxy`` と``https_proxy`` 環境変数の少なくとも一方が空でない場合に、サービスが使用するプロキシアドレス。この値は完全なURLでなければならない。例えば、``http://user:pass@10.0.0.42`` 。このプロキシは、デプロイ時にAnsible自身では使用されないことに注意。デフォルト値は``\"\"`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:90 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:78
msgid "The amount of allocated memory in MiB. The default value is ``512``, or 500 x 2^20 bytes, of memory ."
msgstr "割り当てられたメモリの量（MiB）。デフォルト値は``512`` 、つまり 500 x 2^20 バイトのメモリです。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:92 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:80
msgid "The set memory ballast size in MiB. The default value is 1/3 of the value set in ``splunk_memory_total_mib``."
msgstr "設定されたメモリバラストのサイズ（MiB）。デフォルト値は、``splunk_memory_total_mib`` で設定した値の1/3である。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:93 ../../gdi/opentelemetry/deployments/deployments-salt.rst:104 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:81
msgid "``install_fluentd``"
msgstr "``install_fluentd``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:94
msgid "The option to install or manage Fluentd and dependencies for log collection. The dependencies include ``capng_c`` for activating Linux capabilities, ``fluent-plugin-systemd`` for systemd journal log collection, and the required libraries or development tools. The default value is ``true``."
msgstr "ログ収集のためのFluentdと依存関係をインストールまたは管理するオプション。依存関係には、Linux機能を有効化するための``capng_c`` 、systemdジャーナル・ログ収集のための``fluent-plugin-systemd`` 、必要なライブラリや開発ツールが含まれる。デフォルト値は``true`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:95 ../../gdi/opentelemetry/deployments/deployments-salt.rst:107 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:83
msgid "``td_agent_version``"
msgstr "``td_agent_version``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:96
msgid "The version of td-agent (Fluentd package) that is installed. The default value is ``3.3.0`` for Debian jessie, ``3.7.1`` for Debian stretch, and ``4.3.0`` for other distros."
msgstr "インストールされている td-agent (Fluentd パッケージ) のバージョン。デフォルト値は、Debian jessieでは``3.3.0`` 、Debian stretchでは``3.7.1`` 、その他のディストロでは``4.3.0`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:97 ../../gdi/opentelemetry/deployments/deployments-salt.rst:110 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:85
msgid "``splunk_fluentd_config``"
msgstr "``splunk_fluentd_config``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:98
msgid "The path to the Fluentd configuration file on the remote host. The default location is ``/etc/otel/collector/fluentd/fluent.conf``."
msgstr "リモートホストの Fluentd 設定ファイルへのパス。デフォルトの場所は``/etc/otel/collector/fluentd/fluent.conf`` です。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:99 ../../gdi/opentelemetry/deployments/deployments-salt.rst:113 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:87
msgid "``splunk_fluentd_config_source``"
msgstr "``splunk_fluentd_config_source``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:100 ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:88
msgid "The source path to a Fluentd configuration file on your control host that is uploaded and set in place of the value set in ``splunk_fluentd_config`` on remote hosts. Use this variable to submit a custom Fluentd configuration, for example, ``./custom_fluentd_config.conf``. The default value is ``\"\"``, which means that nothing is copied and the configuration file set with ``splunk_otel_collector_config`` is used."
msgstr "リモートホストの``splunk_fluentd_config`` で設定された値の代わりにアップロードされて設定される、コントロールホストの Fluentd 設定ファイルへのソースパス。この変数は、例えば``./custom_fluentd_config.conf`` のように、Fluentd のカスタム設定を送信するときに使います。デフォルト値は``\"\"`` 、つまり何もコピーされず、``splunk_otel_collector_config`` で設定されたコンフィギュレーション・ファイルが使用される。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:109
msgid "The following table shows the variables that can be configured for this Ansible role:"
msgstr "次の表は、このAnsibleロールに設定できる変数を示しています："

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:117
msgid "``install_splunk_otel_auto_instrumentation``"
msgstr "``install_splunk_otel_auto_instrumentation``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:118
msgid "Available on Linux only. Installs or manages Auto Instrumentation for Java. When set to ``true``, the ``splunk-otel-auto-instrumentation`` Debian or RPM package is downloaded and installed from the Collector repository. The Java application on the node needs to be started or restarted separately after installation for auto instrumentation to take effect. The default value is ``false``."
msgstr "Linuxでのみ利用可能。Auto Instrumentation for Java をインストールまたは管理します。``true`` に設定すると、``splunk-otel-auto-instrumentation`` Debian または RPM パッケージが Collector リポジトリからダウンロードされてインストールされます。自動計測を有効にするには、インストール後、ノード上のJavaアプリケーションを個別に起動または再起動する必要がある。デフォルト値は``false`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:119
msgid "``splunk_otel_auto_instrumentation_version``"
msgstr "``splunk_otel_auto_instrumentation_version``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:120
msgid "Available on Linux only. Determines the version of the ``splunk-otel-auto-instrumentation`` package to install, for example, ``0.50.0``. The minimum supported version is ``0.48.0``. The Java application on the node needs to be restarted separately for any change to take effect. The default value is ``latest``."
msgstr "Linuxでのみ利用可能。インストールする``splunk-otel-auto-instrumentation`` パッケージのバージョンを決定する。例えば、``0.50.0`` 。最小対応バージョンは``0.48.0`` 。変更を有効にするには、ノード上のJavaアプリケーションを別途再起動する必要がある。デフォルト値は``latest`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:121
msgid "``splunk_otel_auto_instrumentation_ld_so_preload``"
msgstr "``splunk_otel_auto_instrumentation_ld_so_preload``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:122
msgid ""
"Available on Linux only. By default, the ``/etc/ld.so.preload`` file on the node is configured for the ``/usr/lib/splunk-instrumentation/libsplunk.so`` shared object library, which is provided by the ``splunk-otel-auto-instrumentation`` package and is required for auto instrumentation. You can configure this variable to include additional library paths, for example, ``/path/to/my.library.so``. Use this option if you need to include custom or other shared object library files to be preloaded for your applications, in addition to the ``/usr/lib/splunk-instrumentation/libsplunk.so`` file.The Java application on the node needs to be restarted separately for any change to "
"take effect."
msgstr ""
"Linuxでのみ利用可能。デフォルトでは、ノードの``/etc/ld.so.preload`` ファイルは、``splunk-otel-auto-instrumentation`` パッケージによって提供され、自動計測に必要な``/usr/lib/splunk-instrumentation/libsplunk.so`` 共有オブジェクト・ライブラリ用に設定されています。この変数を設定することで、例えば``/path/to/my.library.so`` のように、追加のライブラリパスを含めることができます。このオプションは、``/usr/lib/splunk-instrumentation/libsplunk.so`` ファイルに加えて、アプリケーション用にプリロードするカスタムまたはその他の共有オブジェクト・ライブラリー・ファイルを含める必要がある場合に使用します。変更を有効にするには、ノード上のJavaアプリケーションを別途再起動する必要があります。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:123
msgid "``splunk_otel_auto_instrumentation_java_agent_jar``"
msgstr "``splunk_otel_auto_instrumentation_java_agent_jar``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:124
msgid "Available on Linux only. Determines the path to the Splunk OpenTelemetry Java agent. The default path is provided by the ``splunk-otel-auto-instrumentation`` package. If the path is changed from the default value, the path should be an existing file on the node. The specified path is added to the ``/usr/lib/splunk-instrumentation/instrumentation.conf`` configuration file on the node. The Java application on the node needs to be restarted separately for any change to take effect. The default value is ``/usr/lib/splunk-instrumentation/splunk-otel-javaagent.jar``."
msgstr "Linuxでのみ利用可能。Splunk OpenTelemetry Java エージェントへのパスを決定します。デフォルトのパスは``splunk-otel-auto-instrumentation`` パッケージによって提供される。パスがデフォルト値から変更された場合、パスはノード上の既存のファイルでなければなりません。指定されたパスは、ノードの``/usr/lib/splunk-instrumentation/instrumentation.conf`` 構成ファイルに追加されます。変更を有効にするには、ノード上のJavaアプリケーションを別途再起動する必要がある。デフォルト値は``/usr/lib/splunk-instrumentation/splunk-otel-javaagent.jar`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:125
msgid "``splunk_otel_auto_instrumentation_resource_attributes``"
msgstr "``splunk_otel_auto_instrumentation_resource_attributes``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:126
msgid "Available on Linux only. Configures the OpenTelemetry instrumentation resource attributes, for example, ``deployment.environment=prod``. The resource attributes are user-defined key-value pairs. The specified resource attributes are added to the ``/usr/lib/splunk-instrumentation/instrumentation.conf`` configuration file on the node. The Java application on the node needs to be restarted separately for any change to take effect. See :ref:`trace-configuration-java` for more information."
msgstr "Linuxでのみ利用可能。OpenTelemetry の計測リソースの属性を設定します。例えば、``deployment.environment=prod`` 。リソース属性は、ユーザー定義のキーと値のペアです。指定されたリソース属性は、ノードの``/usr/lib/splunk-instrumentation/instrumentation.conf`` 構成ファイルに追加されます。変更を有効にするには、ノード上のJavaアプリケーションを別途再起動する必要がある。詳しくは:ref:`trace-configuration-java` 。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:127
msgid "``splunk_otel_auto_instrumentation_service_name``"
msgstr "``splunk_otel_auto_instrumentation_service_name``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:128
msgid "Available on Linux only. Explicitly sets the service name for the instrumented Java application, for example, ``my.service``. By default, the service name is automatically derived from the arguments of the Java executable on the node. The specified service name is added to the ``/usr/lib/splunk-instrumentation/instrumentation.conf`` configuration file on the node, overriding any generated service name. See :ref:`trace-configuration-java` for more information. The Java application on the node needs to be restarted separately for any change to take effect."
msgstr "Linuxでのみ利用可能。インスツルメンテーションされたJavaアプリケーションのサービス名を明示的に設定します（例：``my.service`` ）。デフォルトでは、サービス名はノード上のJava実行ファイルの引数から自動的に生成されます。指定されたサービス名は、生成されたサービス名よりも優先され、ノードの``/usr/lib/splunk-instrumentation/instrumentation.conf`` 構成ファイルに追加されます。詳しくは:ref:`trace-configuration-java` 。変更を有効にするには、ノード上のJavaアプリケーションを別途再起動する必要がある。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:129
msgid "``splunk_otel_auto_instrumentation_generate_service_name``"
msgstr "``splunk_otel_auto_instrumentation_generate_service_name``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:131
msgid "``splunk_otel_auto_instrumentation_disable_telemetry``"
msgstr "``splunk_otel_auto_instrumentation_disable_telemetry``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:133
msgid "``splunk_otel_auto_instrumentation_enable_profiler``"
msgstr "``splunk_otel_auto_instrumentation_enable_profiler``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:134 ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:152 ../../gdi/opentelemetry/deployments/deployments-salt.rst:161
msgid "Activates or deactivates AlwaysOn CPU Profiling."
msgstr "AlwaysOn CPU プロファイリングを有効または無効にします。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:135
msgid "``splunk_otel_auto_instrumentation_enable_profiler_memory``"
msgstr "``splunk_otel_auto_instrumentation_enable_profiler_memory``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-ansible.rst:137
msgid "``splunk_otel_auto_instrumentation_enable_metrics``"
msgstr "``splunk_otel_auto_instrumentation_enable_metrics``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:-1
msgid "Describes how to install the Splunk Observability Cloud OpenTelemetry Collector Puppet module on Linux."
msgstr "Linux に Splunk Observability Cloud OpenTelemetry Collector Puppet モジュールをインストールする方法を説明します。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:5
msgid "Puppet for Linux"
msgstr "Linux用Puppet"

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:10
msgid "Use this module to install and configure the Collector on Linux. Download and install the module from :new-page:`Puppet Forge <https://forge.puppet.com/modules/signalfx/splunk_otel_collector>`. After downloading the module, you can add customizations using the ``class`` parameter."
msgstr "このモジュールを使用して、Linux に Collector をインストールおよび構成します。:new-page:`Puppet Forge<https://forge.puppet.com/modules/signalfx/splunk_otel_collector>` からモジュールをダウンロードしてインストールします。モジュールをダウンロードした後、``class`` パラメータを使用してカスタマイズを追加できます。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:12 ../../gdi/opentelemetry/deployments/deployments-salt.rst:25
msgid "Currently, we support the following Linux distributions and versions:"
msgstr "現在、以下のLinuxディストリビューションとバージョンをサポートしています："

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:17
msgid "SUSE: 12, 15 (Note: Only applicable for Collector versions v0.34.0 or higher. Log collection with Fluentd not currently supported.)"
msgstr "SUSE: 12, 15 (注意: Collector バージョン v0.34.0 以降にのみ適用されます。Fluentdによるログ収集は現在サポートされていません)。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:20
msgid "On Linux systems, the :new-page:`puppetlabs/stdlib module <https://forge.puppet.com/modules/puppetlabs/stdlib/readme>` is required."
msgstr "Linuxシステムでは、:new-page:`puppetlabs/stdlibモジュール<https://forge.puppet.com/modules/puppetlabs/stdlib/readme>` が必要です。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:24
msgid "systemd is required to be installed on the host for service management."
msgstr "systemdはサービス管理のためにホストにインストールする必要がある。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:27 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:15
msgid "Using the module"
msgstr "モジュールの使用"

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:29
msgid "To use this module, include the ``splunk_otel_collector`` class in your manifests with the supported parameters (see :ref:`modify-class-parameters-linux` for descriptions of the available parameters). For example, the following deployment definition is the simplest deployment definition with the default parameters (replace ``VERSION`` with the desired Collector version, ``SPLUNK_ACCESS_TOKEN`` with your Splunk access token to authenticate requests, and ``SPLUNK_REALM`` for the realm to send the data to):"
msgstr "このモジュールを使用するには、``splunk_otel_collector`` クラスを、サポートされているパラメータとともにマニフェストに含めます (使用可能なパラメータの説明については、:ref:`modify-class-parameters-linux` を参照してください)。たとえば、次のデプロイメント定義は、デフォルトのパラメータを使用した最も単純なデプロイメント定義です (``VERSION`` を希望の Collector バージョンに、``SPLUNK_ACCESS_TOKEN`` をリクエストを認証する Splunk アクセストークンに、``SPLUNK_REALM`` をデータを送信するレルムに置き換えてください)："

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:42 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:30
msgid "Modify the class parameters"
msgstr "クラスのパラメータを変更する"

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:44 ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:32
msgid "The class accepts the parameters described in the following table:"
msgstr "このクラスは、次の表に示すパラメータを受け付ける："

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:95
msgid "``service_user and $service_group``"
msgstr "``service_user and $service_group``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:107
msgid "``manage_repo``"
msgstr "``manage_repo``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:108
msgid "In cases where the Collector and Fluentd apt/yum repositories are managed externally, set this to ``false`` to deactivate management of the repositories by this module. If set to ``false``, the externally managed repositories should provide the ``splunk-otel-collector`` and ``td-agent`` packages. Also, the apt (``/etc/apt/sources.list.d/splunk-otel-collector.list`` and ``/etc/apt/sources.list.d/splunk-td-agent.list``) and yum (``/etc/yum.repos.d/splunk-otel-collector.repo`` and ``/etc/yum.repos.d/splunk-td-agent.repo``) repository definition files are deleted if they exist in order to avoid any conflicts."
msgstr "コレクターと Fluentd apt/yum リポジトリが外部で管理されている場合、このモジュールによるリポジトリの管理を無効にするには、これを``false`` に設定します。``false`` に設定すると、外部管理リポジトリは``splunk-otel-collector`` と``td-agent`` パッケージを提供する。また、競合を避けるため、apt (``/etc/apt/sources.list.d/splunk-otel-collector.list`` と``/etc/apt/sources.list.d/splunk-td-agent.list``) と yum (``/etc/yum.repos.d/splunk-otel-collector.repo`` と``/etc/yum.repos.d/splunk-td-agent.repo``) リポジトリ定義ファイルが存在する場合は削除される。"

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:118
msgid "The following table shows the variables that can be configured for this Puppet module:"
msgstr "次の表は、このPuppetモジュールで設定できる変数を示しています："

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:136
msgid "``auto_instrumentation_java_agent_jar``"
msgstr "``auto_instrumentation_java_agent_jar``"

#: ../../gdi/opentelemetry/deployments/deployments-linux-puppet.rst:137
msgid "Path to the Splunk OpenTelemetry Java agent. The default path is provided by the ``splunk-otel-auto-instrumentation`` package. If the path is changed from the default value, the path should be an existing file on the node. The specified path is added to the /usr/lib/splunk-instrumentation/instrumentation.conf configuration file on the node. The Java application on the node needs to be started or restarted separately after installation for auto instrumentation to take effect."
msgstr "Splunk OpenTelemetry Java エージェントへのパス。デフォルトのパスは``splunk-otel-auto-instrumentation`` パッケージによって提供される。パスがデフォルト値から変更された場合、パスはノード上の既存のファイルでなければなりません。指定されたパスは、ノードの/usr/lib/splunk-instrumentation/instrumentation.conf設定ファイルに追加されます。自動計測を有効にするには、インストール後、ノード上のJavaアプリケーションを個別に起動または再起動する必要がある。"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:-1
msgid "Deploy the Splunk Observability Cloud OpenTelemetry Collector using Nomad."
msgstr "Nomad を使用して Splunk Observability Cloud OpenTelemetry Collector をデプロイします。"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:5 ../../gdi/opentelemetry/install-linux.rst:220 ../../gdi/opentelemetry/install-windows.rst:48 ../../gdi/opentelemetry/install-windows.rst:166
msgid "Nomad"
msgstr "ノマド"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:10
msgid "Use the Nomad deployment orchestrator to create a job that provides a unified way to receive, process, and export metric and trace data for Splunk Observability Cloud."
msgstr "Nomad 導入オーケストレーターを使用して、Splunk Observability Cloud のメトリックデータとトレースデータを受信、処理、エクスポートする統一された方法を提供するジョブを作成します。"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:14
msgid "Job files are provided as a reference only and are not intended for production use."
msgstr "ジョブファイルは参考として提供されるものであり、本番での使用を意図したものではありません。"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:18
msgid "To run the job files, you need:"
msgstr "ジョブファイルを実行するには"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:20
msgid "Access to a Nomad cluster"
msgstr "ノマドクラスターへのアクセス"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:21
msgid "(Optional) Access to a Consul cluster"
msgstr "(オプション）Consulクラスタへのアクセス"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:23
msgid "To start a local dev agent for Nomad and Consul:"
msgstr "NomadとConsulのローカル開発エージェントを立ち上げる："

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:25
msgid "Download the :new-page:`nomad binary file <https://www.nomadproject.io/downloads>` and the :new-page:`consul binary <https://www.consul.io/downloads>`."
msgstr ":new-page:`nomad バイナリファイル<https://www.nomadproject.io/downloads>` と:new-page:`consul バイナリ<https://www.consul.io/downloads>` をダウンロードする。"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:26
msgid "Run the following commands in two different terminals:"
msgstr "以下のコマンドを2つの異なるターミナルで実行する："

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:34
msgid "To deploy the Collector job on the Nomad cluster, set the environment variable in the Nomad job configuration, as shown in the following example:"
msgstr "NomadクラスタにCollectorジョブをデプロイするには、次の例に示すようにNomadジョブ構成で環境変数を設定します："

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:45
msgid "You can specify content in the :new-page:`template stanza <https://www.nomadproject.io/docs/job-specification/template>` if you want to use your own Collector configuration file, as shown in the following example:"
msgstr "次の例に示すように、独自のCollector設定ファイルを使用する場合は、:new-page:`テンプレートスタンザ<https://www.nomadproject.io/docs/job-specification/template>` でコンテンツを指定できます："

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:102 ../../gdi/opentelemetry/install-the-collector.rst:10
msgid "Deployment modes"
msgstr "展開モード"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:103
msgid "Run the Collector as a gateway or as an agent. See :ref:`otel-deployment-mode` for more information."
msgstr "コレクタをゲートウェイまたはエージェントとして実行します。詳しくは:ref:`otel-deployment-mode` 。"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:106
msgid "Run the Collector as a gateway"
msgstr "コレクタをゲートウェイとして実行する。"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:107
msgid "Run the Collector as a gateway by registering a service job, as shown in the following example:"
msgstr "次の例に示すように、サービスジョブを登録することで、コレクタを ゲートウェイとして実行します："

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:115
msgid "Use the ``service`` scheduler to schedule long lived services that should never go down. As such, the ``service`` scheduler ranks a large portion of the nodes that meet the job's constraints and selects the optimal node to place a task group on."
msgstr "``service`` スケジューラーを使用して、決してダウンしてはならない長期間のサービスをスケジュールします。このように、``service`` スケジューラは、ジョブの制約を満たすノードの大部分をランク付けし、タスクグループを配置する最適なノードを選択する。"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:117
msgid "Service jobs are intended to run until explicitly stopped by an operator. If a service task exits, it is considered a failure and handled according to the job's restart and reschedule stanzas."
msgstr "サービス・ジョブは、オペレーターによって明示的に停止されるまで実行される。サービスタスクが終了した場合、それは失敗とみなされ、ジョブのリスタートとリスケジュールのスタンザに従って処理される。"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:120
msgid "Run the Collector as an agent"
msgstr "コレクタをエージェントとして実行する"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:121
msgid "Run the Collector as an agent by registering a system job, as shown in the following example:"
msgstr "以下の例に示すように、システムジョブを登録して Collector をエー ジェントとして実行します："

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:129
msgid "Use the ``system`` scheduler to register jobs that should be run on all clients that meet the job's constraints. The ``system`` scheduler is also invoked when clients join the cluster or transition into the ready state. This means that all registered system jobs are re-evaluated and their tasks are placed on the newly available nodes if the constraints are met."
msgstr "``system`` スケジューラを使用して、ジョブの制約を満たすすべてのクライアントで実行されるべきジョブを登録する。``system`` スケジューラは、クライアントがクラスタに参加したり、レディ状態に移行したりしたときにも呼び出される。つまり、登録されたシステムジョブはすべて再評価され、制約が満たされれば、そのタスクは新たに利用可能になったノードに配置される。"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:131
msgid "The ``system`` scheduler type is useful for deploying and managing tasks that should be present on every node in the cluster. Since these tasks are managed by Nomad, they can take advantage of job updating, service discovery, and more."
msgstr "``system`` スケジューラタイプは、クラスタ内のすべてのノードに存在すべきタスクをデプロイして管理するのに便利です。これらのタスクはNomadによって管理されるため、ジョブの更新やサービスの発見などを利用することができる。"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:133
msgid "Since Nomad 0.9, the system scheduler preempts eligible lower priority tasks running on a node if there isn't enough capacity to place a system job. See preemption for details on how tasks that get preempted are chosen."
msgstr "Nomad 0.9以降、システムジョブを配置するのに十分な容量がない場合、システムスケジューラはノード上で実行されている優先順位の低いタスクをプリエンプトする。プリエンプトされるタスクがどのように選ばれるかの詳細については、プリエンプトを参照のこと。"

#: ../../gdi/opentelemetry/deployments/deployments-nomad.rst:135
msgid "Systems jobs are intended to run until explicitly stopped either by an operator or preemption. If a system task exits, it is considered a failure and handled according to the job's restart stanza; system jobs do not have rescheduling."
msgstr "システムジョブは、オペレーターまたは先取りによって明示的に停止されるまで実行される。システムタスクが終了した場合、それは失敗とみなされ、ジョブの再起動スタンザに従って処理される。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:-1
msgid "Use Pivotal Cloud Foundry to install and configure the OpenTelemetry Collector. Use BOSH, the buildpack, or the Tanzu file."
msgstr "Pivotal Cloud Foundryを使用して、OpenTelemetry Collectorをインストールし、構成します。BOSH、buildpack、またはTanzuファイルを使用する。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:5 ../../gdi/opentelemetry/install-linux.rst:226
msgid "Pivotal Cloud Foundry"
msgstr "Pivotal Cloud Foundry"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:10
msgid "Use Pivotal Cloud Foundry (PCF) to deploy the Collector."
msgstr "Pivotal Cloud Foundry（PCF）を使用してCollectorをデプロイします。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:12
msgid "There are three deployment options:"
msgstr "配備オプションは3つある："

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:14
msgid ":ref:`otel-pcf-bosch`: The Collector is deployed to the PCF environment as a standalone deployment."
msgstr ":ref:`otel-pcf-bosch`:コレクターは、スタンドアロンのデプロイメントとしてPCF環境にデプロイされます。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:16
msgid ":ref:`otel-pcf-buildpack`: This integration installs and runs the Collector as a sidecar to your app. In this configuration, the Collector runs in the same container as the app."
msgstr ":ref:`otel-pcf-buildpack`:このインテグレーションは、アプリのサイドカーとしてCollectorをインストールして実行します。この構成では、Collectorはアプリと同じコンテナで実行される。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:18
msgid ":ref:`otel-pcf-tile`: The Tanzu Tile is a packaged release of the Collector that can be integrated into Pivotal Ops Manager. The Tanzu Tile allows you to download, install, run, configure, and update the Collector from the Ops Manager."
msgstr ":ref:`otel-pcf-tile`:Tanzu Tileは、Pivotal Ops Managerに統合できるCollectorのパッケージリリースです。Tanzu Tileを使用すると、Ops ManagerからCollectorをダウンロード、インストール、実行、構成、および更新できます。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:20
msgid "Only Tanzu Application Service (TAS) version 2 is supported. TAS version 3 is not supported."
msgstr "Tanzu Application Service（TAS）バージョン2のみ対応。TASバージョン3には対応していない。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:26
msgid "BOSH release"
msgstr "BOSHリリース"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:28
msgid "If deployed using the BOSH release, the Collector acts as a nozzle to :new-page:`Loggregator Firehose <https://docs.pivotal.io/tiledev/2-2/nozzle.html>`, which is one of the architectures Cloud Foundry uses to emit logs and metrics."
msgstr "BOSHリリースを使用してデプロイされた場合、Collectorは、:new-page:`Loggregator Firehose<https://docs.pivotal.io/tiledev/2-2/nozzle.html>` へのノズルとして機能します。これは、Cloud Foundryがログとメトリクスを出力するために使用するアーキテクチャの1つです。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:31 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:210 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:244 ../../gdi/opentelemetry/security.rst:160
msgid "Dependencies"
msgstr "依存関係"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:33 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:246
msgid "The release script requires:"
msgstr "リリーススクリプトに必要なのは"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:35
msgid "The :new-page:`BOSH CLI <https://bosh.io/docs/cli-v2-install/>`, which is the command line tool used for interacting with all things BOSH, from deployment operations to software release management."
msgstr ":new-page:`BOSH CLI<https://bosh.io/docs/cli-v2-install/>` これは、デプロイメント操作からソフトウェアリリース管理まで、BOSHのすべてに対応するコマンドラインツールです。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:36
msgid "``wget`` to retrieve content from web servers."
msgstr "``wget`` ウェブサーバーからコンテンツを取得する。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:37
msgid "``jq`` to process JSON files."
msgstr "``jq`` JSONファイルを処理する。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:40 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:254
msgid "Release and deploy the Collector"
msgstr "コレクターのリリースとデプロイ"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:42
msgid "Use the :new-page:`release script <https://github.com/signalfx/splunk-otel-collector/blob/main/deployments/cloudfoundry/bosh/release>` to generate a new release with the latest version of the Splunk Distribution of OpenTelemetry Collector. The script must be run in the BOSH release directory of the Collector repository, or it will not work. This repository has the necessary dependencies for the release to contain its necessary components."
msgstr ":new-page:`リリーススクリプト<https://github.com/signalfx/splunk-otel-collector/blob/main/deployments/cloudfoundry/bosh/release>` を使用して、OpenTelemetry Collector の Splunk ディストリビューションの最新バージョンを含む新しいリリースを生成します。このスクリプトは、Collector リポジトリの BOSH リリースディレクトリで実行する必要があります。このリポジトリには、リリースに必要なコンポーネントが含まれるために必要な依存関係があります。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:48
msgid "The script uses the variables described in the following table:"
msgstr "スクリプトは、以下の表に示す変数を使用する："

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:50
msgid "Variables"
msgstr "変数"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:57
msgid "``OTEL_VERSION``"
msgstr "``OTEL_VERSION``"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:58
msgid "The version of the Collector to deploy as a part of this release."
msgstr "このリリースの一部としてデプロイするコレクターのバージョン。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:59
msgid "``latest``. The valid version must be higher than version 0.48.0."
msgstr "``latest``.有効なバージョンはバージョン0.48.0以上でなければならない。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:60
msgid "``SMART_AGENT_VERSION``"
msgstr "``SMART_AGENT_VERSION``"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:61
msgid "The version of the SignalFx Smart Agent to download. This is a dependency of the Collector SignalFx receiver."
msgstr "ダウンロードするSignalFx Smart Agentのバージョン。コレクターSignalFxレシーバーの依存関係です。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:63
msgid "``BOSH_RELEASE_VERSION``"
msgstr "``BOSH_RELEASE_VERSION``"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:64
msgid "The version of the BOSH release being created."
msgstr "作成されるBOSHリリースのバージョン。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:65
msgid "``false (0)``, if not specified. Any release except the first release should have a pre-set value."
msgstr "``false (0)``特に指定がなければ。最初のリリースを除くすべてのリリースには、あらかじめ設定された値があるはずだ。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:66
msgid "``IS_DEV_RELEASE``"
msgstr "``IS_DEV_RELEASE``"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:67
msgid "Boolean (int). If this variable is set, this script creates the release locally. If this variable is set to ``true``, the script can be used in development."
msgstr "ブール（int）。この変数がセットされている場合、このスクリプトはローカルにリリースを作成する。この変数が``true`` に設定されている場合、スクリプトは開発で使用できる。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:68
msgid "``false (0)``"
msgstr "``false (0)``"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:69
msgid "``UPLOAD_RELEASE``"
msgstr "``UPLOAD_RELEASE``"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:70
msgid "Boolean (int). If this variable is set to ``true``, the script uploads the release to the BOSH Director, which is primarily used for the GitHub workflow for testing."
msgstr "ブール（int）。この変数が``true`` に設定されている場合、スクリプトはリリースを BOSH Director にアップロードします。BOSH Director は主にテスト用の GitHub ワークフローに使用されます。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:71
msgid "``true (1)``"
msgstr "``true (1)``"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:73
msgid "See :new-page:`configuration examples <https://github.com/signalfx/splunk-otel-collector/tree/main/deployments/cloudfoundry/bosh/example>`."
msgstr ":new-page:`設定例<https://github.com/signalfx/splunk-otel-collector/tree/main/deployments/cloudfoundry/bosh/example>` を参照。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:76
msgid "Deploy the Collector using a YAML file"
msgstr "YAMLファイルを使用してCollectorをデプロイする"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:78
msgid "Run the following command to deploy the Collector using the deployment.yaml file:"
msgstr "次のコマンドを実行して、deployment.yaml ファイルを使用して Collector をデプロイします："

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:84
msgid "The following is an example deployment.yaml file:"
msgstr "以下は、deployment.yaml ファイルの例です："

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:133
msgid "To include a custom Collector configuration for the deployment, use a custom configuration file, as shown in the following example:"
msgstr "デプロイメントにカスタムCollector構成を含めるには、次の例に示すようにカスタム構成ファイルを使用します："

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:197 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:231 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:267
msgid "See the following GitHub repos and files:"
msgstr "以下のGitHubリポジトリとファイルを参照のこと："

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:199
msgid "The Collector's :new-page:`BOSH release repo <https://github.com/signalfx/splunk-otel-collector/tree/main/deployments/cloudfoundry/bosh>`"
msgstr "コレクターズ:new-page:`BOSHリリース・レポ <https://github.com/signalfx/splunk-otel-collector/tree/main/deployments/cloudfoundry/bosh>`"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:200
msgid "The Collector's :new-page:`development guide for PCF BOSH <https://github.com/signalfx/splunk-otel-collector/blob/main/deployments/cloudfoundry/bosh/DEVELOPMENT.md>`"
msgstr "コレクターズ:new-page:`PCF BOSHのための開発ガイド <https://github.com/signalfx/splunk-otel-collector/blob/main/deployments/cloudfoundry/bosh/DEVELOPMENT.md>`"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:205
msgid "Cloud Foundry Buildpack"
msgstr "Cloud Foundry Buildpack"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:207
msgid "The Cloud Foundry Buildpack deploys the Collector as a sidecar for the actual app being deployed. The Collector is able to observe the app as a nozzle to the Loggregator Firehose, seeing all metrics and logs sent to the Loggregator Firehose as long as it's running."
msgstr "Cloud Foundry Buildpackは、デプロイされる実際のアプリのサイドカーとしてCollectorをデプロイする。Collectorは、Loggregator Firehoseへのノズルとしてアプリを観察することができ、それが実行されている限り、Loggregator Firehoseに送信されるすべてのメトリックとログを見ることができます。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:212 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:250
msgid "``wget``"
msgstr "``wget``"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:213 ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:251
msgid "``jq``"
msgstr "``jq``"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:216
msgid "Install the pack and deploy the Collector"
msgstr "パックをインストールしてコレクターをデプロイする"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:218
msgid "To install the Buildpack:"
msgstr "Buildpackをインストールする："

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:220
msgid "Clone the Collector's :new-page:`Buildpack GitHub repository <https://github.com/signalfx/splunk-otel-collector/tree/main/deployments/cloudfoundry/buildpack>`."
msgstr "Collector's:new-page:`Buildpack GitHubリポジトリ<https://github.com/signalfx/splunk-otel-collector/tree/main/deployments/cloudfoundry/buildpack>` をクローンする。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:221
msgid "Go to the newly created repo."
msgstr "新しく作成したレポにアクセスする。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:222
msgid "Run the following command to add the Buildpack for the Collector:"
msgstr "以下のコマンドを実行して、Collector 用の Buildpack を追加します："

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:233
msgid ":new-page:`Configuration options <https://github.com/signalfx/splunk-otel-collector/tree/main/deployments/cloudfoundry/buildpack#configuration>`"
msgstr ":new-page:`設定オプション <https://github.com/signalfx/splunk-otel-collector/tree/main/deployments/cloudfoundry/buildpack#configuration>`"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:234
msgid ":new-page:`Troubleshooting <https://github.com/signalfx/splunk-otel-collector/tree/main/deployments/cloudfoundry/buildpack#troubleshooting>`"
msgstr ":new-page:`トラブルシューティング <https://github.com/signalfx/splunk-otel-collector/tree/main/deployments/cloudfoundry/buildpack#troubleshooting>`"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:239
msgid "Tanzu Tile"
msgstr "丹生瓦"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:241
msgid "The Tanzu tile uses the :ref:`otel-pcf-bosch` to deploy the Collector as a nozzle to :new-page:`Loggregator Firehose <https://docs.pivotal.io/tiledev/2-2/nozzle.html>`."
msgstr "Tanzuタイルは、:ref:`otel-pcf-bosch` を使用して、:new-page:`Loggregator Firehose<https://docs.pivotal.io/tiledev/2-2/nozzle.html>` にノズルとしてCollectorをデプロイします。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:248
msgid "The :new-page:`BOSH CLI <https://bosh.io/docs/cli-v2-install/>`"
msgstr ":new-page:`BOSH CLI <https://bosh.io/docs/cli-v2-install/>`"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:249
msgid "The :new-page:`Tile generator <https://docs.vmware.com/en/Tile-Developer-Guide/2.10/tile-dev-guide/tile-generator.html>`"
msgstr ":new-page:`タイルジェネレーター <https://docs.vmware.com/en/Tile-Developer-Guide/2.10/tile-dev-guide/tile-generator.html>`"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:256
msgid "Run the following command to create the BOSH release packaged as a dependency of the Tanzu tile, and build the tile."
msgstr "以下のコマンドを実行して、Tanzuタイルの依存関係としてパッケージ化されたBOSHリリースを作成し、タイルをビルドします。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:262
msgid "If the command is successful, you can find the tile in ``./product/splunk-otel-collector-<VERSION>.pivotal``."
msgstr "コマンドが成功すれば、``./product/splunk-otel-collector-<VERSION>.pivotal`` でタイルを見つけることができる。"

#: ../../gdi/opentelemetry/deployments/deployments-pivotal-cloudfoundry.rst:269
msgid "The Collector's :new-page:`Tanzu Tile GitHub repo <https://github.com/signalfx/splunk-otel-collector/tree/main/deployments/cloudfoundry/tile>`"
msgstr "The Collector's:new-page:`Tanzu Tile GitHub リポジトリ <https://github.com/signalfx/splunk-otel-collector/tree/main/deployments/cloudfoundry/tile>`"

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:-1
msgid "Deploy the Splunk Observability Cloud OpenTelemetry Collector using a Salt formula."
msgstr "Salt 式を使用して Splunk Observability Cloud OpenTelemetry Collector をデプロイします。"

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:10
msgid "You can use a formula to install and configure the Collector to collect metrics, traces, and logs from Linux machines and send data to Splunk Observability Cloud. See the :new-page:`GitHub repository <https://github.com/signalfx/splunk-otel-collector/tree/main/deployments/salt>` to download the Salt module."
msgstr "式を使用して Collector をインストールおよび設定し、Linux マシンからメトリクス、トレース、ログを収集し、Splunk Observability Cloud にデータを送信することができます。Saltモジュールをダウンロードするには、:new-page:`GitHubリポジトリ<https://github.com/signalfx/splunk-otel-collector/tree/main/deployments/salt>` を参照のこと。"

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:12
msgid "Formulas are pre-written Salt States. They are as open-ended as Salt States themselves and can be used for tasks such as installing a package, configuring and starting a service, setting up users or permissions, and many other common tasks."
msgstr "公式はあらかじめソルト・ステーツに書き込まれている。パッケージのインストール、サービスの設定と開始、ユーザーや権限の設定、その他多くの一般的なタスクに使用できる。"

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:17
msgid "You need the following resources to use Salt:"
msgstr "ソルトを使うには以下のリソースが必要です："

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:21
msgid "Check exposed ports to make sure your environment doesn't have conflicts. You can change ports in the Collector configuration. See :ref:`otel-exposed-endpoints` for more information."
msgstr "公開されているポートをチェックし、あなたの環境がコンフリクトしていないことを確認する。コレクタの設定でポートを変更できます。詳しくは:ref:`otel-exposed-endpoints` 。"

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:36
msgid "Salt uses key-value stores known as \"pillars\" for user-defined data to be made available to a \"minion\". Salt defines a minion as a server running a Salt minion daemon which can listen to commands from a manager and run the requested tasks. Generally, minions are servers which are to be controlled using Salt."
msgstr "Saltは、ユーザー定義のデータを \"ミニオン \"が利用できるようにするために、\"ピラー \"と呼ばれるキー・バリュー・ストアを使用する。Saltはミニオンを、マネージャからのコマンドを聞き、要求されたタスクを実行することができる、Saltミニオンデーモンを実行しているサーバーとして定義しています。一般的に、ミニオンはソルトを使ってコントロールされるサーバーのことだ。"

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:38
msgid "You can configure all attributes in the ``splunk-otel-collector`` pillar. For example:"
msgstr "``splunk-otel-collector`` 、すべての属性を設定できる。例えば、こうだ："

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:53
msgid "For Linux, the formula accepts the attributes described in the following table:"
msgstr "Linuxの場合、数式は以下の表に示す属性を受け付ける："

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:97
msgid "1/3 of the ``splunk_memory_total_mib`` total"
msgstr "``splunk_memory_total_mib`` 合計の1/3"

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:99
msgid "The source path to a Collector configuration YAML file on your control host that is uploaded and set in place of ``splunk_otel_collector_config`` in remote hosts. To use a custom Collector configuration, add the configuration file in the Salt dir. For example, ``salt://templates/agent_config.yaml``."
msgstr "リモートホストにアップロードされ、``splunk_otel_collector_config`` の代わりに設定される、コントロールホストの Collector 設定 YAML ファイルのソースパス。カスタムCollector設定を使用するには、Saltディレクトリに設定ファイルを追加します。例えば、``salt://templates/agent_config.yaml`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:100
msgid "``\"\"``, meaning that nothing is copied and the existing ``splunk_otel_collector_config`` file is used"
msgstr "``\"\"``つまり、何もコピーされず、既存の``splunk_otel_collector_config`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:109
msgid "``3.7.1-0`` for Debian 9 and ``4.3.0`` for other distros"
msgstr "``3.7.1-0`` Debian 9 用と``4.3.0`` その他のディストロ用"

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:111
msgid "The path to the Fluentd configuration file on the remote host."
msgstr "リモートホストの Fluentd 設定ファイルへのパス。"

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:114
msgid "The source path to a Fluentd configuration file on your control host that is uploaded and set in place of the ``splunk_fluentd_config`` file on remote hosts. To use a custom Fluentd configuration file, add the configuration file into the Salt dir. For example, ``salt://templates/td_agent.conf``."
msgstr "リモートホストの``splunk_fluentd_config`` ファイルの代わりにアップロードして設定する、コントロールホストの Fluentd 設定ファイルのソースパスです。カスタム Fluentd 設定ファイルを使うには、設定ファイルを Salt ディレクトリに追加します。例えば、``salt://templates/td_agent.conf`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:115
msgid "``\"\"`` meaning that nothing is copied and the existing ``splunk_fluentd_config`` file is used."
msgstr "``\"\"`` つまり、何もコピーされず、既存の``splunk_fluentd_config`` ファイルが使われる。"

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:127
msgid "The following table shows the variables that can be configured for this Salt module:"
msgstr "次の表に、このSaltモジュールで設定可能な変数を示します："

#: ../../gdi/opentelemetry/deployments/deployments-salt.rst:136
msgid "``install_auto_instrumentation``"
msgstr "``install_auto_instrumentation``"

#: ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:-1
msgid "Describes how to install the Splunk Observability Cloud OpenTelemetry Collector Ansible role on Windows."
msgstr "Splunk Observability Cloud OpenTelemetry Collector Ansible ロールを Windows にインストールする方法を説明します。"

#: ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:5
msgid "Ansible for Windows"
msgstr "Windows用Ansible"

#: ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:16
msgid "Ansible requires PowerShell 3.0 or newer and at least .NET 4.0 to be installed on the Windows host. A WinRM listener should be created and activated. You can find information on setting up the Windows host on the :new-page:`Ansible Documentation site <https://docs.ansible.com/>`."
msgstr "Ansibleには、WindowsホストにPowerShell 3.0以降と少なくとも.NET 4.0がインストールされている必要がある。WinRMリスナーを作成し、アクティブにする必要があります。Windows ホストのセットアップに関する情報は、:new-page:`Ansible Documentation サイト<https://docs.ansible.com/>` にあります。"

#: ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:24
msgid "To use this role, include the ``signalfx.splunk_otel_collector.collector role`` invocation in your playbook. Note that this role requires root access. The following example shows how to use the role in a playbook with minimal required configuration:"
msgstr "このロールを使用するには、プレイブックに``signalfx.splunk_otel_collector.collector role`` 。この役割にはroot権限が必要であることに注意。次の例は、必要最小限の構成でプレイブックでロールを使用する方法を示しています："

#: ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:66
msgid "The configuration file, created in YAML. This variable can be set to ``%ProgramData%\\Splunk\\OpenTelemetry Collector\\gateway_config.yaml`` to install the package in data forwarding (gateway) mode. The default location is ``%ProgramData%\\Splunk\\OpenTelemetry Collector\\agent_config.yaml``."
msgstr "YAMLで作成された設定ファイル。この変数を``%ProgramData%\\Splunk\\OpenTelemetry Collector\\gateway_config.yaml`` に設定すると、データ転送（ゲートウェイ）モードでパッケージをインストールできる。デフォルトの場所は``%ProgramData%\\Splunk\\OpenTelemetry Collector\\agent_config.yaml`` です。"

#: ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:74
msgid "The path to the bundle directory. The default path is provided by the package. If the specified path is changed from the default value, the path should be an existing directory on the node. This variable is set with this value for the service. The default location is ``%ProgramFiles%\\Splunk\\OpenTelemetry Collector\\agent-bundle``."
msgstr "バンドルディレクトリへのパス。デフォルトのパスはパッケージが提供する。指定されたパスがデフォルト値から変更された場合、パスはノード上の既存のディレクトリでなければなりません。この変数は、サービスに対してこの値が設定される。デフォルトの場所は``%ProgramFiles%\\Splunk\\OpenTelemetry Collector\\agent-bundle`` です。"

#: ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:76
msgid "The path to the collectd configuration directory for the bundle. The default path is provided by the package. If the specified path is changed from the default value, the path should be an existing directory on the node. This variable is set with this value for the service. The default location is ``%ProgramFiles%\\Splunk\\OpenTelemetry Collector\\agent-bundle\\run\\collectd``."
msgstr "バンドルの collectd 設定ディレクトリへのパス。デフォルトのパスはパッケージが提供する。指定されたパスがデフォルト値から変更された場合、パスはノード上の既存のディレクトリでなければなりません。この変数は、サービスに対してこの値が設定される。デフォルトの場所は``%ProgramFiles%\\Splunk\\OpenTelemetry Collector\\agent-bundle\\run\\collectd`` です。"

#: ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:82
msgid "The option to install or manage Fluentd and dependencies for log collection. The default value is ``true``."
msgstr "ログ収集のためのFluentdと依存関係をインストールまたは管理するオプション。デフォルト値は``true`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:84
msgid "The version of td-agent (Fluentd package) that is installed."
msgstr "インストールされている td-agent (Fluentd パッケージ) のバージョン。"

#: ../../gdi/opentelemetry/deployments/deployments-windows-ansible.rst:86
msgid "The path to the Fluentd configuration file on the remote host. The default is ``%SYSTEMDRIVE%\\opt\\td-agent\\etc\\td-agent\\td-agent.conf``."
msgstr "リモートホストの Fluentd 設定ファイルへのパス。デフォルトは``%SYSTEMDRIVE%\\opt\\td-agent\\etc\\td-agent\\td-agent.conf`` 。"

#: ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:-1
msgid "Describes how to install the Splunk Observability Cloud OpenTelemetry Collector Puppet module on Windows."
msgstr "Splunk Observability Cloud OpenTelemetry Collector Puppet モジュールを Windows にインストールする方法を説明します。"

#: ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:5
msgid "Puppet for Windows"
msgstr "Windows用Puppet"

#: ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:10
msgid "Use this module to install and configure the Collector on Windows. Download and install the module from :new-page:`Puppet Forge <https://forge.puppet.com/modules/signalfx/splunk_otel_collector>`. After downloading the module, you can add customizations using the ``class`` parameter."
msgstr "このモジュールを使用して、Windows にコレクタをインストールおよび構成します。:new-page:`Puppet Forge<https://forge.puppet.com/modules/signalfx/splunk_otel_collector>` からモジュールをダウンロードしてインストールします。モジュールをダウンロードした後、``class`` パラメータを使用してカスタマイズを追加できます。"

#: ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:12
msgid "On Windows systems, the :new-page:`puppetlabs/registry module <https://forge.puppet.com/modules/puppetlabs/registry>` is required to set the registry key/values, and the :new-page:`puppetlabs/powershell module <https://forge.puppet.com/modules/puppetlabs/powershell>` is required to run Powershell commands."
msgstr "Windowsシステムでは、レジストリ・キー／値を設定するには:new-page:`puppetlabs/registryモジュール<https://forge.puppet.com/modules/puppetlabs/registry>` 、Powershellコマンドを実行するには:new-page:`puppetlabs/powershellモジュール<https://forge.puppet.com/modules/puppetlabs/powershell>` 。"

#: ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:17
msgid "To use this module, include the ``splunk_otel_collector`` class in your manifests with the supported parameters (see :ref:`modify-class-parameters-windows` for descriptions of the available parameters). For example, the following deployment definition is the simplest deployment definition with the default parameters (replace ``VERSION`` with the desired Collector version, ``SPLUNK_ACCESS_TOKEN`` with your Splunk access token to authenticate requests, and ``SPLUNK_REALM`` for the realm to send the data to):"
msgstr "このモジュールを使用するには、``splunk_otel_collector`` クラスを、サポートされているパラメータとともにマニフェストに含めます (使用可能なパラメータの説明については、:ref:`modify-class-parameters-windows` を参照してください)。たとえば、次のデプロイメント定義は、デフォルトのパラメータを使用した最も単純なデプロイメント定義です (``VERSION`` を希望の Collector バージョンに、``SPLUNK_ACCESS_TOKEN`` をリクエストを認証する Splunk アクセストークンに、``SPLUNK_REALM`` をデータを送信するレルムに置き換えてください)："

#: ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:42
msgid "Version of the Collector package to install, for example, ``0.25.0``. The version must correspond to :new-page:`Github Releases <https://github.com/signalfx/splunk-otel-collector/releases>` without the preceding ``v``. This attribute is required."
msgstr "インストールする Collector パッケージのバージョン（例：``0.25.0``.``v``バージョンは:new-page:`Github Releases<https://github.com/signalfx/splunk-otel-collector/releases>` に対応するものでなければならない。この属性は必須である。"

#: ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:67
msgid "``%PROGRAMFILES%\\Splunk\\OpenTelemetry Collector\\agent-bundle``"
msgstr "``%PROGRAMFILES%\\Splunk\\OpenTelemetry Collector\\agent-bundle``"

#: ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:70
msgid "``${splunk_bundle_dir}\\run\\collectd``"
msgstr "``${splunk_bundle_dir}\\run\\collectd``"

#: ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:75
msgid "Sets the ballast size for the Collector explicitly instead of the value calculated from the ``$splunk_memory_total_mib`` parameter. This should be set to 1/3 to 1/2 of the configured memory. The ``SPLUNK_BALLAST_SIZE_MIB`` environment variable is set to this value for the Collector service."
msgstr "コレクタのバラストサイズを、``$splunk_memory_total_mib`` パラメータから計算された値ではなく、明示的に設定します。設定メモリの1/3から1/2に設定する。Collectorサービスでは、``SPLUNK_BALLAST_SIZE_MIB`` 環境変数にこの値が設定されます。"

#: ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:79
msgid "``%PROGRAMFILES\\Splunk\\OpenTelemetry Collector\\agent_config.yaml``"
msgstr "``%PROGRAMFILES\\Splunk\\OpenTelemetry Collector\\agent_config.yaml``"

#: ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:84
msgid "Whether to install or manage Fluentd and dependencies for log collection."
msgstr "ログ収集のためにFluentdと依存関係をインストールまたは管理するかどうか。"

#: ../../gdi/opentelemetry/deployments/deployments-windows-puppet.rst:88
msgid "``%PROGRAMFILES\\Splunk\\OpenTelemetry Collector\\fluentd\\td-agent.conf``"
msgstr "``%PROGRAMFILES\\Splunk\\OpenTelemetry Collector\\fluentd\\td-agent.conf``"

#: ../../gdi/opentelemetry/deployments/otel-deployments.rst:-1
msgid "Options for deploying the Splunk Observability Cloud OpenTelemetry Collector: ECS/EC2, Fargate, Ansible, Chef, Nomad, Puppet, Salt."
msgstr "Splunk Observability Cloud OpenTelemetry Collector をデプロイするためのオプション：ECS/EC2、Fargate、Ansible、Chef、Nomad、Puppet、Salt。"

#: ../../gdi/opentelemetry/deployments/otel-deployments.rst:5
msgid "Collector deployment tools and options"
msgstr "コレクター配備ツールとオプション"

#: ../../gdi/opentelemetry/deployments/otel-deployments.rst:26
msgid "Use the following deployment and configuration management tools to automate the installation of Collector:"
msgstr "次の展開および構成管理ツールを使用して、Collector のインストールを自動化します："

#: ../../gdi/opentelemetry/deployments/otel-deployments.rst:28
msgid ":ref:`deployments-ecs-ec2`"
msgstr ":ref:`deployments-ecs-ec2`"

#: ../../gdi/opentelemetry/deployments/otel-deployments.rst:29
msgid ":ref:`deployments-fargate`"
msgstr ":ref:`deployments-fargate`"

#: ../../gdi/opentelemetry/deployments/otel-deployments.rst:30
msgid ":ref:`deployment-linux-ansible`"
msgstr ":ref:`deployment-linux-ansible`"

#: ../../gdi/opentelemetry/deployments/otel-deployments.rst:31
msgid ":ref:`deployment-windows-ansible`"
msgstr ":ref:`deployment-windows-ansible`"

#: ../../gdi/opentelemetry/deployments/otel-deployments.rst:32
msgid ":ref:`deployments-chef`"
msgstr ":ref:`deployments-chef`"

#: ../../gdi/opentelemetry/deployments/otel-deployments.rst:33
msgid ":ref:`deployments-nomad`"
msgstr ":ref:`deployments-nomad`"

#: ../../gdi/opentelemetry/deployments/otel-deployments.rst:34
msgid ":ref:`deployments-pivotal-cloudfoundry`"
msgstr ":ref:`deployments-pivotal-cloudfoundry`"

#: ../../gdi/opentelemetry/deployments/otel-deployments.rst:35
msgid ":ref:`deployment-linux-puppet`"
msgstr ":ref:`deployment-linux-puppet`"

#: ../../gdi/opentelemetry/deployments/otel-deployments.rst:36
msgid ":ref:`deployment-windows-puppet`"
msgstr ":ref:`deployment-windows-puppet`"

#: ../../gdi/opentelemetry/deployments/otel-deployments.rst:37
msgid ":ref:`deployments-salt`"
msgstr ":ref:`deployments-salt`"

#: ../../gdi/opentelemetry/discovery-mode.rst:-1
msgid "Use the discovery mode of the Splunk Distribution of OpenTelemetry Collector to detect metric sources and collect metrics automatically."
msgstr "Splunk Distribution of OpenTelemetry Collector の検出モードを使用してメトリックソースを検出し、メトリックを自動的に収集します。"

#: ../../gdi/opentelemetry/discovery-mode.rst:1
msgid "Preview: Discovery mode in Splunk Distribution of OpenTelemetry Collector"
msgstr "プレビューOpenTelemetry Collector の Splunk ディストリビューションにおけるディスカバリーモード"

#: ../../gdi/opentelemetry/discovery-mode.rst:9
msgid "Discover and configure metrics sources automatically"
msgstr "メトリクス・ソースの自動検出と構成"

#: ../../gdi/opentelemetry/discovery-mode.rst:14
msgid "Use the discovery mode of the Splunk Distribution of OpenTelemetry Collector to detect metric sources and create a configuration based on the results."
msgstr "Splunk Distribution of OpenTelemetry Collector の検出モードを使用してメトリックソースを検出し、その結果に基づいて設定を作成します。"

#: ../../gdi/opentelemetry/discovery-mode.rst:17
msgid "Discovery mode can detect several types of metric sources on the host, such as databases and servers. With this information, the Collector generates configuration you can modify and adopt, or incorporate into your exiting configuration automatically by default."
msgstr "ディスカバリー・モードは、データベースやサーバーなど、ホスト上のいくつかのタイプのメトリック・ソースを検出できる。この情報を使用して、Collector は設定を変更して採用したり、デフォルトで既存の設定に自動的に組み込むことができる設定を生成します。"

#: ../../gdi/opentelemetry/discovery-mode.rst:19
msgid "The main advantage of using discovery mode is that you don't need to manually update the OpenTelemetry Collector configuration for supported metric sources. This is helpful in environments when you deploy and activate host services dynamically or when adding a new supported target database to your infrastructure."
msgstr "ディスカバリー・モードを使用する主な利点は、サポートされているメトリック・ソース用に OpenTelemetry Collector の設定を手動で更新する必要がないことです。これは、ホストサービスを動的にデプロイしてアクティブ化する場合や、サポート対象のデータベースをインフラに新規追加する場合に役立ちます。"

#: ../../gdi/opentelemetry/discovery-mode.rst:21
msgid "Discovery mode is available starting from version 0.72.0 and higher of the Splunk Distribution of the OpenTelemetry Collector."
msgstr "ディスカバリーモードは、OpenTelemetry Collector の Splunk ディストリビューションのバージョン 0.72.0 以降で利用可能です。"

#: ../../gdi/opentelemetry/discovery-mode.rst:24
msgid "How discovery mode works"
msgstr "ディスカバリー・モードの仕組み"

#: ../../gdi/opentelemetry/discovery-mode.rst:26
msgid "When you run the Collector in discovery mode, it tests built-in configurations for supported metric receivers against endpoints discovered on your platform by observer extensions. This happens before starting the Collector service."
msgstr "Collectorをディスカバリモードで実行すると、オブザーバ拡張機能によってプラットフォーム上で検出されたエンドポイントに対して、サポートされているメトリックレシーバの組み込み設定をテストします。これはCollectorサービスを開始する前に行われます。"

#: ../../gdi/opentelemetry/discovery-mode.rst:28
msgid "For any dynamically instantiated receiver that retrieves metrics matching the success criteria, the Collector translates the discovery configuration to a receiver creator instance with the known working rules, as well as the required observer extension. See :ref:`receiver-creator-receiver` for more information. At the same time, the Collector adds the configuration to the ``metrics`` pipeline at runtime."
msgstr "成功基準に一致するメトリクスを取得する、動的にインスタンス化されたレシーバの場合、コレクタはディスカバリ構成を、必要なオブザーバ拡張と同様に、既知の作業ルールを持つレシーバ・クリエータ・インスタンスに変換します。詳しくは:ref:`receiver-creator-receiver` 。同時に、Collectorは実行時に``metrics`` パイプラインに設定を追加する。"

#: ../../gdi/opentelemetry/discovery-mode.rst:30
msgid "For any receiver that can establish a connection with a service, but not receive the expected metrics, discovery mode suggests which properties to set, or what extensions or settings to configure on the service to successfully retrieve telemetry. You can define any target-specific configuration values that are required, for example authentication information, using discovery properties to tune the discovery process."
msgstr "サービスとの接続は確立できるが、期待されるメトリクスを受信できないレシーバーに対して、ディスカバリー・モードは、どのプロパティを設定すべきか、またはどのような拡張機能や設定をサービス上で構成すれば、正常に遠隔測定を取得できるかを提案します。発見プロセスを調整するために、発見プロパティを使用して、例えば認証情報など、必要とされるターゲット固有の構成値を定義することができる。"

#: ../../gdi/opentelemetry/discovery-mode.rst:34
msgid "Supported host services and applications"
msgstr "サポートされるホスト・サービスとアプリケーション"

#: ../../gdi/opentelemetry/discovery-mode.rst:36
msgid "Discovery mode supports the following host services and applications:"
msgstr "ディスカバリー・モードは、以下のホスト・サービスとアプリケーションをサポートしている："

#: ../../gdi/opentelemetry/discovery-mode.rst:43
msgid "Service"
msgstr "サービス"

#: ../../gdi/opentelemetry/discovery-mode.rst:47
msgid "Smart Agent with collectd/mysql monitor type. See :ref:`mysql`."
msgstr "collectd/mysql モニタタイプのスマートエージェント。:ref:`mysql` を参照。"

#: ../../gdi/opentelemetry/discovery-mode.rst:50
msgid "Smart Agent with postgresql monitor type. See :ref:`postgresql`."
msgstr "postgresql モニタタイプのスマートエージェント。:ref:`postgresql` を参照。"

#: ../../gdi/opentelemetry/discovery-mode.rst:53
msgid "Smart Agent with collectd/nginx monitor type. See :ref:`nginx`."
msgstr "collectd/nginx モニタタイプのスマートエージェント。:ref:`nginx` を参照。"

#: ../../gdi/opentelemetry/discovery-mode.rst:58
msgid "Discover active metric sources"
msgstr "アクティブなメトリック・ソースを発見する"

#: ../../gdi/opentelemetry/discovery-mode.rst:60
msgid "To discover any active and supported metric sources, run the following command on the desired monitoring host:"
msgstr "アクティブでサポートされているメトリック・ソースを検出するには、目的のモニタリング・ホスト上で以下のコマンドを実行します："

#: ../../gdi/opentelemetry/discovery-mode.rst:66
msgid "The ``--dry-run`` option ensures that the resulting configuration isn't applied to the Collector at runtime. The sample configuration appears in the console as YAML instead. For example:"
msgstr "``--dry-run`` オプションを使用すると、結果の構成が実行時にコレクタに適用されないようになります。サンプルのコンフィギュレーションは、代わりにYAMLとしてコンソールに表示されます。例えば、こうだ："

#: ../../gdi/opentelemetry/discovery-mode.rst:80
msgid "When discovery mode can't access a discovered service to extract metric data, it provides instructions and the original log error message. In the example, discovery mode can't authenticate to the discovered PostgreSQL server due to missing or incorrect credentials, which you can provide through custom discovery properties. See :ref:`custom-discovery-props`."
msgstr "ディスカバリーモードがメトリックデータを抽出するために発見されたサービスにアクセスできない場合、指示とオリジナルのログエラーメッセージを提供する。この例では、発見モードが発見されたPostgreSQLサーバに認証できないのは、認証情報がないか、間違っているためです。:ref:`custom-discovery-props` を参照。"

#: ../../gdi/opentelemetry/discovery-mode.rst:82
msgid "The Linux installation script of the Collector supports the ``--discovery`` option. When turning on discovery mode through the installation script, the resulting configuration is applied directly to the ``metrics`` pipeline."
msgstr "コレクターの Linux インストールスクリプトは、``--discovery`` オプションをサポートしています。インストールスクリプトでディスカバリーモードをオンにすると、その結果の設定が``metrics`` パイプラインに直接適用されます。"

#: ../../gdi/opentelemetry/discovery-mode.rst:87
msgid "Configure or fix discovery properties"
msgstr "ディスカバリープロパティの設定または修正"

#: ../../gdi/opentelemetry/discovery-mode.rst:89
msgid "To fix most of the issues identified by discovery mode, add or edit the configuration settings suggested in the status messages. You can define the required settings in the following ways:"
msgstr "ディスカバリー・モードで特定された問題のほとんどを解決するには、ステータス・メッセージで提案されたコンフィギュレーション設定を追加または編集する。必要な設定は以下の方法で定義できます："

#: ../../gdi/opentelemetry/discovery-mode.rst:91
msgid "Use the ``--set`` option to specify settings to be used by discovery mode at runtime. For example:"
msgstr "実行時にディスカバリー・モードで使用する設定を指定するには、``--set`` オプションを使用する。例えば、こうだ："

#: ../../gdi/opentelemetry/discovery-mode.rst:97
msgid "Set the environment variable for the setting. Each discovery property has an equivalent environment variable form using ``_x<hex pair>_`` encoded delimiters for non-word characters ``[^a-zA-Z0-9_]``:"
msgstr "設定用の環境変数を設定する。``[^a-zA-Z0-9_]``各ディスカバリー・プロパティは、``_x<hex pair>_`` でエンコードされた区切り文字を使用した、同等の環境変数形式を持ちます："

#: ../../gdi/opentelemetry/discovery-mode.rst:105
msgid "Define the properties in the ``config.d/properties.discovery.yaml`` file. See :ref:`configd-file`."
msgstr "``config.d/properties.discovery.yaml`` ファイルでプロパティを定義する。:ref:`configd-file` を参照。"

#: ../../gdi/opentelemetry/discovery-mode.rst:107
msgid "When issues are detected, discovery mode suggests which parameters and environment variables you've to use to complete the missing configuration settings."
msgstr "問題が検出されると、ディスカバリー・モードは、不足しているコンフィギュレーション設定を完了するために使用しなければならないパラメータや環境変数を提案する。"

#: ../../gdi/opentelemetry/discovery-mode.rst:109
msgid "By default, the duration of the discovery process is 10 seconds, which you can increase by setting the ``SPLUNK_DISCOVERY_DURATION`` environment variable. For example: ``export SPLUNK_DISCOVERY_DURATION = 20s``."
msgstr "デフォルトでは、ディスカバリー・プロセスの時間は10秒である。これは、環境変数``SPLUNK_DISCOVERY_DURATION`` を設定することで増やすことができる。例：``export SPLUNK_DISCOVERY_DURATION = 20s``."

#: ../../gdi/opentelemetry/discovery-mode.rst:112
msgid "Customize discovery settings"
msgstr "ディスカバリー設定のカスタマイズ"

#: ../../gdi/opentelemetry/discovery-mode.rst:114
msgid "By default, discovery mode reads the built-in configuration provided by the Collector executable. You can provide your own configuration to modify settings or adjust the existing configuration in case of a partial discovery status."
msgstr "デフォルトでは、ディスカバリモードは Collector 実行可能ファイルによって提供される組み込み設定を読み取ります。設定を変更したり、部分的な発見ステータスの場合に既存の設定を調整するために、独自の設定を提供することができます。"

#: ../../gdi/opentelemetry/discovery-mode.rst:116
msgid "The priority order for discovery configuration values from lowest to highest is:"
msgstr "ディスカバリー設定値の優先順位は、低いものから高いものへ："

#: ../../gdi/opentelemetry/discovery-mode.rst:118
msgid "Default ``bundle.d`` component configuration files, built into the Collector executable"
msgstr "Collector 実行ファイルに組み込まれている、デフォルトの``bundle.d`` コンポーネント構成ファイル。"

#: ../../gdi/opentelemetry/discovery-mode.rst:119
msgid "``config.d/<receivers or extensions>/*.discovery.yaml`` component configuration files"
msgstr "``config.d/<receivers or extensions>/*.discovery.yaml`` コンポーネント設定ファイル"

#: ../../gdi/opentelemetry/discovery-mode.rst:120
msgid "``config.d/properties.discovery.yaml`` properties file content in mapped form"
msgstr "``config.d/properties.discovery.yaml`` マッピングされたプロパティ・ファイルの内容"

#: ../../gdi/opentelemetry/discovery-mode.rst:121
msgid "``config.d/properties.discovery.yaml`` properties file content using ``--set`` form"
msgstr "``config.d/properties.discovery.yaml`` ``--set`` フォームを使用したプロパティ・ファイルの内容"

#: ../../gdi/opentelemetry/discovery-mode.rst:122
msgid "``SPLUNK_DISCOVERY_<xyz>`` property environment variables available to the Collector process"
msgstr "``SPLUNK_DISCOVERY_<xyz>`` コレクタープロセスで使用可能なプロパティ環境変数"

#: ../../gdi/opentelemetry/discovery-mode.rst:123
msgid "``--set splunk.discovery.<xyz>`` property command line options"
msgstr "``--set splunk.discovery.<xyz>`` プロパティのコマンドラインオプション"

#: ../../gdi/opentelemetry/discovery-mode.rst:128
msgid "Define properties through the properties file"
msgstr "プロパティ・ファイルによるプロパティの定義"

#: ../../gdi/opentelemetry/discovery-mode.rst:130
msgid "You can override or add properties by creating the ``etc/otel/collector/config.d/properties.discovery.yaml`` file. Each mapped property in the file overrides existing discovery settings. For example:"
msgstr "``etc/otel/collector/config.d/properties.discovery.yaml`` ファイルを作成することで、プロパティを上書きしたり、追加したりすることができます。ファイル内のマッピングされた各プロパティは、既存のディスカバリー設定を上書きする。例えば、こうだ："

#: ../../gdi/opentelemetry/discovery-mode.rst:142
msgid "You can use the ``--discovery-properties=<filepath.yaml>`` argument to load discovery mode properties that you don't want to share with other Collectors. If you specify discovery properties using this argument, properties contained in ``config.d/properties.discovery.yaml`` are ignored."
msgstr "``--discovery-properties=<filepath.yaml>`` 引数を使用して、他のコレクタと共有したくないディスカバリモード プロパティをロードできる。この引数を使用してディスカバリー・プロパティを指定する場合、``config.d/properties.discovery.yaml`` に含まれるプロパティは無視される。"

#: ../../gdi/opentelemetry/discovery-mode.rst:146
msgid "Create custom configurations"
msgstr "カスタム設定の作成"

#: ../../gdi/opentelemetry/discovery-mode.rst:148
msgid "To create custom discovery configurations, follow these steps:"
msgstr "カスタム・ディスカバリー設定を作成するには、以下の手順に従ってください："

#: ../../gdi/opentelemetry/discovery-mode.rst:150
msgid "Navigate to the ``config.d`` folder in ``/etc/otel/collector/config.d`` on Linux."
msgstr "Linuxの``/etc/otel/collector/config.d`` 、``config.d`` フォルダに移動する。"

#: ../../gdi/opentelemetry/discovery-mode.rst:151
msgid "Create a ``<name>.discovery.yaml`` file and place it inside a subdirectory of ``config.d``, for example ``extensions`` or ``receivers`` where ``<name>`` is the name of the component you want to use."
msgstr "``<name>.discovery.yaml`` ファイルを作成し、``config.d`` のサブディレクトリ内に置きます。例えば、``extensions`` や``receivers`` のように、``<name>`` は使用したいコンポーネントの名前です。"

#: ../../gdi/opentelemetry/discovery-mode.rst:152
msgid "Edit the ``<name>.discovery.yaml`` files to add the desired configuration. For example, if you're adding a receiver, discovery mode loads the content inside the ``receivers`` object of the Collector configuration."
msgstr "``<name>.discovery.yaml`` ファイルを編集し、必要な設定を追加する。たとえば、Receiver を追加する場合、Discovery Mode は Collector 構成の``receivers`` オブジェクト内のコンテンツをロードします。"

#: ../../gdi/opentelemetry/discovery-mode.rst:154
msgid "Custom configurations consist of the fields you want to override in the default configuration. For example:"
msgstr "カスタム設定は、デフォルト設定でオーバーライドしたいフィールドで構成されます。例えば、こうだ："

#: ../../gdi/opentelemetry/discovery-mode.rst:174
msgid "Use the ``--dry-run`` option to check the resulting discovery configuration before using it with the Collector."
msgstr "コレクタで使用する前に、``--dry-run`` オプションを使用して、 結果のディスカバリ構成を確認する。"

#: ../../gdi/opentelemetry/discovery-mode.rst:176
msgid "See the :new-page:`Discovery receiver README file <https://github.com/signalfx/splunk-otel-collector/blob/main/internal/receiver/discoveryreceiver/README.md>` for more information."
msgstr "詳細については、:new-page:`DiscoveryレシーバーのREADMEファイル<https://github.com/signalfx/splunk-otel-collector/blob/main/internal/receiver/discoveryreceiver/README.md>` 。"

#: ../../gdi/opentelemetry/discovery-mode.rst:179
msgid "Define a custom configuration directory"
msgstr "カスタム設定ディレクトリの定義"

#: ../../gdi/opentelemetry/discovery-mode.rst:181
msgid "To define a custom directory for discovery settings, use the ``--config-dir`` option as in the example:"
msgstr "ディスカバリー設定用のカスタム・ディレクトリを定義するには、例のように``--config-dir`` オプションを使用する："

#: ../../gdi/opentelemetry/exposed-endpoints.rst:-1
msgid "Exposed ports and endpoints of the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションの公開ポートとエンドポイント。"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:5
msgid "Exposed ports and endpoints"
msgstr "露出したポートとエンドポイント"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:10
msgid "By default, the Collector exposes several endpoints. The components providing these endpoints will attempt to listen on loopback (localhost) or all interfaces (0.0.0.0), as detailed in this document."
msgstr "デフォルトでは、Collector はいくつかのエンドポイントを公開します。これらのエンドポイントを提供するコンポーネントは、このドキュメントに詳述されているように、ループバック（localhost）またはすべてのインターフェース（0.0.0.0）をリッスンしようとする。"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:12
msgid "The endpoints exposed depend on which mode the Collector is configured in. You can deactivate components, especially receivers, if they are not required for an environment."
msgstr "公開されるエンドポイントは、コレクタがどのモードで構成されているかによって異なります。コンポーネント、特にレシーバーは、その環境に必要でない場合、非アクティブにすることができる。"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:14
msgid "Check ports to make sure your environment doesn't have conflicts and that firewalls are configured properly. Ports can be changed in the YAML configuration file."
msgstr "ポートがコンフリクトしていないか、ファイアウォールが適切に設定されているかを確認する。ポートはYAML設定ファイルで変更できる。"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:16
msgid "See the table for a complete list of exposed ports and endpoints:"
msgstr "公開されているポートとエンドポイントの完全なリストは表を参照のこと："

#: ../../gdi/opentelemetry/exposed-endpoints.rst:23
msgid "<protocol>:<address>:<port>/<endpoint>"
msgstr "<protocol>:<address>:<port>/<endpoint>"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:25
msgid "``http(s)://0.0.0.0:13133/``"
msgstr "``http(s)://0.0.0.0:13133/``"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:26
msgid "Health check extension useful for collector status reporting"
msgstr "コレクターのステータス報告に役立つヘルスチェック・エクステンション"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:27
msgid "``http(s)://0.0.0.0:[6831|6832|14250|14268]/api/traces``"
msgstr "``http(s)://0.0.0.0:[6831|6832|14250|14268]/api/traces``"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:28
msgid "The :new-page:`Jaeger receiver <https://docs.splunk.com/Observability/gdi/jaeger-grpc/jaeger-grpc.html>` supporting Thrift and gRPC protocols"
msgstr ":new-page:`ThriftとgRPCプロトコルをサポートするJaegerレシーバー<https://docs.splunk.com/Observability/gdi/jaeger-grpc/jaeger-grpc.html>` "

#: ../../gdi/opentelemetry/exposed-endpoints.rst:29
msgid "``http(s)://localhost:55679/debug/[tracez|pipelinez]``"
msgstr "``http(s)://localhost:55679/debug/[tracez|pipelinez]``"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:30
msgid "zPages extension for component diagnostics"
msgstr "コンポーネント診断用zPages拡張"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:31
msgid "``http(s)://0.0.0.0:[4317|4318]``"
msgstr "``http(s)://0.0.0.0:[4317|4318]``"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:32
msgid "OTLP receiver using gRPC and http"
msgstr "gRPCとhttpを使ったOTLPレシーバー"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:33
msgid "``http(s)://0.0.0.0:6060``"
msgstr "``http(s)://0.0.0.0:6060``"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:34
msgid ":new-page:`HTTP forwarder <https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/httpforwarder>` used to receive Smart Agent ``apiUrl`` data"
msgstr ":new-page:`スマート・エージェント``apiUrl`` データの受信に使用される HTTP フォワーダー<https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/httpforwarder>` "

#: ../../gdi/opentelemetry/exposed-endpoints.rst:35
msgid "``http(s)://0.0.0.0:7276``"
msgstr "``http(s)://0.0.0.0:7276``"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:36
msgid "SAPM trace receiver"
msgstr "SAPMトレースレシーバー"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:37
msgid "``http://localhost:8888/metrics``"
msgstr "``http://localhost:8888/metrics``"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:38
msgid ":new-page:`Internal Prometheus metrics <https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/monitoring.md>`"
msgstr ":new-page:`プロメテウス内部メトリクス <https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/monitoring.md>`"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:39
msgid "``http(s)://localhost:8006``"
msgstr "``http(s)://localhost:8006``"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:40
msgid "Fluent forward receiver"
msgstr "流暢なフォワードレシーブ"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:41
msgid "``http(s)://0.0.0.0:9080``"
msgstr "``http(s)://0.0.0.0:9080``"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:42
msgid "Smart Agent receiver with :new-page:`SignalFx Forwarder <https://docs.splunk.com/Observability/gdi/signalfx-forwarder/signalfx-forwarder.html>` monitor type"
msgstr ":new-page:`SignalFx Forwarder搭載スマート・エージェント・レシーバー<https://docs.splunk.com/Observability/gdi/signalfx-forwarder/signalfx-forwarder.html>` モニタータイプ"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:43
msgid "``http(s)://0.0.0.0:9411/api/[v1|v2]/spans``"
msgstr "``http(s)://0.0.0.0:9411/api/[v1|v2]/spans``"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:44
msgid "Zipkin receiver supporting V1 and V2"
msgstr "V1、V2対応ジプキンレシーバー"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:45
msgid "``http(s)://0.0.0.0:9943``"
msgstr "``http(s)://0.0.0.0:9943``"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:46
msgid "SignalFx receiver supporting metrics and events"
msgstr "メトリクスとイベントをサポートするSignalFxレシーバー"

#: ../../gdi/opentelemetry/exposed-endpoints.rst:48
msgid "For more information, see the :new-page:`agent <https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/agent_config.yaml>` and :new-page:`gateway <https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/gateway_config.yaml>` configuration files."
msgstr "詳細については、:new-page:`エージェント<https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/agent_config.yaml>` および:new-page:`ゲートウェイ<https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/gateway_config.yaml>` 設定ファイルを参照してください。"

#: ../../gdi/opentelemetry/install-k8s.rst:-1
msgid "Describes how to install the Splunk Distribution of OpenTelemetry Collector for Kubernetes."
msgstr "OpenTelemetry Collector for Kubernetes の Splunk ディストリビューションのインストール方法について説明します。"

#: ../../gdi/opentelemetry/install-k8s.rst:5
msgid "Install the Collector for Kubernetes"
msgstr "Kubernetes用Collectorのインストール"

#: ../../gdi/opentelemetry/install-k8s.rst:10
msgid "The Splunk Distribution of OpenTelemetry Collector for Kubernetes is a Helm chart for the Splunk Distribution of OpenTelemetry Collector. Use Helm charts to define, install, and upgrade Kubernetes applications."
msgstr "Splunk Distribution of OpenTelemetry Collector for Kubernetes は、Splunk Distribution of OpenTelemetry Collector の Helm チャートです。Helmチャートを使用して、Kubernetesアプリケーションを定義、インストール、アップグレードします。"

#: ../../gdi/opentelemetry/install-k8s.rst:12
msgid "Install the chart using one of these methods:"
msgstr "以下のいずれかの方法でチャートを設置する："

#: ../../gdi/opentelemetry/install-k8s.rst:14
msgid ":ref:`Helm chart <helm-chart>`"
msgstr ":ref:`Helm chart <helm-chart>`"

#: ../../gdi/opentelemetry/install-k8s.rst:15
msgid ":ref:`Resource YAML manifests <resource-yaml-manifests>`"
msgstr ":ref:`Resource YAML manifests <resource-yaml-manifests>`"

#: ../../gdi/opentelemetry/install-k8s.rst:16
msgid ":ref:`Kubernetes Operator (Alpha) <k8s-operator>`"
msgstr ":ref:`Kubernetes Operator (Alpha) <k8s-operator>`"

#: ../../gdi/opentelemetry/install-k8s.rst:21
msgid "Install the Collector with the Helm chart"
msgstr "Helm チャートでコレクタをインストールする。"

#: ../../gdi/opentelemetry/install-k8s.rst:23
msgid "Use the Helm chart to do the following:"
msgstr "ヘルムチャートを使って以下のことを行う："

#: ../../gdi/opentelemetry/install-k8s.rst:25
msgid "Create a Kubernetes DaemonSet along with other Kubernetes objects in a Kubernetes cluster."
msgstr "Kubernetesクラスタの他のKubernetesオブジェクトと一緒にKubernetes DaemonSetを作成します。"

#: ../../gdi/opentelemetry/install-k8s.rst:26
msgid "Receive, process, and export metric, trace, and log data for Splunk Enterprise, Splunk Cloud Platform, and Splunk Observability Cloud."
msgstr "Splunk Enterprise、Splunk Cloud Platform、Splunk Observability Cloud のメトリック、トレース、ログデータの受信、処理、エクスポート。"

#: ../../gdi/opentelemetry/install-k8s.rst:29
msgid "Supported Kubernetes distributions"
msgstr "対応Kubernetesディストリビューション"

#: ../../gdi/opentelemetry/install-k8s.rst:31
msgid "The Helm chart works with default configurations of the main Kubernetes distributions. Use actively supported versions:"
msgstr "Helmチャートは、主要なKubernetesディストリビューションのデフォルト設定で動作する。積極的にサポートされているバージョンを使用する："

#: ../../gdi/opentelemetry/install-k8s.rst:33
msgid ":new-page:`Vanilla (unmodified version) Kubernetes <https://endoflife.date/kubernetes>`"
msgstr ":new-page:`バニラ（未修正版）Kubernetes <https://endoflife.date/kubernetes>`"

#: ../../gdi/opentelemetry/install-k8s.rst:34
msgid ":new-page:`Amazon Elastic Kubernetes Service <https://endoflife.date/amazon-eks>`"
msgstr ":new-page:`Amazon Elastic Kubernetes Service <https://endoflife.date/amazon-eks>`"

#: ../../gdi/opentelemetry/install-k8s.rst:35
msgid ":new-page:`Azure Kubernetes Service <https://endoflife.date/azure-kubernetes-service>`"
msgstr ":new-page:`Azure Kubernetes Service <https://endoflife.date/azure-kubernetes-service>`"

#: ../../gdi/opentelemetry/install-k8s.rst:36
msgid ":new-page:`Google Kubernetes Engine <https://endoflife.date/google-kubernetes-engine>`"
msgstr ":new-page:`Google Kubernetes Engine <https://endoflife.date/google-kubernetes-engine>`"

#: ../../gdi/opentelemetry/install-k8s.rst:37
msgid ":new-page:`Red Hat OpenShift <https://access.redhat.com/support/policy/updates/openshift#dates>`"
msgstr ":new-page:`Red Hat OpenShift <https://access.redhat.com/support/policy/updates/openshift#dates>`"

#: ../../gdi/opentelemetry/install-k8s.rst:40
msgid "Minikube. This distribution was made for local developers and is not meant to be used in production."
msgstr "ミニキューブこのディストリビューションはローカル開発者向けに作成されたもので、本番環境での使用は想定していません。"

#: ../../gdi/opentelemetry/install-k8s.rst:39
msgid "Minikube was created to spin up various past versions of Kubernetes."
msgstr "Minikubeは、過去のさまざまなバージョンのKubernetesをスピンアップするために作られた。"

#: ../../gdi/opentelemetry/install-k8s.rst:40
msgid "Minikube versions don't necessarily align with Kubernetes versions. For example, the :new-page:`Minikube v1.27.1 releases notes <https://github.com/kubernetes/minikube/releases/tag/v1.27.1>` state the default Kubernetes version was bumped to v1.25.2."
msgstr "MinikubeのバージョンとKubernetesのバージョンは必ずしも一致しない。例えば、:new-page:`Minikube v1.27.1のリリースノート<https://github.com/kubernetes/minikube/releases/tag/v1.27.1>` には、デフォルトのKubernetesのバージョンがv1.25.2に上がったと記載されている。"

#: ../../gdi/opentelemetry/install-k8s.rst:42
msgid "While the chart should work for other Kubernetes distributions, the :new-page:`values.yaml <https://github.com/signalfx/splunk-otel-collector-chart/blob/main/helm-charts/splunk-otel-collector/values.yaml>` configuration file could require additional updates."
msgstr "このチャートは他のKubernetesディストリビューションでも動作するはずだが、:new-page:`values.yaml<https://github.com/signalfx/splunk-otel-collector-chart/blob/main/helm-charts/splunk-otel-collector/values.yaml>` コンフィギュレーション・ファイルの追加更新が必要になる可能性がある。"

#: ../../gdi/opentelemetry/install-k8s.rst:47
msgid "You need the following resources to use the chart:"
msgstr "チャートを使用するには、以下のリソースが必要です："

#: ../../gdi/opentelemetry/install-k8s.rst:49
msgid ":new-page:`Helm 3 <https://helm.sh/docs/intro/install/>`. Helm 2 is not supported."
msgstr ":new-page:`ヘルム3<https://helm.sh/docs/intro/install/>`.ヘルム2には対応していない。"

#: ../../gdi/opentelemetry/install-k8s.rst:50
msgid "Administrator access to your Kubernetes cluster."
msgstr "Kubernetesクラスタへの管理者アクセス。"

#: ../../gdi/opentelemetry/install-k8s.rst:55
msgid "Prerequisites: Destination"
msgstr "前提条件目的地"

#: ../../gdi/opentelemetry/install-k8s.rst:57
msgid "The Collector for Kubernetes requires a destination: Splunk Enterprise or Splunk Cloud (``splunkPlatform``) or Splunk Observability Cloud (``splunkObservability``)."
msgstr "Kubernetes用Collectorには保存先が必要です：Splunk Enterprise または Splunk Cloud (``splunkPlatform``) または Splunk Observability Cloud (``splunkObservability``) です。"

#: ../../gdi/opentelemetry/install-k8s.rst:59
msgid "Depending on your destination, you need:"
msgstr "目的地によっては必要だ："

#: ../../gdi/opentelemetry/install-k8s.rst:61
msgid "To send data to ``splunkPlatform``:"
msgstr "``splunkPlatform`` にデータを送信する："

#: ../../gdi/opentelemetry/install-k8s.rst:63
msgid "Splunk Enterprise 8.0 or later."
msgstr "Splunk Enterprise 8.0 以降。"

#: ../../gdi/opentelemetry/install-k8s.rst:64
msgid "A minimum of one Splunk platform index ready to collect the log data. This index is used for ingesting logs."
msgstr "ログデータを収集するための最低 1 つの Splunk プラットフォームインデックスが用意されていること。このインデックスはログの取り込みに使用される。"

#: ../../gdi/opentelemetry/install-k8s.rst:65
msgid "An HTTP Event Collector (HEC) token and endpoint. See :new-page:`https://docs.splunk.com/Documentation/Splunk/8.2.0/Data/UsetheHTTPEventCollector <https://docs.splunk.com/Documentation/Splunk/8.2.0/Data/UsetheHTTPEventCollector>` and :new-page:`https://docs.splunk.com/Documentation/Splunk/8.2.0/Data/ScaleHTTPEventCollector <https://docs.splunk.com/Documentation/Splunk/8.2.0/Data/ScaleHTTPEventCollector>`."
msgstr "HTTP Event Collector (HEC) トークンとエンドポイント。:new-page:`https://docs.splunk.com/Documentation/Splunk/8.2.0/Data/UsetheHTTPEventCollector<https://docs.splunk.com/Documentation/Splunk/8.2.0/Data/UsetheHTTPEventCollector>` および:new-page:`https://docs.splunk.com/Documentation/Splunk/8.2.0/Data/ScaleHTTPEventCollector<https://docs.splunk.com/Documentation/Splunk/8.2.0/Data/ScaleHTTPEventCollector>` を参照のこと。"

#: ../../gdi/opentelemetry/install-k8s.rst:66
msgid "``splunkPlatform.endpoint``. URL to a Splunk instance, for example: ``\"http://localhost:8088/services/collector\"``."
msgstr "``splunkPlatform.endpoint``.Splunk インスタンスへの URL。例:``\"http://localhost:8088/services/collector\"``."

#: ../../gdi/opentelemetry/install-k8s.rst:67
msgid "``splunkPlatform.token``. Splunk HTTP Event Collector token."
msgstr "``splunkPlatform.token``.Splunk HTTP Event Collector トークン。"

#: ../../gdi/opentelemetry/install-k8s.rst:69
msgid "To send data to ``splunkObservability``:"
msgstr "``splunkObservability`` にデータを送信する："

#: ../../gdi/opentelemetry/install-k8s.rst:71
msgid "``splunkObservability.accessToken``. Your Splunk Observability org access token. See :ref:`admin-org-tokens`."
msgstr "``splunkObservability.accessToken``.Splunk Observability org アクセストークン。:ref:`admin-org-tokens` を参照。"

#: ../../gdi/opentelemetry/install-k8s.rst:72
msgid "``splunkObservability.realm``. Splunk realm to send telemetry data to. The default is ``us0``. See :new-page:`realms <https://dev.splunk.com/observability/docs/realms_in_endpoints/>`."
msgstr "``splunkObservability.realm``.遠隔測定データを送信する Splunk レルム。デフォルトは``us0`` 。:new-page:`レルム<https://dev.splunk.com/observability/docs/realms_in_endpoints/>` を参照のこと。"

#: ../../gdi/opentelemetry/install-k8s.rst:75
msgid "Deploy the Helm chart"
msgstr "ヘルムチャートの展開"

#: ../../gdi/opentelemetry/install-k8s.rst:77
msgid "Run the following commands to deploy the Helm chart:"
msgstr "以下のコマンドを実行して、Helmチャートをデプロイする："

#: ../../gdi/opentelemetry/install-k8s.rst:79
msgid "Add the Helm repo:"
msgstr "Helmレポを追加する："

#: ../../gdi/opentelemetry/install-k8s.rst:85
msgid "Determine your destination."
msgstr "目的地を決める。"

#: ../../gdi/opentelemetry/install-k8s.rst:87
msgid "For Splunk Observability Cloud:"
msgstr "Splunk Observability Cloudの場合："

#: ../../gdi/opentelemetry/install-k8s.rst:93
msgid "For Splunk Enterprise or Splunk Cloud:"
msgstr "Splunk Enterprise または Splunk Cloud の場合："

#: ../../gdi/opentelemetry/install-k8s.rst:99
msgid "For both Splunk Observability Cloud and Splunk Enterprise or Splunk Cloud:"
msgstr "Splunk Observability Cloud と Splunk Enterprise または Splunk Cloud の両方が対象です："

#: ../../gdi/opentelemetry/install-k8s.rst:105
msgid "Specify a namespace to deploy the chart to with the ``-n`` argument:"
msgstr "チャートを配置する名前空間を``-n`` 引数で指定する："

#: ../../gdi/opentelemetry/install-k8s.rst:113 ../../gdi/opentelemetry/kubernetes-config-advanced.rst:16 ../../gdi/opentelemetry/kubernetes-config.rst:14
msgid "The :new-page:`values.yaml <https://github.com/signalfx/splunk-otel-collector-chart/blob/main/helm-charts/splunk-otel-collector/values.yaml>` file lists all supported configurable parameters for the Helm chart, along with a detailed explanation of each parameter. :strong:`Review it to understand how to configure this chart`."
msgstr ":new-page:`values.yaml<https://github.com/signalfx/splunk-otel-collector-chart/blob/main/helm-charts/splunk-otel-collector/values.yaml>` ファイルには、Helm チャートでサポートされているすべての設定可能なパラメータと、各パラメータの詳細な説明が記載されています。:strong:`このチャートの設定方法を理解するために、` 。"

#: ../../gdi/opentelemetry/install-k8s.rst:115
msgid "You can also configure the Helm chart to support different use cases, such as trace sampling and sending data through a proxy server. See :new-page:`Examples of chart configuration <https://github.com/signalfx/splunk-otel-collector-chart/blob/main/examples/README.md>` for more information."
msgstr "また、トレースサンプリングやプロキシサーバー経由のデータ送信など、さまざまなユースケースをサポートするようにHelmチャートを設定することもできる。詳しくは:new-page:`チャート構成の例<https://github.com/signalfx/splunk-otel-collector-chart/blob/main/examples/README.md>` を参照のこと。"

#: ../../gdi/opentelemetry/install-k8s.rst:118
msgid "Configure other parameters"
msgstr "その他のパラメータの設定"

#: ../../gdi/opentelemetry/install-k8s.rst:120
msgid "You can configure the following:"
msgstr "以下の設定が可能です："

#: ../../gdi/opentelemetry/install-k8s.rst:122
msgid ":ref:`otel-kubernetes-config-distro`"
msgstr ":ref:`otel-kubernetes-config-distro`"

#: ../../gdi/opentelemetry/install-k8s.rst:123
msgid ":ref:`otel-kubernetes-config-environment`"
msgstr ":ref:`otel-kubernetes-config-environment`"

#: ../../gdi/opentelemetry/install-k8s.rst:132
msgid "Read more about :ref:`otel-kubernetes-config` and also :ref:`the advanced Kubernetes config <otel-kubernetes-config-advanced>`."
msgstr ":ref:`otel-kubernetes-config` 、また:ref:`the advanced Kubernetes config <otel-kubernetes-config-advanced>` 。"

#: ../../gdi/opentelemetry/install-k8s.rst:133
msgid "See :new-page:`examples of Helm chart configuration <https://github.com/signalfx/splunk-otel-collector-chart/blob/main/examples/README.md>` for additional chart installation examples or upgrade commands to change the default behavior."
msgstr "その他のチャートのインストール例や、デフォルトの動作を変更するためのアップグレードコマンドについては、:new-page:`Helmチャート設定例<https://github.com/signalfx/splunk-otel-collector-chart/blob/main/examples/README.md>` を参照してください。"

#: ../../gdi/opentelemetry/install-k8s.rst:134
msgid "For logs, see :ref:`otel-kubernetes-config-logs`."
msgstr "ログについては、:ref:`otel-kubernetes-config-logs` を参照。"

#: ../../gdi/opentelemetry/install-k8s.rst:137
msgid "Set Helm using a YAML file"
msgstr "YAMLファイルを使ってHelmを設定する"

#: ../../gdi/opentelemetry/install-k8s.rst:139 ../../gdi/opentelemetry/otel-commands.rst:93
msgid "You can also set Helm values as arguments using a YAML file. For example, after creating a YAML file named my_values.yaml, run the following command to deploy the Helm chart:"
msgstr "YAMLファイルを使ってHelmの値を引数として設定することもできます。たとえば、my_values.yamlという名前のYAMLファイルを作成した後、次のコマンドを実行してHelmチャートをデプロイします："

#: ../../gdi/opentelemetry/install-k8s.rst:145
msgid "See :new-page:`an example of a YAML file in GitHub <https://github.com/signalfx/splunk-otel-collector-chart/blob/main/helm-charts/splunk-otel-collector/values.yaml>`. Options include:"
msgstr "GitHub<https://github.com/signalfx/splunk-otel-collector-chart/blob/main/helm-charts/splunk-otel-collector/values.yaml>` の:new-page:`YAML ファイルの例を参照してください。オプションは以下の通り："

#: ../../gdi/opentelemetry/install-k8s.rst:147
msgid "Set ``isWindows`` to ``true`` to apply the Kubernetes cluster with Windows worker nodes."
msgstr "WindowsワーカーノードでKubernetesクラスタを適用するには、``isWindows`` を``true`` に設定します。"

#: ../../gdi/opentelemetry/install-k8s.rst:148
msgid "Set ``networkExplorer.enabled`` to ``true`` to use the default values for :ref:`splunk-otel-network-explorer <network-explorer>`."
msgstr ":ref:`splunk-otel-network-explorer <network-explorer>` のデフォルト値を使用するには、``networkExplorer.enabled`` を``true`` に設定する。"

#: ../../gdi/opentelemetry/install-k8s.rst:151
msgid "Set Prometheus metrics"
msgstr "プロメテウス・メトリクスの設定"

#: ../../gdi/opentelemetry/install-k8s.rst:153
msgid "Set the Collector to automatically scrape any pod emitting Prometheus by adding this property to the Helm chart's values YAML:"
msgstr "Helmチャートの値YAMLにこのプロパティを追加することで、Prometheusを発するポッドを自動的にスクレイピングするようにCollectorを設定します："

#: ../../gdi/opentelemetry/install-k8s.rst:160
msgid "Add this configuration in the resources file for any pods in the deployment:"
msgstr "この設定を、デプロイメント内のすべてのポッドのリソースファイルに追加します："

#: ../../gdi/opentelemetry/install-k8s.rst:172
msgid "Verify the deployment"
msgstr "配備の確認"

#: ../../gdi/opentelemetry/install-k8s.rst:174
msgid "If the chart is deployed successfully, the output displays a message informing that the Splunk Distribution of OpenTelemetry Collector for Kubernetes is being deployed in your Kubernetes cluster, the last deployment date, and the status."
msgstr "チャートが正常にデプロイされると、Splunk Distribution of OpenTelemetry Collector for Kubernetes が Kubernetes クラスターにデプロイされていることを知らせるメッセージ、最終デプロイ日、ステータスが出力されます。"

#: ../../gdi/opentelemetry/install-k8s.rst:179
msgid "Install the Collector with resource YAML manifests"
msgstr "リソースYAMLマニフェストを使用してCollectorをインストールする"

#: ../../gdi/opentelemetry/install-k8s.rst:183
msgid "To specify the configuration, you at least need to know your Splunk realm and base64-encoded access token."
msgstr "設定を指定するには、少なくとも Splunk realm と base64 エンコードされたアクセストークンが必要です。"

#: ../../gdi/opentelemetry/install-k8s.rst:185
msgid "A configuration file can contain multiple resource manifests. Each manifest applies a specific state to a Kubernetes object. The manifests must be configured for Splunk Observability Cloud only and come with all telemetry types activated for the agent, which is the default when installing the Helm chart."
msgstr "設定ファイルは複数のリソース・マニフェストを含むことができます。各マニフェストは、Kubernetesオブジェクトに特定の状態を適用します。マニフェストは Splunk Observability Cloud 専用に設定する必要があり、エージェントのすべての遠隔測定タイプが有効になっている必要があります。"

#: ../../gdi/opentelemetry/install-k8s.rst:188
msgid "Determine which manifest you want to use"
msgstr "使用するマニフェストを決定する"

#: ../../gdi/opentelemetry/install-k8s.rst:190
msgid "Download the necessary manifest files from :new-page:`the examples repository <https://github.com/signalfx/splunk-otel-collector-chart/tree/main/examples>`. Refer to the ``README`` files for more details on each example."
msgstr ":new-page:`exampleリポジトリ<https://github.com/signalfx/splunk-otel-collector-chart/tree/main/examples>` から必要なマニフェストファイルをダウンロードしてください。各例の詳細については、``README`` ファイルを参照のこと。"

#: ../../gdi/opentelemetry/install-k8s.rst:192
msgid "Determine which :ref:`otel-deployment-mode` you want to use, agent or gateway. By default, host monitoring (agent) mode is configured to send data directly to Splunk SaaS endpoints. Host monitoring (agent) mode can be reconfigured to send to a gateway."
msgstr "エージェントとゲートウェイ、どちらの:ref:`otel-deployment-mode` 。デフォルトでは、ホスト監視 (エージェント) モードは Splunk SaaS エンドポイントに直接データを送信するように設定されています。ホストモニタリング（エージェント）モードは、ゲートウェイに送信するように再設定できる。"

#: ../../gdi/opentelemetry/install-k8s.rst:195
msgid "Update the manifest"
msgstr "マニフェストの更新"

#: ../../gdi/opentelemetry/install-k8s.rst:197
msgid "Once you've decided which manifest suits you better, make the following updates:"
msgstr "どのマニフェストが自分に合っているかが決まったら、以下のアップデートを行う："

#: ../../gdi/opentelemetry/install-k8s.rst:199
msgid "In the secret.yaml manifest, update the ``splunk_observability_access_token`` data field with your base64-encoded access token."
msgstr "secret.yaml マニフェストで、``splunk_observability_access_token`` data フィールドを base64 エンコードされたアクセストークンで更新します。"

#: ../../gdi/opentelemetry/install-k8s.rst:202
msgid "Update any configmap-agent.yaml, configmap-gateway.yaml, and configmap-cluster-receiver.yaml manifest files you're going to use. Search for \"CHANGEME\" to find the values that must be updated to use the rendered manifests directly."
msgstr "使用するconfigmap-agent.yaml、configmap-gateway.yaml、configmap-cluster-receiver.yamlのマニフェストファイルを更新します。CHANGEME」を検索して、レンダリングされたマニフェストを直接使用するために更新しなければならない値を見つけます。"

#: ../../gdi/opentelemetry/install-k8s.rst:201
msgid "You need to update \"CHANGEME\" in exporter configurations to the value of the Splunk realm."
msgstr "エクスポーター設定の \"CHANGEME\" を Splunk realm の値に更新する必要があります。"

#: ../../gdi/opentelemetry/install-k8s.rst:202
msgid "You need to update \"CHANGEME\" in attribute processor configurations to the value of the cluster name."
msgstr "アトリビュート・プロセッサのコンフィギュレーションの \"CHANGEME \"をクラスタ名の値に更新する必要がある。"

#: ../../gdi/opentelemetry/install-k8s.rst:205
msgid "Apply the manifest"
msgstr "マニフェストの適用"

#: ../../gdi/opentelemetry/install-k8s.rst:207
msgid "After you've updated them, apply the manifests using ``kubectl``, as shown in the following examples."
msgstr "それらを更新したら、次の例に示すように、``kubectl`` を使用してマニフェストを適用します。"

#: ../../gdi/opentelemetry/install-k8s.rst:209
msgid "For host monitoring (agent) mode, download the :new-page:`agent-only manifest directory on GitHub <https://github.com/signalfx/splunk-otel-collector-chart/tree/main/examples/default/rendered_manifests>` for pre-rendered Kubernetes resource manifests that can be applied using the ``kubectl apply`` command after being updated with your token, realm information, and cluster name:"
msgstr "ホスト監視 (エージェント) モードでは、トークン、レルム情報、およびクラスタ名で更新された後、``kubectl apply`` コマンドを使用して適用できるプリレンダリングされた Kubernetes リソースマニフェストのために、GitHub<https://github.com/signalfx/splunk-otel-collector-chart/tree/main/examples/default/rendered_manifests>` の:new-page:`agent-only manifest ディレクトリをダウンロードします："

#: ../../gdi/opentelemetry/install-k8s.rst:215
msgid "For data forwarding (gateway) mode, download the :new-page:`gateway-only manifest directory on GitHub <https://github.com/signalfx/splunk-otel-collector-chart/tree/main/examples/collector-gateway-only/rendered_manifests>` for pre-rendered Kubernetes resource manifests that can be applied using the ``kubectl apply`` command after being updated with your token, realm information, and cluster name:"
msgstr "データ転送 (ゲートウェイ) モードの場合は、トークン、レルム情報、およびクラスター名で更新された後、``kubectl apply`` コマンドを使用して適用できるプリレンダリングされた Kubernetes リソースマニフェストのために、GitHub<https://github.com/signalfx/splunk-otel-collector-chart/tree/main/examples/collector-gateway-only/rendered_manifests>` の:new-page:`ゲートウェイ専用マニフェストディレクトリをダウンロードします："

#: ../../gdi/opentelemetry/install-k8s.rst:222
msgid "Use templates"
msgstr "テンプレートを使用する"

#: ../../gdi/opentelemetry/install-k8s.rst:224
msgid "You can create your own manifest YAML files with customized parameters using ``helm template`` command."
msgstr "``helm template`` コマンドを使用して、パラメータをカスタマイズした独自のマニフェスト YAML ファイルを作成できます。"

#: ../../gdi/opentelemetry/install-k8s.rst:230
msgid "If you prefer, you can update the values.yaml file first."
msgstr "お望みなら、values.yamlファイルを先に更新することもできる。"

#: ../../gdi/opentelemetry/install-k8s.rst:236
msgid "Manifest files will be created in your specified folder ``<rendered_manifests_dir>``."
msgstr "マニフェスト・ファイルは、指定したフォルダ``<rendered_manifests_dir>`` に作成されます。"

#: ../../gdi/opentelemetry/install-k8s.rst:239
msgid "Manifest examples"
msgstr "マニフェストの例"

#: ../../gdi/opentelemetry/install-k8s.rst:241
msgid "See the following manifest to set security constraints:"
msgstr "セキュリティ制約を設定するには、次のマニフェストを参照してください："

#: ../../gdi/opentelemetry/install-k8s.rst:250
msgid "Use the Kubernetes Operator in OpenTelemetry"
msgstr "OpenTelemetryでKubernetes Operatorを使う"

#: ../../gdi/opentelemetry/install-k8s.rst:252
msgid "You can install the Collector with an upstream Kubernetes Operator for Auto Instrumentation. This instance of the Kubernetes Operator is part of the upstream OpenTelemetry Operator project. See more at :ref:`auto-instrumentation-operator`."
msgstr "アップストリームのKubernetes Operator for Auto InstrumentationでCollectorをインストールできます。Kubernetes Operatorのこのインスタンスは、アップストリームのOpenTelemetry Operatorプロジェクトの一部です。:ref:`auto-instrumentation-operator` で詳細を見る。"

#: ../../gdi/opentelemetry/install-k8s.rst:254
msgid "The upstream Kubernetes Operator is not related to the Splunk Operator for Kubernetes, which is used to deploy and operate Splunk Enterprise deployments in a Kubernetes infrastructure."
msgstr "アップストリームの Kubernetes Operator は、Kubernetes インフラストラクチャに Splunk Enterprise デプロイメントをデプロイして運用するために使用する Splunk Operator for Kubernetes とは関係ありません。"

#: ../../gdi/opentelemetry/install-k8s.rst:257
msgid "Splunk Distribution for the Kubernetes Operator (Alpha)"
msgstr "Kubernetes オペレータ向け Splunk ディストリビューション（アルファ版）"

#: ../../gdi/opentelemetry/install-k8s.rst:261
msgid "This project is Alpha. Do not use in production."
msgstr "このプロジェクトはアルファだ。本番では使用しないでください。"

#: ../../gdi/opentelemetry/install-k8s.rst:263
msgid "The Splunk Distribution of OpenTelemetry Collector for Kubernetes Operator is the Splunk Observability Cloud implementation of a Kubernetes Operator, and it helps deploy and manage the Splunk Distribution of OpenTelemetry Collector for Kubernetes. See the :new-page:`README file <https://github.com/signalfx/splunk-otel-collector-operator>` in GitHub for installation instructions."
msgstr "Splunk Distribution of OpenTelemetry Collector for Kubernetes Operator は、Kubernetes Operator の Splunk Observability Cloud 実装であり、Splunk Distribution of OpenTelemetry Collector for Kubernetes のデプロイと管理を支援します。インストール方法については、GitHubの:new-page:`READMEファイル<https://github.com/signalfx/splunk-otel-collector-operator>` 。"

#: ../../gdi/opentelemetry/install-k8s.rst:267
msgid "After installing the package, you can:"
msgstr "パッケージをインストールしたら、次のことができる："

#: ../../gdi/opentelemetry/install-k8s.rst:269
msgid ":ref:`otel-kubernetes-config`"
msgstr ":ref:`otel-kubernetes-config`"

#: ../../gdi/opentelemetry/install-k8s.rst:270
msgid ":ref:`apm`"
msgstr ":ref:`apm`"

#: ../../gdi/opentelemetry/install-linux.rst:-1
msgid "Describes how to install the Splunk Distribution of OpenTelemetry Collector for Linux using the script or deployment tools."
msgstr "OpenTelemetry Collector for Linux の Splunk ディストリビューションをスクリプトまたは配置ツールを使用してインストールする方法について説明します。"

#: ../../gdi/opentelemetry/install-linux.rst:5
msgid "Install the Collector for Linux with the installer script"
msgstr "インストーラスクリプトを使用して Linux 用コレクタをインストールします。"

#: ../../gdi/opentelemetry/install-linux.rst:10
msgid "The Splunk Distribution of OpenTelemetry Collector for Linux is a package that provides integrated collection and forwarding for all data types."
msgstr "OpenTelemetry Collector for Linux の Splunk ディストリビューションは、すべてのデータタイプに対して統合された収集と転送を提供するパッケージです。"

#: ../../gdi/opentelemetry/install-linux.rst:12
msgid "Install the package using one of these methods:"
msgstr "以下のいずれかの方法でパッケージをインストールする："

#: ../../gdi/opentelemetry/install-linux.rst:14
msgid ":ref:`Use the installer script <linux-scripts>`"
msgstr ":ref:`Use the installer script <linux-scripts>`"

#: ../../gdi/opentelemetry/install-linux.rst:15
msgid ":ref:`Use deployment and configuration management tools <linux-deployments>`"
msgstr ":ref:`Use deployment and configuration management tools <linux-deployments>`"

#: ../../gdi/opentelemetry/install-linux.rst:16
msgid ":ref:`Install the Collector for Linux manually <linux-manual>`"
msgstr ":ref:`Install the Collector for Linux manually <linux-manual>`"

#: ../../gdi/opentelemetry/install-linux.rst:25
msgid "Amazon Linux: 2, 2023. Log collection with Fluentd is not currently supported for Amazon Linux 2023."
msgstr "Amazon Linux: 2, 2023.Fluentdによるログ収集は、現在Amazon Linux 2023ではサポートされていません。"

#: ../../gdi/opentelemetry/install-linux.rst:28
msgid "SUSE: 12, 15 for versions v0.34.0 or higher. Log collection with Fluentd is not currently supported."
msgstr "SUSE: 12、15（v0.34.0 以降）。Fluentdによるログ収集は現在サポートされていません。"

#: ../../gdi/opentelemetry/install-linux.rst:31
msgid "The installer script deploys and configures these elements:"
msgstr "インストーラ・スクリプトは、これらの要素を配備し、設定する："

#: ../../gdi/opentelemetry/install-linux.rst:33
msgid "The Splunk Distribution of OpenTelemetry Collector for Linux"
msgstr "Linux 用 OpenTelemetry Collector の Splunk ディストリビューション"

#: ../../gdi/opentelemetry/install-linux.rst:34
msgid "Fluentd, using the td-agent. See :ref:`fluentd-receiver` for more information"
msgstr "td-agentを使ったFluentd。詳細は:ref:`fluentd-receiver` を参照。"

#: ../../gdi/opentelemetry/install-linux.rst:36 ../../gdi/opentelemetry/install-windows.rst:62
msgid "To install the package using the installer script, follow these steps:"
msgstr "インストーラー・スクリプトを使用してパッケージをインストールするには、以下の手順に従ってください："

#: ../../gdi/opentelemetry/install-linux.rst:38
msgid "Ensure you have systemd, ``curl`` and ``sudo`` installed."
msgstr "systemd、``curl`` 、``sudo`` がインストールされていることを確認する。"

#: ../../gdi/opentelemetry/install-linux.rst:39
msgid "Download and execute the installer script."
msgstr "インストーラ・スクリプトをダウンロードして実行する。"

#: ../../gdi/opentelemetry/install-linux.rst:40
msgid "Replace the following variables for your environment:"
msgstr "以下の変数を環境に合わせて置き換えてください："

#: ../../gdi/opentelemetry/install-linux.rst:42
msgid "``SPLUNK_REALM``: This is the Realm to send data to. The default is ``us0``. See :new-page:`realms <https://dev.splunk.com/observability/docs/realms_in_endpoints/>`."
msgstr "``SPLUNK_REALM``:データを送信するレルム。デフォルトは``us0`` 。:new-page:`レルム<https://dev.splunk.com/observability/docs/realms_in_endpoints/>` を参照のこと。"

#: ../../gdi/opentelemetry/install-linux.rst:43
msgid "``SPLUNK_MEMORY_TOTAL_MIB``: This is the total allocated memory in mebibytes (MiB). For example, ``512`` allocates 512 MiB (500 x 2^20 bytes) of memory."
msgstr "``SPLUNK_MEMORY_TOTAL_MIB``:メビバイト(MiB)単位の総割り当てメモリ。例えば、``512`` は512MiB（500×2^20バイト）のメモリを割り当てる。"

#: ../../gdi/opentelemetry/install-linux.rst:44 ../../gdi/opentelemetry/install-windows.rst:68
msgid "``SPLUNK_ACCESS_TOKEN``: This is the base64-encoded access token for authenticating data ingest requests. See :ref:`admin-org-tokens`."
msgstr "``SPLUNK_ACCESS_TOKEN``:データ取り込みリクエストを認証するための、base64エンコードされたアクセストークンです。:ref:`admin-org-tokens` を参照。"

#: ../../gdi/opentelemetry/install-linux.rst:54
msgid "Run additional script options"
msgstr "スクリプトの追加オプションを実行する"

#: ../../gdi/opentelemetry/install-linux.rst:56
msgid "To display additional configuration options supported by the script, use the ``-h`` flag."
msgstr "スクリプトがサポートする追加設定オプションを表示するには、``-h`` フラグを使用する。"

#: ../../gdi/opentelemetry/install-linux.rst:64 ../../gdi/opentelemetry/install-windows.rst:79
msgid "Configure memory allocation"
msgstr "メモリ割り当ての設定"

#: ../../gdi/opentelemetry/install-linux.rst:66
msgid "To configure memory allocation, change the ``--memory`` parameter. By default, this parameter is set to 512 MiB, or 500 x 2^20 bytes, of memory. Increase this setting to allocate more memory, as shown in the following example."
msgstr "メモリ割り当てを設定するには、``--memory`` パラメータを変更する。デフォルトでは、このパラメータは512MiB（500×2^20バイト）のメモリーに設定されている。次の例に示すように、より多くのメモリを割り当てるには、この設定を大きくする。"

#: ../../gdi/opentelemetry/install-linux.rst:75 ../../gdi/opentelemetry/install-windows-manual.rst:33 ../../gdi/opentelemetry/install-windows.rst:92
msgid "Configure proxy settings"
msgstr "プロキシ設定"

#: ../../gdi/opentelemetry/install-linux.rst:77 ../../gdi/opentelemetry/install-windows-manual.rst:35 ../../gdi/opentelemetry/install-windows.rst:94
msgid "To configure proxy settings to install and run the OpenTelemetry Collector, see :ref:`configure-proxy-collector`."
msgstr "OpenTelemetry Collector をインストールして実行するためのプロキシ設定を行うには、:ref:`configure-proxy-collector` を参照してください。"

#: ../../gdi/opentelemetry/install-linux.rst:80
msgid "Use configured repos"
msgstr "設定されたレポを使用する"

#: ../../gdi/opentelemetry/install-linux.rst:82
msgid "By default, apt/yum/zypper repo definition files are created to download the package and Fluentd deb/rpm packages from :new-page:`https://splunk.jfrog.io/splunk <https://splunk.jfrog.io/splunk>` and :new-page:`https://packages.treasuredata.com <https://packages.treasuredata.com>`, respectively."
msgstr "デフォルトでは、apt/yum/zypperのレポ定義ファイルが作成され、それぞれ:new-page:`https://splunk.jfrog.io/splunk<https://splunk.jfrog.io/splunk>` と:new-page:`https://packages.treasuredata.com<https://packages.treasuredata.com>` からパッケージとFluentdのdeb/rpmパッケージをダウンロードします。"

#: ../../gdi/opentelemetry/install-linux.rst:85
msgid "To skip these steps and use configured repos on the target system that provide the ``splunk-otel-collector`` and ``td-agent`` deb/rpm packages, specify the ``--skip-collector-repo`` or ``--skip-fluentd-repo`` options. For example:"
msgstr "これらの手順を省略し、``splunk-otel-collector`` および``td-agent`` deb/rpm パッケージを提供するターゲット・システム上の設定済みレポを使用するには、``--skip-collector-repo`` または``--skip-fluentd-repo`` オプションを指定します。例えば、こうだ："

#: ../../gdi/opentelemetry/install-linux.rst:96
msgid "Configure Fluentd"
msgstr "Fluentdの設定"

#: ../../gdi/opentelemetry/install-linux.rst:101
msgid "By default, the Fluentd service is installed and configured to forward log events with the ``@SPLUNK`` label to the package, which then sends these events to the HEC ingest endpoint determined by the ``--realm <SPLUNK_REALM>`` option. For example, ``https://ingest.<SPLUNK_REALM>.signalfx.com/v1/log``."
msgstr "デフォルトでは、Fluentd サービスはインストールされ、``@SPLUNK`` ラベルのログイベントをパッケージに転送するように設定され、パッケージは``--realm <SPLUNK_REALM>`` オプションで決定された HEC インジェストエンドポイントにこれらのイベントを送ります。例えば、``https://ingest.<SPLUNK_REALM>.signalfx.com/v1/log`` 。"

#: ../../gdi/opentelemetry/install-linux.rst:103
msgid "The following Fluentd plugins are also installed:"
msgstr "以下のFluentdプラグインもインストールされています："

#: ../../gdi/opentelemetry/install-linux.rst:105
msgid "``capng_c`` for activating Linux capabilities."
msgstr "``capng_c`` Linuxの機能を有効にする。"

#: ../../gdi/opentelemetry/install-linux.rst:106
msgid "``fluent-plugin-systemd`` for systemd journal log collection."
msgstr "``fluent-plugin-systemd`` systemd ジャーナル・ログ収集用。"

#: ../../gdi/opentelemetry/install-linux.rst:108
msgid "Additionally, the following dependencies are installed as prerequisites for the Fluentd plugins:"
msgstr "さらに、Fluentd プラグインの前提条件として、以下の依存関係がインストールされます："

#: ../../gdi/opentelemetry/install-linux.rst:110
msgid "Debian-based systems:"
msgstr "Debianベースのシステム："

#: ../../gdi/opentelemetry/install-linux.rst:112
msgid "build-essential"
msgstr "build-essential"

#: ../../gdi/opentelemetry/install-linux.rst:113
msgid "libcap-ng0"
msgstr "libcap-ng0"

#: ../../gdi/opentelemetry/install-linux.rst:114
msgid "libcap-ng-dev"
msgstr "libcap-ng-dev"

#: ../../gdi/opentelemetry/install-linux.rst:115
msgid "pkg-config"
msgstr "pkg-config"

#: ../../gdi/opentelemetry/install-linux.rst:117
msgid "RPM-based systems:"
msgstr "RPMベースのシステム："

#: ../../gdi/opentelemetry/install-linux.rst:119
msgid "Development Tools"
msgstr "開発ツール"

#: ../../gdi/opentelemetry/install-linux.rst:120
msgid "libcap-ng"
msgstr "libcap-ng"

#: ../../gdi/opentelemetry/install-linux.rst:121
msgid "libcap-ng-devel"
msgstr "libcap-ng-devel"

#: ../../gdi/opentelemetry/install-linux.rst:122
msgid "pkgconfig"
msgstr "pkgconfig"

#: ../../gdi/opentelemetry/install-linux.rst:124
msgid "You can specify the following parameters to configure the package to send log events to a custom Splunk HTTP Event Collector (HEC) endpoint URL:"
msgstr "以下のパラメータを指定して、カスタム Splunk HTTP Event Collector (HEC) エンドポイント URL にログイベントを送信するようにパッケージを設定できます："

#: ../../gdi/opentelemetry/install-linux.rst:126
msgid "``hec-url = \"<URL>\"``"
msgstr "``hec-url = \"<URL>\"``"

#: ../../gdi/opentelemetry/install-linux.rst:127
msgid "``hec-token = \"<TOKEN>\"``"
msgstr "``hec-token = \"<TOKEN>\"``"

#: ../../gdi/opentelemetry/install-linux.rst:129
msgid "HEC lets you send data and application events to a Splunk deployment over the HTTP and Secure HTTP (HTTPS) protocols. See :new-page:`Set up and use HTTP Event Collector in Splunk Web <https://docs.splunk.com/Documentation/Splunk/8.2.1/Data/UsetheHTTPEventCollector>.`"
msgstr "HEC を使用すると、HTTP および Secure HTTP (HTTPS) プロトコルで Splunk デプロイメントにデータとアプリケーションイベントを送信できます。:new-page:`Set up and use HTTP Event Collector in Splunk Web <https://docs.splunk.com/Documentation/Splunk/8.2.1/Data/UsetheHTTPEventCollector> を参照してください。`"

#: ../../gdi/opentelemetry/install-linux.rst:131
msgid "The main Fluentd configuration is installed to ``/etc/otel/collector/fluentd/fluent.conf``. Custom Fluentd source configuration files can be added to the ``/etc/otel/collector/fluentd/conf.d`` directory after installation."
msgstr "Fluentd の主な設定は``/etc/otel/collector/fluentd/fluent.conf`` にインストールされます。カスタム Fluentd ソース設定ファイルは、インストール後に``/etc/otel/collector/fluentd/conf.d`` ディレクトリに追加できます。"

#: ../../gdi/opentelemetry/install-linux.rst:133 ../../gdi/opentelemetry/install-windows.rst:122
msgid "Note the following:"
msgstr "次のことに注意してほしい："

#: ../../gdi/opentelemetry/install-linux.rst:135
msgid "In this directory, all files with the .conf extension are automatically included by Fluentd."
msgstr "このディレクトリでは、.conf という拡張子を持つすべてのファイルが、Fluentd によって自動的にインクルードされます。"

#: ../../gdi/opentelemetry/install-linux.rst:136
msgid "The td-agent user must have permissions to access the configuration files and the paths defined within."
msgstr "td-agentユーザーは、コンフィギュレーション・ファイルとその中に定義されたパスにアクセスする権限を持っていなければならない。"

#: ../../gdi/opentelemetry/install-linux.rst:137
msgid "By default, Fluentd is configured to collect systemd journal log events from ``/var/log/journal``."
msgstr "デフォルトでは、Fluentd は systemd ジャーナルログイベントを``/var/log/journal`` から収集するように設定されています。"

#: ../../gdi/opentelemetry/install-linux.rst:139
msgid "After any configuration modification, run ``sudo systemctl restart td-agent`` to restart the td-agent service."
msgstr "設定を変更したら、``sudo systemctl restart td-agent`` を実行して td-agent サービスを再起動する。"

#: ../../gdi/opentelemetry/install-linux.rst:141
msgid "If the td-agent package is upgraded after initial installation, you might need to set the Linux capabilities for the new version by performing the following steps for td-agent versions 4.1 or later:"
msgstr "初回インストール後にtd-agentパッケージがアップグレードされた場合、td-agentバージョン4.1以降では、以下の手順で新しいバージョンのLinux機能を設定する必要があるかもしれません："

#: ../../gdi/opentelemetry/install-linux.rst:143
msgid "Check for the activated capabilities:"
msgstr "活性化された能力をチェックする："

#: ../../gdi/opentelemetry/install-linux.rst:153
msgid "If the output from the previous command does not include ``dac_override`` and ``dac_read_search`` as shown above, run the following commands:"
msgstr "先のコマンドの出力に、上記のように``dac_override`` と``dac_read_search`` が含まれていない場合は、以下のコマンドを実行する："

#: ../../gdi/opentelemetry/install-linux.rst:163
msgid "If you already installed Fluentd on a host, install the Splunk OTel Collector without Fluentd using the ``--without-fluentd`` option. For more information, see :ref:`otel-configuration`."
msgstr "ホストに既に Fluentd をインストールしている場合は、``--without-fluentd`` オプションを使用して、Fluentd なしで Splunk OTel Collector をインストールします。詳細は:ref:`otel-configuration` を参照。"

#: ../../gdi/opentelemetry/install-linux.rst:168
msgid "Configure automatic instrumentation for Java"
msgstr "Javaの自動インスツルメンテーションを設定する"

#: ../../gdi/opentelemetry/install-linux.rst:169
msgid "You can also automatically instrument your Java applications along with the Collector installation. Auto instrumentation removes the need to install and configure the Java agent separately. See :ref:`auto-instrumentation-java` for the installation instructions. For more information on Java instrumentation, see :ref:`get-started-java`."
msgstr "Collectorのインストールと同時に、Javaアプリケーションを自動的にインスツルメンテーションすることもできます。自動インストルメンテーションにより、Javaエージェントを個別にインストールして構成する必要がなくなる。取り付け方法は:ref:`auto-instrumentation-java` を参照。Javaインスツルメンテーションの詳細については、:ref:`get-started-java` を参照のこと。"

#: ../../gdi/opentelemetry/install-linux.rst:174
msgid "Install the Collector using deployment tools"
msgstr "デプロイツールを使用してコレクタをインストールする"

#: ../../gdi/opentelemetry/install-linux.rst:176 ../../gdi/opentelemetry/install-windows.rst:149
msgid "Splunk offers the configuration management options described in this section."
msgstr "Splunk はこのセクションで説明する設定管理オプションを提供します。"

#: ../../gdi/opentelemetry/install-linux.rst:185
msgid "Available for Prometheus only."
msgstr "プロメテウスのみで使用可能。"

#: ../../gdi/opentelemetry/install-linux.rst:187
msgid "Splunk provides a task definition to deploy the Splunk Distribution of OpenTelemetry Collector to ECS EC2. The task definition is a text file, in JSON format, that describes one or more containers that form your application. See :ref:`deployments-ecs-ec2` for the installation instructions."
msgstr "Splunk は、Splunk Distribution of OpenTelemetry Collector を ECS EC2 にデプロイするためのタスク定義を提供している。タスク定義はJSON形式のテキストファイルで、アプリケーションを構成する1つまたは複数のコンテナを記述する。取り付け方法は:ref:`deployments-ecs-ec2` を参照。"

#: ../../gdi/opentelemetry/install-linux.rst:195
msgid "Available for Prometheus only. Not yet available for Amazon EKS."
msgstr "プロメテウスのみで使用可能。Amazon EKSではまだ利用できない。"

#: ../../gdi/opentelemetry/install-linux.rst:197
msgid "Splunk provides a guided setup to deploy the Splunk Distribution of OpenTelemetry Collector on Amazon Fargate as a sidecar (additional container) to Amazon ECS tasks. See :ref:`deployments-fargate` for the installation instructions."
msgstr "Splunk は、Amazon ECS タスクのサイドカー (追加コンテナ) として Amazon Fargate に OpenTelemetry Collector の Splunk Distribution をデプロイするためのガイド付きセットアップを提供します。取り付け方法は:ref:`deployments-fargate` を参照。"

#: ../../gdi/opentelemetry/install-linux.rst:203
msgid "Splunk provides an Ansible role that installs the package configured to collect data (metrics, traces, and logs) from Linux machines and send that data to Splunk Observability Cloud. See :ref:`deployment-linux-ansible` for the instructions to download and customize the role."
msgstr "Splunk は、Linux マシンからデータ (メトリクス、トレース、ログ) を収集し、そのデータを Splunk Observability Cloud に送信するように構成されたパッケージをインストールする Ansible ロールを提供します。ロールをダウンロードしてカスタマイズする手順については、:ref:`deployment-linux-ansible` を参照してください。"

#: ../../gdi/opentelemetry/install-linux.rst:209 ../../gdi/opentelemetry/install-windows.rst:161
msgid "Splunk provides a cookbook to install the Collector using Chef. See :ref:`deployments-chef` for the installation instructions."
msgstr "Splunk は Chef を使って Collector をインストールするためのクックブックを提供しています。取り付け方法は:ref:`deployments-chef` を参照。"

#: ../../gdi/opentelemetry/install-linux.rst:215
msgid "The Splunk Distribution of OpenTelemetry Collector for Heroku is a buildpack for the Collector. The buildpack installs and runs the Collector on a Dyno to receive, process, and export metric and trace data for Splunk Observability Cloud. See :new-page:`Heroku <https://docs.splunk.com/Observability/gdi/heroku/heroku.html>` for the steps to install the buildpack."
msgstr "OpenTelemetry Collector for Heroku の Splunk ディストリビューションは、Collector 用のビルドパックです。この buildpack は、Dyno に Collector をインストールして実行し、Splunk Observability Cloud のメトリックデータとトレースデータを受信、処理、エクスポートします。buildpackをインストールする手順については、:new-page:`Heroku<https://docs.splunk.com/Observability/gdi/heroku/heroku.html>` を参照してください。"

#: ../../gdi/opentelemetry/install-linux.rst:221
msgid "Use Nomad to to deploy the Collector. See :ref:`deployments-nomad` for the installation instructions."
msgstr "コレクターの配置には Nomad を使用します。取り付け方法は:ref:`deployments-nomad` を参照。"

#: ../../gdi/opentelemetry/install-linux.rst:228
msgid "You can use one of these three options to deploy the Collector with Pivotal Cloud Foundry (PCF):"
msgstr "Pivotal Cloud Foundry（PCF）でCollectorをデプロイするには、これら3つのオプションのいずれかを使用できます："

#: ../../gdi/opentelemetry/install-linux.rst:230
msgid "Collector standalone deployment."
msgstr "コレクターのスタンドアロン展開。"

#: ../../gdi/opentelemetry/install-linux.rst:231
msgid "Collector as a sidecar to your app."
msgstr "アプリのサイドカーとしてのコレクター。"

#: ../../gdi/opentelemetry/install-linux.rst:232
msgid "Tanzu Tile."
msgstr "丹生瓦。"

#: ../../gdi/opentelemetry/install-linux.rst:234
msgid "See more in :ref:`deployments-pivotal-cloudfoundry`."
msgstr ":ref:`deployments-pivotal-cloudfoundry` でもっと見る。"

#: ../../gdi/opentelemetry/install-linux.rst:240
msgid "Splunk provides a Puppet module to install and configure the package. A module is a collection of resources, classes, files, definition, and templates. See :ref:`deployment-linux-puppet` for the instructions to download and customize the module."
msgstr "Splunk は、パッケージのインストールと設定を行う Puppet モジュールを提供しています。モジュールは、リソース、クラス、ファイル、定義、テンプレートの集まりです。モジュールのダウンロードとカスタマイズ方法については、:ref:`deployment-linux-puppet` をご覧ください。"

#: ../../gdi/opentelemetry/install-linux.rst:246
msgid "Splunk provides a Salt formula to install and configure the Collector. See :ref:`deployments-salt` for the instructions."
msgstr "Splunk は、Collector をインストールして設定するための Salt 式を提供しています。手順は:ref:`deployments-salt` 。"

#: ../../gdi/opentelemetry/install-linux.rst:251
msgid "After you've installed the package, you can perform these actions:"
msgstr "パッケージをインストールした後、以下の操作を実行できる："

#: ../../gdi/opentelemetry/install-linux-manual.rst:284 ../../gdi/opentelemetry/install-linux.rst:253
msgid ":ref:`Configure the Collector <otel-configuration>`."
msgstr ":ref:`Configure the Collector <otel-configuration>`."

#: ../../gdi/opentelemetry/install-linux-manual.rst:285 ../../gdi/opentelemetry/install-linux.rst:254
msgid "Use :ref:`Infrastructure Monitoring <get-started-infrastructure>` to track the health of your infrastructure."
msgstr ":ref:`Infrastructure Monitoring <get-started-infrastructure>` を使って、インフラの健全性を追跡しよう。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:286 ../../gdi/opentelemetry/install-linux.rst:255
msgid "Use :ref:`APM <get-started-apm>` to monitor the performance of applications."
msgstr ":ref:`APM <get-started-apm>` 、アプリケーションのパフォーマンスを監視する。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:287 ../../gdi/opentelemetry/install-linux.rst:256
msgid "Use :ref:`Log Observer Connect <logs-intro-logconnect>` to analyze log events and troubleshoot issues with your services."
msgstr ":ref:`Log Observer Connect <logs-intro-logconnect>` を使用して、ログイベントを分析し、サービスの問題をトラブルシューティングします。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:-1
msgid "Describes how to install the Splunk Distribution of OpenTelemetry Collector for Linux manually."
msgstr "OpenTelemetry Collector for Linux の Splunk ディストリビューションを手動でインストールする方法について説明します。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:6
msgid "Install the Collector for Linux manually"
msgstr "Linux用Collectorを手動でインストールする"

#: ../../gdi/opentelemetry/install-linux-manual.rst:11
msgid "The Splunk Distribution of OpenTelemetry Collector for Linux is a package that provides integrated collection and forwarding for all data types. To install the package manually, read this doc."
msgstr "OpenTelemetry Collector for Linux の Splunk ディストリビューションは、すべてのデータタイプに対して統合された収集と転送を提供するパッケージです。パッケージを手動でインストールするには、このドキュメントを読んでください。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:13
msgid "You can also install the package using :ref:`the installer script <linux-scripts>` or :ref:`deployment and configuration management tools <linux-deployments>`."
msgstr ":ref:`the installer script <linux-scripts>` または:ref:`deployment and configuration management tools <linux-deployments>` を使ってパッケージをインストールすることもできます。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:15
msgid "Splunk offers the following manual configuration options:"
msgstr "Splunk には以下の手動設定オプションがあります："

#: ../../gdi/opentelemetry/install-linux-manual.rst:17
msgid ":ref:`linux-docker`"
msgstr ":ref:`linux-docker`"

#: ../../gdi/opentelemetry/install-linux-manual.rst:18
msgid ":ref:`linux-packages`"
msgstr ":ref:`linux-packages`"

#: ../../gdi/opentelemetry/install-linux-manual.rst:19
msgid ":ref:`linux-binary-file`"
msgstr ":ref:`linux-binary-file`"

#: ../../gdi/opentelemetry/install-linux-manual.rst:20
msgid ":ref:`linux-tar`"
msgstr ":ref:`linux-tar`"

#: ../../gdi/opentelemetry/install-linux-manual.rst:25 ../../gdi/opentelemetry/security.rst:90
msgid "Permissions"
msgstr "アクセス許可"

#: ../../gdi/opentelemetry/install-linux-manual.rst:27
msgid "You need at least these capabilities to allow the Collector to run without root permissions, regardless of the user:"
msgstr "ユーザーに関係なく、root権限なしでCollectorを実行できるようにするには、少なくともこれらの機能が必要です："

#: ../../gdi/opentelemetry/install-linux-manual.rst:29
msgid "``cap_dac_read_search``: Allows to bypass file read permission checks, and directory read and execute permission checks."
msgstr "``cap_dac_read_search``:ファイルの読み取り権限チェック、およびディレクトリの読み取りと実行の権限チェックをバイパスできるようにする。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:30
msgid "``cap_sys_ptrace``: Allows to trace, manage, and transfer data for arbitrary processes."
msgstr "``cap_sys_ptrace``:任意のプロセスのトレース、管理、データ転送を可能にする。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:32
msgid "Learn more about :new-page:`these recommended capabilities <https://man7.org/linux/man-pages/man7/capabilities.7.html>`."
msgstr ":new-page:`、これらの推奨能力について詳しくは<https://man7.org/linux/man-pages/man7/capabilities.7.html>` 。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:36
msgid "Your systems might require higher or more custom permissions."
msgstr "あなたのシステムには、より高い、またはより多くのカスタムパーミッションが必要かもしれません。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:38
msgid "If you already have ``setcap/libcap2`` installed, the installer script will set these permissions for you. If you don't, use the following ``setcap`` command to install the permissions:"
msgstr "すでに``setcap/libcap2`` がインストールされている場合は、インストーラー・スクリプトがこれらのパーミッションを設定します。そうでない場合は、以下の``setcap`` コマンドを使用してパーミッションをインストールしてください："

#: ../../gdi/opentelemetry/install-linux-manual.rst:44
msgid "To set custom permissions after the Collector has been installed, use:"
msgstr "コレクターのインストール後にカスタムパーミッションを設定するには、以下を使用します："

#: ../../gdi/opentelemetry/install-linux-manual.rst:55
msgid "The Linux docker image of the Splunk Distribution of OpenTelemetry Collector contains a multiarch manifest that specifies the images for AMD64, ARM64, and ppc64le architectures. Docker uses this manifest to download the correct image for the target platform."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションの Linux docker イメージには、AMD64、ARM64、ppc64le アーキテクチャ用のイメージを指定する multiarch マニフェストが含まれています。Dockerはこのマニフェストを使用して、ターゲットプラットフォーム用の正しいイメージをダウンロードします。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:57
msgid "Run the following command to install the package using Docker:"
msgstr "以下のコマンドを実行して、Dockerを使ってパッケージをインストールする："

#: ../../gdi/opentelemetry/install-linux-manual.rst:69
msgid "The following list provides more information on the ``docker run`` command options:"
msgstr "以下のリストは、``docker run`` コマンド・オプションの詳細である："

#: ../../gdi/opentelemetry/install-linux-manual.rst:71
msgid "``--rm`` automatically removes the container when it exits."
msgstr "``--rm`` は、コンテナが終了すると自動的に削除される。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:72
msgid "``-e`` sets simple (non-array) environment variables in the container you're running, or overwrite variables that are defined in the Dockerfile of the image you're running."
msgstr "``-e`` は、実行中のコンテナの単純な（配列でない）環境変数を設定したり、実行中のイメージのDockerfileで定義されている変数を上書きしたりします。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:73
msgid "``-p`` publishes a container's port(s) to the host."
msgstr "``-p`` コンテナのポートをホストに公開する。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:75
msgid "Run the following command to run an interactive bash shell on the container and see the status of the Collector:"
msgstr "以下のコマンドを実行して、コンテナ上で対話型の bash シェルを実行し、Collector のステータスを確認する："

#: ../../gdi/opentelemetry/install-linux-manual.rst:81
msgid "See :new-page:`docker-compose.yml <https://github.com/signalfx/splunk-otel-collector/blob/main/examples/docker-compose/docker-compose.yml>` in GitHub to download a ``docker-compose`` example."
msgstr "``docker-compose`` のサンプルをダウンロードするには、GitHub の:new-page:`docker-compose.yml<https://github.com/signalfx/splunk-otel-collector/blob/main/examples/docker-compose/docker-compose.yml>` を参照のこと。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:84
msgid "Ensure that ``ReadonlyRootFileSystem`` is set to ``true`` as the collector needs to write to the container file system on startup."
msgstr "コレクタは起動時にコンテナファイルシステムに書き込む必要があるため、``ReadonlyRootFileSystem`` が``true`` に設定されていることを確認する。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:89
msgid "Create a custom Docker configuration"
msgstr "カスタムDockerコンフィギュレーションの作成"

#: ../../gdi/opentelemetry/install-linux-manual.rst:91
msgid "You can provide a custom configuration file instead of the default configuration file. Use the environment variable ``SPLUNK_CONFIG`` or the ``--config`` command line argument to provide the path to this file."
msgstr "デフォルトのコンフィギュレーション・ファイルの代わりに、カスタムのコンフィギュレーション・ファイルを指定することができる。環境変数``SPLUNK_CONFIG`` またはコマンドライン引数``--config`` を使って、このファイルへのパスを指定する。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:93
msgid "You can also use the environment variable ``SPLUNK_CONFIG_YAML`` to specify your custom configuration file at the command line. This is useful in environments where access to the underlying file system is not readily available. For example, in AWS Fargate, you can store your custom configuration YAML in a parameter in the AWS Systems Manager Parameter Store, then in your container definition specify ``SPLUNK_CONFIG_YAML`` to get the configuration from the parameter."
msgstr "環境変数``SPLUNK_CONFIG_YAML`` を使って、コマンドラインでカスタム設定ファイルを指定することもできる。これは、基礎となるファイルシステムへのアクセスが容易でない環境で有用である。例えば、AWS Fargate では、カスタム設定の YAML を AWS Systems Manager Parameter Store のパラメータに格納し、コンテナ定義で``SPLUNK_CONFIG_YAML`` を指定してパラメータから設定を取得することができる。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:95
msgid "Command line arguments take precedence over environment variables. This applies to ``--config`` and ``--mem-ballast-size-mib``. ``SPLUNK_CONFIG`` takes precedence over ``SPLUNK_CONFIG_YAML``. For example:"
msgstr "コマンドライン引数は環境変数よりも優先される。これは``--config`` と``--mem-ballast-size-mib`` に適用される。``SPLUNK_CONFIG`` は``SPLUNK_CONFIG_YAML`` よりも優先される。例えば、こうだ："

#: ../../gdi/opentelemetry/install-linux-manual.rst:110
msgid "If the custom configuration includes a ``memory_limiter`` processor, then the ``ballast_size_mib`` parameter should be the same as the ``SPLUNK_BALLAST_SIZE_MIB`` environment variable. For example:"
msgstr "カスタム構成に``memory_limiter`` プロセッサが含まれている場合、``ballast_size_mib`` パラメータは、``SPLUNK_BALLAST_SIZE_MIB`` 環境変数と同じでなければならない。例えば、こうだ："

#: ../../gdi/opentelemetry/install-linux-manual.rst:124
msgid "Use the following configuration to collect and log CPU metrics. The ``cat`` command assigns the ``CONFIG_YAML`` parameter to the YAML. The ``docker run`` command expands and assigns the parameter ``CONFIG_YAML`` to the environment variable ``SPLUNK_CONFIG_YAML``. Note that YAML requires whitespace indentation to be maintained."
msgstr "以下の構成を使用して、CPU メトリックを収集し、ログに記録します。``cat`` コマンドは``CONFIG_YAML`` パラメータを YAML に割り当てます。``docker run`` コマンドは、パラメータ``CONFIG_YAML`` を展開し、環境変数``SPLUNK_CONFIG_YAML`` に代入する。YAMLは空白のインデントを維持する必要があることに注意してください。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:156
msgid "Debian or RPM packages"
msgstr "Debian または RPM パッケージ"

#: ../../gdi/opentelemetry/install-linux-manual.rst:158
msgid "All Intel, AMD, and ARM systemd-based operating systems are supported, including CentOS, Debian, Oracle, Red Hat, and Ubuntu. Manually installing an integration is useful for containerized environments, or if you want to use other common deployment options."
msgstr "CentOS、Debian、Oracle、Red Hat、Ubuntuなど、すべてのIntel、AMD、ARM systemdベースのオペレーティング・システムがサポートされている。統合を手動でインストールするのは、コンテナ化された環境や、その他の一般的なデプロイメントオプションを使用したい場合に便利だ。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:160
msgid "Splunk Observability Cloud provides a default configuration for each installation method. Each installation method has its own set of environment variables, and their values depend on the installation method, as well as your specific needs."
msgstr "Splunk Observability Cloud は、各インストール方法に対してデフォルトの設定を提供します。各インストール方法には独自の環境変数セットがあり、その値はインストー ル方法や特定のニーズによって異なります。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:163
msgid "systemctl is the main tool used to examine and control the state of the systemd system and service manager. systemctl is a requirement to run the Collector as a service. If you don't have systemctl, you need to start the Collector manually."
msgstr "systemctl は、systemd システムとサービスマネージャの状態を調べて制御するために使用される主なツールです。systemctl は、Collector をサービスとして実行するために必要です。systemctlがない場合は、手動でCollectorを起動する必要があります。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:165
msgid "Do the following to install the package using a Debian or RPM package:"
msgstr "DebianまたはRPMパッケージを使用してパッケージをインストールするには、以下の手順を実行します："

#: ../../gdi/opentelemetry/install-linux-manual.rst:167
msgid "Set up the package repository and install the package, as shown in the following examples. The first example shows the Debian package and the subsequent examples show the RPM package. A default configuration is installed to /etc/otel/collector/agent_config.yaml, if it does not already exist::"
msgstr "以下の例に示すように、パッケージ・リポジトリーを設定し、パッケージをインストールする。最初の例はDebianパッケージで、それ以降の例はRPMパッケージである。デフォルトの設定は、/etc/otel/collector/agent_config.yaml にインストールされます："

#: ../../gdi/opentelemetry/install-linux-manual.rst:219
msgid "Configure the splunk-otel-collector.conf environment file with the appropriate variables. You need this environment file to start the ``splunk-otel-collector`` systemd service. When you install the package in step 1, a sample environment file is installed to /etc/otel/collector/splunk-otel-collector.conf.example. This file includes the required environment variables for the default configuration."
msgstr "splunk-otel-collector.conf 環境ファイルに適切な変数を設定します。``splunk-otel-collector`` systemdサービスを開始するには、この環境ファイルが必要だ。ステップ 1 でパッケージをインストールすると、/etc/otel/collector/splunk-otel-collector.conf.example にサンプル環境ファイルがインストールされます。このファイルには、デフォルト・コンフィギュレーションに必要な環境変数が含まれている。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:220
msgid "Run ``sudo systemctl restart splunk-otel-collector.service`` to start or restart the service."
msgstr "``sudo systemctl restart splunk-otel-collector.service`` を実行して、サービスを開始または再起動する。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:225
msgid "Binary file"
msgstr "バイナリファイル"

#: ../../gdi/opentelemetry/install-linux-manual.rst:227 ../../gdi/opentelemetry/install-windows-manual.rst:153
msgid "To install the Collector using the binary file, follow these steps:"
msgstr "バイナリファイルを使用してコレクタをインストールするには、以下の手順に従います："

#: ../../gdi/opentelemetry/install-linux-manual.rst:229 ../../gdi/opentelemetry/install-windows-manual.rst:155
msgid "Download the binary for your architecture from :new-page:`GitHub releases <https://github.com/signalfx/splunk-otel-collector/releases>`."
msgstr ":new-page:`GitHub リリース<https://github.com/signalfx/splunk-otel-collector/releases>` から、お使いのアーキテクチャのバイナリをダウンロードしてください。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:231 ../../gdi/opentelemetry/install-windows-manual.rst:157
msgid "If you're not using an existing or custom config file, download the :new-page:`default config file <https://github.com/signalfx/splunk-otel-collector/tree/main/cmd/otelcol/config/collector>`` for the Collector. See more at :ref:`otel-configuration-ootb`."
msgstr "既存の設定ファイルまたはカスタム設定ファイルを使用していない場合は、コレクタ用の:new-page:`デフォルト設定ファイル<https://github.com/signalfx/splunk-otel-collector/tree/main/cmd/otelcol/config/collector>`` をダウンロードしてください。:ref:`otel-configuration-ootb` で詳細を見る。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:233 ../../gdi/opentelemetry/install-windows-manual.rst:159
msgid "Run the binary from the command line:"
msgstr "コマンドラインからバイナリを実行する："

#: ../../gdi/opentelemetry/install-linux-manual.rst:257
msgid "Tar file"
msgstr "タールファイル"

#: ../../gdi/opentelemetry/install-linux-manual.rst:259
msgid "The tar.gz archive of the distribution is also available. It contains the default agent and gateway configuration files, which include the environment variables."
msgstr "ディストリビューションのtar.gzアーカイブもあります。このファイルには、デフォルトのエージェントとゲートウェイのコンフィギュレーション・ファイルが含まれており、環境変数も含まれています。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:261
msgid "To use the tar file:"
msgstr "tarファイルを使う："

#: ../../gdi/opentelemetry/install-linux-manual.rst:263
msgid "Unarchive it to a directory of your choice on the target system."
msgstr "それをターゲット・システム上の任意のディレクトリにアーカイブ解除する。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:269
msgid "On ``amd64`` systems, go into the unarchived ``agent-bundle`` directory and run ``bin/patch-interpreter $(pwd)``. This ensures that the binaries in the bundle have the right loader set on them, since your host's loader might not be compatible."
msgstr "``amd64`` システム上で、アーカイブされていない``agent-bundle`` ディレクトリに入り、``bin/patch-interpreter $(pwd)`` を実行する。これは、バンドル内のバイナリに正しいローダーが設定されていることを保証します。ホストのローダーは互換性がないかもしれないからです。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:272
msgid "Working on non-default locations"
msgstr "デフォルト以外の場所での作業"

#: ../../gdi/opentelemetry/install-linux-manual.rst:274
msgid "If you're running the Collector from a non-default location, the Smart Agent receiver and agent configuration file require that you set two environment variables currently used in the Smart Agent extension:"
msgstr "デフォルト以外の場所からCollectorを実行する場合、Smart Agentレシーバとエージェント設定ファイルでは、Smart Agent拡張機能で現在使用されている2つの環境変数を設定する必要があります："

#: ../../gdi/opentelemetry/install-linux-manual.rst:276
msgid "``SPLUNK_BUNDLE_DIR``: The path to the Smart Agent bundle. For example, ``/usr/lib/splunk-otel-collector/agent-bundle``."
msgstr "``SPLUNK_BUNDLE_DIR``:スマートエージェントバンドルのパス。例えば、``/usr/lib/splunk-otel-collector/agent-bundle`` 。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:277
msgid "``SPLUNK_COLLECTD_DIR``: The path to the ``collectd`` config directory for the Smart Agent. For example, ``/usr/lib/splunk-otel-collector/agent-bundle/run/collectd``."
msgstr "``SPLUNK_COLLECTD_DIR``:スマートエージェントの``collectd`` コンフィグディレクトリへのパス。例えば、``/usr/lib/splunk-otel-collector/agent-bundle/run/collectd`` 。"

#: ../../gdi/opentelemetry/install-linux-manual.rst:282
msgid "After you've installed the Collector, you can perform these actions:"
msgstr "コレクターのインストール後、以下の操作を実行できます："

#: ../../gdi/opentelemetry/install-the-collector.rst:10
msgid "Linux (script)"
msgstr "Linux（スクリプト）"

#: ../../gdi/opentelemetry/install-the-collector.rst:10
msgid "Linux (manual)"
msgstr "Linux（マニュアル）"

#: ../../gdi/opentelemetry/install-the-collector.rst:10
msgid "Windows (script)"
msgstr "ウィンドウズ（スクリプト）"

#: ../../gdi/opentelemetry/install-the-collector.rst:10
msgid "Windows (manual)"
msgstr "ウィンドウズ（手動）"

#: ../../gdi/opentelemetry/install-the-collector.rst:-1
msgid "Describes platform-specific installation information for the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションのプラットフォーム固有のインストール情報について説明します。"

#: ../../gdi/opentelemetry/install-the-collector.rst:5
msgid "Install and deploy the Collector"
msgstr "コレクターのインストールとデプロイ"

#: ../../gdi/opentelemetry/install-the-collector.rst:25
msgid "See the available options to install the Splunk Distribution of the OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションをインストールするために利用可能なオプションを参照してください。"

#: ../../gdi/opentelemetry/install-the-collector.rst:43
msgid "Select one of the platforms in the :guilabel:`Splunk OpenTelemetry Collector` section."
msgstr ":guilabel:`Splunk OpenTelemetry Collector` セクションでいずれかのプラットフォームを選択します。"

#: ../../gdi/opentelemetry/install-the-collector.rst:45
msgid "Follow the step-by-step process provided in the platform's guided setup."
msgstr "プラットフォームのセットアップガイドに記載されているステップバイステップの手順に従ってください。"

#: ../../gdi/opentelemetry/install-the-collector.rst:53
msgid "The Splunk Distribution of OpenTelemetry Collector is supported on Kubernetes, Linux, Windows, and Mac. See :ref:`collector-architecture` for compatible CPU architectures and operating systems."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションは、Kubernetes、Linux、Windows、Mac でサポートされています。互換性のあるCPUアーキテクチャとオペレーティング・システムについては、:ref:`collector-architecture` 。"

#: ../../gdi/opentelemetry/install-the-collector.rst:55
msgid "Deploy one of the following packages to gather data for Infrastructure Monitoring, APM, and Log Observer:"
msgstr "Infrastructure Monitoring、APM、Log Observer用のデータを収集するために、以下のパッケージのいずれかを導入します："

#: ../../gdi/opentelemetry/install-the-collector.rst:57
msgid "Splunk Distribution of OpenTelemetry Collector for Kubernetes or ``splunk-otel-collector-chart``. See :ref:`Install on Kubernetes <otel-install-k8s>`. You can also install the Kubernetes Operator for Auto Instrumentation, as explained in :ref:`Install the Collector with the Kubernetes Operator for Auto Instrumentation <auto-instrumentation-operator>`."
msgstr "Kubernetes または``splunk-otel-collector-chart`` 用 OpenTelemetry Collector の Splunk ディストリビューション。:ref:`Install on Kubernetes <otel-install-k8s>` を参照。:ref:`Install the Collector with the Kubernetes Operator for Auto Instrumentation <auto-instrumentation-operator>` で説明されているように、Kubernetes Operator for Auto Instrumentation をインストールすることもできます。"

#: ../../gdi/opentelemetry/install-the-collector.rst:58
msgid "Splunk Distribution of OpenTelemetry Collector for Linux or ``splunk-otel-collector``. See :ref:`Install on Linux (script) <otel-install-linux>` or :ref:`Install on Linux (manual) <otel-install-linux-manual>`, including instructions to install using the :ref:`binary file <linux-binary-file>`."
msgstr "Linux または``splunk-otel-collector`` 用 OpenTelemetry Collector の Splunk ディストリビューション。:ref:`binary file <linux-binary-file>` を使ってインストールする手順を含め、:ref:`Install on Linux (script) <otel-install-linux>` または:ref:`Install on Linux (manual) <otel-install-linux-manual>` を参照のこと。"

#: ../../gdi/opentelemetry/install-the-collector.rst:59
msgid "Splunk Distribution of OpenTelemetry Collector for Windows or ``splunk-otel-collector``. See :ref:`Install on Windows (script) <otel-install-windows>` or :ref:`Install on Windows (manual) <otel-install-windows-manual>`, including instructions for the :ref:`binary file <windows-binary>`."
msgstr "OpenTelemetry Collector の Splunk ディストリビューション（Windows または``splunk-otel-collector`` 用） .:ref:`binary file <windows-binary>` の説明を含め、:ref:`Install on Windows (script) <otel-install-windows>` または:ref:`Install on Windows (manual) <otel-install-windows-manual>` を参照のこと。"

#: ../../gdi/opentelemetry/install-the-collector.rst:61
msgid "See also :ref:`other deployment tools and options <otel_deployments>`."
msgstr ":ref:`other deployment tools and options <otel_deployments>` も参照のこと。"

#: ../../gdi/opentelemetry/install-the-collector.rst:69
msgid "The Collector uses the components listed in the following table:"
msgstr "コレクタは、以下の表に示すコンポーネントを使用します："

#: ../../gdi/opentelemetry/install-the-collector.rst:78
msgid ":ref:`Receivers <monitor-data-sources>`"
msgstr ":ref:`Receivers <monitor-data-sources>`"

#: ../../gdi/opentelemetry/install-the-collector.rst:79
msgid "Get data into the Collector using receivers. Receivers, which can be push or pull based, support one or more data sources. You must configure one or more receivers. By default, no receivers are configured."
msgstr "レシーバを使用してコレクタにデータを取得します。プッシュまたはプルベースのレシーバーは、1つまたは複数のデータソースをサポートする。1つ以上のレシーバーを設定する必要があります。デフォルトでは、レシーバーは設定されていない。"

#: ../../gdi/opentelemetry/install-the-collector.rst:80 ../../gdi/opentelemetry/security.rst:106
msgid "Processors"
msgstr "プロセッサー"

#: ../../gdi/opentelemetry/install-the-collector.rst:81
msgid "Control the data you send using processors. Processors sit between receivers and exporters, reading and sometimes operating on data as it flows through the pipeline. Processors are optional, but you should include processors in your configuration. The order in which processors are listed in the ``processors`` section of the configuration is relevant."
msgstr "プロセッサを使用して送信するデータを制御します。プロセッサーはレシーバーとエクスポーターの間に位置し、パイプラインを流れるデータを読み取り、時には操作する。プロセッサーはオプションだが、コンフィギュレーションにプロセッサーを含めるべきである。コンフィギュレーションの``processors`` セクションに記載されているプロセッサの順番が関係します。"

#: ../../gdi/opentelemetry/install-the-collector.rst:82
msgid "Exporters"
msgstr "輸出業者"

#: ../../gdi/opentelemetry/install-the-collector.rst:83
msgid "Send data to one or more destinations using exporters. Exporters, which can be push or pull based, support one or more data sources."
msgstr "エクスポーターを使用して、1つまたは複数の宛先にデータを送信します。プッシュまたはプルベースのエクスポーターは、1つまたは複数のデータソースをサポートする。"

#: ../../gdi/opentelemetry/install-the-collector.rst:85
msgid "To learn more about Collector components, see :ref:`otel-components`."
msgstr "コレクター・コンポーネントの詳細については、:ref:`otel-components` を参照してください。"

#: ../../gdi/opentelemetry/install-the-collector.rst:87
msgid "When configured, activate these components using pipelines within the service section of the configuration."
msgstr "コンフィギュレーションが完了したら、コンフィギュレーションのサービスセクションでパイプラインを使ってこれらのコンポーネントをアクティブにする。"

#: ../../gdi/opentelemetry/install-the-collector.rst:95
msgid "The service section of the Collector contains two subsections: extensions and pipelines. The extensions section is where you optionally activate any extensions you have configured, and the pipelines section is where you define one or more pipelines, each of which consists of receivers, processors (optional), and exporters. The service section's two subsections are described in the following table."
msgstr "コレクターのサービスセクションには、エクステンションとパイプラインの 2 つのサブセクションがあります。extensionsセクションは、オプションで設定した拡張機能を有効にする場所であり、 pipelinesセクションは、1つ以上のパイプラインを定義する場所である。サービスセクションの2つのサブセクションは、以下の表で説明されている。"

#: ../../gdi/opentelemetry/install-the-collector.rst:104
msgid "Extension"
msgstr "エクステンション"

#: ../../gdi/opentelemetry/install-the-collector.rst:105
msgid "Provide capabilities that can be added to the Collector, but which do not require direct access to telemetry data and are not part of pipelines."
msgstr "コレクターに追加できるが、テレメトリデータに直接アクセスする必要がなく、パイプラインの一部でもない機能を提供する。"

#: ../../gdi/opentelemetry/install-the-collector.rst:106
msgid "Pipeline"
msgstr "パイプライン"

#: ../../gdi/opentelemetry/install-the-collector.rst:107
msgid ":ref:`Pipelines <otel-data-processing>` can be traces, metrics, or logs. They consist of a set of receivers, processors, and exporters, and define the path of the ingested data element. Each receiver, processor, and exporter must be defined in the configuration outside of the service section to be included in a pipeline."
msgstr ":ref:`Pipelines <otel-data-processing>` はトレース、メトリクス、ログのいずれかである。レシーバー、プロセッサー、エクスポーターのセットで構成され、取り込まれたデータ要素のパスを定義する。各レシーバー、プロセッサー、エクスポーターは、パイプラインに含めるために、サービスセクションの外のコンフィギュレーションで定義する必要があります。"

#: ../../gdi/opentelemetry/install-the-collector.rst:109
msgid "Here's an example configuration:"
msgstr "以下に設定例を示す："

#: ../../gdi/opentelemetry/install-windows.rst:-1
msgid "Describes how to install the Splunk Distribution of OpenTelemetry Collector for Windows."
msgstr "OpenTelemetry Collector for Windows の Splunk ディストリビューションのインストール方法について説明します。"

#: ../../gdi/opentelemetry/install-windows.rst:5
msgid "Install the Collector for Windows with the installer script"
msgstr "インストーラスクリプトを使用して Collector for Windows をインストールします。"

#: ../../gdi/opentelemetry/install-windows.rst:17
msgid "The Splunk Distribution of OpenTelemetry Collector for Windows is a package that provides integrated collection and forwarding for all data types. Install the package using one of these methods:"
msgstr "OpenTelemetry Collector for Windows の Splunk ディストリビューションは、すべてのデータタイプに対して統合された収集と転送を提供するパッケージです。以下のいずれかの方法でパッケージをインストールする："

#: ../../gdi/opentelemetry/install-windows.rst:20
msgid ":ref:`Installer script <windows-script>`"
msgstr ":ref:`Installer script <windows-script>`"

#: ../../gdi/opentelemetry/install-windows.rst:21
msgid ":ref:`Deployments <windows-deployments>`"
msgstr ":ref:`Deployments <windows-deployments>`"

#: ../../gdi/opentelemetry/install-windows.rst:23
msgid "Alternatively, you can manually install the Collector. To learn how, see :ref:`otel-install-windows-manual`."
msgstr "または、Collector を手動でインストールすることもできます。その方法については、:ref:`otel-install-windows-manual` をご覧ください。"

#: ../../gdi/opentelemetry/install-windows.rst:30
msgid "The Splunk Distribution of OpenTelemetry Collector for Windows has the following requirements depending on the installation method:"
msgstr "OpenTelemetry Collector for Windows の Splunk ディストリビューションには、インストール方法に応じて以下の要件があります："

#: ../../gdi/opentelemetry/install-windows.rst:38
msgid "Install method"
msgstr "インストール方法"

#: ../../gdi/opentelemetry/install-windows.rst:39
msgid "Supported versions (64-bit)"
msgstr "対応バージョン（64ビット）"

#: ../../gdi/opentelemetry/install-windows.rst:41 ../../gdi/opentelemetry/install-windows.rst:43 ../../gdi/opentelemetry/install-windows.rst:45
msgid "Windows 2012, 2016, 2019, 2022"
msgstr "Windows 2012、2016、2019、2022"

#: ../../gdi/opentelemetry/install-windows.rst:42
msgid "Windows installer (MSI)"
msgstr "Windowsインストーラ（MSI）"

#: ../../gdi/opentelemetry/install-windows.rst:47 ../../gdi/opentelemetry/install-windows.rst:53
msgid "Windows 2019, 2022"
msgstr "ウィンドウズ 2019, 2022"

#: ../../gdi/opentelemetry/install-windows.rst:49 ../../gdi/opentelemetry/install-windows.rst:51
msgid "Windows 2012, 2016, 2019"
msgstr "ウィンドウズ2012、2016、2019"

#: ../../gdi/opentelemetry/install-windows.rst:60
msgid "The installer script is available for Windows 64-bit environments, and deploys and configures the Splunk Distribution of OpenTelemetry Collector for Windows and Fluentd (using the td-agent)."
msgstr "このインストーラスクリプトは Windows 64-bit 環境で利用可能で、Splunk Distribution of OpenTelemetry Collector for Windows と Fluentd (td-agent を使用) をデプロイして設定します。"

#: ../../gdi/opentelemetry/install-windows.rst:64
msgid "Ensure that you have Administrator access on your host."
msgstr "ホストの管理者権限を持っていることを確認してください。"

#: ../../gdi/opentelemetry/install-windows.rst:65
msgid "Run the following PowerShell command on your host, replacing the following variables for your environment:"
msgstr "ホスト上で以下のPowerShellコマンドを実行し、環境に応じて以下の変数を置き換える："

#: ../../gdi/opentelemetry/install-windows.rst:67
msgid "``SPLUNK_REALM``: This is the realm to send data to. The default is ``us0``. See :new-page:`realms <https://dev.splunk.com/observability/docs/realms_in_endpoints/>`."
msgstr "``SPLUNK_REALM``:データを送信するレルム。デフォルトは``us0`` 。:new-page:`レルム<https://dev.splunk.com/observability/docs/realms_in_endpoints/>` を参照のこと。"

#: ../../gdi/opentelemetry/install-windows.rst:74
msgid "If needed, activate TLS in PowerShell using the following command:"
msgstr "必要に応じて、以下のコマンドを使用してPowerShellでTLSを有効化する："

#: ../../gdi/opentelemetry/install-windows.rst:76
msgid "``[Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12``"
msgstr "``[Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12``"

#: ../../gdi/opentelemetry/install-windows.rst:81
msgid "To configure memory allocation, use the ``memory`` parameter."
msgstr "メモリ割り当てを設定するには、``memory`` パラメータを使用する。"

#: ../../gdi/opentelemetry/install-windows.rst:83
msgid "By default, the Collector is configured to use 512 MB (500 x 2^20 bytes) of memory. To increase this setting to allocate more memory, replace ``SPLUNK_MEMORY_TOTAL_MIB`` with the desired integer value."
msgstr "デフォルトでは、Collector は 512 MB (500 x 2^20 bytes) のメモリを使用するように設定されています。この設定を増やしてより多くのメモリを割り当てるには、``SPLUNK_MEMORY_TOTAL_MIB`` を希望する整数値に置き換える。"

#: ../../gdi/opentelemetry/install-windows.rst:89
msgid "Read more about Collector sizing in :ref:`otel-sizing`."
msgstr "コレクターのサイズについて詳しくは:ref:`otel-sizing` をご覧ください。"

#: ../../gdi/opentelemetry/install-windows.rst:100
msgid "Configure fluentd for log collection"
msgstr "ログ収集のためにfluentdを設定する"

#: ../../gdi/opentelemetry/install-windows.rst:102
msgid "By default, the installation configures the fluentd service to forward log events with the ``@SPLUNK`` label and send these events to the HEC ingest endpoint determined by the ``realm = \"<SPLUNK_REALM>\"`` option. For example, ``https://ingest.<SPLUNK_REALM>.signalfx.com/v1/log``."
msgstr "デフォルトでは、fluentd サービスは``@SPLUNK`` ラベルでログイベントを転送し、これらのイベントを``realm = \"<SPLUNK_REALM>\"`` オプションで決定された HEC インジェストエンドポイントに送るようにインストールを設定する。例えば、``https://ingest.<SPLUNK_REALM>.signalfx.com/v1/log`` 。"

#: ../../gdi/opentelemetry/install-windows.rst:106
msgid "To configure the package to send log events to a custom HTTP Event Collector (HEC) endpoint URL with a token different than ``<SPLUNK_ACCESS_TOKEN>``, you can specify the following parameters for the installer script:"
msgstr "``<SPLUNK_ACCESS_TOKEN>`` と異なるトークンを持つカスタム HTTP イベントコレクター (HEC) エンドポイント URL にログイベントを送信するようにパッケージを構成するには、インストーラスクリプトに次のパラメータを指定します："

#: ../../gdi/opentelemetry/install-windows.rst:108
msgid "``hec_url = \"<SPLUNK_HEC_URL>\"``"
msgstr "``hec_url = \"<SPLUNK_HEC_URL>\"``"

#: ../../gdi/opentelemetry/install-windows.rst:109
msgid "``hec_token = \"<SPLUNK_HEC_TOKEN>\"``"
msgstr "``hec_token = \"<SPLUNK_HEC_TOKEN>\"``"

#: ../../gdi/opentelemetry/install-windows.rst:111
msgid "For example (replace the ``<SPLUNK...>`` values in the command for your configuration):"
msgstr "例えば、次のようになる（コマンドの``<SPLUNK...>`` の値は、あなたのコンフィギュレーションに合わせて置き換えてください）："

#: ../../gdi/opentelemetry/install-windows.rst:117
msgid "The installation creates the main fluentd configuration file  ``<drive>\\opt\\td-agent\\etc\\td-agent\\td-agent.conf``, where ``<drive>`` is the drive letter for the fluentd installation directory."
msgstr "インストールは、メインの fluentd 設定ファイル``<drive>\\opt\\td-agent\\etc\\td-agent\\td-agent.conf`` を作成します。``<drive>`` は、fluentd インストールディレクトリのドライブ文字です。"

#: ../../gdi/opentelemetry/install-windows.rst:119
msgid "You can add custom fluentd source configuration files to the ``<drive>\\opt\\td-agent\\etc\\td-agent\\conf.d`` directory after installation."
msgstr "インストール後、``<drive>\\opt\\td-agent\\etc\\td-agent\\conf.d`` ディレクトリにカスタム fluentd ソース設定ファイルを追加することができます。"

#: ../../gdi/opentelemetry/install-windows.rst:124
msgid "In this directory, fluentd includes all files with the .conf extension."
msgstr "このディレクトリでは、fluentdは拡張子が.confのファイルをすべて含みます。"

#: ../../gdi/opentelemetry/install-windows.rst:125
msgid "By default, fluentd collects from the Windows Event Log. See ``<drive>\\opt\\td-agent\\etc\\td-agent\\conf.d\\eventlog.conf`` for the default configuration."
msgstr "デフォルトでは、fluentdはWindowsイベントログから収集します。デフォルトのコンフィギュレーションは``<drive>\\opt\\td-agent\\etc\\td-agent\\conf.d\\eventlog.conf`` を参照。"

#: ../../gdi/opentelemetry/install-windows.rst:127
msgid "After any configuration modification, apply the changes by restarting the system or running the following PowerShell commands:"
msgstr "構成を変更したら、システムを再起動するか、以下のPowerShellコマンドを実行して変更を適用する："

#: ../../gdi/opentelemetry/install-windows.rst:135
msgid "Start the Collector executable manually"
msgstr "Collector 実行ファイルを手動で起動する。"

#: ../../gdi/opentelemetry/install-windows.rst:137
msgid "If you experience unexpected start failures, try to start the Collector executable manually."
msgstr "予期しない起動失敗が発生した場合は、Collector実行ファイルを手動で起動してみてください。"

#: ../../gdi/opentelemetry/install-windows.rst:139
msgid "To do so, run the following PowerShell command as an Admin:"
msgstr "そのためには、管理者として以下のPowerShellコマンドを実行する："

#: ../../gdi/opentelemetry/install-windows.rst:148
msgid "Deployments"
msgstr "展開"

#: ../../gdi/opentelemetry/install-windows.rst:155
msgid "Splunk provides an Ansible role that installs the package configured to collect data (metrics, traces, and logs) from Windows machines and send that data to Splunk Observability Cloud. See :ref:`deployment-windows-ansible` for the instructions to download and customize the role."
msgstr "Splunk は、Windows マシンからデータ (メトリクス、トレース、ログ) を収集し、そのデータを Splunk Observability Cloud に送信するように構成されたパッケージをインストールする Ansible ロールを提供します。ロールをダウンロードしてカスタマイズする手順については、:ref:`deployment-windows-ansible` を参照してください。"

#: ../../gdi/opentelemetry/install-windows.rst:167
msgid "Use Nomad to deploy the Collector. To learn how to install Nomad, see :ref:`deployments-nomad`."
msgstr "コレクターの配置にはNomadを使用します。Nomadのインストール方法については、:ref:`deployments-nomad` を参照してください。"

#: ../../gdi/opentelemetry/install-windows.rst:173
msgid "Splunk provides a Puppet module to install and configure the package. A module is a collection of resources, classes, files, definition, and templates. To learn how to download and customize the module, see :ref:`deployment-windows-puppet`."
msgstr "Splunk は、パッケージのインストールと設定を行う Puppet モジュールを提供しています。モジュールは、リソース、クラス、ファイル、定義、テンプレートの集まりです。モジュールをダウンロードしてカスタマイズする方法については、:ref:`deployment-windows-puppet` を参照してください。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:220 ../../gdi/opentelemetry/install-windows.rst:178
msgid "Once you have installed the package, you can perform these actions:"
msgstr "パッケージをインストールしたら、以下の操作を実行できます："

#: ../../gdi/opentelemetry/install-windows-manual.rst:222 ../../gdi/opentelemetry/install-windows.rst:180
msgid ":ref:`use-navigators-imm`."
msgstr ":ref:`use-navigators-imm`."

#: ../../gdi/opentelemetry/install-windows-manual.rst:223 ../../gdi/opentelemetry/install-windows.rst:181
msgid "View logs and errors in the Windows Event Viewer. Search for \"view logs and errors\" on :new-page:`Microsoft documentation site <https://docs.microsoft.com/en-us/>` for more information."
msgstr "Windowsイベントビューアでログとエラーを表示します。詳しくは、:new-page:`マイクロソフトのドキュメントサイト<https://docs.microsoft.com/en-us/>` で「ログとエラーを表示」を検索してください。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:224 ../../gdi/opentelemetry/install-windows.rst:182
msgid ":ref:`apm`."
msgstr ":ref:`apm`."

#: ../../gdi/opentelemetry/install-windows-manual.rst:-1
msgid "Describes how to install the Splunk Distribution of OpenTelemetry Collector for Windows manually."
msgstr "OpenTelemetry Collector for Windows の Splunk ディストリビューションを手動でインストールする方法について説明します。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:5
msgid "Install the Collector for Windows manually"
msgstr "Collector for Windows を手動でインストールする"

#: ../../gdi/opentelemetry/install-windows-manual.rst:15
msgid "Before proceeding to install the Collector for Windows manually, check the :ref:`prerequisites <windows-otel-requirements>`."
msgstr "Collector for Windows を手動でインストールする前に、:ref:`prerequisites <windows-otel-requirements>` を確認してください。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:20
msgid "Configuration variables"
msgstr "設定変数"

#: ../../gdi/opentelemetry/install-windows-manual.rst:22
msgid "All installation methods offer default configurations using environment variables. Before starting the ``splunk-otel-collector`` service, replace the following variables in the default configuration file with the appropriate values for your environment:"
msgstr "どのインストール方法でも、環境変数を使用したデフォルト設定が提供される。``splunk-otel-collector`` サービスを開始する前に、デフォルト・コンフィギュレーション・ファイルの以下の変数を、お使いの環境に適した値に置き換えてください："

#: ../../gdi/opentelemetry/install-windows-manual.rst:24
msgid "``${SPLUNK_ACCESS_TOKEN}``: The Splunk access token to authenticate requests."
msgstr "``${SPLUNK_ACCESS_TOKEN}``:リクエストを認証するための Splunk アクセストークン。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:25
msgid "``${SPLUNK_API_URL}``: The Splunk API URL. For example, ``https://api.us0.signalfx.com``."
msgstr "``${SPLUNK_API_URL}``:Splunk API URL。例えば、``https://api.us0.signalfx.com`` 。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:26
msgid "``${SPLUNK_HEC_TOKEN}``: The Splunk HTTP Event Collector (HEC) authentication token."
msgstr "``${SPLUNK_HEC_TOKEN}``:Splunk HTTP Event Collector (HEC) 認証トークン。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:27
msgid "``${SPLUNK_HEC_URL}``: The Splunk HEC endpoint URL. For example, ``https://ingest.us0.signalfx.com/v1/log``."
msgstr "``${SPLUNK_HEC_URL}``:Splunk HEC のエンドポイント URL。例えば、``https://ingest.us0.signalfx.com/v1/log`` 。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:28
msgid "``${SPLUNK_INGEST_URL}``: The Splunk ingest URL. For example, ``https://ingest.us0.signalfx.com``."
msgstr "``${SPLUNK_INGEST_URL}``:Splunk インジェスト URL。例えば、``https://ingest.us0.signalfx.com`` 。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:29
msgid "``${SPLUNK_TRACE_URL}``: The Splunk trace endpoint URL. For example, ``https://ingest.us0.signalfx.com/v2/trace``."
msgstr "``${SPLUNK_TRACE_URL}``:Splunk トレースエンドポイント URL。例えば、``https://ingest.us0.signalfx.com/v2/trace`` 。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:30
msgid "``${SPLUNK_BUNDLE_DIR}``: The location of your Smart Agent bundle for monitor functionality. For example, ``C:\\Program Files\\Splunk\\OpenTelemetry Collector\\agent-bundle``."
msgstr "``${SPLUNK_BUNDLE_DIR}``:モニター機能用のスマートエージェントバンドルの場所。例えば、``C:\\Program Files\\Splunk\\OpenTelemetry Collector\\agent-bundle`` 。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:41
msgid "Windows installer file (MSI) installation"
msgstr "Windowsインストーラファイル（MSI）のインストール"

#: ../../gdi/opentelemetry/install-windows-manual.rst:43
msgid "To install the package using Windows Installer, download the Windows MSI package (64-bit only) from :new-page:`GitHub releases <https://github.com/signalfx/splunk-otel-collector/releases>`."
msgstr "Windows Installer を使用してパッケージをインストールするには、Windows MSI パッケージ (64 ビットのみ) を:new-page:`GitHub リリース<https://github.com/signalfx/splunk-otel-collector/releases>` からダウンロードしてください。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:45
msgid "The package is installed to ``\\Program Files\\Splunk\\OpenTelemetry Collector``."
msgstr "パッケージは``\\Program Files\\Splunk\\OpenTelemetry Collector`` にインストールされる。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:46
msgid "The ``splunk-otel-collector`` service is created, but not started."
msgstr "``splunk-otel-collector`` サービスは作成されるが、開始されない。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:47
msgid "A default configuration file is copied to ``\\ProgramData\\Splunk\\OpenTelemetry Collector\\agent_config.yaml``, if it does not already exist. This file is required to start the ``splunk-otel-collector`` service."
msgstr "デフォルトのコンフィギュレーション・ファイルがまだ存在しなければ、``\\ProgramData\\Splunk\\OpenTelemetry Collector\\agent_config.yaml`` にコピーされる。このファイルは、``splunk-otel-collector`` サービスを開始するために必要です。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:49
msgid "The ``ProgramData`` folder is hidden by default on Windows."
msgstr "Windowsのデフォルトでは、``ProgramData`` フォルダは非表示になっています。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:51
msgid "Next, proceed with the GUI, or follow the instructions to install using a Powershell terminal."
msgstr "次に、GUIで進めるか、Powershellターミナルを使ってインストールする指示に従う。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:56
msgid "Install using the GUI"
msgstr "GUIを使ってインストールする"

#: ../../gdi/opentelemetry/install-windows-manual.rst:58
msgid "Run the downloaded package and follow the instructions in the guided setup."
msgstr "ダウンロードしたパッケージを実行し、ガイドされたセットアップの指示に従ってください。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:63
msgid "Install using a PowerShell terminal"
msgstr "PowerShellターミナルを使用してインストールする"

#: ../../gdi/opentelemetry/install-windows-manual.rst:65
msgid "Follow these steps:"
msgstr "以下の手順に従ってください："

#: ../../gdi/opentelemetry/install-windows-manual.rst:67
msgid "Open a PowerShell terminal."
msgstr "PowerShellターミナルを開く。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:68
msgid "Run the following command, where ``PATH_TO_MSI`` is the full path to the downloaded package. For example, ``C:\\your\\download\\folder\\splunk-otel-collector-0.4.0-amd64.msi``."
msgstr "以下のコマンドを実行してください。``PATH_TO_MSI`` はダウンロードしたパッケージのフルパスです。例えば、``C:\\your\\download\\folder\\splunk-otel-collector-0.4.0-amd64.msi`` 。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:74
msgid "Update :ref:`all variables in the configuration file <windows-manual-config-var>` as appropriate."
msgstr ":ref:`all variables in the configuration file <windows-manual-config-var>` を適宜更新する。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:75
msgid "Start the ``splunk-otel-collector`` service by rebooting the system or by running the following command in a PowerShell terminal:"
msgstr "システムを再起動するか、PowerShellターミナルで以下のコマンドを実行して、``splunk-otel-collector`` サービスを開始する："

#: ../../gdi/opentelemetry/install-windows-manual.rst:81
msgid "Learn more about advanced configuration options (including Service Logging) using PowerShell in the Splunk Distribution of OpenTelemetry Collector :new-page:`Windows manual <https://github.com/signalfx/splunk-otel-collector/blob/main/docs/getting-started/windows-manual.md>`."
msgstr "PowerShell を使用した高度な設定オプション (Service Logging を含む) については、Splunk Distribution of OpenTelemetry Collector:new-page:`Windows マニュアル<https://github.com/signalfx/splunk-otel-collector/blob/main/docs/getting-started/windows-manual.md>` を参照してください。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:86
msgid "Install Fluentd MSI for log collection"
msgstr "ログ収集用にFluentd MSIをインストールする"

#: ../../gdi/opentelemetry/install-windows-manual.rst:89
msgid "Default log collection"
msgstr "デフォルトのログ収集"

#: ../../gdi/opentelemetry/install-windows-manual.rst:91
msgid "Install, configure, and start the Collector with :ref:`Windows Installer <windows-installer>`. The Collector default configuration file ``\\ProgramData\\Splunk\\OpenTelemetry Collector\\agent_config.yaml`` listens for log events on ``127.0.0.1:8006`` and sends them to Splunk Observability Cloud."
msgstr ":ref:`Windows Installer <windows-installer>` を使用してコレクタをインストール、構成、および起動します。Collector デフォルト設定ファイル``\\ProgramData\\Splunk\\OpenTelemetry Collector\\agent_config.yaml`` は``127.0.0.1:8006`` 上のログイベントをリッスンし、Splunk Observability Cloud に送信する。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:94
msgid "Log collection with Fluentd"
msgstr "Fluentdによるログ収集"

#: ../../gdi/opentelemetry/install-windows-manual.rst:96
msgid "You need to be an Admin to configure log collection with Fluentd."
msgstr "Fluentd でログ収集を設定するには、管理者である必要があります。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:98
msgid "Perform the following steps to install Fluentd and forward ``collected`` log events to the Collector:"
msgstr "以下の手順を実行して、Fluentd をインストールし、``collected`` ログイベントを Collector に転送します："

#: ../../gdi/opentelemetry/install-windows-manual.rst:100
msgid "Install :new-page:`Fluentd MSI <https://docs.fluentd.org/installation/install-by-msi#td-agent-v4>` version 4.0 or higher."
msgstr ":new-page:`Fluentd MSI<https://docs.fluentd.org/installation/install-by-msi#td-agent-v4>` バージョン4.0以上をインストールしてください。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:102
msgid "Configure Fluentd to collect log events and forward them to the Collector:"
msgstr "ログイベントを収集し、Collector に転送するように Fluentd を設定します："

#: ../../gdi/opentelemetry/install-windows-manual.rst:104
msgid "Option 1: Update the default config file provided by the Fluentd MSI at ``\\opt\\td-agent\\etc\\td-agent\\td-agent.conf`` to collect the desired log events and forward them to ``127.0.0.1:8006``."
msgstr "オプション 1: 必要なログイベントを収集し、``127.0.0.1:8006`` に転送するように、``\\opt\\td-agent\\etc\\td-agent\\td-agent.conf`` にある Fluentd MSI によって提供されるデフォルトの設定ファイルを更新する。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:106
msgid "Option 2: The installed Collector package provides a custom Fluentd config file ``\\Program Files\\Splunk\\OpenTelemetry Collector\\fluentd\\td-agent.conf`` to collect log events from the Windows Event Log ``\\Program Files\\Splunk\\OpenTelemetry Collector\\fluentd\\conf.d\\eventlog.conf`` and forwards them to ``127.0.0.1:8006``."
msgstr "オプション 2: インストールされた Collector パッケージは、Windows イベントログ``\\Program Files\\Splunk\\OpenTelemetry Collector\\fluentd\\conf.d\\eventlog.conf`` からログイベントを収集し、``127.0.0.1:8006`` に転送するために、カスタム Fluentd 設定ファイル``\\Program Files\\Splunk\\OpenTelemetry Collector\\fluentd\\td-agent.conf`` を提供します。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:108
msgid "To use these files, backup the ``\\opt\\td-agent\\etc\\td-agent\\`` directory, and copy the contents from ``\\Program Files\\Splunk\\OpenTelemetry Collector\\fluentd\\`` to ``\\opt\\td-agent\\etc\\td-agent\\``."
msgstr "これらのファイルを使用するには、``\\opt\\td-agent\\etc\\td-agent\\`` ディレクトリをバックアップし、``\\Program Files\\Splunk\\OpenTelemetry Collector\\fluentd\\`` から``\\opt\\td-agent\\etc\\td-agent\\`` に内容をコピーする。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:110
msgid "To apply any changes made to the Fluentd config files, restart the system, or restart ``fluentdwinsvc`` ."
msgstr "Fluentd の設定ファイルに加えられた変更を適用するには、システムを再起動するか、``fluentdwinsvc`` を再起動します。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:117
msgid "View the Fluentd service logs and errors in ``\\opt\\td-agent\\td-agent.log``."
msgstr "``\\opt\\td-agent\\td-agent.log`` で、Fluentd のサービスログとエラーを見る。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:119
msgid "Learn more about general Fluentd configuration details in the :new-page:`official Fluentd documentation <https://docs.fluentd.org/configuration>`."
msgstr "一般的な Fluentd の設定の詳細については、:new-page:`公式 Fluentd ドキュメント<https://docs.fluentd.org/configuration>` を参照してください。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:124
msgid "Install using a Chocolatey package"
msgstr "Chocolateyパッケージを使ってインストールする"

#: ../../gdi/opentelemetry/install-windows-manual.rst:126
msgid "A :new-page:`Chocolatey package <https://community.chocolatey.org/packages/splunk-otel-collector>` is available to download, install, and configure the Collector and Fluentd with the following PowerShell command:"
msgstr ":new-page:`Chocolatey パッケージ<https://community.chocolatey.org/packages/splunk-otel-collector>` をダウンロードしてインストールし、以下の PowerShell コマンドで Collector と Fluentd を設定することができます："

#: ../../gdi/opentelemetry/install-windows-manual.rst:132
msgid "Learn more about the :new-page:`package parameters <https://github.com/signalfx/splunk-otel-collector/blob/main/docs/getting-started/windows-manual.md#package-parameters>` in GitHub."
msgstr "GitHubの:new-page:`パッケージ・パラメーター<https://github.com/signalfx/splunk-otel-collector/blob/main/docs/getting-started/windows-manual.md#package-parameters>` についてもっと知る。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:137
msgid "Install using Docker"
msgstr "Dockerを使ってインストールする"

#: ../../gdi/opentelemetry/install-windows-manual.rst:139
msgid "Run the following command to deploy the latest Docker image:"
msgstr "以下のコマンドを実行して、最新のDockerイメージをデプロイする："

#: ../../gdi/opentelemetry/install-windows-manual.rst:151
msgid "Install using the binary file"
msgstr "バイナリファイルを使ってインストールする"

#: ../../gdi/opentelemetry/install-windows-manual.rst:188
msgid "Use a custom configuration file"
msgstr "カスタム設定ファイルを使用する"

#: ../../gdi/opentelemetry/install-windows-manual.rst:190
msgid "If you're using a custom configuration file, mount the directory containing the file and either use the ``SPLUNK_CONFIG=<path>`` environment variable or the ``--config=<path>`` command line argument. Replace ``<path>`` with the path to the custom file within the container."
msgstr "カスタム・コンフィギュレーション・ファイルを使用している場合は、そのファイルを含むディレクトリをマウントし、環境変数``SPLUNK_CONFIG=<path>`` 、またはコマンドライン引数``--config=<path>`` 。``<path>`` をコンテナ内のカスタム・ファイルへのパスに置き換える。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:192
msgid "To mount configuration files on a Windows container, specify a directory name in which the configuration file is present."
msgstr "Windowsコンテナに構成ファイルをマウントするには、構成ファイルが存在するディレクトリ名を指定する。"

#: ../../gdi/opentelemetry/install-windows-manual.rst:195
msgid "Example with ``SPLUNK_CONFIG``"
msgstr "例 ``SPLUNK_CONFIG``"

#: ../../gdi/opentelemetry/install-windows-manual.rst:206
msgid "Example with ``--config``"
msgstr "例 ``--config``"

#: ../../gdi/opentelemetry/kubernetes-config.rst:-1
msgid "Optional configurations for the Splunk Distribution of OpenTelemetry Collector for Kubernetes."
msgstr "OpenTelemetry Collector for Kubernetes の Splunk ディストリビューションのオプション設定。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:5
msgid "Configure Helm for Kubernetes"
msgstr "Kubernetes用にHelmを設定する"

#: ../../gdi/opentelemetry/kubernetes-config.rst:10
msgid "After you've :ref:`installed the Collector for Kubernetes <otel-install-k8s>`, these are the available settings you can configure. Additionally, see also :ref:`the advanced configuration options <otel-kubernetes-config-advanced>` and :ref:`otel-kubernetes-config-logs`."
msgstr ":ref:`installed the Collector for Kubernetes <otel-install-k8s>` をクリックすると、設定可能な項目が表示されます。さらに、:ref:`the advanced configuration options <otel-kubernetes-config-advanced>` 、:ref:`otel-kubernetes-config-logs` も参照のこと。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:18 ../../gdi/opentelemetry/kubernetes-config.rst:16
msgid "The Helm chart can also be configured to support different use cases, such as trace sampling and sending data through a proxy server. See :new-page:`Examples of chart configuration <https://github.com/signalfx/splunk-otel-collector-chart/blob/main/examples/README.md>` for more information."
msgstr "Helmチャートは、トレースサンプリングやプロキシサーバー経由のデータ送信など、さまざまなユースケースをサポートするように設定することもできる。詳しくは:new-page:`チャート構成の例<https://github.com/signalfx/splunk-otel-collector-chart/blob/main/examples/README.md>` を参照のこと。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:21
msgid "Configure the Kubernetes distribution"
msgstr "Kubernetesディストリビューションの設定"

#: ../../gdi/opentelemetry/kubernetes-config.rst:23
msgid "If applicable, use the ``distribution`` parameter to provide information about the underlying Kubernetes deployment. This parameter allows the connector to automatically scrape additional metadata. The following options are supported:"
msgstr "該当する場合は、``distribution`` パラメータを使用して、基盤となる Kubernetes デプロイメントに関する情報を提供します。このパラメータにより、コネクタは追加のメタデータを自動的にスクレイピングできる。以下のオプションがサポートされている："

#: ../../gdi/opentelemetry/kubernetes-config.rst:25
msgid "``aks`` for Azure AKS"
msgstr "``aks`` Azure AKS用"

#: ../../gdi/opentelemetry/kubernetes-config.rst:26
msgid "``eks`` for Amazon EKS"
msgstr "``eks`` アマゾンEKS用"

#: ../../gdi/opentelemetry/kubernetes-config.rst:27
msgid "``eks/fargate`` for Amazon EKS with Fargate profiles"
msgstr "``eks/fargate`` アマゾンEKSとファーゲートプロファイルの場合"

#: ../../gdi/opentelemetry/kubernetes-config.rst:28
msgid "``gke`` for Google GKE or Standard mode"
msgstr "``gke`` グーグルGKEまたは標準モードの場合"

#: ../../gdi/opentelemetry/kubernetes-config.rst:29
msgid "``gke/autopilot`` for Google GKE or Autopilot mode"
msgstr "``gke/autopilot`` グーグルGKEまたはオートパイロットモード用"

#: ../../gdi/opentelemetry/kubernetes-config.rst:30
msgid "``openshift`` for Red Hat OpenShift"
msgstr "``openshift`` Red Hat OpenShift用"

#: ../../gdi/opentelemetry/kubernetes-config.rst:32
msgid "Apply the following to configure your distribution:"
msgstr "以下を適用してディストリビューションを設定してください："

#: ../../gdi/opentelemetry/kubernetes-config.rst:67
msgid "Configure the deployment environment"
msgstr "デプロイ環境の設定"

#: ../../gdi/opentelemetry/kubernetes-config.rst:69
msgid "If applicable, use the ``environment`` parameter to specify an additional ``deployment.environment`` attribute to be added to all telemetry data. This attribute helps Splunk Observability Cloud users investigate data coming from different sources separately. Example values include ``development``, ``staging``, and ``production``."
msgstr "該当する場合、``environment`` パラメータを使用して、すべてのテレメトリデータに追加される追加の``deployment.environment`` 属性を指定します。この属性は、Splunk Observability Cloud ユーザーが異なるソースからのデータを個別に調査するのに役立ちます。値の例としては、``development`` 、``staging`` 、``production`` などがある。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:81
msgid "Configure a cloud provider"
msgstr "クラウドプロバイダーの設定"

#: ../../gdi/opentelemetry/kubernetes-config.rst:83
msgid "If applicable, use the ``cloudProvider`` parameter to provide information about your cloud provider. The following options are supported:"
msgstr "該当する場合は、``cloudProvider`` パラメータを使用して、クラウドプロバイダに関する情報を提供します。以下のオプションがサポートされている："

#: ../../gdi/opentelemetry/kubernetes-config.rst:85
msgid "``aws`` for Amazon Web Services"
msgstr "``aws`` アマゾン ウェブ サービス"

#: ../../gdi/opentelemetry/kubernetes-config.rst:86
msgid "``gcp`` for Google Cloud Platform"
msgstr "``gcp`` Google Cloud Platform向け"

#: ../../gdi/opentelemetry/kubernetes-config.rst:87
msgid "``azure`` for Microsoft Azure"
msgstr "``azure`` for Microsoft Azure"

#: ../../gdi/opentelemetry/kubernetes-config.rst:89
msgid "To set your cloud provider and configure ``cloud.platform`` for the resource detection processor, use:"
msgstr "クラウド・プロバイダーを設定し、リソース検出プロセッサーに``cloud.platform`` ："

#: ../../gdi/opentelemetry/kubernetes-config.rst:108
msgid "Provide tokens as a secret"
msgstr "トークンを秘密として提供する"

#: ../../gdi/opentelemetry/kubernetes-config.rst:110
msgid "Instead of having the tokens as clear text in the config file, you can provide them as a secret created before deploying the chart. See :new-page:`secret-splunk.yaml <https://github.com/signalfx/splunk-otel-collector-chart/blob/main/helm-charts/splunk-otel-collector/templates/secret-splunk.yaml>` for the required fields."
msgstr "トークンをコンフィグファイルのクリアテキストとして持つ代わりに、チャートをデプロイする前に作成したシークレットとして提供することができます。必須フィールドは:new-page:`secret-splunk.yaml<https://github.com/signalfx/splunk-otel-collector-chart/blob/main/helm-charts/splunk-otel-collector/templates/secret-splunk.yaml>` を参照のこと。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:122
msgid "Add additional telemetry sources"
msgstr "テレメトリ・ソースの追加"

#: ../../gdi/opentelemetry/kubernetes-config.rst:124
msgid "Use the ``autodetect`` configuration option to activate additional telemetry sources."
msgstr "追加のテレメトリ・ソースを有効にするには、``autodetect`` 設定オプションを使用します。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:126
msgid "Set ``autodetect.prometheus=true`` if you want the Collector to scrape Prometheus metrics from pods that have generic Prometheus-style annotations. Add the following annotations on pods to allow a fine control of the scraping process:"
msgstr "一般的な Prometheus スタイルのアノテーションを持つポッドから Prometheus メトリクスを収集する場合は、``autodetect.prometheus=true`` を設定します。ポッドに以下の注釈を追加して、スクレイピング処理を細かく制御できるようにする："

#: ../../gdi/opentelemetry/kubernetes-config.rst:128
msgid "``prometheus.io/scrape: true``: The default configuration scrapes all pods. If set to ``false``, this annotation excludes the pod from the scraping process."
msgstr "``prometheus.io/scrape: true``:デフォルトの設定はすべてのポッドをスクレイピングする。``false`` に設定すると、このアノテーションはスクレイピング処理からポッドを除外します。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:129
msgid "``prometheus.io/path``: The path to scrape the metrics from. The default value is ``/metrics``."
msgstr "``prometheus.io/path``:メトリクスをスクレイピングするパス。デフォルト値は``/metrics`` 。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:130
msgid "``prometheus.io/port``: The port to scrape the metrics from. The default value is ``9090``."
msgstr "``prometheus.io/port``:メトリクスをスクレイピングするポート。デフォルト値は``9090`` 。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:132
msgid "If the Collector is running in an Istio environment, set ``autodetect.istio=true`` to make sure that all traces, metrics, and logs reported by Istio are collected in a unified manner."
msgstr "CollectorがIstio環境で実行されている場合は、``autodetect.istio=true`` 、Istioによって報告されるすべてのトレース、メトリクス、およびログが統一された方法で収集されるように設定します。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:134
msgid "For example, use the following configuration to activate automatic detection of both Prometheus and Istio telemetry sources:"
msgstr "例えば、以下の設定を使用して、Prometheus と Istio の両方の遠隔測定ソースの自動検出を有効にします："

#: ../../gdi/opentelemetry/kubernetes-config.rst:149
msgid "Deactivate particular types of telemetry"
msgstr "特定の種類の遠隔測定を無効にする"

#: ../../gdi/opentelemetry/kubernetes-config.rst:151
msgid "By default, OpenTelemetry sends only metrics and traces to Splunk Observability Cloud and sends only logs to Splunk Platform. You can activate or deactivate any kind of telemetry data collection for a specific destination. For example, with the following configuration, the Collector sends all collected telemetry data to Splunk Observability Cloud and Splunk Platform, assuming you've properly configured them."
msgstr "デフォルトでは、OpenTelemetry はメトリクスとトレースのみを Splunk Observability Cloud に送信し、ログのみを Splunk Platform に送信します。特定の宛先に対して、あらゆる種類の遠隔測定データ収集を有効または無効にできます。たとえば、次のような設定を行うと、Collector は収集したすべての遠隔測定データを Splunk Observability Cloud と Splunk Platform に送信します。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:164
msgid "Configure Windows worker nodes"
msgstr "Windowsワーカーノードの設定"

#: ../../gdi/opentelemetry/kubernetes-config.rst:166
msgid "The Splunk Distribution of OpenTelemetry Collector for Kubernetes supports collecting metrics, traces, and logs (using OpenTelemetry native logs collection only) from Windows nodes. All Windows images are available in the ``quay.io/signalfx/splunk-otel-collector-windows`` repository."
msgstr "OpenTelemetry Collector for Kubernetes の Splunk ディストリビューションは、Windows ノードからのメトリクス、トレース、ログ (OpenTelemetry ネイティブログ収集のみを使用) の収集をサポートしています。すべてのWindowsイメージは、``quay.io/signalfx/splunk-otel-collector-windows`` リポジトリで入手できます。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:168
msgid "Use the following configuration to install the Helm chart on Windows worker nodes:"
msgstr "以下の設定を使用して、WindowsワーカーノードにHelmチャートをインストールします："

#: ../../gdi/opentelemetry/kubernetes-config.rst:182
msgid "If you have both Windows and Linux worker nodes in your Kubernetes cluster, you need to install the Helm chart twice. One of the installations with the default configuration set to ``isWindows: false`` is applied on Linux nodes. The second installation with the values.yaml configuration (shown in the previous example) is applied on Windows nodes."
msgstr "KubernetesクラスタにWindowsとLinuxの両方のワーカーノードがある場合、Helmチャートを2回インストールする必要があります。デフォルトのコンフィギュレーションが``isWindows: false`` に設定されたインストールの1つがLinuxノードに適用される。values.yaml構成（前の例で示した）を持つ2番目のインストールは、Windowsノードに適用される。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:184
msgid "Deactivate the ``clusterReceiver`` on one of the installations to avoid cluster-wide metrics duplication. To do this, add the following lines to the configuration of one of the installations:"
msgstr "クラスタ全体のメトリクスの重複を避けるために、いずれかのインストレーションで``clusterReceiver`` を非アクティブにします。これを行うには、インストレーションの1つのコンフィギュレーションに以下の行を追加する："

#: ../../gdi/opentelemetry/kubernetes-config.rst:192
msgid "Configure Google Kubernetes Engine"
msgstr "Google Kubernetes Engineを設定する"

#: ../../gdi/opentelemetry/kubernetes-config.rst:195
msgid "Configure GKE Autopilot"
msgstr "GKE オートパイロットの設定"

#: ../../gdi/opentelemetry/kubernetes-config.rst:197
msgid "To run the Collector in GKE Autopilot mode, set the ``distribution`` option to ``gke/autopilot``:"
msgstr "コレクタを GKE オートパイロットモードで実行するには、``distribution`` オプションを``gke/autopilot`` に設定します："

#: ../../gdi/opentelemetry/kubernetes-config.rst:203
msgid "Search for \"Autopilot overview\" on the :new-page:`Google Cloud documentation site <https://cloud.google.com/docs>` for more information."
msgstr "詳細については、:new-page:`Google Cloud ドキュメントサイト<https://cloud.google.com/docs>` で「Autopilot overview」を検索してください。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:205
msgid "GKE Autopilot doesn't support native OpenTelemetry logs collection."
msgstr "GKE Autopilotは、ネイティブのOpenTelemetryログ収集をサポートしていません。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:207
msgid "The Collector agent daemonset can have problems scheduling in Autopilot mode. If this happens, do the following to assign the daemonset a higher priority class to ensure that the daemonset pods are always present on each node:"
msgstr "Collectorエージェント・デーモンセットで、Autopilotモードでのスケジューリングに問題が発生することがあります。このような場合は、デーモンセットに高い優先度クラスを割り当てて、デーモンセットのポッドが各ノードに常に存在するようにします："

#: ../../gdi/opentelemetry/kubernetes-config.rst:209
msgid "Create a new priority class for the Collector agent:"
msgstr "Collector エージェントに新しい優先クラスを作成します："

#: ../../gdi/opentelemetry/kubernetes-config.rst:223
msgid "Use the created priority class in the helm install/upgrade command using the ``--set=\"priorityClassName=splunk-otel-agent-priority\"`` argument, or add the following line to your custom values.yaml:"
msgstr "作成した優先度クラスをhelm install/upgradeコマンドで``--set=\"priorityClassName=splunk-otel-agent-priority\"`` 引数を使用して使用するか、カスタムvalues.yamlに以下の行を追加します："

#: ../../gdi/opentelemetry/kubernetes-config.rst:230
msgid "GKE ARM support"
msgstr "GKE ARM サポート"

#: ../../gdi/opentelemetry/kubernetes-config.rst:232
msgid "The default configuration of the Helm chart supports ARM workloads on GKE. Make sure to set the distribution value to ``gke``:"
msgstr "Helmチャートのデフォルト設定は、GKE上のARMワークロードをサポートしている。分配値は必ず``gke`` に設定してください："

#: ../../gdi/opentelemetry/kubernetes-config.rst:241
msgid "Configure Amazon Elastic Kubernetes Service Fargate"
msgstr "Amazon Elastic Kubernetes Service Fargateを設定する"

#: ../../gdi/opentelemetry/kubernetes-config.rst:243
msgid "To run the Collector in the Amazon EKS with Fargate profiles, set the required ``distribution`` value to ``eks/fargate``, as shown in the following example:"
msgstr "Amazon EKSでFargateプロファイルを使用してCollectorを実行するには、次の例に示すように、必要な``distribution`` 値を``eks/fargate`` に設定します："

#: ../../gdi/opentelemetry/kubernetes-config.rst:250
msgid "Fluentd and native OpenTelemetry logs collection are not yet automatically configured in EKS with Fargate profiles."
msgstr "FluentdとネイティブのOpenTelemetryログ収集は、Fargateプロファイルを持つEKSではまだ自動的に設定されません。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:252
msgid "This distribution operates similarly to the ``eks`` distribution, but with the following distinctions:"
msgstr "この分布は、``eks`` の分布と同様に機能するが、次のような違いがある："

#: ../../gdi/opentelemetry/kubernetes-config.rst:254
msgid "The Collector agent daemonset is not applied since Fargate does not support daemonsets. Any desired Collector instances running as agents must be configured manually as sidecar containers in your custom deployments. This includes any application logging services like Fluentd. Set ``gateway.enabled`` to ``true`` and configure your instrumented applications to report metrics, traces, and logs to the gateway ``<installed-chart-name>-splunk-otel-collector`` service address. Any desired agent instances that would run as a daemonset should instead run as sidecar containers in your pods."
msgstr "Fargateはデーモンセットをサポートしていないため、Collectorエージェントのデーモンセットは適用されない。エージェントとして実行するCollectorインスタンスは、カスタムデプロイメントのサイドカーコンテナとして手動で構成する必要があります。これには、Fluentdのようなアプリケーション・ロギング・サービスも含まれる。``gateway.enabled`` を``true`` に設定し、メトリクス、トレース、およびログをゲートウェイ``<installed-chart-name>-splunk-otel-collector`` サービス・アドレスにレポートするように、インスツルメンテッド・アプリケーションを設定します。デーモンセットとして実行したいエージェントインスタンスは、代わりにポッド内のサイドカーコンテナとして実行する必要があります。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:258
msgid "Since Fargate nodes use a VM boundary to prevent access to host-based resources used by other pods, pods are not able to reach their own kubelet. The cluster receiver for the Fargate distribution has two primary differences between regular ``eks`` to work around this limitation:"
msgstr "FargateノードはVMバウンダリーを使用して、他のPodが使用するホストベースのリソースにアクセスできないようにしているため、Podは自分のkubeletに到達できない。Fargateディストリビューション用のクラスターレシーバーは、この制限を回避するために、通常の``eks`` 、主に2つの違いがある："

#: ../../gdi/opentelemetry/kubernetes-config.rst:256
msgid "The configured cluster receiver is deployed as a two-replica StatefulSet instead of a Deployment, and uses a Kubernetes Observer extension that discovers the cluster's nodes and, on the second replica, its pods for user-configurable receiver creator additions.Using this observer dynamically creates the Kubelet Stats receiver instances that report kubelet metrics for all observed Fargate nodes. The first replica monitors the cluster with a ``k8s_cluster`` receiver, and the second cluster monitors all kubelets except its own (due to an EKS/Fargate networking restriction)."
msgstr "構成されたクラスタレシーバーは、Deploymentの代わりに2つのレプリカのStatefulSetとしてデプロイされ、Kubernetes Observer拡張機能を使用して、クラスタのノードと、2つ目のレプリカで、ユーザー設定可能なレシーバークリエーターの追加のためにそのポッドを検出します。このオブザーバーを使用すると、観測されたすべてのFargateノードのkubeletメトリクスをレポートするKubelet Statsレシーバーインスタンスが動的に作成されます。最初のレプリカは、``k8s_cluster`` レシーバーでクラスタを監視し、2番目のクラスタは、（EKS/Fargate ネットワークの制限により）自分自身を除くすべての kubelet を監視する。"

#: ../../gdi/opentelemetry/kubernetes-config.rst:257
msgid "The first replica's Collector monitors the second's kubelet. This is made possible by a Fargate-specific ``splunk-otel-eks-fargate-kubeletstats-receiver-node`` node label. The Collector ClusterRole for ``eks/fargate`` allows the ``patch`` verb on ``nodes`` resources for the default API groups to allow the cluster receiver's init container to add this node label for designated self monitoring."
msgstr "最初のレプリカのCollectorが2番目のkubeletを監視する。これは、ファーゲート固有の``splunk-otel-eks-fargate-kubeletstats-receiver-node`` ノードラベルによって可能になる。``eks/fargate`` のCollector ClusterRoleは、デフォルトのAPIグループの``nodes`` リソースの``patch`` 動詞を許可して、クラスタレシーバのinitコンテナが指定された自己監視のためにこのノードラベルを追加できるようにします。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:-1
msgid "Advanced configurations for the Splunk Distribution of OpenTelemetry Collector for Kubernetes."
msgstr "OpenTelemetry Collector for Kubernetes の Splunk ディストリビューションの高度な設定。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:5
msgid "Advanced configuration for Kubernetes"
msgstr "Kubernetesの高度な設定"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:10
msgid "See the following advanced configuration options for the Collector for Kubernetes."
msgstr "以下のCollector for Kubernetesの高度な設定オプションを参照してください。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:12
msgid "For basic Helm chart configuration, see :ref:`otel-kubernetes-config`. For log configuration, refer to :ref:`otel-kubernetes-config-logs`."
msgstr "Helm の基本的なチャート設定については、:ref:`otel-kubernetes-config` を参照してください。ログの設定については、:ref:`otel-kubernetes-config-logs` を参照してください。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:21
msgid "Override the default configuration"
msgstr "デフォルト設定を上書きする"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:23
msgid "You can override the :ref:`default OpenTelemetry agent configuration <otel-configuration-ootb>` to use your own configuration. To do this, include a custom configuration using the ``agent.config`` parameter in the values.yaml file. For example:"
msgstr ":ref:`default OpenTelemetry agent configuration <otel-configuration-ootb>` をオーバーライドして、独自の設定を使用することができます。これを行うには、values.yamlファイルの``agent.config`` パラメータを使用してカスタム設定を含めます。例えば、こうだ："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:43
msgid "This custom configuration is merged into the default agent configuration."
msgstr "このカスタム設定は、デフォルトのエージェント設定にマージされる。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:45
msgid "After merging the files you need to fully redefine parts of the configuration, for example ``service``, ``pipelines``, ``logs``, and ``processors``."
msgstr "ファイルをマージした後、コンフィギュレーションの一部を完全に再定義する必要がある。例えば、``service`` 、``pipelines`` 、``logs`` 、``processors`` 。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:48
msgid "Override a control plane configuration"
msgstr "制御プレーンの設定を上書きする"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:50
msgid "If any of the control plane metric receivers are activated under the ``agent.controlPlaneMetrics`` configuration section, then the Helm chart will configure the Collector to use the activated receivers to collect metrics from the control plane."
msgstr "``agent.controlPlaneMetrics`` 構成セクションで制御プレーンのメトリック・レシーバのいずれかがアクティブになっている場合、Helm チャートは、アクティブになったレシーバを使用して制御プレーンからメトリックを収集するようにコレクタを構成します。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:52
msgid "To collect control plane metrics, the Helm chart uses the Collector on each node to use the receiver creator to represent control plane receivers at runtime. The receiver creator has a set of discovery rules that know which control plane receivers to create. The default discovery rules can vary depending on the Kubernetes distribution and version. See :ref:`receiver-creator-receiver` for more information."
msgstr "制御プレーン・メトリクスを収集するために、Helmチャートは各ノードのCollectorを使用して、実行時に制御プレーン・レシーバを表すレシーバ・クリエータを使用します。レシーバー作成者は、どの制御プレーンのレシーバーを作成すべきかを知っている発見ルールのセットを持っている。デフォルトのディスカバリールールは、Kubernetesディストリビューションとバージョンによって異なる場合がある。詳しくは:ref:`receiver-creator-receiver` 。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:54
msgid "If your control plane is using non-standard specifications, then you can provide a custom configuration to allow the Collector to successfully connect to it."
msgstr "コントロールプレーンが非標準の仕様を使用している場合は、コレクタが正常に接続できるようにカスタム設定を提供できます。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:56
msgid "The Collector relies on pod-level network access to collect metrics from the control plane pods. Since most cloud Kubernetes as a service distributions don't expose the control plane pods to the end user, collecting metrics from these distributions is not supported."
msgstr "Collectorは、制御プレーン・ポッドからメトリクスを収集するために、ポッドレベルのネットワーク・アクセスに依存します。ほとんどのクラウドKubernetes as a Serviceディストリビューションは、コントロールプレーンのポッドをエンドユーザーに公開していないため、これらのディストリビューションからメトリクスを収集することはサポートされていません。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:59
msgid "Availability and configuration instructions"
msgstr "可用性と設定方法"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:61
msgid "The following distributions are supported:"
msgstr "以下のディストリビューションに対応しています："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:63
msgid "Kubernetes 1.22 (kops created)"
msgstr "Kubernetes 1.22 (kops作成)"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:64
msgid "OpenShift version 4.9"
msgstr "OpenShift version 4.9"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:66
msgid "The following distributions are not supported:"
msgstr "以下のディストリビューションはサポートされていません："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:68
msgid "AKS"
msgstr "AKS"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:70
msgid "EKS/Fargate"
msgstr "EKS/ファーゲート"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:71
msgid "GKE"
msgstr "GKE"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:72
msgid "GKE/Autopilot"
msgstr "GKE/オートパイロット"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:74
msgid "See the :new-page:`agent template <https://github.com/signalfx/splunk-otel-collector-chart/blob/main/helm-charts/splunk-otel-collector/templates/config/_otel-agent.tpl>` for the  default configurations for the control plane receivers."
msgstr "コントロールプレーンのレシーバーのデフォルト設定については、:new-page:`エージェントテンプレート<https://github.com/signalfx/splunk-otel-collector-chart/blob/main/helm-charts/splunk-otel-collector/templates/config/_otel-agent.tpl>` を参照してください。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:76
msgid "Refer to the following documentation for information on the configuration options and supported metrics for each control plane receiver:"
msgstr "各制御プレーン・レシーバの構成オプションとサポートされるメトリクスについては、以下のドキュメントを参照してください："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:78
msgid ":ref:`CoreDNS <coredns>`."
msgstr ":ref:`CoreDNS <coredns>`."

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:79
msgid ":ref:`etcd`. To retrieve etcd metrics, see :new-page:`Setting up etcd metrics <https://github.com/signalfx/splunk-otel-collector-chart/blob/main/docs/advanced-configuration.md#setting-up-etcd-metrics>`."
msgstr ":ref:`etcd`.etcd メトリクスを取得するには、:new-page:`etcd メトリクスの設定<https://github.com/signalfx/splunk-otel-collector-chart/blob/main/docs/advanced-configuration.md#setting-up-etcd-metrics>` を参照してください。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:80
msgid ":ref:`Kubernetes controller manager <kube-controller-manager>`."
msgstr ":ref:`Kubernetes controller manager <kube-controller-manager>`."

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:81
msgid ":ref:`Kubernetes API server <kubernetes-apiserver>`."
msgstr ":ref:`Kubernetes API server <kubernetes-apiserver>`."

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:82
msgid ":ref:`Kubernetes proxy <kubernetes-proxy>`."
msgstr ":ref:`Kubernetes proxy <kubernetes-proxy>`."

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:83
msgid ":ref:`Kubernetes scheduler <kubernetes-scheduler>`."
msgstr ":ref:`Kubernetes scheduler <kubernetes-scheduler>`."

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:86
msgid "Known issue"
msgstr "既知の問題"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:88
msgid "There is a known limitation for the Kubernetes proxy control plane receiver. When using a Kubernetes cluster created via kops, a network connectivity issue prevents proxy metrics from being collected. The limitation can be addressed by updating the kubeProxy metric bind address in the kops cluster specification:"
msgstr "Kubernetesプロキシのコントロールプレーンレシーバーには既知の制限がある。kops経由で作成されたKubernetesクラスターを使用すると、ネットワーク接続の問題でプロキシメトリクスが収集されない。この制限は、kopsクラスタ仕様のkubeProxyメトリックバインドアドレスを更新することで対処できます："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:90
msgid "Set ``kubeProxy.metricsBindAddress: 0.0.0.0`` in the kops cluster specification."
msgstr "kopsクラスタ仕様で``kubeProxy.metricsBindAddress: 0.0.0.0`` 。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:91
msgid "Run ``kops update cluster {cluster_name}`` and ``kops rolling-update cluster {cluster_name}`` to deploy the change."
msgstr "``kops update cluster {cluster_name}`` と``kops rolling-update cluster {cluster_name}`` を実行し、変更をデプロイする。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:94
msgid "Using custom configurations for non-standard control plane components"
msgstr "非標準のコントロールプレーンコンポーネントにカスタムコンフィギュレーションを使用する"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:96
msgid "You can override the default configuration values used to connect to the control plane. If your control plane uses nonstandard ports or custom TLS settings, you need to override the default configurations. The following example shows how to connect to a nonstandard API server that uses port 3443 for metrics and custom TLS certs stored in the /etc/myapiserver/ directory."
msgstr "コントロールプレーンへの接続に使用されるデフォルトの設定値を上書きすることができます。コントロールプレーンが非標準ポートやカスタムTLS設定を使用する場合は、デフォルトの設定をオーバーライドする必要がある。以下の例は、/etc/myapiserver/ ディレクトリに格納された、メトリクスとカスタムTLS証明書のためにポート3443を使用する非標準APIサーバーに接続する方法を示している。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:121
msgid "Run the container in non-root user mode"
msgstr "コンテナを非 root ユーザーモードで実行する。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:123
msgid "Collecting logs often requires reading log files owned by the root user. By default, the container runs with ``securityContext.runAsUser = 0``, which gives the root user permission to read those files."
msgstr "ログを収集するには、多くの場合、ルートユーザーが所有するログファイルを読む必要がある。デフォルトでは、コンテナは``securityContext.runAsUser = 0`` で実行され、ルート・ユーザーにこれらのファイルを読む権限が与えられる。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:125
msgid "To run the container in non-root user mode, set ``.agent.securityContext`` to ``20000``, which makes the container to run the required file system operations as UID and GID ``20000``. You can use any other UID and GUI."
msgstr "コンテナを非 root ユーザーモードで実行するには、``.agent.securityContext`` を``20000`` に設定する。これにより、コンテナは、必要なファイルシステム操作を UID および GID``20000`` として実行するようになる。他のUIDやGUIを使うこともできる。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:127
msgid "Setting the ``containerRuntime:`` parameter to ``cri-o`` did not work during internal testing for logs collection."
msgstr "``containerRuntime:`` パラメータを``cri-o`` に設定しても、ログ収集の内部テストでは機能しませんでした。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:130
msgid "Use the Network Explorer to collect telemetry"
msgstr "ネットワーク・エクスプローラーを使ってテレメトリーを収集する"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:132
msgid ":new-page:`Network Explorer <https://github.com/signalfx/splunk-otel-collector-chart/blob/main/docs/network-explorer-architecture.md>` allows you to collect network telemetry and send it to the :ref:`OpenTelemetry Collector gateway <collector-gateway-mode>`."
msgstr ":new-page:`Network Explorer<https://github.com/signalfx/splunk-otel-collector-chart/blob/main/docs/network-explorer-architecture.md>` では、ネットワーク・テレメトリーを収集し、:ref:`OpenTelemetry Collector gateway <collector-gateway-mode>` に送信することができます。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:134
msgid "To enable the Network Explorer, set the ``enabled`` flag to ``true``:"
msgstr "ネットワーク・エクスプローラーを有効にするには、``enabled`` フラグを``true`` に設定する："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:141
msgid "Activating the network explorer automatically activates the OpenTelemetry Collector gateway."
msgstr "ネットワークエクスプローラをアクティブにすると、OpenTelemetry Collector ゲートウェイが自動的にアクティブになります。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:146
msgid "Network Explorer is only supported in the following Kubernetes-based environments on Linux hosts:"
msgstr "Network Explorerは、Linuxホスト上の以下のKubernetesベースの環境でのみサポートされています："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:148
msgid "RedHat Linux 7.6+"
msgstr "RedHat Linux 7.6+"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:149
msgid "Ubuntu 16.04+"
msgstr "Ubuntu 16.04+"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:150
msgid "Debian Stretch+"
msgstr "Debian Stretch+"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:152
msgid "Google COS"
msgstr "Google COS"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:155
msgid "Modify the reducer footprint"
msgstr "レデューサーのフットプリントを変更する"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:157
msgid "The reducer is a single pod per Kubernetes cluster. If your cluster contains a large number of pods, nodes, and services, you can increase the resources allocated to it."
msgstr "レデューサーは、Kubernetesクラスターごとに単一のポッドである。クラスタに多数のポッド、ノード、およびサービスが含まれている場合は、そのクラスタに割り当てられるリソースを増やすことができます。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:159
msgid "The reducer processes telemetry in multiple stages, with each stage partitioned into one or more shards, where each shard is a separate thread. Increasing the number of shards in each stage expands the capacity of the reducer. There are three stages: ingest, matching, and aggregation. You can set between 1 to 32 shards for each stage. There is one shard per reducer stage by default."
msgstr "リデューサーはテレメトリを複数のステージで処理し、各ステージは1つ以上のシャードに分割される。各ステージのシャードの数を増やすと、レデューサーの容量が拡大する。インジェスト、マッチング、アグリゲーションの3段階がある。各ステージには1～32個の破片を設定できる。デフォルトでは、1つのレデューサー・ステージに1つのシャードがある。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:161
msgid "The following example sets the reducer to use 4 shards per stage."
msgstr "以下の例では、リデューサーがステージごとに4つのシャードを使用するように設定しています。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:172
msgid "Customize network telemetry generated by the Network Explorer"
msgstr "ネットワーク・エクスプローラーが生成するネットワーク・テレメトリーのカスタマイズ"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:174
msgid "Metrics can be deactivated, either individually or by entire categories. See the :new-page:`values.yaml <https://github.com/signalfx/splunk-otel-collector-chart/blob/main/helm-charts/splunk-otel-collector/values.yaml>` for a complete list of categories and metrics."
msgstr "メトリクスは、個別に、またはカテゴリー全体で、無効化することができます。カテゴリーとメトリクスの完全なリストについては、:new-page:`values.yaml<https://github.com/signalfx/splunk-otel-collector-chart/blob/main/helm-charts/splunk-otel-collector/values.yaml>` を参照のこと。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:176
msgid "To disable an entire category, give the category name, followed by ``.all``:"
msgstr "カテゴリー全体を無効にするには、カテゴリー名の後に``.all`` を続けます："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:185
msgid "Disable individual metrics by their names:"
msgstr "個々のメトリクスをその名前で無効にします："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:194
msgid "You can mix categories and names. For example, yo disable all http metrics and the ``udp.bytes`` metric use:"
msgstr "カテゴリーと名前を混ぜることができる。例えば、すべての http メトリックと``udp.bytes`` メトリックの使用を無効にします："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:205
msgid "Reactivate metrics"
msgstr "メトリクスの再活性化"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:207
msgid "To activate metrics you have deactivated, use ``enableMetrics``."
msgstr "非アクティブにしたメトリクスをアクティブにするには、``enableMetrics`` を使用します。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:209
msgid "The ``disableMetrics`` flag is evaluated before ``enableMetrics``, so you can deactivate an entire category, then re-activate individual metrics in that category that you are interested in."
msgstr "``disableMetrics`` フラグは``enableMetrics`` の前に評価されるため、カテゴリ全体を非アクティブにしてから、そのカテゴリの中で関心のある個々のメトリッ クを再度アクティブにすることができます。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:211
msgid "For example, to deactivate all internal and http metrics but keep ``ebpf_net.collector_health``, use:"
msgstr "例えば、すべての内部およびhttpメトリックスを無効にし、``ebpf_net.collector_health`` を維持するには、次のようにします："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:225
msgid "Configure features using gates"
msgstr "ゲートを使用して機能を構成する"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:227
msgid "Use the ``agent.featureGates``, ``clusterReceiver.featureGates``, and ``gateway.featureGates`` configs to activate or deactivate features of the ``otel-collector`` agent, ``clusterReceiver``, and gateway, respectively. These configs are used to populate the otelcol binary startup argument ``-feature-gates``."
msgstr "``agent.featureGates`` 、``clusterReceiver.featureGates`` 、``gateway.featureGates`` のコンフィグを使用して、それぞれ``otel-collector`` エージェント、``clusterReceiver`` 、ゲートウェイの機能を有効化または無効化する。これらの設定は、otelcol バイナリのスタートアップ引数``-feature-gates`` を入力するために使用されます。"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:229
msgid "For example, to activate ``feature1`` in the agent, activate ``feature2`` in the ``clusterReceiver``, and deactivate ``feature2`` in the gateway, run:"
msgstr "例えば、エージェントで``feature1`` をアクティブにし、``clusterReceiver`` で``feature2`` をアクティブにし、ゲートウェイで``feature2`` を非アクティブにするには、以下を実行する："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:236
msgid "Set the pod security policy manually"
msgstr "ポッドセキュリティポリシーを手動で設定する"

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:238
msgid "Support of Pod Security Policies (PSP) was removed in Kubernetes 1.25. If you still rely on PSPs in an older cluster, you can add PSP manually:"
msgstr "Pod Security Policies（PSP）のサポートはKubernetes 1.25で削除された。古いクラスタのPSPにまだ依存している場合は、PSPを手動で追加できます："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:240
msgid "Run the following command to install the PSP. Don't forget to add the ``--namespace`` kubectl argument if needed:"
msgstr "以下のコマンドを実行し、PSPをインストールする。必要であれば、``--namespace`` kubectl引数を追加することをお忘れなく："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:277
msgid "Add the following custom ClusterRole rule in your values.yaml file along with all other required fields like ``clusterName``, ``splunkObservability`` or ``splunkPlatform``:"
msgstr "以下のカスタムClusterRoleルールをvalues.yamlファイルに、``clusterName`` 、``splunkObservability`` 、``splunkPlatform`` のような他のすべての必須フィールドと一緒に追加します："

#: ../../gdi/opentelemetry/kubernetes-config-advanced.rst:288
msgid "Install the Helm chart:"
msgstr "ヘルムチャートを取り付ける："

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:-1
msgid "Configure logs for the Splunk Distribution of OpenTelemetry Collector for Kubernetes."
msgstr "OpenTelemetry Collector for Kubernetes の Splunk ディストリビューションのログを設定します。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:5
msgid "Configure logs for Kubernetes"
msgstr "Kubernetesのログを設定する"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:11
msgid "See how to configure the Collector for Kubernetes at :ref:`otel-kubernetes-config` and :ref:`otel-kubernetes-config-advanced`."
msgstr "Kubernetes 用 Collector の設定方法は、:ref:`otel-kubernetes-config` および:ref:`otel-kubernetes-config-advanced` を参照。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:13
msgid "The Helm chart currently uses Fluentd for Kubernetes logs collection. Logs collected with Fluentd are sent through the Collector agent, which does all of the necessary metadata enrichment."
msgstr "Helmチャートは現在、Kubernetesのログ収集にFluentdを使用している。Fluentdで収集されたログは、必要なメタデータのエンリッチメントをすべて行うCollectorエージェントを通して送信されます。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:15
msgid "Add the following line to your configuration to use OpenTelemetry logs collection instead of Fluentd:"
msgstr "Fluentd の代わりに OpenTelemetry のログ収集を使うように、設定に以下の行を追加します："

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:21
msgid "The following are known limitations of native OpenTelemetry logs collection:"
msgstr "以下は、OpenTelemetryのネイティブログ収集の既知の制限事項です："

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:23
msgid "The ``service.name`` attribute is not automatically constructed in an Istio environment, which means that correlation between logs and traces does not work in Splunk Observability Cloud. Use Fluentd for logs collection if you deploy the Helm chart with ``autodetect.istio=true``."
msgstr "Istio 環境では``service.name`` 属性が自動的に構築されないため、Splunk Observability Cloud ではログとトレースの相関が機能しません。Helm チャートを``autodetect.istio=true`` でデプロイする場合は、ログ収集に Fluentd を使用する。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:24
msgid "Journald logs cannot be natively collected by the Collector at this time."
msgstr "現時点では、Journaldログをコレクタでネイティブに収集することはできません。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:25
msgid "Logs collection is not supported in GKE Autopilot at this time."
msgstr "現時点では、GKE オートパイロットではログの収集はサポートされていません。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:26
msgid "See also :ref:`other rules and limitations for metrics and dimensions <metric-dimension-names>`. For instance, you can have up to 36 dimensions per MTS, otherwise the data point is dropped."
msgstr ":ref:`other rules and limitations for metrics and dimensions <metric-dimension-names>` も参照のこと。例えば、1つのMTSにつき最大36個の次元を持つことができますが、そうでない場合はデータポイントが削除されます。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:29
msgid "Add log files from Kubernetes host machines or volumes"
msgstr "Kubernetesホストマシンまたはボリュームからログファイルを追加する"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:31
msgid "Add additional log files to be ingested from Kubernetes host machines and Kubernetes volumes by configuring ``agent.extraVolumes``, ``agent.extraVolumeMounts``, and ``logsCollection.extraFileLogs`` in the values.yaml file used to deploy the Collector for Kubernetes."
msgstr "Kubernetes用のCollectorをデプロイするために使用されるvalues.yamlファイルで``agent.extraVolumes`` 、``agent.extraVolumeMounts`` 、``logsCollection.extraFileLogs`` を構成することにより、KubernetesホストマシンとKubernetesボリュームから取り込むログファイルを追加します。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:33
msgid "The following example shows how to add logs from Kubernetes host machines:"
msgstr "次の例は、Kubernetesホストマシンからログを追加する方法を示している："

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:58
msgid "Process multi-line logs"
msgstr "複数行のログを処理する"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:60
msgid "The Splunk Distribution of OpenTelemetry Collector for Kubernetes supports parsing of multi-line logs to help read, understand, and troubleshoot the multi-line logs in a better way. Process multi-line logs by adding the following section to your values.yaml configuration:"
msgstr "OpenTelemetry Collector for Kubernetes の Splunk ディストリビューションは、複数行ログの解析に対応しており、複数行ログの読み取り、理解、トラブルシューティングをより良い方法で支援します。values.yaml設定に以下のセクションを追加して、複数行ログを処理する："

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:76
msgid "Use :new-page:`regex101 <https://regex101.com/ >` to find a golang regex that works for your format and specify it in the config file for the config option ``firstEntryRegex``."
msgstr ":new-page:`regex101 <https://regex101.com/ >` を使って、あなたのフォーマットに合うgolang regexを見つけ、設定ファイルのconfigオプション``firstEntryRegex`` で指定します。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:79
msgid "Collect journald events"
msgstr "ジャーナルされたイベントの収集"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:81
msgid "The Splunk Distribution of OpenTelemetry Collector for Kubernetes can collect journald events from Kubernetes environment. Process journald events by adding the following section to your values.yaml configuration:"
msgstr "OpenTelemetry Collector for Kubernetes の Splunk ディストリビューションは、Kubernetes 環境から journald イベントを収集できます。以下のセクションを values.yaml 設定に追加して、journald イベントを処理します："

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:103
msgid "Manage log ingestion using annotations"
msgstr "アノテーションを使ってログの取り込みを管理する"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:105
msgid "The following annotations for log ingestion management are supported:"
msgstr "ログ取り込み管理のための以下のアノテーションがサポートされている："

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:107
msgid "Use the ``splunk.com/index`` annotation on pods or namespaces to indicate which Splunk platform indexes you want to send logs to. Pod annotation will take precedence over namespace annotation when both are annotated."
msgstr "ポッドまたは名前空間の``splunk.com/index`` アノテーションを使用して、ログを送信する Splunk プラットフォームインデックスを指定します。Podアノテーションは、両方がアノテーションされている場合、名前空間アノテーションよりも優先されます。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:109
msgid "For example, to send logs from the ``kube-system`` namespace to the ``k8s_events`` index, use the command:"
msgstr "例えば、``kube-system`` ネームスペースから``k8s_events`` インデックスにログを送信するには、コマンドを使用する："

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:115
msgid "Filter logs using pod or namespace annotations:"
msgstr "ポッドまたは名前空間アノテーションを使用してログをフィルタリングする："

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:117
msgid "If ``logsCollection.containers.useSplunkIncludeAnnotation`` is ``false`` (default value), set the ``splunk.com/exclude`` annotation to ``true`` on pods or namespaces to exclude their logs from being ingested."
msgstr "``logsCollection.containers.useSplunkIncludeAnnotation`` が``false`` の場合（デフォルト値）、ポッドまたはネームスペースの``splunk.com/exclude`` アノテーションを``true`` に設定して、それらのログの取り込みを除外します。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:119
msgid "If ``logsCollection.containers.useSplunkIncludeAnnotation`` is ``true``, set the ``splunk.com/include`` annotation to ``true`` on pods or namespaces to only ingest their logs. All other logs will be ignored."
msgstr "``logsCollection.containers.useSplunkIncludeAnnotation`` が``true`` の場合、``splunk.com/include`` アノテーションをポッドまたはネームスペースの``true`` に設定すると、それらのログのみが取り込まれます。それ以外のログは無視される。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:121
msgid "Use the ``splunk.com/sourcetype`` annotation on a pod to overwrite the ``sourcetype`` field. If not set, it will default to ``kube:container:CONTAINER_NAME``."
msgstr "``sourcetype`` フィールドを上書きするには、ポッドで``splunk.com/sourcetype`` アノテーションを使用します。設定されていない場合、デフォルトは``kube:container:CONTAINER_NAME`` となる。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:124
msgid "Review performance benchmarks"
msgstr "パフォーマンス・ベンチマークの見直し"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:126
msgid "Some configurations used with the OpenTelemetry Collector (as set using the Collector for Kubernetes Helm chart) can have an impact on overall performance of log ingestion. The more receivers, processors, exporters, and extensions that are added to any of the pipelines, the greater the performance impact."
msgstr "OpenTelemetry Collector（KubernetesのHelmチャート用のCollectorを使用して設定される）で使用されるいくつかの設定は、ログ取り込みの全体的なパフォーマンスに影響を与える可能性があります。パイプラインに追加されるレシーバー、プロセッサー、エクスポーター、エクステンションの数が多ければ多いほど、パフォーマンスへの影響は大きくなる。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:128
msgid "The Splunk Distribution of OpenTelemetry Collector for Kubernetes can exceed the default throughput of the HTTP Event Collector (HEC). To address capacity needs, monitor the HEC throughput and back pressure on the Collector for Kubernetes deployments and be prepared to add additional nodes as needed."
msgstr "OpenTelemetry Collector for Kubernetes の Splunk Distribution は、HTTP Event Collector (HEC) のデフォルトのスループットを超える可能性があります。キャパシティ・ニーズに対処するため、KubernetesデプロイメントではHECのスループットとCollectorの背圧を監視し、必要に応じてノードを追加できるようにしておく。"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:130
msgid "The following table provides a summary of performance benchmarks run internally:"
msgstr "以下の表は、社内で実施されたパフォーマンス・ベンチマークの概要である："

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:132
msgid "Performance benchmarks"
msgstr "パフォーマンス・ベンチマーク"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:136
msgid "Log generator count"
msgstr "ログジェネレーター数"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:137
msgid "Event size (byte)"
msgstr "イベントサイズ（バイト）"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:138
msgid "Agent CPU usage"
msgstr "エージェントCPU使用率"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:139
msgid "Agent EPS"
msgstr "エージェントEPS"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:142 ../../gdi/opentelemetry/kubernetes-config-logs.rst:157 ../../gdi/opentelemetry/kubernetes-config-logs.rst:162 ../../gdi/opentelemetry/kubernetes-config-logs.rst:167
msgid "256"
msgstr "256"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:143 ../../gdi/opentelemetry/kubernetes-config-logs.rst:148 ../../gdi/opentelemetry/kubernetes-config-logs.rst:153
msgid "1.8"
msgstr "1.8"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:144
msgid "30,000"
msgstr "30,000"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:147
msgid "516"
msgstr "516"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:149
msgid "28,000"
msgstr "28,000"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:152
msgid "1024"
msgstr "1024"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:154
msgid "24,000"
msgstr "24,000"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:156
msgid "5"
msgstr "5"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:158 ../../gdi/opentelemetry/kubernetes-config-logs.rst:168
msgid "3.2"
msgstr "3.2"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:159
msgid "54,000"
msgstr "54,000"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:161
msgid "7"
msgstr "7"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:164
msgid "52,000"
msgstr "52,000"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:169
msgid "53,000"
msgstr "53,000"

#: ../../gdi/opentelemetry/kubernetes-config-logs.rst:171
msgid "The data pipelines for these test runs involved reading container logs as they are being written, then parsing filename for metadata, enriching it with Kubernetes metadata, reformatting the data structure, and sending logs (without compression) to the Splunk HEC endpoint."
msgstr "これらのテスト実行のためのデータパイプラインは、コンテナログが書き込まれるときに読み込み、ファイル名を解析してメタデータを取得し、Kubernetes メタデータでリッチ化し、データ構造を再フォーマットして、ログを (圧縮せずに) Splunk HEC エンドポイントに送信する。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:3
msgid "Mapping service and mapping report"
msgstr "マッピング・サービスとマッピング・レポート"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:7
msgid "The mapping service lets you migrate from Smart Agent to OpenTelemetry deployments without significantly disrupting the form or content of your existing dashboards, charts, and detectors. It automatically translates collectd (Smart Agent) conventions into the syntax used by the Collector as a background operation."
msgstr "マッピング・サービスにより、既存のダッシュボード、チャート、ディテクターの形式や内容を大きく崩すことなく、Smart AgentからOpenTelemetryの展開に移行することができます。collectd (Smart Agent)の規約をコレクタがバックグラウンドで使用する構文に自動的に変換します。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:9
msgid "Mapping supports multiple observers, deployment types, and kinds of metadata."
msgstr "マッピングは複数のオブザーバー、デプロイメントタイプ、メタデータの種類をサポートする。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:11
msgid "How does the mapping service work?"
msgstr "マッピングサービスはどのように機能するのか？"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:13
msgid "The mapping service is a transition tool that defines equivalencies between legacy SignalFx Smart Agent metric naming and semantic conventions and the OpenTelemetry names and formats:"
msgstr "マッピング・サービスは、従来のSignalFx Smart Agentのメトリックの命名とセマンティックな規約と、OpenTelemetryの名前とフォーマットの間の等価性を定義する移行ツールです："

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:15
msgid "It applies to metrics and metric time series (MTS), dimensions, and properties."
msgstr "これは、メトリックスとメトリックス時系列（MTS）、ディメンジョン、およびプロパティに適用されます。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:16
msgid "Mapping logic treats any of the names for a metric or property as referring to that same metric or property in OpenTelemetry, without tracking versions."
msgstr "マッピング・ロジックは、バージョンを追跡することなく、メトリックまたはプロパティの名前のいずれかを、OpenTelemetryの同じメトリックまたはプロパティを参照しているものとして扱います。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:18
msgid "For example, if you track CPU utilization for your Kubernetes pod, your analytics can use the ``kubernetes.container_cpu_limit`` value. In that case, the mapping service updates your existing queries to include both legacy semantics and new semantics (such as ``k8s.container.cpu_limit``) joined by an OR clause."
msgstr "例えば、KubernetesポッドのCPU使用率を追跡する場合、アナリティクスでは``kubernetes.container_cpu_limit`` 。その場合、マッピング・サービスは既存のクエリを更新し、レガシー・セマンティクスと、OR句で結合された新しいセマンティクス（``k8s.container.cpu_limit`` など）の両方を含める。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:20
msgid "Navigate your data"
msgstr "データをナビゲートする"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:22
msgid "Whether you're using the Smart Agent or the Collector, your original dashboards and detectors function the same way."
msgstr "スマートエージェントまたはコレクターのどちらを使用していても、元のダッシュボードと検出器は同じように機能します。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:24
msgid "Infrastructure Navigator views use the mapping service to show both old collection data and new collection data."
msgstr "インフラストラクチャ・ナビゲータのビューは、マッピング・サービスを使用して、古いコレクション・データと新しいコレクション・データの両方を表示します。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:25
msgid "After you've migrated to the Collector, read <a href=\"https://docs.splunk.com/Observability/metrics-and-metadata/metrics-finder-metadata-catalog.html\" target=\"_blank\">Use the Metric Finder and Metadata Catalog</a> to learn how to use the Metric Finder and Metadata Catalog to find, view, and edit information about the metadata in your system."
msgstr "Collectorに移行したら、<a href=\"https://docs.splunk.com/Observability/metrics-and-metadata/metrics-finder-metadata-catalog.html\" target=\"_blank\">Use Metric Finder and Metadata Catalog</a>を読んで、Metric FinderとMetadata Catalogを使用して、システムのメタデータに関する情報を検索、表示、編集する方法を学んでください。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:27
msgid "Obtain the transition mapping report"
msgstr "トランジション・マッピング・レポートの入手"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:29
msgid "The **Mapping and OTel Transition Impact Report** explains how the transition from Smart Agent to OpenTelemetry affects some of the variables and saved filters in the following dashboards, charts, and detectors."
msgstr "Mapping and OTel Transition Impact Report** では、Smart Agent から OpenTelemetry への移行が、以下のダッシュボード、チャート、ディテクタの変数や保存されたフィルタの一部にどのような影響を与えるかを説明しています。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:31
msgid "The mapping impact report also tells you where to find whatever subset of your content calls functions with Smart Agent names, so that you can update that content either by hand or programmatically to complete your transition to open telemetry."
msgstr "マッピングインパクトレポートは、コンテンツのサブセットがスマートエージェントの名前を持つ関数を呼び出す場所を教えてくれます。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:33
msgid "Access the transition report"
msgstr "移行レポートへのアクセス"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:35
msgid "To access the migration transition impact report, follow these steps:"
msgstr "移行影響レポートにアクセスするには、以下の手順に従ってください："

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:38
msgid "In the navigation menu, select **Settings** and then select **Billing and Usage**."
msgstr "ナビゲーションメニューで、**設定**を選択し、**課金と使用**を選択します。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:39
msgid "Click the **View detailed usage reports** link."
msgstr "詳細な使用レポートを見る**リンクをクリックしてください。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:40
msgid "Select the **OpenTelemetry Migration** tab."
msgstr "OpenTelemetry Migration**タブを選択します。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:41
msgid "Click **Download** to open the report as a comma-separated values file."
msgstr "カンマ区切りの値ファイルとしてレポートを開くには、**ダウンロード**をクリックします。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:43
msgid "What is flagged for update in translation"
msgstr "翻訳で更新フラグが立つもの"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:45
msgid "The report is specific to your computing environment. It flags the following items and tells you where to find and update them in your collection of plots, filters, and functions:"
msgstr "このレポートはお客様のコンピューティング環境に特化したものです。これは以下の項目にフラグを立て、プロット、フィルター、関数のコレクションのどこでそれらを見つけ、更新するかを教えてくれる："

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:47
msgid "Wildcards"
msgstr "ワイルドカード"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:48
msgid "Direct references to Smart Agent metrics"
msgstr "スマートエージェントのメトリクスへの直接参照"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:49
msgid "Filters that use Smart Agent dimensions"
msgstr "スマートエージェントのディメンションを使用するフィルタ"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:50
msgid "Aggregates that use Smart Agent dimensions"
msgstr "スマート・エージェントのディメンションを使用する集計"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:52
msgid "The mapping impact report also shows which OpenTelemetry metrics and dimensions work well as replacements for specific Smart Agent metrics and dimensions, with the important exception of wildcards not supported by OpenTelemetry."
msgstr "マッピングの影響レポートは、OpenTelemetryがサポートしていないワイルドカードを除く、どのOpenTelemetryメトリクスとディメンションが、特定のSmart Agentメトリクスとディメンションの代替としてうまく機能するかも示しています。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:54
msgid "Interpret the mapping impact report"
msgstr "マッピング・インパクト・レポートの解釈"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:56
msgid "The Mapping and OTel Transition Impact Report summarizes the scope of component name change associated with your migration to open telemetry. It assesses your data set to list the tokens currently used as metric, dimension, property or tag names, and highlights migration rules that could generate conflict between old and new equivalence groups."
msgstr "Mapping and OTel Transition Impact Report は、オープン・テレメトリーへの移行に伴うコンポーネント名の変更範囲をまとめたものです。データ・セットを評価して、メトリック、ディメンジョン、プロパティ、またはタグ名として現在使用されているトークンをリストし、新旧の等価グループ間で競合が発生する可能性のある移行ルールを強調表示します。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:58
msgid "The report explains when migration from an old MTS to a new MTS will trigger detectors, and which detectors those are. For example, heartbeat detectors working with un-aggregated MTS are affected by design, but if a heartbeat detector is working with a dimension that continues across the transition to OTel, then the mapping service ensures continuity so that you do not have to restart that detector."
msgstr "このレポートでは、古いMTSから新しいMTSへの移行がどのような場合に探知機を作動させるのか、また、どの探知機なのかを説明しています。たとえば、集約されていないMTSで動作しているハートビート検出器は、設計の影響を受けますが、ハートビート検出器がOTelへの移行後も継続するディメンションで動作している場合は、マッピングサービスによって継続性が確保されるため、検出器を再起動する必要はありません。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:60
msgid "The mapping transition impact report assesses migration effects across three categories:"
msgstr "マッピング移行影響報告書では、3つのカテゴリーにわたって移民の影響を評価している："

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:62
msgid "Data object types"
msgstr "データ・オブジェクトの種類"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:63
msgid "Team responsibilities"
msgstr "チームの責任"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:64
msgid "Migration mitigation steps you should take"
msgstr "移行緩和のために取るべき措置"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:66
msgid "Avoid unexpected results"
msgstr "予期せぬ結果を避ける"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:68
msgid "Because the mapping service only renames existing MTS when filtering or grouping requires renaming to conform to OpenTelemetry Collector conventions, correlation across different datasets yields unexpected results when a mapped MTS is correlated with an unmapped MTS. This can happen, for example, when an MTS attempts to correlate with a time-shifted or transformed version of itself."
msgstr "マッピング・サービスは、フィルタリングやグループ化で OpenTelemetry Collector の慣例に準拠するために名前の変更が必要な場合にのみ既存の MTS の名前を変更するため、マッピングされた MTS をマッピングされていない MTS と相関させると、異なるデータセット間の相関が予期せぬ結果をもたらします。これは例えば、MTSがそれ自身のタイムシフトされたバージョンや変換されたバージョンと相関を取ろうとするときに起こりうる。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:70
msgid "If you have charts and detectors built from formulas whose terms use different agents, you won't get the alerts you expect."
msgstr "異なるエージェントを使用する数式からチャートやディテクターを構築した場合、期待するアラートは得られません。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:72
msgid "To resolve this issue, explicitly filter or group by dimensions so that Mapping Service renames the fields in all the MTS in the job to match the name you specified in the filter or grouping."
msgstr "この問題を解決するには、ディメンジョンで明示的にフィルタまたはグループ化し、マッピングサービスがジョブ内のすべてのMTSのフィールド名をフィルタまたはグループ化で指定した名前に一致するように変更します。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:74
msgid "Data object type information"
msgstr "データ・オブジェクト・タイプ情報"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:76
msgid "The mapping impact report explains migration impacts within your organization to the following object types:"
msgstr "マッピング影響レポートは、以下のオブジェクトタイプに対する組織内の移行の影響を説明します："

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:78
msgid "Dashboards"
msgstr "ダッシュボード"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:79
msgid "Charts"
msgstr "チャート"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:80
msgid "Detectors"
msgstr "検出器"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:82
msgid "The report shows how many objects of each type are affected, and includes tables that show where to find the affected objects. You can read the report to see, for example, a list of all affected charts on a given dashboard or within a dashboard group."
msgstr "レポートには、各タイプのオブジェクトの数が表示され、影響を受けたオブジェクトの場所を示す表が含まれています。レポートを読むと、例えば、指定したダッシュボード上またはダッシュボードグループ内の影響を受けるすべてのチャートのリストを見ることができます。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:84
msgid "Team information"
msgstr "チーム情報"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:86
msgid "The mapping impact report extracts information from your data set about stakeholders, meaning the people who created object types or are affected by changes to them because they're on email lists of employees to be notified in the event of, for example, a detector being triggered by a critical alert condition."
msgstr "マッピング影響レポートは、データセットから利害関係者に関する情報を抽出します。つまり、オブジェクト・タイプを作成した人、またはオブジェクト・タイプの変更によって影響を受ける人（例えば、重大な警告条件によって検出器がトリガーされた場合に通知される従業員の電子メール・リストに登録されているため）を意味します。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:88
msgid "When applicable, the report shows the names of teams linked to particular detectors. The report also identifies people or teams linked to particular dashboard groups."
msgstr "該当する場合、レポートには特定の検出器にリンクされているチーム名が表示されます。また、特定のダッシュボード・グループに関連する人物やチームを特定することもできる。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:90
msgid "Migration mitigation steps"
msgstr "マイグレーション緩和ステップ"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:92
msgid "The mapping impact report explains what effect migration will have on the content highlighted in it, so that you can modify that content as needed to ensure a smoother transition."
msgstr "マッピングの影響レポートでは、その中で強調されているコンテンツに移行がどのような影響を及ぼすかを説明しているため、必要に応じてそのコンテンツを修正し、よりスムーズな移行を実現することができます。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:94
msgid "Flagged items that need to be modified include the following (as listed in the report):"
msgstr "修正が必要なフラグ項目は以下の通り（レポートに記載）："

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:96
msgid "Wildcards used in a plot, filter, or function."
msgstr "プロット、フィルタ、関数で使用されるワイルドカード。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:97
msgid "Direct references to Smart Agent metrics."
msgstr "スマート・エージェントのメトリクスへの直接参照。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:98
msgid "Filters that use Smart Agent dimensions."
msgstr "スマート・エージェントのディメンションを使用するフィルタ。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:99
msgid "Aggregates that use Smart Agent dimensions."
msgstr "スマート・エージェントのディメンジョンを使用する集計。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:101
msgid "While the mapping impact report highlights items that need revising because they use legacy syntax or conventions, it also pairs those items with the OTel-based metrics and dimensions that you can use as substitutes for them."
msgstr "マッピング・インパクト・レポートでは、従来の構文や規約を使用しているために改訂が必要な項目が強調表示され ますが、それらの項目を OTel ベースのメトリクスおよびディメンジョンとペアにすることで、それらの項目の代用と することもできます。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:103
msgid "OpenTelemetry values and their legacy equivalents"
msgstr "OpenTelemetryの値とレガシーに相当する値"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:105
msgid "Refer to the following table for OpenTelemetry values and their legacy equivalents:"
msgstr "OpenTelemetryの値と、それに相当するレガシーの値については、以下の表を参照してください："

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "**Legacy semantics**"
msgstr "**レガシー・セマンティクス"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "**OpenTelemetry semantics**"
msgstr "**OpenTelemetryのセマンティクス**。"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container_fs_usage_bytes` (Metric)"
msgstr "`container_fs_usage_bytes` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container.filesystem.usage` (Metric)"
msgstr "`container.filesystem.usage` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container_id` (Dimension)"
msgstr "`container_id` （ディメンション）"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container.id` (dimension)"
msgstr "`container.id` （ディメンション）"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container_image` (Dimension)"
msgstr "`container_image` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container.image.name` (dimension)"
msgstr "`container.image.name` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container_memory_available_bytes` (Metric)"
msgstr "`container_memory_available_bytes` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container.memory.available` (Metric)"
msgstr "`container.memory.available` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container_memory_major_page_faults` (Metric)"
msgstr "`container_memory_major_page_faults` (Metric)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container.memory.major_page_faults` (Metric)"
msgstr "`container.memory.major_page_faults` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container_memory_page_faults` (Metric)"
msgstr "`container_memory_page_faults` (Metric)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container.memory.page_faults` (Metric)"
msgstr "`container.memory.page_faults` (Metric)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container_memory_rss_bytes` (Metric)"
msgstr "`container_memory_rss_bytes` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container.memory.rss` (Metric)"
msgstr "`container.memory.rss` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container_memory_usage_bytes` (Metric)"
msgstr "`container_memory_usage_bytes` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container.memory.usage` (Metric)"
msgstr "`container.memory.usage` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container_memory_working_set_bytes` (Metric)"
msgstr "`container_memory_working_set_bytes` (Metric)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container.memory.working_set` (Metric)"
msgstr "`container.memory.working_set` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container_name` (Dimension)"
msgstr "`コンテナ名` （ディメンション）"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container.name` (dimension)"
msgstr "`container.name` （ディメンション）"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container_spec_name` (Dimension)"
msgstr "`container_spec_name` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.container.name` (dimension)"
msgstr "`k8s.container.name` (dimension)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container_status_reason` (Property)"
msgstr "`container_status_reason` (Property)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container.status.reason` (Property)"
msgstr "`container.status.reason` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container_status` (Property)"
msgstr "`container_status` （プロパティ）"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`container.status` (Property)"
msgstr "`container.status` （プロパティ）"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`cronJob_uid` (Property)"
msgstr "`cronJob_uid` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.cronjob.uid` (Property)"
msgstr "`k8s.cronjob.uid` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`cronJob` (Property)"
msgstr "`cronJob` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.cronjob.name` (Property)"
msgstr "`k8s.cronjob.name` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`daemonSet_uid` (Property)"
msgstr "`daemonSet_uid` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.daemonset.uid` (Property)"
msgstr "`k8s.daemonset.uid` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`daemonSet` (Property)"
msgstr "`daemonSet` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.daemonset.name` (Property)"
msgstr "`k8s.daemonset.name` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`deployment_uid` (Property)"
msgstr "`deployment_uid` （プロパティ）"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.deployment.uid` (Property)"
msgstr "`k8s.deployment.uid` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`deployment` (Property)"
msgstr "`配置` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.deployment.name` (Property)"
msgstr "`k8s.deployment.name` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`df_complex.free` (Metric)"
msgstr "`df_complex.free` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.filesystem.usage` (Metric) with dimension name `state` equal to `free`"
msgstr "`system.filesystem.usage` (Metric) with dimension name`state` equal to`free.`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`df_complex.reserved` (Metric)"
msgstr "`df_complex.reserved` (Metric)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.filesystem.usage` (Metric) with dimension name `state` equal to `reserved`"
msgstr "`system.filesystem.usage` (Metric) with dimension name`state` equal to`reserved.`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`df_complex.used` (Metric)"
msgstr "`df_complex.used` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.filesystem.usage` (Metric) with dimension name `state` equal to `used`"
msgstr "`system.filesystem.usage` (Metric) with dimension name`state` equal to`used.`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`df_inodes.free` (Metric)"
msgstr "`df_inodes.free` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.filesystem.inodes.usage` (Metric) with dimension name `state` equal to `free`"
msgstr "`system.filesystem.inodes.usage` (Metric) with dimension name`state` equal to`free.`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`df_inodes.used` (Metric)"
msgstr "`df_inodes.used` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.filesystem.inodes.usage` (Metric) with dimension name `state` equal to `used`"
msgstr "`system.filesystem.inodes.usage` (Metric) with dimension name`state` equal to`used.`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`disk_merged.read` (Metric)"
msgstr "`disk_merged.read` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.disk.merged` (Metric) with dimension name `direction` equal to `read` and with the following dimensions renamed: `device` to `disk`"
msgstr "`system.disk.merged` (Metric) ディメンジョン名`direction` equal to`read` and with following dimensions renamed:`device` to`disk`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`disk_merged.write` (Metric)"
msgstr "`disk_merged.write` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.disk.merged` (Metric) with dimension name `direction` equal to `write` and with the following dimensions renamed: `device` to `disk`"
msgstr "``system.disk.merged` （メートル法）。ディメンジョン名`direction` write` と等しく、次のディメンジョンの名前が変更されている。`device` to`disk`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`disk_octets.read` (Metric)"
msgstr "`disk_octets.read` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.disk.io` (Metric) with dimension name `direction` equal to `read` and with the following dimensions renamed: `device` to `disk`"
msgstr "`system.disk.io` (メトリック) ディメンジョン名`方向` ` 読み込み` と等しく、次のディメンジョンの名前が変更されています:`デバイス` ` ディスク`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`disk_octets.write` (Metric)"
msgstr "`disk_octets.write` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.disk.io` (Metric) with dimension name `direction` equal to `write` and with the following dimensions renamed: `device` to `disk`"
msgstr "`system.disk.io` (メトリック) ディメンジョン名`方向` 等しい`書込み` で、以下のディメンジョンの名前が変更されている:`デバイス` から`ディスク`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`disk_ops.read` (Metric)"
msgstr "`disk_ops.read` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.disk.operations` (Metric) with dimension name `direction` equal to `read` and with the following dimensions renamed: `device` to `disk`"
msgstr "``system.disk.operations` （メートル法）。ディメンジョン名`方向` 読み込み` に等しく、次のディメンジョンの名前が変更されている：`デバイス` から`ディスク。`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`disk_ops.write` (Metric)"
msgstr "`disk_ops.write` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.disk.operations` (Metric) with dimension name `direction` equal to `write` and with the following dimensions renamed: `device` to `disk`"
msgstr "``system.disk.operations` (Metric) ディメンジョン名`direction` write` に等しく、次のディメンジョン名が変更されている：`device` to`disk`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`disk_time.read` (Metric)"
msgstr "`disk_time.read` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.disk.time` (Metric) with dimension name `direction` equal to `read` and with the following dimensions renamed: `device` to `disk`"
msgstr "`system.disk.time` (メートル法) ディメンジョン名`方向` ` リード` と等しく、次のディメンジョンの名前が変更されている：`デバイス` から`ディスク。`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`disk_time.write` (Metric)"
msgstr "`disk_time.write` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.disk.time` (Metric) with dimension name `direction` equal to `write` and with the following dimensions renamed: `device` to `disk`"
msgstr "`system.disk.time` (メートル法) ディメンジョン名`方向` 等しい`書込み` で、以下のディメンジョンがリネームされている：`デバイス` から`ディスク。`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`host` (dimension)"
msgstr "`ホスト` （ディメンション）"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`host.name` (dimension)"
msgstr "`ホスト名` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`if_dropped.rx` (Metric)"
msgstr "`if_dropped.rx` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.network.dropped` (Metric) with dimension name `direction` equal to `receive` and with the following dimensions renamed: `device` to `interface`"
msgstr "`` system.network.dropped` (Metric) ディメンジョン名`方向` 受信`と等しく、次のディメンジョンの名前が変更された`デバイス` から`インターフェース。`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`if_dropped.tx` (Metric)"
msgstr "`if_dropped.tx` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.network.dropped` (Metric) with dimension name `direction` equal to `transmit` and with the following dimensions renamed: `device` to `interface`"
msgstr "`` system.network.dropped` (Metric) ディメンジョン名`方向` 送信`に等しく、次のディメンジョンの名前が変更された`デバイス` から`インターフェース。`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`if_errors.rx` (Metric)"
msgstr "`if_errors.rx` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.network.errors` (Metric) with dimension name `direction` equal to `receive` and with the following dimensions renamed: `device` to `interface`"
msgstr "`` system.network.errors` (Metric) ディメンジョン名`方向` 受信`と等しく、次のディメンジョンの名前が変更されました:`デバイス` から`インターフェース`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`if_errors.tx` (Metric)"
msgstr "`if_errors.tx` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.network.errors` (Metric) with dimension name `direction` equal to `transmit` and with the following dimensions renamed: `device` to `interface`"
msgstr "`` system.network.errors` (Metric) ディメンジョン名`方向` 送信`に等しく、次のディメンジョンの名前が変更された`デバイス` から`インターフェース。`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`if_octets.rx` (Metric)"
msgstr "`if_octets.rx` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.network.io` (Metric) with dimension name `direction` equal to `receive` and with the following dimensions renamed: `device` to `interface`"
msgstr "`` system.network.io` (メトリック) ディメンジョン名`方向` 受信`と等しく、次のディメンジョンの名前が変更されている:`デバイス` から`インターフェース。`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`if_octets.tx` (Metric)"
msgstr "`if_octets.tx` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.network.io` (Metric) with dimension name `direction` equal to `transmit` and with the following dimensions renamed: `device` to `interface`"
msgstr "`system.network.io` (メトリック) ディメンジョン名`方向` 送信`と等しい` 次のディメンジョンの名前が変更されている:`デバイス` から`インターフェース`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`if_packets.rx` (Metric)"
msgstr "`if_packets.rx` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.network.packets` (Metric) with dimension name `direction` equal to `receive` and with the following dimensions renamed: `device` to `interface`"
msgstr "``system.network.packets` （メトリック）。ディメンジョン名`方向` 受信` と等しく、以下のディメンジョンの名前が変更されている：`デバイス` から`インターフェース。`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`if_packets.tx` (Metric)"
msgstr "`if_packets.tx` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.network.packets` (Metric) with dimension name `direction` equal to `transmit` and with the following dimensions renamed: `device` to `interface`"
msgstr "``system.network.packets` （メトリック）。ディメンジョン名`方向` 送信` と等しく、次のディメンジョンの名前が変更されている：`デバイス` から`インターフェース。`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`job_uid` (Property)"
msgstr "`job_uid` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.job.uid` (Property)"
msgstr "`k8s.job.uid` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`job` (Property)"
msgstr "`job` (不動産)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.job.name` (Property)"
msgstr "`k8s.job.name` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.container_cpu_limit` (Metric)"
msgstr "`kubernetes.container_cpu_limit` (Metric)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.container.cpu_limit` (Metric)"
msgstr "`k8s.container.cpu_limit` (Metric)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.container_cpu_request` (Metric)"
msgstr "`kubernetes.container_cpu_request` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.container.cpu_request` (Metric)"
msgstr "`k8s.container.cpu_request` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.container_ephemeral_storage_limit` (Metric)"
msgstr "`kubernetes.container_ephemeral_storage_limit` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.container.ephemeral-storage_limit` (Metric)"
msgstr "`k8s.container.ephemeral-storage_limit` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.container_ephemeral_storage_request` (Metric)"
msgstr "`kubernetes.container_ephemeral_storage_request` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.container.ephemeral-storage_request` (Metric)"
msgstr "`k8s.container.ephemeral-storage_request` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.container_memory_limit` (Metric)"
msgstr "`kubernetes.container_memory_limit` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.container.memory_limit` (Metric)"
msgstr "`k8s.container.memory_limit` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.container_memory_request` (Metric)"
msgstr "`kubernetes.container_memory_request` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.container.memory_request` (Metric)"
msgstr "`k8s.container.memory_request` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.container_ready` (Metric)"
msgstr "`kubernetes.container_ready` (メトリクス)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.container.ready` (Metric)"
msgstr "`k8s.container.ready` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.container_restart_count` (Metric)"
msgstr "`kubernetes.container_restart_count` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.container.restarts` (Metric)"
msgstr "`k8s.container.restarts` (メトリクス)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.cronjob.active` (Metric)"
msgstr "`kubernetes.cronjob.active` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.cronjob.active_jobs` (Metric) and with the following dimensions renamed: `k8s.cronjob.name` to `kubernetes_name`, `k8s.cronjob.uid` to `kubernetes_uid`"
msgstr "`k8s.cronjob.active_jobs` （メトリック）と、以下のディメンションの名前が変更されました：`k8s.cronjob.name` to`kubernetes_name`,`k8s.cronjob.uid` to`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.daemon_set.current_scheduled` (Metric)"
msgstr "`kubernetes.daemon_set.current_scheduled` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.daemonset.current_scheduled_nodes` (Metric) and with the following dimensions renamed: `k8s.daemonset.name` to `kubernetes_name`, `k8s.daemonset.uid` to `kubernetes_uid`"
msgstr "`k8s.daemonset.current_scheduled_nodes` (Metric)と、以下のディメンションの名前が変更されました:`k8s.daemonset.name` から`kubernetes_name`,`k8s.daemonset.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.daemon_set.desired_scheduled` (Metric)"
msgstr "`kubernetes.daemon_set.desired_scheduled` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.daemonset.desired_scheduled_nodes` (Metric) and with the following dimensions renamed: `k8s.daemonset.name` to `kubernetes_name`, `k8s.daemonset.uid` to `kubernetes_uid`"
msgstr "`k8s.daemonset.desired_scheduled_nodes` (Metric)と、以下のディメンションの名前が変更されています:`k8s.daemonset.name` から`kubernetes_name`,`k8s.daemonset.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.daemon_set.misscheduled` (Metric)"
msgstr "`kubernetes.daemon_set.misscheduled` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.daemonset.misscheduled_nodes` (Metric) and with the following dimensions renamed: `k8s.daemonset.name` to `kubernetes_name`, `k8s.daemonset.uid` to `kubernetes_uid`"
msgstr "`k8s.daemonset.misscheduled_nodes` (Metric)と、以下のディメンションの名前が変更されました:`k8s.daemonset.name` から`kubernetes_name`,`k8s.daemonset.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.daemon_set.ready` (Metric)"
msgstr "`kubernetes.daemon_set.ready` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.daemonset.ready_nodes` (Metric) and with the following dimensions renamed: `k8s.daemonset.name` to `kubernetes_name`, `k8s.daemonset.uid` to `kubernetes_uid`"
msgstr "`k8s.daemonset.ready_nodes` (Metric)と、以下のディメンションの名前が変更されました:`k8s.daemonset.name` から`kubernetes_name`,`k8s.daemonset.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.deployment.available` (Metric)"
msgstr "`kubernetes.deployment.available` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.deployment.available` (Metric) and with the following dimensions renamed: `k8s.deployment.name` to `kubernetes_name`, `k8s.deployment.uid` to `kubernetes_uid`"
msgstr "`k8s.deployment.available` (Metric) と、以下のディメンションの名前が変更されました:`k8s.deployment.name` から`kubernetes_name`,`k8s.deployment.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.deployment.desired` (Metric)"
msgstr "`kubernetes.deployment.desired` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.deployment.desired` (Metric) and with the following dimensions renamed: `k8s.deployment.name` to `kubernetes_name`, `k8s.deployment.uid` to `kubernetes_uid`"
msgstr "`k8s.deployment.domired` （メトリック）と、以下のディメンションの名前が変更されました：`k8s.deployment.name` →`kubernetes_name` 、`k8s.deployment.uid` →`kubernetes_uid。`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.hpa.spec.max_replicas` (Metric)"
msgstr "`kubernetes.hpa.spec.max_replicas` (Metric)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.hpa.max_replicas` (Metric) and with the following dimensions renamed: `k8s.hpa.name` to `kubernetes_name`, `k8s.hpa.uid` to `kubernetes_uid`"
msgstr "`k8s.hpa.max_replicas` (メートル法)、および以下のディメンジョンの名前を変更：`k8s.hpa.name` to`kubernetes_name`,`k8s.hpa.uid` to`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.hpa.spec.min_replicas` (Metric)"
msgstr "`kubernetes.hpa.spec.min_replicas` (Metric)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.hpa.min_replicas` (Metric) and with the following dimensions renamed: `k8s.hpa.name` to `kubernetes_name`, `k8s.hpa.uid` to `kubernetes_uid`"
msgstr "`k8s.hpa.min_replicas` (メートル法)、および以下のディメンジョンの名前を変更：`k8s.hpa.name` to`kubernetes_name`,`k8s.hpa.uid` to`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.hpa.status.current_replicas` (Metric)"
msgstr "`kubernetes.hpa.status.current_replicas` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.hpa.current_replicas` (Metric) and with the following dimensions renamed: `k8s.hpa.name` to `kubernetes_name`, `k8s.hpa.uid` to `kubernetes_uid`"
msgstr "`k8s.hpa.current_replicas` (メートル法)、および以下のディメンジョンの名前を変更：`k8s.hpa.name` to`kubernetes_name`,`k8s.hpa.uid` to`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.hpa.status.desired_replicas` (Metric)"
msgstr "`kubernetes.hpa.status.desired_replicas` (Metric)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.hpa.desired_replicas` (Metric) and with the following dimensions renamed: `k8s.hpa.name` to `kubernetes_name`, `k8s.hpa.uid` to `kubernetes_uid`"
msgstr "`k8s.hpa.desired_replicas` (メートル法)、および以下のディメンションの名前を変更：`k8s.hpa.name` to`kubernetes_name`,`k8s.hpa.uid` to`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.job.active` (Metric)"
msgstr "`kubernetes.job.active` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.job.active_pods` (Metric) and with the following dimensions renamed: `k8s.job.name` to `kubernetes_name`, `k8s.job.uid` to `kubernetes_uid`"
msgstr "`k8s.job.active_pods` (メートル法)、および以下のディメンションの名前を変更：`k8s.job.name` から`kubernetes_name`,`k8s.job.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.job.completions` (Metric)"
msgstr "`kubernetes.job.completions` (メトリクス)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.job.desired_successful_pods` (Metric) and with the following dimensions renamed: `k8s.job.name` to `kubernetes_name`, `k8s.job.uid` to `kubernetes_uid`"
msgstr "`k8s.job.desired_successful_pods` (Metric) と、以下のディメンションの名前が変更されました：`k8s.job.name` から`kubernetes_name`,`k8s.job.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.job.failed` (Metric)"
msgstr "`kubernetes.job.failed` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.job.failed_pods` (Metric) and with the following dimensions renamed: `k8s.job.name` to `kubernetes_name`, `k8s.job.uid` to `kubernetes_uid`"
msgstr "`k8s.job.failed_pods` (Metric) と、以下のディメンションの名前が変更されました：`k8s.job.name` から`kubernetes_name`,`k8s.job.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.job.parallelism` (Metric)"
msgstr "`kubernetes.job.parallelism` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.job.max_parallel_pods` (Metric) and with the following dimensions renamed: `k8s.job.name` to `kubernetes_name`, `k8s.job.uid` to `kubernetes_uid`"
msgstr "`k8s.job.max_parallel_pods` (メートル法)、および以下のディメンションの名前を変更：`k8s.job.name` から`kubernetes_name`,`k8s.job.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.job.succeeded` (Metric)"
msgstr "`kubernetes.job.succeeded` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.job.successful_pods` (Metric) and with the following dimensions renamed: `k8s.job.name` to `kubernetes_name`, `k8s.job.uid` to `kubernetes_uid`"
msgstr "`k8s.job.successful_pods` （メトリック）と、以下のディメンションの名前が変更されました：`k8s.job.name` →`kubernetes_name` 、`k8s.job.uid` →`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.namespace_phase` (Metric)"
msgstr "`kubernetes.namespace_phase` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.namespace.phase` (Metric)"
msgstr "`k8s.namespace.phase` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.node_memory_pressure` (Metric)"
msgstr "`kubernetes.node_memory_pressure` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.node.condition_memory_pressure` (Metric)"
msgstr "`k8s.node.condition_memory_pressure` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.node_network_unavailable` (Metric)"
msgstr "`kubernetes.node_network_unavailable` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.node.condition_network_unavailable` (Metric)"
msgstr "`k8s.node.condition_network_unavailable` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.node_out_of_disk` (Metric)"
msgstr "`kubernetes.node_out_of_disk` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.node.condition_out_of_disk` (Metric)"
msgstr "`k8s.node.condition_out_of_disk` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.node_p_i_d_pressure` (Metric)"
msgstr "`kubernetes.node_p_i_d_pressure` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.node.condition_p_i_d_pressure` (Metric)"
msgstr "`k8s.node.condition_p_i_d_pressure` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.node_ready` (Metric)"
msgstr "`kubernetes.node_ready` (Metric)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.node.condition_ready` (Metric)"
msgstr "`k8s.node.condition_ready` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.pod_phase` (Metric)"
msgstr "`kubernetes.pod_phase` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.pod.phase` (Metric)"
msgstr "`k8s.pod.phase` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.replica_set.available` (Metric)"
msgstr "`kubernetes.replica_set.available` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.replicaset.available` (Metric) and with the following dimensions renamed: `k8s.replicaset.name` to `kubernetes_name`, `k8s.replicaset.uid` to `kubernetes_uid`"
msgstr "`k8s.replicaset.available` （メトリック）と、以下のディメンションの名前が変更されました：`k8s.replicaset.name` →`kubernetes_name`,`k8s.replicaset.uid` →`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.replica_set.desired` (Metric)"
msgstr "`kubernetes.replica_set.desired` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.replicaset.desired` (Metric) and with the following dimensions renamed: `k8s.replicaset.name` to `kubernetes_name`, `k8s.replicaset.uid` to `kubernetes_uid`"
msgstr "`k8s.replicaset.desired` (Metric) と、以下のディメンジョンの名前が変更されました:`k8s.replicaset.name` から`kubernetes_name`,`k8s.replicaset.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.replication_controller.available` (Metric)"
msgstr "`kubernetes.replication_controller.available` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.replication_controller.available` (Metric) and with the following dimensions renamed: `k8s.replicationcontroller.name` to `kubernetes_name`, `k8s.replicationcontroller.uid` to `kubernetes_uid`"
msgstr "`k8s.replication_controller.available` (Metric) と、以下のディメンションの名前が変更されました：`k8s.replicationcontroller.name` から`kubernetes_name`,`k8s.replicationcontroller.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.replication_controller.desired` (Metric)"
msgstr "`kubernetes.replication_controller.desired` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.replication_controller.desired` (Metric) and with the following dimensions renamed: `k8s.replicationcontroller.name` to `kubernetes_name`, `k8s.replicationcontroller.uid` to `kubernetes_uid`"
msgstr "`k8s.replication_controller.desired` (Metric) および以下のディメンションの名前を変更：`k8s.replicationcontroller.name` から`kubernetes_name`,`k8s.replicationcontroller.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.resource_quota_hard` (Metric)"
msgstr "`kubernetes.resource_quota_hard` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.resource_quota.hard_limit` (Metric) and with the following dimensions renamed: `k8s.resourcequota.uid` to `kubernetes_uid`"
msgstr "`k8s.resource_quota.hard_limit` (Metric) と、以下のディメンションの名前が変更されました:`k8s.resourcequota.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.resource_quota_used` (Metric)"
msgstr "`kubernetes.resource_quota_used` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.resource_quota.used` (Metric) and with the following dimensions renamed: `k8s.resourcequota.uid` to `kubernetes_uid`"
msgstr "`k8s.resource_quota.used` （メトリック）、次のディメンションの名前を変更：`k8s.resourcequota.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.stateful_set.current` (Metric)"
msgstr "`kubernetes.stateful_set.current` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.statefulset.current_pods` (Metric) and with the following dimensions renamed: `k8s.statefulset.name` to `kubernetes_name`, `k8s.statefulset.uid` to `kubernetes_uid`"
msgstr "`k8s.statefulset.current_pods` (メートル法) と、以下のディメンションの名前が変更されました：`k8s.statefulset.name` から`kubernetes_name`,`k8s.statefulset.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.stateful_set.desired` (Metric)"
msgstr "`kubernetes.stateful_set.desired` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.statefulset.desired_pods` (Metric) and with the following dimensions renamed: `k8s.statefulset.name` to `kubernetes_name`, `k8s.statefulset.uid` to `kubernetes_uid`"
msgstr "`k8s.statefulset.desired_pods` (メートル法)、および以下のディメンジョンの名前を変更：`k8s.statefulset.name` から`kubernetes_name`,`k8s.statefulset.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.stateful_set.ready` (Metric)"
msgstr "`kubernetes.stateful_set.ready` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.statefulset.ready_pods` (Metric) and with the following dimensions renamed: `k8s.statefulset.name` to `kubernetes_name`, `k8s.statefulset.uid` to `kubernetes_uid`"
msgstr "`k8s.statefulset.ready_pods` (Metric) と、以下のディメンションの名前が変更されました：`k8s.statefulset.name` から`kubernetes_name`,`k8s.statefulset.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.stateful_set.updated` (Metric)"
msgstr "`kubernetes.stateful_set.updated` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.statefulset.updated_pods` (Metric) and with the following dimensions renamed: `k8s.statefulset.name` to `kubernetes_name`, `k8s.statefulset.uid` to `kubernetes_uid`"
msgstr "`k8s.statefulset.updated_pods` (Metric) と、以下のディメンションの名前が変更されました：`k8s.statefulset.name` から`kubernetes_name`,`k8s.statefulset.uid` から`kubernetes_uid`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.volume_available_bytes` (Metric)"
msgstr "`kubernetes.volume_available_bytes` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.volume.available` (Metric)"
msgstr "`k8s.volume.available` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.volume_capacity_bytes` (Metric)"
msgstr "`kubernetes.volume_capacity_bytes` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.volume.capacity` (Metric)"
msgstr "`k8s.volume.capacity` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.volume_inodes_free` (Metric)"
msgstr "`kubernetes.volume_inodes_free` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.volume.inodes.free` (Metric)"
msgstr "`k8s.volume.inodes.free` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.volume_inodes_used` (Metric)"
msgstr "`kubernetes.volume_inodes_used` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.volume.inodes.used` (Metric)"
msgstr "`k8s.volume.inodes.used` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes.volume_inodes` (Metric)"
msgstr "`kubernetes.volume_inodes` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.volume.inodes` (Metric)"
msgstr "`k8s.volume.inodes` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes_cluster` (Dimension)"
msgstr "`kubernetes_cluster` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.cluster.name` (dimension)"
msgstr "`k8s.cluster.name` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes_namespace` (Dimension)"
msgstr "`kubernetes_namespace` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.namespace.name` (dimension)"
msgstr "`k8s.namespace.name` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes_node_uid` (Dimension)"
msgstr "`kubernetes_node_uid` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.node.uid` (dimension)"
msgstr "`k8s.node.uid` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes_node` (Dimension)"
msgstr "`kubernetes_node` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.node.name` (dimension)"
msgstr "`k8s.node.name` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes_pod_name` (Dimension)"
msgstr "`kubernetes_pod_name` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.pod.name` (dimension)"
msgstr "`k8s.pod.name` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes_pod_uid` (Dimension)"
msgstr "`kubernetes_pod_uid` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.pod.uid` (dimension)"
msgstr "`k8s.pod.uid` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes_workload_name` (Property)"
msgstr "`kubernetes_workload_name` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.workload.name` (Property)"
msgstr "`k8s.workload.name` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`kubernetes_workload` (Property)"
msgstr "`kubernetes_workload` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.workload.kind` (Property)"
msgstr "`k8s.workload.kind` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`load.longterm` (Metric)"
msgstr "`load.longterm` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.cpu.load_average.15m` (Metric)"
msgstr "`system.cpu.load_average.15m` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`load.midterm` (Metric)"
msgstr "`load.midterm` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.cpu.load_average.5m` (Metric)"
msgstr "`system.cpu.load_average.5m` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`load.shortterm` (Metric)"
msgstr "`load.shortterm` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.cpu.load_average.1m` (Metric)"
msgstr "`system.cpu.load_average.1m` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`memory.buffered` (Metric)"
msgstr "`memory.buffered` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.memory.usage` (Metric) with dimension name `state` equal to `buffered`"
msgstr "`system.memory.usage` (メトリック) with dimension name`state` equal to`buffered`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`memory.cached` (Metric)"
msgstr "`memory.cached` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.memory.usage` (Metric) with dimension name `state` equal to `cached`"
msgstr "`system.memory.usage` (メトリック) with ディメンジョン名`state` equal to`cached`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`memory.free` (Metric)"
msgstr "`memory.free` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.memory.usage` (Metric) with dimension name `state` equal to `free`"
msgstr "`system.memory.usage` (Metric) with dimension name`state` equal to`free.`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`memory.inactive` (Metric)"
msgstr "`memory.inactive` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.memory.usage` (Metric) with dimension name `state` equal to `inactive`"
msgstr "`system.memory.usage` (メトリック) with ディメンジョン名`state` equal to`inactive`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`memory.slab_recl` (Metric)"
msgstr "`memory.slab_recl` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.memory.usage` (Metric) with dimension name `state` equal to `slab_reclaimable`"
msgstr "`system.memory.usage` (メトリック) with dimension name`state` equal to`slab_reclaimable`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`memory.slab_unrecl` (Metric)"
msgstr "`memory.slab_unrecl` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.memory.usage` (Metric) with dimension name `state` equal to `slab_unreclaimable`"
msgstr "`system.memory.usage` (メトリック) with dimension name`state` equal to`slab_unreclaimable`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`memory.used` (Metric)"
msgstr "`memory.used` (メートル法)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.memory.usage` (Metric) with dimension name `state` equal to `used`"
msgstr "`system.memory.usage` (Metric) with dimension name`state` equal to`used.`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`pod_network_receive_bytes_total` (Metric)"
msgstr "`pod_network_receive_bytes_total` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.pod.network.io` (Metric) with dimension name `direction` equal to `receive`"
msgstr "`k8s.pod.network.io` (メトリック) ディメンジョン名`方向` 等しい`受信`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`pod_network_receive_errors_total` (Metric)"
msgstr "`pod_network_receive_errors_total` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.pod.network.errors` (Metric) with dimension name `direction` equal to `receive`"
msgstr "`k8s.pod.network.errors` （メートル法）、ディメンジョン名`方向` が`と等しい。`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`pod_network_transmit_bytes_total` (Metric)"
msgstr "`pod_network_transmit_bytes_total` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.pod.network.io` (Metric) with dimension name `direction` equal to `transmit`"
msgstr "`k8s.pod.network.io` (メトリック) ディメンジョン名`方向` 等しい`送信`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`pod_network_transmit_errors_total` (Metric)"
msgstr "`pod_network_transmit_errors_total` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.pod.network.errors` (Metric) with dimension name `direction` equal to `transmit`"
msgstr "`k8s.pod.network.errors` （メートル法）、ディメンジョン名`方向` 送信`と等しい。`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`process.rss_memory_bytes` (Metric)"
msgstr "`process.rss_memory_bytes` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`process.memory.physical_usage` (Metric)"
msgstr "`process.memory.physical_usage` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`quota_name` (Dimension)"
msgstr "`quota_name` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.resourcequota.name` (dimension)"
msgstr "`k8s.resourcequota.name` (ディメンション)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`replicaSet_uid` (Property)"
msgstr "`replicaSet_uid` (Property)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.replicaset.uid` (Property)"
msgstr "`k8s.replicaset.uid` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`replicaSet` (Property)"
msgstr "`replicaSet` （プロパティ）"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.replicaset.name` (Property)"
msgstr "`k8s.replicaset.name` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`statefulSet_uid` (Property)"
msgstr "`statefulSet_uid` (Property)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.statefulset.uid` (Property)"
msgstr "`k8s.statefulset.uid` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`statefulSet` (Property)"
msgstr "`statefulSet` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`k8s.statefulset.name` (Property)"
msgstr "`k8s.statefulset.name` (プロパティ)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`vmpage_faults.majflt` (Metric)"
msgstr "`vmpage_faults.majflt` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.paging.faults` (Metric) with dimension name `type` equal to `major`"
msgstr "`system.paging.faults` (メートル法) with ディメンジョン名`タイプ` equal to`メジャー`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`vmpage_faults.minflt` (Metric)"
msgstr "`vmpage_faults.minflt` (メトリック)"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md
msgid "`system.paging.faults` (Metric) with dimension name `type` equal to `minor`"
msgstr "`system.paging.faults` (メートル法) with dimension name`type` equal to`minor.`"

#: ../../gdi/opentelemetry/legacy-otel-mappings.md:229
msgid "You can find a table outlining OpenTelemetry values and their legacy equivalents in GitHub at <a href=\"https://github.com/signalfx/integrations/blob/mappings/mappings/mappings.md\" target=\"_blank\">Legacy to OTel semantics mapping table</a>."
msgstr "GitHubの<a href=\"https://github.com/signalfx/integrations/blob/mappings/mappings/mappings.md\" target=\"_blank\">Legacy to OTel semantics mapping table</a>に、OpenTelemetryの値とレガシーに相当する値の概要の表があります。"

#: ../../gdi/opentelemetry/linux-config.rst:-1
msgid "Optional configurations for the Splunk Distribution of OpenTelemetry Collector for Linux."
msgstr "OpenTelemetry Collector for Linux の Splunk ディストリビューションのオプション設定。"

#: ../../gdi/opentelemetry/linux-config.rst:5
msgid "Advanced configuration for Linux"
msgstr "Linuxの高度な設定"

#: ../../gdi/opentelemetry/linux-config.rst:10
msgid "The following sections describe available settings for configuring the Splunk Distribution of OpenTelemetry Collector for Linux."
msgstr "以下のセクションでは、Linux 用 OpenTelemetry Collector の Splunk ディストリビューションを構成するために利用可能な設定について説明します。"

#: ../../gdi/opentelemetry/linux-config.rst:15 ../../gdi/opentelemetry/windows-config.rst:13
msgid "Change the default configuration file"
msgstr "デフォルトの設定ファイルを変更する"

#: ../../gdi/opentelemetry/linux-config.rst:17
msgid "The Collector comes with a default configuration as explained in :ref:`otel-configuration-ootb`."
msgstr "コレクタには、:ref:`otel-configuration-ootb` で説明するデフォルトの構成が付属しています。"

#: ../../gdi/opentelemetry/linux-config.rst:19
msgid "See :new-page:`full_config_linux.yaml <https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/full_config_linux.yaml>` for extended configuration options. This configuration requires using :new-page:`OpenTelemetry Collector Contrib project <https://github.com/open-telemetry/opentelemetry-collector-contrib>` or a similar distribution."
msgstr "拡張設定オプションについては、:new-page:`full_config_linux.yaml<https://github.com/signalfx/splunk-otel-collector/blob/main/cmd/otelcol/config/collector/full_config_linux.yaml>` を参照のこと。この設定には、:new-page:`OpenTelemetry Collector Contrib project<https://github.com/open-telemetry/opentelemetry-collector-contrib>` または同様のディストリビューションを使用する必要があります。"

#: ../../gdi/opentelemetry/linux-config.rst:21
msgid "After you modify the configuration, restart the Collector service. For example:"
msgstr "設定を変更したら、Collector サービスを再起動します。例えば、こうだ："

#: ../../gdi/opentelemetry/linux-config.rst:27
msgid "You can view splunk-otel-collector service logs and errors in the systemd journal using the following command:"
msgstr "以下のコマンドを使うと、systemd journal にある splunk-otel-collector サービスのログやエラーを見ることができます："

#: ../../gdi/opentelemetry/opentelemetry.rst:10
msgid "Migrate from the Smart Agent to the Collector"
msgstr "スマートエージェントからコレクターへの移行"

#: ../../gdi/opentelemetry/opentelemetry.rst:10
msgid "Collector overview"
msgstr "コレクターの概要"

#: ../../gdi/opentelemetry/opentelemetry.rst:10
msgid "Zero config auto instrumentation"
msgstr "ゼロコンフィグ自動計測"

#: ../../gdi/opentelemetry/opentelemetry.rst:10
msgid "Discover metric sources automatically"
msgstr "メトリック・ソースを自動的に発見する"

#: ../../gdi/opentelemetry/opentelemetry.rst:10
msgid "Use the Universal Forwarder"
msgstr "ユニバーサル・フォワーダーを使用する"

#: ../../gdi/opentelemetry/opentelemetry.rst:10
msgid "Commands reference"
msgstr "コマンドリファレンス"

#: ../../gdi/opentelemetry/opentelemetry.rst:-1
msgid "Install and configure the Splunk Distribution of OpenTelemetry Collector to receive, process, and export metric, trace, and log data for Splunk Observability Cloud. Splunk Observability Cloud offers a guided setup to install the Splunk Distribution of OpenTelemetry Collector. This guide provides information to install the Splunk Distribution of OpenTelemetry Collector without using the guided setup."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションをインストールして設定し、Splunk Observability Cloud 用のメトリック、トレース、ログデータを受信、処理、エクスポートします。Splunk Observability Cloud は、OpenTelemetry Collector の Splunk ディストリビューションをインストールするためのガイド付きセットアップを提供します。このガイドでは、ガイド付きセットアップを使用せずに OpenTelemetry Collector の Splunk ディストリビューションをインストールするための情報を提供します。"

#: ../../gdi/opentelemetry/opentelemetry.rst:5
msgid "Get started with the Splunk Distribution of the OpenTelemetry Collector"
msgstr "OpenTelemetry Collector の Splunk ディストリビューションで始める"

#: ../../gdi/opentelemetry/opentelemetry.rst:26
msgid "The OpenTelemetry Collector uses pipelines to receive, process, and export trace data with components known as receivers, processors, and exporters. You can also add extensions that provide OpenTelemetry Collector with additional functionality, such as diagnostics and health checks."
msgstr "OpenTelemetry Collector はパイプラインを使用して、レシーバ、プロセッサ、エクスポータと呼ばれるコンポーネントでトレースデータを受信、処理、エクスポートします。OpenTelemetry Collector に診断やヘルスチェックなどの追加機能を提供する拡張機能を追加することもできます。"

#: ../../gdi/opentelemetry/opentelemetry.rst:28
msgid "The OpenTelemetry Collector has a core version and a contributions version. The core version provides receivers, processors, and exporters for general use. The contributions version provides receivers, processors, and exporters for specific vendors and use cases."
msgstr "OpenTelemetry Collectorにはコアバージョンとコントリビューションバージョンがあります。コア・バージョンは、レシーバー、プロセッサー、エクスポーターを提供する。コントリビューション・バージョンは、特定のベンダーやユースケース向けにレシーバー、プロセッサー、エクスポーターを提供する。"

#: ../../gdi/opentelemetry/opentelemetry.rst:32
msgid "Splunk officially supports the Splunk Distribution of OpenTelemetry Collector. Splunk only provides best-effort support for the upstream OpenTelemetry Collector. See :ref:`using-upstream-otel` for more information."
msgstr "Splunk は OpenTelemetry Collector の Splunk ディストリビューションを正式にサポートしています。Splunk はアップストリームの OpenTelemetry Collector に対してベストエフォートサポートしか提供しません。詳しくは:ref:`using-upstream-otel` 。"

#: ../../gdi/opentelemetry/opentelemetry.rst:35
msgid "The Splunk Distribution of OpenTelemetry Collector is a distribution of the OpenTelemetry Collector. The distribution is a project that bundles components from OpenTelemetry Core, OpenTelemetry Contrib, and other sources to provide data collection for multiple source platforms. The customizations in the Splunk distribution include these features:"
msgstr "Splunk Distribution of OpenTelemetry Collector は OpenTelemetry Collector のディストリビューションです。このディストリビューションは、OpenTelemetry Core、OpenTelemetry Contrib、その他のソースからのコンポーネントをバンドルし、複数のソースプラットフォーム用のデータ収集を提供するプロジェクトです。Splunk ディストリビューションのカスタマイズには、これらの機能が含まれています："

#: ../../gdi/opentelemetry/opentelemetry.rst:37
msgid "Better defaults for Splunk products"
msgstr "Splunk 製品のデフォルトを改善"

#: ../../gdi/opentelemetry/opentelemetry.rst:38
msgid "Discovery mode for metric sources"
msgstr "メトリック・ソースのディスカバリー・モード"

#: ../../gdi/opentelemetry/opentelemetry.rst:39
msgid "Zero configuration auto instrumentation"
msgstr "ゼロコンフィギュレーション自動計測"

#: ../../gdi/opentelemetry/opentelemetry.rst:40
msgid "Fluentd for log capture"
msgstr "ログキャプチャ用Fluentd"

#: ../../gdi/opentelemetry/opentelemetry.rst:41
msgid "Tools to support migration from SignalFx products"
msgstr "SignalFx製品からの移行をサポートするツール"

#: ../../gdi/opentelemetry/opentelemetry.rst:45
msgid "Check :ref:`migrate-from-sa-to-otel` to learn how to migrate your data from the SignalFx Smart Agent (deprecated) to the Collector."
msgstr "SignalFx Smart Agent（非推奨）からCollectorへのデータ移行方法については、:ref:`migrate-from-sa-to-otel` 。"

#: ../../gdi/opentelemetry/opentelemetry.rst:47
msgid "To get started with the Collector, see :ref:`opentelemetry-resources`:"
msgstr "コレクターを使い始めるには、:ref:`opentelemetry-resources` を参照してください："

#: ../../gdi/opentelemetry/opentelemetry.rst:49
msgid "Check the :ref:`requirements <otel-requirements>`."
msgstr ":ref:`requirements <otel-requirements>` をチェックする。"

#: ../../gdi/opentelemetry/opentelemetry.rst:50
msgid ":ref:`otel-install-platform`. Get instructions for installing the Collector on a variety of platforms. Or use :ref:`our guided install <collector-guided-install>`."
msgstr ":ref:`otel-install-platform`.Collectorをさまざまなプラットフォームにインストールする手順をご覧ください。または、:ref:`our guided install <collector-guided-install>` 。"

#: ../../gdi/opentelemetry/opentelemetry.rst:51
msgid "Learn about the discovery mode. See :ref:`discovery_mode`."
msgstr "ディスカバリー・モードについて:ref:`discovery_mode` を参照。"

#: ../../gdi/opentelemetry/opentelemetry.rst:52
msgid "Learn about the available :ref:`configuration options <otel-configuration>`."
msgstr "利用可能な:ref:`configuration options <otel-configuration>` 。"

#: ../../gdi/opentelemetry/opentelemetry.rst:53
msgid ":ref:`otel-troubleshooting`. Try these troubleshooting techniques and learn how to open a support request."
msgstr ":ref:`otel-troubleshooting`.これらのトラブルシューティングのテクニックを試し、サポートリクエストを開く方法を学んでください。"

#: ../../gdi/opentelemetry/opentelemetry.rst:55
msgid "For more information:"
msgstr "詳細はこちら："

#: ../../gdi/opentelemetry/opentelemetry.rst:57
msgid "See :ref:`otel-components` for a description of the components the Collector supports."
msgstr "コレクタがサポートするコンポーネントの説明については、:ref:`otel-components` を参照してください。"

#: ../../gdi/opentelemetry/opentelemetry.rst:58
msgid "Use :ref:`collector-remove-data` to strip data out of your telemetry, including PII."
msgstr ":ref:`collector-remove-data` 、PIIを含むテレメトリからデータを取り除く。"

#: ../../gdi/opentelemetry/opentelemetry.rst:59
msgid "Read :ref:`otel-collector-scenario`."
msgstr ":ref:`otel-collector-scenario` を読む。"

#: ../../gdi/opentelemetry/otel-commands.rst:-1
msgid "The most commonly used commands for the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションで最もよく使用されるコマンドです。"

#: ../../gdi/opentelemetry/otel-commands.rst:5
msgid "Splunk Distribution of OpenTelemetry Collector commands reference"
msgstr "Splunk Distribution of OpenTelemetry Collector コマンドリファレンス"

#: ../../gdi/opentelemetry/otel-commands.rst:10
msgid "The following table lists all the commands and their usage in context of the Splunk Distribution of OpenTelemetry Collector. Select a command for a more detailed description and syntax examples."
msgstr "次の表は、OpenTelemetry Collector の Splunk ディストリビューションのコンテキストにおける、すべてのコマンドとその使用法の一覧です。コマンドを選択すると、より詳細な説明と構文の例が表示されます。"

#: ../../gdi/opentelemetry/otel-commands.rst:16 ../../gdi/smart-agent/smart-agent-commands.rst:27
msgid "Command"
msgstr "コマンド"

#: ../../gdi/opentelemetry/otel-commands.rst:17 ../../gdi/smart-agent/smart-agent-commands.rst:28
msgid "Usage"
msgstr "使用方法"

#: ../../gdi/opentelemetry/otel-commands.rst:18
msgid ":ref:`otel-delete`"
msgstr ":ref:`otel-delete`"

#: ../../gdi/opentelemetry/otel-commands.rst:19
msgid "Delete the Splunk Distribution of OpenTelemetry Collector Helm chart repository"
msgstr "OpenTelemetry Collector Helm チャートリポジトリの Splunk ディストリビューションを削除する"

#: ../../gdi/opentelemetry/otel-commands.rst:20
msgid ":ref:`otel-install`"
msgstr ":ref:`otel-install`"

#: ../../gdi/opentelemetry/otel-commands.rst:21
msgid "Deploy the Splunk Distribution of OpenTelemetry Collector Helm chart repository"
msgstr "OpenTelemetry Collector Helm チャートリポジトリの Splunk ディストリビューションをデプロイする"

#: ../../gdi/opentelemetry/otel-commands.rst:22
msgid ":ref:`otel-add`"
msgstr ":ref:`otel-add`"

#: ../../gdi/opentelemetry/otel-commands.rst:23
msgid "Add the Splunk Distribution of OpenTelemetry Collector Helm chart repository"
msgstr "Splunk Distribution of OpenTelemetry Collector Helm チャートリポジトリを追加します。"

#: ../../gdi/opentelemetry/otel-commands.rst:24
msgid ":ref:`otel-update`"
msgstr ":ref:`otel-update`"

#: ../../gdi/opentelemetry/otel-commands.rst:25
msgid "Update the Splunk Distribution of OpenTelemetry Collector Helm chart repository"
msgstr "OpenTelemetry Collector Helm チャートリポジトリの Splunk ディストリビューションを更新する"

#: ../../gdi/opentelemetry/otel-commands.rst:26
msgid ":ref:`otel-journalctl`"
msgstr ":ref:`otel-journalctl`"

#: ../../gdi/opentelemetry/otel-commands.rst:27
msgid "Check the collector logs on the host"
msgstr "ホストのコレクターログをチェックする"

#: ../../gdi/opentelemetry/otel-commands.rst:28
msgid ":ref:`otel-k8s-config`"
msgstr ":ref:`otel-k8s-config`"

#: ../../gdi/opentelemetry/otel-commands.rst:29 ../../gdi/smart-agent/smart-agent-commands.rst:40
msgid "Modify Kubernetes configurations"
msgstr "Kubernetesの設定を変更する"

#: ../../gdi/opentelemetry/otel-commands.rst:30
msgid ":ref:`otel-k8s-create`"
msgstr ":ref:`otel-k8s-create`"

#: ../../gdi/opentelemetry/otel-commands.rst:31 ../../gdi/smart-agent/smart-agent-commands.rst:42
msgid "Create a Kubernetes resource"
msgstr "Kubernetesリソースを作成する"

#: ../../gdi/opentelemetry/otel-commands.rst:32
msgid ":ref:`otel-k8s-delete`"
msgstr ":ref:`otel-k8s-delete`"

#: ../../gdi/opentelemetry/otel-commands.rst:33 ../../gdi/smart-agent/smart-agent-commands.rst:44
msgid "Delete a Kubernetes resource"
msgstr "Kubernetesリソースを削除する"

#: ../../gdi/opentelemetry/otel-commands.rst:34
msgid ":ref:`otel-k8s-describe`"
msgstr ":ref:`otel-k8s-describe`"

#: ../../gdi/opentelemetry/otel-commands.rst:35 ../../gdi/smart-agent/smart-agent-commands.rst:46
msgid "Check Kubernetes system configurations"
msgstr "Kubernetesのシステム構成を確認する"

#: ../../gdi/opentelemetry/otel-commands.rst:36
msgid ":ref:`otel-k8s-edit`"
msgstr ":ref:`otel-k8s-edit`"

#: ../../gdi/opentelemetry/otel-commands.rst:37
msgid "Edit a Kubernetes resource. Use this command for initial configuration, effective configuration, and checking the status of the collector."
msgstr "Kubernetesリソースを編集する。このコマンドは、初期構成、有効な構成、およびコレクタのステータスの チェックに使用します。"

#: ../../gdi/opentelemetry/otel-commands.rst:38
msgid ":ref:`otel-k8s-exec`"
msgstr ":ref:`otel-k8s-exec`"

#: ../../gdi/opentelemetry/otel-commands.rst:39 ../../gdi/smart-agent/smart-agent-commands.rst:50
msgid "Execute a command in a Kubernetes container"
msgstr "Kubernetesコンテナでコマンドを実行する"

#: ../../gdi/opentelemetry/otel-commands.rst:40
msgid ":ref:`otel-k8s-get`"
msgstr ":ref:`otel-k8s-get`"

#: ../../gdi/opentelemetry/otel-commands.rst:41 ../../gdi/smart-agent/smart-agent-commands.rst:52
msgid "Display one or many resources running on Kubernetes"
msgstr "Kubernetes上で稼働している1つまたは複数のリソースを表示する"

#: ../../gdi/opentelemetry/otel-commands.rst:42
msgid ":ref:`otel-k8s-logs`"
msgstr ":ref:`otel-k8s-logs`"

#: ../../gdi/opentelemetry/otel-commands.rst:43 ../../gdi/smart-agent/smart-agent-commands.rst:54
msgid "Check logs in a Kubernetes container"
msgstr "Kubernetesコンテナのログをチェックする"

#: ../../gdi/opentelemetry/otel-commands.rst:44
msgid ":ref:`otel-restart`"
msgstr ":ref:`otel-restart`"

#: ../../gdi/opentelemetry/otel-commands.rst:45
msgid "Restart the collector on the host"
msgstr "ホスト上でコレクタを再起動する。"

#: ../../gdi/opentelemetry/otel-commands.rst:46
msgid ":ref:`otel-start`"
msgstr ":ref:`otel-start`"

#: ../../gdi/opentelemetry/otel-commands.rst:47
msgid "Start the collector on the host"
msgstr "ホスト上でコレクタを起動する。"

#: ../../gdi/opentelemetry/otel-commands.rst:48
msgid ":ref:`otel-status`"
msgstr ":ref:`otel-status`"

#: ../../gdi/opentelemetry/otel-commands.rst:49
msgid "Check the collector status on the host (Linux only)"
msgstr "ホストのコレクタステータスをチェックする（Linux のみ）"

#: ../../gdi/opentelemetry/otel-commands.rst:50
msgid ":ref:`otel-stop`"
msgstr ":ref:`otel-stop`"

#: ../../gdi/opentelemetry/otel-commands.rst:51
msgid "Stop the collector on the host"
msgstr "ホスト上のコレクタを停止する。"

#: ../../gdi/opentelemetry/otel-commands.rst:57 ../../gdi/smart-agent/smart-agent-commands.rst:71
msgid "helm delete"
msgstr "ヘルム削除"

#: ../../gdi/opentelemetry/otel-commands.rst:61
msgid "Delete the Splunk Distribution of OpenTelemetry Collector Helm chart repository."
msgstr "Splunk Distribution of OpenTelemetry Collector Helm チャートリポジトリを削除します。"

#: ../../gdi/opentelemetry/otel-commands.rst:64 ../../gdi/opentelemetry/otel-commands.rst:80 ../../gdi/opentelemetry/otel-commands.rst:109 ../../gdi/opentelemetry/otel-commands.rst:129 ../../gdi/opentelemetry/otel-commands.rst:145 ../../gdi/opentelemetry/otel-commands.rst:180 ../../gdi/opentelemetry/otel-commands.rst:229 ../../gdi/opentelemetry/otel-commands.rst:266 ../../gdi/opentelemetry/otel-commands.rst:294 ../../gdi/opentelemetry/otel-commands.rst:324 ../../gdi/opentelemetry/otel-commands.rst:358 ../../gdi/opentelemetry/otel-commands.rst:401 ../../gdi/opentelemetry/otel-commands.rst:438 ../../gdi/opentelemetry/otel-commands.rst:516
#: ../../gdi/opentelemetry/otel-commands.rst:532 ../../gdi/opentelemetry/otel-commands.rst:550 ../../gdi/opentelemetry/otel-commands.rst:566 ../../gdi/smart-agent/smart-agent-commands.rst:78 ../../gdi/smart-agent/smart-agent-commands.rst:94 ../../gdi/smart-agent/smart-agent-commands.rst:118 ../../gdi/smart-agent/smart-agent-commands.rst:137 ../../gdi/smart-agent/smart-agent-commands.rst:153 ../../gdi/smart-agent/smart-agent-commands.rst:184 ../../gdi/smart-agent/smart-agent-commands.rst:232 ../../gdi/smart-agent/smart-agent-commands.rst:269 ../../gdi/smart-agent/smart-agent-commands.rst:297 ../../gdi/smart-agent/smart-agent-commands.rst:327
#: ../../gdi/smart-agent/smart-agent-commands.rst:361 ../../gdi/smart-agent/smart-agent-commands.rst:391 ../../gdi/smart-agent/smart-agent-commands.rst:427 ../../gdi/smart-agent/smart-agent-commands.rst:506 ../../gdi/smart-agent/smart-agent-commands.rst:523 ../../gdi/smart-agent/smart-agent-commands.rst:540 ../../gdi/smart-agent/smart-agent-commands.rst:558 ../../gdi/smart-agent/smart-agent-commands.rst:575 ../../gdi/smart-agent/smart-agent-commands.rst:592
msgid "Syntax"
msgstr "構文"

#: ../../gdi/opentelemetry/otel-commands.rst:73 ../../gdi/smart-agent/smart-agent-commands.rst:87
msgid "helm install"
msgstr "ヘルムインストール"

#: ../../gdi/opentelemetry/otel-commands.rst:77
msgid "Deploy the Splunk Distribution of OpenTelemetry Collector Helm chart repository."
msgstr "Splunk Distribution of OpenTelemetry Collector Helm チャートリポジトリをデプロイします。"

#: ../../gdi/opentelemetry/otel-commands.rst:102 ../../gdi/smart-agent/smart-agent-commands.rst:111
msgid "helm repo add"
msgstr "ヘルムレポ追加"

#: ../../gdi/opentelemetry/otel-commands.rst:106
msgid "Add the Splunk Distribution of OpenTelemetry Collector Helm chart repository."
msgstr "Splunk Distribution of OpenTelemetry Collector Helm チャートリポジトリを追加します。"

#: ../../gdi/opentelemetry/otel-commands.rst:122 ../../gdi/smart-agent/smart-agent-commands.rst:130
msgid "helm repo update"
msgstr "helmレポ更新"

#: ../../gdi/opentelemetry/otel-commands.rst:126
msgid "Update the Splunk Distribution of OpenTelemetry Collector Helm chart repository."
msgstr "Splunk Distribution of OpenTelemetry Collector Helm チャートリポジトリを更新する。"

#: ../../gdi/opentelemetry/otel-commands.rst:138 ../../gdi/smart-agent/smart-agent-commands.rst:146
msgid "journalctl"
msgstr "journalctl"

#: ../../gdi/opentelemetry/otel-commands.rst:142
msgid "Check the collector logs on the host."
msgstr "ホストのコレクタログをチェックする。"

#: ../../gdi/opentelemetry/otel-commands.rst:153 ../../gdi/opentelemetry/otel-commands.rst:241 ../../gdi/opentelemetry/otel-commands.rst:273 ../../gdi/opentelemetry/otel-commands.rst:301 ../../gdi/opentelemetry/otel-commands.rst:333 ../../gdi/opentelemetry/otel-commands.rst:378 ../../gdi/opentelemetry/otel-commands.rst:410 ../../gdi/opentelemetry/otel-commands.rst:481 ../../gdi/smart-agent/smart-agent-commands.rst:161 ../../gdi/smart-agent/smart-agent-commands.rst:244 ../../gdi/smart-agent/smart-agent-commands.rst:276 ../../gdi/smart-agent/smart-agent-commands.rst:304 ../../gdi/smart-agent/smart-agent-commands.rst:336 ../../gdi/smart-agent/smart-agent-commands.rst:368
#: ../../gdi/smart-agent/smart-agent-commands.rst:400 ../../gdi/smart-agent/smart-agent-commands.rst:470 ../../gdi/smart-agent/smart-agent-commands.rst:600
msgid "Optional arguments"
msgstr "オプションの引数"

#: ../../gdi/opentelemetry/otel-commands.rst:161 ../../gdi/opentelemetry/otel-commands.rst:249 ../../gdi/opentelemetry/otel-commands.rst:281 ../../gdi/opentelemetry/otel-commands.rst:493 ../../gdi/smart-agent/smart-agent-commands.rst:252 ../../gdi/smart-agent/smart-agent-commands.rst:284 ../../gdi/smart-agent/smart-agent-commands.rst:482
msgid "``-f``"
msgstr "``-f``"

#: ../../gdi/opentelemetry/otel-commands.rst:162 ../../gdi/opentelemetry/otel-commands.rst:494 ../../gdi/smart-agent/smart-agent-commands.rst:483
msgid "Show new log entries as they are added"
msgstr "新しいログエントリが追加されると表示する"

#: ../../gdi/opentelemetry/otel-commands.rst:163
msgid "``tail -100``"
msgstr "``tail -100``"

#: ../../gdi/opentelemetry/otel-commands.rst:164
msgid "Retrieve the last 100 lines of logs from the log file"
msgstr "ログファイルから過去100行のログを取り出す"

#: ../../gdi/opentelemetry/otel-commands.rst:165 ../../gdi/smart-agent/smart-agent-commands.rst:169
msgid "``-u``"
msgstr "``-u``"

#: ../../gdi/opentelemetry/otel-commands.rst:166 ../../gdi/smart-agent/smart-agent-commands.rst:170
msgid "Show messages for the specified systemd unit UNIT (such as a service unit), or for any of the units matched by PATTERN"
msgstr "指定された systemd ユニット UNIT (サービスユニットなど)、または PATTERN でマッチしたユニットのメッセージを表示します。"

#: ../../gdi/opentelemetry/otel-commands.rst:167
msgid "``/var/log/messages``"
msgstr "``/var/log/messages``"

#: ../../gdi/opentelemetry/otel-commands.rst:168
msgid "File where the log messages are displayed from"
msgstr "ログメッセージが表示されるファイル"

#: ../../gdi/opentelemetry/otel-commands.rst:173 ../../gdi/smart-agent/smart-agent-commands.rst:177
msgid "kubectl config"
msgstr "kubectl config"

#: ../../gdi/opentelemetry/otel-commands.rst:177 ../../gdi/smart-agent/smart-agent-commands.rst:181
msgid "Modify Kubernetes configurations using subcommands. See the Kubectl Reference Documentation for a full list of subcommands and optional arguments."
msgstr "サブコマンドを使用してKubernetesの設定を変更します。サブコマンドとオプション引数の完全なリストについては、Kubectl Reference Documentationを参照してください。"

#: ../../gdi/opentelemetry/otel-commands.rst:222 ../../gdi/smart-agent/smart-agent-commands.rst:225
msgid "kubectl create"
msgstr "kubectl create"

#: ../../gdi/opentelemetry/otel-commands.rst:226
msgid "Create a Kubernetes resource from a file. Accepted file formats are JSON and YAML. See the Kubectl Reference Documentation for a full list of subcommands and optional arguments."
msgstr "ファイルからKubernetesリソースを作成する。使用可能なファイル形式はJSONとYAMLです。サブコマンドとオプション引数の完全なリストについては、Kubectl Reference Documentationを参照してください。"

#: ../../gdi/opentelemetry/otel-commands.rst:250 ../../gdi/smart-agent/smart-agent-commands.rst:253
msgid "The source file to create a resource"
msgstr "リソースを作成するソースファイル"

#: ../../gdi/opentelemetry/otel-commands.rst:251 ../../gdi/smart-agent/smart-agent-commands.rst:254
msgid "``--from-file``"
msgstr "``--from-file``"

#: ../../gdi/opentelemetry/otel-commands.rst:252 ../../gdi/smart-agent/smart-agent-commands.rst:255
msgid "Path to the source file to create a ConfigMap"
msgstr "ConfigMapを作成するソースファイルへのパス。"

#: ../../gdi/opentelemetry/otel-commands.rst:253 ../../gdi/smart-agent/smart-agent-commands.rst:256
msgid "``<map-name>``"
msgstr "``<map-name>``"

#: ../../gdi/opentelemetry/otel-commands.rst:254 ../../gdi/smart-agent/smart-agent-commands.rst:257
msgid "Name of the ConfigMap"
msgstr "コンフィグマップの名前"

#: ../../gdi/opentelemetry/otel-commands.rst:259 ../../gdi/smart-agent/smart-agent-commands.rst:262
msgid "kubectl delete"
msgstr "kubectl 削除"

#: ../../gdi/opentelemetry/otel-commands.rst:263
msgid "Delete a Kubernetes resource from a source file. See the Kubectl Reference Documentation for a full list of subcommands and optional arguments."
msgstr "ソースファイルからKubernetesリソースを削除する。サブコマンドとオプション引数の完全なリストについては、Kubectl Reference Documentationを参照してください。"

#: ../../gdi/opentelemetry/otel-commands.rst:282 ../../gdi/smart-agent/smart-agent-commands.rst:285
msgid "The source file to delete a resource"
msgstr "リソースを削除するソースファイル"

#: ../../gdi/opentelemetry/otel-commands.rst:287 ../../gdi/smart-agent/smart-agent-commands.rst:290
msgid "kubectl describe"
msgstr "kubectl describe"

#: ../../gdi/opentelemetry/otel-commands.rst:291 ../../gdi/smart-agent/smart-agent-commands.rst:294
msgid "Check Kubernetes system configurations."
msgstr "Kubernetesのシステム構成を確認する。"

#: ../../gdi/opentelemetry/otel-commands.rst:309 ../../gdi/opentelemetry/otel-commands.rst:422 ../../gdi/smart-agent/smart-agent-commands.rst:312 ../../gdi/smart-agent/smart-agent-commands.rst:412
msgid "``-n``"
msgstr "``-n``"

#: ../../gdi/opentelemetry/otel-commands.rst:310 ../../gdi/smart-agent/smart-agent-commands.rst:313
msgid "Namespace to check the configurations"
msgstr "コンフィギュレーションをチェックする名前空間"

#: ../../gdi/opentelemetry/otel-commands.rst:311 ../../gdi/smart-agent/smart-agent-commands.rst:314
msgid "``pod``"
msgstr "``pod``"

#: ../../gdi/opentelemetry/otel-commands.rst:312 ../../gdi/smart-agent/smart-agent-commands.rst:315
msgid "Pod to check the configurations"
msgstr "設定をチェックするポッド"

#: ../../gdi/opentelemetry/otel-commands.rst:317 ../../gdi/smart-agent/smart-agent-commands.rst:320
msgid "kubectl edit"
msgstr "kubectl 編集"

#: ../../gdi/opentelemetry/otel-commands.rst:321 ../../gdi/smart-agent/smart-agent-commands.rst:324
msgid "Edit a resource running on a Kubernetes container."
msgstr "Kubernetesコンテナ上で動作するリソースを編集する。"

#: ../../gdi/opentelemetry/otel-commands.rst:341 ../../gdi/smart-agent/smart-agent-commands.rst:344
msgid "``cm``"
msgstr "``cm``"

#: ../../gdi/opentelemetry/otel-commands.rst:342 ../../gdi/smart-agent/smart-agent-commands.rst:345
msgid "Specify the item you want to modify is a ConfigMap"
msgstr "変更したい項目がConfigMapであることを指定する"

#: ../../gdi/opentelemetry/otel-commands.rst:343 ../../gdi/opentelemetry/otel-commands.rst:420 ../../gdi/smart-agent/smart-agent-commands.rst:346 ../../gdi/smart-agent/smart-agent-commands.rst:410
msgid "``ds``"
msgstr "``ds``"

#: ../../gdi/opentelemetry/otel-commands.rst:344 ../../gdi/smart-agent/smart-agent-commands.rst:347
msgid "Specify the item you want to modify is a DaemonSet"
msgstr "変更する項目がDaemonSetであることを指定します。"

#: ../../gdi/opentelemetry/otel-commands.rst:345 ../../gdi/smart-agent/smart-agent-commands.rst:348
msgid "``<name>``"
msgstr "``<name>``"

#: ../../gdi/opentelemetry/otel-commands.rst:346 ../../gdi/smart-agent/smart-agent-commands.rst:349
msgid "Name of the resource you want to modify"
msgstr "変更したいリソースの名前"

#: ../../gdi/opentelemetry/otel-commands.rst:351 ../../gdi/smart-agent/smart-agent-commands.rst:354
msgid "kubectl exec"
msgstr "kubectl exec"

#: ../../gdi/opentelemetry/otel-commands.rst:355 ../../gdi/smart-agent/smart-agent-commands.rst:358
msgid "Execute a command in a Kubernetes container."
msgstr "Kubernetesコンテナでコマンドを実行する。"

#: ../../gdi/opentelemetry/otel-commands.rst:386
msgid "``-it``"
msgstr "``-it``"

#: ../../gdi/opentelemetry/otel-commands.rst:387
msgid "Your agent pod"
msgstr "エージェント・ポッド"

#: ../../gdi/opentelemetry/otel-commands.rst:388
msgid "``-- curl``"
msgstr "``-- curl``"

#: ../../gdi/opentelemetry/otel-commands.rst:389
msgid "Any additional ``curl`` commands"
msgstr "``curl`` その他のコマンド"

#: ../../gdi/opentelemetry/otel-commands.rst:394 ../../gdi/smart-agent/smart-agent-commands.rst:384
msgid "kubectl get"
msgstr "kubectl get"

#: ../../gdi/opentelemetry/otel-commands.rst:398 ../../gdi/smart-agent/smart-agent-commands.rst:388
msgid "Display one or many resources running on Kubernetes."
msgstr "Kubernetes上で稼働している1つまたは複数のリソースを表示する。"

#: ../../gdi/opentelemetry/otel-commands.rst:418 ../../gdi/smart-agent/smart-agent-commands.rst:408
msgid "``configmap``"
msgstr "``configmap``"

#: ../../gdi/opentelemetry/otel-commands.rst:419 ../../gdi/smart-agent/smart-agent-commands.rst:409
msgid "Display the ConfigMap"
msgstr "コンフィグマップの表示"

#: ../../gdi/opentelemetry/otel-commands.rst:421 ../../gdi/smart-agent/smart-agent-commands.rst:411
msgid "Display the DaemonSet"
msgstr "デーモンセットの表示"

#: ../../gdi/opentelemetry/otel-commands.rst:423 ../../gdi/smart-agent/smart-agent-commands.rst:413
msgid "Namespace"
msgstr "名前空間"

#: ../../gdi/opentelemetry/otel-commands.rst:424 ../../gdi/smart-agent/smart-agent-commands.rst:414
msgid "``pods``"
msgstr "``pods``"

#: ../../gdi/opentelemetry/otel-commands.rst:425 ../../gdi/smart-agent/smart-agent-commands.rst:415
msgid "List all pods in process status output format"
msgstr "プロセス・ステータス出力形式ですべてのポッドをリストする"

#: ../../gdi/opentelemetry/otel-commands.rst:431 ../../gdi/smart-agent/smart-agent-commands.rst:420
msgid "kubectl logs"
msgstr "kubectlログ"

#: ../../gdi/opentelemetry/otel-commands.rst:435 ../../gdi/smart-agent/smart-agent-commands.rst:424
msgid "Check logs in a Kubernetes container."
msgstr "Kubernetesコンテナのログをチェックする。"

#: ../../gdi/opentelemetry/otel-commands.rst:489 ../../gdi/smart-agent/smart-agent-commands.rst:478
msgid "``--all-containers``"
msgstr "``--all-containers``"

#: ../../gdi/opentelemetry/otel-commands.rst:490 ../../gdi/smart-agent/smart-agent-commands.rst:479
msgid "If true, get all containers' logs in the pod(s). Default value is ``false``"
msgstr "trueの場合、ポッド内のすべてのコンテナのログを取得する。デフォルト値は ``false``"

#: ../../gdi/opentelemetry/otel-commands.rst:491 ../../gdi/smart-agent/smart-agent-commands.rst:480
msgid "``-c``"
msgstr "``-c``"

#: ../../gdi/opentelemetry/otel-commands.rst:492 ../../gdi/smart-agent/smart-agent-commands.rst:481
msgid "The container where the logs are displayed from"
msgstr "ログが表示されるコンテナ"

#: ../../gdi/opentelemetry/otel-commands.rst:495 ../../gdi/smart-agent/smart-agent-commands.rst:484
msgid "``--insecure-skip-tls-verify-backend``"
msgstr "``--insecure-skip-tls-verify-backend``"

#: ../../gdi/opentelemetry/otel-commands.rst:496 ../../gdi/smart-agent/smart-agent-commands.rst:485
msgid "Skip verifying the identity of the kubelet that logs are requested from. Use this when you want to get logs from a kubelet with an expired serving certificate"
msgstr "ログが要求されたkubeletの身元確認をスキップします。サービング証明書の有効期限が切れたkubeletからログを取得する場合に使用します。"

#: ../../gdi/opentelemetry/otel-commands.rst:497 ../../gdi/smart-agent/smart-agent-commands.rst:486
msgid "``-l``"
msgstr "``-l``"

#: ../../gdi/opentelemetry/otel-commands.rst:498 ../../gdi/smart-agent/smart-agent-commands.rst:487
msgid "A label to filter on"
msgstr "フィルタリングするラベル"

#: ../../gdi/opentelemetry/otel-commands.rst:499 ../../gdi/smart-agent/smart-agent-commands.rst:488
msgid "``-p``"
msgstr "``-p``"

#: ../../gdi/opentelemetry/otel-commands.rst:500 ../../gdi/smart-agent/smart-agent-commands.rst:489
msgid "If true, show the logs for the previous instance of the container in a pod if it exists. Default value is ``false``"
msgstr "true の場合、Pod 内にコンテナの前のインスタンスが存在すれば、そのログを表示する。デフォルト値は ``false``"

#: ../../gdi/opentelemetry/otel-commands.rst:501 ../../gdi/smart-agent/smart-agent-commands.rst:490
msgid "``--since``"
msgstr "``--since``"

#: ../../gdi/opentelemetry/otel-commands.rst:502 ../../gdi/smart-agent/smart-agent-commands.rst:491
msgid "Get only the latest logs within the specified time duration"
msgstr "指定した期間内の最新のログのみを取得する。"

#: ../../gdi/opentelemetry/otel-commands.rst:503 ../../gdi/smart-agent/smart-agent-commands.rst:492
msgid "``--tail``"
msgstr "``--tail``"

#: ../../gdi/opentelemetry/otel-commands.rst:504 ../../gdi/smart-agent/smart-agent-commands.rst:493
msgid "Number of most recent log lines to show"
msgstr "表示する直近のログ行数"

#: ../../gdi/opentelemetry/otel-commands.rst:509 ../../gdi/smart-agent/smart-agent-commands.rst:498
msgid "restart"
msgstr "リスタート"

#: ../../gdi/opentelemetry/otel-commands.rst:513
msgid "Restart the collector on the host. If the Fluentd service is installed, you can also restart it using ``sudo systemctl restart td-agent``."
msgstr "ホスト上でコレクタを再起動します。Fluentd サービスがインストールされていれば、``sudo systemctl restart td-agent`` を使って再起動することもできます。"

#: ../../gdi/opentelemetry/otel-commands.rst:525 ../../gdi/smart-agent/smart-agent-commands.rst:515
msgid "start"
msgstr "スタート"

#: ../../gdi/opentelemetry/otel-commands.rst:529
msgid "Start the collector on the host. If the Fluentd service is installed, you can also start it using ``sudo systemctl start td-agent``."
msgstr "ホスト上でコレクタを起動します。Fluentd サービスがインストールされていれば、``sudo systemctl start td-agent`` を使って起動することもできます。"

#: ../../gdi/opentelemetry/otel-commands.rst:545
msgid "Check the status of the collector on the host. Only available for :new-page:`Linux <https://github.com/signalfx/splunk-otel-collector/blob/main/docs/getting-started/linux-installer.md>`."
msgstr "ホスト上のコレクタのステータスをチェックする。:new-page:`Linux<https://github.com/signalfx/splunk-otel-collector/blob/main/docs/getting-started/linux-installer.md>` でのみ利用可能。"

#: ../../gdi/opentelemetry/otel-commands.rst:547
msgid "Additionally, you can use the :new-page:`Health Check extension <https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/healthcheckextension/README.md>`, which activates to probe an HTTP url to check the status of the OpenTelemetry Collector."
msgstr ":new-page:` <https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/healthcheckextension/README.md>`これは、OpenTelemetry Collector のステータスをチェックするために、HTTP url をプローブするようにアクティブにします。"

#: ../../gdi/opentelemetry/otel-commands.rst:559 ../../gdi/smart-agent/smart-agent-commands.rst:567
msgid "stop"
msgstr "ストップ"

#: ../../gdi/opentelemetry/otel-commands.rst:563
msgid "Stop the collector on the host. If the Fluentd service is installed, you can also stop it using ``sudo systemctl stop td-agent``."
msgstr "ホスト上のコレクタを停止する。Fluentd サービスがインストールされている場合、``sudo systemctl stop td-agent`` を使って停止することもできます。"

#: ../../gdi/opentelemetry/otel-requirements.rst:10 ../../gdi/opentelemetry/security.rst:15
msgid "Security guidelines"
msgstr "セキュリティ・ガイドライン"

#: ../../gdi/opentelemetry/otel-requirements.rst:-1
msgid "Requirements for the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションの要件。"

#: ../../gdi/opentelemetry/otel-requirements.rst:5
msgid "Collector requirements"
msgstr "コレクター要件"

#: ../../gdi/opentelemetry/otel-requirements.rst:20
msgid "Keep in mind the following pre-requisites, requirements, and general considerations when using the Collector:"
msgstr "コレクタを使用するときは、以下の前提条件、要件、および一般的な注意事項に留意してください："

#: ../../gdi/opentelemetry/otel-requirements.rst:22
msgid ":ref:`otel-security`"
msgstr ":ref:`otel-security`"

#: ../../gdi/opentelemetry/otel-requirements.rst:23
msgid ":ref:`otel-exposed-endpoints`"
msgstr ":ref:`otel-exposed-endpoints`"

#: ../../gdi/opentelemetry/otel-requirements.rst:24
msgid ":ref:`otel-sizing`"
msgstr ":ref:`otel-sizing`"

#: ../../gdi/opentelemetry/otel-requirements.rst:25
msgid ":ref:`collector-architecture`"
msgstr ":ref:`collector-architecture`"

#: ../../gdi/opentelemetry/otel-upgrade.rst:-1
msgid "Upgrade the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションをアップグレードする。"

#: ../../gdi/opentelemetry/otel-upgrade.rst:5
msgid "Upgrade the Collector"
msgstr "コレクターのアップグレード"

#: ../../gdi/opentelemetry/otel-upgrade.rst:10
msgid "The installer script uses one of the supported package managers to install the Collector, for example apt or yum."
msgstr "インストーラスクリプトは、apt や yum など、サポートされているパッケージマネージャのいずれかを使用して Collector をインストールします。"

#: ../../gdi/opentelemetry/otel-upgrade.rst:12
msgid "When you update the Collector using the official packages, configuration files are never overridden. If you need to update the configuration after an update, edit them manually before backward compatibility is dropped."
msgstr "公式パッケージを使用してCollectorを更新する場合、設定ファイルが上書きされることはありません。アップデート後にコンフィギュレーションを更新する必要がある場合は、後方互換性が失われる前に手動で編集してください。"

#: ../../gdi/opentelemetry/otel-upgrade.rst:15
msgid "Upgrade guidelines"
msgstr "アップグレードのガイドライン"

#: ../../gdi/opentelemetry/otel-upgrade.rst:17
msgid "Apply the following changes to the Collector configuration files for specific version upgrades."
msgstr "特定のバージョンアップのために、Collector 構成ファイルに以下の変更を適用します。"

#: ../../gdi/opentelemetry/otel-upgrade.rst:24
msgid "From 0.41.0 to 0.42.0"
msgstr "0.41.0から0.42.0まで"

#: ../../gdi/opentelemetry/otel-upgrade.rst:26
msgid "The Splunk OpenTelemetry Collector used to evaluate user configuration twice and this required escaping of each ``$`` symbol with ``$$`` to prevent unwanted environment variable expansion. The issue was fixed in the 0.42.0 version. Any occurrences of ``$$`` in your configuration need to be replaced with ``$``."
msgstr "Splunk OpenTelemetry Collector はユーザー設定を 2 回評価するため、不要な環境変数の展開を防ぐために``$`` シンボルを``$$`` でエスケープする必要がありました。この問題は0.42.0バージョンで修正されました。コンフィギュレーションに``$$`` がある場合は、``$`` に置き換える必要がある。"

#: ../../gdi/opentelemetry/otel-upgrade.rst:29
msgid "From 0.35.0 to 0.36.0"
msgstr "0.35.0から0.36.0まで"

#: ../../gdi/opentelemetry/otel-upgrade.rst:31
msgid "Move the config parameter ``exporters -> otlp -> insecure`` to ``exporters -> otlp -> tls -> insecure``."
msgstr "コンフィグパラメーター``exporters -> otlp -> insecure`` を``exporters -> otlp -> tls -> insecure`` に移動する。"

#: ../../gdi/opentelemetry/otel-upgrade.rst:33
msgid "The ``otlp`` exporter configuration must look like this:"
msgstr "``otlp`` エクスポーターのコンフィギュレーションは次のようになっていなければならない："

#: ../../gdi/opentelemetry/otel-upgrade.rst:44
msgid "From 0.34.0 to 0.35.0"
msgstr "0.34.0から0.35.0まで"

#: ../../gdi/opentelemetry/otel-upgrade.rst:46
msgid "Move the ``ballast_size_mib`` parameter from the ``memory_limiter`` processor to the ``memory_ballast`` extension, and rename it to ``size_mib``."
msgstr "``ballast_size_mib`` パラメーターを``memory_limiter`` プロセッサーから``memory_ballast`` エクステンションに移動し、名前を``size_mib`` に変更する。"

#: ../../gdi/opentelemetry/otel-upgrade.rst:58
msgid "Upgrade the Collector for Kubernetes"
msgstr "Kubernetes用コレクターのアップグレード"

#: ../../gdi/opentelemetry/otel-upgrade.rst:60
msgid "To upgrade the Collector for Kubernetes run the following commands:"
msgstr "Collector for Kubernetesをアップグレードするには、以下のコマンドを実行する："

#: ../../gdi/opentelemetry/otel-upgrade.rst:62
msgid "Use the flag ``--reuse-values`` to keep the config values you'd already set while installing or using the Collector:"
msgstr "フラグ``--reuse-values`` を使用して、コレクターのインストール時または使用時に設定した設定値を保持します："

#: ../../gdi/opentelemetry/otel-upgrade.rst:69
msgid "Use ``--values config.yaml`` to override your previous configuration while upgrading:"
msgstr "アップグレード中に以前の設定を上書きするには、``--values config.yaml`` ："

#: ../../gdi/opentelemetry/otel-upgrade.rst:75
msgid "Read more in the official Helm upgrade options documentation at :new-page:`https://helm.sh/docs/helm/helm_upgrade/#options <https://helm.sh/docs/helm/helm_upgrade/#options>`."
msgstr "詳しくは Helm の公式アップグレードオプションのドキュメント:new-page:`https://helm.sh/docs/helm/helm_upgrade/#options<https://helm.sh/docs/helm/helm_upgrade/#options>` をご覧ください。"

#: ../../gdi/opentelemetry/otel-upgrade.rst:80
msgid "Upgrade the Collector for Linux"
msgstr "Linux 用コレクターのアップグレード"

#: ../../gdi/opentelemetry/otel-upgrade.rst:82
msgid "Run the following commands on your system to upgrade the Collector. It requires ``root`` privileges:"
msgstr "システムで以下のコマンドを実行して、コレクタをアップグレードします。``root`` ："

#: ../../gdi/opentelemetry/otel-upgrade.rst:89
msgid "debian"
msgstr "デビアン"

#: ../../gdi/opentelemetry/otel-upgrade.rst:97
msgid "If the default configuration files in ``/etc/otel/collector`` have been modified after the initial installation, you might be prompted to keep the existing files or overwrite the files from the new package."
msgstr "``/etc/otel/collector`` のデフォルト設定ファイルが最初のインストール後に変更された場合、既存のファ イルを保持するか、新しいパッケージのファイルを上書きするかを尋ねるプロンプト が表示されるかもしれません。"

#: ../../gdi/opentelemetry/otel-upgrade.rst:102
msgid "The package managers are yum, dnf, and zypper."
msgstr "パッケージ・マネージャーには、yum、dnf、zypperがある。"

#: ../../gdi/opentelemetry/otel-upgrade.rst:126
msgid "If the default configuration files in ``/etc/otel/collector`` have been modified after initial installation, the existing files are preserved and the files from the new package can be installed with an ``.rpmnew`` extension."
msgstr "``/etc/otel/collector`` のデフォルト設定ファイルが初期インストール後に変更された場合、 既存のファイルは保持され、新しいパッケージのファイルは``.rpmnew`` という拡張子でインストールできます。"

#: ../../gdi/opentelemetry/otel-upgrade.rst:131
msgid "Upgrade the Collector for Windows"
msgstr "Windows 用コレクターのアップグレード"

#: ../../gdi/opentelemetry/otel-upgrade.rst:133
msgid "If you used the Windows installer script, to upgrade you can manually download and run the MSI for the desired Collector version :new-page:`from GitHub <https://github.com/signalfx/splunk-otel-collector/releases>`."
msgstr "Windows インストーラのスクリプトを使用した場合は、アップグレードのために GitHub<https://github.com/signalfx/splunk-otel-collector/releases>` から希望の Collector バージョン:new-page:`の MSI を手動でダウンロードして実行することができます。"

#: ../../gdi/opentelemetry/otel-upgrade.rst:136
msgid "Chocolatey"
msgstr "ショコラトリー"

#: ../../gdi/opentelemetry/otel-upgrade.rst:138
msgid "If you're using :ref:`Chocolatey <windows-chocolatey>`, in order to keep parameters when upgrading, before installation you need to activate the following feature:"
msgstr ":ref:`Chocolatey <windows-chocolatey>` を使用している場合、アップグレード時にパラメータを保持するために、インストール前に以下の機能を有効にする必要があります："

#: ../../gdi/opentelemetry/otel-upgrade.rst:144
msgid "To upgrade, run the following command in PowerShell:"
msgstr "アップグレードするには、PowerShellで以下のコマンドを実行する："

#: ../../gdi/opentelemetry/other-configuration-sources.rst:-1
msgid "Configure these optional components to retrieve data from specific configuration sources. After retrieving the data, you can then insert the data into your Splunk Distribution of OpenTelemetry Collector configuration."
msgstr "特定の構成ソースからデータを取得するために、これらのオプションコンポーネントを構成する。データを取得した後、そのデータを Splunk Distribution of OpenTelemetry Collector 設定に挿入することができます。"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:5
msgid "Other configuration sources (Alpha/Beta)"
msgstr "その他のコンフィギュレーション・ソース（アルファ／ベータ）"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:10
msgid "In addition to the Collector packages and Fluentd, the following components can be configured:"
msgstr "Collector パッケージと Fluentd に加えて、以下のコンポーネントを設定できます："

#: ../../gdi/opentelemetry/other-configuration-sources.rst:12
msgid ":ref:`Environment variable (Alpha) <env-variable-config-source>`"
msgstr ":ref:`Environment variable (Alpha) <env-variable-config-source>`"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:13
msgid ":ref:`etcd2 (Alpha) <etcd2-config-source>`"
msgstr ":ref:`etcd2 (Alpha) <etcd2-config-source>`"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:14
msgid ":ref:`Include config source (Beta) <include-config-source>`"
msgstr ":ref:`Include config source (Beta) <include-config-source>`"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:15
msgid ":ref:`Vault (Alpha) <vault-config-source>`"
msgstr ":ref:`Vault (Alpha) <vault-config-source>`"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:16
msgid ":ref:`Zookeeper (Alpha) <zookeeper-config-source>`"
msgstr ":ref:`Zookeeper (Alpha) <zookeeper-config-source>`"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:20
msgid ":strong:`Alpha` and :strong:`Beta` refer to configurations that might not be stable and might be limited in their capabilities. These configurations can change without notice."
msgstr ":strong:`Alpha` 、:strong:`Beta` 、安定しない可能性があり、能力が制限される可能性があるコンフィギュレーションを指す。これらの構成は予告なく変更されることがあります。"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:22
msgid "While in the alpha stage, breaking changes might be introduced in a new release."
msgstr "アルファ版の段階では、新リリースで変更を加える可能性がある。"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:28
msgid "Use the environmental variable configuration source instead of direct references to environment variables in the configuration to inject YAML fragments or to have default values in case the selected environment variable is undefined. See :new-page:`Environment Variable Config Source (Alpha) <https://github.com/signalfx/splunk-otel-collector/blob/main/internal/configsource/envvarconfigsource/README.md>` in GitHub to copy the configuration YAML file."
msgstr "YAMLフラグメントを注入するために、もしくは選択された環境変数が未定義の場合のデフォルト値を持つために、コンフィギュレーションで環境変数を直接参照する代わりに、環境変数コンフィギュレーションソースを使います。コンフィギュレーションYAMLファイルをコピーするには、GitHubの:new-page:`Environment Variable Config Source (Alpha)<https://github.com/signalfx/splunk-otel-collector/blob/main/internal/configsource/envvarconfigsource/README.md>` を参照のこと。"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:33
msgid "etcd2 (Alpha)"
msgstr "etcd2 (Alpha)"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:34
msgid "Use the etcd2 configuration source to retrieve data from etcd2 and inject it into your configuration. See :new-page:`etcd2 configuration source (Alpha) <https://github.com/signalfx/splunk-otel-collector/tree/main/internal/configsource/etcd2configsource>` in GitHub to copy the configuration YAML file."
msgstr "etcd2設定ソースを使用して、etcd2からデータを取得し、設定に注入する。設定のYAMLファイルをコピーするには、GitHubの:new-page:`etcd2 configuration source (Alpha)<https://github.com/signalfx/splunk-otel-collector/tree/main/internal/configsource/etcd2configsource>` 。"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:41
msgid "Use the include configuration source to inject :new-page:`Go templates <https://pkg.go.dev/text/template>` or plain files into the configuration. The configuration source can be used to insert scalar data or complete YAML sections. See :new-page:`Include Config Source (Beta) <https://github.com/signalfx/splunk-otel-collector/tree/main/internal/configsource/includeconfigsource>` in GitHub to copy the configuration YAML file."
msgstr "インクルード・コンフィギュレーション・ソースを使用して、:new-page:`Go テンプレート<https://pkg.go.dev/text/template>` またはプレーン・ファイルをコンフィギュレーションにインジェクトします。設定ソースはスカラーデータもしくは完全な YAML セクションを挿入するために使われます。コンフィギュレーション YAML ファイルをコピーするには、GitHub の:new-page:`Include Config Source (Beta)<https://github.com/signalfx/splunk-otel-collector/tree/main/internal/configsource/includeconfigsource>` を参照してください。"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:47
msgid "Use the Vault configuration source to retrieve data from Vault and inject it into your configuration YAML. This configuration supports these features:"
msgstr "Vault 構成ソースを使用して Vault からデータを取得し、構成 YAML に注入します。このコンフィギュレーションはこれらの機能をサポートしている："

#: ../../gdi/opentelemetry/other-configuration-sources.rst:49
msgid "Dynamic secrets"
msgstr "ダイナミックな秘密"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:50
msgid "Key-value version 1 lease hints"
msgstr "キーバリュー・バージョン1のリースヒント"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:51
msgid "Key-value version 2 metadata polling"
msgstr "キー・バリュー・バージョン2のメタデータ・ポーリング"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:53
msgid "See :new-page:`Vault configuration source (Alpha) <https://github.com/signalfx/splunk-otel-collector/tree/main/internal/configsource/vaultconfigsource>` in GitHub to copy the configuration YAML."
msgstr "設定 YAML をコピーするには、GitHub の:new-page:`Vault configuration source (Alpha)<https://github.com/signalfx/splunk-otel-collector/tree/main/internal/configsource/vaultconfigsource>` を参照してください。"

#: ../../gdi/opentelemetry/other-configuration-sources.rst:59
msgid "Use the Zookeeper configuration source to retrieve data from Zookeeper and inject it into your configuration. See :new-page:`Zookeeper configuration source (Alpha) <https://github.com/signalfx/splunk-otel-collector/tree/main/internal/configsource/zookeeperconfigsource>` in GitHub to copy the configuration YAML file."
msgstr "Zookeeper の設定ソースを使用して、Zookeeper からデータを取得し、設定に注入します。設定の YAML ファイルをコピーするには、GitHub の:new-page:`Zookeeper configuration source (Alpha)<https://github.com/signalfx/splunk-otel-collector/tree/main/internal/configsource/zookeeperconfigsource>` を参照してください。"

#: ../../gdi/opentelemetry/resources.rst:-1
msgid "Resources for using the Splunk Distribution of OpenTelemetry Collector: Architecture, Components, Monitoring, Security, Troubleshooting."
msgstr "OpenTelemetry CollectorのSplunkディストリビューションを使用するためのリソース：アーキテクチャ、コンポーネント、モニタリング、セキュリティ、トラブルシューティング。"

#: ../../gdi/opentelemetry/resources.rst:5
msgid "Overview of the Splunk Distribution of OpenTelemetry Collector"
msgstr "OpenTelemetry Collector の Splunk ディストリビューションの概要"

#: ../../gdi/opentelemetry/resources.rst:10
msgid "This page provides an overview of the resources available for using the Splunk Distribution of OpenTelemetry Collector. To learn more, see :ref:`otel-collector-scenario`."
msgstr "このページでは、OpenTelemetry Collector の Splunk ディストリビューションを使用するために利用できるリソースの概要を説明します。詳しくは、:ref:`otel-collector-scenario` をご覧ください。"

#: ../../gdi/opentelemetry/resources.rst:17
msgid "The following table describes everything you need to start using the Collector:"
msgstr "以下の表に、コレクタの使用を開始するために必要なすべてを示します："

#: ../../gdi/opentelemetry/resources.rst:23
msgid "Resource"
msgstr "リソース"

#: ../../gdi/opentelemetry/resources.rst:25
msgid "Access token"
msgstr "アクセストークン"

#: ../../gdi/opentelemetry/resources.rst:26
msgid "Use an access token to track and manage your resource usage. Where you see ``<access_token>``, replace it with the name of your access token. See :ref:`admin-org-tokens`."
msgstr "アクセストークンを使用して、リソースの使用状況を追跡・管理します。``<access_token>`` をアクセストークンの名前に置き換えてください。:ref:`admin-org-tokens` を参照。"

#: ../../gdi/opentelemetry/resources.rst:27
msgid "Realm"
msgstr "領域"

#: ../../gdi/opentelemetry/resources.rst:28
msgid "A realm is a self-contained deployment that hosts organizations. You can find your realm name on your profile page in the user interface. Where you see ``<REALM>``, replace it with the name of your organization's realm. See :new-page:`realms <https://dev.splunk.com/observability/docs/realms_in_endpoints/>`."
msgstr "レルムは、組織をホストする自己完結型の配置である。レルム名はユーザーインターフェースのプロフィールページで確認できます。``<REALM>`` と表示されている箇所は、組織のレルムの名前に置き換えてください。:new-page:`レルム<https://dev.splunk.com/observability/docs/realms_in_endpoints/>` を参照のこと。"

#: ../../gdi/opentelemetry/resources.rst:29
msgid "Host monitoring (agent) or data forwarding (gateway) mode"
msgstr "ホスト監視（エージェント）またはデータ転送（ゲートウェイ）モード"

#: ../../gdi/opentelemetry/resources.rst:30
msgid "In host monitoring (agent) mode, the Collector runs with the application or on the same host as the application. In data forwarding (gateway) mode, one or more collectors run a standalone service, for example, a container or deployment. See :ref:`otel-deployment-mode`."
msgstr "ホストモニタ（エージェント）モードでは、コレクタはアプリケーションと共に、またはアプリケーションと同じホスト上で実行されます。データ転送(ゲートウェイ)モードでは、1つまたは複数のコレクタが、コンテナやデプロイメントなどのスタンドアロンサービスを実行します。:ref:`otel-deployment-mode` を参照。"

#: ../../gdi/opentelemetry/resources.rst:31
msgid "Ports and endpoints"
msgstr "ポートとエンドポイント"

#: ../../gdi/opentelemetry/resources.rst:32
msgid "Check exposed ports to make sure your environment doesn't have conflicts and that firewalls are configured. You can change the ports in the Collector configuration. See :ref:`otel-exposed-endpoints`."
msgstr "公開されているポートをチェックし、環境に競合がないか、ファイアウォールが設定されているかを確認する。コレクタの設定でポートを変更できます。:ref:`otel-exposed-endpoints` を参照。"

#: ../../gdi/opentelemetry/resources.rst:34
msgid "See also :ref:`otel-requirements`."
msgstr ":ref:`otel-requirements` も参照のこと。"

#: ../../gdi/opentelemetry/resources.rst:37
msgid "Install and configure the Collector"
msgstr "コレクタのインストールと設定"

#: ../../gdi/opentelemetry/resources.rst:39
msgid "Learn how to install, deploy, upgrade or uninstall the Collector in :ref:`otel-install-platform`."
msgstr "コレクターのインストール、デプロイ、アップグレード、アンインストール方法については、:ref:`otel-install-platform` を参照してください。"

#: ../../gdi/opentelemetry/resources.rst:41
msgid "This distribution is supported on and packaged for a variety of platforms, including:"
msgstr "このディストリビューションは、以下を含む様々なプラットフォームでサポートされ、パッケージ化されている："

#: ../../gdi/opentelemetry/resources.rst:43
msgid "Kubernetes: :ref:`Helm <helm-chart>` (recommended) and :ref:`YAML <resource-yaml-manifests>`."
msgstr "Kubernetes::ref:`Helm <helm-chart>` (推奨) と:ref:`YAML <resource-yaml-manifests>` 。"

#: ../../gdi/opentelemetry/resources.rst:44
msgid "Linux: :ref:`installer script <linux-scripts>` (recommended), :ref:`Ansible <deployment-linux-ansible>`, :ref:`Puppet <deployment-linux-puppet>`, :ref:`Heroku <linux-heroku>`, and :ref:`manual <linux-manual>` (including DEB/RPM packages, Docker, and binary)."
msgstr "Linux::ref:`installer script <linux-scripts>` (推奨)、:ref:`Ansible <deployment-linux-ansible>` 、:ref:`Puppet <deployment-linux-puppet>` 、:ref:`Heroku <linux-heroku>` 、:ref:`manual <linux-manual>` (DEB/RPMパッケージ、Docker、バイナリを含む)。"

#: ../../gdi/opentelemetry/resources.rst:45
msgid "Windows: :ref:`installer script <windows-script>` (recommended), :ref:`Ansible <deployment-windows-ansible>`, :ref:`Puppet <deployment-windows-puppet>`, and :ref:`manual <otel-install-windows-manual>` (including MSI with GUI and PowerShell)."
msgstr "Windows：:ref:`installer script <windows-script>` （推奨）、:ref:`Ansible <deployment-windows-ansible>` 、:ref:`Puppet <deployment-windows-puppet>` 、:ref:`manual <otel-install-windows-manual>` （GUIおよびPowerShellによるMSIを含む）。"

#: ../../gdi/opentelemetry/resources.rst:47
msgid "After you've installed the Collector, see :ref:`otel-configuration` and :ref:`otel-other-configuration-sources`."
msgstr "コレクターのインストールが完了したら、:ref:`otel-configuration` および:ref:`otel-other-configuration-sources` を参照してください。"

#: ../../gdi/opentelemetry/resources.rst:52
msgid "Monitor the Collector"
msgstr "コレクターの監視"

#: ../../gdi/opentelemetry/resources.rst:54
msgid "The default configuration automatically scrapes the Collector's own metrics and sends the data using the ``signalfx`` exporter. A built-in dashboard provides information about the health and status of Collector instances. In addition, logs are automatically collected for the Collector and Journald processes."
msgstr "デフォルトの構成では、Collector 自体のメトリックが自動的にスクレイピングされ、``signalfx`` エクスポーターを使用してデータが送信されます。組み込みのダッシュボードでは、Collectorインスタンスの健全性とステータスに関する情報を提供します。さらに、CollectorおよびJournaldプロセス用にログが自動的に収集される。"

#: ../../gdi/opentelemetry/resources.rst:56
msgid "The Collector also offers a :new-page:`zPages extension <https://github.com/open-telemetry/opentelemetry-collector/blob/main/extension/zpagesextension/README.md>`, which provides live data about the Collector. zPages are useful for in-process diagnostics without having to depend on any back end to examine traces or metrics."
msgstr "Collectorは、:new-page:`zPages拡張<https://github.com/open-telemetry/opentelemetry-collector/blob/main/extension/zpagesextension/README.md>` 、Collectorに関するライブデータを提供します。zPagesは、トレースやメトリックを調べるためにバックエンドに依存することなく、プロセス内診断に役立ちます。"

#: ../../gdi/opentelemetry/resources.rst:61
msgid "See :ref:`Troubleshooting <otel-troubleshooting>` to resolve common issues using the OpenTelemetry Collector and the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector と OpenTelemetry Collector の Splunk ディストリビューションを使用する一般的な問題を解決するには、:ref:`Troubleshooting <otel-troubleshooting>` を参照してください。"

#: ../../gdi/opentelemetry/security.rst:-1
msgid "Security landing. Describes how to ensure that the Splunk Distribution of OpenTelemetry Collector is secure."
msgstr "セキュリティ・ランディング。OpenTelemetry Collector の Splunk ディストリビューションの安全性を確保する方法について説明します。"

#: ../../gdi/opentelemetry/security.rst:5
msgid "Security guidelines, permissions, and dependencies"
msgstr "セキュリティガイドライン、権限、依存関係"

#: ../../gdi/opentelemetry/security.rst:10
msgid "The Splunk Distribution of OpenTelemetry Collector defaults to operating in a secure manner, but is configuration driven, so you need at least a basic understanding of architecture and functionality to manage security. See :ref:`collector-architecture` and :ref:`otel-deployment-mode` for more information."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションは、デフォルトでセキュアな方法で動作しますが、設定主導なので、セキュリティを管理するには、少なくともアーキテクチャと機能の基本的な理解が必要です。詳しくは:ref:`collector-architecture` 、:ref:`otel-deployment-mode` 。"

#: ../../gdi/opentelemetry/security.rst:12
msgid "Do not report security vulnerabilities by using public GitHub issue reports. See :new-page:`Report a Security Vulnerability <https://www.splunk.com/en_us/product-security/report.html>` to report security issues."
msgstr "公開されているGitHubの課題報告を使ってセキュリティ脆弱性を報告しないでください。セキュリティ問題を報告するには、:new-page:`Report a Security Vulnerability<https://www.splunk.com/en_us/product-security/report.html>` を参照してください。"

#: ../../gdi/opentelemetry/security.rst:18
msgid "For end users"
msgstr "エンドユーザー向け"

#: ../../gdi/opentelemetry/security.rst:19
msgid "Follow these guidelines when using the Collector."
msgstr "コレクタを使用するときは、以下のガイドラインに従ってください。"

#: ../../gdi/opentelemetry/security.rst:23
msgid "Activate the minimum required components in the configuration."
msgstr "コンフィギュレーションで最低限必要なコンポーネントをアクティブにする。"

#: ../../gdi/opentelemetry/security.rst:24
msgid "Ensure that sensitive configuration information is stored securely."
msgstr "重要な構成情報が安全に保管されるようにする。"

#: ../../gdi/opentelemetry/security.rst:27 ../../gdi/opentelemetry/security.rst:58
msgid "Set permissions"
msgstr "パーミッションの設定"

#: ../../gdi/opentelemetry/security.rst:28
msgid "Do not not run Collector as root or admin user."
msgstr "Collectorをrootまたはadminユーザで実行しないでください。"

#: ../../gdi/opentelemetry/security.rst:29
msgid "Configure require privileged access for components as necessary."
msgstr "必要に応じて、コンポーネントに特権アクセスを要求するように設定する。"

#: ../../gdi/opentelemetry/security.rst:32 ../../gdi/opentelemetry/security.rst:63
msgid "Configure receivers and exporters"
msgstr "レシーバーとエクスポーターの設定"

#: ../../gdi/opentelemetry/security.rst:33
msgid "Use encryption and authentication."
msgstr "暗号化と認証を使用する。"

#: ../../gdi/opentelemetry/security.rst:34
msgid "Make sure configuration parameters are modified properly to reduce security risks."
msgstr "セキュリティリスクを減らすために、設定パラメータが適切に変更されていることを確認してください。"

#: ../../gdi/opentelemetry/security.rst:37
msgid "Configure processors"
msgstr "プロセッサーの設定"

#: ../../gdi/opentelemetry/security.rst:38
msgid "Configure obfuscation or scrubbing of sensitive metadata."
msgstr "機密性の高いメタデータの難読化またはスクラブ設定を行う。"

#: ../../gdi/opentelemetry/security.rst:39
msgid "Configure all recommended processors."
msgstr "すべての推奨プロセッサを設定する。"

#: ../../gdi/opentelemetry/security.rst:42 ../../gdi/opentelemetry/security.rst:68
msgid "Configure extensions"
msgstr "エクステンションの設定"

#: ../../gdi/opentelemetry/security.rst:43
msgid "Do not expose sensitive health or telemetry data."
msgstr "機密性の高い健康データや遠隔測定データを公開しないこと。"

#: ../../gdi/opentelemetry/security.rst:46
msgid "For developers"
msgstr "開発者向け"

#: ../../gdi/opentelemetry/security.rst:47
msgid "Follow these general guidelines:"
msgstr "以下の一般的なガイドラインに従ってください："

#: ../../gdi/opentelemetry/security.rst:49
msgid "Get the configuration information from the Collector configuration file."
msgstr "Collector 構成ファイルから構成情報を取得する。"

#: ../../gdi/opentelemetry/security.rst:50
msgid "Use configuration helper functions."
msgstr "設定ヘルパー関数を使用する。"

#: ../../gdi/opentelemetry/security.rst:54
msgid "Use the central configuration file."
msgstr "セントラル・コンフィギュレーション・ファイルを使用する。"

#: ../../gdi/opentelemetry/security.rst:55
msgid "Use configuration helpers."
msgstr "設定ヘルパーを使う。"

#: ../../gdi/opentelemetry/security.rst:59
msgid "Minimize privileged access."
msgstr "特権アクセスを最小限にする。"

#: ../../gdi/opentelemetry/security.rst:60
msgid "Document what requires privileged access and why."
msgstr "特権アクセスが必要なものとその理由を文書化する。"

#: ../../gdi/opentelemetry/security.rst:64
msgid "Configure receivers and exporters to default to encrypted connections."
msgstr "レシーバーとエクスポーターのデフォルトが暗号化接続になるように設定する。"

#: ../../gdi/opentelemetry/security.rst:65
msgid "Configure receivers and exporters to use helper functions. See :new-page:`exporter helper <https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/exporterhelper/README.md>` in GitHub for more information."
msgstr "ヘルパー関数を使用するようにレシーバーとエクスポーターを設定します。詳しくはGitHubの:new-page:`exporter helper<https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/exporterhelper/README.md>` を参照。"

#: ../../gdi/opentelemetry/security.rst:69
msgid "Configure extensions to not expose sensitive health or telemetry data by default."
msgstr "センシティブなヘルスデータやテレメトリデータをデフォルトで公開しないようにエクステンションを設定する。"

#: ../../gdi/opentelemetry/security.rst:72
msgid "General configuration"
msgstr "一般構成"

#: ../../gdi/opentelemetry/security.rst:74
msgid "The Collector binary does not contain an embedded or default configuration, so you need to specify a configuration file before you start it. The configuration file passed to the Collector must be validated prior to loading. If an invalid configuration is detected, the Collector must fail to start as a protective mechanism."
msgstr "Collector バイナリには、埋め込みまたはデフォルトの構成が含まれていないため、起動する前に構成ファイルを指定する必要があります。コレクタに渡される構成ファイルは、ロードする前に検証する必要があります。無効なコンフィグレーションが検出された場合、コレクタは保護メカニズムとして起動に失敗する必要があります。"

#: ../../gdi/opentelemetry/security.rst:76
msgid "The configuration drives the Collector's behavior, and care must be taken to ensure that the configuration only activates the minimum set of capabilities and, as such, exposes the minimum set of required ports. See :ref:`otel-exposed-endpoints` for more information. In addition, any incoming or outgoing communication must leverage TLS and authentication."
msgstr "コンフィギュレーションはコレクタの動作を駆動するため、コンフィギュレーションが機能の最小セットのみをアクティブにし、必要なポートの最小セットをエクスポーズするように注意する必要があります。詳しくは:ref:`otel-exposed-endpoints` 。さらに、送受信されるすべての通信は、TLSと認証を活用しなければならない。"

#: ../../gdi/opentelemetry/security.rst:78
msgid "The Collector keeps the configuration in memory, but where the configuration is loaded from at start time depends on the packaging used. For example, in Kubernetes secrets and ConfigMaps can be used, but in Docker, the image embeds the configuration in the container where is it not stored in an encrypted manner by default."
msgstr "コレクタはコンフィグレーションをメモリに保持しますが、開始時にコンフィグレーションがどこからロードされるかは、使用するパッケージによって異なります。例えば、KubernetesではシークレットやConfigMapsを使うことができるが、Dockerでは、イメージはコンフィギュレーションをコンテナに埋め込み、デフォルトでは暗号化されて保存されない。"

#: ../../gdi/opentelemetry/security.rst:80
msgid "The configuration might contain the following sensitive information:"
msgstr "コンフィギュレーションには以下の機密情報が含まれている可能性がある："

#: ../../gdi/opentelemetry/security.rst:82
msgid "Authentication information such as API tokens"
msgstr "APIトークンなどの認証情報"

#: ../../gdi/opentelemetry/security.rst:83
msgid "TLS certificates including private keys"
msgstr "秘密鍵を含むTLS証明書"

#: ../../gdi/opentelemetry/security.rst:85
msgid "Sensitive information must be stored securely such as on an encrypted file system or secret store. Environment variables can be used to handle sensitive and non-sensitive data, as the Collector must support environment variable expansion. See :new-page:`Configuration Environment Variables <https://opentelemetry.io/docs/collector/configuration/#configuration-environment-variables>` for more information."
msgstr "機密情報は、暗号化されたファイルシステムやシークレットストアなど、安全に保管されなければならない。コレクタは環境変数の展開をサポートする必要があるため、環境変数を使用して機密データおよび非機密データを扱うことができます。詳しくは:new-page:`構成環境変数<https://opentelemetry.io/docs/collector/configuration/#configuration-environment-variables>` を参照のこと。"

#: ../../gdi/opentelemetry/security.rst:87
msgid "More information on configuring OpenTelemetry components is provided in the following sections."
msgstr "OpenTelemetry コンポーネントの設定に関する詳細は、以下のセクションで説明します。"

#: ../../gdi/opentelemetry/security.rst:91
msgid "The Collector supports running as a custom user and must not be run as a root or admin user. For the majority of use cases, the Collector does not require privileged access to function. Some components might require privileged access; be careful when activating these components. Collector components might also require external permissions including network access or RBAC."
msgstr "Collectorはカスタムユーザでの実行をサポートしており、rootまたはadminユーザで実行することはできません。ほとんどのユースケースでは、Collectorを機能させるために特権アクセスは必要ありません。コンポーネントの中には、特権的なアクセスを必要とするものがあります。コレクター・コンポーネントは、ネットワーク・アクセスやRBACを含む外部アクセス許可を必要とする場合もある。"

#: ../../gdi/opentelemetry/security.rst:93
msgid "More information about permissions is provided in the following sections."
msgstr "パーミッションの詳細については、以下のセクションで説明する。"

#: ../../gdi/opentelemetry/security.rst:96
msgid "Receivers and exporters"
msgstr "荷受業者および輸出業者"

#: ../../gdi/opentelemetry/security.rst:97
msgid "Receivers and exporters can be either push-based or pull-based. In either case, the connection must be established over a secure and authenticated channel. Unused receivers and exporters must be deactivated to minimize the attack vector of the Collector. An attack vector is a pathway or method used by a hacker to illegally access a network or computer in an attempt to exploit system vulnerabilities."
msgstr "レシーバーとエクスポーターには、プッシュ型とプル型がある。いずれの場合も、接続は安全で認証されたチャンネルで確立されなければならない。コレクターの攻撃ベクトルを最小限に抑えるには、未使用のレシーバーとエクスポーターを停止する必要があります。攻撃ベクターとは、ハッカーがシステムの脆弱性を悪用しようと、ネットワークやコンピュータに不正にアクセスするために使用する経路や手法のこと。"

#: ../../gdi/opentelemetry/security.rst:99
msgid "Receivers and exporters might expose buffer, queue, payload, and worker settings by using configuration parameters. If these settings are available, end users can carefully modify the default values. Improperly setting these values might expose the Collector to additional attack vectors including resource exhaustion."
msgstr "レシーバとエクスポータは、設定パラメータを使って、バッファ、キュー、ペイロード、ワーカーの設定を公開することができる。これらの設定が利用可能な場合、エンドユーザーは慎重にデフォルト値を変更することができる。これらの値を不適切に設定すると、コレクターがリソースの枯渇を含む追加の攻撃ベクトルにさらされる可能性があります。"

#: ../../gdi/opentelemetry/security.rst:101
msgid "It is possible that a receiver might require the Collector to run in a privileged mode to operate, which could be a security concern."
msgstr "レシーバが動作するためにコレクタを特権モードで実行する必要がある可能性があり、これはセキュリティ上の懸念となる可能性があります。"

#: ../../gdi/opentelemetry/security.rst:103
msgid "Developers must use encrypted connections (by using the ``insecure: false`` configuration setting), and receiver and exporter helper functions."
msgstr "開発者は、暗号化された接続（``insecure: false`` コンフィギュレーション設定を使用）、およびレシーバーとエクスポーターのヘルパー関数を使用する必要があります。"

#: ../../gdi/opentelemetry/security.rst:107
msgid "Processors function between receivers and exporters, and they are responsible for processing the data in some way. From a security perspective, they are useful in the following ways."
msgstr "プロセッサーはレシーバーとエクスポーターの中間に位置し、データを何らかの方法で処理する責任を負う。セキュリティの観点からは、以下の点で有用である。"

#: ../../gdi/opentelemetry/security.rst:112
msgid "Recommended configuration"
msgstr "推奨構成"

#: ../../gdi/opentelemetry/security.rst:113
msgid "Processors are not activated by default. Depending on the data source, you might activate multiple processors. Processors must be activated for every data source, and not all processors support all data sources."
msgstr "プロセッサーはデフォルトでは起動しない。データ・ソースによっては、複数のプロセッサーをアクティブにすることができる。プロセッサーはデータ・ソースごとにアクティブにする必要があり、すべてのプロセッサーがすべてのデータ・ソースをサポートしているわけではない。"

#: ../../gdi/opentelemetry/security.rst:115
msgid "Keep in mind that the order of processors matters. The order in each section below is the best practice. Refer to the individual processor documentation for more information."
msgstr "プロセッサーの順番が重要であることに留意してほしい。以下の各セクションの順番はベストプラクティスである。詳細については、各プロセッサのマニュアルを参照してください。"

#: ../../gdi/opentelemetry/security.rst:119 ../../gdi/opentelemetry/security.rst:127
msgid "``memory_limiter`` processor"
msgstr "``memory_limiter`` プロセッサー"

#: ../../gdi/opentelemetry/security.rst:120
msgid "Any sampling processors"
msgstr "あらゆるサンプリング・プロセッサー"

#: ../../gdi/opentelemetry/security.rst:121 ../../gdi/opentelemetry/security.rst:128
msgid "Any processor relying on sending source from context (for example, ``k8sattributes``)"
msgstr "コンテキストからのソース送信に依存するプロセッサ（例えば、``k8sattributes`` ）。"

#: ../../gdi/opentelemetry/security.rst:122
msgid "``batch`` processor"
msgstr "``batch`` プロセッサー"

#: ../../gdi/opentelemetry/security.rst:123 ../../gdi/opentelemetry/security.rst:129
msgid "All other processors"
msgstr "その他のプロセッサー"

#: ../../gdi/opentelemetry/security.rst:132
msgid "Scrubbing sensitive data"
msgstr "機密データのスクラブ"

#: ../../gdi/opentelemetry/security.rst:133
msgid "It is common for to use the Collector to scrub sensitive data before exporting it to a back end. This is especially important when sending the data to a third-party back end. Configure the Collector to obfuscate or scrub sensitive data before exporting."
msgstr "バックエンドにエクスポートする前に、コレクターを使用して機密データをスクラブするのが一般的です。これは、サードパーティのバックエンドにデータを送信する場合に特に重要である。エクスポートする前に、機密データを難読化またはスクラブするようにコレクターを設定します。"

#: ../../gdi/opentelemetry/security.rst:136
msgid "Safeguards around resource utilization"
msgstr "資源利用をめぐるセーフガード"

#: ../../gdi/opentelemetry/security.rst:137
msgid "In addition, processors offer safeguards around resource utilization. The ``batch`` and ``memory_limiter`` processors help ensure that the Collector is resource efficient and does not run out of memory when overloaded. At a minimum, activate these two processors on every defined pipeline. See ref:`rec-processor-config` for more information."
msgstr "加えて、プロセッサーはリソース使用に関するセーフガードを提供する。``batch`` 、``memory_limiter`` プロセッサは、Collector のリソース効率を高め、過負荷時にメモリ不足にならないようにします。少なくとも、定義されたすべてのパイプラインで、この2つのプロセッサーをアクティブにする。詳しくはref:`rec-processor-config` を参照のこと。"

#: ../../gdi/opentelemetry/security.rst:140
msgid "Extensions"
msgstr "エクステンション"

#: ../../gdi/opentelemetry/security.rst:141
msgid "While receivers, processors, and exporters handle telemetry data directly, extensions typically serve different needs, as described in the following sections."
msgstr "レシーバ、プロセッサ、エクスポータはテレメトリデータを直接扱うが、以下のセクションで説明するように、エクステンションは通常異なるニーズに応える。"

#: ../../gdi/opentelemetry/security.rst:144
msgid "Health and telemetry"
msgstr "健康とテレメトリー"

#: ../../gdi/opentelemetry/security.rst:145
msgid "The initial extensions provided health check information, Collector metrics and traces, and the ability to generate and collect profiling data. When activated with their default settings, all of these extensions except the health check extension are only accessibly locally to the Collector. Proceed with caution when configuring these extensions for remote access, as sensitive information might be exposed as a result."
msgstr "初期の拡張機能では、ヘルスチェック情報、コレクターのメトリクスとトレース、プロファイリングデータの生成と収集機能を提供した。デフォルト設定で有効にすると、ヘルスチェックエクステンションを除くすべてのエクステンションはコレクターのローカルでのみアクセスできます。これらの拡張機能をリモートアクセス用に設定する場合は、機密情報が漏洩する可能性があるため、十分注意してください。"

#: ../../gdi/opentelemetry/security.rst:148
msgid "Forwarding"
msgstr "転送"

#: ../../gdi/opentelemetry/security.rst:149
msgid "A forwarding extension is typically used when some telemetry data not natively supported by the Collector needs to be collected. For example, the ``http_forwarder`` extension can receive and forward HTTP payloads. Forwarding extensions are similar to receivers and exporters, so the same security considerations apply."
msgstr "転送拡張は通常、コレクタがネイティブでサポートしていないテレメトリ データを収集する必要があるときに使用されます。例えば、``http_forwarder`` 拡張はHTTPペイロードを受信し転送することができる。フォワーディング・エクステンションは、レシーバーやエクスポー ターと似ているので、同じセキュリティの考慮事項が適用される。"

#: ../../gdi/opentelemetry/security.rst:152
msgid "Observers"
msgstr "オブザーバー"

#: ../../gdi/opentelemetry/security.rst:153
msgid "An observer is capable of performing service discovery of endpoints. Other components such as receivers can subscribe to these extensions to be notified of endpoints coming or going. Observers can require certain permissions to perform service discovery. For example, the ``k8s_observer`` requires certain RBAC permissions in Kubernetes, while the ``host_observer`` requires the Collector to run in privileged mode."
msgstr "オブザーバーは、エンドポイントのサービス・ディスカバリーを行うことができる。レシーバーなどの他のコンポーネントは、エンドポイントの出入りを通知するために、これらの拡張機能をサブスクライブすることができる。オブザーバーは、サービス・ディスカバリーを実行するために特定のパーミッションを要求することができる。例えば、``k8s_observer`` はKubernetesの特定のRBAC権限を必要とし、``host_observer`` はCollectorを特権モードで実行する必要がある。"

#: ../../gdi/opentelemetry/security.rst:156
msgid "Subprocesses"
msgstr "サブプロセス"

#: ../../gdi/opentelemetry/security.rst:157
msgid "Extensions can also be used to run subprocesses, which can be useful for collection mechanisms that cannot natively be run by the Collector (for example, FluentBit). Subprocesses expose a completely separate attack vector that would depend on the subprocess itself. In general, care should be taken before running any subprocesses alongside the Collector."
msgstr "拡張機能を使用してサブプロセスを実行することもできます。これは、コレクターでネイティブに実行できない収集メカニズム（たとえば、FluentBit）に便利です。サブプロセスは、サブプロセス自体に依存する全く別の攻撃ベクトルを露呈する。一般に、Collector と並行してサブプロセスを実行する前に注意が必要です。"

#: ../../gdi/opentelemetry/security.rst:162
msgid "The Splunk Distribution of OpenTelemetry Collector relies on a variety of external :new-page:`dependencies <https://github.com/signalfx/splunk-otel-collector/network/dependencies>`. These dependencies are monitored by :new-page:`Dependabot <https://docs.github.com/en/code-security/supply-chain-security/configuring-dependabot-security-updates>`. Dependencies are :new-page:`checked daily <https://github.com/signalfx/splunk-otel-collector/blob/main/.github/dependabot.yml>` and associated pull requests are opened automatically."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションは、さまざまな外部:new-page:`依存関係<https://github.com/signalfx/splunk-otel-collector/network/dependencies>` に依存しています。これらの依存関係は:new-page:`Dependabot<https://docs.github.com/en/code-security/supply-chain-security/configuring-dependabot-security-updates>` によって監視されている。依存関係は毎日:new-page:` <https://github.com/signalfx/splunk-otel-collector/blob/main/.github/dependabot.yml>` チェックされ、関連するプルリクエストが自動的に開かれる。"

#: ../../gdi/opentelemetry/security.rst:164
msgid "Upgrade to the :new-page:`latest release <https://github.com/signalfx/splunk-otel-collector/releases>` to ensure that you have the latest security updates. If a security vulnerability is detected for a dependency of this project, it might be due to one of the following reasons:"
msgstr "最新のセキュリティ・アップデートを確実に入手するために、:new-page:`最新リリース<https://github.com/signalfx/splunk-otel-collector/releases>` にアップグレードしてください。このプロジェクトの依存関係に対してセキュリティの脆弱性が検出された場合、それは以下の 理由のいずれかによるものかもしれません："

#: ../../gdi/opentelemetry/security.rst:166
msgid "You are running an older release."
msgstr "古いリリースを使用している。"

#: ../../gdi/opentelemetry/security.rst:167
msgid "A new release with the updates has not been released."
msgstr "アップデートを含む新しいリリースはリリースされていない。"

#: ../../gdi/opentelemetry/security.rst:168
msgid "The updated dependency has not been merged likely due to some breaking change (in this case, we will actively work to resolve the issue and open a tracking GitHub issues with details)."
msgstr "更新された依存関係がマージされていないのは、おそらく何らかの破壊的な変更があったためです（この場合、私たちは積極的に問題の解決に取り組み、詳細を追ったGitHub issuesを開きます）。"

#: ../../gdi/opentelemetry/security.rst:169
msgid "The dependency has not released an updated version with the patch."
msgstr "依存関係はパッチを適用した更新版をリリースしていない。"

#: ../../gdi/opentelemetry/sizing.rst:-1
msgid "Follow these guidelines when deploying the Splunk Distribution of OpenTelemetry Collector in your environment. Use these guidelines to make sure the Collector is properly sized."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを環境に導入する場合は、以下のガイドラインに従ってください。コレクターのサイズが適切であることを確認するために、以下のガイドラインを使用してください。"

#: ../../gdi/opentelemetry/sizing.rst:5
msgid "Sizing and scaling"
msgstr "サイジングとスケーリング"

#: ../../gdi/opentelemetry/sizing.rst:10
msgid "By default, the Collector is configured to use 512 MB (500 x 2^20 bytes) of memory."
msgstr "デフォルトでは、Collector は 512 MB (500 x 2^20 bytes) のメモリを使用するように設定されています。"

#: ../../gdi/opentelemetry/sizing.rst:12
msgid "With a single CPU core, the Collector can receive, process, or export the following:"
msgstr "1つのCPUコアで、Collectorは以下を受信、処理、またはエクスポートできます："

#: ../../gdi/opentelemetry/sizing.rst:14
msgid "If handling traces, 15,000 spans per second."
msgstr "トレースを扱う場合、毎秒15,000スパン。"

#: ../../gdi/opentelemetry/sizing.rst:15
msgid "If handling metrics, 20,000 data points per second."
msgstr "メトリックスを扱う場合、毎秒2万データポイント。"

#: ../../gdi/opentelemetry/sizing.rst:16
msgid "If handling logs, 10,000 log records per second, including Fluentd ``td-agent``, which forwards logs to the ``fluentforward`` receiver in the Collector."
msgstr "ログを扱う場合、コレクターの``fluentforward`` レシーバーにログを転送する Fluentd``td-agent`` を含めて、毎秒 10,000 のログレコード。"

#: ../../gdi/opentelemetry/sizing.rst:19
msgid "Sizing recommendations"
msgstr "推奨サイズ"

#: ../../gdi/opentelemetry/sizing.rst:21
msgid "The following is recommended:"
msgstr "以下を推奨する："

#: ../../gdi/opentelemetry/sizing.rst:23
msgid "Use a ratio of one CPU to 2 GB of memory."
msgstr "CPU1個に対してメモリ2GBの割合で使用する。"

#: ../../gdi/opentelemetry/sizing.rst:24
msgid "If the Collector handles both trace and metrics data, consider both types of data when planning your deployment. For example, 7.5K spans per second plus 10K data points per second requires 1 CPU core."
msgstr "Collectorがトレースとメトリックの両方のデータを処理する場合は、配置を計画するときに両方のタイプのデータを考慮してください。例えば、毎秒7.5Kスパンと毎秒10Kデータポイントの場合、1CPUコアを必要とする。"

#: ../../gdi/opentelemetry/sizing.rst:25
msgid "The Collector does not persist data to disk so no disk space is required."
msgstr "コレクタはデータをディスクに保存しないので、ディスク容量は不要です。"

#: ../../gdi/opentelemetry/sizing.rst:30
msgid "For :ref:`host monitoring (agent) mode <collector-agent-mode>`, allocate resources as needed."
msgstr ":ref:`host monitoring (agent) mode <collector-agent-mode>` については、必要に応じてリソースを配分する。"

#: ../../gdi/opentelemetry/sizing.rst:32
msgid "Typically, only a single agent runs per application or host, so properly sizing the agent is important."
msgstr "通常、1つのアプリケーションまたはホストにつき1つのエージェントしか実行しないため、エージェントのサイズを適切に設定することが重要です。"

#: ../../gdi/opentelemetry/sizing.rst:33
msgid "Consider deploying multiple independent agents for a given application or host depending on the use case. For example, a privileged agent can be deployed alongside an unprivileged agent."
msgstr "ユースケースに応じて、特定のアプリケーションやホストに複数の独立したエージェントを配備することを検討する。例えば、特権エージェントを非特権エージェントと一緒に配備することができる。"

#: ../../gdi/opentelemetry/sizing.rst:38
msgid "For :ref:`data forwarding (gateway) mode <collector-gateway-mode>`, allocate at least one CPU core per Collector. Each Collector runs independently, so scale increases linearly with the number of Collectors you deploy."
msgstr ":ref:`data forwarding (gateway) mode <collector-gateway-mode>` の場合、Collectorごとに少なくとも1つのCPUコアを割り当てる。各コレクターは独立して実行されるため、導入するコレクターの数に応じてスケールが直線的に増加します。"

#: ../../gdi/opentelemetry/sizing.rst:40
msgid "You can deploy multiple Collectors behind a round-robin load balancer for higher availability and performance. Do the following to evenly distribute the data:"
msgstr "より高い可用性とパフォーマンスのために、ラウンドロビン・ロードバランサーの背後に複数のコレクターを配置できます。データを均等に配分するために以下のことを行う："

#: ../../gdi/opentelemetry/sizing.rst:42
msgid "Install a cluster of Collectors with at least N+1 redundancy, which means a load balancer and a minimum of two Collector instances should be configured initially."
msgstr "少なくともN+1の冗長性を持つCollectorのクラスタをインストールします。つまり、ロードバランサと最低2つのCollectorインスタンスを初期構成する必要があります。"

#: ../../gdi/opentelemetry/sizing.rst:43
msgid "Define a round-robin DNS name."
msgstr "ラウンドロビンDNS名を定義する。"

#: ../../gdi/opentelemetry/sizing.rst:46
msgid "Component limitations"
msgstr "コンポーネントの制限"

#: ../../gdi/opentelemetry/sizing.rst:48
msgid "While the Collector itself doesn't define limits, some :ref:`OTel components <otel-components>` do."
msgstr "コレクター自体に制限はないが、:ref:`OTel components <otel-components>` 。"

#: ../../gdi/opentelemetry/sizing.rst:50
msgid "For instance, if you're using the :ref:`splunk-hec-exporter`, the following default limits (among other) apply:"
msgstr "例えば、:ref:`splunk-hec-exporter` を使用している場合、以下のデフォルト制限（その他）が適用されます："

#: ../../gdi/opentelemetry/sizing.rst:52
msgid "Single log event maximum size: 5 MiB"
msgstr "単一のログイベントの最大サイズ：5メガバイト"

#: ../../gdi/opentelemetry/sizing.rst:53
msgid "Log event batch maximum size (compressed): 2 MiB"
msgstr "ログイベントバッチの最大サイズ（圧縮）：2 MiB"

#: ../../gdi/opentelemetry/sizing.rst:55
msgid "Check the default values, recommendations and limitations for each of the individual components in your Collector's configuration. Although limits can be configured, use default values for standard working environments."
msgstr "コレクターの構成にある各コンポーネントのデフォルト値、推奨事項、および制限事項を確認してください。リミットは設定できますが、標準的な作業環境ではデフォルト値を使用してください。"

#: ../../gdi/opentelemetry/sizing.rst:58
msgid "Scaling recommendations"
msgstr "スケーリングに関する推奨事項"

#: ../../gdi/opentelemetry/sizing.rst:60
msgid "To define and scale your architecture, analyze the behavior of your workload to understand the loads and format of each signal type, as well as the load's distribution in time."
msgstr "アーキテクチャを定義し、拡張するには、ワークロードの動作を分析し、各信号タイプの負荷とフォーマット、および負荷の時間的分布を理解する。"

#: ../../gdi/opentelemetry/sizing.rst:62
msgid "For example, consider a scenario with hundreds of Prometheus endpoints to scrape, a terabyte of logs coming from fluentd instances every minute, and some application metrics and OTLP traces."
msgstr "例えば、スクレイピングするPrometheusのエンドポイントが数百あり、fluentdインスタンスから毎分1テラバイトのログが来ていて、アプリケーションのメトリクスとOTLPのトレースがあるシナリオを考えてみましょう。"

#: ../../gdi/opentelemetry/sizing.rst:64
msgid "In this scenario:"
msgstr "このシナリオでは："

#: ../../gdi/opentelemetry/sizing.rst:66
msgid "Scaling the Prometheus receivers requires coordination among the scrapers to decide which scraper goes to which endpoint, so set up an architecture that can scale each signal individually."
msgstr "Prometheusのレシーバーをスケーリングするには、どのスクレーパーがどのエンドポイントに行くかを決めるためにスクレーパー間の調整が必要なので、各シグナルを個別にスケーリングできるアーキテクチャを設定する。"

#: ../../gdi/opentelemetry/sizing.rst:67
msgid "Given that the OTLP receiver allows the ingestion of all telemetry types, application metrics and traces can be on the same instance, so you can scale them horizontally when needed."
msgstr "OTLPレシーバーはすべてのタイプのテレメトリーを取り込むことができるので、アプリケーション・メトリクスとトレースは同じインスタンスに置くことができ、必要に応じて水平にスケールすることができます。"

#: ../../gdi/opentelemetry/sizing.rst:70
msgid "When to scale"
msgstr "規模を拡大する時期"

#: ../../gdi/opentelemetry/sizing.rst:72
msgid "Here's a few tips:"
msgstr "ここにいくつかのヒントがある："

#: ../../gdi/opentelemetry/sizing.rst:74
msgid "If using the ``memory_limiter`` processor, check the ``otelcol_processor_refused_spans`` metric. If data is being refused from entering the pipeline too often, scale up your Collector cluster. You can scale down after memory consumption across the nodes is significantly lower than the limit set through the processor."
msgstr "``memory_limiter`` プロセッサーを使用している場合は、``otelcol_processor_refused_spans`` メトリックをチェックする。データがパイプラインに入るのを頻繁に拒否している場合は、Collectorクラスタをスケールアップしてください。ノード全体のメモリー消費量が、プロセッサーで設定された制限値より大幅に少なくなってから、スケールダウンできる。"

#: ../../gdi/opentelemetry/sizing.rst:75
msgid "Check metrics related to the queue sizes for exporters, such as ``otelcol_exporter_queue_capacity`` and ``otelcol_exporter_queue_size``. If there aren't enough workers or the back end is too slow, data might accumulate in the queue until there's no more space and it's rejected."
msgstr "``otelcol_exporter_queue_capacity`` や``otelcol_exporter_queue_size`` など、エクスポーターのキューサイズに関連するメトリックスをチェックする。ワーカーが足りなかったり、バックエンドが遅すぎたりすると、データがキューに溜まっていき、スペースがなくなって拒否されることもある。"

#: ../../gdi/opentelemetry/sizing.rst:77
msgid "Sometimes scaling won't bring any benefits:"
msgstr "規模を拡大してもメリットがないこともある："

#: ../../gdi/opentelemetry/sizing.rst:79
msgid "If the telemetry database can't keep up with the load. Check ``otelcol_exporter_queue_size`` and ``otelcol_exporter_queue_capacity``: If queue size is close to the queue capacity, exporting data is slower than receiving data."
msgstr "遠隔測定データベースが負荷に追いつかない場合。Check``otelcol_exporter_queue_size`` and``otelcol_exporter_queue_capacity``: キュー・サイズがキュー容量に近い場合、データのエクスポートはデータの受信よりも遅い。"

#: ../../gdi/opentelemetry/sizing.rst:80
msgid "If the network connection between the Collector and the back end is saturated. If the ``otelcol_exporter_send_failed_spans`` metric increases, data is not getting to the back end."
msgstr "コレクターとバックエンド間のネットワーク接続が飽和している場合。``otelcol_exporter_send_failed_spans`` 、データがバックエンドに届いていないことを示す。"

#: ../../gdi/opentelemetry/sizing.rst:83
msgid "Scale the Collector"
msgstr "コレクターのスケール"

#: ../../gdi/opentelemetry/sizing.rst:85
msgid "How to scale depends on whether the Collector components are stateless, stateful, or scrapers."
msgstr "どのようにスケールするかは、Collectorコンポーネントがステートレスか、ステートフルか、スクレイパーかによって異なる。"

#: ../../gdi/opentelemetry/sizing.rst:88
msgid "Stateless components"
msgstr "ステートレス・コンポーネント"

#: ../../gdi/opentelemetry/sizing.rst:90
msgid "Most components are stateless, so even if they hold some state in memory, it isn't relevant for scaling purposes."
msgstr "ほとんどのコンポーネントはステートレスであるため、たとえメモリ上に状態を保持していたとしても、スケーリングの目的には関係ない。"

#: ../../gdi/opentelemetry/sizing.rst:92
msgid "To scale stateless components, add new replicas and use a load balancer. Consider splitting your collection pipeline for greater reliability."
msgstr "ステートレスコンポーネントをスケールするには、新しいレプリカを追加し、ロードバランサーを使用する。信頼性を高めるために、収集パイプラインの分割を検討する。"

#: ../../gdi/opentelemetry/sizing.rst:95
msgid "Stateful components"
msgstr "ステートフル・コンポーネント"

#: ../../gdi/opentelemetry/sizing.rst:97
msgid "Components that might hold data in memory are considered stateful. Stateful components require careful consideration before being scaled up, as they might yield different results when scaled up."
msgstr "メモリにデータを保持する可能性のあるコンポーネントは、ステートフルとみなされる。ステートフル・コンポーネントは、スケールアップしたときに異なる結果をもたらす可能性があるため、スケールアップする前に慎重な検討が必要である。"

#: ../../gdi/opentelemetry/sizing.rst:99
msgid "As a general approach, consider adding a layer of Collectors containing the ``load-balancing`` exporter in front of your Collectors doing the tail-sampling or the span-to-metrics processing. The load-balancing exporter hashes the trace ID or the service name consistently and determine which Collector back end must receive spans for a trace."
msgstr "一般的な方法として、テールサンプリングまたはスパンからメトリクスへの処理を行うコレクターの前に、``load-balancing`` エクスポーターを含むコレクターのレイヤーを追加することを検討してください。ロードバランシング・エクスポーターは、トレースIDまたはサービス名を一貫してハッシュし、トレースのスパンを受信する必要があるCollectorバックエンドを決定します。"

#: ../../gdi/opentelemetry/sizing.rst:101
msgid "You can configure the ``load-balancing`` exporter to use the list of hosts behind a given DNS ``A`` entry. You can also specify a list of static hosts to be used by the exporter."
msgstr "指定されたDNS``A`` エントリの背後にあるホストのリストを使用するように、``load-balancing`` エクスポーターを設定することができます。エクスポータが使用する静的ホストのリストを指定することもできる。"

#: ../../gdi/opentelemetry/sizing.rst:104
msgid "Scrapers"
msgstr "スクレーパー"

#: ../../gdi/opentelemetry/sizing.rst:106
msgid "To scrape thousands of endpoints you can't simply add more instances with the same configuration, as each Collector would try to scrape the same endpoints as every other Collector in the cluster."
msgstr "何千ものエンドポイントをスクレイピングするためには、単純に同じ構成のインスタンスを追加することはできない。各コレクターは、クラスタ内の他のすべてのコレクターと同じエンドポイントをスクレイピングしようとするからだ。"

#: ../../gdi/opentelemetry/sizing.rst:108
msgid "The solution is to shard the endpoints by Collector instances so that if we add another replica of the Collector, each one will act on a different set of endpoints. You can do this by having one configuration file for each Collector so that each Collector would discover only the relevant endpoints for that Collector. Alternatively, you can scale the Prometheus receiver using the Target Allocator."
msgstr "解決策は、Collectorインスタンスによってエンドポイントをシャードすることで、Collectorの別のレプリカを追加した場合、それぞれが異なるエンドポイントのセットで動作するようにすることである。各コレクターがそのコレクターの関連エンドポイントのみを検出するように、各コレクターに1つの設定ファイルを持つことでこれを行うことができます。または、Target Allocatorを使用してPrometheusレシーバーをスケーリングすることもできます。"

#: ../../gdi/opentelemetry/sizing.rst:113
msgid "To learn more and see scaling examples, read the OpenTelemetry documentation at :new-page:`https://opentelemetry.io/docs/collector/scaling/ <https://opentelemetry.io/docs/collector/scaling/>`."
msgstr "より詳しく学び、スケーリング例を見るには、:new-page:`https://opentelemetry.io/docs/collector/scaling/<https://opentelemetry.io/docs/collector/scaling/>` にあるOpenTelemetryのドキュメントを読んでください。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:-1
msgid "Describes how to use Smart Agent monitors with the Smart Agent Receiver in the Collector."
msgstr "コレクタのSmart Agent ReceiverでSmart Agentモニタを使用する方法について説明します。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:6
msgid "Use Smart Agent monitors with the Collector"
msgstr "コレクタでスマートエージェントモニタを使用する"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:13
msgid "The Smart Agent receiver is fully supported only on x86_64/amd64 platforms."
msgstr "Smart Agentレシーバーは、x86_64/amd64プラットフォームでのみ完全にサポートされています。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:15
msgid "The ``smartagent`` receiver and its associated extension are :ref:`Collector components <otel-components>` that allow you to add :ref:`SignalFx Smart Agent monitors <monitor-data-sources>` into the :ref:`pipelines <otel-data-processing>` of your Splunk Distribution of OpenTelemetry Collector. Many monitors also require a Smart Agent release bundle, which the Splunk Distribution of OpenTelemetry Collector installs on supported x86_64/amd64 platforms."
msgstr "``smartagent`` レシーバとそれに関連する拡張機能は:ref:`Collector components <otel-components>` で、Splunk Distribution of OpenTelemetry Collector の:ref:`pipelines <otel-data-processing>` に:ref:`SignalFx Smart Agent monitors <monitor-data-sources>` を追加することができます。多くのモニターは Smart Agent リリースバンドルも必要とし、OpenTelemetry Collector の Splunk ディストリビューションはサポートされた x86_64/amd64 プラットフォームにインストールします。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:17
msgid "Learn more about the :ref:`smartagent-receiver`."
msgstr ":ref:`smartagent-receiver` 。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:20
msgid "Configure the Smart Agent receiver"
msgstr "スマートエージェントレシーバーの設定"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:22
msgid "For each Smart Agent monitor you want to add to the Collector, add a ``smartagent`` receiver and ``smartagent`` service pipeline in your :ref:`Collector configuration file <otel-configuration>`. Each ``smartagent`` receiver acts as a drop-in replacement for its corresponding Smart Agent monitor."
msgstr "コレクタに追加するスマートエージェントモニタごとに、``smartagent`` レシーバと``smartagent`` サービスパイプラインを:ref:`Collector configuration file <otel-configuration>` に追加します。``smartagent`` の各レシーバーは、対応するスマート・エージェント・モニターのドロップイン・リプレースメントとして機能します。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:24
msgid "Instead of using ``discoveryRule``, use the Collector receiver creator and observer extensions. See :ref:`receiver-creator-receiver` for more information."
msgstr "``discoveryRule`` を使用する代わりに、Collector レシーバークリエータとオブザーバ拡張機能を使用します。詳しくは:ref:`receiver-creator-receiver` 。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:26
msgid "If you're using a SignalFx Forwarder monitor, add it to both a ``traces`` and a ``metrics`` pipeline, and use a Sapm exporter and a SignalFx exporter, as each pipeline's exporter, respectively. See more on :ref:`exporters <collector-components-processors>`."
msgstr "SignalFx Forwarderモニターを使用している場合は、``traces`` と``metrics`` の両方のパイプラインに追加し、それぞれのパイプラインのエクスポーターとして、SapmエクスポーターとSignalFxエクスポーターを使用します。:ref:`exporters <collector-components-processors>` で詳細を見る。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:29
msgid "Configure metrics"
msgstr "メトリクスの設定"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:31
msgid "To replace or modify metrics, use :ref:`Collector processors <collector-components-processors>`."
msgstr "メトリクスを置き換えたり変更したりするには、:ref:`Collector processors <collector-components-processors>` を使用します。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:34
msgid "Configure events"
msgstr "イベントの設定"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:36
msgid "If you have a monitor that sends events, add it to a logs pipeline that uses a SignalFx exporter."
msgstr "イベントを送信するモニターがある場合、それをSignalFxエクスポータを使用するログパイプラインに追加する。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:38
msgid "Sample monitors: ``kubernetes-events``, ``nagios``, ``processlist``, and some telegraf monitors like ``telegraf/exec``."
msgstr "サンプルモニター``kubernetes-events`` ``nagios``,``processlist``, そして``telegraf/exec`` のようなテレグラフ・モニター。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:40
msgid "It's recommended, and in the case of the ``Processlist`` monitor required, to put into the same pipeline a Resource Detection processor, which adds host information and other useful dimensions to the events. See the :ref:`example below <migration-monitors-example>`."
msgstr "``Processlist`` モニターの場合は、同じパイプラインにリソース検出プロセッサーを入れることが推奨され、必須となっている。リソース検出プロセッサーは、イベントにホスト情報やその他の有用な情報を追加する。:ref:`example below <migration-monitors-example>` を参照。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:43
msgid "Configure metadata"
msgstr "メタデータの設定"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:45
msgid "If you have a monitor that updates dimension properties or tags, put the name of your SignalFx exporter in its ``dimensionClients`` field in the Collector's SignalFx receiver configuration block."
msgstr "ディメンジョンプロパティまたはタグを更新するモニタがある場合は、コレクタの SignalFx レシーバ構成ブロックの``dimensionClients`` フィールドに SignalFx エクスポータの名前を入力します。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:47
msgid "Sample monitors: ``ecs-metadata``, ``heroku-metadata``, ``kubernetes-cluster``, ``openshift-cluster``, ``postgresql``, or ``sql``."
msgstr "サンプルモニター``ecs-metadata`` ``heroku-metadata``,``kubernetes-cluster``,``openshift-cluster``,``postgresql``, または``sql``."

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:49
msgid "If you don't specify any exporters in this array field, the receiver attempts to use the Collector pipeline to which it's connected. If the next element of the pipeline isn't compatible with updating dimensions, and if you configured a single SignalFx exporter, the receiver uses that SignalFx exporter. If you don't require dimension updates, you can specify the empty array ``[]`` to deactivate it."
msgstr "この配列フィールドにエクスポータを指定しない場合、レシーバは接続されている Collector パイプラインを使用しようとします。パイプラインの次の要素がディメンジョンの更新に対応しておらず、1つのSignalFxエクスポータを設定した場合、レシーバはそのSignalFxエクスポータを使用します。ディメンジョンの更新が不要な場合は、空の配列``[]`` を指定して非アクティブにすることができます。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:52
msgid "Smart Agent extension"
msgstr "スマート・エージェント・エクステンション"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:54
msgid "The Smart Agent extension offers collectd and Python extensions. Extensions are available primarily for tasks that do not involve processing data. Examples of extensions include health monitoring, service discovery, and data forwarding. Extensions are optional."
msgstr "Smart Agentエクステンションは、collectdとPythonエクステンションを提供します。エクステンションは、主にデータ処理を伴わないタスクのために用意されている。拡張機能の例としては、ヘルスモニタリング、サービスディスカバリー、データ転送などがある。延長はオプション。"

#: ../../gdi/opentelemetry/smart-agent-migration-monitors.rst:56
msgid "See :new-page:`SignalFx Smart Agent Extension <https://github.com/signalfx/splunk-otel-collector/blob/main/pkg/extension/smartagentextension/README.md>` in GitHub to copy the configuration YAML file."
msgstr "設定YAMLファイルをコピーするには、GitHubの:new-page:`SignalFx Smart Agent Extension<https://github.com/signalfx/splunk-otel-collector/blob/main/pkg/extension/smartagentextension/README.md>` を参照してください。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:-1 ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:-1
msgid "Describes the process of migrating from the SignalFX Smart Agent to the Splunk Distribution of OpenTelemetry Collector."
msgstr "SignalFX Smart Agent から Splunk Distribution of OpenTelemetry Collector への移行プロセスについて説明します。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:5
msgid "Migration process from the Smart Agent to the Splunk Distribution of the OpenTelemetry Collector"
msgstr "スマートエージェントからOpenTelemetryコレクターのSplunkディストリビューションへの移行プロセス"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:11
msgid "Using this content assumes that you're running the SignalFx SmartAgent in the Kubernetes, Linux, or Windows environments and want to migrate to the Splunk Distribution of OpenTelemetry Collector to collect telemetry data. Note that you cannot use both agents simultaneously on the same host."
msgstr "このコンテンツは、Kubernetes、Linux、または Windows 環境で SignalFx SmartAgent を実行しており、テレメトリデータを収集するために OpenTelemetry Collector の Splunk ディストリビューションに移行したい場合を想定しています。同じホスト上で両方のエージェントを同時に使用することはできないことに注意してください。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:13
msgid "Do the following steps to migrate from the Smart Agent to the Collector:"
msgstr "Smart AgentからCollectorに移行するには、次の手順を実行します："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:15
msgid ":ref:`Deploy the Collector in a non-production environment <deploy-the-collector-non-prod-env>`"
msgstr ":ref:`Deploy the Collector in a non-production environment <deploy-the-collector-non-prod-env>`"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:16
msgid ":ref:`Validate the deployment of the Collector <validate-deployment-of-collector>`"
msgstr ":ref:`Validate the deployment of the Collector <validate-deployment-of-collector>`"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:17
msgid ":ref:`Locate your existing Smart Agent configuration file <locate-sa-config-file>`"
msgstr ":ref:`Locate your existing Smart Agent configuration file <locate-sa-config-file>`"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:18
msgid ":ref:`Translate the Smart Agent configuration file using translatesfx <use-translatefx>`"
msgstr ":ref:`Translate the Smart Agent configuration file using translatesfx <use-translatefx>`"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:19
msgid ":ref:`Estimate resource utilization (sizing) for the production environment <estimate-sizing>`"
msgstr ":ref:`Estimate resource utilization (sizing) for the production environment <estimate-sizing>`"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:20
msgid ":ref:`Deploy the Collector to the non-production environment using the updated configuration file <deploy-non-prod-updated-config>`"
msgstr ":ref:`Deploy the Collector to the non-production environment using the updated configuration file <deploy-non-prod-updated-config>`"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:21
msgid ":ref:`Deploy the Collector to a production host using the updated configuration file <deploy-to-prod-updated-config>`"
msgstr ":ref:`Deploy the Collector to a production host using the updated configuration file <deploy-to-prod-updated-config>`"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:26
msgid "1. Deploy the Collector in a non-production environment"
msgstr "1.コレクタを非実稼働環境にデプロイする"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:28
msgid "Deploy the Collector in a non-production environment, for example, a development host or VM or a Kubernetes cluster in staging. The environment needs to be a copy or identical to your production environment."
msgstr "Collectorを非本番環境、たとえば開発用ホストやVM、ステージングのKubernetesクラスタなどにデプロイします。この環境は、本番環境とコピーまたは同一である必要がある。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:30
msgid "Navigate to your instance of Splunk Observability Cloud and select :menuselection:`Data Management` in the navigation bar. Choose the platform you would like to deploy the Collector to."
msgstr "Splunk Observability Cloud のインスタンスに移動し、ナビゲーションバーで:menuselection:`Data Management` を選択します。Collectorをデプロイするプラットフォームを選択します。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:-1
msgid "Select Data Management in the navigation bar."
msgstr "ナビゲーションバーで「データ管理」を選択する。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:36
msgid "Follow the guided setup for your platform to deploy the Collector."
msgstr "ご使用のプラットフォームのセットアップガイドに従って Collector をデプロイします。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:39
msgid "See the tooltips within the guided setup for guidance about the initial configuration."
msgstr "初期設定に関するガイダンスについては、ガイドセットアップ内のツールチップを参照してください。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:44
msgid "2. Validate the deployment of the Collector"
msgstr "2.コレクターのデプロイを検証する"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:46
msgid "Validate the deployment of the Collector using the following approaches in the described order."
msgstr "以下の順序でコレクターのデプロイを検証します。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:49
msgid "Validate using dashboards"
msgstr "ダッシュボードを使った検証"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:51
msgid "Start with looking at the built-in dashboard for the Collector where you can visualize:"
msgstr "コレクターの内蔵ダッシュボードを見ることから始めましょう："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:53
msgid "Process metrics such as memory and CPU usage"
msgstr "メモリやCPU使用率などのプロセス・メトリクス"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:54
msgid "Dropped, failure and success metrics for telemetry processing (metrics, spans, logs)"
msgstr "テレメトリ処理（メトリクス、スパン、ログ）のためのドロップ、失敗、成功メトリクス"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:56
msgid "Select :menuselection:`Dashboards` in the navigation bar."
msgstr "ナビゲーションバーで:menuselection:`Dashboards` を選択する。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:-1
msgid "Select Dashboards in the navigation bar."
msgstr "ナビゲーションバーでダッシュボードを選択します。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:62
msgid "Search for OpenTelemetry Collector to access the built-in dashboard group."
msgstr "OpenTelemetry Collector を検索して、組み込みのダッシュボードグループにアクセスします。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:-1
msgid "Search for the OpenTelemetry Collector."
msgstr "OpenTelemetry Collector を検索する。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:68
msgid "Navigate to the Critical Monitoring section and review whether there is any data being dropped to ensure that there is no data loss and that telemetry data is not being dropped. You should see a chart for metrics, spans, and logs."
msgstr "Critical Monitoring（重要なモニタリング）セクションに移動し、データロスがないか、テレメトリーデータがドロップされていないかを確認する。メトリクス、スパン、ログのチャートが表示されるはずです。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:-1
msgid "Navigate to the Critical Monitoring section and review whether there is any data being dropped."
msgstr "Critical Monitoringセクションに移動し、データが削除されていないか確認する。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:74
msgid "If any of the charts indicate a value above zero, then data is being dropped and you need to investigate why. To diagnose further, see :ref:`validate-logs`."
msgstr "チャートのどれかがゼロ以上の値を示している場合、データが削除されているので、その原因を調査する必要がある。さらに詳しく診断するには、:ref:`validate-logs` を参照してください。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:77
msgid "Validate using zPages"
msgstr "zPagesを使用した検証"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:79
msgid "To ensure that the Collector is configured correctly, activate the zPages extension."
msgstr "コレクタが正しく設定されていることを確認するには、zPages 拡張機能を有効にします。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:81
msgid "This is exposed locally on port 55679 by default and can be used to give an overview of the following:"
msgstr "これはデフォルトでポート55679でローカルに公開され、以下の概要を示すために使用できる："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:83
msgid "Services and build, runtime information (``http://localhost:<port>/debug/servicez``)"
msgstr "サービスおよびビルド、ランタイム情報 (``http://localhost:<port>/debug/servicez``)"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:84
msgid "Running pipelines (``http://localhost:<port>/debug/pipelinez``)"
msgstr "パイプラインの実行 (``http://localhost:<port>/debug/pipelinez``)"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:85
msgid "Extensions (``http://localhost:<port>/debug/extensionz``)"
msgstr "エクステンション (``http://localhost:<port>/debug/extensionz``)"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:86
msgid "Feature gates (``http://localhost:<port>/debug/featurez``)``"
msgstr "フィーチャーゲート (``http://localhost:<port>/debug/featurez``)``"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:87
msgid "Spans and error samples (``http://localhost:<port>/debug/tracez``)"
msgstr "スパンとエラーサンプル (``http://localhost:<port>/debug/tracez``)"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:88
msgid "RPC statistics (``http://localhost:<port>/debug/servicez/rpcz``)"
msgstr "RPC統計 (``http://localhost:<port>/debug/servicez/rpcz``)"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:90
msgid "For containerized environments, you can expose this port on a public interface instead of just locally. This can be configured by adding the following lines to the configuration:"
msgstr "コンテナ環境では、このポートをローカルだけでなく、パブリック・インターフェースで公開することができる。これは、コンフィギュレーションに以下の行を追加することで設定できる："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:99
msgid "Validate using the Metric Finder"
msgstr "メトリックファインダーを使用して検証する"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:101
msgid "Use the Metric Finder to ensure that metrics are coming in from a specific integration. Select :menuselection:`Metric Finder` in the navigation bar."
msgstr "Metric Finder を使用して、メトリクスが特定の統合から入力されていることを確認します。ナビゲーションバーで:menuselection:`Metric Finder` を選択する。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:-1
msgid "Select Metric Finder in the navigation bar."
msgstr "ナビゲーションバーでMetric Finderを選択します。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:107
msgid "Find the integration as part of the list present. For example, if you deployed the Collector on the Kubernetes platform, scroll to the Containers category and select :menuselection:`Kubernetes`. Search results from all metrics being pulled in by default from the Kubernetes integration and the associated metadata that can be filtered or excluded are shown."
msgstr "現在のリストの一部として統合を見つける。たとえば、KubernetesプラットフォームにCollectorをデプロイした場合は、Containersカテゴリまでスクロールして、:menuselection:`Kubernetes` を選択します。Kubernetes統合からデフォルトで取り込まれるすべてのメトリクスからの検索結果と、フィルタリングまたは除外可能な関連メタデータが表示されます。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:-1
msgid "Find your integration."
msgstr "統合を見つける。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:113
msgid "Select a specific metric, for example, :menuselection:`container_cpu_utilization`."
msgstr "例えば、:menuselection:`container_cpu_utilization` のように、特定の指標を選択する。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:-1
msgid "Select a specific metric."
msgstr "特定のメトリックを選択します。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:119
msgid "You can now view the metric as a chart that displays the time series data across the duration you select."
msgstr "選択した期間にわたる時系列データを表示するチャートとして、メトリックを表示できるようになりました。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:-1
msgid "View the metric represented as a chart."
msgstr "メトリックをチャートで表示する。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:125
msgid "If you are unable to find any metrics (in the search results or there are no data points recently in the chart) from an integration configured to be monitored, go to the section on :ref:`validating using logs <validate-logs>`."
msgstr "検索結果でメトリックスが見つからない場合、またはチャートに最近データ・ポイントがない場合は、:ref:`validating using logs <validate-logs>` のセクションを参照してください。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:128
msgid "If metrics are found in the Metric Finder, but not seen in the chart for the time duration specified, they were reported at some point. Change the time duration specified to help look at logs at a specific timestamp."
msgstr "メトリックス・ファインダーでメトリックスが見つかっても、指定した期間チャートに表示されない場合は、ある時点で報告されています。特定のタイムスタンプでログを見るのに役立つように、指定された時間期間を変更する。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:133
msgid "Validate using logs"
msgstr "ログを使った検証"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:135
msgid "You can use logs to validate the Collector deployment. Use the following commands based on your environment:"
msgstr "ログを使用して、Collector の展開を検証できます。お使いの環境に応じて、以下のコマンドを使用してください："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:137
msgid "For Docker:"
msgstr "Dockerの場合："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:143
msgid "For Journald:"
msgstr "ジャーナルド用："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:149
msgid "For Kubernetes:"
msgstr "Kubernetesの場合："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:155
msgid "Check for the following errors:"
msgstr "以下のエラーがないかチェックする："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:157
msgid "Port conflicts: You might see a \"bind:address already in use\" error message. If you see this message, modify the configuration to use another port."
msgstr "ポートの競合：bind:address already in use \"というエラーメッセージが表示されることがあります。このメッセージが表示された場合は、別のポートを使用するように設定を変更してください。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:159
msgid "HTTP error codes indicating specific use cases:"
msgstr "特定のユースケースを示すHTTPエラーコード："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:161
msgid "401 (UNAUTHORIZED): Configured access token or realm is incorrect"
msgstr "401（認証されていません）：設定されたアクセストークンまたはレルムが不正です。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:163
msgid "404 (NOT FOUND): Likely configuration parameter is wrong like endpoint or path (for example, /v1/log); possible network/firewall/port issue"
msgstr "404（見つかりません）：エンドポイントやパス（例えば/v1/log）のようなコンフィギュレーション・パラメーターが間違っている可能性が高い。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:165
msgid "429 (TOO MANY REQUESTS): Org is not provisioned for the amount of traffic being sent; reduce traffic or request increase in capacity"
msgstr "429（リクエストが多すぎる）：Orgは送信されるトラフィック量に対してプロビジョニングされていない。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:167
msgid "503 (SERVICE UNAVAILABLE): If using the Log Observer, this is the same as 429 (because that is how HECv1 responds). Otherwise, check the status page."
msgstr "503(サービスが利用できない)：Log Observerを使う場合、これは429と同じである(HECv1がどのように応答するかだから)。そうでなければ、ステータス・ページをチェックすること。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:169
msgid "To confirm that a specific receiver is fetching metrics exposed by an application, update the configuration file, as shown in the following example."
msgstr "特定のレシーバがアプリケーションによって公開されたメトリクスをフェッチしていることを確認するには、次の例に示すように構成ファイルを更新します。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:171
msgid "Set the logging level to ``debug``:"
msgstr "ロギングレベルを``debug`` に設定する："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:180
msgid "Set ``log_data_points`` to ``true`` using the SignalFx exporter:"
msgstr "SignalFx エクスポーターを使用して、``log_data_points`` を``true`` に設定する："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:190
msgid "After updating the configuration, :ref:`restart the Collector <restart-the-collector>`. Check the logs for your environment to validate the deployment."
msgstr "コンフィギュレーションの更新後、:ref:`restart the Collector <restart-the-collector>` 。お使いの環境のログをチェックして、デプロイメントを確認します。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:192
msgid "If you are unable to determine the issue from logs, see :ref:`support`. Gather as much information as possible related to the environment, platforms, configuration, and logs."
msgstr "ログから問題を特定できない場合は、:ref:`support` を参照してください。環境、プラットフォーム、コンフィギュレーション、ログに関する情報をできるだけ多く集める。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:197
msgid "3. Locate your existing Smart Agent configuration file"
msgstr "3.既存のスマートエージェント設定ファイルを探す"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:199
msgid "The Smart Agent can be configured by editing the agent.yaml file. By default, the configuration is installed at ``/etc/signalfx/agent.yaml`` on Linux and ``\\ProgramData\\SignalFxAgent\\agent.yaml`` on Windows. If you override the location while installing the Smart Agent using the ``-config`` command line flag, the configuration file is stored at the location that you specify."
msgstr "スマートエージェントは、agent.yamlファイルを編集することで設定できます。デフォルトでは、コンフィギュレーションはLinuxでは``/etc/signalfx/agent.yaml`` 、Windowsでは``\\ProgramData\\SignalFxAgent\\agent.yaml`` 。``-config`` コマンドラインフラグを使用してスマートエージェントのインストール中に場所を上書きした場合、設定ファイルは指定した場所に保存されます。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:201
msgid "The following is an example YAML configuration file with default values where applicable:"
msgstr "以下はYAMLコンフィギュレーション・ファイルの例で、該当する場合はデフォルト値を使用する："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:245
msgid "4. Translate the Smart Agent configuration file using translatesfx"
msgstr "4.translatesfxを使用してスマートエージェントの設定ファイルを翻訳します。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:247
msgid "``translatesfx`` is a command-line tool provided by Splunk Observability Cloud that helps you translate your existing Smart Agent YAML configuration file into a configuration that can be used by the Collector. To learn how to use it, see :ref:`Configuration translation tool <otel-translation-tool>`."
msgstr "``translatesfx`` は Splunk Observability Cloud が提供するコマンドラインツールで、既存の Smart Agent YAML 設定ファイルを Collector で使用できる設定に変換するのに役立ちます。使い方は:ref:`Configuration translation tool <otel-translation-tool>` を参照。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:252
msgid "5. Estimate resource utilization (sizing) for the production environment"
msgstr "5.本番環境のリソース使用率（サイジング）の見積もり"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:254
msgid "The sizing of the Collector and the corresponding VM or host it is to be deployed to should be based on the telemetry being collected. The Collector requires 1 CPU core per:"
msgstr "Collectorと対応するVMまたはホストのサイズは、収集するテレメトリに基づいて設定する必要があります。コレクターは1CPUコアあたり1コアを必要とする："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:256
msgid "15,000 spans per second"
msgstr "毎秒15,000スパン"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:257
msgid "20,000 data points per second"
msgstr "毎秒20,000データポイント"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:258
msgid "10,000 log records per second"
msgstr "毎秒10,000ログレコード"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:260
msgid "The Smart Agent has an internal metrics monitor that emits metrics about the internal state of the agent. This is useful for debugging performance issues with the Collector and to ensure that the Collector isn't overloaded. Add the following to your Smart Agent configuration file:"
msgstr "スマート・エージェントには、エージェントの内部状態に関するメトリクスを出力する内部メトリクス・モニターがあります。これは、Collector のパフォーマンスの問題をデバッグしたり、Collector に過負荷がかかっていないことを確認したりするのに便利です。スマートエージェントの設定ファイルに以下を追加します："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:267
msgid "Note that this addition to your Smart Agent configuration file is only necessary to verify the data being sent through the Smart Agent. The Smart Agent configuration file is deleted when you :ref:`deploy the Collector to a production host using the updated configuration file <deploy-to-prod-updated-config>`."
msgstr "スマートエージェントの設定ファイルへのこの追加は、スマートエージェントを通して送信されるデータを確認するためにのみ必要であることに注意してください。:ref:`deploy the Collector to a production host using the updated configuration file <deploy-to-prod-updated-config>` を実行すると、スマートエージェント設定ファイルは削除されます。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:269
msgid "After the configuration file is updated, restart the Smart Agent."
msgstr "設定ファイルの更新後、スマートエージェントを再起動します。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:271
msgid "You can then use the ``sfxagent.datapoints_sent`` and ``sfxagent.trace_spans_sent`` metrics to estimate the number of data points and spans being sent to Splunk Observability Cloud respectively. You can plot them on a dashboard and filter based on dimensions to ascertain the total per cluster or host."
msgstr "その後、``sfxagent.datapoints_sent`` と``sfxagent.trace_spans_sent`` メトリクスを使用して、それぞれ Splunk Observability Cloud に送信されるデータポイントとスパンの数を推定できます。ダッシュボード上にプロットし、ディメンションに基づいてフィルタリングすることで、クラスタまたはホストごとの合計を確認できます。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:274
msgid "The sizing recommendation for logs also accounts for td-agent (Fluentd) that is bundled with the Collector."
msgstr "ログの推奨サイジングは、Collectorにバンドルされているtd-agent（Fluentd）も考慮しています。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:276
msgid "If a Collector handles both trace and metric data, then both must be accounted for when sizing. For example, 7.5K spans per second plus 10K data points per second would require 1 CPU core."
msgstr "コレクタがトレースデータとメトリックデータの両方を処理する場合、サイジング時に両方を考慮する必要があります。例えば、1秒間に7.5Kスパンと1秒間に10Kデータポイントを使用する場合、1CPUコアを必要とする。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:278
msgid "Use a ratio of 1 CPU to 2 GB of memory. By default, the Collector is configured to use 512 MB of memory."
msgstr "CPU1に対してメモリ2GBの割合で使用する。デフォルトでは、コレクタは 512 MB のメモリを使用するように設定されています。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:280
msgid "Configure ``ballastextension`` and the ``memory_limiter`` processor on every Collector instance, as shown in the following examples:"
msgstr "以下の例に示すように、すべての Collector インスタンスで``ballastextension`` および``memory_limiter`` プロセッサを構成します："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:297
msgid "The ballast should be configured to be 1/3 to 1/2 of the memory allocated to the Collector. The ``memory_limiter`` processor should be the first processor defined in the pipeline (immediately after the receivers)."
msgstr "バラストは、コレクタに割り当てられたメモリの 1/3 から 1/2 になるように設定する必要があります。``memory_limiter`` プロセッサーは、パイプラインで定義された最初のプロセッサーでなければならない（レシーバーの直後）。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:302
msgid "6. Deploy the Collector to the non-production environment using the updated configuration file"
msgstr "6.更新された設定ファイルを使用して、Collectorを非本番環境にデプロイします。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:304
msgid "Complete the necessary updates and translation of the configuration file, and restart the Collector on the non-production environment using the updated file."
msgstr "必要な更新と構成ファイルの変換を完了し、更新されたファイルを使用して非本番環境でCollectorを再起動します。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:309
msgid "Restart the Collector"
msgstr "コレクタを再起動する。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:311 ../../gdi/opentelemetry/smart-agent-migration-process.rst:339
msgid "On Linux:"
msgstr "On Linux:"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:317
msgid "On Windows:"
msgstr "Windowsの場合："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:324
msgid "On Kubernetes:"
msgstr "Kubernetesについて："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:330
msgid "After the Collector is restarted successfully, :ref:`validate the deployment <validate-deployment-of-collector>` to make sure data is being collected and that there are no errors with the updated configuration file."
msgstr "コレクタが正常に再起動されたら、:ref:`validate the deployment <validate-deployment-of-collector>` 、データが収集され、更新された構成ファイルでエラーがないことを確認します。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:335
msgid "7. Deploy the Collector to a production host using the updated configuration file"
msgstr "7.更新された設定ファイルを使用して、Collectorを本番ホストにデプロイします。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:337
msgid "After successfully deploying the Collector to a non-production environment and verifying that data is getting into Splunk Observability Cloud as expected, as a first step, stop and uninstall the Smart Agent from a single production host or VM to begin the migration. Follow the commands below for each respective environment:"
msgstr "コレクターを非本番環境に正常にデプロイし、データが期待通りに Splunk Observability Cloud に取り込まれていることを確認したら、最初のステップとして、1 台の本番ホストまたは VM から Smart Agent を停止してアンインストールし、移行を開始します。それぞれの環境について、以下のコマンドに従ってください："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:341 ../../gdi/smart-agent/smart-agent-resources.rst:153
msgid "For Debian-based distributions, including Ubuntu, run the following command:"
msgstr "Ubuntuを含むDebianベースのディストリビューションでは、以下のコマンドを実行する："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:347 ../../gdi/smart-agent/smart-agent-resources.rst:159
msgid "For Red Hat, CentOS, and other RPM-based installs, run the following command:"
msgstr "Red Hat、CentOS、その他のRPMベースのインストールでは、以下のコマンドを実行する："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:353
msgid "On Windows (installer):"
msgstr "Windowsの場合（インストーラー）："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:355
msgid "Uninstall the Smart Agent from :menuselection:`Programs and Features` in the Control Panel."
msgstr "コントロールパネルの「:menuselection:`プログラムと機能」` からSmart Agentをアンインストールします。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:357
msgid "On Windows (ZIP file):"
msgstr "Windowsの場合（ZIPファイル）："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:359 ../../gdi/smart-agent/smart-agent-resources.rst:182
msgid "Run the following PowerShell commands to stop and uninstall the ``signalfx-agent`` service:"
msgstr "以下のPowerShellコマンドを実行して、``signalfx-agent`` サービスを停止し、アンインストールする："

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:366
msgid "After uninstalling the Smart Agent, :ref:`deploy the Collector to a production host using the updated configuration file <deploy-to-prod-updated-config>` and then :ref:`validate the deployment of the Collector <validate-deployment-of-collector>`."
msgstr "スマートエージェントのアンインストール後、:ref:`deploy the Collector to a production host using the updated configuration file <deploy-to-prod-updated-config>` 、次に:ref:`validate the deployment of the Collector <validate-deployment-of-collector>` 。"

#: ../../gdi/opentelemetry/smart-agent-migration-process.rst:368
msgid "After verifying with one host, deploy the Collector with the same configuration to the rest of the hosts."
msgstr "1台のホストで確認した後、残りのホストに同じ設定でCollectorをデプロイします。"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:11
msgid "Migration process"
msgstr "移行プロセス"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:6
msgid "Migrate from SignalFx Smart Agent to the Splunk Distribution of OpenTelemetry Collector"
msgstr "SignalFx Smart Agent から OpenTelemetry Collector の Splunk ディストリビューションへの移行"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:23 ../../gdi/smart-agent/smart-agent-intro.rst:18
msgid "Note that this only affects the agent; Smart Agent receivers bundled in the Splunk Distribution of OpenTelemetry Collector are available and supported."
msgstr "これはエージェントのみに影響することに注意してください。OpenTelemetry Collector の Splunk ディストリビューションにバンドルされているスマートエージェントレシーバは利用可能で、サポートされています。"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:25
msgid "The Splunk Distribution of the :new-page:`OpenTelemetry Collector <https://opentelemetry.io/docs/concepts/data-collection/>` provides a unified way to receive, process, and export metrics, traces, and logs to Splunk Observability Cloud. Current SignalFx Smart Agent (deprecated) users can easily transition to the Collector without losing any functionality."
msgstr "Splunk Distribution of:new-page:`OpenTelemetry Collector<https://opentelemetry.io/docs/concepts/data-collection/>` は、メトリクス、トレース、ログを受信、処理、Splunk Observability Cloud にエクスポートする統一された方法を提供します。現在のSignalFx Smart Agent（非推奨）ユーザーは、機能を失うことなく簡単にCollectorに移行できます。"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:33
msgid "The benefits of using the Collector are:"
msgstr "コレクターを使用する利点は以下の通りである："

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:35
msgid "Open standard based on OpenTelemetry."
msgstr "OpenTelemetryに基づくオープンスタンダード。"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:36
msgid "Support for new features such as code profiling."
msgstr "コード・プロファイリングなどの新機能をサポート。"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:37
msgid "Ability to correlate data between different views within Splunk Observability Cloud with :ref:`Related Content <get-started-relatedcontent>`."
msgstr "Splunk Observability Cloud 内の異なるビュー間で、:ref:`Related Content <get-started-relatedcontent>` を使ってデータを相関させることができる。"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:38
msgid "Bundled Fluentd for log collection."
msgstr "ログ収集用にFluentdをバンドル。"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:46
msgid "To migrate from the Smart Agent to the Collector, follow :ref:`these steps <migration-process>`."
msgstr "Smart Agent から Collector に移行するには、:ref:`these steps <migration-process>` に従います。"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:54
msgid "While the Smart Agent is deprecated, Smart Agent :ref:`monitors <monitor-data-sources>` are not."
msgstr "スマートエージェントは非推奨ですが、スマートエージェント:ref:`monitors <monitor-data-sources>` 。"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:56
msgid "The Smart Agent metric monitors allow real-time insights into how your target services and applications are performing. These metric gathering utilities have an equivalent counterpart in the Collector."
msgstr "Smart Agentのメトリックモニタは、対象となるサービスやアプリケーションのパフォーマンスをリアルタイムで把握することができます。これらのメトリック収集ユーティリティはコレクターに同等のものがある。"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:58
msgid "The :ref:`smartagent-receiver` is a :ref:`component of the Collector <otel-components>` that allows the embedding of existing Smart Agent monitors in your Collector metric pipelines."
msgstr ":ref:`smartagent-receiver` は:ref:`component of the Collector <otel-components>` で、Collector のメトリックパイプラインに既存の Smart Agent モニタを組み込むことができます。"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:60
msgid "Learn :ref:`how to use Smart Agent monitors in the Collector <migration-monitors>`."
msgstr "Learn:ref:`how to use Smart Agent monitors in the Collector <migration-monitors>`."

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:68
msgid "Splunk Observability Cloud provides a :ref:`translation tool <otel-translation-tool>` to help you adapt your Smart Agent YAML configuration file to a YAML that you can use with the Collector."
msgstr "Splunk Observability Cloud では、スマートエージェントの YAML 設定ファイルをコレクターで使用できる YAML に適合させるのに役立つ:ref:`translation tool <otel-translation-tool>` を提供しています。"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:70
msgid "Splunk Observability Cloud also has a mapping service that defines equivalencies between legacy Smart Agent metric naming and semantic conventions to the OpenTelemetry names and formats for metrics and metric metadata. See :ref:`Metric mapping service <legacy-otel-mappings>` for more information."
msgstr "Splunk Observability Cloud には、レガシー Smart Agent のメトリックの命名規則とセマンティック規則と、メトリックとメトリックメタデータの OpenTelemetry の名前とフォーマットとの等価性を定義するマッピングサービスもあります。詳しくは:ref:`Metric mapping service <legacy-otel-mappings>` 。"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:78
msgid "The ``sfxagent.hostmetadata`` metric tracks the amount of Smart Agent instances installed in your environment."
msgstr "``sfxagent.hostmetadata`` メトリックは、環境にインストールされている Smart Agent インスタンスの量を追跡します。"

#: ../../gdi/opentelemetry/smart-agent-migration-to-otel-collector.rst:80
msgid "Find it using the :ref:`Metric Finder <metric-finder>`, and monitor it using :ref:`dashboards <dashboards>`."
msgstr ":ref:`Metric Finder <metric-finder>` を使って見つけ、:ref:`dashboards <dashboards>` を使って監視する。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:-1
msgid "Describes known issues when using the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを使用する際の既知の問題について説明します。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:5
msgid "Troubleshoot the Splunk OpenTelemetry Collector"
msgstr "Splunk OpenTelemetry コレクターのトラブルシューティング"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:10
msgid "See the following issues and workarounds for the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションに関する以下の問題と回避策を参照してください。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:13
msgid "Collector isn't behaving as expected"
msgstr "コレクターが期待通りに動作しない"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:15 ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:51
msgid "The Collector might experience the issues described in this section."
msgstr "コレクターはこのセクションで説明されている問題を経験するかもしれません。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:18
msgid "Collector or td-agent service isn't working"
msgstr "コレクターまたはtd-agentサービスが動作していない"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:20
msgid "If either the Collector or td-agent services are not installed and configured, check these things to fix the issue:"
msgstr "Collectorまたはtd-agentサービスのいずれかがインストールされておらず、設定されていない場合は、以下の点を確認して問題を解決してください："

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:22
msgid "Check that the OS is supported. See :ref:`otel-requirements` and :new-page:`OpenTelemetry's Operating System <https://opentelemetry.io/docs/reference/specification/resource/semantic_conventions/os/>` for more information"
msgstr "OSがサポートされていることを確認する。詳しくは:ref:`otel-requirements` と:new-page:`OpenTelemetryのオペレーティング・システム<https://opentelemetry.io/docs/reference/specification/resource/semantic_conventions/os/>` を参照。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:23
msgid "Check that systemd is installed (if using Linux), as explained in :ref:`otel-install-linux`"
msgstr "で説明しているように、systemd がインストールされていることを確認します（Linux を使用している場合）。 :ref:`otel-install-linux`"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:24
msgid "Check that your platform is not running in a containerized environment"
msgstr "プラットフォームがコンテナ化された環境で実行されていないことを確認する。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:25
msgid "Check the installation logs for more details"
msgstr "詳しくはインストールログをチェック"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:28
msgid "Collector exits or restarts"
msgstr "コレクターの終了または再起動"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:30
msgid "The collector might exit or restart for the following reasons:"
msgstr "以下の理由でコレクタが終了または再起動することがあります："

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:32
msgid "Memory pressure due to a missing or misconfigured ``memory_limiter`` processor"
msgstr "``memory_limiter`` プロセッサの欠落または設定ミスによるメモリ圧迫"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:33
msgid "Improperly sized for load"
msgstr "負荷に対して不適切なサイズ"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:34
msgid "Improperly configured. For example, a queue size configured higher than available memory"
msgstr "設定が不適切。例えば、キューのサイズが利用可能なメモリより大きく設定されている。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:35
msgid "Infrastructure resource limits. For example, Kubernetes"
msgstr "インフラリソースの制限。例えば、Kubernetes"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:37
msgid "Restart the Splunk Distribution of OpenTelemetry Collector and check the configuration."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを再起動し、設定を確認します。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:40
msgid "Collector doesn't start in Windows Docker containers"
msgstr "WindowsのDockerコンテナでコレクターが起動しない"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:42
msgid "The process might fail to start in a custom built, Windows-based Docker container, resulting in a \"The service process could not connect to the service controller\" error message."
msgstr "カスタムビルドされたWindowsベースのDockerコンテナでプロセスが開始できず、\"The service process could not connect to service controller \"というエラーメッセージが表示されることがあります。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:44
msgid "In this case, the ``NO_WINDOWS_SERVICE=1`` environment variable must be set to force the Splunk Distribution of OpenTelemetry Collector to start as if it were running in an interactive terminal, without attempting to run as a Windows service."
msgstr "この場合、``NO_WINDOWS_SERVICE=1`` 環境変数を設定して、Splunk Distribution of OpenTelemetry Collector を Windows サービスとして実行しようとせず、対話型ターミナルで実行しているかのように起動させる必要があります。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:47
msgid "Collector is experiencing data issues"
msgstr "コレクターにデータの問題が発生している"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:49
msgid "You can monitor internal Collector metrics tracking parameters such as data loss or CPU resources in Splunk Observability Cloud's default dashboards at :guilabel:`Dashboards > OpenTelemetry Collector > OpenTelemetry Collector`. To learn more about these metrics, see :new-page:`Monitoring <https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/monitoring.md>` in the OpenTelemetry GitHub repo."
msgstr "Splunk Observability Cloud のデフォルトダッシュボード:guilabel:`Dashboards > OpenTelemetry Collector > OpenTelemetry Collector` で、データ損失や CPU リソースなどのパラメータを追跡する Collector 内部メトリクスを監視できます。これらのメトリクスの詳細については、OpenTelemetry GitHub リポジトリの:new-page:`Monitoring<https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/monitoring.md>` を参照してください。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:54
msgid "Collector is dropping data"
msgstr "コレクターがデータをドロップしている"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:56
msgid "Data might drop for a variety of reasons, but most commonly for the following reasons:"
msgstr "データが落ちる理由は様々だが、最も多いのは以下の理由だ："

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:58
msgid "The collector is improperly sized, resulting in the Splunk Distribution of OpenTelemetry Collector being unable to process and export the data as fast as it is received. See :ref:`otel-sizing` for sizing guidelines."
msgstr "コレクタのサイズが不適切なため、OpenTelemetry Collector の Splunk ディストリビューションでは、受信したデータを高速に処理してエクスポートできません。サイズの目安は:ref:`otel-sizing` 。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:59
msgid "The exporter destination is unavailable or accepting the data too slowly. To mitigate drops, configure the ``batch`` processor. In addition, you might also need to configure the queued retry options on activated exporters."
msgstr "エクスポート先が利用できないか、データの受け入れが遅すぎる。ドロップを軽減するには、``batch`` プロセッサーを設定する。さらに、有効化されたエクスポーターのキュー再試行オプションを設定する必要がある場合もあります。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:62
msgid "Collector isn't receiving data"
msgstr "コレクターがデータを受信していない"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:64
msgid "The collector might not receive data for the following reasons:"
msgstr "コレクタは、以下の理由でデータを受信しないことがあります："

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:66
msgid "Network configuration issues"
msgstr "ネットワーク設定の問題"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:67
msgid "Receiver configuration issues"
msgstr "受信機設定の問題"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:68
msgid "The receiver is defined in the receivers section, but not activated in any pipelines"
msgstr "レシーバーはレシーバーセクションで定義されているが、パイプラインではアクティブ化されていない。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:69
msgid "The client configuration is incorrect"
msgstr "クライアントの設定が間違っている"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:71 ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:93
msgid "Check the logs and :new-page:`Troubleshooting zPages <https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/troubleshooting.md#zpages>` in the OpenTelemetry project GitHub repositories for more information. Note that Splunk only provides best-effort support for the upstream OpenTelemetry Collector."
msgstr "詳細については、OpenTelemetry プロジェクトの GitHub リポジトリのログと:new-page:`Troubleshooting zPages<https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/troubleshooting.md#zpages>` を確認してください。Splunk はアップストリームの OpenTelemetry Collector に対してベストエフォートサポートしか提供しないことに注意してください。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:74
msgid "Collector can't process data"
msgstr "コレクターがデータを処理できない"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:76
msgid "The collector might not process data for the following reasons:"
msgstr "コレクターは、以下の理由でデータを処理しないことがある："

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:78
msgid "The attributes processors work only for \"tags\" on spans. The span name is handled by the span processor."
msgstr "アトリビュート・プロセッサは、スパンの「タグ」に対してのみ機能する。スパン名はスパンプロセッサーが扱う。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:79
msgid "Processors for trace data (except tail sampling) only work on individual spans. Make sure your collector is configured properly."
msgstr "トレースデータ用のプロセッサー（テールサンプリングを除く）は、個々のスパンに対してのみ機能する。コレクタが適切に構成されていることを確認する。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:82
msgid "Collector can't export data"
msgstr "コレクターがデータをエクスポートできない"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:84
msgid "The collector might be unable to export data for the following reasons:"
msgstr "コレクタは以下の理由でデータをエクスポートできないことがあります："

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:86
msgid "Network configuration issues, such as firewall, DNS, or proxy support"
msgstr "ファイアウォール、DNS、プロキシ対応などのネットワーク構成に関する問題"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:87
msgid "Incorrect exporter configuration"
msgstr "エクスポーターの設定が正しくない"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:88
msgid "Incorrect credentials"
msgstr "誤った認証情報"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:89
msgid "The destination is unavailable"
msgstr "目的地が利用できません"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:91
msgid "If you need to use a proxy, see :ref:`configure-proxy-collector`."
msgstr "プロキシを使用する必要がある場合は、:ref:`configure-proxy-collector` を参照してください。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:98
msgid "Metrics and metadata not available in data forwarding (gateway) mode"
msgstr "データ転送（ゲートウェイ）モードではメトリクスとメタデータが利用できない"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:100
msgid "If you don't see metrics and metadata after manually deploying the Collector in data forwarding (gateway) mode, the agent configuration might be lacking pipelines that use the SignalFx exporter. Follow these steps to review the configuration:"
msgstr "データ転送（ゲートウェイ）モードでCollectorを手動でデプロイしてもメトリクスとメタデータが表示されない場合は、エージェント構成にSignalFxエクスポータを使用するパイプラインが欠けている可能性があります。以下の手順に従って、設定を確認してください："

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:102
msgid "Make sure that your Gateway can listen to requests on ports 6060 and 9943."
msgstr "ゲートウェイがポート6060と9943のリクエストをリッスンできることを確認する。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:104
msgid "Make sure that the agent configuration has a ``signalfx`` exporter in a pipeline. The following example shows a ``signalfx`` exporter and a pipeline that uses it for sending metrics:"
msgstr "エージェント構成にパイプライン内の``signalfx`` エクスポーターがあることを確認してください。次の例は、``signalfx`` エクスポーターと、それを使用してメトリクスを送信するパイプラインを示しています："

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:128
msgid "Report host metrics in APM"
msgstr "APMでホスト・メトリクスをレポートする"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:130
msgid "To capture and send relevant data to show correlated infrastructure metrics in the APM service, add the ``resource/add_environment`` processor to your configuration."
msgstr "APMサービスに関連するインフラストラクチャ・メトリクスを表示するために、関連データをキャプチャして送信するには、``resource/add_environment`` プロセッサを構成に追加します。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:132
msgid "This processor inserts a ``deployment.environment`` span tag to all spans. The APM charts require the environment span tag to be set correctly. Configure this span tag in the instrumentation, but if that is not an option, you can use this processor to insert the required ``deployment.environment`` span tag value."
msgstr "このプロセッサーは、すべてのスパンに``deployment.environment`` spanタグを挿入します。APMチャートはenvironment spanタグを正しく設定する必要がある。このスパン・タグを測定器で設定するが、それが難しい場合は、このプロセッサーを使用して、必要なスパン・タグ値（``deployment.environment`` ）を挿入することができる。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:149
msgid "Extract a running configuration"
msgstr "実行中の設定を取り出す"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:150
msgid "Extracting a running configuration saves or stores the contents of a configuration file to logs that you can use to troubleshoot issues. You can extract a running configuration by accessing these ports:"
msgstr "実行中のコンフィギュレーションを展開すると、コンフィギュレーションファイルの内容がログに保存または保存され、問題のトラブルシューティングに使用できます。これらのポートにアクセスすることで、実行中のコンフィギュレーションを取り出すことができる："

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:152
msgid "``http://localhost:55554/debug/configz/initial``"
msgstr "``http://localhost:55554/debug/configz/initial``"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:153
msgid "``http://localhost:55554/debug/configz/effective``"
msgstr "``http://localhost:55554/debug/configz/effective``"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:155
msgid "For Linux, the support bundle script captures this information. See :ref:`otel-install-linux` for the installer script. This capability is primarily useful if you are using remote configuration options such as Zookeeper where the startup configuration can change during operation."
msgstr "Linuxの場合、サポート・バンドル・スクリプトがこの情報を取得する。インストーラー・スクリプトは:ref:`otel-install-linux` を参照。この機能は、Zookeeperのような、運用中にスタートアップ構成が変更される可能性があるリモート構成オプションを使用している場合に主に役立つ。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:158
msgid "Check metric data from the command line"
msgstr "コマンドラインからメトリックデータをチェックする"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:160
msgid "To check whether host metrics are being collected and processed correctly, you can query the Collector for raw data using ``curl`` or similar tools from the command line."
msgstr "ホストのメトリクスが正しく収集および処理されているかどうかを確認するには、コマンド ラインから``curl`` または同様のツールを使用して、コレクターに生データを照会できます。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:162
msgid "On Linux, run ``curl http://localhost:8888/metrics`` in your terminal."
msgstr "Linuxでは、ターミナルで``curl http://localhost:8888/metrics`` 。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:163
msgid "On Windows, run ``\"Invoke-WebRequest -URI https://localhost:8888/metrics\"`` in PowerShell."
msgstr "Windowsでは、PowerShellで``\"Invoke-WebRequest -URI https://localhost:8888/metrics\"`` 。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:165
msgid "You can then pipe the output to ``grep`` (Linux) or ``Select-String`` (Windows) to filter the data. For example, ``curl http://localhost:8888/metrics | grep service_instance_id`` retrieves the service instance ID."
msgstr "その後、出力を``grep`` （Linux）または``Select-String`` （Windows）にパイプし、データをフィルタリングすることができる。例えば、``curl http://localhost:8888/metrics | grep service_instance_id`` はサービス・インスタンスIDを取得する。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:168
msgid "You're getting a \"bind: address already in use\" error message"
msgstr "bind: address already in use \"というエラーメッセージが表示されます。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:170
msgid "If you see an error message such as \"bind: address already in use\", another resource is already using the port that the current configuration requires. This resource could be another application, or a tracing tool such as Jaeger or Zipkin."
msgstr "bind: address already in use \"のようなエラーメッセージが表示された場合は、現在のコンフィギュレーションが要求しているポートを、別のリソースがすでに使用しています。このリソースは、他のアプリケーションであったり、JaegerやZipkinのようなトレースツールであったりする。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:178
msgid "If you see this error message on Kubernetes and you're using Helm charts, modify the configuration by updating the chart values for both configuration and exposed ports."
msgstr "Kubernetesでこのエラーメッセージが表示され、Helmチャートを使用している場合は、設定と公開ポートの両方のチャート値を更新して設定を変更してください。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:181
msgid "You're getting a \"pattern not matched\" error message"
msgstr "パターンが一致しません」というエラーメッセージが表示されます。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:183
msgid "If you see an error message such as \"pattern not matched\", this message is from Fluentd, and means that the ``<parser>`` was unable to match based on the log message. As a result, the log message is not collected. Check the Fluentd configuration and update as required."
msgstr "pattern not matched \"のようなエラーメッセージが表示された場合、このメッセージはFluentdからのもので、ログメッセージに基づいて``<parser>`` 、マッチできなかったことを意味します。その結果、ログメッセージは収集されない。Fluentd の設定をチェックし、必要に応じて更新します。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:186
msgid "You're receiving an HTTP error code"
msgstr "HTTPエラーコードを受信しています"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:188
msgid "If an HTTP request is not successfully completed, you might see the following HTTP error codes."
msgstr "HTTPリクエストが正常に完了しなかった場合、以下のHTTPエラーコードが表示されることがあります。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:194
msgid "Error code"
msgstr "エラーコード"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:196
msgid "``401 (UNAUTHORIZED)``"
msgstr "``401 (UNAUTHORIZED)``"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:197
msgid "Configured access token or realm is incorrect."
msgstr "設定されたアクセストークンまたはレルムが正しくありません。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:198
msgid "``404 (NOT FOUND)``"
msgstr "``404 (NOT FOUND)``"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:199
msgid "Incorrect configuration parameter, like an endpoint or path, or a network, firewall, or port issue."
msgstr "エンドポイントやパス、ネットワーク、ファイアウォール、ポートの問題など、コンフィギュレーション・パラメータに誤りがある。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:200
msgid "``429 (TOO MANY REQUESTS)``"
msgstr "``429 (TOO MANY REQUESTS)``"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:201
msgid "Organization is not provisioned for the amount of traffic being sent. Reduce traffic or request increase in capacity."
msgstr "組織は送信されるトラフィック量に対してプロビジョニングされていない。トラフィックを減らすか、キャパシティの増加を要請する。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:202
msgid "``503 (SERVICE UNAVAILABLE)``"
msgstr "``503 (SERVICE UNAVAILABLE)``"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:203
msgid "If using the Log Observer, this is the same as the ``429 (TOO MANY REQUESTS)`` error code, due to how HECv1 responds. Otherwise, check the status page."
msgstr "Log Observerを使用している場合、HECv1がどのように応答するかによって、これは``429 (TOO MANY REQUESTS)`` エラーコードと同じである。そうでなければ、ステータス・ページをチェックすること。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:206
msgid "Trace collection issues"
msgstr "トレース収集の問題"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:208
msgid "Here are some common issues related to trace collection on the Collector."
msgstr "コレクターのトレース収集に関する一般的な問題をいくつか紹介します。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:211 ../../gdi/opentelemetry/troubleshoot-logs.rst:61
msgid "Test the Collector by sending synthetic data"
msgstr "合成データを送信してコレクターをテストする"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:213
msgid "You can test the Collector to make sure it can receive spans without instrumenting an application. By default, the Collector activates the Zipkin receiver, which is capable of receiving trace data over JSON."
msgstr "コレクタをテストして、アプリケーションをインスツルメンテーションせずにスパンを受信できることを確認できます。デフォルトでは、コレクターはJSONでトレースデータを受信できるZipkinレシーバーをアクティブにします。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:215
msgid "To test the UI, you can submit a POST request or paste JSON in this directory, as shown in the following example."
msgstr "UIをテストするには、次の例に示すように、POSTリクエストを送信するか、このディレクトリにJSONを貼り付けます。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:224
msgid "Update the ``localhost`` field as appropriate to reach the Collector."
msgstr "コレクターに到達するように、``localhost`` フィールドを適宜更新してください。"

#: ../../gdi/opentelemetry/splunk-collector-troubleshooting.rst:226
msgid "No response means the request was sent successfully. You can also pass ``-v`` to the curl command to confirm."
msgstr "応答がないということは、リクエストが正常に送信されたことを意味する。curlコマンドに``-v`` を渡して確認することもできる。"

#: ../../gdi/opentelemetry/support-checklist.rst:-1
msgid "Gather support information before opening a support request in Splunk Observability Cloud. Use this checklist to gather relevant information."
msgstr "Splunk Observability Cloud でサポートリクエストを開く前に、サポート情報を収集してください。このチェックリストを使って関連情報を集めましょう。"

#: ../../gdi/opentelemetry/support-checklist.rst:6
msgid "Gather information to open a support request"
msgstr "サポートリクエストのための情報収集"

#: ../../gdi/opentelemetry/support-checklist.rst:11
msgid "If you are an existing customer and are unable to determine why something is not working, you can file a new case using the Splunk Support Portal at :new-page:`Support and Services <https://www.splunk.com/en_us/customer-success.html>`. Otherwise, contact :new-page:`Splunk Customer Support <https://www.splunk.com/en_us/about-splunk/contact-us.html#tabs/tab_parsys_tabs_CustomerSupport_4>`. See more at :ref:`support`."
msgstr "既存のお客様で、動作しない原因を特定できない場合は、Splunk サポートポータル:new-page:`サポートとサービス<https://www.splunk.com/en_us/customer-success.html>` を使用して新しいケースを申請することができます。それ以外の場合は、:new-page:`Splunk カスタマーサポート<https://www.splunk.com/en_us/about-splunk/contact-us.html#tabs/tab_parsys_tabs_CustomerSupport_4>` までご連絡ください。:ref:`support` で詳細を見る。"

#: ../../gdi/opentelemetry/support-checklist.rst:13
msgid "When opening a support request, it is important to include as much information about the issue as possible. Use this checklist to gather relevant information."
msgstr "サポートリクエストを開始する際には、問題についてできるだけ多くの情報を含めることが重要です。このチェックリストを使って関連情報を集めましょう。"

#: ../../gdi/opentelemetry/support-checklist.rst:16
msgid "Basic information"
msgstr "基本情報"

#: ../../gdi/opentelemetry/support-checklist.rst:18
msgid "What did you try to do?"
msgstr "何をしようとした？"

#: ../../gdi/opentelemetry/support-checklist.rst:19
msgid "What happened?"
msgstr "何が起こったのか？"

#: ../../gdi/opentelemetry/support-checklist.rst:20
msgid "What did you expect to happen?"
msgstr "何が起こると予想していましたか？"

#: ../../gdi/opentelemetry/support-checklist.rst:21
msgid "Have you found a workaround?"
msgstr "回避策は見つかったか？"

#: ../../gdi/opentelemetry/support-checklist.rst:22
msgid "How impactful is the issue?"
msgstr "この問題のインパクトは？"

#: ../../gdi/opentelemetry/support-checklist.rst:23
msgid "Can you reproduce the issue?"
msgstr "この問題を再現できますか？"

#: ../../gdi/opentelemetry/support-checklist.rst:26
msgid "End-to-end architecture information"
msgstr "エンド・ツー・エンドのアーキテクチャ情報"

#: ../../gdi/opentelemetry/support-checklist.rst:28
msgid "What is generating the data?"
msgstr "何がデータを生み出しているのか？"

#: ../../gdi/opentelemetry/support-checklist.rst:29
msgid "Where was the data configured to go to?"
msgstr "データはどこに行くように設定されていたのか？"

#: ../../gdi/opentelemetry/support-checklist.rst:30 ../../gdi/opentelemetry/support-checklist.rst:33
msgid "What format was the data sent in?"
msgstr "送信されたデータの形式は？"

#: ../../gdi/opentelemetry/support-checklist.rst:31
msgid "How is the next hop configured?"
msgstr "ネクストホップはどのように設定されていますか？"

#: ../../gdi/opentelemetry/support-checklist.rst:32
msgid "Where is the data configured to go from here?"
msgstr "ここから先のデータはどのような構成になっているのか？"

#: ../../gdi/opentelemetry/support-checklist.rst:34
msgid "Is there any DNS, firewall, networking, or proxy information to be aware of?"
msgstr "DNS、ファイアウォール、ネットワーキング、プロキシなど、注意すべき情報はありますか？"

#: ../../gdi/opentelemetry/support-checklist.rst:37
msgid "Configuration files"
msgstr "設定ファイル"

#: ../../gdi/opentelemetry/support-checklist.rst:39
msgid "Kubernetes: Run ``kubectl get configmap my-configmap -o yaml >my-configmap.yaml`` to retrieve the logs."
msgstr "Kubernetes：``kubectl get configmap my-configmap -o yaml >my-configmap.yaml`` を実行してログを取得する。"

#: ../../gdi/opentelemetry/support-checklist.rst:40
msgid "Linux: View the file at ``/etc/otel/collector``."
msgstr "Linux：``/etc/otel/collector`` でファイルを見る。"

#: ../../gdi/opentelemetry/support-checklist.rst:43
msgid "Logs and debug logs"
msgstr "ログとデバッグ・ログ"

#: ../../gdi/opentelemetry/support-checklist.rst:45
msgid "Docker: Run ``docker logs my-container >my-container.log`` to retrieve the logs."
msgstr "ドッカー：``docker logs my-container >my-container.log`` を実行してログを取得する。"

#: ../../gdi/opentelemetry/support-checklist.rst:46
msgid "Journald: Run ``journalctl -u my-service >my-service.log`` to retrieve the logs."
msgstr "Journald：``journalctl -u my-service >my-service.log`` を実行してログを取得する。"

#: ../../gdi/opentelemetry/support-checklist.rst:47
msgid "Kubernetes: Run the following commands to retrieve the logs."
msgstr "Kubernetes：以下のコマンドを実行してログを取得する。"

#: ../../gdi/opentelemetry/support-checklist.rst:57
msgid "Support bundle scripts"
msgstr "バンドルスクリプトのサポート"

#: ../../gdi/opentelemetry/support-checklist.rst:59
msgid "Run support bundle scripts to collect information:"
msgstr "サポート・バンドル・スクリプトを実行して情報を収集する："

#: ../../gdi/opentelemetry/support-checklist.rst:61
msgid "Kubernetes: Run ``kubectl-splunk``"
msgstr "Kubernetes: Run ``kubectl-splunk``"

#: ../../gdi/opentelemetry/support-checklist.rst:62
msgid "Linux (if installer script was used): Run ``/etc/otel/collector/splunk-support-bundle.sh``"
msgstr "Linux（インストーラスクリプトを使用した場合）：実行 ``/etc/otel/collector/splunk-support-bundle.sh``"

#: ../../gdi/opentelemetry/support-checklist.rst:63
msgid "Windows (if MSI installer version 0.34.0 or higher was used): Run ``C:\\Program Files\\Splunk\\OpenTelemetry Collector\\splunk-support-bundle.ps1``"
msgstr "Windows（MSIインストーラのバージョン0.34.0以降を使用した場合）：実行 ``C:\\Program Files\\Splunk\\OpenTelemetry Collector\\splunk-support-bundle.ps1``"

#: ../../gdi/opentelemetry/tags.rst:-1
msgid "Add tags to your Splunk Distribution of OpenTelemetry Collector configuration. You can include span tags in settings for the batch processor in your configuration YAML file."
msgstr "Splunk Distribution of OpenTelemetry Collector 設定にタグを追加します。コンフィギュレーション YAML ファイルのバッチプロセッサーの設定に span タグを含めることができます。"

#: ../../gdi/opentelemetry/tags.rst:5
msgid "Configure tags in OpenTelemetry"
msgstr "OpenTelemetryでタグを設定する"

#: ../../gdi/opentelemetry/tags.rst:10
msgid "Tags are key-value pairs of data associated with recorded measurements to provide contextual information, distinguish, and group metrics during analysis and inspection. When measurements are aggregated to become metrics, tags are used as the labels to break down the metrics."
msgstr "タグは、記録された測定値に関連付けられたデータのキーと値のペアで、分析および検査時にコンテキスト情報を提供し、測定値を区別し、グループ化します。測定値が集約されてメトリクスになるとき、タグはメトリクスを分解するラベルとして使用されます。"

#: ../../gdi/opentelemetry/tags.rst:12
msgid "In the OpenTelemetry data model, tags are provided as span attributes and can be added and modified by using an ``attributes`` processor in your traces pipelines. Some examples of actions the ``attributes`` processor can handle:"
msgstr "OpenTelemetryデータモデルでは、タグはspan属性として提供され、トレースパイプラインで``attributes`` プロセッサを使用することで追加や変更が可能です。``attributes`` ："

#: ../../gdi/opentelemetry/tags.rst:14
msgid "``insert``: Will only create the key-value pair if it doesn't already exist"
msgstr "``insert``:キーと値のペアがまだ存在しない場合にのみ作成する。"

#: ../../gdi/opentelemetry/tags.rst:15
msgid "``update``: Will update an attribute, when the key exists"
msgstr "``update``:キーが存在する場合、属性を更新する"

#: ../../gdi/opentelemetry/tags.rst:16
msgid "``upsert``: Performs an insert or update (regardless of existence)"
msgstr "``upsert``:存在に関係なく）挿入または更新を実行します。"

#: ../../gdi/opentelemetry/tags.rst:18
msgid "The settings look like this in the configuration YAML file:"
msgstr "設定はコンフィギュレーションYAMLファイルでは以下のようになっている："

#: ../../gdi/opentelemetry/tags.rst:36
msgid "If you include ``attributes`` processor(s), you have to add them to your pipelines, as shown in the following example:"
msgstr "``attributes`` 、パイプラインに追加する必要がある："

#: ../../gdi/opentelemetry/translation-tool.rst:-1
msgid "Use this tool to convert a SignalFX Smart Agent YAML configuration file into the Splunk Distribution of OpenTelemetry Collector YAML configuration file."
msgstr "SignalFX Smart Agent YAML 設定ファイルを Splunk Distribution of OpenTelemetry Collector YAML 設定ファイルに変換するには、このツールを使用します。"

#: ../../gdi/opentelemetry/translation-tool.rst:6
msgid "Configuration translation rules and tool"
msgstr "構成翻訳ルールとツール"

#: ../../gdi/opentelemetry/translation-tool.rst:11
msgid "``translatesfx`` is a command-line tool provided by Splunk Observability Cloud that helps you translate your existing Smart Agent YAML configuration file into a configuration that can be used by the Collector."
msgstr "``translatesfx`` は Splunk Observability Cloud が提供するコマンドラインツールで、既存の Smart Agent YAML 設定ファイルを Collector で使用できる設定に変換するのに役立ちます。"

#: ../../gdi/opentelemetry/translation-tool.rst:15
msgid "With ``translatesfx`` you can automate most of the configuration changes when migrating from the Smart Agent to the Splunk OpenTelemetry Collector. Evaluate and test any configuration produced by ``translatesfx`` carefully before releasing it into production environments."
msgstr "``translatesfx`` を使用すると、Smart Agent から Splunk OpenTelemetry Collector に移行する際の設定変更のほとんどを自動化できます。本番環境にリリースする前に、``translatesfx`` によって生成されたすべての構成を慎重に評価し、テストしてください。"

#: ../../gdi/opentelemetry/translation-tool.rst:18
msgid "Configuration translation rules"
msgstr "設定変換ルール"

#: ../../gdi/opentelemetry/translation-tool.rst:20
msgid "To transform a Smart Agent configuration file into a Collector config file, you need to map the original parameters using the Collector's :ref:`configuration syntax <otel-configuration>`."
msgstr "スマートエージェントの設定ファイルをコレクタの設定ファイルに変換するには、コレクタの:ref:`configuration syntax <otel-configuration>` を使用して元のパラメータをマッピングする必要があります。"

#: ../../gdi/opentelemetry/translation-tool.rst:22
msgid "See the samples below:"
msgstr "以下のサンプルをご覧ください："

#: ../../gdi/opentelemetry/translation-tool.rst:25
msgid "Original Smart Agent config"
msgstr "スマートエージェントのオリジナル設定"

#: ../../gdi/opentelemetry/translation-tool.rst:45
msgid "Collector config output"
msgstr "コレクタ設定出力"

#: ../../gdi/opentelemetry/translation-tool.rst:72
msgid "Learn more in :new-page:`the GitHub documentation <https://github.com/signalfx/splunk-otel-collector/tree/main/cmd/translatesfx>` on ``translatefx``."
msgstr "詳しくは:new-page:`のGitHubドキュメント<https://github.com/signalfx/splunk-otel-collector/tree/main/cmd/translatesfx>` ``translatefx`` をご覧ください。"

#: ../../gdi/opentelemetry/translation-tool.rst:75
msgid "Use the configuration translation tool"
msgstr "設定変換ツールを使用する"

#: ../../gdi/opentelemetry/translation-tool.rst:77
msgid "There are two approaches to using ``translatesfx``, either from the command line or from the GUI."
msgstr "``translatesfx`` を使うには、コマンドラインから使う方法とGUIから使う方法がある。"

#: ../../gdi/opentelemetry/translation-tool.rst:80
msgid "From the command line"
msgstr "コマンドラインから"

#: ../../gdi/opentelemetry/translation-tool.rst:82
msgid "To run the tool from the command line, download the executables from the :new-page:`releases page <https://github.com/signalfx/splunk-otel-collector/releases>`. The executables are also contained in the RPM, MSI, and Debian packages as well as the Docker images (version 0.36.1 and higher)."
msgstr "コマンドラインからツールを実行するには、:new-page:`リリースページ<https://github.com/signalfx/splunk-otel-collector/releases>` から実行ファイルをダウンロードしてください。実行可能ファイルは、RPM、MSI、Debianパッケージ、およびDockerイメージ（バージョン0.36.1以上）にも含まれています。"

#: ../../gdi/opentelemetry/translation-tool.rst:84
msgid "The ``translatesfx`` command requires a Smart Agent configuration file as the first argument, and accepts a directory as the optional second argument, which is the working directory used by any Smart Agent `#from` file expansion directives. The ``translatesfx`` command uses this working directory to resolve any relative paths to files referenced by any `#from` directives at runtime."
msgstr "``translatesfx`` コマンドは、最初の引数としてスマートエージェント設定ファイルを要求し、オプションの2番目の引数としてディレクトリを受け付ける。このディレクトリは、スマートエージェント`#from` ファイル展開ディレクティブで使用される作業ディレクトリである。``translatesfx`` コマンドは、この作業ディレクトリを使用して、実行時に`#from` ディレクティブによって参照されるファイルへの相対パスを解決する。"

#: ../../gdi/opentelemetry/translation-tool.rst:90
msgid "If this working directory argument is omitted, translatesfx expands relative file paths using the current working directory:"
msgstr "この作業ディレクトリ引数が省略された場合、translatesfxは現在の作業ディレクトリを使用して相対ファイルパスを展開します："

#: ../../gdi/opentelemetry/translation-tool.rst:97
msgid "When translatesfx runs, it sends the translated Collector configuration to the standard output. To write the contents to disk, redirect this output to a new Collector configuration file:"
msgstr "translatesfx が実行されると、変換された Collector の設定を標準出力に送信します。内容をディスクに書き込むには、この出力を新しい Collector 構成ファイルにリダイレクトします："

#: ../../gdi/opentelemetry/translation-tool.rst:104
msgid "From the GUI"
msgstr "GUIから"

#: ../../gdi/opentelemetry/translation-tool.rst:106
msgid "Access the Smart Agent configuration converter at :new-page:`https://bossofopsando11y.com/configurator/saconverter <https://bossofopsando11y.com/configurator/saconverter>`."
msgstr ":new-page:`https://bossofopsando11y.com/configurator/saconverter<https://bossofopsando11y.com/configurator/saconverter>` からスマートエージェント設定コンバータにアクセスしてください。"

#: ../../gdi/opentelemetry/translation-tool.rst:107
msgid "Paste your Smart Agent configuration in the :menuselection:`Smart Agent YAML` section of the GUI."
msgstr "GUIの:menuselection:`Smart Agent YAML` セクションにスマートエージェントの設定を貼り付けます。"

#: ../../gdi/opentelemetry/translation-tool.rst:109
msgid "The corresponding translated Collector configuration file is populated in the OpenTelemetry YAML section."
msgstr "OpenTelemetry YAML セクションに、対応する翻訳された Collector 設定ファイルが入力されます。"

#: ../../gdi/opentelemetry/translation-tool.rst:-1
msgid "View your translated configuration file."
msgstr "翻訳された設定ファイルを見る。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:-1
msgid "Describes the Kubernetes and container runtimes in the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションの Kubernetes とコンテナランタイムについて説明します。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:5
msgid "Troubleshoot the Collector for Kubernetes"
msgstr "Kubernetes用Collectorのトラブルシューティング"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:10
msgid "This topic describes how to troubleshoot incompatibility issues. A Kubernetes cluster using an incompatible container runtime for its version or configuration could experience the following issues cluster-wide:"
msgstr "このトピックでは、非互換性の問題のトラブルシューティング方法について説明します。バージョンまたは構成に互換性のないコンテナランタイムを使用しているKubernetesクラスタでは、クラスタ全体で以下の問題が発生する可能性があります："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:12
msgid "Stats from containers, pods, or nodes being absent or malformed. As a result, the Collector that requires these stats does not produce the desired corresponding metrics."
msgstr "コンテナ、ポッド、またはノードが存在しないか、または不正であることによる統計。その結果、これらのスタッツを必要とするコレクターは、望ましい対応するメトリクスを生成しない。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:13
msgid "Containers, pods, and nodes fail to start successfully or stop cleanly."
msgstr "コンテナ、ポッド、ノードが正常に起動しない、またはきれいに停止しない。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:14
msgid "The kubelet process on a node is in a defunct state."
msgstr "ノード上のkubeletプロセスが停止状態にある。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:16
msgid "Kubernetes requires you to install a :new-page:`container runtime <https://kubernetes.io/docs/setup/production-environment/container-runtimes/>`` on each node in the cluster so that pods can run there. The compatibility level of a specific Kubernetes version and container runtime can vary, so :ref:`use a version of Kubernetes and a container runtime that are known to be compatible <check-runtimes>`. Multiple container runtimes such as containerd, CRI-O, Docker, and Mirantis Kubernetes Engine (formerly Docker Enterprise/UCP) are all supported."
msgstr "Kubernetesでは、クラスタ内の各ノードに:new-page:`コンテナランタイム<https://kubernetes.io/docs/setup/production-environment/container-runtimes/>`` をインストールし、そこでPodを実行できるようにする必要がある。特定のKubernetesバージョンとコンテナランタイムの互換性レベルは異なる可能性があるため、:ref:`use a version of Kubernetes and a container runtime that are known to be compatible <check-runtimes>` 。containerd、CRI-O、Docker、Mirantis Kubernetes Engine（旧Docker Enterprise/UCP）など、複数のコンテナランタイムに対応しています。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:21
msgid "Check the container runtime compatibility"
msgstr "コンテナランタイムの互換性をチェックする"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:22
msgid "First, run ``kubectl get nodes -o wide`` to determine what version of Kubernetes and container runtime are being used. The ``-o wide`` flag prints the output in the plain-text format with any additional information. For pods, the node name is included. In the following example, ``node-1`` uses Kubernetes 1.19.6 and containerd 1.4.1:"
msgstr "まず、``kubectl get nodes -o wide`` 、Kubernetesとコンテナランタイムのバージョンを確認する。``-o wide`` フラグは、追加情報を含むプレーンテキスト形式の出力を表示する。ポッドの場合は、ノード名が含まれる。以下の例では、``node-1`` 、Kubernetes 1.19.6とcontainerd 1.4.1を使用している："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:30
msgid "Next, verify that you are using a container runtime compatible with your Kubernetes version. Refer to the following vendor documentation to see the container runtime compatibility:"
msgstr "次に、Kubernetesのバージョンと互換性のあるコンテナランタイムを使用していることを確認する。コンテナランタイムの互換性については、以下のベンダーのドキュメントを参照のこと："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:32
msgid ":new-page:`containerd <https://containerd.io/releases/#kubernetes-support>`"
msgstr ":new-page:`containerd <https://containerd.io/releases/#kubernetes-support>`"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:33
msgid ":new-page:`CRI-O <https://github.com/cri-o/cri-o#compatibility-matrix-cri-o--kubernetes>`"
msgstr ":new-page:`CRI-O <https://github.com/cri-o/cri-o#compatibility-matrix-cri-o--kubernetes>`"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:34
msgid ":new-page:`Mirantis <https://docs.mirantis.com/container-cloud/latest/compat-matrix.html>`"
msgstr ":new-page:`ミランティス <https://docs.mirantis.com/container-cloud/latest/compat-matrix.html>`"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:39
msgid "Check the integrity of Kubelet Summary API stats"
msgstr "Kubelet Summary APIの統計情報の整合性をチェックする"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:40
msgid "Use the Kubelet Summary API to verify container, pod, and node stats. The Kubelet provides the Summary API to discover and retrieve per-node summarized stats available through the ``/stats`` endpoint."
msgstr "コンテナ、ポッド、ノードの統計情報を確認するには、Kubelet Summary API を使用します。Kubelet は Summary API を提供し、``/stats`` エンドポイントを通じて利用可能なノードごとの要約された統計情報を検出および取得します。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:42
msgid "The following examples show how to verify that the CPU, memory, and networks stats the Collector uses to generate Kubelet Stats Receiver metrics are present. You can expand these techniques to evaluate other Kubernetes stats that are available."
msgstr "次の例では、CollectorがKubelet Stats Receiverメトリクスの生成に使用するCPU、メモリ、およびネットワークの統計情報が存在することを確認する方法を示します。これらのテクニックを拡張して、利用可能な他のKubernetesスタッツを評価することができる。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:43
msgid "All of the stats shown in these examples should be present unless otherwise noted. If your output is missing stats or your stat values appear to be in a different format, your Kubernetes cluster and container runtime might not be fully compatible."
msgstr "これらの例で示されているスタッツは、特に断りのない限りすべて存在するはずである。出力に統計値がない、または統計値が異なるフォーマットで表示される場合は、Kubernetesクラスタとコンテナランタイムが完全に互換していない可能性があります。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:48
msgid "Verify a node's stats"
msgstr "ノードの統計情報を確認する"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:49
msgid "To verify a node's stats:"
msgstr "ノードの統計情報を確認する："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:51
msgid "Run the following command to get the names of the nodes in your cluster to pull raw resource usage stats from one of the nodes:"
msgstr "以下のコマンドを実行してクラスタ内のノード名を取得し、ノードの1つから生のリソース使用統計情報を取り出します："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:57
msgid "Pick a node to evaluate, and set its name to an environment variable. In the following example, the node is named ``node-1``:"
msgstr "評価するノードを選び、その名前を環境変数に設定する。以下の例では、ノードの名前は``node-1`` ："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:63
msgid "Verify that the node has the proper stats:"
msgstr "ノードが適切な統計を持っていることを確認する："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:97
msgid "For reference, the following table shows the mapping for the node stat names to the Collector metric names:"
msgstr "参考のため、次の表にノード統計名とCollectorメトリック名の対応を示します："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:103
msgid "Node stat name"
msgstr "ノード統計名"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:104 ../../gdi/opentelemetry/troubleshoot-k8s.rst:193 ../../gdi/opentelemetry/troubleshoot-k8s.rst:274
msgid "Collector metric name"
msgstr "コレクターのメトリック名"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:105
msgid "``cpu.usageNanoCores``"
msgstr "``cpu.usageNanoCores``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:106
msgid "``k8s.node.cpu.utilization``"
msgstr "``k8s.node.cpu.utilization``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:107
msgid "``cpu.usageCoreNanoSeconds``"
msgstr "``cpu.usageCoreNanoSeconds``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:108
msgid "``k8s.node.cpu.time``"
msgstr "``k8s.node.cpu.time``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:109
msgid "``memory.availableBytes``"
msgstr "``memory.availableBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:110
msgid "``k8s.node.memory.available``"
msgstr "``k8s.node.memory.available``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:111
msgid "``memory.usageBytes``"
msgstr "``memory.usageBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:112
msgid "``k8s.node.filesystem.usage``"
msgstr "``k8s.node.filesystem.usage``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:113
msgid "``memory.workingSetBytes``"
msgstr "``memory.workingSetBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:114
msgid "``k8s.node.memory.working_set``"
msgstr "``k8s.node.memory.working_set``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:115
msgid "``memory.rssBytes``"
msgstr "``memory.rssBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:116
msgid "``k8s.node.memory.rss``"
msgstr "``k8s.node.memory.rss``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:117
msgid "``memory.pageFaults``"
msgstr "``memory.pageFaults``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:118
msgid "``k8s.node.memory.page_faults``"
msgstr "``k8s.node.memory.page_faults``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:119
msgid "``memory.majorPageFaults``"
msgstr "``memory.majorPageFaults``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:120
msgid "``k8s.node.memory.major_page_faults``"
msgstr "``k8s.node.memory.major_page_faults``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:121
msgid "``network.rxBytes``"
msgstr "``network.rxBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:122
msgid "``k8s.node.network.io{direction=\"receive\"}``"
msgstr "``k8s.node.network.io{direction=\"receive\"}``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:123
msgid "``network.rxErrors``"
msgstr "``network.rxErrors``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:124
msgid "``k8s.node.network.errors{direction=\"receive\"}``"
msgstr "``k8s.node.network.errors{direction=\"receive\"}``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:125
msgid "``network.txBytes``"
msgstr "``network.txBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:126
msgid "``k8s.node.network.io{direction=\"transmit\"}``"
msgstr "``k8s.node.network.io{direction=\"transmit\"}``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:127
msgid "``network.txErrors``"
msgstr "``network.txErrors``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:128
msgid "``k8s.node.network.error{direction=\"transmit\"}``"
msgstr "``k8s.node.network.error{direction=\"transmit\"}``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:133
msgid "Verify a pod's stats"
msgstr "ポッドの統計情報を確認する"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:136
msgid "You must complete steps 1 and 2 in :ref:`verify-node-stats` before completing this section."
msgstr "このセクションを完了する前に、:ref:`verify-node-stats` のステップ 1 と 2 を完了する必要があります。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:138
msgid "To verify a pod's stats:"
msgstr "ポッドの統計情報を確認する"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:140
msgid "Run the following command to get the names of the pods in your selected node to pull raw resource usage stats from one of the pods:"
msgstr "以下のコマンドを実行して、選択したノードのポッド名を取得し、ポッドの1つから生のリソース使用統計を取り出します："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:146
msgid "Select a pod to evaluate, and set its name to an environment variable. In the following example, the pod is named ``splunk-otel-collector-agent-6llkr``:"
msgstr "評価するポッドを選択し、その名前を環境変数に設定する。次の例では、ポッドの名前は``splunk-otel-collector-agent-6llkr`` です："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:152
msgid "Verify that the pod has the proper stats:"
msgstr "ポッドが適切なスタッツを持っていることを確認する："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:186
msgid "For reference, the following table shows the mapping for the pod stat names to the Collector metric names:"
msgstr "参考のため、次の表にPod stat名とCollectorメトリック名のマッピングを示します："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:192
msgid "Pod stat name"
msgstr "ポッドスタット名"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:194
msgid "``pod.cpu.usageNanoCores``"
msgstr "``pod.cpu.usageNanoCores``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:195
msgid "``k8s.pod.cpu.utilization``"
msgstr "``k8s.pod.cpu.utilization``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:196
msgid "``pod.cpu.usageCoreNanoSeconds``"
msgstr "``pod.cpu.usageCoreNanoSeconds``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:197
msgid "``k8s.pod.cpu.time``"
msgstr "``k8s.pod.cpu.time``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:198
msgid "``pod.memory.availableBytes``"
msgstr "``pod.memory.availableBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:199 ../../gdi/opentelemetry/troubleshoot-k8s.rst:331 ../../gdi/opentelemetry/troubleshoot-k8s.rst:347
msgid "``k8s.pod.memory.available``"
msgstr "``k8s.pod.memory.available``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:200
msgid "``pod.memory.usageBytes``"
msgstr "``pod.memory.usageBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:201
msgid "``k8s.pod.filesystem.usage``"
msgstr "``k8s.pod.filesystem.usage``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:202
msgid "``pod.memory.workingSetBytes``"
msgstr "``pod.memory.workingSetBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:203
msgid "``k8s.pod.memory.working_set``"
msgstr "``k8s.pod.memory.working_set``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:204
msgid "``pod.memory.rssBytes``"
msgstr "``pod.memory.rssBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:205
msgid "``k8s.pod.memory.rss``"
msgstr "``k8s.pod.memory.rss``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:206
msgid "``pod.memory.pageFaults``"
msgstr "``pod.memory.pageFaults``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:207
msgid "``k8s.pod.memory.page_faults``"
msgstr "``k8s.pod.memory.page_faults``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:208
msgid "``pod.memory.majorPageFaults``"
msgstr "``pod.memory.majorPageFaults``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:209
msgid "``k8s.pod.memory.major_page_faults``"
msgstr "``k8s.pod.memory.major_page_faults``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:210
msgid "``pod.network.rxBytes``"
msgstr "``pod.network.rxBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:211 ../../gdi/opentelemetry/troubleshoot-k8s.rst:307 ../../gdi/opentelemetry/troubleshoot-k8s.rst:327
msgid "``k8s.pod.network.io{direction=\"receive\"}`` or ``pod_network_receive_bytes_total``"
msgstr "``k8s.pod.network.io{direction=\"receive\"}`` または ``pod_network_receive_bytes_total``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:212
msgid "``pod.network.rxErrors``"
msgstr "``pod.network.rxErrors``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:213 ../../gdi/opentelemetry/troubleshoot-k8s.rst:308 ../../gdi/opentelemetry/troubleshoot-k8s.rst:328
msgid "``k8s.pod.network.errors{direction=\"receive\"}`` or ``pod_network_receive_errors_total``"
msgstr "``k8s.pod.network.errors{direction=\"receive\"}`` または ``pod_network_receive_errors_total``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:214
msgid "``pod.network.txBytes``"
msgstr "``pod.network.txBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:215 ../../gdi/opentelemetry/troubleshoot-k8s.rst:309 ../../gdi/opentelemetry/troubleshoot-k8s.rst:329
msgid "``k8s.pod.network.io{direction=\"transmit\"}`` or ``pod_network_transmit_bytes_total``"
msgstr "``k8s.pod.network.io{direction=\"transmit\"}`` または ``pod_network_transmit_bytes_total``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:216
msgid "``pod.network.txErrors``"
msgstr "``pod.network.txErrors``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:217 ../../gdi/opentelemetry/troubleshoot-k8s.rst:310 ../../gdi/opentelemetry/troubleshoot-k8s.rst:330
msgid "``k8s.pod.network.error{direction=\"transmit\"}`` or ``pod_network_transmit_errors_total``"
msgstr "``k8s.pod.network.error{direction=\"transmit\"}`` または ``pod_network_transmit_errors_total``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:222
msgid "Verify a container's stats"
msgstr "コンテナの統計情報を確認する"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:225
msgid "You must complete steps 1 and 2 in both :ref:`verify-node-stats` and :ref:`verify-pod-stats` before completing this section."
msgstr "このセクションを完了する前に、:ref:`verify-node-stats` と:ref:`verify-pod-stats` の両方でステップ 1 と 2 を完了する必要があります。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:227
msgid "To verify a container's stats:"
msgstr "コンテナの統計情報を確認する："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:229
msgid "Run the following command to get the names of the containers in your selected pod to pull raw resource usage stats from one of the containers:"
msgstr "以下のコマンドを実行して、選択したポッド内のコンテナの名前を取得し、コンテナの1つから生のリソース使用統計情報を取り出します："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:235
msgid "Select a container to evaluate, and set its name to an environment variable. In the following example, the container is named ``otel-collector``:"
msgstr "評価するコンテナを選択し、その名前を環境変数に設定する。以下の例では、コンテナの名前は``otel-collector`` である："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:241
msgid "Verify that the container has the proper stats:"
msgstr "コンテナが適切なスタッツを持っていることを確認する："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:267
msgid "For reference, the following table shows the mappings for the container stat names to the Collector metric names:"
msgstr "参考のため、以下の表に、コンテナ統計名とCollectorメトリック名のマッピングを示します："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:273
msgid "Container stat name"
msgstr "コンテナ統計名"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:275
msgid "``container.cpu.usageNanoCore``"
msgstr "``container.cpu.usageNanoCore``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:276
msgid "``container.cpu.utilization``"
msgstr "``container.cpu.utilization``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:277
msgid "``container.cpu.usageCoreNanoSeconds``"
msgstr "``container.cpu.usageCoreNanoSeconds``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:278
msgid "``container.cpu.time``"
msgstr "``container.cpu.time``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:279
msgid "``container.memory.availableBytes``"
msgstr "``container.memory.availableBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:280 ../../gdi/opentelemetry/troubleshoot-k8s.rst:311 ../../gdi/opentelemetry/troubleshoot-k8s.rst:332
msgid "``container.memory.available``"
msgstr "``container.memory.available``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:281
msgid "``container.memory.usageBytes``"
msgstr "``container.memory.usageBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:282 ../../gdi/opentelemetry/troubleshoot-k8s.rst:312 ../../gdi/opentelemetry/troubleshoot-k8s.rst:333
msgid "``container.memory.usage``"
msgstr "``container.memory.usage``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:283
msgid "``container.memory.workingSetBytes``"
msgstr "``container.memory.workingSetBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:284
msgid "``container.memory.working_set``"
msgstr "``container.memory.working_set``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:285 ../../gdi/opentelemetry/troubleshoot-k8s.rst:313 ../../gdi/opentelemetry/troubleshoot-k8s.rst:334
msgid "``container.memory.rssBytes``"
msgstr "``container.memory.rssBytes``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:286
msgid "``container.memory.rss``"
msgstr "``container.memory.rss``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:287
msgid "``container.memory.pageFaults``"
msgstr "``container.memory.pageFaults``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:288 ../../gdi/opentelemetry/troubleshoot-k8s.rst:314 ../../gdi/opentelemetry/troubleshoot-k8s.rst:335
msgid "``container.memory.page_faults``"
msgstr "``container.memory.page_faults``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:289
msgid "``container.memory.majorPageFaults``"
msgstr "``container.memory.majorPageFaults``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:290 ../../gdi/opentelemetry/troubleshoot-k8s.rst:315 ../../gdi/opentelemetry/troubleshoot-k8s.rst:336
msgid "``container.memory.major_page_faults``"
msgstr "``container.memory.major_page_faults``"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:294
msgid "Reported incompatible Kubernetes and container runtime issues"
msgstr "互換性のないKubernetesとコンテナランタイムの問題を報告"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:296
msgid "Note"
msgstr "注"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:298
msgid "Managed Kubernetes services might use a modified container runtime, and the service provider might have applied custom patches or bug fixes that are not present within an unmodified container runtime."
msgstr "マネージドKubernetesサービスは、変更されたコンテナランタイムを使用している可能性があり、サービスプロバイダは、変更されていないコンテナランタイムには存在しないカスタムパッチやバグ修正を適用している可能性がある。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:300
msgid "This section describes known incompatibilities and container runtime issues."
msgstr "このセクションでは、既知の非互換性とコンテナランタイムの問題について説明する。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:303
msgid "containerd with Kubernetes 1.21.0 to 1.21.11"
msgstr "Kubernetes 1.21.0から1.21.11までのcontainerd"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:305
msgid "When using Kubernetes 1.21.0 to 1.21.11 with containerd, memory and network stats or metrics can be missing. The following is a list of affected metrics:"
msgstr "Kubernetes 1.21.0から1.21.11をcontainerdで使用すると、メモリとネットワークの統計またはメトリクスが欠落することがあります。以下は、影響を受けるメトリクスのリストです："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:317 ../../gdi/opentelemetry/troubleshoot-k8s.rst:338
msgid "Try one of the following workarounds to resolve the issue:"
msgstr "この問題を解決するには、次のいずれかの回避策をお試しください："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:319
msgid "Upgrade Kubernetes to at least version 1.21.12."
msgstr "Kubernetesを少なくともバージョン1.21.12にアップグレードする。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:320
msgid "Upgrade containerd to version 1.4.x or 1.5.x."
msgstr "containerdをバージョン1.4.xまたは1.5.xにアップグレードする。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:323
msgid "containerd 1.4.0 to 1.4.12 with Kubernetes 1.22.0 to 1.22.8"
msgstr "containerd 1.4.0から1.4.12とKubernetes 1.22.0から1.22.8の組み合わせ"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:325
msgid "When using Kubernetes 1.22.0 to 1.22.8 with containerd 1.4.0 to 1.4.12, memory and network stats or metrics can be missing. The following is a list of affected metrics:"
msgstr "Kubernetes 1.22.0～1.22.8をcontainerd 1.4.0～1.4.12と共に使用すると、メモリとネットワークの統計またはメトリクスが欠落することがあります。以下は、影響を受けるメトリクスのリストです："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:340
msgid "Upgrade Kubernetes to at least version 1.22.9 to fix the the missing container memory and pod network metrics."
msgstr "Kubernetesを少なくともバージョン1.22.9にアップグレードして、コンテナのメモリとポッドのネットワークメトリクスの欠落を修正します。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:341
msgid "Upgrade containerd to at least version 1.4.13 or 1.5.0 to fix the missing pod memory metrics."
msgstr "containerdを少なくともバージョン1.4.13または1.5.0にアップグレードして、欠落していたポッドメモリのメトリクスを修正します。"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:344
msgid "containerd with Kubernetes 1.23.0 to 1.23.6"
msgstr "Kubernetes 1.23.0から1.23.6までのcontainerd"

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:345
msgid "When using Kubernetes versions 1.23.0 to 1.23.6 with containerd, memory stats or metrics can be missing. The following is a list of affected metrics:"
msgstr "Kubernetesのバージョン1.23.0から1.23.6をcontainerdで使用すると、メモリの統計やメトリクスが欠落することがあります。以下は、影響を受けるメトリクスのリストです："

#: ../../gdi/opentelemetry/troubleshoot-k8s.rst:349
msgid "At this time, there is no workaround for this issue."
msgstr "現時点では、この問題の回避策はありません。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:-1
msgid "Describes known issues when collecting logs with the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションでログを収集する際の既知の問題について説明します。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:5
msgid "Troubleshoot Collector logs"
msgstr "コレクターログのトラブルシューティング"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:10
msgid "See the OpenTelemetry project documentation :new-page:`to activate the Collector's debug logging <https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/troubleshooting.md#logs>`."
msgstr "コレクタのデバッグログ<https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/troubleshooting.md#logs>` を有効にするには、OpenTelemetry プロジェクトのドキュメント:new-page:`を参照してください。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:12
msgid "Here are some common issues related to log collection on the Collector."
msgstr "コレクターのログ収集に関する一般的な問題をいくつか紹介します。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:15
msgid "Source isn't generating logs"
msgstr "ソースがログを生成しない"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:17
msgid "If using Linux, run the following commands to check if the source is generating logs:"
msgstr "Linuxを使用している場合は、以下のコマンドを実行して、ソースがログを生成しているかどうかを確認する："

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:25
msgid "If using Windows, run the following command to check if the source is generating logs:"
msgstr "Windowsを使用している場合は、以下のコマンドを実行して、ソースがログを生成しているかどうかを確認する："

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:34
msgid "Fluentd isn't configured correctly"
msgstr "Fluentdが正しく設定されていない"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:36
msgid "Do the following to check the Fluentd configuration:"
msgstr "以下のようにして、Fluentd の設定をチェックします："

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:38
msgid "Check that td-agent is running. On Linux, run ``systemctl status td-agent``. On Windows, run ``Get-Service td-agent``."
msgstr "td-agentが起動していることを確認する。Linux では、``systemctl status td-agent`` を実行する。Windows では、``Get-Service td-agent`` を実行します。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:39
msgid "If you changed the configuration, restart Fluentd. On Linux, run ``systemctl restart td-agent``. On Windows, run ``Restart-Service -Name td-agent``."
msgstr "設定を変更した場合は、Fluentd を再起動してください。Linux では、``systemctl restart td-agent`` を実行する。Windows では、``Restart-Service -Name td-agent`` を実行します。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:40
msgid "Check fluentd.conf and conf.d/\\*. ``@label @SPLUNK`` must be added to every source to activate log collection."
msgstr "fluentd.confとconf.d/*をチェックしてください。ログ収集を有効にするには、``@label @SPLUNK`` をすべてのソースに追加する必要があります。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:41
msgid "Manual configuration might be required to collect logs off the source. Add configuration files to in the conf.d directory as needed."
msgstr "ソースからログを収集するには、手動設定が必要な場合がある。必要に応じて、conf.dディレクトリに設定ファイルを追加する。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:42
msgid "Activate debug logging in fluentd.conf (``log_level debug``), restart td-agent, and check that the source is generating logs."
msgstr "fluentd.conf（``log_level debug`` ）でデバッグ・ロギングを有効にして、td-agentを再起動し、ソースがログを生成していることを確認する。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:44
msgid "While every attempt is made to properly configure permissions, it is possible that td-agent does not have the permission required to collect logs. Debug logging should indicate this issue."
msgstr "適切なパーミッションを設定するように努めていますが、td-agentがログを収集するのに必要なパーミッションを持っていない可能性があります。デバッグログはこの問題を示すはずだ。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:46
msgid "It is possible that the ``<parser>`` section configuration does not match the log events."
msgstr "``<parser>`` セクションの設定がログイベントと一致していない可能性があります。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:48
msgid "If you see a message such as \"2021-03-17 02:14:44 +0000 [debug]: #0 connect new socket\", Fluentd is working as expected. You need to activate debug logging to see this message."
msgstr "2021-03-17 02:14:44 +0000[debug]のようなメッセージが表示されたら、Fluentdは期待通りに動作しています：#0 connect new socket\" と表示されれば、Fluentd は期待通りに動いている。このメッセージを見るには、デバッグ・ロギングを有効にする必要がある。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:51
msgid "Collector isn't configured properly"
msgstr "コレクターが正しく設定されていない"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:53
msgid "Do the following to check the Collector configuration:"
msgstr "コレクタの設定を確認するには、以下の手順を実行します："

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:55
msgid "Go to ``http://localhost:55679/debug/tracez`` to check zPages for samples. You might need to configure the endpoint."
msgstr "``http://localhost:55679/debug/tracez`` 、zPagesのサンプルをチェックする。エンドポイントを設定する必要があるかもしれない。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:56
msgid "Activate logging exporter. See :ref:`logging-exporter` for more information."
msgstr "ロギングエクスポーターをアクティブにする。詳しくは:ref:`logging-exporter` 。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:57
msgid "Run ``journalctl -u splunk-otel-collector.service -f`` to collect the logs for you to review."
msgstr "``journalctl -u splunk-otel-collector.service -f`` を実行し、ログを収集します。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:58
msgid "Review :ref:`otel-splunk-collector-tshoot` if you can't find what you need in the logs."
msgstr "過去ログで必要なものが見つからない場合は、:ref:`otel-splunk-collector-tshoot` 。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:62
msgid "You can manually generate logs. By default, Fluentd monitors journald and /var/log/syslog.log for events."
msgstr "手動でログを生成することもできる。デフォルトでは、Fluentd は journald と /var/log/syslog.log のイベントを監視します。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:71
msgid "Properly structured syslog is required for Fluentd to properly pick up the log line."
msgstr "Fluentdが適切にログ行を拾うためには、適切に構造化されたsyslogが必要です。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:76
msgid "Unwanted profiling logs appearing in Splunk Observability Cloud"
msgstr "Splunk Observability Cloud に表示される不要なプロファイリングログ"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:78
msgid "By default, the Splunk Distribution of the OpenTelemetry Collector sends AlwaysOn Profiling data using the Splunk HEC exporter. See :ref:`no_profiling_data` for more information."
msgstr "デフォルトでは、OpenTelemetry Collector の Splunk ディストリビューションは、Splunk HEC エクスポーターを使用して AlwaysOn Profiling データを送信します。詳しくは:ref:`no_profiling_data` 。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:83
msgid "Exclude log data in the Collector"
msgstr "コレクターのログデータを除外する"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:85
msgid "Depending on its configuration, the Splunk Distribution of the OpenTelemetry Collector might collect and send logs to Splunk Observability Cloud through a ``logs`` pipeline that uses the Splunk HEC exporter."
msgstr "設定によっては、OpenTelemetry Collector の Splunk ディストリビューションは、Splunk HEC エクスポーターを使用する``logs`` パイプラインを通じてログを収集し、Splunk Observability Cloud に送信することがあります。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:87
msgid "To turn off logs colletion, see :ref:`exclude-log-data` for more information."
msgstr "ログ収集をオフにするには、:ref:`exclude-log-data` を参照してください。"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:91
msgid "Send logs from the Collector to Splunk Cloud Platform or Enterprise"
msgstr "コレクターから Splunk Cloud Platform または Enterprise にログを送信する"

#: ../../gdi/opentelemetry/troubleshoot-logs.rst:93
msgid "To send logs from the Collector to Splunk Cloud Platform or Splunk Enterprise, see :ref:`send_logs_to_splunk`."
msgstr "コレクターから Splunk Cloud Platform または Splunk Enterprise にログを送信するには、:ref:`send_logs_to_splunk` を参照してください。"

#: ../../gdi/opentelemetry/troubleshooting.rst:10
msgid "Kubernetes troubleshooting"
msgstr "Kubernetesのトラブルシューティング"

#: ../../gdi/opentelemetry/troubleshooting.rst:10
msgid "Logs troubleshooting"
msgstr "ログのトラブルシューティング"

#: ../../gdi/opentelemetry/troubleshooting.rst:10
msgid "Support checklist"
msgstr "サポート・チェックリスト"

#: ../../gdi/opentelemetry/troubleshooting.rst:-1
msgid "Describes known issues when collecting telemetry data using the OpenTelemetry Collector and the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector および Splunk Distribution of OpenTelemetry Collector を使用して遠隔測定データを収集する際の既知の問題について説明します。"

#: ../../gdi/opentelemetry/troubleshooting.rst:5
msgid "Troubleshoot the Collector"
msgstr "コレクターのトラブルシューティング"

#: ../../gdi/opentelemetry/troubleshooting.rst:20
msgid "Here are some common issues that you might encounter when using OpenTelemetry Collector and the Splunk Distribution of OpenTelemetry Collector, and tips on how to address them."
msgstr "ここでは、OpenTelemetry Collector と OpenTelemetry Collector の Splunk ディストリビューションを使用する際に遭遇する可能性のある一般的な問題と、その対処法のヒントを紹介します。"

#: ../../gdi/opentelemetry/troubleshooting.rst:22
msgid ":ref:`otel-splunk-collector-tshoot`"
msgstr ":ref:`otel-splunk-collector-tshoot`"

#: ../../gdi/opentelemetry/troubleshooting.rst:23
msgid ":ref:`tshoot-k8s-container-runtimes`"
msgstr ":ref:`tshoot-k8s-container-runtimes`"

#: ../../gdi/opentelemetry/troubleshooting.rst:24
msgid ":ref:`tshoot-logs`"
msgstr ":ref:`tshoot-logs`"

#: ../../gdi/opentelemetry/troubleshooting.rst:25
msgid ":ref:`otel-support-checklist`"
msgstr ":ref:`otel-support-checklist`"

#: ../../gdi/opentelemetry/troubleshooting.rst:26
msgid ":ref:`support`"
msgstr ":ref:`support`"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:-1
msgid "Describes how to uninstall the Splunk Distribution of OpenTelemetry Collector."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションをアンインストールする方法を説明します。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:5
msgid "Uninstall the Collector"
msgstr "コレクターのアンインストール"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:10
msgid "Use the platform-specific information provided in this topic if you need to uninstall the Collector."
msgstr "コレクタをアンインストールする必要がある場合は、このトピックに記載されているプラットフォーム固有の情報を使用してください。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:13
msgid "Uninstall on Kubernetes"
msgstr "Kubernetesでのアンインストール"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:15
msgid "Run the ``helm uninstall`` command to uninstall the Collector. For example, to uninstall ``my-splunk-otel-collector``, run this command:"
msgstr "``helm uninstall`` コマンドを実行してコレクタをアンインストールします。例えば、``my-splunk-otel-collector`` をアンインストールするには、次のコマンドを実行する："

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:21
msgid "Running this command does the following things:"
msgstr "このコマンドを実行すると、以下のことが行われる："

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:23
msgid "Removes all Kubernetes components associated with the chart"
msgstr "チャートに関連するすべてのKubernetesコンポーネントを削除します。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:24
msgid "Deletes the release"
msgstr "リリースの削除"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:25
msgid "Removes the release history"
msgstr "リリース履歴を削除"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:31
msgid "Uninstall on Linux"
msgstr "Linuxでのアンインストール"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:33
msgid "This section covers commands you can use to uninstall the Collector and Fluentd packages if you used the :ref:`installer script<linux-scripts>` or :ref:`Debian or RPM package <linux-packages>` to perform the installation."
msgstr "このセクションでは、:ref:`installer script<linux-scripts>` または:ref:`Debian or RPM package <linux-packages>` を使用してインストールを実行した場合に、Collector と Fluentd パッケージをアンインストールするために使用できるコマンドについて説明します。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:35
msgid "If you installed the Collector and Fluentd using other methods; such as Ansible, Puppet, and Heroku as described in :ref:`otel-install-linux`; follow uninstall instructions specific to the tool you used."
msgstr ":ref:`otel-install-linux` で説明されているように、Ansible、Puppet、Heroku などの他の方法で Collector と Fluentd をインストールした場合は、使用したツール固有のアンインストール手順に従ってください。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:41
msgid "Understand which files are deleted by the uninstall"
msgstr "アンインストールによって削除されるファイルを理解する"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:43
msgid "The uninstall commands covered here don't delete all of the files installed and created by the installer. Likewise, the uninstall commands don't delete all of the files generated by the Collector and Fluent services as they ran after installation. Typically, it's safe to just keep the files that aren't deleted by the uninstall."
msgstr "ここで取り上げたアンインストールコマンドは、インストーラによってインストールされ、作成されたすべてのファイルを削除するわけではありません。同様に、アンインストールコマンドは、インストール後に実行された Collector と Fluent サービスによって生成されたすべてのファイルを削除しません。通常、アンインストールによって削除されないファイルだけを残しておくのが安全だ。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:45
msgid "While not an exhaustive list, here are key notes about some of the files that are or are not deleted when you use the installer script or a package manager command to perform the uninstall:"
msgstr "完全なリストではありませんが、インストーラスクリプトやパッケージマネージ ャコマンドでアンインストールを実行する際に、削除されるファイルや削除されないフ ァイルの主な注意点を以下に示します："

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:47
msgid "The ``/tmp/splunk-otel-collector.sh`` installer script isn't deleted. You can delete the script if you don't need to run it again."
msgstr "``/tmp/splunk-otel-collector.sh`` インストーラーのスクリプトは削除されない。このスクリプトを再度実行する必要がなければ、削除しても構わない。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:49
msgid "The ``/etc/otel/collector/splunk-otel-collector.conf`` file isn't deleted. If you modified ``/etc/otel/collector/splunk-otel-collector.conf`` and want to keep the information in the file, be sure to back it up before re-running the installer script. The installer script recreates ``/etc/otel/collector/splunk-otel-collector.conf`` each time you run it, overwriting any existing ``/etc/otel/collector/splunk-otel-collector.conf``."
msgstr "``/etc/otel/collector/splunk-otel-collector.conf`` ファイルは削除されない。``/etc/otel/collector/splunk-otel-collector.conf`` を変更し、ファイル内の情報を保持したい場合は、インストーラスクリプトを再実行する前に、必ずバックアップしてください。インストーラスクリプトは、実行するたびに``/etc/otel/collector/splunk-otel-collector.conf`` を再作成し、既存の``/etc/otel/collector/splunk-otel-collector.conf`` を上書きします。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:51
msgid "On Debian-based systems, the following files are deleted. If you want to keep these files, be sure to back up the individual files or the entire ``/etc/otel/collector`` directory before you perform the uninstall. Files not in this list aren't deleted."
msgstr "Debianベースのシステムでは、以下のファイルが削除される。これらのファイルを残しておきたい場合は、アンインストールを実行する前に、必ず個々のファイルまたは``/etc/otel/collector`` ディレクトリ全体をバックアップしてください。このリストにないファイルは削除されない。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:54 ../../gdi/opentelemetry/uninstall-the-collector.rst:80
msgid "``/etc/otel/collector/fluentd/README``"
msgstr "``/etc/otel/collector/fluentd/README``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:55 ../../gdi/opentelemetry/uninstall-the-collector.rst:81
msgid "``/etc/otel/collector/fluentd/conf.d/apache.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/apache.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:56 ../../gdi/opentelemetry/uninstall-the-collector.rst:82
msgid "``/etc/otel/collector/fluentd/conf.d/cassandra.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/cassandra.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:57 ../../gdi/opentelemetry/uninstall-the-collector.rst:83
msgid "``/etc/otel/collector/fluentd/conf.d/docker.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/docker.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:58 ../../gdi/opentelemetry/uninstall-the-collector.rst:84
msgid "``/etc/otel/collector/fluentd/conf.d/etcd.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/etcd.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:59 ../../gdi/opentelemetry/uninstall-the-collector.rst:85
msgid "``/etc/otel/collector/fluentd/conf.d/jetty.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/jetty.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:60 ../../gdi/opentelemetry/uninstall-the-collector.rst:86
msgid "``/etc/otel/collector/fluentd/conf.d/journald.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/journald.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:61 ../../gdi/opentelemetry/uninstall-the-collector.rst:87
msgid "``/etc/otel/collector/fluentd/conf.d/memcached.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/memcached.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:62 ../../gdi/opentelemetry/uninstall-the-collector.rst:88
msgid "``/etc/otel/collector/fluentd/conf.d/mongodb.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/mongodb.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:63 ../../gdi/opentelemetry/uninstall-the-collector.rst:89
msgid "``/etc/otel/collector/fluentd/conf.d/mysql.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/mysql.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:64 ../../gdi/opentelemetry/uninstall-the-collector.rst:90
msgid "``/etc/otel/collector/fluentd/conf.d/nginx.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/nginx.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:65 ../../gdi/opentelemetry/uninstall-the-collector.rst:91
msgid "``/etc/otel/collector/fluentd/conf.d/postgresql.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/postgresql.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:66 ../../gdi/opentelemetry/uninstall-the-collector.rst:92
msgid "``/etc/otel/collector/fluentd/conf.d/rabbitmq.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/rabbitmq.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:67 ../../gdi/opentelemetry/uninstall-the-collector.rst:93
msgid "``/etc/otel/collector/fluentd/conf.d/redis.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/redis.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:68 ../../gdi/opentelemetry/uninstall-the-collector.rst:94
msgid "``/etc/otel/collector/fluentd/conf.d/syslog.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/syslog.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:69 ../../gdi/opentelemetry/uninstall-the-collector.rst:95
msgid "``/etc/otel/collector/fluentd/conf.d/tomcat.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/tomcat.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:70 ../../gdi/opentelemetry/uninstall-the-collector.rst:96
msgid "``/etc/otel/collector/fluentd/conf.d/zookeeper.conf``"
msgstr "``/etc/otel/collector/fluentd/conf.d/zookeeper.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:72 ../../gdi/opentelemetry/uninstall-the-collector.rst:98
msgid "``/etc/otel/collector/fluentd/splunk-otel-collector.conf``"
msgstr "``/etc/otel/collector/fluentd/splunk-otel-collector.conf``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:73 ../../gdi/opentelemetry/uninstall-the-collector.rst:99
msgid "``/etc/otel/collector/gateway_config.yaml``"
msgstr "``/etc/otel/collector/gateway_config.yaml``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:74 ../../gdi/opentelemetry/uninstall-the-collector.rst:100
msgid "``/etc/otel/collector/splunk-otel-collector.conf.example``"
msgstr "``/etc/otel/collector/splunk-otel-collector.conf.example``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:75 ../../gdi/opentelemetry/uninstall-the-collector.rst:101
msgid "``/etc/otel/collector/splunk-support-bundle.sh``"
msgstr "``/etc/otel/collector/splunk-support-bundle.sh``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:77
msgid "On RPM-based systems, if you modified any of the following files, the modified files aren't deleted and are renamed with the .rpmsave extension. For example, the uninstall process renames a modified agent_config.yaml to agent_config.yaml.rpmsave. You can delete these .rpmsave files if you don't need them. Unmodified files in this list are deleted. Files not in this list aren't deleted."
msgstr "RPMベースのシステムで、以下のファイルを変更した場合、変更されたファイルは削除されず、拡張子が.rpmsaveに変更されます。たとえば、アンインストール処理は、変更されたagent_config.yamlをagent_config.yaml.rpmsaveにリネームします。必要なければ、これらの.rpmsaveファイルを削除することができます。このリストにある変更されていないファイルは削除される。このリストにないファイルは削除されない。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:103
msgid "For information about some of the other files that can't be removed by the uninstall commands, see messages in your command-line interface after you run an uninstall command."
msgstr "アンインストールコマンドで削除できないその他のファイルについては、アンインストールコマンドの実行後にコマンドラインインタフェースに表示されるメッセージを参照してください。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:109
msgid "Uninstall the Collector and Fluentd on Linux"
msgstr "Linux で Collector と Fluentd をアンインストールする"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:111
msgid "Before you perform the uninstall, be sure to understand its impact. See :ref:`otel-linux-uninstall-details`."
msgstr "アンインストールを実行する前に、その影響を必ず理解してください。:ref:`otel-linux-uninstall-details` を参照。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:113
msgid "If you installed the Collector and Fluentd using the :ref:`installer script<linux-scripts>` or :ref:`Debian or RPM package <linux-packages>`, you can uninstall both of these packages by running the following command:"
msgstr ":ref:`installer script<linux-scripts>` または:ref:`Debian or RPM package <linux-packages>` を使って Collector と Fluentd をインストールした場合は、以下のコマンドを実行することで、これらのパッケージを両方ともアンインストールできます："

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:120
msgid "Note that this snippet includes a command that downloads the latest ``splunk-otel-collector.sh`` installer script before performing the uninstall. We include this command because:"
msgstr "このスニペットには、アンインストールを実行する前に、最新の``splunk-otel-collector.sh`` インストーラ・スクリプトをダウンロードするコマンドが含まれていることに注意してください。このコマンドを入れたのは"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:122
msgid "If you used the Debian or RPM package to do the install, you might not have the installer script and need to download it to use this uninstall command."
msgstr "DebianまたはRPMパッケージを使用してインストールした場合、インストーラースクリプトを持っていない可能性があり、このアンインストールコマンドを使用するためにダウンロードする必要があります。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:124
msgid "If you used the installer script to perform the install, you might not have the latest installer script downloaded."
msgstr "インストーラ・スクリプトを使用してインストールを実行した場合、最新のインストーラ・スクリプトがダウンロードされていない可能性があります。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:126 ../../gdi/opentelemetry/uninstall-the-collector.rst:200
msgid "To verify the uninstall, see :ref:`otel-linux-verify-uninstall`."
msgstr "アンインストールを確認するには、:ref:`otel-linux-verify-uninstall` を参照してください。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:128
msgid "If you don't want to uninstall :strong:`both` packages and just want to uninstall the Collector package :strong:`or` Fluentd package, see :ref:`otel-linux-uninstall-only-otel-or-tdagent`."
msgstr ":strong:`` の両パッケージをアンインストールせず、Collector パッケージ:strong:`または` Fluentd パッケージだけをアンインストールしたい場合は、:ref:`otel-linux-uninstall-only-otel-or-tdagent` を参照してください。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:134
msgid "Uninstall only the Collector or Fluentd on Linux"
msgstr "Linux で Collector または Fluentd だけをアンインストールする。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:136
msgid "The uninstall command described in :ref:`otel-linux-uninstall-otel-and-tdagent` uninstalls :strong:`both` the Collector and Fluentd packages."
msgstr ":ref:`otel-linux-uninstall-otel-and-tdagent`` で説明されているアンインストールコマンドは、 Collector と Fluentd パッケージの両方をアンインストールします。:strong:`"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:138
msgid "If you want to uninstall only the Collector package :strong:`or` the Fluentd package, use the following command for your platform."
msgstr "Collector パッケージ:strong:`または` Fluentd パッケージのみをアンインストールしたい場合は、プラットフォームに合わせて以下のコマンドを使用します。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:142
msgid "For Debian"
msgstr "Debianの場合"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:144 ../../gdi/opentelemetry/uninstall-the-collector.rst:162
msgid "Before performing an uninstall, see :ref:`otel-linux-uninstall-details`."
msgstr "アンインストールを実行する前に、:ref:`otel-linux-uninstall-details` を参照してください。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:146
msgid "To uninstall the Collector package only, run the following command:"
msgstr "Collector パッケージのみをアンインストールするには、以下のコマンドを実行します："

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:152
msgid "To uninstall the Fluentd package only, run the following command:"
msgstr "Fluentdパッケージのみをアンインストールするには、以下のコマンドを実行します："

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:160
msgid "For RPM"
msgstr "回転数"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:164
msgid "To uninstall the Collector package only, run the command for the package manager on your system:"
msgstr "Collector パッケージのみをアンインストールするには、システムのパッケージマネージャのコマンドを実行します："

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:170 ../../gdi/opentelemetry/uninstall-the-collector.rst:176 ../../gdi/opentelemetry/uninstall-the-collector.rst:188 ../../gdi/opentelemetry/uninstall-the-collector.rst:194
msgid "or"
msgstr "または"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:182
msgid "To uninstall the Fluentd package only, run the command for the package manager on your system:"
msgstr "Fluentd パッケージだけをアンインストールするには、システムのパッケージマネージャのコマンドを実行します："

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:206
msgid "Verify the uninstall of the Collector and Fluentd on Linux"
msgstr "Linux で Collector と Fluentd のアンインストールを確認する。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:208
msgid "While you can verify the uninstall of the Collector and Fluentd packages by watching for success messages in your command-line interface after running an uninstall command, you can also verify the uninstall by running a command that checks on the status of the Collector and Fluentd services. If the package has been successfully uninstalled, the status reflects this."
msgstr "Collector と Fluentd パッケージのアンインストールは、アンインストールコマンドの実行後にコマンドラインインターフェイスで成功メッセージを確認することで確認できますが、Collector と Fluentd サービスの状態をチェックするコマンドを実行することでもアンインストールを確認できます。パッケージが正常にアンインストールされると、ステータスに反映されます。"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:210
msgid "To verify the uninstall of the Collector package, run this command:"
msgstr "Collector パッケージのアンインストールを確認するには、次のコマンドを実行します："

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:216
msgid "The expected result is ``Unit splunk-otel-collector.service could not be found.``"
msgstr "期待される結果は ``Unit splunk-otel-collector.service could not be found.``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:218
msgid "To verify the uninstall of the Fluentd (td-agent) package, run this command:"
msgstr "Fluentd (td-agent) パッケージのアンインストールを確認するには、次のコマンドを実行します："

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:224
msgid "The expected result is ``Unit td-agent.service could not be found.``"
msgstr "期待される結果は ``Unit td-agent.service could not be found.``"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:228
msgid "Uninstall on Windows"
msgstr "Windowsのアンインストール"

#: ../../gdi/opentelemetry/uninstall-the-collector.rst:229
msgid "If installed with the installer script, the Collector and td-agent (Fluentd) can be uninstalled from **Programs and Features** in the Windows Control Panel. The configuration files might persist in ``\\ProgramData\\Splunk\\OpenTelemetry Collector`` and ``\\opt\\td-agent`` after uninstall."
msgstr "インストーラスクリプトでインストールした場合、Collector と td-agent (Fluentd) は Windows のコントロールパネルの **プログラムと機能** からアンインストールできます。アンインストール後、設定ファイルが``\\ProgramData\\Splunk\\OpenTelemetry Collector`` と``\\opt\\td-agent`` に残ることがあります。"

#: ../../gdi/opentelemetry/windows-config.rst:-1
msgid "Optional configurations for the Splunk Distribution of OpenTelemetry Collector for Windows."
msgstr "OpenTelemetry Collector for Windows の Splunk ディストリビューションのオプション設定。"

#: ../../gdi/opentelemetry/windows-config.rst:5
msgid "Advanced configuration for Windows"
msgstr "Windows用の高度な設定"

#: ../../gdi/opentelemetry/windows-config.rst:10
msgid "The following sections describe available settings for configuring the Splunk Distribution of OpenTelemetry Collector for Windows."
msgstr "以下のセクションでは、Splunk Distribution of OpenTelemetry Collector for Windows を構成するために利用可能な設定について説明します。"

#: ../../gdi/opentelemetry/windows-config.rst:15
msgid "The Collector comes with a default configuration in the \\\\ProgramData\\\\Splunk\\\\OpenTelemetry Collector\\\\agent_config.yaml file. This configuration can be modified as needed. Possible configuration options can be found in the receivers, processors, exporters, and extensions folders of the following GitHub repositories:"
msgstr "Collectorには、デフォルトの設定が入っている。この設定は必要に応じて変更できる。設定可能なオプションは、以下のGitHubリポジトリのReceivers、Processors、Exporters、extensionsフォルダにあります："

#: ../../gdi/opentelemetry/windows-config.rst:17
msgid ":new-page:`OpenTelemetry Collector <https://github.com/open-telemetry/opentelemetry-collector>`"
msgstr ":new-page:`オープン・テレメトリー・コレクター <https://github.com/open-telemetry/opentelemetry-collector>`"

#: ../../gdi/opentelemetry/windows-config.rst:18
msgid ":new-page:`OpenTelemetry Collector Contrib <https://github.com/open-telemetry/opentelemetry-collector-contrib>`"
msgstr ":new-page:`OpenTelemetry コレクター・コントリビューション <https://github.com/open-telemetry/opentelemetry-collector-contrib>`"

#: ../../gdi/opentelemetry/windows-config.rst:20
msgid "Before starting the ``splunk-otel-collector`` service, change the variables in the default configuration file to the appropriate values for your environment. The following table provides a description of each variable."
msgstr "``splunk-otel-collector`` サービスを開始する前に、デフォルトのコンフィギュレーション・ファイルの変数を、お使いの環境に適した値に変更してください。以下の表は各変数の説明である。"

#: ../../gdi/opentelemetry/windows-config.rst:28
msgid "``${SPLUNK_ACCESS_TOKEN}``"
msgstr "``${SPLUNK_ACCESS_TOKEN}``"

#: ../../gdi/opentelemetry/windows-config.rst:29
msgid "The Splunk access token to authenticate requests"
msgstr "リクエストを認証する Splunk アクセストークン"

#: ../../gdi/opentelemetry/windows-config.rst:30
msgid "``${SPLUNK_API_URL}``"
msgstr "``${SPLUNK_API_URL}``"

#: ../../gdi/opentelemetry/windows-config.rst:31
msgid "The Splunk API URL. For example, ``https://api.us0.signalfx.com``."
msgstr "Splunk API URL。例えば、``https://api.us0.signalfx.com`` 。"

#: ../../gdi/opentelemetry/windows-config.rst:32
msgid "``${SPLUNK_HEC_TOKEN}``"
msgstr "``${SPLUNK_HEC_TOKEN}``"

#: ../../gdi/opentelemetry/windows-config.rst:33
msgid "The Splunk HEC authentication token"
msgstr "Splunk HEC 認証トークン"

#: ../../gdi/opentelemetry/windows-config.rst:34
msgid "``${SPLUNK_HEC_URL}``"
msgstr "``${SPLUNK_HEC_URL}``"

#: ../../gdi/opentelemetry/windows-config.rst:35
msgid "The Splunk HEC endpoint URL. For example, ``https://ingest.us0.signalfx.com/v1/log``."
msgstr "Splunk HEC のエンドポイント URL。例えば、``https://ingest.us0.signalfx.com/v1/log`` 。"

#: ../../gdi/opentelemetry/windows-config.rst:36
msgid "``${SPLUNK_INGEST_URL}``"
msgstr "``${SPLUNK_INGEST_URL}``"

#: ../../gdi/opentelemetry/windows-config.rst:37
msgid "The Splunk ingest URL. For example, ``https://ingest.us0.signalfx.com``."
msgstr "Splunk インジェスト URL。例えば、``https://ingest.us0.signalfx.com`` 。"

#: ../../gdi/opentelemetry/windows-config.rst:38
msgid "``${SPLUNK_TRACE_URL}``"
msgstr "``${SPLUNK_TRACE_URL}``"

#: ../../gdi/opentelemetry/windows-config.rst:39
msgid "The Splunk trace endpoint URL. For example, ``https://ingest.us0.signalfx.com/v2/trace``."
msgstr "Splunk トレースエンドポイント URL。例えば、``https://ingest.us0.signalfx.com/v2/trace`` 。"

#: ../../gdi/opentelemetry/windows-config.rst:40
msgid "``${SPLUNK_BUNDLE_DIR}``"
msgstr "``${SPLUNK_BUNDLE_DIR}``"

#: ../../gdi/opentelemetry/windows-config.rst:41
msgid "The location of your Smart Agent bundle for monitor functionality. For example, ``C:\\Program Files\\Splunk\\OpenTelemetry Collector\\agent-bundle``."
msgstr "モニター機能用のスマートエージェントバンドルの場所。例えば、``C:\\Program Files\\Splunk\\OpenTelemetry Collector\\agent-bundle`` 。"

#: ../../gdi/opentelemetry/windows-config.rst:43
msgid "|br|"
msgstr "|br|"

#: ../../gdi/opentelemetry/windows-config.rst:45
msgid "Do the following after updating the variables in the default configuration file:"
msgstr "デフォルト・コンフィギュレーション・ファイルの変数を更新した後、以下を実行する："

#: ../../gdi/opentelemetry/windows-config.rst:47
msgid "Start the service by rebooting the system or by running the following command in a PowerShell terminal::"
msgstr "システムを再起動するか、PowerShellターミナルで以下のコマンドを実行してサービスを開始します："

#: ../../gdi/opentelemetry/windows-config.rst:50
msgid "To modify the default path to the configuration file for the service, run ``regdit`` and modify the ``SPLUNK_CONFIG`` value in the ``HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment`` registry key, or run the following PowerShell command (replace PATH with the full path to the new configuration file)::"
msgstr "サービスの構成ファイルへのデフォルト・パスを変更するには、``regdit`` を実行し、``HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment`` レジストリ・キーの``SPLUNK_CONFIG`` の値を変更するか、以下のPowerShellコマンドを実行する（PATHを新しい構成ファイルへのフル・パスに置き換える）："

#: ../../gdi/opentelemetry/windows-config.rst:53
msgid "After modifying the configuration file or registry key, apply the changes by restarting the system or by running the following PowerShell commands::"
msgstr "設定ファイルまたはレジストリ・キーを変更したら、システムを再起動するか、次のPowerShellコマンドを実行して変更を適用する："

#: ../../gdi/opentelemetry/zero-config.rst:7
msgid "Splunk OpenTelemetry Zero Configuration Auto Instrumentation"
msgstr "Splunk OpenTelemetry ゼロ構成の自動計測"

#: ../../gdi/opentelemetry/zero-config.rst:19
msgid "Splunk OpenTelemetry Zero Configuration Auto Instrumentation provides several packages that automatically instrument your back-end applications and services to capture and report distributed traces and metrics to the Splunk Distribution of OpenTelemetry Collector, and then on to Splunk APM."
msgstr "Splunk OpenTelemetry Zero Configuration Auto Instrumentation は、バックエンドのアプリケーションやサービスを自動的に計測し、分散したトレースやメトリクスをキャプチャして OpenTelemetry Collector の Splunk Distribution にレポートし、さらに Splunk APM にレポートする複数のパッケージを提供します。"

#: ../../gdi/opentelemetry/zero-config.rst:21
msgid "The Zero Configuration packages provide the following benefits:"
msgstr "ゼロ・コンフィギュレーション・パッケージには次のような利点がある："

#: ../../gdi/opentelemetry/zero-config.rst:24
msgid "You don't need to configure or instrument your back-end services or applications before deployment."
msgstr "デプロイ前にバックエンドのサービスやアプリケーションを設定したり、計測したりする必要はない。"

#: ../../gdi/opentelemetry/zero-config.rst:26
msgid "The following packages are available:"
msgstr "以下のパッケージが用意されている："

#: ../../gdi/opentelemetry/zero-config.rst:28
msgid ":ref:`auto-instrumentation-java`"
msgstr ":ref:`auto-instrumentation-java`"

#: ../../gdi/opentelemetry/zero-config.rst:29
msgid ":ref:`auto-instrumentation-dotnet`"
msgstr ":ref:`auto-instrumentation-dotnet`"

#: ../../gdi/opentelemetry/zero-config.rst:31
msgid "You can also install the Collector with the Kubernetes Operator for Auto Instrumentation. See :ref:`Install the Collector with the Kubernetes Operator <auto-instrumentation-operator>` for more information."
msgstr "Kubernetes Operator for Auto Instrumentationを使用してCollectorをインストールすることもできます。詳しくは:ref:`Install the Collector with the Kubernetes Operator <auto-instrumentation-operator>` 。"

#: ../../gdi/orchestration.rst:-1
msgid "Landing for application receivers for orchestration applications in Splunk Observability Cloud."
msgstr "Splunk Observability Cloud のオーケストレーションアプリケーション用アプリケーションレシーバーのランディング。"

#: ../../gdi/orchestration.rst:5
msgid "Configure application receivers for orchestration"
msgstr "オーケストレーションのためのアプリケーション・レシーバーの設定"

#: ../../gdi/orchestration.rst:27
msgid "These application receivers gather metrics from their associated orchestration-related applications and the hosts the applications are running on."
msgstr "これらのアプリケーション・レシーバーは、関連するオーケストレーション関連アプリケーションと、そのアプリケーションが実行されているホストからメトリクスを収集します。"

#: ../../gdi/orchestration.rst:29
msgid ":ref:`get-started-istio`"
msgstr ":ref:`get-started-istio`"

#: ../../gdi/orchestration.rst:30
msgid ":ref:`kubernetes-apiserver`"
msgstr ":ref:`kubernetes-apiserver`"

#: ../../gdi/orchestration.rst:31
msgid ":ref:`kubernetes-cluster`"
msgstr ":ref:`kubernetes-cluster`"

#: ../../gdi/orchestration.rst:32
msgid ":ref:`kubernetes-cluster-receiver`"
msgstr ":ref:`kubernetes-cluster-receiver`"

#: ../../gdi/orchestration.rst:33
msgid ":ref:`kube-controller-manager`"
msgstr ":ref:`kube-controller-manager`"

#: ../../gdi/orchestration.rst:34
msgid ":ref:`kubernetes-events`"
msgstr ":ref:`kubernetes-events`"

#: ../../gdi/orchestration.rst:35
msgid ":ref:`kubelet-stats`"
msgstr ":ref:`kubelet-stats`"

#: ../../gdi/orchestration.rst:36
msgid ":ref:`kubernetes-proxy`"
msgstr ":ref:`kubernetes-proxy`"

#: ../../gdi/orchestration.rst:37
msgid ":ref:`kubernetes-scheduler`"
msgstr ":ref:`kubernetes-scheduler`"

#: ../../gdi/orchestration.rst:38
msgid ":ref:`kubelet-stats-receiver`"
msgstr ":ref:`kubelet-stats-receiver`"

#: ../../gdi/orchestration.rst:39
msgid ":ref:`marathon`"
msgstr ":ref:`marathon`"

#: ../../gdi/orchestration.rst:40
msgid ":ref:`openshift-cluster`"
msgstr ":ref:`openshift-cluster`"

#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:-1
msgid "You can send traces to Splunk Observability Cloud in OTLP format using the gRPC endpoint."
msgstr "gRPC エンドポイントを使用して、OTLP 形式で Splunk Observability Cloud にトレースを送信できます。"

#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:6
msgid "Send traces to Splunk Observability Cloud using the gRPC endpoint"
msgstr "gRPC エンドポイントを使用して Splunk Observability Cloud にトレースを送信する"

#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:11
msgid "You can send traces to Splunk Observability Cloud in OTLP format using the gRPC endpoint. This is useful when you need to bypass the OpenTelemetry Collector due to network or application requirements and want to sent data in OTLP format."
msgstr "gRPC エンドポイントを使用して、OTLP 形式で Splunk Observability Cloud にトレースを送信できます。これは、ネットワークやアプリケーションの要件によりOpenTelemetry Collectorをバイパスする必要があり、OTLPフォーマットでデータを送信したい場合に便利です。"

#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:13
msgid "To send data using the REST API endpoints, see :ref:`rest-api-ingest`."
msgstr "REST API エンドポイントを使用してデータを送信するには、:ref:`rest-api-ingest` を参照してください。"

#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:16
msgid "Send traces using the gRPC endpoint"
msgstr "gRPCエンドポイントを使用したトレースの送信"

#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:18
msgid "The gRPC ingest endpoint for traces is ``ingest.<realm>.signalfx.com:443``, where ``<realm>`` is your Splunk Observability Cloud realm. Requests must contain an access token in the ``X-SF-Token`` header."
msgstr "トレースの gRPC インジェストエンドポイントは``ingest.<realm>.signalfx.com:443`` で、``<realm>`` は Splunk Observability Cloud レルムです。リクエストは``X-SF-Token`` ヘッダーにアクセストークンを含まなければならない。"

#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:31
msgid "Configure the Splunk OpenTelemetry Collector"
msgstr "Splunk OpenTelemetry Collector を設定する"

#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:33
msgid "To send traces directly to the gRPC ingest endpoint, add the following lines to the ``exporters`` section of your Collector configuration file:"
msgstr "トレースをgRPCインジェストエンドポイントに直接送信するには、Collector設定ファイルの``exporters`` セクションに次の行を追加します："

#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:43
msgid "Make sure that the traces pipeline contains the ``otlp`` exporter:"
msgstr "トレースパイプラインに``otlp`` エクスポーターが含まれていることを確認してください："

#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:54
msgid "Send data in OTLP format over HTTP"
msgstr "HTTPでOTLP形式のデータを送信"

#: ../../gdi/other-ingestion-methods/grpc-data-ingest.rst:56
msgid "If you want to send data in OTLP format using HTTP instead of gRPC, see the documentation for the :new-page:`/trace/otlp endpoint <https://dev.splunk.com/observability/reference/api/ingest_data/latest#endpoint-sendotlptraces>`."
msgstr "gRPCの代わりにHTTPを使ってOTLP形式でデータを送信したい場合は、:new-page:`/trace/otlp エンドポイント<https://dev.splunk.com/observability/reference/api/ingest_data/latest#endpoint-sendotlptraces>` のドキュメントを参照してください。"

#: ../../gdi/other-ingestion-methods/other-data-ingestion-methods.rst:12
msgid "Send data using REST APIs"
msgstr "REST APIを使ってデータを送信する"

#: ../../gdi/other-ingestion-methods/other-data-ingestion-methods.rst:-1
msgid "Alternative ways of getting and sending custom metric data into Splunk Observability Cloud."
msgstr "カスタムメトリックデータを Splunk Observability Cloud に取得および送信する別の方法。"

#: ../../gdi/other-ingestion-methods/other-data-ingestion-methods.rst:5
msgid "Other data ingestion methods"
msgstr "その他のデータ取り込み方法"

#: ../../gdi/other-ingestion-methods/other-data-ingestion-methods.rst:10
msgid "If your needs are not covered by Splunk distributions of OpenTelemetry, you can still send data to Splunk Observability Cloud using the following methods."
msgstr "お客様のニーズが OpenTelemetry の Splunk ディストリビューションでカバーされていない場合でも、以下の方法で Splunk Observability Cloud にデータを送信することができます。"

#: ../../gdi/other-ingestion-methods/other-data-ingestion-methods.rst:27
msgid "You can use the OpenTelemetry Collector Contrib instead of the Splunk Distribution of OpenTelemetry Collector. See :ref:`using-upstream-otel` for installation instructions and information about the differences between the upstream Collector and the Splunk distribution."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションの代わりに OpenTelemetry Collector Contrib を使用できます。インストールの手順や、アップストリームの Collector と Splunk ディストリビューションの違いについては、:ref:`using-upstream-otel` を参照してください。"

#: ../../gdi/other-ingestion-methods/other-data-ingestion-methods.rst:31
msgid "Splunk only provides best-effort support for OpenTelemetry Collector Contrib. Only Splunk OpenTelemetry distributions are in scope for official Splunk support and support-related service-level agreements (SLAs)."
msgstr "Splunk は、OpenTelemetry Collector Contrib のベストエフォートサポートのみを提供します。Splunk OpenTelemetry ディストリビューションのみが、Splunk の公式サポートおよびサポート関連のサービスレベル契約 (SLA) の対象となります。"

#: ../../gdi/other-ingestion-methods/other-data-ingestion-methods.rst:39
msgid "Splunk Observability Cloud supports an extensive set of REST APIs that lets you send data points and events. This is useful when you need to bypass the Collector. See an example in :ref:`rest-api-ingest`."
msgstr "Splunk Observability Cloud は、データポイントやイベントを送信できる広範な REST API セットをサポートしています。コレクターをバイパスする必要がある場合に便利です。:ref:`rest-api-ingest` の例を参照のこと。"

#: ../../gdi/other-ingestion-methods/other-data-ingestion-methods.rst:47
msgid "You can send custom metrics to Splunk Observability Cloud, for example to instrument a service that isn't supported yet. To create and send custom metrics, see :ref:`send-custom-metrics`."
msgstr "例えば、まだサポートされていないサービスを計測するために、カスタムメトリクスを Splunk Observability Cloud に送信することができます。カスタム・メトリクスを作成して送信するには、:ref:`send-custom-metrics` を参照してください。"

#: ../../gdi/other-ingestion-methods/other-data-ingestion-methods.rst:55
msgid "You can send trace data in OTLP format directly to Splunk Observability Cloud using the gRPC endpoint, either directly or from an OpenTelemetry Collector. See :ref:`grpc-data-ingest`."
msgstr "gRPC エンドポイントを使用して、直接または OpenTelemetry Collector から、OTLP 形式のトレースデータを Splunk Observability Cloud に送信できます。:ref:`grpc-data-ingest` を参照。"

#: ../../gdi/other-ingestion-methods/other-data-ingestion-methods.rst:63
msgid "To send metrics from your code to Splunk Observability Cloud, you can use several client libraries for Java, Python, Ruby, Go, and Node.js. See :new-page:`SignalFlow client libraries <https://dev.splunk.com/observability/docs/signalflow/messages/information_messages_specification/#SignalFlow-client-libraries>` for more information."
msgstr "コードから Splunk Observability Cloud にメトリクスを送信するには、Java、Python、Ruby、Go、Node.js 用の複数のクライアントライブラリを使用できます。詳細は:new-page:`SignalFlowクライアント・ライブラリ<https://dev.splunk.com/observability/docs/signalflow/messages/information_messages_specification/#SignalFlow-client-libraries>` を参照。"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:-1
msgid "Use a REST API to send data points to Splunk Observability Cloud."
msgstr "REST API を使用して、データポイントを Splunk Observability Cloud に送信します。"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:5
msgid "Send metrics, traces, and events using Splunk Observability Cloud REST APIs"
msgstr "Splunk Observability Cloud REST API を使用してメトリクス、トレース、イベントを送信する"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:10
msgid "You can use the REST API to send telemetry directly to Splunk Observability Cloud. See :new-page:`Send data points <https://dev.splunk.com/observability/docs/datamodel/ingest/>` and :new-page:`Send traces, metrics, and events <https://dev.splunk.com/observability/reference/api/ingest_data/latest#endpoint-send-metrics>` in the developer documentation."
msgstr "REST API を使用して、テレメトリを Splunk Observability Cloud に直接送信できます。開発者向けドキュメントの:new-page:`データ・ポイントの送信<https://dev.splunk.com/observability/docs/datamodel/ingest/>` および:new-page:`トレース、メトリクス、およびイベントの送信<https://dev.splunk.com/observability/reference/api/ingest_data/latest#endpoint-send-metrics>` を参照。"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:13
msgid "Start sending data using the API"
msgstr "APIを使用してデータ送信を開始する"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:15
msgid "Start experimenting by sending data using the following `curl` command:"
msgstr "以下の`curl` コマンドを使ってデータを送信して実験を開始する："

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:35
msgid "Send custom metrics using the API"
msgstr "APIを使用してカスタムメトリクスを送信する"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:37
msgid "To send custom metrics, replace ``<ORG_TOKEN>`` with an org token for your organization in the code block provided as an example."
msgstr "カスタム・メトリクスを送信するには、例として提供されているコード・ブロックで、``<ORG_TOKEN>`` を組織の org トークンに置き換えてください。"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:39
msgid "in Splunk Observability Cloud UI, an org token is called an access token. To learn how to obtain an org token, see :ref:`admin-org-tokens`."
msgstr "Splunk Observability Cloud UI では、org トークンをアクセストークンと呼びます。org トークンの取得方法については、:ref:`admin-org-tokens` を参照してください。"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:41
msgid "When you send a request, use the endpoint specific to your realm. Replace ``<REALM>`` with the name of your realm, which you can find on your profile page in the user interface. To learn more, see :new-page:`Realms in endpoints <https://dev.splunk.com/observability/docs/realms_in_endpoints>`."
msgstr "リクエストを送るときは、そのレルムに固有のエンドポイントを使う。``<REALM>`` を自分のレルム名に置き換えてください。レルム名はユーザーインターフェースのプロフィールページで確認できます。詳しくは、:new-page:`Realms in endpoints<https://dev.splunk.com/observability/docs/realms_in_endpoints>` をご覧ください。"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:44
msgid "Return codes"
msgstr "リターンコード"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:46
msgid "The REST APIs return the following codes:"
msgstr "REST APIは以下のコードを返す："

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:53
msgid ":strong:`API`"
msgstr ":strong:`API`"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:54
msgid ":strong:`Return code`"
msgstr ":strong:`リターンコード`"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:57 ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:61 ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:66
msgid ":new-page:`Send Traces, Metrics and Events <https://dev.splunk.com/observability/reference/api/ingest_data/latest#endpoint-send-metrics>`"
msgstr ":new-page:`トレース、メトリクス、イベントの送信 <https://dev.splunk.com/observability/reference/api/ingest_data/latest#endpoint-send-metrics>`"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:58
msgid "``200``"
msgstr "``200``"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:59
msgid "Successful data ingest."
msgstr "データの取り込みに成功。"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:62
msgid "``400``"
msgstr "``400``"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst
msgid "Bad request."
msgstr "悪いリクエストだ。"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst
msgid "This can happen if the JSON was not well-formed, if you specified a data point outside of one of the metric type arrays, or if you forgot to specify a metric name for a data point."
msgstr "これは、JSONが整形式でない場合、メトリックタイプ配列の1つ以外でデータポイントを指定した場合、またはデータポイントのメトリック名を指定し忘れた場合に発生する可能性があります。"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst:67
msgid "``401``"
msgstr "``401``"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst
msgid "Unauthorized."
msgstr "無許可。"

#: ../../gdi/other-ingestion-methods/rest-APIs-for-datapoints.rst
msgid "The ingest token specified in the X-SF-TOKEN header in the request doesn't have authorization to send data points to the organization."
msgstr "リクエストのX-SF-TOKENヘッダーで指定されたインジェストトークンは、組織にデータポイントを送信する権限を持っていない。"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:-1
msgid "You can send custom metrics to Splunk Observability Cloud, for example to instrument a service that isn't supported yet."
msgstr "例えば、まだサポートされていないサービスを計測するために、カスタムメトリクスを Splunk Observability Cloud に送信することができます。"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:5
msgid "Send custom metrics to Splunk Observability Cloud"
msgstr "カスタムメトリクスを Splunk Observability Cloud に送信する"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:10
msgid "You can send custom infrastructure and application metrics to Splunk Observability Cloud, for example to instrument a service that isn't supported yet. To send custom metrics, follow these instructions."
msgstr "カスタムインフラストラクチャやアプリケーションのメトリクスを Splunk Observability Cloud に送信できます。カスタム・メトリクスを送信するには、以下の手順に従ってください。"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:15
msgid "Send custom infrastructure or service metrics"
msgstr "カスタム・インフラストラクチャまたはサービス・メトリクスの送信"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:17
msgid "Splunk Observability Cloud can ingest custom infrastructure or service metrics through existing OpenTelemetry components from OpenTelemetry contrib or through custom components that adhere to OpenTelemetry semantic conventions. For a list of supported metric types, see :ref:`metric-types`."
msgstr "Splunk Observability Cloud は、OpenTelemetry contrib の既存の OpenTelemetry コンポーネント、または OpenTelemetry のセマンティック規約に準拠したカスタムコンポーネントを通して、カスタムインフラストラクチャやサービスのメトリクスを取り込むことができます。サポートされているメトリックタイプのリストについては、:ref:`metric-types` を参照してください。"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:19
msgid "To send custom application metrics to Splunk Observability Cloud, follow these steps."
msgstr "カスタムアプリケーションメトリクスを Splunk Observability Cloud に送信するには、以下の手順に従います。"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:22
msgid "Add a receiver for custom metrics"
msgstr "カスタム・メトリクスのレシーバーを追加する"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:24
msgid "To send custom metrics through the Splunk Distribution of the OpenTelemetry Collector, define a receiver in your Collector configuration that is ready to accept the data. See :ref:`otel-components` for a list of available receivers."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションを通じてカスタムメトリクスを送信するには、Collector 設定でデータを受け入れる準備ができているレシーバを定義します。利用可能なレシーバーのリストは:ref:`otel-components` を参照。"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:26
msgid "The following example shows a custom Prometheus receiver that scrapes a live endpoint on port 8889 every 10 seconds:"
msgstr "次の例は、10 秒ごとにポート 8889 のライブ・エンドポイントをスクレイピングするカスタム Prometheus レシーバーを示しています："

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:38
msgid "Make sure that the new receiver is the ``metrics`` pipeline of the configuration:"
msgstr "新しいレシーバーがコンフィギュレーションの``metrics`` パイプラインであることを確認する："

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:47
msgid "See :ref:`prometheus-receiver` for more information."
msgstr "詳しくは:ref:`prometheus-receiver` 。"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:50
msgid "Add the required dependencies"
msgstr "必要な依存関係を追加する"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:52
msgid "To send custom infrastructure or service metrics from the code of your application, or from a script that queries a service at regular intervals, add the required dependencies, including OpenTelemetry packages."
msgstr "アプリケーションのコードから、または定期的にサービスを照会するスクリプトから、カスタム・インフラストラクチャまたはサービス・メトリクスを送信するには、OpenTelemetry パッケージを含む必要な依存関係を追加します。"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:54
msgid "The following example shows dependencies for a Python script that send metrics every time it's run by ``cron``:"
msgstr "次の例は、``cron`` によって実行されるたびにメトリクスを送信する Python スクリプトの依存関係を示しています："

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:70
msgid "The requirements.txt file for the example contains the following:"
msgstr "この例のrequirements.txtファイルには以下の内容が含まれている："

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:80
msgid "Send custom metrics to the Collector"
msgstr "カスタム測定基準をコレクターに送信する"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:82
msgid "Configure your code to create counters, gauges, and other metric data types and send them using the OTLP metric exporter. This Python example shows how to define an exporter, reader, and provider for OpenTelemetry:"
msgstr "カウンタ、ゲージ、その他のメトリックデータタイプを作成し、OTLPメトリックエクスポーターを使って送信するようにコードを構成します。この Python の例では、OpenTelemetry のエクスポータ、リーダ、プロバイダを定義する方法を示します："

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:91
msgid "See the example.py file in GitHub for a full example: :new-page:`https://github.com/open-telemetry/opentelemetry-python/blob/main/docs/examples/metrics/instruments/example.py`."
msgstr "完全な例はGitHubのexample.pyファイルを参照してください::new-page:`https://github.com/open-telemetry/opentelemetry-python/blob/main/docs/examples/metrics/instruments/example.py`."

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:93
msgid "To send metrics bypassing the Collector, use the Ingest REST API endpoints. See :new-page:`Send Metrics and Events <https://dev.splunk.com/observability/reference/api/ingest_data/latest#endpoint-send-otlp-metrics>`."
msgstr "Collector をバイパスしてメトリクスを送信するには、Ingest REST API エンドポイントを使用します。:new-page:`メトリクスとイベントの送信<https://dev.splunk.com/observability/reference/api/ingest_data/latest#endpoint-send-otlp-metrics>` を参照。"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:98
msgid "Send custom application metrics"
msgstr "カスタム・アプリケーション・メトリクスの送信"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:100
msgid "Splunk Observability Cloud can ingest custom application metrics created following OpenTelemetry semantic conventions and upstream OpenTelemetry API and SDK. For a list of supported metric types, see :ref:`metric-types`."
msgstr "Splunk Observability Cloud は、OpenTelemetry セマンティック規約とアップストリームの OpenTelemetry API および SDK に従って作成されたカスタムアプリケーションメトリクスを取り込むことができます。サポートされているメトリックタイプのリストについては、:ref:`metric-types` を参照してください。"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:102
msgid "To send custom application metrics to Splunk Observability Cloud, follow these steps:"
msgstr "カスタムアプリケーションメトリクスを Splunk Observability Cloud に送信するには、以下の手順に従います："

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:104
msgid "Install the APM instrumentation for your application's language. See :ref:`get-started-application`."
msgstr "アプリケーションの言語に対応したAPMインスツルメンテーションをインストールする。:ref:`get-started-application` を参照。"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:106
msgid "Activate the metric exporter of the instrumentation:"
msgstr "計装のメトリックエクスポーターをアクティブにします："

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:108
msgid ":ref:`Java <enable_automatic_metric_collection>`"
msgstr ":ref:`Java <enable_automatic_metric_collection>`"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:109
msgid ":ref:`Node.js <metrics-configuration-nodejs>`"
msgstr ":ref:`Node.js <metrics-configuration-nodejs>`"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:110
msgid ".NET metric collection is on by default."
msgstr ".NETのメトリック収集はデフォルトでオンになっている。"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:111
msgid "Go metric collection is on by default."
msgstr "囲碁の指標収集はデフォルトでオンになっている。"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:113
msgid "If you've activated AlwaysOn Profiling, metric collection is turned on by default for all languages that support profiling."
msgstr "AlwaysOn Profiling を有効にしている場合、プロファイリングをサポートするすべての言語でメトリック収集がデフォルトでオンになります。"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:115
msgid "Make sure that the metric you want to create isn't already collected using a built-in metric:"
msgstr "作成したいメトリックが、ビルトインのメトリックを使ってすでに収集されていないことを確認してください："

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:117
msgid ":ref:`java-otel-metrics-attributes`"
msgstr ":ref:`java-otel-metrics-attributes`"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:118
msgid ":ref:`nodejs-otel-metrics`"
msgstr ":ref:`nodejs-otel-metrics`"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:119
msgid ":ref:`dotnet-otel-metrics-attributes`"
msgstr ":ref:`dotnet-otel-metrics-attributes`"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:120
msgid ":ref:`go-otel-metrics`"
msgstr ":ref:`go-otel-metrics`"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:122
msgid "Create custom metrics following the instructions for each language:"
msgstr "各言語の説明に従って、カスタム・メトリクスを作成します："

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:124
msgid ":ref:`Java <java-otel-custom-metrics>`"
msgstr ":ref:`Java <java-otel-custom-metrics>`"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:125
msgid ":ref:`Node.js <nodejs-otel-custom-metrics>`"
msgstr ":ref:`Node.js <nodejs-otel-custom-metrics>`"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:126
msgid ":ref:`.NET (OpenTelemetry) <custom-metrics-otel-dotnet>`"
msgstr ":ref:`.NET (OpenTelemetry) <custom-metrics-otel-dotnet>`"

#: ../../gdi/other-ingestion-methods/send-custom-metrics.rst:127
msgid ":ref:`Go <custom-metrics-go>`"
msgstr ":ref:`Go <custom-metrics-go>`"

#: ../../gdi/other-ingestion-methods/set-host-name-attribute-override.rst:-1
msgid "Set the host.name attribute override using the OpenTelemetry Helm chart."
msgstr "OpenTelemetry Helm チャートを使って host.name 属性のオーバーライドを設定します。"

#: ../../gdi/other-ingestion-methods/set-host-name-attribute-override.rst:5
msgid "Set the host.name attribute override using the OpenTelemetry Helm chart"
msgstr "OpenTelemetry Helmチャートを使って、host.name属性のオーバーライドを設定します。"

#: ../../gdi/other-ingestion-methods/set-host-name-attribute-override.rst:10
msgid "To report the correct number of hosts to Splunk Observability Cloud, the ``host.name`` attribute must represent a host, not a container or Kubernetes pod. To make sure this attribute is set correctly, send traces and metrics through the Splunk Distribution of OpenTelemetry Collector for Kubernetes :ref:`deployed as an agent <otel-deployment-mode>` where the attribute is overridden by default."
msgstr "正しいホスト数を Splunk Observability Cloud に報告するには、``host.name`` 属性がコンテナや Kubernetes ポッドではなくホストを表す必要があります。この属性が正しく設定されていることを確認するには、Splunk Distribution of OpenTelemetry Collector for Kubernetes:ref:`deployed as an agent <otel-deployment-mode>` を通してトレースとメトリクスを送信します。この属性はデフォルトで上書きされます。"

#: ../../gdi/other-ingestion-methods/set-host-name-attribute-override.rst:12
msgid "If you use an open-source distribution of OpenTelemetry Collector, configure the resource detection processor to override host attributes, as shown in the following configuration."
msgstr "OpenTelemetry Collector のオープンソースディストリビューションを使用 する場合は、以下の構成に示すように、ホスト属性を上書きするように リソース検出プロセッサを構成します。"

#: ../../gdi/other-ingestion-methods/set-host-name-attribute-override.rst:14
msgid "If you use an OpenTelemetry Helm chart, add the following configuration to your custom values.yaml file:"
msgstr "OpenTelemetry Helm チャートを使用している場合は、カスタム values.yaml ファイルに以下の設定を追加します："

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:-1
msgid "If you need to use the upstream Collector due to technical or practical reasons, you can still send traces and metrics to Splunk Observability Cloud. On the other hand, the Splunk Distribution of OpenTelemetry Collector enhances the upstream OpenTelemetry Collector and is fully compatible with Splunk instrumentation."
msgstr "技術的または実用的な理由でアップストリームコレクターを使用する必要がある場合でも、Splunk Observability Cloud にトレースとメトリクスを送信できます。一方、OpenTelemetry Collector の Splunk ディストリビューションは、アップストリームの OpenTelemetry Collector を強化し、Splunk インストルメンテーションと完全に互換性があります。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:3
msgid "Splunk provides best-effort support for the OpenTelemetry Collector Contrib. Only Splunk OpenTelemetry distributions are in scope for official Splunk support and support-related service-level agreements (SLAs)."
msgstr "Splunk は OpenTelemetry Collector Contrib のベストエフォートサポートを提供しています。Splunk OpenTelemetry ディストリビューションのみが、Splunk の公式サポートおよびサポート関連のサービスレベル契約 (SLA) の対象となります。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:9
msgid "Send telemetry using the OpenTelemetry Collector Contrib project"
msgstr "OpenTelemetry Collector Contribプロジェクトを使用して遠隔測定を送信する。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:14
msgid "The OpenTelemetry Collector Contrib project, referred to officially as the upstream Collector, is the upstream source of all OpenTelemetry Collector distributions, including the Splunk Distribution of OpenTelemetry Collector. The upstream Collector contains vendor-specific components, such as receivers and exporters for several observability back ends, including Splunk Observability Cloud."
msgstr "OpenTelemetry Collector Contribプロジェクトは、公式にはアップストリームのCollectorと呼ばれ、OpenTelemetry CollectorのSplunkディストリビューションを含む、すべてのOpenTelemetry Collectorディストリビューションのアップストリームソースです。アップストリームのコレクターには、Splunk Observability Cloudを含むいくつかのオブザーバビリティバックエンド用のレシーバーやエクスポータなど、ベンダー固有のコンポーネントが含まれています。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:16
msgid "The Splunk Distribution of OpenTelemetry Collector, on the other hand, is configured for Splunk Observability Cloud and can be deployed automatically by a variety of configuration management tools or using the installer scripts. The distribution adds additional functionality to the Collector while preserving all the features from the OpenTelemetry Collector Contrib project. See :ref:`otel-intro`."
msgstr "一方、OpenTelemetry Collector の Splunk Distribution は Splunk Observability Cloud 用に構成されており、さまざまな構成管理ツールまたはインストーラスクリプトを使用して自動的にデプロイできます。このディストリビューションは、OpenTelemetry Collector Contribプロジェクトのすべての機能を保持しながら、Collectorに追加の機能を追加します。:ref:`otel-intro` を参照。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:18
msgid "If you need to use the upstream Collector due to technical or practical reasons, you can still send traces and metrics to Splunk Observability Cloud. Read on to learn about the differences between the upstream Collector and the Splunk OTel Collector, how to configure the upstream Collector for Splunk Observability Cloud, and how to migrate from the upstream Collector to the Splunk Distribution of OpenTelemetry Collector."
msgstr "技術的または実用的な理由でアップストリームコレクターを使用する必要がある場合でも、Splunk Observability Cloud にトレースとメトリクスを送信できます。アップストリームコレクターと Splunk OTel コレクターの違い、アップストリームコレクターを Splunk Observability Cloud 用に設定する方法、アップストリームコレクターから Splunk Distribution of OpenTelemetry Collector に移行する方法については、こちらをお読みください。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:20
msgid "Splunk participates in the OpenTelemetry project and is committed to its growth. Features developed for the Splunk distribution are regularly added to the upstream Collector for the benefit of the entire community. The goal is for all Splunk distributions to eventually become snapshots of the OpenTelemetry Contrib Collector project."
msgstr "Splunk は OpenTelemetry プロジェクトに参加し、その成長にコミットしています。Splunk ディストリビューション用に開発された機能は、コミュニティ全体の利益のために定期的にアップストリームコレクターに追加されます。目標は、すべての Splunk ディストリビューションが最終的に OpenTelemetry Contrib Collector プロジェクトのスナップショットになることだ。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:23
msgid "Feature comparison"
msgstr "機能比較"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:25
msgid "The following table compares the Splunk Distribution of OpenTelemetry Collector with the Collector from the OpenTelemetry Collector Contrib project."
msgstr "以下の表は、OpenTelemetry Collector の Splunk ディストリビューションと OpenTelemetry Collector Contrib プロジェクトの Collector を比較したものです。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:32
msgid ":strong:`Feature`"
msgstr ":strong:`特徴`"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:33
msgid ":strong:`Splunk Distribution of OpenTelemetry Collector`"
msgstr ":strong:`OpenTelemetry Collector の Splunk ディストリビューション`"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:34
msgid ":strong:`OpenTelemetry Collector Contrib project`"
msgstr ":strong:`OpenTelemetry Collector Contrib プロジェクト`"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:36
msgid "Splunk support"
msgstr "Splunk サポート"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:37
msgid "Full support"
msgstr "フルサポート"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:38
msgid "Best effort"
msgstr "ベストエフォート"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:40
msgid "Installer scripts for Linux and Windows"
msgstr "LinuxおよびWindows用インストーラ・スクリプト"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:41
msgid "Yes, for Windows and Linux"
msgstr "はい。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:44
msgid "Configured for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud 用に設定"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:45
msgid "Yes, for host monitoring (agent) and data forwarding (gateway) modes"
msgstr "ホストモニタリング(エージェント)モードとデータ転送(ゲートウェイ)モードがあります。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:48
msgid "Zero config automatic instrumentation"
msgstr "ゼロコンフィグ自動計装"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:52
msgid "Discovery mode"
msgstr "ディスカバリー・モード"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:56
msgid "Recipes for configuration management tools"
msgstr "構成管理ツールのレシピ"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:57
msgid "Yes, for Ansible, Chef, Puppet, and Salt"
msgstr "はい、Ansible、Chef、Puppet、Salt用です。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:60
msgid "Helm chart and Kubernetes operator"
msgstr "HelmチャートとKubernetesオペレータ"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:64
msgid "Built-in dashboards"
msgstr "内蔵ダッシュボード"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:68
msgid "AlwaysOn Profiling"
msgstr "AlwaysOnプロファイリング"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:69
msgid "Yes, CPU and memory"
msgstr "はい、CPUとメモリ"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:72
msgid "Network Explorer"
msgstr "ネットワークエクスプローラー"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:76
msgid "Log collection and export"
msgstr "ログの収集とエクスポート"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:77
msgid "Yes, using Splunk HEC and Fluentd"
msgstr "はい、Splunk HEC と Fluentd を使用しています。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:78
msgid "No, it requires configuration"
msgstr "いいえ、設定が必要です。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:80
msgid "Related content"
msgstr "関連コンテンツ"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:84
msgid "RUM correlation"
msgstr "RUM相関"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:91
msgid "To send data to Splunk Observability Cloud you can use the Collector from the OpenTelemetry Collector Contrib project. See :new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib <https://github.com/open-telemetry/opentelemetry-collector-contrib>` on GitHub for more information."
msgstr "Splunk Observability Cloud にデータを送信するには、OpenTelemetry Collector Contrib プロジェクトの Collector を使用できます。詳しくはGitHubの:new-page:`https://github.com/open-telemetry/opentelemetry-collector-contrib<https://github.com/open-telemetry/opentelemetry-collector-contrib>` を参照。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:93
msgid "Make sure that the version number of OpenTelemetry Collector Contrib is the same as the latest Splunk distribution before configuring the Collector. To check the version of the Splunk Distribution of OpenTelemetry Collector, see the :new-page:`Releases <https://github.com/signalfx/splunk-otel-collector/releases>` page on GitHub."
msgstr "コレクターを設定する前に、OpenTelemetry Collector Contrib のバージョン番号が最新の Splunk ディストリビューションと同じであることを確認してください。OpenTelemetry Collector の Splunk ディストリビューションのバージョンを確認するには、GitHub の:new-page:`Releases<https://github.com/signalfx/splunk-otel-collector/releases>` ページを参照してください。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:98
msgid "Sample configuration for Splunk Observability Cloud"
msgstr "Splunk Observability Cloud のサンプル構成"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:100
msgid "The following example shows how to configure the upstream Collector to send metrics and traces to Splunk Observability Cloud:"
msgstr "次の例では、Splunk Observability Cloud にメトリクスとトレースを送信するようにアップストリームコレクターを設定する方法を示します："

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:108
msgid "Migrate to the Splunk Distribution of OpenTelemetry Collector"
msgstr "OpenTelemetry Collector の Splunk ディストリビューションへの移行"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:110
msgid "Migrating from existing upstream Collectors to the Splunk Distribution of OpenTelemetry Collector requires fewer steps than migrating from other proprietary agents, because the Splunk distribution is based on the OpenTelemetry Collector."
msgstr "既存のアップストリームコレクターから OpenTelemetry Collector の Splunk ディストリビューションへの移行は、Splunk ディストリビューションが OpenTelemetry Collector をベースにしているため、他のプロプライエタリなエージェントからの移行よりも少ないステップで済みます。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:112
msgid "To migrate from the Collector Contrib to the Splunk OTel Collector, follow these steps:"
msgstr "Collector Contribor から Splunk OTel Collector に移行するには、以下の手順に従います："

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:114
msgid "Save a copy of your current upstream Collector configuration."
msgstr "現在のアップストリームコレクタ構成のコピーを保存します。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:116
msgid "Stop the Collector Contrib service using ``sudo systemctl stop otelcol`` on Linux or ``net stop otelcol`` on Windows. If you're running the Collector Contrib in a Terminal session, interrupt it by selecting Ctrl+C."
msgstr "Linux の``sudo systemctl stop otelcol`` または Windows の``net stop otelcol`` を使用して、Collector Contrib サービスを停止します。Terminal セッションで Collector Contrib を実行している場合は、Ctrl+C を選択して中断します。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:118
msgid "Remove the OpenTelemetry Collector Contrib binary and configuration files, including system service configuration files, or use the package manager in your system to remove the upstream Collector."
msgstr "システムサービス設定ファイルを含む、OpenTelemetry Collector Contrib のバイナリと設定ファイルを削除するか、システムのパッケージマネージャを使用してアップストリームの Collector を削除します。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:120
msgid "Install the Splunk OTel Collector. See :ref:`otel-install-platform`. If you've deployed the Collector in Kubernetes use the Helm chart. See :ref:`helm-chart` for more information."
msgstr "Splunk OTel Collector をインストールする。:ref:`otel-install-platform` を参照。KubernetesにCollectorをデプロイした場合は、Helmチャートを使用する。詳しくは:ref:`helm-chart` 。"

#: ../../gdi/other-ingestion-methods/upstream-collector.rst:122
msgid "Configure the Splunk OTel Collector taking into account the settings you saved before removing the Collector Contrib project, as well as the components available in the Splunk Distribution of OpenTelemetry Collector. See :ref:`gdi-upstream-collector` and :ref:`otel-components`."
msgstr "Collector Contrib プロジェクトを削除する前に保存した設定と、OpenTelemetry Collector の Splunk Distribution で利用可能なコンポーネントを考慮して Splunk OTel Collector を設定します。:ref:`gdi-upstream-collector` および:ref:`otel-components` を参照のこと。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:-1
msgid "The most commonly used commands for the SignalFx Smart Agent."
msgstr "SignalFx Smart Agentで最もよく使用されるコマンドです。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:5
msgid "SignalFx Smart Agent commands reference"
msgstr "SignalFx スマートエージェントのコマンドリファレンス"

#: ../../gdi/smart-agent/smart-agent-commands.rst:10
msgid "This topic provides commonly used commands for the Smart Agent."
msgstr "このトピックでは、スマートエージェントでよく使用されるコマンドについて説明します。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:14
msgid "To see commonly used commands for the Splunk Distribution of OpenTelemetry Collector, see :ref:`otel-commands`."
msgstr "OpenTelemetry Collector の Splunk ディストリビューションでよく使用されるコマンドについては、:ref:`otel-commands` を参照してください。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:16
msgid "The standard ports for the Smart Agent are 9080 and 8095. The default configuration is stored in /etc/signalfx/agent.yaml."
msgstr "スマートエージェントの標準ポートは9080と8095です。デフォルトの設定は/etc/signalfx/agent.yamlに格納されている。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:19
msgid "When you deploy the agent as a DaemonSet on Kubernetes clusters, the agent configuration is managed by the ConfigMap of the agent."
msgstr "KubernetesクラスタにDaemonSetとしてエージェントをデプロイすると、エージェントの設定はエージェントのConfigMapによって管理されます。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:21
msgid "The following table lists all the commands and their usage in context of the Smart Agent. Click a command for a more detailed description and syntax examples."
msgstr "次の表は、スマートエージェントのすべてのコマンドとその使用法を示しています。コマンドをクリックすると、詳細な説明と構文の例が表示されます。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:29
msgid ":ref:`sa-delete`"
msgstr ":ref:`sa-delete`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:30
msgid "Delete the Smart Agent Helm chart repository"
msgstr "Smart Agent Helmチャートリポジトリの削除"

#: ../../gdi/smart-agent/smart-agent-commands.rst:31
msgid ":ref:`sa-install`"
msgstr ":ref:`sa-install`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:32
msgid "Deploy the Smart Agent Helm chart repository"
msgstr "Smart Agent Helmチャートリポジトリをデプロイします。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:33
msgid ":ref:`sa-add`"
msgstr ":ref:`sa-add`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:34
msgid "Add the Smart Agent Helm chart repository"
msgstr "Smart Agent Helmチャートリポジトリの追加"

#: ../../gdi/smart-agent/smart-agent-commands.rst:35
msgid ":ref:`sa-update`"
msgstr ":ref:`sa-update`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:36
msgid "Update the Smart Agent Helm chart repository"
msgstr "Smart Agent Helmチャートリポジトリの更新"

#: ../../gdi/smart-agent/smart-agent-commands.rst:37
msgid ":ref:`sa-journalctl`"
msgstr ":ref:`sa-journalctl`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:38
msgid "Check the agent logs on the host"
msgstr "ホスト上のエージェントログを確認する"

#: ../../gdi/smart-agent/smart-agent-commands.rst:39
msgid ":ref:`sa-k8s-config`"
msgstr ":ref:`sa-k8s-config`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:41
msgid ":ref:`sa-k8s-create`"
msgstr ":ref:`sa-k8s-create`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:43
msgid ":ref:`sa-k8s-delete`"
msgstr ":ref:`sa-k8s-delete`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:45
msgid ":ref:`sa-k8s-describe`"
msgstr ":ref:`sa-k8s-describe`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:47
msgid ":ref:`sa-k8s-edit`"
msgstr ":ref:`sa-k8s-edit`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:48
msgid "Edit a Kubernetes resource"
msgstr "Kubernetesリソースを編集する"

#: ../../gdi/smart-agent/smart-agent-commands.rst:49
msgid ":ref:`sa-k8s-exec`"
msgstr ":ref:`sa-k8s-exec`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:51
msgid ":ref:`sa-k8s-get`"
msgstr ":ref:`sa-k8s-get`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:53
msgid ":ref:`sa-k8s-logs`"
msgstr ":ref:`sa-k8s-logs`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:55
msgid ":ref:`sa-restart`"
msgstr ":ref:`sa-restart`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:56
msgid "Restart the agent on the host"
msgstr "ホスト上でエージェントを再起動する"

#: ../../gdi/smart-agent/smart-agent-commands.rst:57
msgid ":ref:`sa-start`"
msgstr ":ref:`sa-start`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:58
msgid "Start the agent on the host"
msgstr "ホスト上でエージェントを起動する"

#: ../../gdi/smart-agent/smart-agent-commands.rst:59
msgid ":ref:`sa-status`"
msgstr ":ref:`sa-status`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:60
msgid "Check the status of the agent on the host"
msgstr "ホスト上のエージェントの状態を確認する"

#: ../../gdi/smart-agent/smart-agent-commands.rst:61
msgid ":ref:`sa-status-endpoints`"
msgstr ":ref:`sa-status-endpoints`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:62
msgid "Check the endpoints set on the agent"
msgstr "エージェントに設定されているエンドポイントを確認する"

#: ../../gdi/smart-agent/smart-agent-commands.rst:63
msgid ":ref:`sa-stop`"
msgstr ":ref:`sa-stop`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:64
msgid "Stop the agent on the host"
msgstr "ホスト上のエージェントを停止する"

#: ../../gdi/smart-agent/smart-agent-commands.rst:65
msgid ":ref:`sa-tap-dps`"
msgstr ":ref:`sa-tap-dps`"

#: ../../gdi/smart-agent/smart-agent-commands.rst:66
msgid "Tail metric data points being sent to the host"
msgstr "ホストに送信されるテールメトリクスのデータポイント"

#: ../../gdi/smart-agent/smart-agent-commands.rst:75
msgid "Delete the Smart Agent Helm chart repository."
msgstr "Smart Agent Helmチャートリポジトリを削除します。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:91
msgid "Deploy the Smart Agent Helm chart repository."
msgstr "Smart Agent Helmチャートリポジトリをデプロイします。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:115
msgid "Add the Smart Agent Helm chart repository."
msgstr "Smart Agent Helmチャートリポジトリを追加します。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:134
msgid "Update the Smart Agent Helm chart repository."
msgstr "Smart Agent Helmチャートリポジトリを更新します。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:150
msgid "Check the agent logs on the host."
msgstr "ホストのエージェントログを確認する。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:171
msgid "``tail -f``"
msgstr "``tail -f``"

#: ../../gdi/smart-agent/smart-agent-commands.rst:172
msgid "Display the last part of a file. The ``-f`` option causes tail to not stop when  end of file is reached, but rather to wait for additional data to       be appended to the input. The ``-f`` option is ignored if the standard input is a pipe, but not if it is a FIFO."
msgstr "ファイルの最後の部分を表示する。``-f`` オプションをつけると、tailはファイルの終端に達しても停止せず、入力に追加されるデータを待つようになる。``-f`` オプションは、標準入力がパイプの場合は無視されるが、FIFOの場合は無視されない。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:229
msgid "Create a resource from a file. Accepted file formats are JSON and YAML. See the Kubectl Reference Documentation for a full list of subcommands and optional arguments."
msgstr "ファイルからリソースを作成する。使用可能なファイル形式はJSONとYAMLです。サブコマンドとオプション引数の完全なリストについては、Kubectl Reference Documentationを参照してください。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:266
msgid "Delete a resource from a source file. See the Kubectl Reference Documentation for a full list of subcommands and optional arguments."
msgstr "ソース・ファイルからリソースを削除する。サブコマンドとオプション引数の完全なリストについては、Kubectl Reference Documentationを参照してください。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:376
msgid "``<signalfx-agent-PODNAME>``"
msgstr "``<signalfx-agent-PODNAME>``"

#: ../../gdi/smart-agent/smart-agent-commands.rst:377
msgid "Name of the pod"
msgstr "ポッド名"

#: ../../gdi/smart-agent/smart-agent-commands.rst:378
msgid "``-- signalfx-agent status``"
msgstr "``-- signalfx-agent status``"

#: ../../gdi/smart-agent/smart-agent-commands.rst:379
msgid "Check the status of the agent"
msgstr "エージェントの状態を確認する"

#: ../../gdi/smart-agent/smart-agent-commands.rst:503
msgid "Restart the agent on the host."
msgstr "ホスト上でエージェントを再起動する。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:520
msgid "Start the agent on the host."
msgstr "ホスト上でエージェントを起動します。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:537
msgid "Check the status of the agent on the host."
msgstr "ホスト上のエージェントのステータスをチェックする。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:551
msgid "status endpoints"
msgstr "ステータス・エンドポイント"

#: ../../gdi/smart-agent/smart-agent-commands.rst:555
msgid "Check the endpoints set on the agent."
msgstr "エージェントに設定されているエンドポイントを確認する。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:572
msgid "Stop the agent on the host."
msgstr "ホスト上のエージェントを停止します。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:584
msgid "tap-dps"
msgstr "tap-dps"

#: ../../gdi/smart-agent/smart-agent-commands.rst:589
msgid "Tail metric data points being sent to the host."
msgstr "ホストに送信されるテールメトリックデータポイント。"

#: ../../gdi/smart-agent/smart-agent-commands.rst:608
msgid "``-h``"
msgstr "``-h``"

#: ../../gdi/smart-agent/smart-agent-commands.rst:609
msgid "Get more information about the command"
msgstr "コマンドの詳細"

#: ../../gdi/smart-agent/smart-agent-commands.rst:610
msgid "``-metric 'jenkins_*``"
msgstr "``-metric 'jenkins_*``"

#: ../../gdi/smart-agent/smart-agent-commands.rst:611
msgid "Description here"
msgstr "詳細はこちら"

#: ../../gdi/smart-agent/smart-agent-intro.rst:10
msgid "Install and configure"
msgstr "インストールと設定"

#: ../../gdi/smart-agent/smart-agent-intro.rst:10
msgid "Common commands"
msgstr "共通コマンド"

#: ../../gdi/smart-agent/smart-agent-intro.rst:-1
msgid "Landing for deprecated Smart Agent. The SignalFx Smart Agent provides automatic service discovery, configuration, and metrics collection for a variety of environments. The Smart Agent is deprecated as part of the release of Splunk Observability Cloud."
msgstr "非推奨スマートエージェントへのランディング。SignalFxスマート・エージェントは、さまざまな環境に対して、自動的なサービス検出、設定、メトリクス収集を提供します。Splunk Observability Cloud のリリースに伴い、スマートエージェントは非推奨となります。"

#: ../../gdi/smart-agent/smart-agent-intro.rst:5
msgid "SignalFx Smart Agent"
msgstr "SignalFx スマート・エージェント"

#: ../../gdi/smart-agent/smart-agent-intro.rst:20
msgid "See the following topics to learn about the Smart Agent and how to migrate to the Collector:"
msgstr "Smart AgentとCollectorへの移行方法については、以下のトピックを参照してください："

#: ../../gdi/smart-agent/smart-agent-intro.rst:22
msgid ":ref:`Install and configure the Smart Agent <smart-agent>`"
msgstr ":ref:`Install and configure the Smart Agent <smart-agent>`"

#: ../../gdi/smart-agent/smart-agent-intro.rst:23
msgid ":ref:`Smart Agent commands reference <smart-agent-commands>`"
msgstr ":ref:`Smart Agent commands reference <smart-agent-commands>`"

#: ../../gdi/smart-agent/smart-agent-intro.rst:24
msgid ":ref:`Migrate to the Splunk Distribution of OpenTelemetry Collector <migrate-from-sa-to-otel>`"
msgstr ":ref:`Migrate to the Splunk Distribution of OpenTelemetry Collector <migrate-from-sa-to-otel>`"

#: ../../gdi/smart-agent/smart-agent-intro.rst:25
msgid ":ref:`Smart Agent to Collector configuration translation tool <otel-translation-tool>`"
msgstr ":ref:`Smart Agent to Collector configuration translation tool <otel-translation-tool>`"

#: ../../gdi/smart-agent/smart-agent-intro.rst:26
msgid ":ref:`Metric mapping service <legacy-otel-mappings>`"
msgstr ":ref:`Metric mapping service <legacy-otel-mappings>`"

#: ../../gdi/smart-agent/smart-agent-resources.rst:-1
msgid "The SignalFx Smart Agent provides automatic service discovery, configuration, and metrics collection for a variety of environments. The Smart Agent is deprecated as part of the release of Splunk Observability Cloud."
msgstr "SignalFxスマート・エージェントは、さまざまな環境に対して、自動的なサービス検出、設定、メトリクス収集を提供します。Splunk Observability Cloud のリリースに伴い、スマートエージェントは非推奨となります。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:5
msgid "Install and configure the SignalFx Smart Agent"
msgstr "SignalFx Smart Agentのインストールと設定"

#: ../../gdi/smart-agent/smart-agent-resources.rst:12
msgid "The SignalFx Smart Agent gathers host performance, application, and service-level metrics from both containerized and non-container environments. This page provides a complete list of Smart Agent resources. Use your browser's search function to quickly find what you're looking for."
msgstr "SignalFx Smart Agentは、コンテナ環境と非コンテナ環境の両方から、ホストのパフォーマンス、アプリケーション、およびサービスレベルのメトリクスを収集します。このページは、スマートエージェントのリソースの完全なリストを提供します。ブラウザの検索機能を使って、探しているものを素早く見つけよう。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:14
msgid "See :ref:`smart-agent-commands` for a list of the most commonly used commands for the SignalFx Smart Agent."
msgstr "SignalFx Smart Agentでよく使用されるコマンドの一覧は、:ref:`smart-agent-commands` を参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:19
msgid "The agent has three main components:"
msgstr "エージェントには3つの主要コンポーネントがある："

#: ../../gdi/smart-agent/smart-agent-resources.rst:21
msgid "Observers that discover applications and services running on the host. For a list of supported observers and their configurations, see :new-page:`observer configuration <https://github.com/signalfx/signalfx-agent/blob/main/docs/observer-config.md>`."
msgstr "ホスト上で動作するアプリケーションやサービスを検出するオブザーバー。サポートされるオブザーバーとそのコンフィギュレーションのリストについては、:new-page:`オブザーバー・コンフィギュレーション<https://github.com/signalfx/signalfx-agent/blob/main/docs/observer-config.md>` を参照のこと。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:23
msgid "Monitors that collect metrics, events, and dimension properties from the host and applications. For a list of supported monitors and their configurations, see :new-page:`monitor configuration <https://github.com/signalfx/signalfx-agent/blob/main/docs/monitor-config.md>`."
msgstr "ホストとアプリケーションからメトリクス、イベント、ディメンジョンのプロパティを収集するモニタ。サポートされているモニターとその設定の一覧については、:new-page:`モニター設定<https://github.com/signalfx/signalfx-agent/blob/main/docs/monitor-config.md>` をご覧ください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:25
msgid "The writer that sends the metrics, events, and dimension updates collected by monitors to Splunk Observability Cloud. The writer collects metrics emitted by configured monitors and sends them to Splunk Observability Cloud on a regular basis. You can configure :new-page:`writer settings <https://github.com/signalfx/signalfx-agent/blob/main/docs/config-schema.md#writer>` in the configuration schema."
msgstr "モニターが収集したメトリクス、イベント、ディメンションの更新を Splunk Observability Cloud に送信するライター。ライターは、設定されたモニターが発するメトリクスを収集し、定期的に Splunk Observability Cloud に送信します。コンフィギュレーション・スキーマで:new-page:`ライター設定<https://github.com/signalfx/signalfx-agent/blob/main/docs/config-schema.md#writer>` 。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:28
msgid "Use cases"
msgstr "使用例"

#: ../../gdi/smart-agent/smart-agent-resources.rst:30
msgid "The Smart Agent gathers metrics using monitors, including Python-based plugins such as Mongo, Redis, and Docker. See :ref:`supported-data-sources` for a list of data source integrations."
msgstr "スマートエージェントは、Mongo、Redis、DockerなどのPythonベースのプラグインを含むモニターを使用してメトリクスを収集します。データソース統合のリストについては、:ref:`supported-data-sources` を参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:32
msgid "Use the Smart Agent to integrate with cloud services, including Amazon Web Services, Microsoft Azure, Google Cloud Platform, and Kubernetes environments. See :ref:`get-started-connect`. Next, log in to Splunk Observability Cloud to view the incoming metrics in :ref:`dashboards` and :ref:`data-visualization-charts`."
msgstr "スマートエージェントを使用して、Amazon Web Services、Microsoft Azure、Google Cloud Platform、Kubernetes環境などのクラウドサービスと統合します。:ref:`get-started-connect` を参照。次に、Splunk Observability Cloud にログインして、:ref:`dashboards` と:ref:`data-visualization-charts` で受信メトリクスを表示します。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:34
msgid "Check out the health of your network and nodes using navigators. Some features of Splunk Observability Cloud such as :ref:`related content <get-started-relatedcontent>` do not work with the Smart Agent. To learn more, see :ref:`use-navigators-imm`."
msgstr "ナビゲータを使用して、ネットワークとノードの健全性をチェックします。:ref:`related content <get-started-relatedcontent>` など、Splunk Observability Cloud の一部の機能は Smart Agent では動作しません。詳しくは、:ref:`use-navigators-imm` をご覧ください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:36
msgid "The Smart Agent also supports receiving and sending trace data. See :ref:`apm-download-traces`."
msgstr "スマート・エージェントは、トレース・データの受信と送信もサポートしている。:ref:`apm-download-traces` を参照。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:39
msgid "Check exposed ports"
msgstr "露出したポートのチェック"

#: ../../gdi/smart-agent/smart-agent-resources.rst:41
msgid "Before installing the Smart Agent, check exposed ports to make sure your environment doesn't have conflicts. You can change the ports in the Smart Agent configuration."
msgstr "スマートエージェントをインストールする前に、公開されているポートを確認し、お使いの環境で競合が発生していないことを確認してください。スマートエージェントの設定でポートを変更できます。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:43
msgid "Port 8095 is the default port that the internal status server listens on. Configure port 8095 using the ``internalStatusPort`` option."
msgstr "ポート 8095 は、内部ステータスサーバがリッスンするデフォルトのポートです。``internalStatusPort`` オプションを使ってポート8095を設定する。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:44
msgid "Port 9080 is the default port that the server listens on. Configure port 9080 using the ``listenAddress`` option. The ``listenAddress`` option is a configurable option for the ``trace-forwarder`` and ``signalfx-forwarder`` monitors."
msgstr "ポート9080は、サーバーがリッスンするデフォルトのポートである。``listenAddress`` オプションを使ってポート9080を設定する。``listenAddress`` オプションは、``trace-forwarder`` と``signalfx-forwarder`` のモニター用に設定可能なオプションです。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:47
msgid "Install the Smart Agent"
msgstr "スマートエージェントのインストール"

#: ../../gdi/smart-agent/smart-agent-resources.rst:49
msgid "There are several options available to install the Smart Agent. Select the option that matches your situation or preference. Each of the following links includes prerequisites, configuration instructions, installation instructions, and instructions for verifying your installation."
msgstr "スマートエージェントのインストールにはいくつかのオプションがあります。あなたの状況や好みに合ったオプションを選択してください。以下の各リンクには、前提条件、設定手順、インストール手順、インストールの確認手順が含まれています。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:51
msgid "To install the Smart Agent application on a single host machine, see :new-page:`quick install <https://github.com/signalfx/signalfx-agent/blob/main/docs/quick-install.md>`."
msgstr "単一のホストマシンにスマートエージェントアプリケーションをインストールするには、:new-page:`クイックインストール<https://github.com/signalfx/signalfx-agent/blob/main/docs/quick-install.md>` を参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:53
msgid "To automate the installation process, see :new-page:`deployment <https://github.com/signalfx/signalfx-agent#deployment>` for the deployment/configuration management tools, such as Chef, Puppet, Salt, and Ansible."
msgstr "インストールプロセスを自動化するには、Chef、Puppet、Salt、Ansible などのデプロイメント/構成管理ツールの:new-page:`デプロイメント<https://github.com/signalfx/signalfx-agent#deployment>` を参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:55
msgid "To install the Smart Agent to a Windows host using a standalone package in a .zip file, see :new-page:`install to Windows using a .zip file <https://github.com/signalfx/signalfx-agent/blob/main/docs/agent-install-standalone-windows.md>`."
msgstr ".zipファイルのスタンドアロンパッケージを使用してSmart AgentをWindowsホストにインストールするには、:new-page:`.zipファイルを使用したWindowsへのインストール<https://github.com/signalfx/signalfx-agent/blob/main/docs/agent-install-standalone-windows.md>` を参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:57
msgid "To install the Smart Agent to a Linux host using a compressed tar file, see :new-page:`install to Linux using a tar.gz file <https://github.com/signalfx/signalfx-agent/blob/main/docs/agent-install-standalone-linux.md>`."
msgstr "圧縮tarファイルを使用してスマートエージェントをLinuxホストにインストールするには、:new-page:`tar.gzファイルを使用したLinuxへのインストール<https://github.com/signalfx/signalfx-agent/blob/main/docs/agent-install-standalone-linux.md>` を参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:59
msgid "To deploy the Smart Agent to an AWS ECS instance using a configuration script, see :new-page:`install to AWS ECS <https://github.com/signalfx/signalfx-agent/blob/main/docs/agent-install-awsecs.md>`."
msgstr "構成スクリプトを使用してスマートエージェントを AWS ECS インスタンスにデプロイするには、:new-page:`install to AWS ECS<https://github.com/signalfx/signalfx-agent/blob/main/docs/agent-install-awsecs.md>` を参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:61
msgid "To install the Smart Agent using a Debian or RPM package, see :new-page:`install using *nix packages <https://github.com/signalfx/signalfx-agent/blob/main/docs/agent-install-packages.md>`."
msgstr "DebianまたはRPMパッケージを使用してスマートエージェントをインストールするには、:new-page:`*nixパッケージを使用したインストール<https://github.com/signalfx/signalfx-agent/blob/main/docs/agent-install-packages.md>` を参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:63
msgid "To switch the APT-RPM package of the Smart Agent to the `splunk.jfrog.io` repository, see :new-page:`DEB/RPM repo migration <https://github.com/signalfx/signalfx-agent/blob/main/docs/deb-rpm-repo-migration.md>`."
msgstr "スマートエージェントの APT-RPM パッケージを`splunk.jfrog.io` リポジトリに切り替えるには、:new-page:`DEB/RPM repo migration<https://github.com/signalfx/signalfx-agent/blob/main/docs/deb-rpm-repo-migration.md>` を参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:65
msgid "To install the Smart Agent to Kubernetes environments using the Helm package manager, see :new-page:`install using Helm <https://github.com/signalfx/signalfx-agent/blob/main/docs/agent-k8s-install-helm.md>`."
msgstr "Helmパッケージマネージャを使用してSmart AgentをKubernetes環境にインストールするには、:new-page:`Helmを使用したインストール<https://github.com/signalfx/signalfx-agent/blob/main/docs/agent-k8s-install-helm.md>` を参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:67
msgid "To install the Smart Agent to Kubernetes environments using kubectl, see :new-page:`install using kubectl <https://github.com/signalfx/signalfx-agent/blob/main/docs/agent-k8s-install-kubectl.md>`."
msgstr "kubectlを使用してスマートエージェントをKubernetes環境にインストールするには、:new-page:`install using kubectl<https://github.com/signalfx/signalfx-agent/blob/main/docs/agent-k8s-install-kubectl.md>` を参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:69
msgid "The Smart Agent is incompatible on Linux systems with SELinux activated. Check the documentation for your distribution to learn how to deactivate SELinux."
msgstr "スマートエージェントは、SELinuxが有効になっているLinuxシステムとは互換性がありません。SELinuxを無効にする方法については、お使いのディストリビューションのドキュメントを確認してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:71
msgid "To uninstall the Smart Agent, see :ref:`uninstall-smart-agent`."
msgstr "スマートエージェントをアンインストールするには、:ref:`uninstall-smart-agent` を参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:74
msgid "Configure the Smart Agent"
msgstr "スマートエージェントの設定"

#: ../../gdi/smart-agent/smart-agent-resources.rst:76
msgid "You can configure the Smart Agent by editing the agent.yaml file. By default, the configuration is installed at and looked for at ``/etc/signalfx/agent.yaml`` on Linux and ``\\ProgramData\\SignalFxAgent\\agent.yaml`` on Windows. You can override default locations using the ``-config`` command line flag."
msgstr "agent.yamlファイルを編集することで、スマートエージェントを設定できます。デフォルトでは、コンフィギュレーションはLinuxでは``/etc/signalfx/agent.yaml`` 、Windowsでは``\\ProgramData\\SignalFxAgent\\agent.yaml`` 。``-config`` コマンドラインフラグを使えば、デフォルトの場所を上書きできる。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:78
msgid ""
"The :new-page:`configuration schema <https://github.com/signalfx/signalfx-agent/blob/main/docs/config-schema.md>` includes the options that you can use in the agent.yaml file to control the behavior of your integrations. :new-page:`Example.yaml <https://github.com/signalfx/signalfx-agent/blob/main/docs/config-schema.md#example-yaml>` provides an autogenerated example of a YAML configuration file, with default values where applicable. :new-page:`Remote configuration <https://github.com/signalfx/signalfx-agent/blob/main/docs/remote-config.md>` describes how to configure the Smart Agent from remote sources, such as other files on the file system, or from key-value stores "
"such as etcd."
msgstr ":new-page:`コンフィギュレーション・スキーマ<https://github.com/signalfx/signalfx-agent/blob/main/docs/config-schema.md>` には、agent.yaml ファイルで統合の動作を制御するために使用できるオプションが含まれています。:new-page:`Example.yaml<https://github.com/signalfx/signalfx-agent/blob/main/docs/config-schema.md#example-yaml>` は自動生成された YAML 設定ファイルの例で、該当する場合はデフォルト値が設定されています。:new-page:`リモート設定<https://github.com/signalfx/signalfx-agent/blob/main/docs/remote-config.md>` ファイルシステム上の他のファイルや、etcdなどのキーバリューストアなど、リモートソースからスマートエージェントを設定する方法について説明します。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:81
msgid "Capture logs using the Smart Agent"
msgstr "スマートエージェントを使用したログの取得"

#: ../../gdi/smart-agent/smart-agent-resources.rst:83
msgid "The default log level is ``info``, which logs Smart Agent events without spamming the logs. Most of the ``info`` level logs are created upon startup and capture service discovery changes to record messages about routine operations. The ``debug`` log level creates verbose log output and should only be used when troubleshooting."
msgstr "デフォルトのログレベルは、``info`` です。これは、ログをスパムにすることなく、スマートエージェントのイベントをログに記録します。``info`` レベルのログの大半は、起動時に作成され、サービス・ディスカバリーの変更を捕捉し、ルーチン・オペレーションに関するメッセージを記録する。``debug`` ログレベルは、冗長なログ出力を作成するため、トラブルシューティング時のみ使用すべきである。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:85
msgid "You can change the log level using the ``logging: {level: info}`` YAML configuration option. Other valid log levels include ``warn`` and ``error``."
msgstr "``logging: {level: info}`` YAML設定オプションを使ってログレベルを変更することができます。その他の有効なログレベルには``warn`` と``error`` がある。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:87
msgid "The Smart Agent sends logs either as unstructured text (default) or JSON format. You can configure the Smart Agent to send JSON logs using the ``logging: {format: json}`` YAML configuration option."
msgstr "スマートエージェントは、構造化されていないテキスト（デフォルト）またはJSON形式でログを送信します。``logging: {format: json}`` YAML 設定オプションを使用して、JSON ログを送信するようにスマートエージェントを設定できます。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:92
msgid "The Smart Agent supports logging to ``stdout/stderr``, which is generally redirected by the init scripts provided to either a file at ``/var/log/signalfx-agent.log`` or to the systemd journal on newer distros."
msgstr "スマート・エージェントは、``stdout/stderr`` へのロギングをサポートしている。通常、提供されるinitスクリプトによって、``/var/log/signalfx-agent.log`` のファイルか、新しいディストロのsystemdジャーナルにリダイレクトされる。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:97
msgid "On Windows, the Smart Agent logs to the console when executed directly in a shell. If the Smart Agent is configured as a Windows service, log events are logged to the Windows Event Log. To read logs, select **Start**. Next, select **Administrative Tools**, then **Event Viewer**."
msgstr "Windowsでは、スマートエージェントはシェルで直接実行するとコンソールにログを記録します。スマートエージェントがWindowsサービスとして設定されている場合、ログイベントはWindowsイベントログに記録されます。ログを読むには、**開始**を選択します。次に、**管理ツール**、**イベントビューア**の順に選択します。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:100
msgid "Activate proxy support in the Smart Agent"
msgstr "スマートエージェントでプロキシサポートを有効にする"

#: ../../gdi/smart-agent/smart-agent-resources.rst:102
msgid "To use an HTTP or HTTPS proxy, set the environment variable ``HTTP_PROXY`` or ``HTTPS_PROXY`` in the container configuration to proxy either protocol. The SignalFx ingest and API servers both use HTTPS. If the ``NO_PROXY`` environment variable exists, the Smart Agent automatically appends the local services to the environment variable to not use the proxy."
msgstr "HTTPまたはHTTPSプロキシを使用するには、コンテナ構成で環境変数``HTTP_PROXY`` または``HTTPS_PROXY`` を設定し、いずれかのプロトコルをプロキシする。SignalFxのインジェストサーバーとAPIサーバーはどちらもHTTPSを使用しています。環境変数``NO_PROXY`` が存在する場合、Smart Agentは自動的にローカルサービスを環境変数に追加し、プロキシを使用しないようにします。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:104
msgid "If the Smart Agent is running as a local service on the host, refer to the host documentation for information on passing environment variables to the Smart Agent service to activate proxy support when the service is started. For example, if the host services are managed by systemd, create the /etc/systemd/system/signalfx-agent.service.d/myproxy.conf file and add the following to the file:"
msgstr "Smart Agentがホストのローカルサービスとして実行されている場合、サービスの起動時にプロキシ対応を有効にするためにSmart Agentサービスに環境変数を渡す方法については、ホストのマニュアルを参照してください。例えば、ホストサービスがsystemdによって管理されている場合、/etc/systemd/signalfx-agent.service.d/myproxy.confファイルを作成し、以下のように追加する："

#: ../../gdi/smart-agent/smart-agent-resources.rst:112
msgid "After updating the file, run ``systemctl daemon-reload`` and ``systemctl restart signalfx-agent.service`` to restart the service with proxy support."
msgstr "ファイルを更新したら、``systemctl daemon-reload`` と``systemctl restart signalfx-agent.service`` を実行して、プロキシ対応のサービスを再起動する。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:115
msgid "Sys-V based init.d systems: Debian and RHEL"
msgstr "Sys-Vベースのinit.dシステム：DebianとRHEL"

#: ../../gdi/smart-agent/smart-agent-resources.rst:117
msgid "Create the /etc/default/signalfx-agent.yaml file with the following contents:"
msgstr "以下の内容で/etc/default/signalfx-agent.yamlファイルを作成する："

#: ../../gdi/smart-agent/smart-agent-resources.rst:125
msgid "Smart Agent diagnostics"
msgstr "スマートエージェントの診断"

#: ../../gdi/smart-agent/smart-agent-resources.rst:127
msgid "The Smart Agent serves diagnostic information on an HTTP server at the address configured by the ``internalStatusHost`` and ``internalStatusPort`` options. Use the ``signalfx-agent`` command status to read the server and extract its contents. Use the content to identify and resolve issues with the Smart Agent. The ``signalfx-agent`` command also explains how to get further diagnostic information."
msgstr "スマートエージェントは、``internalStatusHost`` および``internalStatusPort`` オプションで設定されたアドレスの HTTP サーバーで診断情報を提供します。``signalfx-agent`` コマンドのステータスを使用してサーバーを読み込み、その内容を抽出する。スマートエージェントの問題を特定し、解決するためのコンテンツです。``signalfx-agent`` コマンドは、さらなる診断情報を得る方法についても説明している。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:130
msgid "Service discovery using the Smart Agent"
msgstr "スマートエージェントを使用したサービスディスカバリー"

#: ../../gdi/smart-agent/smart-agent-resources.rst:132
msgid ""
"The Smart Agent includes a comprehensive service discovery feature. This feature allows the Smart Agent to identify each of the services within your environment and automatically configure the appropriate integration plugins from within its bundle. This is particularly valuable in large ephemeral container environments that experience high-churn and dynamic service creation, as new services are automatically discovered, installed, and configured within minutes. However, this capability is extended to non-containerized environments as well. See :new-page:`Service Discovery <https://github.com/signalfx/signalfx-agent/blob/main/docs/auto-discovery.md>` for more information "
"and configuration options."
msgstr "スマートエージェントは、包括的なサービス発見機能を備えています。この機能により、スマートエージェントは環境内の各サービスを識別し、バンドル内から適切な統合プラグインを自動的に構成することができます。これは、新しいサービスが数分以内に自動的に発見され、インストールされ、設定されるため、高回転でダイナミックなサービス作成が行われる大規模なエフェメラル・コンテナ環境では特に価値が高い。しかし、この能力はコンテナ化されていない環境にも拡張されている。詳細および構成オプションについては、:new-page:`Service Discovery<https://github.com/signalfx/signalfx-agent/blob/main/docs/auto-discovery.md>` を参照のこと。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:135
msgid "Filtering data using the Smart Agent"
msgstr "スマートエージェントを使用したデータのフィルタリング"

#: ../../gdi/smart-agent/smart-agent-resources.rst:137
msgid "Filter out certain data points or properties to prevent them from ever leaving the Smart Agent. Filtering can be useful to reduce clutter in charts without having to resort to filtering in the UI."
msgstr "特定のデータポイントやプロパティをフィルタリングして、スマートエージェントから出ないようにします。フィルタリングは、UIでフィルタリングに頼ることなく、チャートの乱雑さを軽減するのに便利である。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:139
msgid "If possible, it is preferable to prevent the data points and properties you want to omit from being generated by a monitor in the first place, as this reduces CPU and memory usage of the Smart Agent, but sometimes this is not feasible."
msgstr "可能であれば、省略したいデータポイントやプロパティがモニターによって生成されないようにすることが望ましいです。そうすることで、スマートエージェントのCPUやメモリの使用量を減らすことができるからです。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:141
msgid "See :new-page:`Filtering <https://github.com/signalfx/signalfx-agent/blob/main/docs/filtering.md>` for more information and configuration options for Smart Agent 4.7.0+. See :new-page:`Legacy Filtering <https://github.com/signalfx/signalfx-agent/blob/main/docs/legacy-filtering.md>` for more information on the old style of filtering, which is deprecated and removed in Smart Agent 5.0+."
msgstr "Smart Agent 4.7.0+の詳細および設定オプションについては、:new-page:`フィルタリング<https://github.com/signalfx/signalfx-agent/blob/main/docs/filtering.md>` を参照してください。Smart Agent 5.0+で廃止された旧式のフィルタリングについては、:new-page:`Legacy Filtering<https://github.com/signalfx/signalfx-agent/blob/main/docs/legacy-filtering.md>` を参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:146
msgid "Uninstall the Smart Agent"
msgstr "スマートエージェントのアンインストール"

#: ../../gdi/smart-agent/smart-agent-resources.rst:148
msgid "To remove the Smart Agent from your system, follow the steps for each installation method."
msgstr "システムからSmart Agentを削除するには、各インストール方法の手順に従ってください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:151
msgid "Linux (package manager)"
msgstr "Linux (パッケージマネージャ)"

#: ../../gdi/smart-agent/smart-agent-resources.rst:165
msgid "Configuration files might persist in ``/etc/signalfx``."
msgstr "設定ファイルは``/etc/signalfx`` に残るかもしれない。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:168
msgid "Linux (tar file)"
msgstr "Linux (tarファイル)"

#: ../../gdi/smart-agent/smart-agent-resources.rst:170
msgid "To uninstall the Smart Agent, stop the ``signalfx-agent`` process and delete the signalfx-agent directory."
msgstr "スマートエージェントをアンインストールするには、``signalfx-agent`` プロセスを停止し、signalfx-agent ディレクトリを削除します。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:173
msgid "Windows (installer)"
msgstr "Windows (インストーラー)"

#: ../../gdi/smart-agent/smart-agent-resources.rst:175
msgid "Uninstall the Smart Agent from :strong:`Programs and Features` in the Control Panel."
msgstr "コントロールパネルの「:strong:`プログラムと機能」` からSmart Agentをアンインストールします。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:177
msgid "Configuration files might persist in ``\\ProgramData\\SignalFxAgent``."
msgstr "設定ファイルは``\\ProgramData\\SignalFxAgent`` に残るかもしれない。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:180
msgid "Windows (ZIP file)"
msgstr "Windows (ZIPファイル)"

#: ../../gdi/smart-agent/smart-agent-resources.rst:189
msgid "Then, delete the SignalFxAgent folder."
msgstr "次に、SignalFxAgentフォルダを削除します。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:192
msgid "Deployed using kubectl"
msgstr "kubectlを使用してデプロイ"

#: ../../gdi/smart-agent/smart-agent-resources.rst:194
msgid "To delete all Smart Agent resources, run the following command in the directory containing the YAML configuration files:"
msgstr "すべてのSmart Agentリソースを削除するには、YAML設定ファイルを含むディレクトリで以下のコマンドを実行します："

#: ../../gdi/smart-agent/smart-agent-resources.rst:201
msgid "For more details, see the Kubectl Reference Documentation."
msgstr "詳細については、Kubectl Reference Documentationを参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:204
msgid "Deployed using Helm"
msgstr "Helmを使用して展開"

#: ../../gdi/smart-agent/smart-agent-resources.rst:206
msgid "To uninstall the Helm release of the Smart Agent, follow these steps:"
msgstr "スマートエージェントのHelmリリースをアンインストールするには、以下の手順に従ってください："

#: ../../gdi/smart-agent/smart-agent-resources.rst:208
msgid "Get the release name from the Helm List at https://helm.sh/docs/helm/helm_list/"
msgstr "https://helm.sh/docs/helm/helm_list/ のヘルムリストからリリース名を取得する。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:209
msgid "Follow the steps in the Helm Uninstall guide."
msgstr "Helm アンインストールガイドの手順に従ってください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:210
msgid "To remove the SignalFx Helm repository, see Helm Repo Remove at https://helm.sh/docs/helm/helm_repo_remove/"
msgstr "SignalFx Helm リポジトリを削除するには、https://helm.sh/docs/helm/helm_repo_remove/ の Helm Repo Remove を参照してください。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:213
msgid "Deployed in AWS ECS"
msgstr "AWS ECSでの展開"

#: ../../gdi/smart-agent/smart-agent-resources.rst:215
msgid "To deregister the ``signalfx-agent`` task definitions, see the official AWS documentation at https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deregister-task-definition.html."
msgstr "``signalfx-agent`` タスク定義の登録を解除するには、AWS の公式ドキュメント https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deregister-task-definition.html を参照のこと。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:217
msgid "To delete the ``signalfx-agent`` service, see Deleting a service at https://docs.aws.amazon.com/AmazonECS/latest/developerguide/delete-service.html."
msgstr "``signalfx-agent`` サービスを削除するには、https://docs.aws.amazon.com/AmazonECS/latest/developerguide/delete-service.html のサービスの削除を参照のこと。"

#: ../../gdi/smart-agent/smart-agent-resources.rst:220
msgid "Frequently asked questions"
msgstr "よくある質問"

#: ../../gdi/smart-agent/smart-agent-resources.rst:222
msgid "See :new-page:`Frequently Asked Questions <https://github.com/signalfx/signalfx-agent/blob/main/docs/faq.md>` to troubleshoot issues with the Smart Agent."
msgstr "スマートエージェントのトラブルシューティングについては、:new-page:`よくある質問<https://github.com/signalfx/signalfx-agent/blob/main/docs/faq.md>` を参照してください。"
